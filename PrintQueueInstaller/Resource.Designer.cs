//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HP.ScalableTest.Print.Utility {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HP.ScalableTest.Print.Utility.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon cfgapp {
            get {
                object obj = ResourceManager.GetObject("cfgapp", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to yyyy-MM-dd HH:mm:ss.
        /// </summary>
        internal static string DateTimeFormat {
            get {
                return ResourceManager.GetString("DateTimeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:D2}:{1:D2}:{2:D2}.{3:D3}.
        /// </summary>
        internal static string DurationFormat {
            get {
                return ResourceManager.GetString("DurationFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] hpbcfgap {
            get {
                object obj = ResourceManager.GetObject("hpbcfgap", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] hpbcfgre {
            get {
                object obj = ResourceManager.GetObject("hpbcfgre", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] hpbcfgui {
            get {
                object obj = ResourceManager.GetObject("hpbcfgui", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] HPCDMC32 {
            get {
                object obj = ResourceManager.GetObject("HPCDMC32", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to rundll32 printui.dll,PrintUIEntry /if /b &quot;{0}&quot; /f &quot;{1}&quot; /r &quot;{2}&quot; /m &quot;{3}&quot;.
        /// </summary>
        internal static string InstallQueuePrintUI {
            get {
                return ResourceManager.GetString("InstallQueuePrintUI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:D2}:{1:D2}:{2:D2}:{3:D2}.{4:D3}.
        /// </summary>
        internal static string LongDurationFormat {
            get {
                return ResourceManager.GetString("LongDurationFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current installed queue count is {0} and you are requesting to install {1} more.  A Registry Snapshot will not be taken because too much data will be generated.  The maximum total queue count must be under 100 to generate a Registry Snapshot.  But note that the overall change in Registry size will still be calculated..
        /// </summary>
        internal static string QueueCountMessage {
            get {
                return ResourceManager.GetString("QueueCountMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning:  Upgrading the driver will return Client Rendering and Device Type settings to their default values.  Other advanced settings may also be affected..
        /// </summary>
        internal static string UpgradeWarningMessage {
            get {
                return ResourceManager.GetString("UpgradeWarningMessage", resourceCulture);
            }
        }
    }
}

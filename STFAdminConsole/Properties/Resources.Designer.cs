//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HP.ScalableTest.LabConsole.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HP.ScalableTest.LabConsole.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click the dropdown to view the assemblies that were found in the Plugin directory. If the desired assembly is not listed, ensure it is copied to the following location:.
        /// </summary>
        internal static string AddPluginPrompt {
            get {
                return ResourceManager.GetString("AddPluginPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following print queue(s) are new to the server, select which queues you would like to add to the database and click OK..
        /// </summary>
        internal static string AddQueues {
            get {
                return ResourceManager.GetString("AddQueues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPG.
        /// </summary>
        internal static string AlmDomain {
            get {
                return ResourceManager.GetString("AlmDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to qc1f.austin.hp.com.
        /// </summary>
        internal static string AlmFarm {
            get {
                return ResourceManager.GetString("AlmFarm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SWPROCESS.
        /// </summary>
        internal static string AlmProject {
            get {
                return ResourceManager.GetString("AlmProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap BusySpinner {
            get {
                object obj = ResourceManager.GetObject("BusySpinner", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage: {0} -dispatcher &lt;DispatcherName&gt; -database &lt;DatabaseName&gt; -scenario &lt;ScenarioName&gt; [-reservation &lt;ReservationKey&gt;].
        /// </summary>
        internal static string CommandLineUsage {
            get {
                return ResourceManager.GetString("CommandLineUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Diagnostic {
            get {
                object obj = ResourceManager.GetObject("Diagnostic", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A plugin named &apos;{0}&apos; ({1}) already exists in the system.
        ///Please choose a different plugin name..
        /// </summary>
        internal static string ExistingPlugin {
            get {
                return ResourceManager.GetString("ExistingPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;
        ///&lt;html&gt;
        ///    &lt;head&gt;
        ///        &lt;title&gt;Global Settings Management&lt;/title&gt;
        ///    &lt;/head&gt;
        ///    &lt;body style=&quot;color:#015; font-family:Lucida Sans, Sans-Serif; font-size:9pt&quot;&gt;
        ///    &lt;h3&gt;Global Settings Management&lt;/h3&gt;
        ///    This is an administrative dialog that should be used very seldom.  It provides a way to edit the Global
        ///    Settings for the Scalable Test Framework, which typically will not change.  Most of the settings are tied
        ///    directly to func [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GlobalSettingsManagementHelpPage {
            get {
                return ResourceManager.GetString("GlobalSettingsManagementHelpPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a name for the plugin assembly..
        /// </summary>
        internal static string MissingAssemblyName {
            get {
                return ResourceManager.GetString("MissingAssemblyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The print server and associated queues have been added.  Please review the Device Type for each queue to ensure the data is correct.  Also associate any actual devices (Asset Id) to each queue. This information will be used to reserve the specified devices in the Asset Inventory system during test execution..
        /// </summary>
        internal static string NewQueuesAdded {
            get {
                return ResourceManager.GetString("NewQueuesAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no queues available to add from {0}..
        /// </summary>
        internal static string NoQueuesAvailable {
            get {
                return ResourceManager.GetString("NoQueuesAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;
        ///&lt;html&gt;
        ///    &lt;head&gt;
        ///        &lt;title&gt;Global Settings Management&lt;/title&gt;
        ///    &lt;/head&gt;
        ///    &lt;body style=&quot;color:#015; font-family:Lucida Sans, Sans-Serif; font-size:9pt&quot;&gt;
        ///    &lt;h3&gt;Plugin Reference Management&lt;/h3&gt;
        ///        Some Virtual Resources within the Scalable Test Framework use a plugin model for 
        ///        extensibility.&amp;nbsp; This dialog provide the ability to manage data in the STF 
        ///        database so new plugins can be added and made avail [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PluginMetadataHelpPage {
            get {
                return ResourceManager.GetString("PluginMetadataHelpPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select additional Plugin Types to copy the current settings to those respective types..
        /// </summary>
        internal static string PluginSettingsPrompt {
            get {
                return ResourceManager.GetString("PluginSettingsPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this dialog to update the Print Servers and associated Print Queues that can be used by print activities in the STF.  This dialog will allow you to add new print servers and any queues on that server.  It will let you refresh the queues installed on a print server and it will let you remove print servers from the database.  Note that print servers may not be released if they contain any print queues currently referenced by any metadata.  Use the checkmarks to enable or disable both print servers and pri [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PrintServerDialogHelp {
            get {
                return ResourceManager.GetString("PrintServerDialogHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database queues are in sync with the queues on the server. No changes were made..
        /// </summary>
        internal static string PrintServerUpToDate {
            get {
                return ResourceManager.GetString("PrintServerUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is in use by the following scenarios:{1}Remove the queue from all scenarios before proceeding..
        /// </summary>
        internal static string QueuesInUse {
            get {
                return ResourceManager.GetString("QueuesInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove print server &apos;{0}&apos; and associated queues?.
        /// </summary>
        internal static string RemovePrintServer {
            get {
                return ResourceManager.GetString("RemovePrintServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove {0}?.
        /// </summary>
        internal static string RemoveQueueManually {
            get {
                return ResourceManager.GetString("RemoveQueueManually", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following print queue(s) are no longer detected on the server. They are listed with their associated test scenario. Select which queues you would like to forcefully remove from the database and click Remove. Queues with no associated scenerios will be automatically removed.{0}Note: Removed printed queues will no longer be usable in test scenarios..
        /// </summary>
        internal static string RemoveQueues {
            get {
                return ResourceManager.GetString("RemoveQueues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This print server cannot be removed as test scenarios are using queues on this server.  Do you want to remove any unused queues from the database?.
        /// </summary>
        internal static string RemoveUnusedQueues {
            get {
                return ResourceManager.GetString("RemoveUnusedQueues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select at least one item in the Applicable Resource checkbox list..
        /// </summary>
        internal static string SelectApplicableResource {
            get {
                return ResourceManager.GetString("SelectApplicableResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT r.SessionId as Value, COUNT(r.AssetId) AS Count
        ///FROM AssetReservation r
        ///INNER JOIN DeviceSimulator s ON r.AssetId = s.AssetId
        ///WHERE r.SessionId IS NOT NULL
        ///GROUP BY r.SessionId
        ///UNION
        ///SELECT &apos;Available&apos; AS Value, COUNT(s.AssetId) AS Count
        ///FROM AssetReservation r
        ///RIGHT OUTER JOIN DeviceSimulator s ON r.AssetId = s.AssetId
        ///WHERE r.SessionId IS NULL
        ///Group BY r.SessionId.
        /// </summary>
        internal static string SimulatorUsagePieChartSql {
            get {
                return ResourceManager.GetString("SimulatorUsagePieChartSql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT SessionId AS Value, COUNT(FrameworkClientHostName) AS Count
        ///FROM FrameworkClient
        ///WHERE SessionId IS NOT NULL
        ///GROUP BY SessionId
        ///UNION
        ///SELECT UsageState AS Value, COUNT(UsageState) AS Count
        ///FROM FrameworkClient
        ///WHERE SessionId IS NULL
        ///GROUP BY UsageState.
        /// </summary>
        internal static string VMUsagePieChartSql {
            get {
                return ResourceManager.GetString("VMUsagePieChartSql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
        ///    xmlns:msxsl=&quot;urn:schemas-microsoft-com:xslt&quot; exclude-result-prefixes=&quot;msxsl&quot;
        ///&gt;
        ///  &lt;xsl:output method=&quot;html&quot; indent=&quot;yes&quot; version=&quot;4.0&quot;/&gt;
        ///
        ///  &lt;xsl:template match=&quot;/&quot;&gt;
        ///    &lt;html&gt;
        ///      &lt;head&gt;
        ///        &lt;style type=&quot;text/css&quot;&gt;
        ///          #table-layout
        ///          {
        ///          font-family: &quot;Lucida Sans Unicode&quot;, &quot;Lucida Grande&quot;, Sans-Serif;
        ///          font-size: 11px;
        ///          width: 5 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string XslData {
            get {
                return ResourceManager.GetString("XslData", resourceCulture);
            }
        }
    }
}

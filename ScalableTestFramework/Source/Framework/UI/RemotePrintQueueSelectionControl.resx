<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="printQueueTreeView.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="queueImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="queueImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAU
        CAAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEGoAAVkBTQFFAY4BuwFYASUB7wG7AVgBJQHvAVkBTQFFAY6sAAMtAUYDagHS
        A3IB/wNuAf8DaQH/A2UB/wNhAf8DXgHXDAADZwH/A2cB/wNnAf8DZwH/A2cB/wNnAf8BfQFZAU0B+gHq
        AaQBdgH/AeoBpAF2Af8BfQFZAU0B+gNnAf8DZwH/A2cB/wNnAf8DZwH/A2cB/4wAAzABSwNvAcwDowH/
        AcYBxQHEAf8B2QHUAdMB/wHUAc8BzgH/AdMBzgHNAf8B0wHOAc0B/wHoAuUB/wNiAf8MAANnAf8DjAH/
        A4wB/wOMAf8DjAH/A4wB/wNnAf8B7QGuAYUB/wHtAa4BhQH/A2cB/wOMAf8DjAH/A4wB/wOMAf8DjAH/
        A2cB/4gAA3QByQOzAf8D1AH/AeEC3wH/AcUBvwG9Af8BvQG1AbMB/wG5AbEBsAH/AbkBsQGuAf8BtwGv
        Aa4B/wHTAc4BzQH/A2YB/wwAA2cB/wNnAf8DZwH/A2cB/wNnAf8DZwH/AW0BaQFnAfUBfQFtAWEB/AF9
        AW0BYQH8AmkBZgHyA2cB/wNnAf8DZwH/A2cB/wNnAf8DZwH/iAADogH/A/AB/wPgAf8B1ALSAf8BvgG2
        AbUB/wG8AbUBtAH/AbsBtAGyAf8BugGyAbEB/wG5AbEBrwH/AdQBzwHOAf8DawH/IAADHwEtA3AB/wOI
        Af8DiAH/A14B/aAAA6gB/wPqAf8D3QH/AdUB1AHTAf8BwAG5AbcB/wG+AbcBtgH/Ab0BtgG0Af8BuwG0
        AbMB/wG7AbMBsQH/AdQB0AHPAf8DcQH/DAADUQGZA1kB0gNVAf8DgAH/A3YB/wNrAf8DXgH/A04B/wNA
        Af8DMwH/AykB/wMgAf8DIAH/AyAB/wM+AdEDQgF6iAADrwH/A+sB/wPdAf8B1wLVAf8BwQG7AbkB/wHA
        AbkBuAH/Ab4BuAG2Af8BOQGhAUAB/wE1AZQBNQH/AdYB0QHQAf8DdgH/DAADXAH9A6YB/wO0Af8DgAH/
        A4gB/wOIAf8DiAH/A4gB/wOIAf8DiAH/A4gB/wN9Af8DKQH/A7QB/wOaAf8DIAH/iAADtQH/A+wB/wPe
        Af8B2QLYAf8BwwG9AbsB/wHCAbsBugH/AcEBugG5Af8BoAHIAaQB/wFOAakBVAH/AdcB0wHRAf8DfAH/
        DAADbQH/A7QB/wO0Af8DlAH/A4AB/wOAAf8DdgH/A2sB/wNeAf8DTgH/A0AB/wNAAf8DawH/A7QB/wO0
        Af8DIAH/iAADuwH/A+wB/wPfAf8B2gLZAf8BxgG/Ab4B/wHEAb4BvAH/AcMBvAG7Af8BwQG7AbkB/wHA
        AbkBuAH/AdcC0wH/A4QB/wwAA3YB/wPXAf8D1wH/A5YB/wPYAf8DvgH/A74B/wO+Af8DvgH/A74B/wO+
        Af8D1wH/A40B/wPXAf8D1wH/AzsB/4gAA8AB/wPsAf8D4AH/Ad0C3AH/AccBwQHAAf8BkgKRAf8DjwH/
        A40B/wOKAf8B2QHVAdQB/wOLAf8MAAN7Af8D+QH/A/kB/wOqAf8D3wH/A8sB/wPLAf8DywH/A8sB/wPL
        Af8DywH/A98B/wOiAf8D+QH/A/kB/wNeAf+IAAPGAf8D7wH/A+EB/wPdAf8ByAHDAcIB/wHIAcIBwQH/
        AcYBwQG/Af8BxQG/Ab4B/wHDAb0BuwH/AdoB1gHVAf8DkQH/DAADfQH5A/wB/wP8Af8DywH/A/IB/wPy
        Af8D8gH/A/IB/wPyAf8D8gH/A/IB/wPyAf8DxQH/A/wB/wP8Af8DbwH+iAADywH/A+kB/wPpAf8B4gLh
        Af8BywHGAcQB/wGYApcB/wGWApUB/wGUApMB/wGSApEB/wHbAdcB1gH/A5gB/wwAA20E0gH/A+gB/wN6
        Af8DegH/A3oB/wN6Af8DegH/A3oB/wN6Af8DegH/A3oB/wN6Af8D6AH/A8MB/wNXAdyIAAMvAUgDpQHk
        A98B/wPqAf8BzwHKAckB/wHLAcYBxQH/AcoBxAHDAf8ByAHDAcEB/wHHAsEB/wHcAdkB2AH/A54B/wwA
        Ay0BRQOZAf8DzAH/A98B/wPfAf8D3wH/A98B/wPfAf8D3wH/A98B/wPfAf8D3wH/A98B/wPCAf8DcQH/
        Ay0BRYwAAwsBDwNtAasD3AH/AeYC4wH/AeEB3gHcAf8B3wLcAf8B3wHcAdsB/wHeAtsB/wHuAuwB/wOl
        Af8QAAM8AWMDcAHzA5cB/wOaAf8DmgH/A5kB/wOYAf8DlgH/A5UB/wOVAf8DlAH/A3wB/wNbAfMDOwFj
        mAADYwGfA8MB+wPEAf8DwAH/A7sB/wO2Af8DsAH/A2MBpxQAAwcBCQMqAT8DmwH/A9cB/wPCAf8DwgH/
        A8IB/wPCAf8D1wH/A5UB/wMqAT8DBwEJ2AADmwH/A5sB/wOaAf8DmgH/A5kB/wOYAf8DlgH/A5UB/5AA
        AUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAL/AfwBPwQAAfgBBwYAAeABBwYA
        AcABBwYAAcABBwH4AT8EAAHAAQcGAAHAAQcGAAHAAQcGAAHAAQcGAAHAAQcGAAHAAQcGAAHAAQcGAAHA
        AQcGAAHgAQcBgAEBBAAB+AEHAcABAwQAAv8B8AEPBAAL
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>
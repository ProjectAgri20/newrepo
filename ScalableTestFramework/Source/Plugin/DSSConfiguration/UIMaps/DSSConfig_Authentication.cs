//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------

namespace HP.ScalableTest.Plugin.DSSConfiguration.UIMaps
{
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class DSSConfig_Authentication
    {
        /// <summary>
        /// Backing field for HPDigitalSendinWindow property
        /// </summary>
        private Window fHPDigitalSendinWindow;

        /// <summary>
        /// Backing field for ConfigureDeviceWindow property
        /// </summary>
        private Window fConfigureDeviceWindow;

        /// <summary>
        /// Backing field for ConfigureDeviceTitleBar property
        /// </summary>
        private TitleBar fConfigureDeviceTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyDup0MenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyDup0MenuBar;

        /// <summary>
        /// Backing field for SystemItem1I0XMenuItem property
        /// </summary>
        private MenuItem fSystemItem1I0XMenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizDup0Button property
        /// </summary>
        private Button fMinimizeMinimizDup0Button;

        /// <summary>
        /// Backing field for MaximizeMaximizDup0Button property
        /// </summary>
        private Button fMaximizeMaximizDup0Button;

        /// <summary>
        /// Backing field for CloseCloseDup0Button property
        /// </summary>
        private Button fCloseCloseDup0Button;

        /// <summary>
        /// Backing field for HelpButtonfb686Button property
        /// </summary>
        private Button fHelpButtonfb686Button;

        /// <summary>
        /// Backing field for HelpTextBlockDup0Text property
        /// </summary>
        private Text fHelpTextBlockDup0Text;

        /// <summary>
        /// Backing field for ApplyButton46D6Button property
        /// </summary>
        private Button fApplyButton46D6Button;

        /// <summary>
        /// Backing field for ApplyTextBlockDup0Text property
        /// </summary>
        private Text fApplyTextBlockDup0Text;

        /// <summary>
        /// Backing field for CancelButtoned9Button property
        /// </summary>
        private Button fCancelButtoned9Button;

        /// <summary>
        /// Backing field for CancelTextBlockDup0Text property
        /// </summary>
        private Text fCancelTextBlockDup0Text;

        /// <summary>
        /// Backing field for OKButton8c9182aButton property
        /// </summary>
        private Button fOKButton8c9182aButton;

        /// <summary>
        /// Backing field for OKTextBlockDup0Text property
        /// </summary>
        private Text fOKTextBlockDup0Text;

        /// <summary>
        /// Backing field for TabControl2111BTab property
        /// </summary>
        private Tab fTabControl2111BTab;

        /// <summary>
        /// Backing field for SystemWindowsCoDup0TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup0TabItem;

        /// <summary>
        /// Backing field for GeneralTextmGenI0XText property
        /// </summary>
        private Text fGeneralTextmGenI0XText;

        /// <summary>
        /// Backing field for GeneralTextBlocI0XText property
        /// </summary>
        private Text fGeneralTextBlocI0XText;

        /// <summary>
        /// Backing field for Text9127A6692D0Text property
        /// </summary>
        private Text fText9127A6692D0Text;

        /// <summary>
        /// Backing field for ProgressBar836eProgressBar property
        /// </summary>
        private ProgressBar fProgressBar836eProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup1TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup1TabItem;

        /// <summary>
        /// Backing field for AuthenticationTI0XDup0Text property
        /// </summary>
        private Text fAuthenticationTI0XDup0Text;

        /// <summary>
        /// Backing field for AuthenticationTI0XDup1Text property
        /// </summary>
        private Text fAuthenticationTI0XDup1Text;

        /// <summary>
        /// Backing field for Text2087FBF2200Text property
        /// </summary>
        private Text fText2087FBF2200Text;

        /// <summary>
        /// Backing field for Text3C0A7A0B490Text property
        /// </summary>
        private Text fText3C0A7A0B490Text;

        /// <summary>
        /// Backing field for ProgressBar992dProgressBar property
        /// </summary>
        private ProgressBar fProgressBar992dProgressBar;

        /// <summary>
        /// Backing field for TabStatusUserCoCustom property
        /// </summary>
        private Custom fTabStatusUserCoCustom;

        /// <summary>
        /// Backing field for ErrorTextBlockText property
        /// </summary>
        private Text fEnabledTextBlocText;

        /// <summary>
        /// Backing field for ScrollViewerPane property
        /// </summary>
        private Pane fScrollViewerPane;

        /// <summary>
        /// Backing field for MfpConfiguratioCustom property
        /// </summary>
        private Custom fMfpConfiguratioCustom;

        /// <summary>
        /// Backing field for ErrorConflictUsCustom property
        /// </summary>
        private Custom fErrorConflictUsCustom;

        /// <summary>
        /// Backing field for CopyDSSAuthentiGroup property
        /// </summary>
        private Group fCopyDSSAuthentiGroup;

        /// <summary>
        /// Backing field for EmbeddedSigninSGroup property
        /// </summary>
        private Group fEmbeddedSigninSGroup;

        /// <summary>
        /// Backing field for EmbeddedSigninSText property
        /// </summary>
        private Text fEmbeddedSigninSText;

        /// <summary>
        /// Backing field for WindowsSignInSeGroup property
        /// </summary>
        private Group fWindowsSignInSeGroup;

        /// <summary>
        /// Backing field for WindowsSignInSeButton property
        /// </summary>
        private Button fWindowsSignInSeButton;

        /// <summary>
        /// Backing field for WindowsSignInSeText property
        /// </summary>
        private Text fWindowsSignInSeText;

        /// <summary>
        /// Backing field for ThisdeviceusesSText property
        /// </summary>
        private Text fThisdeviceusesSText;

        /// <summary>
        /// Backing field for EnableWindowsSiCheckBox property
        /// </summary>
        private CheckBox fEnableWindowsSiCheckBox;

        /// <summary>
        /// Backing field for EnableWindowsSiText property
        /// </summary>
        private Text fEnableWindowsSiText;

        /// <summary>
        /// Backing field for UseasecureconneDup0CheckBox property
        /// </summary>
        private CheckBox fUseasecureconneDup0CheckBox;

        /// <summary>
        /// Backing field for UseasecureconneI0XText property
        /// </summary>
        private Text fUseasecureconneI0XText;

        /// <summary>
        /// Backing field for TrustedDomainsText property
        /// </summary>
        private Text fTrustedDomainsText;

        /// <summary>
        /// Backing field for TrustedDomainsTText property
        /// </summary>
        private Text fTrustedDomainsTText;

        /// <summary>
        /// Backing field for DefaultWindowsDDup0Text property
        /// </summary>
        private Text fDefaultWindowsDDup0Text;

        /// <summary>
        /// Backing field for DefaultWindowsDDup1Text property
        /// </summary>
        private Text fDefaultWindowsDDup1Text;

        /// <summary>
        /// Backing field for TextBox5ba504d4Edit property
        /// </summary>
        private Edit fTextBox5ba504d4Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup0Pane property
        /// </summary>
        private Pane fScrollViewerPARDup0Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticI0XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticI0XScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoI0XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoI0XScrollBar;

        /// <summary>
        /// Backing field for AddButtonca3d79Button property
        /// </summary>
        private Button fAddButtonca3d79Button;

        /// <summary>
        /// Backing field for AddTextBlockText property
        /// </summary>
        private Text fAddTextBlockText;

        /// <summary>
        /// Backing field for ListView536fe9eList property
        /// </summary>
        private List fListView536fe9eList;

        /// <summary>
        /// Backing field for ComboBox30b8f7fComboBox property
        /// </summary>
        private ComboBox fComboBox30b8f7fComboBox;

        /// <summary>
        /// Backing field for RemoveButton8f8Button property
        /// </summary>
        private Button fRemoveButton8f8Button;

        /// <summary>
        /// Backing field for RemoveTextBlockText property
        /// </summary>
        private Text fRemoveTextBlockText;

        /// <summary>
        /// Backing field for MatchthenameentDup0Text property
        /// </summary>
        private Text fMatchthenameentDup0Text;

        /// <summary>
        /// Backing field for MatchthenameentI0XText property
        /// </summary>
        private Text fMatchthenameentI0XText;

        /// <summary>
        /// Backing field for TextBox390cf360Edit property
        /// </summary>
        private Edit fTextBox390cf360Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup1Pane property
        /// </summary>
        private Pane fScrollViewerPARDup1Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticI1XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticI1XScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoI1XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoI1XScrollBar;

        /// <summary>
        /// Backing field for RetrievetheuserDup0Text property
        /// </summary>
        private Text fRetrievetheuserDup0Text;

        /// <summary>
        /// Backing field for RetrievetheuserI0XText property
        /// </summary>
        private Text fRetrievetheuserI0XText;

        /// <summary>
        /// Backing field for TextBox79183f97Edit property
        /// </summary>
        private Edit fTextBox79183f97Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup2Pane property
        /// </summary>
        private Pane fScrollViewerPARDup2Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticI2XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticI2XScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoI2XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoI2XScrollBar;

        /// <summary>
        /// Backing field for TestWindowsSignGroup property
        /// </summary>
        private Group fTestWindowsSignGroup;

        /// <summary>
        /// Backing field for TestWindowsSignText property
        /// </summary>
        private Text fTestWindowsSignText;

        /// <summary>
        /// Backing field for DomainText property
        /// </summary>
        private Text fDomainText;

        /// <summary>
        /// Backing field for DomainTextBlockText property
        /// </summary>
        private Text fDomainTextBlockText;

        /// <summary>
        /// Backing field for ComboBox8de5c77ComboBox property
        /// </summary>
        private ComboBox fComboBox8de5c77ComboBox;

        /// <summary>
        /// Backing field for UsernameDup0Text property
        /// </summary>
        private Text fUsernameDup0Text;

        /// <summary>
        /// Backing field for UsernameTextBloI0XText property
        /// </summary>
        private Text fUsernameTextBloI0XText;

        /// <summary>
        /// Backing field for TextBoxdff1de29Edit property
        /// </summary>
        private Edit fTextBoxdff1de29Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup3Pane property
        /// </summary>
        private Pane fScrollViewerPARDup3Pane;

        /// <summary>
        /// Backing field for PasswordDup0Text property
        /// </summary>
        private Text fPasswordDup0Text;

        /// <summary>
        /// Backing field for PasswordTextBloI0XText property
        /// </summary>
        private Text fPasswordTextBloI0XText;

        /// <summary>
        /// Backing field for PasswordBox5866Edit property
        /// </summary>
        private Edit fPasswordBox5866Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup4Pane property
        /// </summary>
        private Pane fScrollViewerPARDup4Pane;

        /// <summary>
        /// Backing field for TestButtonf51a5Button property
        /// </summary>
        private Button fTestButtonf51a5Button;

        /// <summary>
        /// Backing field for TestTextBlockDup0Text property
        /// </summary>
        private Text fTestTextBlockDup0Text;

        /// <summary>
        /// Backing field for LDAPSignInSetupGroup property
        /// </summary>
        private Group fLDAPSignInSetupGroup;

        /// <summary>
        /// Backing field for LDAPSignInSetupButton property
        /// </summary>
        private Button fLDAPSignInSetupButton;

        /// <summary>
        /// Backing field for LDAPSignInSetupText property
        /// </summary>
        private Text fLDAPSignInSetupText;

        /// <summary>
        /// Backing field for AuthenticateusiText property
        /// </summary>
        private Text fAuthenticateusiText;

        /// <summary>
        /// Backing field for EnableLDAPSignICheckBox property
        /// </summary>
        private CheckBox fEnableLDAPSignICheckBox;

        /// <summary>
        /// Backing field for EnableLDAPSignIText property
        /// </summary>
        private Text fEnableLDAPSignIText;

        /// <summary>
        /// Backing field for UseasecureconneDup1CheckBox property
        /// </summary>
        private CheckBox fUseasecureconneDup1CheckBox;

        /// <summary>
        /// Backing field for UseasecureconneI1XText property
        /// </summary>
        private Text fUseasecureconneI1XText;

        /// <summary>
        /// Backing field for LDAPServerAddreDup0Text property
        /// </summary>
        private Text fLDAPServerAddreDup0Text;

        /// <summary>
        /// Backing field for LDAPServerAddreDup1Text property
        /// </summary>
        private Text fLDAPServerAddreDup1Text;

        /// <summary>
        /// Backing field for TextBox1ef268d2Edit property
        /// </summary>
        private Edit fTextBox1ef268d2Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup5Pane property
        /// </summary>
        private Pane fScrollViewerPARDup5Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticI3XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticI3XScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoI3XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoI3XScrollBar;

        /// <summary>
        /// Backing field for PortNumberText property
        /// </summary>
        private Text fPortNumberText;

        /// <summary>
        /// Backing field for PortNumberTextBText property
        /// </summary>
        private Text fPortNumberTextBText;

        /// <summary>
        /// Backing field for TextBox122655e2Edit property
        /// </summary>
        private Edit fTextBox122655e2Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup6Pane property
        /// </summary>
        private Pane fScrollViewerPARDup6Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticI4XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticI4XScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoI4XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoI4XScrollBar;

        /// <summary>
        /// Backing field for BindPrefixText property
        /// </summary>
        private Text fBindPrefixText;

        /// <summary>
        /// Backing field for BindPrefixTextBText property
        /// </summary>
        private Text fBindPrefixTextBText;

        /// <summary>
        /// Backing field for TextBox0176a98cEdit property
        /// </summary>
        private Edit fTextBox0176a98cEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup7Pane property
        /// </summary>
        private Pane fScrollViewerPARDup7Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticI5XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticI5XScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoI5XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoI5XScrollBar;

        /// <summary>
        /// Backing field for BindandSearchRoDup0Text property
        /// </summary>
        private Text fBindandSearchRoDup0Text;

        /// <summary>
        /// Backing field for BindandSearchRoDup1Text property
        /// </summary>
        private Text fBindandSearchRoDup1Text;

        /// <summary>
        /// Backing field for TextBox9739bd3fEdit property
        /// </summary>
        private Edit fTextBox9739bd3fEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup8Pane property
        /// </summary>
        private Pane fScrollViewerPARDup8Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticI6XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticI6XScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoI6XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoI6XScrollBar;

        /// <summary>
        /// Backing field for MatchthenameentDup1Text property
        /// </summary>
        private Text fMatchthenameentDup1Text;

        /// <summary>
        /// Backing field for MatchthenameentI1XText property
        /// </summary>
        private Text fMatchthenameentI1XText;

        /// <summary>
        /// Backing field for TextBox95d86380Edit property
        /// </summary>
        private Edit fTextBox95d86380Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup9Pane property
        /// </summary>
        private Pane fScrollViewerPARDup9Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticI7XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticI7XScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoI7XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoI7XScrollBar;

        /// <summary>
        /// Backing field for RetrievetheuserDup1Text property
        /// </summary>
        private Text fRetrievetheuserDup1Text;

        /// <summary>
        /// Backing field for RetrievetheuserI1XText property
        /// </summary>
        private Text fRetrievetheuserI1XText;

        /// <summary>
        /// Backing field for TextBoxcd99e046Edit property
        /// </summary>
        private Edit fTextBoxcd99e046Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup10Pane property
        /// </summary>
        private Pane fScrollViewerPARDup10Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticI8XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticI8XScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoI8XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoI8XScrollBar;

        /// <summary>
        /// Backing field for RetrievethedeviDup0Text property
        /// </summary>
        private Text fRetrievethedeviDup0Text;

        /// <summary>
        /// Backing field for RetrievethedeviDup1Text property
        /// </summary>
        private Text fRetrievethedeviDup1Text;

        /// <summary>
        /// Backing field for TextBox06baa88fEdit property
        /// </summary>
        private Edit fTextBox06baa88fEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup11Pane property
        /// </summary>
        private Pane fScrollViewerPARDup11Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticI9XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticI9XScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoI9XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoI9XScrollBar;

        /// <summary>
        /// Backing field for RetrievethedeviDup2Text property
        /// </summary>
        private Text fRetrievethedeviDup2Text;

        /// <summary>
        /// Backing field for RetrievethedeviDup3Text property
        /// </summary>
        private Text fRetrievethedeviDup3Text;

        /// <summary>
        /// Backing field for TextBox18dc1d17Edit property
        /// </summary>
        private Edit fTextBox18dc1d17Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup12Pane property
        /// </summary>
        private Pane fScrollViewerPARDup12Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticI10XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticI10XScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoI10XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoI10XScrollBar;

        /// <summary>
        /// Backing field for ExactmatchonGroCheckBox property
        /// </summary>
        private CheckBox fExactmatchonGroCheckBox;

        /// <summary>
        /// Backing field for ExactmatchonGroText property
        /// </summary>
        private Text fExactmatchonGroText;

        /// <summary>
        /// Backing field for TestLDAPSignInGGroup property
        /// </summary>
        private Group fTestLDAPSignInGGroup;

        /// <summary>
        /// Backing field for TestLDAPSignInTText property
        /// </summary>
        private Text fTestLDAPSignInTText;

        /// <summary>
        /// Backing field for UsernameDup1Text property
        /// </summary>
        private Text fUsernameDup1Text;

        /// <summary>
        /// Backing field for UsernameTextBloI1XText property
        /// </summary>
        private Text fUsernameTextBloI1XText;

        /// <summary>
        /// Backing field for TextBox0c41e59eEdit property
        /// </summary>
        private Edit fTextBox0c41e59eEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup13Pane property
        /// </summary>
        private Pane fScrollViewerPARDup13Pane;

        /// <summary>
        /// Backing field for PasswordDup1Text property
        /// </summary>
        private Text fPasswordDup1Text;

        /// <summary>
        /// Backing field for PasswordTextBloI1XText property
        /// </summary>
        private Text fPasswordTextBloI1XText;

        /// <summary>
        /// Backing field for PasswordBox3366Edit property
        /// </summary>
        private Edit fPasswordBox3366Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup14Pane property
        /// </summary>
        private Pane fScrollViewerPARDup14Pane;

        /// <summary>
        /// Backing field for TestButton21369Button property
        /// </summary>
        private Button fTestButton21369Button;

        /// <summary>
        /// Backing field for TestTextBlockDup1Text property
        /// </summary>
        private Text fTestTextBlockDup1Text;

        /// <summary>
        /// Backing field for SignInandPermisGroup property
        /// </summary>
        private Group fSignInandPermisGroup;

        /// <summary>
        /// Backing field for SignInandPermisText property
        /// </summary>
        private Text fSignInandPermisText;

        /// <summary>
        /// Backing field for TextBoxEdit property
        /// </summary>
        private Edit fTextBoxEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup15Pane property
        /// </summary>
        private Pane fScrollViewerPARDup15Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticI11XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticI11XScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoI11XScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoI11XScrollBar;

        /// <summary>
        /// Backing field for TreeViewF3A67BCTree property
        /// </summary>
        private Tree fTreeViewF3A67BCTree;

        /// <summary>
        /// Backing field for SystemWindowsCoI0XDup0TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI0XDup0TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI0XButton property
        /// </summary>
        private Button fButtonExpanderI0XButton;

        /// <summary>
        /// Backing field for ControlPanelAppDup0Text property
        /// </summary>
        private Text fControlPanelAppDup0Text;

        /// <summary>
        /// Backing field for ControlPanelAppDup1Text property
        /// </summary>
        private Text fControlPanelAppDup1Text;

        /// <summary>
        /// Backing field for DeviceGuestText property
        /// </summary>
        private Text fDeviceGuestText;

        /// <summary>
        /// Backing field for DeviceGuestTextText property
        /// </summary>
        private Text fDeviceGuestTextText;

        /// <summary>
        /// Backing field for RequiresSignInText property
        /// </summary>
        private Text fRequiresSignInText;

        /// <summary>
        /// Backing field for RequiresSignInTText property
        /// </summary>
        private Text fRequiresSignInTText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup0CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup0CheckBox;

        /// <summary>
        /// Backing field for ImageLockI0XImage property
        /// </summary>
        private Image fImageLockI0XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI0XText property
        /// </summary>
        private Text fTextBlockTextCoI0XText;

        /// <summary>
        /// Backing field for DeviceAdministrDup0Text property
        /// </summary>
        private Text fDeviceAdministrDup0Text;

        /// <summary>
        /// Backing field for DeviceAdministrDup1Text property
        /// </summary>
        private Text fDeviceAdministrDup1Text;

        /// <summary>
        /// Backing field for TextText property
        /// </summary>
        private Text fTextText;

        /// <summary>
        /// Backing field for TextBlockDup0Text property
        /// </summary>
        private Text fTextBlockDup0Text;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup1CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup1CheckBox;

        /// <summary>
        /// Backing field for DeviceUserText property
        /// </summary>
        private Text fDeviceUserText;

        /// <summary>
        /// Backing field for DeviceUserTextBText property
        /// </summary>
        private Text fDeviceUserTextBText;

        /// <summary>
        /// Backing field for FullAccessText property
        /// </summary>
        private Text fFullAccessText;

        /// <summary>
        /// Backing field for FullAccessTextBText property
        /// </summary>
        private Text fFullAccessTextBText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup2CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup2CheckBox;

        /// <summary>
        /// Backing field for SignInMethodText property
        /// </summary>
        private Text fSignInMethodText;

        /// <summary>
        /// Backing field for SignInMethodTexText property
        /// </summary>
        private Text fSignInMethodTexText;

        /// <summary>
        /// Backing field for DeviceDefaultTeDup0Text property
        /// </summary>
        private Text fDeviceDefaultTeDup0Text;

        /// <summary>
        /// Backing field for DeviceDefaultTeDup1Text property
        /// </summary>
        private Text fDeviceDefaultTeDup1Text;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup0ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup0ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI0XDup1TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI0XDup1TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI1XButton property
        /// </summary>
        private Button fButtonExpanderI1XButton;

        /// <summary>
        /// Backing field for JobStatusapplicDup0Text property
        /// </summary>
        private Text fJobStatusapplicDup0Text;

        /// <summary>
        /// Backing field for JobStatusapplicDup1Text property
        /// </summary>
        private Text fJobStatusapplicDup1Text;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup3CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup3CheckBox;

        /// <summary>
        /// Backing field for ImageLockI1XImage property
        /// </summary>
        private Image fImageLockI1XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI1XText property
        /// </summary>
        private Text fTextBlockTextCoI1XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup4CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup4CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup5CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup5CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup1ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup1ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI0XDup2TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI0XDup2TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI2XButton property
        /// </summary>
        private Button fButtonExpanderI2XButton;

        /// <summary>
        /// Backing field for DeviceMaintenanDup0Text property
        /// </summary>
        private Text fDeviceMaintenanDup0Text;

        /// <summary>
        /// Backing field for DeviceMaintenanDup1Text property
        /// </summary>
        private Text fDeviceMaintenanDup1Text;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup6CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup6CheckBox;

        /// <summary>
        /// Backing field for ImageLockI2XImage property
        /// </summary>
        private Image fImageLockI2XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI2XText property
        /// </summary>
        private Text fTextBlockTextCoI2XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup7CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup7CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup8CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup8CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup2ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup2ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI1XDup0TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI1XDup0TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI3XButton property
        /// </summary>
        private Button fButtonExpanderI3XButton;

        /// <summary>
        /// Backing field for ReportsText property
        /// </summary>
        private Text fReportsText;

        /// <summary>
        /// Backing field for ReportsTextBlocText property
        /// </summary>
        private Text fReportsTextBlocText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup9CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup9CheckBox;

        /// <summary>
        /// Backing field for ImageLockI3XImage property
        /// </summary>
        private Image fImageLockI3XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI3XText property
        /// </summary>
        private Text fTextBlockTextCoI3XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup10CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup10CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup11CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup11CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup3ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup3ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI0XDup3TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI0XDup3TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI4XButton property
        /// </summary>
        private Button fButtonExpanderI4XButton;

        /// <summary>
        /// Backing field for AdministrationaDup0Text property
        /// </summary>
        private Text fAdministrationaDup0Text;

        /// <summary>
        /// Backing field for AdministrationaDup1Text property
        /// </summary>
        private Text fAdministrationaDup1Text;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup12CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup12CheckBox;

        /// <summary>
        /// Backing field for ImageLockI4XImage property
        /// </summary>
        private Image fImageLockI4XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI4XText property
        /// </summary>
        private Text fTextBlockTextCoI4XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup13CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup13CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup14CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup14CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup4ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup4ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI0XDup4TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI0XDup4TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI5XButton property
        /// </summary>
        private Button fButtonExpanderI5XButton;

        /// <summary>
        /// Backing field for OpenfromDeviceMDup0Text property
        /// </summary>
        private Text fOpenfromDeviceMDup0Text;

        /// <summary>
        /// Backing field for OpenfromDeviceMDup1Text property
        /// </summary>
        private Text fOpenfromDeviceMDup1Text;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup15CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup15CheckBox;

        /// <summary>
        /// Backing field for ImageLockI5XImage property
        /// </summary>
        private Image fImageLockI5XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI5XText property
        /// </summary>
        private Text fTextBlockTextCoI5XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup16CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup16CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup17CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup17CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup5ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup5ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI1XDup1TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI1XDup1TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI6XButton property
        /// </summary>
        private Button fButtonExpanderI6XButton;

        /// <summary>
        /// Backing field for CopyapplicationDup0Text property
        /// </summary>
        private Text fCopyapplicationDup0Text;

        /// <summary>
        /// Backing field for CopyapplicationDup1Text property
        /// </summary>
        private Text fCopyapplicationDup1Text;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup18CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup18CheckBox;

        /// <summary>
        /// Backing field for ImageLockI6XImage property
        /// </summary>
        private Image fImageLockI6XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI6XText property
        /// </summary>
        private Text fTextBlockTextCoI6XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup19CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup19CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup20CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup20CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup6ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup6ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI1XDup2TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI1XDup2TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI7XButton property
        /// </summary>
        private Button fButtonExpanderI7XButton;

        /// <summary>
        /// Backing field for SupplyStatusappDup0Text property
        /// </summary>
        private Text fSupplyStatusappDup0Text;

        /// <summary>
        /// Backing field for SupplyStatusappDup1Text property
        /// </summary>
        private Text fSupplyStatusappDup1Text;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup21CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup21CheckBox;

        /// <summary>
        /// Backing field for ImageLockI7XImage property
        /// </summary>
        private Image fImageLockI7XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI7XText property
        /// </summary>
        private Text fTextBlockTextCoI7XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup22CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup22CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup23CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup23CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup7ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup7ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI1XDup3TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI1XDup3TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI8XButton property
        /// </summary>
        private Button fButtonExpanderI8XButton;

        /// <summary>
        /// Backing field for TraysText property
        /// </summary>
        private Text fTraysText;

        /// <summary>
        /// Backing field for TraysTextBlockText property
        /// </summary>
        private Text fTraysTextBlockText;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup8ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup8ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI2XDup0TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI2XDup0TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI9XButton property
        /// </summary>
        private Button fButtonExpanderI9XButton;

        /// <summary>
        /// Backing field for OpenfromUSBapplDup0Text property
        /// </summary>
        private Text fOpenfromUSBapplDup0Text;

        /// <summary>
        /// Backing field for OpenfromUSBapplDup1Text property
        /// </summary>
        private Text fOpenfromUSBapplDup1Text;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup24CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup24CheckBox;

        /// <summary>
        /// Backing field for ImageLockI8XImage property
        /// </summary>
        private Image fImageLockI8XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI8XText property
        /// </summary>
        private Text fTextBlockTextCoI8XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup25CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup25CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup26CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup26CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup9ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup9ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI2XDup1TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI2XDup1TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI10XButton property
        /// </summary>
        private Button fButtonExpanderI10XButton;

        /// <summary>
        /// Backing field for FaxapplicationText property
        /// </summary>
        private Text fFaxapplicationText;

        /// <summary>
        /// Backing field for FaxapplicationTText property
        /// </summary>
        private Text fFaxapplicationTText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup27CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup27CheckBox;

        /// <summary>
        /// Backing field for ImageLockI9XImage property
        /// </summary>
        private Image fImageLockI9XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI9XText property
        /// </summary>
        private Text fTextBlockTextCoI9XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup28CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup28CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup29CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup29CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup10ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup10ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI1XDup4TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI1XDup4TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI11XButton property
        /// </summary>
        private Button fButtonExpanderI11XButton;

        /// <summary>
        /// Backing field for EmailapplicatioDup0Text property
        /// </summary>
        private Text fEmailapplicatioDup0Text;

        /// <summary>
        /// Backing field for EmailapplicatioDup1Text property
        /// </summary>
        private Text fEmailapplicatioDup1Text;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup30CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup30CheckBox;

        /// <summary>
        /// Backing field for ImageLockI10XImage property
        /// </summary>
        private Image fImageLockI10XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI10XText property
        /// </summary>
        private Text fTextBlockTextCoI10XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup31CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup31CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup32CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup32CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup11ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup11ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI2XDup2TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI2XDup2TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI12XButton property
        /// </summary>
        private Button fButtonExpanderI12XButton;

        /// <summary>
        /// Backing field for AddressBookText property
        /// </summary>
        private Text fAddressBookText;

        /// <summary>
        /// Backing field for AddressBookTextText property
        /// </summary>
        private Text fAddressBookTextText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup33CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup33CheckBox;

        /// <summary>
        /// Backing field for ImageLockI11XImage property
        /// </summary>
        private Image fImageLockI11XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI11XText property
        /// </summary>
        private Text fTextBlockTextCoI11XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup34CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup34CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup35CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup35CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup12ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup12ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI2XDup3TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI2XDup3TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI13XButton property
        /// </summary>
        private Button fButtonExpanderI13XButton;

        /// <summary>
        /// Backing field for SavetoSharePoinDup0Text property
        /// </summary>
        private Text fSavetoSharePoinDup0Text;

        /// <summary>
        /// Backing field for SavetoSharePoinDup1Text property
        /// </summary>
        private Text fSavetoSharePoinDup1Text;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup36CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup36CheckBox;

        /// <summary>
        /// Backing field for ImageLockI12XImage property
        /// </summary>
        private Image fImageLockI12XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI12XText property
        /// </summary>
        private Text fTextBlockTextCoI12XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup37CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup37CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup38CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup38CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup13ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup13ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI3XDup0TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI3XDup0TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI14XButton property
        /// </summary>
        private Button fButtonExpanderI14XButton;

        /// <summary>
        /// Backing field for NetworkFolderapDup0Text property
        /// </summary>
        private Text fNetworkFolderapDup0Text;

        /// <summary>
        /// Backing field for NetworkFolderapDup1Text property
        /// </summary>
        private Text fNetworkFolderapDup1Text;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup39CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup39CheckBox;

        /// <summary>
        /// Backing field for ImageLockI13XImage property
        /// </summary>
        private Image fImageLockI13XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI13XText property
        /// </summary>
        private Text fTextBlockTextCoI13XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup40CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup40CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup41CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup41CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup14ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup14ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI3XDup1TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI3XDup1TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI15XButton property
        /// </summary>
        private Button fButtonExpanderI15XButton;

        /// <summary>
        /// Backing field for SavetoUSBapplicDup0Text property
        /// </summary>
        private Text fSavetoUSBapplicDup0Text;

        /// <summary>
        /// Backing field for SavetoUSBapplicDup1Text property
        /// </summary>
        private Text fSavetoUSBapplicDup1Text;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup42CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup42CheckBox;

        /// <summary>
        /// Backing field for ImageLockI14XImage property
        /// </summary>
        private Image fImageLockI14XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI14XText property
        /// </summary>
        private Text fTextBlockTextCoI14XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup43CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup43CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup44CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup44CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup15ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup15ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI3XDup2TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI3XDup2TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI16XButton property
        /// </summary>
        private Button fButtonExpanderI16XButton;

        /// <summary>
        /// Backing field for SavetoDeviceMemDup0Text property
        /// </summary>
        private Text fSavetoDeviceMemDup0Text;

        /// <summary>
        /// Backing field for SavetoDeviceMemDup1Text property
        /// </summary>
        private Text fSavetoDeviceMemDup1Text;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup45CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup45CheckBox;

        /// <summary>
        /// Backing field for ImageLockI15XImage property
        /// </summary>
        private Image fImageLockI15XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI15XText property
        /// </summary>
        private Text fTextBlockTextCoI15XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup46CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup46CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup47CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup47CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup16ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup16ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI4XDup0TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI4XDup0TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI17XButton property
        /// </summary>
        private Button fButtonExpanderI17XButton;

        /// <summary>
        /// Backing field for RemoteScanRequeDup0Text property
        /// </summary>
        private Text fRemoteScanRequeDup0Text;

        /// <summary>
        /// Backing field for RemoteScanRequeDup1Text property
        /// </summary>
        private Text fRemoteScanRequeDup1Text;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup48CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup48CheckBox;

        /// <summary>
        /// Backing field for ImageLockI16XImage property
        /// </summary>
        private Image fImageLockI16XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI16XText property
        /// </summary>
        private Text fTextBlockTextCoI16XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup49CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup49CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup50CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup50CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup17ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup17ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI0XDup5TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI0XDup5TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI18XButton property
        /// </summary>
        private Button fButtonExpanderI18XButton;

        /// <summary>
        /// Backing field for InformationText property
        /// </summary>
        private Text fInformationText;

        /// <summary>
        /// Backing field for InformationTextText property
        /// </summary>
        private Text fInformationTextText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup51CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup51CheckBox;

        /// <summary>
        /// Backing field for ImageLockI17XImage property
        /// </summary>
        private Image fImageLockI17XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI17XText property
        /// </summary>
        private Text fTextBlockTextCoI17XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup52CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup52CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup53CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup53CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup18ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup18ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI5XTreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI5XTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI19XButton property
        /// </summary>
        private Button fButtonExpanderI19XButton;

        /// <summary>
        /// Backing field for NetworkingText property
        /// </summary>
        private Text fNetworkingText;

        /// <summary>
        /// Backing field for NetworkingTextBText property
        /// </summary>
        private Text fNetworkingTextBText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup54CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup54CheckBox;

        /// <summary>
        /// Backing field for ImageLockI18XImage property
        /// </summary>
        private Image fImageLockI18XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI18XText property
        /// </summary>
        private Text fTextBlockTextCoI18XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup55CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup55CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup56CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup56CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup19ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup19ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI6XTreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI6XTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI20XButton property
        /// </summary>
        private Button fButtonExpanderI20XButton;

        /// <summary>
        /// Backing field for HPWebServicesText property
        /// </summary>
        private Text fHPWebServicesText;

        /// <summary>
        /// Backing field for HPWebServicesTeText property
        /// </summary>
        private Text fHPWebServicesTeText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup57CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup57CheckBox;

        /// <summary>
        /// Backing field for ImageLockI19XImage property
        /// </summary>
        private Image fImageLockI19XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI19XText property
        /// </summary>
        private Text fTextBlockTextCoI19XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup58CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup58CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup59CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup59CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup20ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup20ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoDup0TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoDup0TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI21XButton property
        /// </summary>
        private Button fButtonExpanderI21XButton;

        /// <summary>
        /// Backing field for GeneralText property
        /// </summary>
        private Text fGeneralText;

        /// <summary>
        /// Backing field for GeneralTextBlocText property
        /// </summary>
        private Text fGeneralTextBlocText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup60CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup60CheckBox;

        /// <summary>
        /// Backing field for ImageLockI20XImage property
        /// </summary>
        private Image fImageLockI20XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI20XText property
        /// </summary>
        private Text fTextBlockTextCoI20XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup61CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup61CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup62CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup62CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup21ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup21ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoDup1TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoDup1TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI22XButton property
        /// </summary>
        private Button fButtonExpanderI22XButton;

        /// <summary>
        /// Backing field for TroubleshootingDup0Text property
        /// </summary>
        private Text fTroubleshootingDup0Text;

        /// <summary>
        /// Backing field for TroubleshootingDup1Text property
        /// </summary>
        private Text fTroubleshootingDup1Text;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup63CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup63CheckBox;

        /// <summary>
        /// Backing field for ImageLockI21XImage property
        /// </summary>
        private Image fImageLockI21XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI21XText property
        /// </summary>
        private Text fTextBlockTextCoI21XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup64CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup64CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup65CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup65CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup22ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup22ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI1XDup5TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI1XDup5TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI23XButton property
        /// </summary>
        private Button fButtonExpanderI23XButton;

        /// <summary>
        /// Backing field for SecurityText property
        /// </summary>
        private Text fSecurityText;

        /// <summary>
        /// Backing field for SecurityTextBloDup0Text property
        /// </summary>
        private Text fSecurityTextBloDup0Text;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup66CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup66CheckBox;

        /// <summary>
        /// Backing field for ImageLockI22XImage property
        /// </summary>
        private Image fImageLockI22XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI22XText property
        /// </summary>
        private Text fTextBlockTextCoI22XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup67CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup67CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup68CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup68CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup23ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup23ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI4XDup1TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI4XDup1TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI24XButton property
        /// </summary>
        private Button fButtonExpanderI24XButton;

        /// <summary>
        /// Backing field for ScanDigitalSendDup0Text property
        /// </summary>
        private Text fScanDigitalSendDup0Text;

        /// <summary>
        /// Backing field for ScanDigitalSendDup1Text property
        /// </summary>
        private Text fScanDigitalSendDup1Text;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup24ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup24ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI3XDup3TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI3XDup3TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI25XButton property
        /// </summary>
        private Button fButtonExpanderI25XButton;

        /// <summary>
        /// Backing field for FaxText property
        /// </summary>
        private Text fFaxText;

        /// <summary>
        /// Backing field for FaxTextBlockText property
        /// </summary>
        private Text fFaxTextBlockText;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup25ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup25ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI2XDup4TreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI2XDup4TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI26XButton property
        /// </summary>
        private Button fButtonExpanderI26XButton;

        /// <summary>
        /// Backing field for CopyPrintText property
        /// </summary>
        private Text fCopyPrintText;

        /// <summary>
        /// Backing field for CopyPrintTextBlText property
        /// </summary>
        private Text fCopyPrintTextBlText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup69CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup69CheckBox;

        /// <summary>
        /// Backing field for ImageLockI23XImage property
        /// </summary>
        private Image fImageLockI23XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI23XText property
        /// </summary>
        private Text fTextBlockTextCoI23XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup70CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup70CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup71CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup71CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup26ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup26ComboBox;

        /// <summary>
        /// Backing field for SystemWindowsCoI7XTreeItem property
        /// </summary>
        private TreeItem fSystemWindowsCoI7XTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderI27XButton property
        /// </summary>
        private Button fButtonExpanderI27XButton;

        /// <summary>
        /// Backing field for EnhancedWorkfloDup0Text property
        /// </summary>
        private Text fEnhancedWorkfloDup0Text;

        /// <summary>
        /// Backing field for EnhancedWorkfloDup1Text property
        /// </summary>
        private Text fEnhancedWorkfloDup1Text;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup72CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup72CheckBox;

        /// <summary>
        /// Backing field for ImageLockI24XImage property
        /// </summary>
        private Image fImageLockI24XImage;

        /// <summary>
        /// Backing field for TextBlockTextCoI24XText property
        /// </summary>
        private Text fTextBlockTextCoI24XText;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup73CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup73CheckBox;

        /// <summary>
        /// Backing field for CheckBoxmAuthSiDup74CheckBox property
        /// </summary>
        private CheckBox fCheckBoxmAuthSiDup74CheckBox;

        /// <summary>
        /// Backing field for ComboBoxmAuthSiDup27ComboBox property
        /// </summary>
        private ComboBox fComboBoxmAuthSiDup27ComboBox;

        /// <summary>
        /// Backing field for AuthenticationGGroup property
        /// </summary>
        private Group fAuthenticationGGroup;

        /// <summary>
        /// Backing field for GroupBoxB6544EFGroup property
        /// </summary>
        private Group fGroupBoxB6544EFGroup;

        /// <summary>
        /// Backing field for AllowuserstochoCheckBox property
        /// </summary>
        private CheckBox fAllowuserstochoCheckBox;

        /// <summary>
        /// Backing field for AllowuserstochoText property
        /// </summary>
        private Text fAllowuserstochoText;

        /// <summary>
        /// Backing field for IfuncheckeduserText property
        /// </summary>
        private Text fIfuncheckeduserText;

        /// <summary>
        /// Backing field for AutomaticallysiDup0CheckBox property
        /// </summary>
        private CheckBox fAutomaticallysiDup0CheckBox;

        /// <summary>
        /// Backing field for IfcheckeduserswDup0Text property
        /// </summary>
        private Text fIfcheckeduserswDup0Text;

        /// <summary>
        /// Backing field for JobStatusScreenGroup property
        /// </summary>
        private Group fJobStatusScreenGroup;

        /// <summary>
        /// Backing field for JobStatusScreenText property
        /// </summary>
        private Text fJobStatusScreenText;

        /// <summary>
        /// Backing field for AutomaticallysiDup1CheckBox property
        /// </summary>
        private CheckBox fAutomaticallysiDup1CheckBox;

        /// <summary>
        /// Backing field for AutomaticallysiText property
        /// </summary>
        private Text fAutomaticallysiText;

        /// <summary>
        /// Backing field for IfcheckeduserswDup1Text property
        /// </summary>
        private Text fIfcheckeduserswDup1Text;

        /// <summary>
        /// Backing field for SignoutimmediatRadioButton property
        /// </summary>
        private RadioButton fSignoutimmediatRadioButton;

        /// <summary>
        /// Backing field for Signoutafter10sRadioButton property
        /// </summary>
        private RadioButton fSignoutafter10sRadioButton;

        /// <summary>
        /// Backing field for ScrollBarVerticScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticScrollBar;

        /// <summary>
        /// Backing field for RepeatButtonPARDup0Button property
        /// </summary>
        private Button fRepeatButtonPARDup0Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup0Button property
        /// </summary>
        private Button fRepeatButtonPagDup0Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup1Button property
        /// </summary>
        private Button fRepeatButtonPagDup1Button;

        /// <summary>
        /// Backing field for ThumbDup0Thumb property
        /// </summary>
        private Thumb fThumbDup0Thumb;

        /// <summary>
        /// Backing field for RepeatButtonPARDup1Button property
        /// </summary>
        private Button fRepeatButtonPARDup1Button;

        /// <summary>
        /// Backing field for ScrollBarHorizoScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoScrollBar;

        /// <summary>
        /// Backing field for RepeatButtonPARDup2Button property
        /// </summary>
        private Button fRepeatButtonPARDup2Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup2Button property
        /// </summary>
        private Button fRepeatButtonPagDup2Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup3Button property
        /// </summary>
        private Button fRepeatButtonPagDup3Button;

        /// <summary>
        /// Backing field for ThumbDup1Thumb property
        /// </summary>
        private Thumb fThumbDup1Thumb;

        /// <summary>
        /// Backing field for RepeatButtonPARDup3Button property
        /// </summary>
        private Button fRepeatButtonPARDup3Button;

        /// <summary>
        /// Backing field for SystemWindowsCoDup2TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup2TabItem;

        /// <summary>
        /// Backing field for SendtoEmailTextDup0Text property
        /// </summary>
        private Text fSendtoEmailTextDup0Text;

        /// <summary>
        /// Backing field for SendtoEmailTextDup1Text property
        /// </summary>
        private Text fSendtoEmailTextDup1Text;

        /// <summary>
        /// Backing field for Text265ea8f2a5fText property
        /// </summary>
        private Text fText265ea8f2a5fText;

        /// <summary>
        /// Backing field for Text1a251d5f398Text property
        /// </summary>
        private Text fText1a251d5f398Text;

        /// <summary>
        /// Backing field for ProgressBara2e8ProgressBar property
        /// </summary>
        private ProgressBar fProgressBara2e8ProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup3TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup3TabItem;

        /// <summary>
        /// Backing field for FaxTextmFaxTabLI0XText property
        /// </summary>
        private Text fFaxTextmFaxTabLI0XText;

        /// <summary>
        /// Backing field for FaxTextBlockI0XText property
        /// </summary>
        private Text fFaxTextBlockI0XText;

        /// <summary>
        /// Backing field for Text105C9A93254Text property
        /// </summary>
        private Text fText105C9A93254Text;

        /// <summary>
        /// Backing field for Text25DD30D682EText property
        /// </summary>
        private Text fText25DD30D682EText;

        /// <summary>
        /// Backing field for ProgressBare99cProgressBar property
        /// </summary>
        private ProgressBar fProgressBare99cProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup4TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup4TabItem;

        /// <summary>
        /// Backing field for SendtoFolderTexI0XDup0Text property
        /// </summary>
        private Text fSendtoFolderTexI0XDup0Text;

        /// <summary>
        /// Backing field for SendtoFolderTexI0XDup1Text property
        /// </summary>
        private Text fSendtoFolderTexI0XDup1Text;

        /// <summary>
        /// Backing field for Texta7a758d4d75Text property
        /// </summary>
        private Text fTexta7a758d4d75Text;

        /// <summary>
        /// Backing field for Texte95b3491f6bText property
        /// </summary>
        private Text fTexte95b3491f6bText;

        /// <summary>
        /// Backing field for ProgressBar9a14ProgressBar property
        /// </summary>
        private ProgressBar fProgressBar9a14ProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup5TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup5TabItem;

        /// <summary>
        /// Backing field for SendtoWorkflowsDup0Text property
        /// </summary>
        private Text fSendtoWorkflowsDup0Text;

        /// <summary>
        /// Backing field for SendtoWorkflowsDup1Text property
        /// </summary>
        private Text fSendtoWorkflowsDup1Text;

        /// <summary>
        /// Backing field for TextAA63352F914Text property
        /// </summary>
        private Text fTextAA63352F914Text;

        /// <summary>
        /// Backing field for TextB31E1B768A7Text property
        /// </summary>
        private Text fTextB31E1B768A7Text;

        /// <summary>
        /// Backing field for ProgressBar55dfProgressBar property
        /// </summary>
        private ProgressBar fProgressBar55dfProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup6TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup6TabItem;

        /// <summary>
        /// Backing field for SendtoSharePoinDup0Text property
        /// </summary>
        private Text fSendtoSharePoinDup0Text;

        /// <summary>
        /// Backing field for SendtoSharePoinDup1Text property
        /// </summary>
        private Text fSendtoSharePoinDup1Text;

        /// <summary>
        /// Backing field for Text348fa329f78Text property
        /// </summary>
        private Text fText348fa329f78Text;

        /// <summary>
        /// Backing field for Text4bfa1a11126Text property
        /// </summary>
        private Text fText4bfa1a11126Text;

        /// <summary>
        /// Backing field for ProgressBard093ProgressBar property
        /// </summary>
        private ProgressBar fProgressBard093ProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup7TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup7TabItem;

        /// <summary>
        /// Backing field for AddressingTextmI0XText property
        /// </summary>
        private Text fAddressingTextmI0XText;

        /// <summary>
        /// Backing field for AddressingTextBI0XText property
        /// </summary>
        private Text fAddressingTextBI0XText;

        /// <summary>
        /// Backing field for Text7a57f43ecb1I0XText property
        /// </summary>
        private Text fText7a57f43ecb1I0XText;

        /// <summary>
        /// Backing field for Text654b650dd19I0XText property
        /// </summary>
        private Text fText654b650dd19I0XText;

        /// <summary>
        /// Backing field for ProgressBar15a0ProgressBar property
        /// </summary>
        private ProgressBar fProgressBar15a0ProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup8TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup8TabItem;

        /// <summary>
        /// Backing field for LogTextmLogTabLText property
        /// </summary>
        private Text fLogTextmLogTabLText;

        /// <summary>
        /// Backing field for LogTextBlockDup0Text property
        /// </summary>
        private Text fLogTextBlockDup0Text;

        /// <summary>
        /// Backing field for ProgressBarA997ProgressBar property
        /// </summary>
        private ProgressBar fProgressBarA997ProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup9TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup9TabItem;

        /// <summary>
        /// Backing field for HPDigitalSendinTitleBar property
        /// </summary>
        private TitleBar fHPDigitalSendinTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyDup1MenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyDup1MenuBar;

        /// <summary>
        /// Backing field for SystemItem1I1XMenuItem property
        /// </summary>
        private MenuItem fSystemItem1I1XMenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizDup1Button property
        /// </summary>
        private Button fMinimizeMinimizDup1Button;

        /// <summary>
        /// Backing field for MaximizeMaximizDup1Button property
        /// </summary>
        private Button fMaximizeMaximizDup1Button;

        /// <summary>
        /// Backing field for CloseCloseDup1Button property
        /// </summary>
        private Button fCloseCloseDup1Button;

        /// <summary>
        /// Backing field for HelpButtonCB8CFButton property
        /// </summary>
        private Button fHelpButtonCB8CFButton;

        /// <summary>
        /// Backing field for HelpTextBlockDup1Text property
        /// </summary>
        private Text fHelpTextBlockDup1Text;

        /// <summary>
        /// Backing field for ApplyButton61E2Button property
        /// </summary>
        private Button fApplyButton61E2Button;

        /// <summary>
        /// Backing field for ApplyTextBlockDup1Text property
        /// </summary>
        private Text fApplyTextBlockDup1Text;

        /// <summary>
        /// Backing field for CancelButton65CButton property
        /// </summary>
        private Button fCancelButton65CButton;

        /// <summary>
        /// Backing field for CancelTextBlockDup1Text property
        /// </summary>
        private Text fCancelTextBlockDup1Text;

        /// <summary>
        /// Backing field for OKButtonCC2EF49Button property
        /// </summary>
        private Button fOKButtonCC2EF49Button;

        /// <summary>
        /// Backing field for OKTextBlockDup1Text property
        /// </summary>
        private Text fOKTextBlockDup1Text;

        /// <summary>
        /// Backing field for TabControlec0fdTab property
        /// </summary>
        private Tab fTabControlec0fdTab;

        /// <summary>
        /// Backing field for SystemWindowsCoDup10TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup10TabItem;

        /// <summary>
        /// Backing field for GeneralTextmGenI1XText property
        /// </summary>
        private Text fGeneralTextmGenI1XText;

        /// <summary>
        /// Backing field for GeneralTextBlocI1XText property
        /// </summary>
        private Text fGeneralTextBlocI1XText;

        /// <summary>
        /// Backing field for Text933345b04e3Text property
        /// </summary>
        private Text fText933345b04e3Text;

        /// <summary>
        /// Backing field for Text786caf67344Text property
        /// </summary>
        private Text fText786caf67344Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup11TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup11TabItem;

        /// <summary>
        /// Backing field for AuthenticationTI1XDup0Text property
        /// </summary>
        private Text fAuthenticationTI1XDup0Text;

        /// <summary>
        /// Backing field for AuthenticationTI1XDup1Text property
        /// </summary>
        private Text fAuthenticationTI1XDup1Text;

        /// <summary>
        /// Backing field for Text31EC91730B9Text property
        /// </summary>
        private Text fText31EC91730B9Text;

        /// <summary>
        /// Backing field for TextA479C271445Text property
        /// </summary>
        private Text fTextA479C271445Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup12TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup12TabItem;

        /// <summary>
        /// Backing field for EmailTextmEmailText property
        /// </summary>
        private Text fEmailTextmEmailText;

        /// <summary>
        /// Backing field for EmailTextBlockText property
        /// </summary>
        private Text fEmailTextBlockText;

        /// <summary>
        /// Backing field for Text32de714a8bdText property
        /// </summary>
        private Text fText32de714a8bdText;

        /// <summary>
        /// Backing field for Text3b2a8761f4fText property
        /// </summary>
        private Text fText3b2a8761f4fText;

        /// <summary>
        /// Backing field for TextBlockDup1Text property
        /// </summary>
        private Text fTextBlockDup1Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup13TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup13TabItem;

        /// <summary>
        /// Backing field for FaxTextmFaxTabLI1XText property
        /// </summary>
        private Text fFaxTextmFaxTabLI1XText;

        /// <summary>
        /// Backing field for FaxTextBlockI1XText property
        /// </summary>
        private Text fFaxTextBlockI1XText;

        /// <summary>
        /// Backing field for TextD1ED4F16F38Text property
        /// </summary>
        private Text fTextD1ED4F16F38Text;

        /// <summary>
        /// Backing field for Text7DDE04FD251Text property
        /// </summary>
        private Text fText7DDE04FD251Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup14TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup14TabItem;

        /// <summary>
        /// Backing field for SendtoFolderTexI1XDup0Text property
        /// </summary>
        private Text fSendtoFolderTexI1XDup0Text;

        /// <summary>
        /// Backing field for SendtoFolderTexI1XDup1Text property
        /// </summary>
        private Text fSendtoFolderTexI1XDup1Text;

        /// <summary>
        /// Backing field for Text7a57f43ecb1I1XText property
        /// </summary>
        private Text fText7a57f43ecb1I1XText;

        /// <summary>
        /// Backing field for Text654b650dd19I1XText property
        /// </summary>
        private Text fText654b650dd19I1XText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup15TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup15TabItem;

        /// <summary>
        /// Backing field for WorkflowsTextmWText property
        /// </summary>
        private Text fWorkflowsTextmWText;

        /// <summary>
        /// Backing field for WorkflowsTextBlText property
        /// </summary>
        private Text fWorkflowsTextBlText;

        /// <summary>
        /// Backing field for Text22D9C34E84CText property
        /// </summary>
        private Text fText22D9C34E84CText;

        /// <summary>
        /// Backing field for TextC8D15BD39C8Text property
        /// </summary>
        private Text fTextC8D15BD39C8Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup16TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup16TabItem;

        /// <summary>
        /// Backing field for AddressingTextmI1XText property
        /// </summary>
        private Text fAddressingTextmI1XText;

        /// <summary>
        /// Backing field for AddressingTextBI1XText property
        /// </summary>
        private Text fAddressingTextBI1XText;

        /// <summary>
        /// Backing field for Text47EB5CBA4D1Text property
        /// </summary>
        private Text fText47EB5CBA4D1Text;

        /// <summary>
        /// Backing field for Text0757E148179Text property
        /// </summary>
        private Text fText0757E148179Text;

        /// <summary>
        /// Backing field for DeviceConfiguraTabItem property
        /// </summary>
        private TabItem fDeviceConfiguraTabItem;

        /// <summary>
        /// Backing field for DeviceConfiguraText property
        /// </summary>
        private Text fDeviceConfiguraText;

        /// <summary>
        /// Backing field for ServiceConfigurCustom property
        /// </summary>
        private Custom fServiceConfigurCustom;

        /// <summary>
        /// Backing field for GroupListText property
        /// </summary>
        private Text fGroupListText;

        /// <summary>
        /// Backing field for GroupListTextBlText property
        /// </summary>
        private Text fGroupListTextBlText;

        /// <summary>
        /// Backing field for DeviceGroupsText property
        /// </summary>
        private Text fDeviceGroupsText;

        /// <summary>
        /// Backing field for DeviceGroupsTexText property
        /// </summary>
        private Text fDeviceGroupsTexText;

        /// <summary>
        /// Backing field for TreeView1416BDETree property
        /// </summary>
        private Tree fTreeView1416BDETree;

        /// <summary>
        /// Backing field for AllDevicesTreeVTreeItem property
        /// </summary>
        private TreeItem fAllDevicesTreeVTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup0Button property
        /// </summary>
        private Button fButtonExpanderDup0Button;

        /// <summary>
        /// Backing field for AllDevicesTextBText property
        /// </summary>
        private Text fAllDevicesTextBText;

        /// <summary>
        /// Backing field for MatungaTreeViewTreeItem property
        /// </summary>
        private TreeItem fMatungaTreeViewTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup1Button property
        /// </summary>
        private Button fButtonExpanderDup1Button;

        /// <summary>
        /// Backing field for MatungaTextBlocText property
        /// </summary>
        private Text fMatungaTextBlocText;

        /// <summary>
        /// Backing field for OmniTreeViewIteTreeItem property
        /// </summary>
        private TreeItem fOmniTreeViewIteTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup2Button property
        /// </summary>
        private Button fButtonExpanderDup2Button;

        /// <summary>
        /// Backing field for OmniTextBlockText property
        /// </summary>
        private Text fOmniTextBlockText;

        /// <summary>
        /// Backing field for OmniFlatuTreeViTreeItem property
        /// </summary>
        private TreeItem fOmniFlatuTreeViTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup3Button property
        /// </summary>
        private Button fButtonExpanderDup3Button;

        /// <summary>
        /// Backing field for OmniFlatuTextBlText property
        /// </summary>
        private Text fOmniFlatuTextBlText;

        /// <summary>
        /// Backing field for AddGroupButtonFButton property
        /// </summary>
        private Button fAddGroupButtonFButton;

        /// <summary>
        /// Backing field for AddGroupTextBloText property
        /// </summary>
        private Text fAddGroupTextBloText;

        /// <summary>
        /// Backing field for RemoveGroupButtButton property
        /// </summary>
        private Button fRemoveGroupButtButton;

        /// <summary>
        /// Backing field for RemoveGroupTextText property
        /// </summary>
        private Text fRemoveGroupTextText;

        /// <summary>
        /// Backing field for RenameButton261Button property
        /// </summary>
        private Button fRenameButton261Button;

        /// <summary>
        /// Backing field for RenameTextBlockText property
        /// </summary>
        private Text fRenameTextBlockText;

        /// <summary>
        /// Backing field for GridSplitterThumb property
        /// </summary>
        private Thumb fGridSplitterThumb;

        /// <summary>
        /// Backing field for DeviceListText property
        /// </summary>
        private Text fDeviceListText;

        /// <summary>
        /// Backing field for DeviceListTextBText property
        /// </summary>
        private Text fDeviceListTextBText;

        /// <summary>
        /// Backing field for ListView141cb8bDataGrid property
        /// </summary>
        private DataGrid fListView141cb8bDataGrid;

        /// <summary>
        /// Backing field for GridViewHeaderRHeader property
        /// </summary>
        private Header fGridViewHeaderRHeader;

        /// <summary>
        /// Backing field for StatusGridViewCHeaderItem property
        /// </summary>
        private HeaderItem fStatusGridViewCHeaderItem;

        /// <summary>
        /// Backing field for StatusTextBlockText property
        /// </summary>
        private Text fStatusTextBlockText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup0Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup0Thumb;

        /// <summary>
        /// Backing field for NameGridViewColHeaderItem property
        /// </summary>
        private HeaderItem fNameGridViewColHeaderItem;

        /// <summary>
        /// Backing field for NameTextBlockText property
        /// </summary>
        private Text fNameTextBlockText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup1Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup1Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup0HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup0HeaderItem;

        /// <summary>
        /// Backing field for ImageI0XImage property
        /// </summary>
        private Image fImageI0XImage;

        /// <summary>
        /// Backing field for ThumbPARTHeadeI0XThumb property
        /// </summary>
        private Thumb fThumbPARTHeadeI0XThumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup1HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup1HeaderItem;

        /// <summary>
        /// Backing field for ImageI1XImage property
        /// </summary>
        private Image fImageI1XImage;

        /// <summary>
        /// Backing field for ThumbPARTHeadeI1XThumb property
        /// </summary>
        private Thumb fThumbPARTHeadeI1XThumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup2HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup2HeaderItem;

        /// <summary>
        /// Backing field for ImageI2XImage property
        /// </summary>
        private Image fImageI2XImage;

        /// <summary>
        /// Backing field for ThumbPARTHeadeI2XThumb property
        /// </summary>
        private Thumb fThumbPARTHeadeI2XThumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup3HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup3HeaderItem;

        /// <summary>
        /// Backing field for ImageI3XImage property
        /// </summary>
        private Image fImageI3XImage;

        /// <summary>
        /// Backing field for ThumbPARTHeadeI3XThumb property
        /// </summary>
        private Thumb fThumbPARTHeadeI3XThumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup4HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup4HeaderItem;

        /// <summary>
        /// Backing field for ImageI4XImage property
        /// </summary>
        private Image fImageI4XImage;

        /// <summary>
        /// Backing field for ThumbPARTHeadeI4XThumb property
        /// </summary>
        private Thumb fThumbPARTHeadeI4XThumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup5HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup5HeaderItem;

        /// <summary>
        /// Backing field for ImageI5XImage property
        /// </summary>
        private Image fImageI5XImage;

        /// <summary>
        /// Backing field for ThumbPARTHeadeI5XThumb property
        /// </summary>
        private Thumb fThumbPARTHeadeI5XThumb;

        /// <summary>
        /// Backing field for ModelGridViewCoHeaderItem property
        /// </summary>
        private HeaderItem fModelGridViewCoHeaderItem;

        /// <summary>
        /// Backing field for ModelTextBlockText property
        /// </summary>
        private Text fModelTextBlockText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup2Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup2Thumb;

        /// <summary>
        /// Backing field for IPAddressGridViHeaderItem property
        /// </summary>
        private HeaderItem fIPAddressGridViHeaderItem;

        /// <summary>
        /// Backing field for IPAddressTextBlText property
        /// </summary>
        private Text fIPAddressTextBlText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup3Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup3Thumb;

        /// <summary>
        /// Backing field for HostnameGridVieHeaderItem property
        /// </summary>
        private HeaderItem fHostnameGridVieHeaderItem;

        /// <summary>
        /// Backing field for HostnameTextBloText property
        /// </summary>
        private Text fHostnameTextBloText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup4Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup4Thumb;

        /// <summary>
        /// Backing field for DescriptionGridHeaderItem property
        /// </summary>
        private HeaderItem fDescriptionGridHeaderItem;

        /// <summary>
        /// Backing field for DescriptionTextText property
        /// </summary>
        private Text fDescriptionTextText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup5Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup5Thumb;

        /// <summary>
        /// Backing field for FirmwareGridVieHeaderItem property
        /// </summary>
        private HeaderItem fFirmwareGridVieHeaderItem;

        /// <summary>
        /// Backing field for FirmwareTextBloText property
        /// </summary>
        private Text fFirmwareTextBloText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup6Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup6Thumb;

        /// <summary>
        /// Backing field for bound157720325eDataItem property
        /// </summary>
        private DataItem fbound157720325eDataItem;

        /// <summary>
        /// Backing field for ContentPresenteI0XCustom property
        /// </summary>
        private Custom fContentPresenteI0XCustom;

        /// <summary>
        /// Backing field for Image84ACE29E0AImage property
        /// </summary>
        private Image fImage84ACE29E0AImage;

        /// <summary>
        /// Backing field for WaitSpinnerUserCustom property
        /// </summary>
        private Custom fWaitSpinnerUserCustom;

        /// <summary>
        /// Backing field for ImagemWaitSpinnImage property
        /// </summary>
        private Image fImagemWaitSpinnImage;

        /// <summary>
        /// Backing field for HPLaserJetFlowMI0XText property
        /// </summary>
        private Text fHPLaserJetFlowMI0XText;

        /// <summary>
        /// Backing field for ContentPresenteI1XCustom property
        /// </summary>
        private Custom fContentPresenteI1XCustom;

        /// <summary>
        /// Backing field for Image844100985AImage property
        /// </summary>
        private Image fImage844100985AImage;

        /// <summary>
        /// Backing field for ContentPresenteI2XCustom property
        /// </summary>
        private Custom fContentPresenteI2XCustom;

        /// <summary>
        /// Backing field for Image20F9A92A96Image property
        /// </summary>
        private Image fImage20F9A92A96Image;

        /// <summary>
        /// Backing field for ContentPresenteI3XCustom property
        /// </summary>
        private Custom fContentPresenteI3XCustom;

        /// <summary>
        /// Backing field for ImageCA1843E8BFImage property
        /// </summary>
        private Image fImageCA1843E8BFImage;

        /// <summary>
        /// Backing field for ContentPresenteI4XCustom property
        /// </summary>
        private Custom fContentPresenteI4XCustom;

        /// <summary>
        /// Backing field for ImageE24499D7C0Image property
        /// </summary>
        private Image fImageE24499D7C0Image;

        /// <summary>
        /// Backing field for ContentPresenteI5XCustom property
        /// </summary>
        private Custom fContentPresenteI5XCustom;

        /// <summary>
        /// Backing field for Image86A371F7F4Image property
        /// </summary>
        private Image fImage86A371F7F4Image;

        /// <summary>
        /// Backing field for ContentPresenteI6XCustom property
        /// </summary>
        private Custom fContentPresenteI6XCustom;

        /// <summary>
        /// Backing field for Image1D2DC29B85Image property
        /// </summary>
        private Image fImage1D2DC29B85Image;

        /// <summary>
        /// Backing field for HPLaserJetFlowMI1XText property
        /// </summary>
        private Text fHPLaserJetFlowMI1XText;

        /// <summary>
        /// Backing field for A157720325TextBText property
        /// </summary>
        private Text fA157720325TextBText;

        /// <summary>
        /// Backing field for TextBlockDup2Text property
        /// </summary>
        private Text fTextBlockDup2Text;

        /// <summary>
        /// Backing field for HPLaserJetFlowMI2XText property
        /// </summary>
        private Text fHPLaserJetFlowMI2XText;

        /// <summary>
        /// Backing field for FutureSmart4BetText property
        /// </summary>
        private Text fFutureSmart4BetText;

        /// <summary>
        /// Backing field for AddDeviceButtonButton property
        /// </summary>
        private Button fAddDeviceButtonButton;

        /// <summary>
        /// Backing field for AddDeviceTextBlText property
        /// </summary>
        private Text fAddDeviceTextBlText;

        /// <summary>
        /// Backing field for ExportButtonef5Button property
        /// </summary>
        private Button fExportButtonef5Button;

        /// <summary>
        /// Backing field for ExportTextBlockText property
        /// </summary>
        private Text fExportTextBlockText;

        /// <summary>
        /// Backing field for RemoveDeviceButButton property
        /// </summary>
        private Button fRemoveDeviceButButton;

        /// <summary>
        /// Backing field for RemoveDeviceTexText property
        /// </summary>
        private Text fRemoveDeviceTexText;

        /// <summary>
        /// Backing field for ImportButtona69Button property
        /// </summary>
        private Button fImportButtona69Button;

        /// <summary>
        /// Backing field for ImportTextBlockText property
        /// </summary>
        private Text fImportTextBlockText;

        /// <summary>
        /// Backing field for CreateTemplateBButton property
        /// </summary>
        private Button fCreateTemplateBButton;

        /// <summary>
        /// Backing field for CreateTemplateTText property
        /// </summary>
        private Text fCreateTemplateTText;

        /// <summary>
        /// Backing field for DeviceSignInButButton property
        /// </summary>
        private Button fDeviceSignInButButton;

        /// <summary>
        /// Backing field for DeviceSignInTexText property
        /// </summary>
        private Text fDeviceSignInTexText;

        /// <summary>
        /// Backing field for TotalDevicesText property
        /// </summary>
        private Text fTotalDevicesText;

        /// <summary>
        /// Backing field for TotalDevicesTexText property
        /// </summary>
        private Text fTotalDevicesTexText;

        /// <summary>
        /// Backing field for A1Text82f844376Text property
        /// </summary>
        private Text fA1Text82f844376Text;

        /// <summary>
        /// Backing field for A1TextBlockText property
        /// </summary>
        private Text fA1TextBlockText;

        /// <summary>
        /// Backing field for ConfigureDeviceButton property
        /// </summary>
        private Button fConfigureDeviceButton;

        /// <summary>
        /// Backing field for ConfigureDeviceText property
        /// </summary>
        private Text fConfigureDeviceText;

        /// <summary>
        /// Backing field for TemplateConfiguTabItem property
        /// </summary>
        private TabItem fTemplateConfiguTabItem;

        /// <summary>
        /// Backing field for TemplateConfiguText property
        /// </summary>
        private Text fTemplateConfiguText;

        /// <summary>
        /// Backing field for LogTabItem9b4f3TabItem property
        /// </summary>
        private TabItem fLogTabItem9b4f3TabItem;

        /// <summary>
        /// Backing field for LogTextBlockDup1Text property
        /// </summary>
        private Text fLogTextBlockDup1Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup17TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup17TabItem;

        /// <summary>
        /// Backing field for SecurityTextmSeText property
        /// </summary>
        private Text fSecurityTextmSeText;

        /// <summary>
        /// Backing field for SecurityTextBloDup1Text property
        /// </summary>
        private Text fSecurityTextBloDup1Text;

        /// <summary>
        /// Backing field for Text8A7A84DB894Text property
        /// </summary>
        private Text fText8A7A84DB894Text;

        /// <summary>
        /// Backing field for Text16F78FB18FFText property
        /// </summary>
        private Text fText16F78FB18FFText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup18TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup18TabItem;

        /// <summary>
        /// Backing field for AnalyticsTextmAText property
        /// </summary>
        private Text fAnalyticsTextmAText;

        /// <summary>
        /// Backing field for AnalyticsTextBlText property
        /// </summary>
        private Text fAnalyticsTextBlText;

        /// <summary>
        /// Backing field for AboutTabItemf45TabItem property
        /// </summary>
        private TabItem fAboutTabItemf45TabItem;

        /// <summary>
        /// Backing field for AboutTextBlockText property
        /// </summary>
        private Text fAboutTextBlockText;

        /// <summary>
        /// Backing field for Window336E32508Window property
        /// </summary>
        private Window fWindow336E32508Window;

        /// <summary>
        /// Backing field for YesButtonAE4B0CButton property
        /// </summary>
        private Button fYesButtonAE4B0CButton;

        /// <summary>
        /// The Ip Address
        /// </summary>
        private string _address;

        /// <summary>
        /// The Device Address
        /// </summary>
        private string _deviceAddress;

        /// <summary>
        /// The Device Model Name
        /// </summary>
        private string _deviceModelName;

        /// <summary>
        /// Initializes a new instance of the <see cref="DSSConfig_Authentication"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public DSSConfig_Authentication(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DSSConfig_Authentication"/> class using the default UIAFramework.
        /// </summary>
        public DSSConfig_Authentication()
        {
            Desktop = new Desktop();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DSSConfig_Authentication"/> class using the default UIAFramework.
        /// </summary>
        /// <param name="address">
        /// The IP address.
        /// </param>
        public DSSConfig_Authentication(string address)
        {
            Desktop = new Desktop(UIAFramework.ManagedUIA);
            _address = address;
        }

        /// <summary>
        /// Sets the Device Info
        /// </summary>
        /// <param name="deviceAddress">
        /// The device address
        /// </param>
        /// <param name="deviceModelName">
        /// The device Model Name
        /// </param>
        public void SetDeviceInfo(string deviceAddress, string deviceModelName)
        {
            _deviceAddress = deviceAddress;
            _deviceModelName = deviceModelName;
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        /// <summary>
        /// Gets Reference to HPDigitalSendinWindow
        /// </summary>
        public Window HPDigitalSendinWindow
        {
            get
            {
                if (null == fHPDigitalSendinWindow)
                {
                    fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                    fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $"HP Digital Sending Software Configuration (Server IP Address: {_address})");
                }

                return fHPDigitalSendinWindow;
            }
        }

        /// <summary>
        /// Gets Reference to ConfigureDeviceWindow
        /// </summary>
        public Window ConfigureDeviceWindow
        {
            get
            {
                if (null == fConfigureDeviceWindow)
                {
                    fConfigureDeviceWindow = new Window("ConfigureDeviceWindow", HPDigitalSendinWindow);
                    fConfigureDeviceWindow.UIMap.Scope = UIASeachScope.Children;
                    fConfigureDeviceWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fConfigureDeviceWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1fbfa621-ccac-42b3-8f91-9f2632ec1d89");
                    fConfigureDeviceWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $"Configure Device ({_deviceModelName})");
                }

                return fConfigureDeviceWindow;
            }
        }

        /// <summary>
        /// Gets Reference to ConfigureDeviceTitleBar
        /// </summary>
        public TitleBar ConfigureDeviceTitleBar
        {
            get
            {
                if (null == fConfigureDeviceTitleBar)
                {
                    fConfigureDeviceTitleBar = new TitleBar("ConfigureDeviceTitleBar", ConfigureDeviceWindow);
                    fConfigureDeviceTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fConfigureDeviceTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    fConfigureDeviceTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, $"Configure Device ({_deviceModelName})");
                }

                return fConfigureDeviceTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemMenuBarSyDup0MenuBar
        /// </summary>
        public MenuBar SystemMenuBarSyDup0MenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyDup0MenuBar)
                {
                    fSystemMenuBarSyDup0MenuBar = new MenuBar("SystemMenuBarSyDup0MenuBar", ConfigureDeviceTitleBar);
                    fSystemMenuBarSyDup0MenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                }

                return fSystemMenuBarSyDup0MenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemItem1I0XMenuItem
        /// </summary>
        public MenuItem SystemItem1I0XMenuItem
        {
            get
            {
                if (null == fSystemItem1I0XMenuItem)
                {
                    fSystemItem1I0XMenuItem = new MenuItem("SystemItem1I0XMenuItem", SystemMenuBarSyDup0MenuBar);
                    fSystemItem1I0XMenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1I0XMenuItem.UIMap.Index = 0;
                    fSystemItem1I0XMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    fSystemItem1I0XMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                }

                return fSystemItem1I0XMenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to MinimizeMinimizDup0Button
        /// </summary>
        public Button MinimizeMinimizDup0Button
        {
            get
            {
                if (null == fMinimizeMinimizDup0Button)
                {
                    fMinimizeMinimizDup0Button = new Button("MinimizeMinimizDup0Button", ConfigureDeviceTitleBar);
                    fMinimizeMinimizDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                    fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                }

                return fMinimizeMinimizDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to MaximizeMaximizDup0Button
        /// </summary>
        public Button MaximizeMaximizDup0Button
        {
            get
            {
                if (null == fMaximizeMaximizDup0Button)
                {
                    fMaximizeMaximizDup0Button = new Button("MaximizeMaximizDup0Button", ConfigureDeviceTitleBar);
                    fMaximizeMaximizDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                    fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                }

                return fMaximizeMaximizDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to CloseCloseDup0Button
        /// </summary>
        public Button CloseCloseDup0Button
        {
            get
            {
                if (null == fCloseCloseDup0Button)
                {
                    fCloseCloseDup0Button = new Button("CloseCloseDup0Button", ConfigureDeviceTitleBar);
                    fCloseCloseDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                }

                return fCloseCloseDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to HelpButtonfb686Button
        /// </summary>
        public Button HelpButtonfb686Button
        {
            get
            {
                if (null == fHelpButtonfb686Button)
                {
                    fHelpButtonfb686Button = new Button("HelpButtonfb686Button", ConfigureDeviceWindow);
                    fHelpButtonfb686Button.UIMap.Scope = UIASeachScope.Children;
                    fHelpButtonfb686Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fHelpButtonfb686Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"fb68687e-7025-47cb-b1b1-c3df439a2773");
                    fHelpButtonfb686Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpButtonfb686Button;
            }
        }

        /// <summary>
        /// Gets Reference to HelpTextBlockDup0Text
        /// </summary>
        public Text HelpTextBlockDup0Text
        {
            get
            {
                if (null == fHelpTextBlockDup0Text)
                {
                    fHelpTextBlockDup0Text = new Text("HelpTextBlockDup0Text", HelpButtonfb686Button);
                    fHelpTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fHelpTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHelpTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to ApplyButton46D6Button
        /// </summary>
        public Button ApplyButtonFinal
        {
            get
            {
                if (null == fApplyButton46D6Button)
                {
                    fApplyButton46D6Button = new Button("ApplyButton46D6Button", ConfigureDeviceWindow);
                    fApplyButton46D6Button.UIMap.Scope = UIASeachScope.Children;
                    fApplyButton46D6Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fApplyButton46D6Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"46D669A0-F3DB-49c5-B67D-DAE887281B4E");
                    fApplyButton46D6Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyButton46D6Button;
            }
        }

        /// <summary>
        /// Gets Reference to ApplyTextBlockDup0Text
        /// </summary>
        public Text ApplyTextBlockDup0Text
        {
            get
            {
                if (null == fApplyTextBlockDup0Text)
                {
                    fApplyTextBlockDup0Text = new Text("ApplyTextBlockDup0Text", ApplyButtonFinal);
                    fApplyTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fApplyTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fApplyTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to CancelButtoned9Button
        /// </summary>
        public Button CancelButtoned9Button
        {
            get
            {
                if (null == fCancelButtoned9Button)
                {
                    fCancelButtoned9Button = new Button("CancelButtoned9Button", ConfigureDeviceWindow);
                    fCancelButtoned9Button.UIMap.Scope = UIASeachScope.Children;
                    fCancelButtoned9Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButtoned9Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ed9b74ee-24a6-4138-ae44-bdb7b44cffcb");
                    fCancelButtoned9Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelButtoned9Button;
            }
        }

        /// <summary>
        /// Gets Reference to CancelTextBlockDup0Text
        /// </summary>
        public Text CancelTextBlockDup0Text
        {
            get
            {
                if (null == fCancelTextBlockDup0Text)
                {
                    fCancelTextBlockDup0Text = new Text("CancelTextBlockDup0Text", CancelButtoned9Button);
                    fCancelTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fCancelTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCancelTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to OKButton8c9182aButton
        /// </summary>
        public Button OKButton8c9182aButton
        {
            get
            {
                if (null == fOKButton8c9182aButton)
                {
                    fOKButton8c9182aButton = new Button("OKButton8c9182aButton", ConfigureDeviceWindow);
                    fOKButton8c9182aButton.UIMap.Scope = UIASeachScope.Children;
                    fOKButton8c9182aButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButton8c9182aButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8c9182a5-6104-46bc-b6ac-6bc57ec6ea81");
                    fOKButton8c9182aButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKButton8c9182aButton;
            }
        }

        /// <summary>
        /// Gets Reference to OKTextBlockDup0Text
        /// </summary>
        public Text OKTextBlockDup0Text
        {
            get
            {
                if (null == fOKTextBlockDup0Text)
                {
                    fOKTextBlockDup0Text = new Text("OKTextBlockDup0Text", OKButton8c9182aButton);
                    fOKTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to TabControl2111BTab
        /// </summary>
        public Tab TabControl2111BTab
        {
            get
            {
                if (null == fTabControl2111BTab)
                {
                    fTabControl2111BTab = new Tab("TabControl2111BTab", ConfigureDeviceWindow);
                    fTabControl2111BTab.UIMap.Scope = UIASeachScope.Children;
                    fTabControl2111BTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                    fTabControl2111BTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2111B07F-601C-4442-9A43-CAC4268C264A");
                }

                return fTabControl2111BTab;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup0TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup0TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup0TabItem)
                {
                    fSystemWindowsCoDup0TabItem = new TabItem("SystemWindowsCoDup0TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup0TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e0422d26-5fd8-44bc-b019-886f5e135c97");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup0TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralTextmGenI0XText
        /// </summary>
        public Text GeneralTextmGenI0XText
        {
            get
            {
                if (null == fGeneralTextmGenI0XText)
                {
                    fGeneralTextmGenI0XText = new Text("GeneralTextmGenI0XText", SystemWindowsCoDup0TabItem);
                    fGeneralTextmGenI0XText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextmGenI0XText.UIMap.Index = 0;
                    fGeneralTextmGenI0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGeneralTextmGenI0XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                    fGeneralTextmGenI0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextmGenI0XText;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralTextBlocI0XText
        /// </summary>
        public Text GeneralTextBlocI0XText
        {
            get
            {
                if (null == fGeneralTextBlocI0XText)
                {
                    fGeneralTextBlocI0XText = new Text("GeneralTextBlocI0XText", GeneralTextmGenI0XText);
                    fGeneralTextBlocI0XText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextBlocI0XText.UIMap.Index = 0;
                    fGeneralTextBlocI0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGeneralTextBlocI0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextBlocI0XText;
            }
        }

        /// <summary>
        /// Gets Reference to Text9127A6692D0Text
        /// </summary>
        public Text Text9127A6692D0Text
        {
            get
            {
                if (null == fText9127A6692D0Text)
                {
                    fText9127A6692D0Text = new Text("Text9127A6692D0Text", SystemWindowsCoDup0TabItem);
                    fText9127A6692D0Text.UIMap.Scope = UIASeachScope.Children;
                    fText9127A6692D0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText9127A6692D0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9127A669-2D02-477d-B2B0-818B59F1EC24");
                    fText9127A6692D0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText9127A6692D0Text;
            }
        }

        /// <summary>
        /// Gets Reference to ProgressBar836eProgressBar
        /// </summary>
        public ProgressBar ProgressBar836eProgressBar
        {
            get
            {
                if (null == fProgressBar836eProgressBar)
                {
                    fProgressBar836eProgressBar = new ProgressBar("ProgressBar836eProgressBar", SystemWindowsCoDup0TabItem);
                    fProgressBar836eProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBar836eProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBar836eProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"836e39c4-f336-411d-b4bf-7ce21bd659a1");
                }

                return fProgressBar836eProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup1TabItem
        /// </summary>
        public TabItem AuthenticationTabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup1TabItem)
                {
                    fSystemWindowsCoDup1TabItem = new TabItem("SystemWindowsCoDup1TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup1TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1cc57c14-8994-43b6-9870-5199757f8fc4");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup1TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationTI0XDup0Text
        /// </summary>
        public Text AuthenticationTI0XDup0Text
        {
            get
            {
                if (null == fAuthenticationTI0XDup0Text)
                {
                    fAuthenticationTI0XDup0Text = new Text("AuthenticationTI0XDup0Text", AuthenticationTabItem);
                    fAuthenticationTI0XDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTI0XDup0Text.UIMap.Index = 0;
                    fAuthenticationTI0XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAuthenticationTI0XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                    fAuthenticationTI0XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTI0XDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationTI0XDup1Text
        /// </summary>
        public Text AuthenticationTI0XDup1Text
        {
            get
            {
                if (null == fAuthenticationTI0XDup1Text)
                {
                    fAuthenticationTI0XDup1Text = new Text("AuthenticationTI0XDup1Text", AuthenticationTI0XDup0Text);
                    fAuthenticationTI0XDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTI0XDup1Text.UIMap.Index = 0;
                    fAuthenticationTI0XDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAuthenticationTI0XDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTI0XDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text2087FBF2200Text
        /// </summary>
        public Text Text2087FBF2200Text
        {
            get
            {
                if (null == fText2087FBF2200Text)
                {
                    fText2087FBF2200Text = new Text("Text2087FBF2200Text", AuthenticationTabItem);
                    fText2087FBF2200Text.UIMap.Scope = UIASeachScope.Children;
                    fText2087FBF2200Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText2087FBF2200Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2087FBF2-200E-4f1e-9B53-80F1D9CF632A");
                    fText2087FBF2200Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText2087FBF2200Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text3C0A7A0B490Text
        /// </summary>
        public Text Text3C0A7A0B490Text
        {
            get
            {
                if (null == fText3C0A7A0B490Text)
                {
                    fText3C0A7A0B490Text = new Text("Text3C0A7A0B490Text", AuthenticationTabItem);
                    fText3C0A7A0B490Text.UIMap.Scope = UIASeachScope.Children;
                    fText3C0A7A0B490Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText3C0A7A0B490Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3C0A7A0B-490D-4539-B6B3-66DD241D05EE");
                    fText3C0A7A0B490Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText3C0A7A0B490Text;
            }
        }

        /// <summary>
        /// Gets Reference to ProgressBar992dProgressBar
        /// </summary>
        public ProgressBar AuthenticationTabProgressBar
        {
            get
            {
                if (null == fProgressBar992dProgressBar)
                {
                    fProgressBar992dProgressBar = new ProgressBar("ProgressBar992dProgressBar", AuthenticationTabItem);
                    fProgressBar992dProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBar992dProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBar992dProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"992d5944-26af-4308-aa22-d41cb035a4c7");
                }

                return fProgressBar992dProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to TabStatusUserCoCustom
        /// </summary>
        public Custom TabStatusUserCoCustom
        {
            get
            {
                if (null == fTabStatusUserCoCustom)
                {
                    fTabStatusUserCoCustom = new Custom("TabStatusUserCoCustom", AuthenticationTabItem);
                    fTabStatusUserCoCustom.UIMap.Scope = UIASeachScope.Children;
                    fTabStatusUserCoCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabStatusUserControl");
                    fTabStatusUserCoCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabStatusUserControl");
                }

                return fTabStatusUserCoCustom;
            }
        }

        /// <summary>
        /// Gets Reference to ErrorTextBlockText
        /// </summary>
        public Text ErrorTextBlockText
        {
            get
            {
                if (null == fEnabledTextBlocText)
                {
                    fEnabledTextBlocText = new Text("ErrorTextBlockText", TabStatusUserCoCustom);
                    fEnabledTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fEnabledTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEnabledTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"570af218-7199-4b1c-9820-168d476e74ae");
                }

                return fEnabledTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPane
        /// </summary>
        public Pane ScrollViewerPane
        {
            get
            {
                if (null == fScrollViewerPane)
                {
                    fScrollViewerPane = new Pane("ScrollViewerPane", AuthenticationTabItem);
                    fScrollViewerPane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPane;
            }
        }

        /// <summary>
        /// Gets Reference to MfpConfiguratioCustom
        /// </summary>
        public Custom MfpConfiguratioCustom
        {
            get
            {
                if (null == fMfpConfiguratioCustom)
                {
                    fMfpConfiguratioCustom = new Custom("MfpConfiguratioCustom", ScrollViewerPane);
                    fMfpConfiguratioCustom.UIMap.Scope = UIASeachScope.Children;
                    fMfpConfiguratioCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MfpConfigurationAuthenticationTab");
                    fMfpConfiguratioCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mMfpConfigurationAuthenticationTab");
                }

                return fMfpConfiguratioCustom;
            }
        }

        /// <summary>
        /// Gets Reference to ErrorConflictUsCustom
        /// </summary>
        public Custom ErrorConflictUsCustom
        {
            get
            {
                if (null == fErrorConflictUsCustom)
                {
                    fErrorConflictUsCustom = new Custom("ErrorConflictUsCustom", MfpConfiguratioCustom);
                    fErrorConflictUsCustom.UIMap.Scope = UIASeachScope.Children;
                    fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ErrorConflictUserControl");
                    fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mErrorConflictUserControl");
                }

                return fErrorConflictUsCustom;
            }
        }

        /// <summary>
        /// Gets Reference to CopyDSSAuthentiGroup
        /// </summary>
        public Group CopyDSSAuthentiGroup
        {
            get
            {
                if (null == fCopyDSSAuthentiGroup)
                {
                    fCopyDSSAuthentiGroup = new Group("CopyDSSAuthentiGroup", MfpConfiguratioCustom);
                    fCopyDSSAuthentiGroup.UIMap.Scope = UIASeachScope.Children;
                    fCopyDSSAuthentiGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fCopyDSSAuthentiGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"600e56ed-1df9-4515-9426-81ba2c5197cf");
                    fCopyDSSAuthentiGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Copy DSS Authentication Settings");
                }

                return fCopyDSSAuthentiGroup;
            }
        }

        /// <summary>
        /// Gets Reference to EmbeddedSigninSGroup
        /// </summary>
        public Group EmbeddedSigninSGroup
        {
            get
            {
                if (null == fEmbeddedSigninSGroup)
                {
                    fEmbeddedSigninSGroup = new Group("EmbeddedSigninSGroup", MfpConfiguratioCustom);
                    fEmbeddedSigninSGroup.UIMap.Scope = UIASeachScope.Children;
                    fEmbeddedSigninSGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fEmbeddedSigninSGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4e1a7a3e-784d-4466-8d12-be9d0dac4583");
                    fEmbeddedSigninSGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Embedded Sign-in Setup");
                }

                return fEmbeddedSigninSGroup;
            }
        }

        /// <summary>
        /// Gets Reference to EmbeddedSigninSText
        /// </summary>
        public Text EmbeddedSigninSText
        {
            get
            {
                if (null == fEmbeddedSigninSText)
                {
                    fEmbeddedSigninSText = new Text("EmbeddedSigninSText", EmbeddedSigninSGroup);
                    fEmbeddedSigninSText.UIMap.Scope = UIASeachScope.Children;
                    fEmbeddedSigninSText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEmbeddedSigninSText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Embedded Sign-in Setup");
                }

                return fEmbeddedSigninSText;
            }
        }

        /// <summary>
        /// Gets Reference to WindowsSignInSeGroup
        /// </summary>
        public Group WindowsSignInSeGroup
        {
            get
            {
                if (null == fWindowsSignInSeGroup)
                {
                    fWindowsSignInSeGroup = new Group("WindowsSignInSeGroup", EmbeddedSigninSGroup);
                    fWindowsSignInSeGroup.UIMap.Scope = UIASeachScope.Children;
                    fWindowsSignInSeGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                    fWindowsSignInSeGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a0e8a459-c6f8-4086-a455-6852c09ee6b1");
                    fWindowsSignInSeGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Sign In Setup (Kerberos and NTLM)");
                }

                return fWindowsSignInSeGroup;
            }
        }

        /// <summary>
        /// Gets Reference to WindowsSignInSeButton
        /// </summary>
        public Button WindowsSignInSeButton
        {
            get
            {
                if (null == fWindowsSignInSeButton)
                {
                    fWindowsSignInSeButton = new Button("WindowsSignInSeButton", WindowsSignInSeGroup);
                    fWindowsSignInSeButton.UIMap.Scope = UIASeachScope.Children;
                    fWindowsSignInSeButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fWindowsSignInSeButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                    fWindowsSignInSeButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Sign In Setup (Kerberos and NTLM)");
                }

                return fWindowsSignInSeButton;
            }
        }

        /// <summary>
        /// Gets Reference to WindowsSignInSeText
        /// </summary>
        public Text WindowsSignInSeText
        {
            get
            {
                if (null == fWindowsSignInSeText)
                {
                    fWindowsSignInSeText = new Text("WindowsSignInSeText", WindowsSignInSeButton);
                    fWindowsSignInSeText.UIMap.Scope = UIASeachScope.Children;
                    fWindowsSignInSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fWindowsSignInSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Sign In Setup (Kerberos and NTLM)");
                }

                return fWindowsSignInSeText;
            }
        }

        /// <summary>
        /// Gets Reference to ThisdeviceusesSText
        /// </summary>
        public Text ThisdeviceusesSText
        {
            get
            {
                if (null == fThisdeviceusesSText)
                {
                    fThisdeviceusesSText = new Text("ThisdeviceusesSText", WindowsSignInSeGroup);
                    fThisdeviceusesSText.UIMap.Scope = UIASeachScope.Children;
                    fThisdeviceusesSText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fThisdeviceusesSText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"This device uses Simple and Protected Negotiate (SPNEGO) authentication for Windows Sign In.  Kerberos authentication is attempted first.  If Kerberos is not possible because of the network or device setup, NTLM authentication is used. To help ensure Kerberos authentication, use fully qualified domain names below and make sure the date and time set for this device match that of the Kerberos server.  If Windows is enabled but not the default Sign In Method, it is available by selecting the Advanced button on the Sign In screen at the device.");
                }

                return fThisdeviceusesSText;
            }
        }

        /// <summary>
        /// Gets Reference to EnableWindowsSiCheckBox
        /// </summary>
        public CheckBox EnableWindowsSiCheckBox
        {
            get
            {
                if (null == fEnableWindowsSiCheckBox)
                {
                    fEnableWindowsSiCheckBox = new CheckBox("EnableWindowsSiCheckBox", WindowsSignInSeGroup);
                    fEnableWindowsSiCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEnableWindowsSiCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fEnableWindowsSiCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"403d2330-f0c3-4f01-8b3e-b1628b987045");
                    fEnableWindowsSiCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Windows Sign In (Kerberos and NTLM)");
                }

                return fEnableWindowsSiCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to EnableWindowsSiText
        /// </summary>
        public Text EnableWindowsSiText
        {
            get
            {
                if (null == fEnableWindowsSiText)
                {
                    fEnableWindowsSiText = new Text("EnableWindowsSiText", EnableWindowsSiCheckBox);
                    fEnableWindowsSiText.UIMap.Scope = UIASeachScope.Children;
                    fEnableWindowsSiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEnableWindowsSiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Windows Sign In (Kerberos and NTLM)");
                }

                return fEnableWindowsSiText;
            }
        }

        /// <summary>
        /// Gets Reference to UseasecureconneDup0CheckBox
        /// </summary>
        public CheckBox UseasecureconneDup0CheckBox
        {
            get
            {
                if (null == fUseasecureconneDup0CheckBox)
                {
                    fUseasecureconneDup0CheckBox = new CheckBox("UseasecureconneDup0CheckBox", WindowsSignInSeGroup);
                    fUseasecureconneDup0CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUseasecureconneDup0CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fUseasecureconneDup0CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C38EE421-0A5E-44AF-98BC-ED9F49342F02");
                    fUseasecureconneDup0CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use a secure connection (SSL)");
                }

                return fUseasecureconneDup0CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to UseasecureconneI0XText
        /// </summary>
        public Text UseasecureconneI0XText
        {
            get
            {
                if (null == fUseasecureconneI0XText)
                {
                    fUseasecureconneI0XText = new Text("UseasecureconneI0XText", UseasecureconneDup0CheckBox);
                    fUseasecureconneI0XText.UIMap.Scope = UIASeachScope.Children;
                    fUseasecureconneI0XText.UIMap.Index = 0;
                    fUseasecureconneI0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUseasecureconneI0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use a secure connection (SSL)");
                }

                return fUseasecureconneI0XText;
            }
        }

        /// <summary>
        /// Gets Reference to TrustedDomainsText
        /// </summary>
        public Text TrustedDomainsText
        {
            get
            {
                if (null == fTrustedDomainsText)
                {
                    fTrustedDomainsText = new Text("TrustedDomainsText", WindowsSignInSeGroup);
                    fTrustedDomainsText.UIMap.Scope = UIASeachScope.Children;
                    fTrustedDomainsText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTrustedDomainsText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Trusted Domains");
                }

                return fTrustedDomainsText;
            }
        }

        /// <summary>
        /// Gets Reference to TrustedDomainsTText
        /// </summary>
        public Text TrustedDomainsTText
        {
            get
            {
                if (null == fTrustedDomainsTText)
                {
                    fTrustedDomainsTText = new Text("TrustedDomainsTText", TrustedDomainsText);
                    fTrustedDomainsTText.UIMap.Scope = UIASeachScope.Children;
                    fTrustedDomainsTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTrustedDomainsTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Trusted Domains");
                }

                return fTrustedDomainsTText;
            }
        }

        /// <summary>
        /// Gets Reference to DefaultWindowsDDup0Text
        /// </summary>
        public Text DefaultWindowsDDup0Text
        {
            get
            {
                if (null == fDefaultWindowsDDup0Text)
                {
                    fDefaultWindowsDDup0Text = new Text("DefaultWindowsDDup0Text", WindowsSignInSeGroup);
                    fDefaultWindowsDDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultWindowsDDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDefaultWindowsDDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Windows Domain");
                }

                return fDefaultWindowsDDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to DefaultWindowsDDup1Text
        /// </summary>
        public Text DefaultWindowsDDup1Text
        {
            get
            {
                if (null == fDefaultWindowsDDup1Text)
                {
                    fDefaultWindowsDDup1Text = new Text("DefaultWindowsDDup1Text", DefaultWindowsDDup0Text);
                    fDefaultWindowsDDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultWindowsDDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDefaultWindowsDDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Windows Domain");
                }

                return fDefaultWindowsDDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox5ba504d4Edit
        /// </summary>
        public Edit TrustedDomainEditBox
        {
            get
            {
                if (null == fTextBox5ba504d4Edit)
                {
                    fTextBox5ba504d4Edit = new Edit("TextBox5ba504d4Edit", WindowsSignInSeGroup);
                    fTextBox5ba504d4Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox5ba504d4Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox5ba504d4Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5ba504d4-7582-4109-9292-57272119b112");
                }

                return fTextBox5ba504d4Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup0Pane
        /// </summary>
        public Pane ScrollViewerPARDup0Pane
        {
            get
            {
                if (null == fScrollViewerPARDup0Pane)
                {
                    fScrollViewerPARDup0Pane = new Pane("ScrollViewerPARDup0Pane", TrustedDomainEditBox);
                    fScrollViewerPARDup0Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup0Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticI0XScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticI0XScrollBar
        {
            get
            {
                if (null == fScrollBarVerticI0XScrollBar)
                {
                    fScrollBarVerticI0XScrollBar = new ScrollBar("ScrollBarVerticI0XScrollBar", ScrollViewerPARDup0Pane);
                    fScrollBarVerticI0XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticI0XScrollBar.UIMap.Index = 0;
                    fScrollBarVerticI0XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticI0XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticI0XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoI0XScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoI0XScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoI0XScrollBar)
                {
                    fScrollBarHorizoI0XScrollBar = new ScrollBar("ScrollBarHorizoI0XScrollBar", ScrollViewerPARDup0Pane);
                    fScrollBarHorizoI0XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoI0XScrollBar.UIMap.Index = 0;
                    fScrollBarHorizoI0XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoI0XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoI0XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to AddButtonca3d79Button
        /// </summary>
        public Button TrustedDomainAddButton
        {
            get
            {
                if (null == fAddButtonca3d79Button)
                {
                    fAddButtonca3d79Button = new Button("AddButtonca3d79Button", WindowsSignInSeGroup);
                    fAddButtonca3d79Button.UIMap.Scope = UIASeachScope.Children;
                    fAddButtonca3d79Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddButtonca3d79Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ca3d79e8-883c-4cc6-868f-892b52d308d0");
                    fAddButtonca3d79Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add");
                }

                return fAddButtonca3d79Button;
            }
        }

        /// <summary>
        /// Gets Reference to AddTextBlockText
        /// </summary>
        public Text AddTextBlockText
        {
            get
            {
                if (null == fAddTextBlockText)
                {
                    fAddTextBlockText = new Text("AddTextBlockText", TrustedDomainAddButton);
                    fAddTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fAddTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add");
                }

                return fAddTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ListView536fe9eList
        /// </summary>
        public List ListView536fe9eList
        {
            get
            {
                if (null == fListView536fe9eList)
                {
                    fListView536fe9eList = new List("ListView536fe9eList", WindowsSignInSeGroup);
                    fListView536fe9eList.UIMap.Scope = UIASeachScope.Children;
                    fListView536fe9eList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListView");
                    fListView536fe9eList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"536fe9e1-f6ba-4dd8-8b47-4d39b6b7d00e");
                }

                return fListView536fe9eList;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBox30b8f7fComboBox
        /// </summary>
        public ComboBox ComboBox30b8f7fComboBox
        {
            get
            {
                if (null == fComboBox30b8f7fComboBox)
                {
                    fComboBox30b8f7fComboBox = new ComboBox("ComboBox30b8f7fComboBox", WindowsSignInSeGroup);
                    fComboBox30b8f7fComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox30b8f7fComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox30b8f7fComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"30b8f7f3-7df7-4bf3-924c-f24dad3765b9");
                }

                return fComboBox30b8f7fComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveButton8f8Button
        /// </summary>
        public Button RemoveButton8f8Button
        {
            get
            {
                if (null == fRemoveButton8f8Button)
                {
                    fRemoveButton8f8Button = new Button("RemoveButton8f8Button", WindowsSignInSeGroup);
                    fRemoveButton8f8Button.UIMap.Scope = UIASeachScope.Children;
                    fRemoveButton8f8Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRemoveButton8f8Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8f88609d-b5d2-48e6-9437-89912a87065c");
                    fRemoveButton8f8Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                }

                return fRemoveButton8f8Button;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveTextBlockText
        /// </summary>
        public Text RemoveTextBlockText
        {
            get
            {
                if (null == fRemoveTextBlockText)
                {
                    fRemoveTextBlockText = new Text("RemoveTextBlockText", RemoveButton8f8Button);
                    fRemoveTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fRemoveTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRemoveTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                }

                return fRemoveTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to MatchthenameentDup0Text
        /// </summary>
        public Text MatchthenameentDup0Text
        {
            get
            {
                if (null == fMatchthenameentDup0Text)
                {
                    fMatchthenameentDup0Text = new Text("MatchthenameentDup0Text", WindowsSignInSeGroup);
                    fMatchthenameentDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fMatchthenameentDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fMatchthenameentDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Match the name entered with this attribute");
                }

                return fMatchthenameentDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to MatchthenameentI0XText
        /// </summary>
        public Text MatchthenameentI0XText
        {
            get
            {
                if (null == fMatchthenameentI0XText)
                {
                    fMatchthenameentI0XText = new Text("MatchthenameentI0XText", MatchthenameentDup0Text);
                    fMatchthenameentI0XText.UIMap.Scope = UIASeachScope.Children;
                    fMatchthenameentI0XText.UIMap.Index = 0;
                    fMatchthenameentI0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fMatchthenameentI0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Match the name entered with this attribute");
                }

                return fMatchthenameentI0XText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox390cf360Edit
        /// </summary>
        public Edit TextBox390cf360Edit
        {
            get
            {
                if (null == fTextBox390cf360Edit)
                {
                    fTextBox390cf360Edit = new Edit("TextBox390cf360Edit", WindowsSignInSeGroup);
                    fTextBox390cf360Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox390cf360Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox390cf360Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"390cf360-b62b-4a6f-a4d6-9272f54b5ffd");
                }

                return fTextBox390cf360Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup1Pane
        /// </summary>
        public Pane ScrollViewerPARDup1Pane
        {
            get
            {
                if (null == fScrollViewerPARDup1Pane)
                {
                    fScrollViewerPARDup1Pane = new Pane("ScrollViewerPARDup1Pane", TextBox390cf360Edit);
                    fScrollViewerPARDup1Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup1Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticI1XScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticI1XScrollBar
        {
            get
            {
                if (null == fScrollBarVerticI1XScrollBar)
                {
                    fScrollBarVerticI1XScrollBar = new ScrollBar("ScrollBarVerticI1XScrollBar", ScrollViewerPARDup1Pane);
                    fScrollBarVerticI1XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticI1XScrollBar.UIMap.Index = 1;
                    fScrollBarVerticI1XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticI1XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticI1XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoI1XScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoI1XScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoI1XScrollBar)
                {
                    fScrollBarHorizoI1XScrollBar = new ScrollBar("ScrollBarHorizoI1XScrollBar", ScrollViewerPARDup1Pane);
                    fScrollBarHorizoI1XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoI1XScrollBar.UIMap.Index = 1;
                    fScrollBarHorizoI1XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoI1XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoI1XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievetheuserDup0Text
        /// </summary>
        public Text RetrievetheuserDup0Text
        {
            get
            {
                if (null == fRetrievetheuserDup0Text)
                {
                    fRetrievetheuserDup0Text = new Text("RetrievetheuserDup0Text", WindowsSignInSeGroup);
                    fRetrievetheuserDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fRetrievetheuserDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fRetrievetheuserDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the user's e-mail address using this attribute");
                }

                return fRetrievetheuserDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievetheuserI0XText
        /// </summary>
        public Text RetrievetheuserI0XText
        {
            get
            {
                if (null == fRetrievetheuserI0XText)
                {
                    fRetrievetheuserI0XText = new Text("RetrievetheuserI0XText", RetrievetheuserDup0Text);
                    fRetrievetheuserI0XText.UIMap.Scope = UIASeachScope.Children;
                    fRetrievetheuserI0XText.UIMap.Index = 0;
                    fRetrievetheuserI0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRetrievetheuserI0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the user's e-mail address using this attribute");
                }

                return fRetrievetheuserI0XText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox79183f97Edit
        /// </summary>
        public Edit TextBox79183f97Edit
        {
            get
            {
                if (null == fTextBox79183f97Edit)
                {
                    fTextBox79183f97Edit = new Edit("TextBox79183f97Edit", WindowsSignInSeGroup);
                    fTextBox79183f97Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox79183f97Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox79183f97Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"79183f97-4492-42ab-a044-27918c9d265b");
                }

                return fTextBox79183f97Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup2Pane
        /// </summary>
        public Pane ScrollViewerPARDup2Pane
        {
            get
            {
                if (null == fScrollViewerPARDup2Pane)
                {
                    fScrollViewerPARDup2Pane = new Pane("ScrollViewerPARDup2Pane", TextBox79183f97Edit);
                    fScrollViewerPARDup2Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup2Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticI2XScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticI2XScrollBar
        {
            get
            {
                if (null == fScrollBarVerticI2XScrollBar)
                {
                    fScrollBarVerticI2XScrollBar = new ScrollBar("ScrollBarVerticI2XScrollBar", ScrollViewerPARDup2Pane);
                    fScrollBarVerticI2XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticI2XScrollBar.UIMap.Index = 2;
                    fScrollBarVerticI2XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticI2XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticI2XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoI2XScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoI2XScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoI2XScrollBar)
                {
                    fScrollBarHorizoI2XScrollBar = new ScrollBar("ScrollBarHorizoI2XScrollBar", ScrollViewerPARDup2Pane);
                    fScrollBarHorizoI2XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoI2XScrollBar.UIMap.Index = 2;
                    fScrollBarHorizoI2XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoI2XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoI2XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to TestWindowsSignGroup
        /// </summary>
        public Group TestWindowsSignGroup
        {
            get
            {
                if (null == fTestWindowsSignGroup)
                {
                    fTestWindowsSignGroup = new Group("TestWindowsSignGroup", WindowsSignInSeGroup);
                    fTestWindowsSignGroup.UIMap.Scope = UIASeachScope.Children;
                    fTestWindowsSignGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fTestWindowsSignGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6f5b9946-2c40-44f0-bef2-c1cb515b087a");
                    fTestWindowsSignGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test Windows Sign In");
                }

                return fTestWindowsSignGroup;
            }
        }

        /// <summary>
        /// Gets Reference to TestWindowsSignText
        /// </summary>
        public Text TestWindowsSignText
        {
            get
            {
                if (null == fTestWindowsSignText)
                {
                    fTestWindowsSignText = new Text("TestWindowsSignText", TestWindowsSignGroup);
                    fTestWindowsSignText.UIMap.Scope = UIASeachScope.Children;
                    fTestWindowsSignText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTestWindowsSignText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test Windows Sign In");
                }

                return fTestWindowsSignText;
            }
        }

        /// <summary>
        /// Gets Reference to DomainText
        /// </summary>
        public Text DomainText
        {
            get
            {
                if (null == fDomainText)
                {
                    fDomainText = new Text("DomainText", TestWindowsSignGroup);
                    fDomainText.UIMap.Scope = UIASeachScope.Children;
                    fDomainText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDomainText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Domain");
                }

                return fDomainText;
            }
        }

        /// <summary>
        /// Gets Reference to DomainTextBlockText
        /// </summary>
        public Text DomainTextBlockText
        {
            get
            {
                if (null == fDomainTextBlockText)
                {
                    fDomainTextBlockText = new Text("DomainTextBlockText", DomainText);
                    fDomainTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fDomainTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDomainTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Domain");
                }

                return fDomainTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBox8de5c77ComboBox
        /// </summary>
        public ComboBox ComboBox8de5c77ComboBox
        {
            get
            {
                if (null == fComboBox8de5c77ComboBox)
                {
                    fComboBox8de5c77ComboBox = new ComboBox("ComboBox8de5c77ComboBox", TestWindowsSignGroup);
                    fComboBox8de5c77ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox8de5c77ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox8de5c77ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8de5c778-ad24-4e61-8be5-e4a602a821a9");
                }

                return fComboBox8de5c77ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameDup0Text
        /// </summary>
        public Text UsernameDup0Text
        {
            get
            {
                if (null == fUsernameDup0Text)
                {
                    fUsernameDup0Text = new Text("UsernameDup0Text", TestWindowsSignGroup);
                    fUsernameDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fUsernameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fUsernameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                }

                return fUsernameDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameTextBloI0XText
        /// </summary>
        public Text UsernameTextBloI0XText
        {
            get
            {
                if (null == fUsernameTextBloI0XText)
                {
                    fUsernameTextBloI0XText = new Text("UsernameTextBloI0XText", UsernameDup0Text);
                    fUsernameTextBloI0XText.UIMap.Scope = UIASeachScope.Children;
                    fUsernameTextBloI0XText.UIMap.Index = 0;
                    fUsernameTextBloI0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUsernameTextBloI0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                }

                return fUsernameTextBloI0XText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxdff1de29Edit
        /// </summary>
        public Edit WindowsUserName
        {
            get
            {
                if (null == fTextBoxdff1de29Edit)
                {
                    fTextBoxdff1de29Edit = new Edit("TextBoxdff1de29Edit", TestWindowsSignGroup);
                    fTextBoxdff1de29Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxdff1de29Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBoxdff1de29Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"dff1de29-a261-4ffc-8b7b-380c4520d1b0");
                }

                return fTextBoxdff1de29Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup3Pane
        /// </summary>
        public Pane ScrollViewerPARDup3Pane
        {
            get
            {
                if (null == fScrollViewerPARDup3Pane)
                {
                    fScrollViewerPARDup3Pane = new Pane("ScrollViewerPARDup3Pane", WindowsUserName);
                    fScrollViewerPARDup3Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup3Pane;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordDup0Text
        /// </summary>
        public Text PasswordDup0Text
        {
            get
            {
                if (null == fPasswordDup0Text)
                {
                    fPasswordDup0Text = new Text("PasswordDup0Text", TestWindowsSignGroup);
                    fPasswordDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fPasswordDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fPasswordDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                }

                return fPasswordDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordTextBloI0XText
        /// </summary>
        public Text PasswordTextBloI0XText
        {
            get
            {
                if (null == fPasswordTextBloI0XText)
                {
                    fPasswordTextBloI0XText = new Text("PasswordTextBloI0XText", PasswordDup0Text);
                    fPasswordTextBloI0XText.UIMap.Scope = UIASeachScope.Children;
                    fPasswordTextBloI0XText.UIMap.Index = 0;
                    fPasswordTextBloI0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPasswordTextBloI0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                }

                return fPasswordTextBloI0XText;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordBox5866Edit
        /// </summary>
        public Edit WindowsPasswordEditBox
        {
            get
            {
                if (null == fPasswordBox5866Edit)
                {
                    fPasswordBox5866Edit = new Edit("PasswordBox5866Edit", TestWindowsSignGroup);
                    fPasswordBox5866Edit.UIMap.Scope = UIASeachScope.Children;
                    fPasswordBox5866Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"PasswordBox");
                    fPasswordBox5866Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"58666a90-e8cf-4b76-8175-ec84be69fae5");
                }

                return fPasswordBox5866Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup4Pane
        /// </summary>
        public Pane ScrollViewerPARDup4Pane
        {
            get
            {
                if (null == fScrollViewerPARDup4Pane)
                {
                    fScrollViewerPARDup4Pane = new Pane("ScrollViewerPARDup4Pane", WindowsPasswordEditBox);
                    fScrollViewerPARDup4Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup4Pane;
            }
        }

        /// <summary>
        /// Gets Reference to TestButtonf51a5Button
        /// </summary>
        public Button WindowsTestButton
        {
            get
            {
                if (null == fTestButtonf51a5Button)
                {
                    fTestButtonf51a5Button = new Button("TestButtonf51a5Button", TestWindowsSignGroup);
                    fTestButtonf51a5Button.UIMap.Scope = UIASeachScope.Children;
                    fTestButtonf51a5Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fTestButtonf51a5Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f51a52de-4629-47ae-bc5a-e4d1758cdc97");
                    fTestButtonf51a5Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                }

                return fTestButtonf51a5Button;
            }
        }

        /// <summary>
        /// Gets Reference to TestTextBlockDup0Text
        /// </summary>
        public Text TestTextBlockDup0Text
        {
            get
            {
                if (null == fTestTextBlockDup0Text)
                {
                    fTestTextBlockDup0Text = new Text("TestTextBlockDup0Text", WindowsTestButton);
                    fTestTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fTestTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTestTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                }

                return fTestTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPSignInSetupGroup
        /// </summary>
        public Group LDAPSignInSetupGroup
        {
            get
            {
                if (null == fLDAPSignInSetupGroup)
                {
                    fLDAPSignInSetupGroup = new Group("LDAPSignInSetupGroup", EmbeddedSigninSGroup);
                    fLDAPSignInSetupGroup.UIMap.Scope = UIASeachScope.Children;
                    fLDAPSignInSetupGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                    fLDAPSignInSetupGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"95060601-0527-4fa1-BA73-CF5555B47D86");
                    fLDAPSignInSetupGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Sign In Setup");
                }

                return fLDAPSignInSetupGroup;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPSignInSetupButton
        /// </summary>
        public Button LDAPSignInSetupButton
        {
            get
            {
                if (null == fLDAPSignInSetupButton)
                {
                    fLDAPSignInSetupButton = new Button("LDAPSignInSetupButton", LDAPSignInSetupGroup);
                    fLDAPSignInSetupButton.UIMap.Scope = UIASeachScope.Children;
                    fLDAPSignInSetupButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fLDAPSignInSetupButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                    fLDAPSignInSetupButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Sign In Setup");
                }

                return fLDAPSignInSetupButton;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPSignInSetupText
        /// </summary>
        public Text LDAPSignInSetupText
        {
            get
            {
                if (null == fLDAPSignInSetupText)
                {
                    fLDAPSignInSetupText = new Text("LDAPSignInSetupText", LDAPSignInSetupButton);
                    fLDAPSignInSetupText.UIMap.Scope = UIASeachScope.Children;
                    fLDAPSignInSetupText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLDAPSignInSetupText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Sign In Setup");
                }

                return fLDAPSignInSetupText;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticateusiText
        /// </summary>
        public Text AuthenticateusiText
        {
            get
            {
                if (null == fAuthenticateusiText)
                {
                    fAuthenticateusiText = new Text("AuthenticateusiText", LDAPSignInSetupGroup);
                    fAuthenticateusiText.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticateusiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAuthenticateusiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authenticate using an LDAP directory server. A User Name and Password will be requested.");
                }

                return fAuthenticateusiText;
            }
        }

        /// <summary>
        /// Gets Reference to EnableLDAPSignICheckBox
        /// </summary>
        public CheckBox EnableLDAPSignICheckBox
        {
            get
            {
                if (null == fEnableLDAPSignICheckBox)
                {
                    fEnableLDAPSignICheckBox = new CheckBox("EnableLDAPSignICheckBox", LDAPSignInSetupGroup);
                    fEnableLDAPSignICheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEnableLDAPSignICheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fEnableLDAPSignICheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ca9e9fc7-40af-43e1-8e45-b7fd8048e5e0");
                    fEnableLDAPSignICheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable LDAP Sign In");
                }

                return fEnableLDAPSignICheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to EnableLDAPSignIText
        /// </summary>
        public Text EnableLDAPSignIText
        {
            get
            {
                if (null == fEnableLDAPSignIText)
                {
                    fEnableLDAPSignIText = new Text("EnableLDAPSignIText", EnableLDAPSignICheckBox);
                    fEnableLDAPSignIText.UIMap.Scope = UIASeachScope.Children;
                    fEnableLDAPSignIText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEnableLDAPSignIText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable LDAP Sign In");
                }

                return fEnableLDAPSignIText;
            }
        }

        /// <summary>
        /// Gets Reference to UseasecureconneDup1CheckBox
        /// </summary>
        public CheckBox UseasecureconneDup1CheckBox
        {
            get
            {
                if (null == fUseasecureconneDup1CheckBox)
                {
                    fUseasecureconneDup1CheckBox = new CheckBox("UseasecureconneDup1CheckBox", LDAPSignInSetupGroup);
                    fUseasecureconneDup1CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUseasecureconneDup1CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fUseasecureconneDup1CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5A962248-4C51-4FCF-B085-84C1399E4F75");
                    fUseasecureconneDup1CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use a secure connection (SSL)");
                }

                return fUseasecureconneDup1CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to UseasecureconneI1XText
        /// </summary>
        public Text UseasecureconneI1XText
        {
            get
            {
                if (null == fUseasecureconneI1XText)
                {
                    fUseasecureconneI1XText = new Text("UseasecureconneI1XText", UseasecureconneDup1CheckBox);
                    fUseasecureconneI1XText.UIMap.Scope = UIASeachScope.Children;
                    fUseasecureconneI1XText.UIMap.Index = 1;
                    fUseasecureconneI1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUseasecureconneI1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use a secure connection (SSL)");
                }

                return fUseasecureconneI1XText;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPServerAddreDup0Text
        /// </summary>
        public Text LDAPServerAddreDup0Text
        {
            get
            {
                if (null == fLDAPServerAddreDup0Text)
                {
                    fLDAPServerAddreDup0Text = new Text("LDAPServerAddreDup0Text", LDAPSignInSetupGroup);
                    fLDAPServerAddreDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fLDAPServerAddreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fLDAPServerAddreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Server Address");
                }

                return fLDAPServerAddreDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPServerAddreDup1Text
        /// </summary>
        public Text LDAPServerAddreDup1Text
        {
            get
            {
                if (null == fLDAPServerAddreDup1Text)
                {
                    fLDAPServerAddreDup1Text = new Text("LDAPServerAddreDup1Text", LDAPServerAddreDup0Text);
                    fLDAPServerAddreDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fLDAPServerAddreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLDAPServerAddreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Server Address");
                }

                return fLDAPServerAddreDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox1ef268d2Edit
        /// </summary>
        public Edit LDAPServerAddress
        {
            get
            {
                if (null == fTextBox1ef268d2Edit)
                {
                    fTextBox1ef268d2Edit = new Edit("TextBox1ef268d2Edit", LDAPSignInSetupGroup);
                    fTextBox1ef268d2Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox1ef268d2Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox1ef268d2Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1ef268d2-edbf-43d4-8bda-817706f614fa");
                }

                return fTextBox1ef268d2Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup5Pane
        /// </summary>
        public Pane ScrollViewerPARDup5Pane
        {
            get
            {
                if (null == fScrollViewerPARDup5Pane)
                {
                    fScrollViewerPARDup5Pane = new Pane("ScrollViewerPARDup5Pane", LDAPServerAddress);
                    fScrollViewerPARDup5Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup5Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticI3XScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticI3XScrollBar
        {
            get
            {
                if (null == fScrollBarVerticI3XScrollBar)
                {
                    fScrollBarVerticI3XScrollBar = new ScrollBar("ScrollBarVerticI3XScrollBar", ScrollViewerPARDup5Pane);
                    fScrollBarVerticI3XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticI3XScrollBar.UIMap.Index = 3;
                    fScrollBarVerticI3XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticI3XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticI3XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoI3XScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoI3XScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoI3XScrollBar)
                {
                    fScrollBarHorizoI3XScrollBar = new ScrollBar("ScrollBarHorizoI3XScrollBar", ScrollViewerPARDup5Pane);
                    fScrollBarHorizoI3XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoI3XScrollBar.UIMap.Index = 3;
                    fScrollBarHorizoI3XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoI3XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoI3XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to PortNumberText
        /// </summary>
        public Text PortNumberText
        {
            get
            {
                if (null == fPortNumberText)
                {
                    fPortNumberText = new Text("PortNumberText", LDAPSignInSetupGroup);
                    fPortNumberText.UIMap.Scope = UIASeachScope.Children;
                    fPortNumberText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fPortNumberText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port Number");
                }

                return fPortNumberText;
            }
        }

        /// <summary>
        /// Gets Reference to PortNumberTextBText
        /// </summary>
        public Text PortNumberTextBText
        {
            get
            {
                if (null == fPortNumberTextBText)
                {
                    fPortNumberTextBText = new Text("PortNumberTextBText", PortNumberText);
                    fPortNumberTextBText.UIMap.Scope = UIASeachScope.Children;
                    fPortNumberTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPortNumberTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port Number");
                }

                return fPortNumberTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox122655e2Edit
        /// </summary>
        public Edit PortNumberTextBox
        {
            get
            {
                if (null == fTextBox122655e2Edit)
                {
                    fTextBox122655e2Edit = new Edit("TextBox122655e2Edit", LDAPSignInSetupGroup);
                    fTextBox122655e2Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox122655e2Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox122655e2Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"122655e2-6c39-4c34-a7b9-94d4d9ae09c8");
                }

                return fTextBox122655e2Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup6Pane
        /// </summary>
        public Pane ScrollViewerPARDup6Pane
        {
            get
            {
                if (null == fScrollViewerPARDup6Pane)
                {
                    fScrollViewerPARDup6Pane = new Pane("ScrollViewerPARDup6Pane", PortNumberTextBox);
                    fScrollViewerPARDup6Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup6Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticI4XScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticI4XScrollBar
        {
            get
            {
                if (null == fScrollBarVerticI4XScrollBar)
                {
                    fScrollBarVerticI4XScrollBar = new ScrollBar("ScrollBarVerticI4XScrollBar", ScrollViewerPARDup6Pane);
                    fScrollBarVerticI4XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticI4XScrollBar.UIMap.Index = 4;
                    fScrollBarVerticI4XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticI4XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticI4XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoI4XScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoI4XScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoI4XScrollBar)
                {
                    fScrollBarHorizoI4XScrollBar = new ScrollBar("ScrollBarHorizoI4XScrollBar", ScrollViewerPARDup6Pane);
                    fScrollBarHorizoI4XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoI4XScrollBar.UIMap.Index = 4;
                    fScrollBarHorizoI4XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoI4XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoI4XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to BindPrefixText
        /// </summary>
        public Text BindPrefixText
        {
            get
            {
                if (null == fBindPrefixText)
                {
                    fBindPrefixText = new Text("BindPrefixText", LDAPSignInSetupGroup);
                    fBindPrefixText.UIMap.Scope = UIASeachScope.Children;
                    fBindPrefixText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fBindPrefixText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Bind Prefix");
                }

                return fBindPrefixText;
            }
        }

        /// <summary>
        /// Gets Reference to BindPrefixTextBText
        /// </summary>
        public Text BindPrefixTextBText
        {
            get
            {
                if (null == fBindPrefixTextBText)
                {
                    fBindPrefixTextBText = new Text("BindPrefixTextBText", BindPrefixText);
                    fBindPrefixTextBText.UIMap.Scope = UIASeachScope.Children;
                    fBindPrefixTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fBindPrefixTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Bind Prefix");
                }

                return fBindPrefixTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox0176a98cEdit
        /// </summary>
        public Edit BindPrefixTextBox
        {
            get
            {
                if (null == fTextBox0176a98cEdit)
                {
                    fTextBox0176a98cEdit = new Edit("TextBox0176a98cEdit", LDAPSignInSetupGroup);
                    fTextBox0176a98cEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox0176a98cEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox0176a98cEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0176a98c-d62a-4e92-be01-a07e809c523c");
                }

                return fTextBox0176a98cEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup7Pane
        /// </summary>
        public Pane ScrollViewerPARDup7Pane
        {
            get
            {
                if (null == fScrollViewerPARDup7Pane)
                {
                    fScrollViewerPARDup7Pane = new Pane("ScrollViewerPARDup7Pane", BindPrefixTextBox);
                    fScrollViewerPARDup7Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup7Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup7Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup7Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticI5XScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticI5XScrollBar
        {
            get
            {
                if (null == fScrollBarVerticI5XScrollBar)
                {
                    fScrollBarVerticI5XScrollBar = new ScrollBar("ScrollBarVerticI5XScrollBar", ScrollViewerPARDup7Pane);
                    fScrollBarVerticI5XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticI5XScrollBar.UIMap.Index = 5;
                    fScrollBarVerticI5XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticI5XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticI5XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoI5XScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoI5XScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoI5XScrollBar)
                {
                    fScrollBarHorizoI5XScrollBar = new ScrollBar("ScrollBarHorizoI5XScrollBar", ScrollViewerPARDup7Pane);
                    fScrollBarHorizoI5XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoI5XScrollBar.UIMap.Index = 5;
                    fScrollBarHorizoI5XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoI5XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoI5XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to BindandSearchRoDup0Text
        /// </summary>
        public Text BindandSearchRoDup0Text
        {
            get
            {
                if (null == fBindandSearchRoDup0Text)
                {
                    fBindandSearchRoDup0Text = new Text("BindandSearchRoDup0Text", LDAPSignInSetupGroup);
                    fBindandSearchRoDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fBindandSearchRoDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fBindandSearchRoDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Bind and Search Root");
                }

                return fBindandSearchRoDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to BindandSearchRoDup1Text
        /// </summary>
        public Text BindandSearchRoDup1Text
        {
            get
            {
                if (null == fBindandSearchRoDup1Text)
                {
                    fBindandSearchRoDup1Text = new Text("BindandSearchRoDup1Text", BindandSearchRoDup0Text);
                    fBindandSearchRoDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fBindandSearchRoDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fBindandSearchRoDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Bind and Search Root");
                }

                return fBindandSearchRoDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox9739bd3fEdit
        /// </summary>
        public Edit BindAndSearchRootTextBox
        {
            get
            {
                if (null == fTextBox9739bd3fEdit)
                {
                    fTextBox9739bd3fEdit = new Edit("TextBox9739bd3fEdit", LDAPSignInSetupGroup);
                    fTextBox9739bd3fEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox9739bd3fEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox9739bd3fEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9739bd3f-3161-44b5-8ddf-39ed62f6828f");
                }

                return fTextBox9739bd3fEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup8Pane
        /// </summary>
        public Pane ScrollViewerPARDup8Pane
        {
            get
            {
                if (null == fScrollViewerPARDup8Pane)
                {
                    fScrollViewerPARDup8Pane = new Pane("ScrollViewerPARDup8Pane", BindAndSearchRootTextBox);
                    fScrollViewerPARDup8Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup8Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup8Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup8Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticI6XScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticI6XScrollBar
        {
            get
            {
                if (null == fScrollBarVerticI6XScrollBar)
                {
                    fScrollBarVerticI6XScrollBar = new ScrollBar("ScrollBarVerticI6XScrollBar", ScrollViewerPARDup8Pane);
                    fScrollBarVerticI6XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticI6XScrollBar.UIMap.Index = 6;
                    fScrollBarVerticI6XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticI6XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticI6XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoI6XScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoI6XScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoI6XScrollBar)
                {
                    fScrollBarHorizoI6XScrollBar = new ScrollBar("ScrollBarHorizoI6XScrollBar", ScrollViewerPARDup8Pane);
                    fScrollBarHorizoI6XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoI6XScrollBar.UIMap.Index = 6;
                    fScrollBarHorizoI6XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoI6XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoI6XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to MatchthenameentDup1Text
        /// </summary>
        public Text MatchthenameentDup1Text
        {
            get
            {
                if (null == fMatchthenameentDup1Text)
                {
                    fMatchthenameentDup1Text = new Text("MatchthenameentDup1Text", LDAPSignInSetupGroup);
                    fMatchthenameentDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fMatchthenameentDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fMatchthenameentDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Match the name entered with this attribute");
                }

                return fMatchthenameentDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to MatchthenameentI1XText
        /// </summary>
        public Text MatchthenameentI1XText
        {
            get
            {
                if (null == fMatchthenameentI1XText)
                {
                    fMatchthenameentI1XText = new Text("MatchthenameentI1XText", MatchthenameentDup1Text);
                    fMatchthenameentI1XText.UIMap.Scope = UIASeachScope.Children;
                    fMatchthenameentI1XText.UIMap.Index = 1;
                    fMatchthenameentI1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fMatchthenameentI1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Match the name entered with this attribute");
                }

                return fMatchthenameentI1XText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox95d86380Edit
        /// </summary>
        public Edit MatchTheNameTextBox
        {
            get
            {
                if (null == fTextBox95d86380Edit)
                {
                    fTextBox95d86380Edit = new Edit("TextBox95d86380Edit", LDAPSignInSetupGroup);
                    fTextBox95d86380Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox95d86380Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox95d86380Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"95d86380-a43d-4a4c-b767-d745087199a7");
                }

                return fTextBox95d86380Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup9Pane
        /// </summary>
        public Pane ScrollViewerPARDup9Pane
        {
            get
            {
                if (null == fScrollViewerPARDup9Pane)
                {
                    fScrollViewerPARDup9Pane = new Pane("ScrollViewerPARDup9Pane", MatchTheNameTextBox);
                    fScrollViewerPARDup9Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup9Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup9Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup9Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticI7XScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticI7XScrollBar
        {
            get
            {
                if (null == fScrollBarVerticI7XScrollBar)
                {
                    fScrollBarVerticI7XScrollBar = new ScrollBar("ScrollBarVerticI7XScrollBar", ScrollViewerPARDup9Pane);
                    fScrollBarVerticI7XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticI7XScrollBar.UIMap.Index = 7;
                    fScrollBarVerticI7XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticI7XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticI7XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoI7XScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoI7XScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoI7XScrollBar)
                {
                    fScrollBarHorizoI7XScrollBar = new ScrollBar("ScrollBarHorizoI7XScrollBar", ScrollViewerPARDup9Pane);
                    fScrollBarHorizoI7XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoI7XScrollBar.UIMap.Index = 7;
                    fScrollBarHorizoI7XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoI7XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoI7XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievetheuserDup1Text
        /// </summary>
        public Text RetrievetheuserDup1Text
        {
            get
            {
                if (null == fRetrievetheuserDup1Text)
                {
                    fRetrievetheuserDup1Text = new Text("RetrievetheuserDup1Text", LDAPSignInSetupGroup);
                    fRetrievetheuserDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fRetrievetheuserDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fRetrievetheuserDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the user's e-mail address using this attribute");
                }

                return fRetrievetheuserDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievetheuserI1XText
        /// </summary>
        public Text RetrievetheuserI1XText
        {
            get
            {
                if (null == fRetrievetheuserI1XText)
                {
                    fRetrievetheuserI1XText = new Text("RetrievetheuserI1XText", RetrievetheuserDup1Text);
                    fRetrievetheuserI1XText.UIMap.Scope = UIASeachScope.Children;
                    fRetrievetheuserI1XText.UIMap.Index = 1;
                    fRetrievetheuserI1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRetrievetheuserI1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the user's e-mail address using this attribute");
                }

                return fRetrievetheuserI1XText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxcd99e046Edit
        /// </summary>
        public Edit RetrieveUserEMail
        {
            get
            {
                if (null == fTextBoxcd99e046Edit)
                {
                    fTextBoxcd99e046Edit = new Edit("TextBoxcd99e046Edit", LDAPSignInSetupGroup);
                    fTextBoxcd99e046Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxcd99e046Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBoxcd99e046Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"cd99e046-3630-4500-bd40-d7f8750ac47c");
                }

                return fTextBoxcd99e046Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup10Pane
        /// </summary>
        public Pane ScrollViewerPARDup10Pane
        {
            get
            {
                if (null == fScrollViewerPARDup10Pane)
                {
                    fScrollViewerPARDup10Pane = new Pane("ScrollViewerPARDup10Pane", RetrieveUserEMail);
                    fScrollViewerPARDup10Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup10Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup10Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup10Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticI8XScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticI8XScrollBar
        {
            get
            {
                if (null == fScrollBarVerticI8XScrollBar)
                {
                    fScrollBarVerticI8XScrollBar = new ScrollBar("ScrollBarVerticI8XScrollBar", ScrollViewerPARDup10Pane);
                    fScrollBarVerticI8XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticI8XScrollBar.UIMap.Index = 8;
                    fScrollBarVerticI8XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticI8XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticI8XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoI8XScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoI8XScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoI8XScrollBar)
                {
                    fScrollBarHorizoI8XScrollBar = new ScrollBar("ScrollBarHorizoI8XScrollBar", ScrollViewerPARDup10Pane);
                    fScrollBarHorizoI8XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoI8XScrollBar.UIMap.Index = 8;
                    fScrollBarHorizoI8XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoI8XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoI8XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievethedeviDup0Text
        /// </summary>
        public Text RetrievethedeviDup0Text
        {
            get
            {
                if (null == fRetrievethedeviDup0Text)
                {
                    fRetrievethedeviDup0Text = new Text("RetrievethedeviDup0Text", LDAPSignInSetupGroup);
                    fRetrievethedeviDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fRetrievethedeviDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fRetrievethedeviDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the device user's name using this attribute");
                }

                return fRetrievethedeviDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievethedeviDup1Text
        /// </summary>
        public Text RetrievethedeviDup1Text
        {
            get
            {
                if (null == fRetrievethedeviDup1Text)
                {
                    fRetrievethedeviDup1Text = new Text("RetrievethedeviDup1Text", RetrievethedeviDup0Text);
                    fRetrievethedeviDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fRetrievethedeviDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRetrievethedeviDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the device user's name using this attribute");
                }

                return fRetrievethedeviDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox06baa88fEdit
        /// </summary>
        public Edit RetrieveDeviceUserName
        {
            get
            {
                if (null == fTextBox06baa88fEdit)
                {
                    fTextBox06baa88fEdit = new Edit("TextBox06baa88fEdit", LDAPSignInSetupGroup);
                    fTextBox06baa88fEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox06baa88fEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox06baa88fEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"06baa88f-9dd3-4d2b-a3ab-78edd7e8f208");
                }

                return fTextBox06baa88fEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup11Pane
        /// </summary>
        public Pane ScrollViewerPARDup11Pane
        {
            get
            {
                if (null == fScrollViewerPARDup11Pane)
                {
                    fScrollViewerPARDup11Pane = new Pane("ScrollViewerPARDup11Pane", RetrieveDeviceUserName);
                    fScrollViewerPARDup11Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup11Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup11Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup11Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticI9XScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticI9XScrollBar
        {
            get
            {
                if (null == fScrollBarVerticI9XScrollBar)
                {
                    fScrollBarVerticI9XScrollBar = new ScrollBar("ScrollBarVerticI9XScrollBar", ScrollViewerPARDup11Pane);
                    fScrollBarVerticI9XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticI9XScrollBar.UIMap.Index = 9;
                    fScrollBarVerticI9XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticI9XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticI9XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoI9XScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoI9XScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoI9XScrollBar)
                {
                    fScrollBarHorizoI9XScrollBar = new ScrollBar("ScrollBarHorizoI9XScrollBar", ScrollViewerPARDup11Pane);
                    fScrollBarHorizoI9XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoI9XScrollBar.UIMap.Index = 9;
                    fScrollBarHorizoI9XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoI9XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoI9XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievethedeviDup2Text
        /// </summary>
        public Text RetrievethedeviDup2Text
        {
            get
            {
                if (null == fRetrievethedeviDup2Text)
                {
                    fRetrievethedeviDup2Text = new Text("RetrievethedeviDup2Text", LDAPSignInSetupGroup);
                    fRetrievethedeviDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fRetrievethedeviDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fRetrievethedeviDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the device user's group using this attribute");
                }

                return fRetrievethedeviDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievethedeviDup3Text
        /// </summary>
        public Text RetrievethedeviDup3Text
        {
            get
            {
                if (null == fRetrievethedeviDup3Text)
                {
                    fRetrievethedeviDup3Text = new Text("RetrievethedeviDup3Text", RetrievethedeviDup2Text);
                    fRetrievethedeviDup3Text.UIMap.Scope = UIASeachScope.Children;
                    fRetrievethedeviDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRetrievethedeviDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the device user's group using this attribute");
                }

                return fRetrievethedeviDup3Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox18dc1d17Edit
        /// </summary>
        public Edit RetrieveDeviceUserGroup
        {
            get
            {
                if (null == fTextBox18dc1d17Edit)
                {
                    fTextBox18dc1d17Edit = new Edit("TextBox18dc1d17Edit", LDAPSignInSetupGroup);
                    fTextBox18dc1d17Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox18dc1d17Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox18dc1d17Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"18dc1d17-95bc-421b-a3ac-9cbe7aaf1375");
                }

                return fTextBox18dc1d17Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup12Pane
        /// </summary>
        public Pane ScrollViewerPARDup12Pane
        {
            get
            {
                if (null == fScrollViewerPARDup12Pane)
                {
                    fScrollViewerPARDup12Pane = new Pane("ScrollViewerPARDup12Pane", RetrieveDeviceUserGroup);
                    fScrollViewerPARDup12Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup12Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup12Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup12Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticI10XScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticI10XScrollBar
        {
            get
            {
                if (null == fScrollBarVerticI10XScrollBar)
                {
                    fScrollBarVerticI10XScrollBar = new ScrollBar("ScrollBarVerticI10XScrollBar", ScrollViewerPARDup12Pane);
                    fScrollBarVerticI10XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticI10XScrollBar.UIMap.Index = 10;
                    fScrollBarVerticI10XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticI10XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticI10XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoI10XScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoI10XScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoI10XScrollBar)
                {
                    fScrollBarHorizoI10XScrollBar = new ScrollBar("ScrollBarHorizoI10XScrollBar", ScrollViewerPARDup12Pane);
                    fScrollBarHorizoI10XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoI10XScrollBar.UIMap.Index = 10;
                    fScrollBarHorizoI10XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoI10XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoI10XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ExactmatchonGroCheckBox
        /// </summary>
        public CheckBox ExactmatchonGroCheckBox
        {
            get
            {
                if (null == fExactmatchonGroCheckBox)
                {
                    fExactmatchonGroCheckBox = new CheckBox("ExactmatchonGroCheckBox", LDAPSignInSetupGroup);
                    fExactmatchonGroCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fExactmatchonGroCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fExactmatchonGroCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"57e768d9-71b1-46fa-a13e-b4c66180db0d");
                    fExactmatchonGroCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Exact match on Group attribute");
                }

                return fExactmatchonGroCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ExactmatchonGroText
        /// </summary>
        public Text ExactmatchonGroText
        {
            get
            {
                if (null == fExactmatchonGroText)
                {
                    fExactmatchonGroText = new Text("ExactmatchonGroText", ExactmatchonGroCheckBox);
                    fExactmatchonGroText.UIMap.Scope = UIASeachScope.Children;
                    fExactmatchonGroText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fExactmatchonGroText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Exact match on Group attribute");
                }

                return fExactmatchonGroText;
            }
        }

        /// <summary>
        /// Gets Reference to TestLDAPSignInGGroup
        /// </summary>
        public Group TestLDAPSignInGGroup
        {
            get
            {
                if (null == fTestLDAPSignInGGroup)
                {
                    fTestLDAPSignInGGroup = new Group("TestLDAPSignInGGroup", LDAPSignInSetupGroup);
                    fTestLDAPSignInGGroup.UIMap.Scope = UIASeachScope.Children;
                    fTestLDAPSignInGGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fTestLDAPSignInGGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3041c11e-01b9-428f-8714-6e4fa68fae63");
                    fTestLDAPSignInGGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test LDAP Sign In");
                }

                return fTestLDAPSignInGGroup;
            }
        }

        /// <summary>
        /// Gets Reference to TestLDAPSignInTText
        /// </summary>
        public Text TestLDAPSignInTText
        {
            get
            {
                if (null == fTestLDAPSignInTText)
                {
                    fTestLDAPSignInTText = new Text("TestLDAPSignInTText", TestLDAPSignInGGroup);
                    fTestLDAPSignInTText.UIMap.Scope = UIASeachScope.Children;
                    fTestLDAPSignInTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTestLDAPSignInTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test LDAP Sign In");
                }

                return fTestLDAPSignInTText;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameDup1Text
        /// </summary>
        public Text UsernameDup1Text
        {
            get
            {
                if (null == fUsernameDup1Text)
                {
                    fUsernameDup1Text = new Text("UsernameDup1Text", TestLDAPSignInGGroup);
                    fUsernameDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fUsernameDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fUsernameDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                }

                return fUsernameDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameTextBloI1XText
        /// </summary>
        public Text UsernameTextBloI1XText
        {
            get
            {
                if (null == fUsernameTextBloI1XText)
                {
                    fUsernameTextBloI1XText = new Text("UsernameTextBloI1XText", UsernameDup1Text);
                    fUsernameTextBloI1XText.UIMap.Scope = UIASeachScope.Children;
                    fUsernameTextBloI1XText.UIMap.Index = 1;
                    fUsernameTextBloI1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUsernameTextBloI1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                }

                return fUsernameTextBloI1XText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox0c41e59eEdit
        /// </summary>
        public Edit UserNameTextBox
        {
            get
            {
                if (null == fTextBox0c41e59eEdit)
                {
                    fTextBox0c41e59eEdit = new Edit("TextBox0c41e59eEdit", TestLDAPSignInGGroup);
                    fTextBox0c41e59eEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox0c41e59eEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox0c41e59eEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0c41e59e-aa47-4ad2-8977-b91afcaecdaa");
                }

                return fTextBox0c41e59eEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup13Pane
        /// </summary>
        public Pane ScrollViewerPARDup13Pane
        {
            get
            {
                if (null == fScrollViewerPARDup13Pane)
                {
                    fScrollViewerPARDup13Pane = new Pane("ScrollViewerPARDup13Pane", UserNameTextBox);
                    fScrollViewerPARDup13Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup13Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup13Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup13Pane;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordDup1Text
        /// </summary>
        public Text PasswordDup1Text
        {
            get
            {
                if (null == fPasswordDup1Text)
                {
                    fPasswordDup1Text = new Text("PasswordDup1Text", TestLDAPSignInGGroup);
                    fPasswordDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fPasswordDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fPasswordDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                }

                return fPasswordDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordTextBloI1XText
        /// </summary>
        public Text PasswordTextBloI1XText
        {
            get
            {
                if (null == fPasswordTextBloI1XText)
                {
                    fPasswordTextBloI1XText = new Text("PasswordTextBloI1XText", PasswordDup1Text);
                    fPasswordTextBloI1XText.UIMap.Scope = UIASeachScope.Children;
                    fPasswordTextBloI1XText.UIMap.Index = 1;
                    fPasswordTextBloI1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPasswordTextBloI1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                }

                return fPasswordTextBloI1XText;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordBox3366Edit
        /// </summary>
        public Edit PasswordTextBox
        {
            get
            {
                if (null == fPasswordBox3366Edit)
                {
                    fPasswordBox3366Edit = new Edit("PasswordBox3366Edit", TestLDAPSignInGGroup);
                    fPasswordBox3366Edit.UIMap.Scope = UIASeachScope.Children;
                    fPasswordBox3366Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"PasswordBox");
                    fPasswordBox3366Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33668209-171d-4db9-b5ab-e3f008e83d64");
                }

                return fPasswordBox3366Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup14Pane
        /// </summary>
        public Pane ScrollViewerPARDup14Pane
        {
            get
            {
                if (null == fScrollViewerPARDup14Pane)
                {
                    fScrollViewerPARDup14Pane = new Pane("ScrollViewerPARDup14Pane", PasswordTextBox);
                    fScrollViewerPARDup14Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup14Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup14Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup14Pane;
            }
        }

        /// <summary>
        /// Gets Reference to TestButton21369Button
        /// </summary>
        public Button LDAPTestButton
        {
            get
            {
                if (null == fTestButton21369Button)
                {
                    fTestButton21369Button = new Button("TestButton21369Button", TestLDAPSignInGGroup);
                    fTestButton21369Button.UIMap.Scope = UIASeachScope.Children;
                    fTestButton21369Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fTestButton21369Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"21369244-6659-4d1b-899a-01bdd820abfe");
                    fTestButton21369Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                }

                return fTestButton21369Button;
            }
        }

        /// <summary>
        /// Gets Reference to TestTextBlockDup1Text
        /// </summary>
        public Text TestTextBlockDup1Text
        {
            get
            {
                if (null == fTestTextBlockDup1Text)
                {
                    fTestTextBlockDup1Text = new Text("TestTextBlockDup1Text", LDAPTestButton);
                    fTestTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fTestTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTestTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                }

                return fTestTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to SignInandPermisGroup
        /// </summary>
        public Group SignInandPermisGroup
        {
            get
            {
                if (null == fSignInandPermisGroup)
                {
                    fSignInandPermisGroup = new Group("SignInandPermisGroup", MfpConfiguratioCustom);
                    fSignInandPermisGroup.UIMap.Scope = UIASeachScope.Children;
                    fSignInandPermisGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fSignInandPermisGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"95e42677-6508-4db0-bab4-61c7fe507846");
                    fSignInandPermisGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sign In and Permission Policies");
                }

                return fSignInandPermisGroup;
            }
        }

        /// <summary>
        /// Gets Reference to SignInandPermisText
        /// </summary>
        public Text SignInandPermisText
        {
            get
            {
                if (null == fSignInandPermisText)
                {
                    fSignInandPermisText = new Text("SignInandPermisText", SignInandPermisGroup);
                    fSignInandPermisText.UIMap.Scope = UIASeachScope.Children;
                    fSignInandPermisText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSignInandPermisText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sign In and Permission Policies");
                }

                return fSignInandPermisText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxEdit
        /// </summary>
        public Edit TextBoxEdit
        {
            get
            {
                if (null == fTextBoxEdit)
                {
                    fTextBoxEdit = new Edit("TextBoxEdit", SignInandPermisGroup);
                    fTextBoxEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup15Pane
        /// </summary>
        public Pane ScrollViewerPARDup15Pane
        {
            get
            {
                if (null == fScrollViewerPARDup15Pane)
                {
                    fScrollViewerPARDup15Pane = new Pane("ScrollViewerPARDup15Pane", TextBoxEdit);
                    fScrollViewerPARDup15Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup15Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup15Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup15Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticI11XScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticI11XScrollBar
        {
            get
            {
                if (null == fScrollBarVerticI11XScrollBar)
                {
                    fScrollBarVerticI11XScrollBar = new ScrollBar("ScrollBarVerticI11XScrollBar", ScrollViewerPARDup15Pane);
                    fScrollBarVerticI11XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticI11XScrollBar.UIMap.Index = 11;
                    fScrollBarVerticI11XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticI11XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticI11XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoI11XScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoI11XScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoI11XScrollBar)
                {
                    fScrollBarHorizoI11XScrollBar = new ScrollBar("ScrollBarHorizoI11XScrollBar", ScrollViewerPARDup15Pane);
                    fScrollBarHorizoI11XScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoI11XScrollBar.UIMap.Index = 11;
                    fScrollBarHorizoI11XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoI11XScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoI11XScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to TreeViewF3A67BCTree
        /// </summary>
        public Tree TreeViewF3A67BCTree
        {
            get
            {
                if (null == fTreeViewF3A67BCTree)
                {
                    fTreeViewF3A67BCTree = new Tree("TreeViewF3A67BCTree", SignInandPermisGroup);
                    fTreeViewF3A67BCTree.UIMap.Scope = UIASeachScope.Children;
                    fTreeViewF3A67BCTree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeView");
                    fTreeViewF3A67BCTree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"F3A67BC6-D934-4274-BD70-835004A41241");
                }

                return fTreeViewF3A67BCTree;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI0XDup0TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI0XDup0TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI0XDup0TreeItem)
                {
                    fSystemWindowsCoI0XDup0TreeItem = new TreeItem("SystemWindowsCoI0XDup0TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI0XDup0TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI0XDup0TreeItem.UIMap.Index = 0;
                    fSystemWindowsCoI0XDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI0XDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:0");
                }

                return fSystemWindowsCoI0XDup0TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI0XButton
        /// </summary>
        public Button ButtonExpanderI0XButton
        {
            get
            {
                if (null == fButtonExpanderI0XButton)
                {
                    fButtonExpanderI0XButton = new Button("ButtonExpanderI0XButton", SystemWindowsCoI0XDup0TreeItem);
                    fButtonExpanderI0XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI0XButton.UIMap.Index = 0;
                    fButtonExpanderI0XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI0XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI0XButton;
            }
        }

        /// <summary>
        /// Gets Reference to ControlPanelAppDup0Text
        /// </summary>
        public Text ControlPanelAppDup0Text
        {
            get
            {
                if (null == fControlPanelAppDup0Text)
                {
                    fControlPanelAppDup0Text = new Text("ControlPanelAppDup0Text", SystemWindowsCoI0XDup0TreeItem);
                    fControlPanelAppDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fControlPanelAppDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fControlPanelAppDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Control Panel Application");
                }

                return fControlPanelAppDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to ControlPanelAppDup1Text
        /// </summary>
        public Text ControlPanelAppDup1Text
        {
            get
            {
                if (null == fControlPanelAppDup1Text)
                {
                    fControlPanelAppDup1Text = new Text("ControlPanelAppDup1Text", ControlPanelAppDup0Text);
                    fControlPanelAppDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fControlPanelAppDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fControlPanelAppDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Control Panel Application");
                }

                return fControlPanelAppDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceGuestText
        /// </summary>
        public Text DeviceGuestText
        {
            get
            {
                if (null == fDeviceGuestText)
                {
                    fDeviceGuestText = new Text("DeviceGuestText", SystemWindowsCoI0XDup0TreeItem);
                    fDeviceGuestText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceGuestText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDeviceGuestText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Guest");
                }

                return fDeviceGuestText;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceGuestTextText
        /// </summary>
        public Text DeviceGuestTextText
        {
            get
            {
                if (null == fDeviceGuestTextText)
                {
                    fDeviceGuestTextText = new Text("DeviceGuestTextText", DeviceGuestText);
                    fDeviceGuestTextText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceGuestTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceGuestTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Guest");
                }

                return fDeviceGuestTextText;
            }
        }

        /// <summary>
        /// Gets Reference to RequiresSignInText
        /// </summary>
        public Text RequiresSignInText
        {
            get
            {
                if (null == fRequiresSignInText)
                {
                    fRequiresSignInText = new Text("RequiresSignInText", SystemWindowsCoI0XDup0TreeItem);
                    fRequiresSignInText.UIMap.Scope = UIASeachScope.Children;
                    fRequiresSignInText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fRequiresSignInText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Requires Sign In");
                }

                return fRequiresSignInText;
            }
        }

        /// <summary>
        /// Gets Reference to RequiresSignInTText
        /// </summary>
        public Text RequiresSignInTText
        {
            get
            {
                if (null == fRequiresSignInTText)
                {
                    fRequiresSignInTText = new Text("RequiresSignInTText", RequiresSignInText);
                    fRequiresSignInTText.UIMap.Scope = UIASeachScope.Children;
                    fRequiresSignInTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRequiresSignInTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Requires Sign In");
                }

                return fRequiresSignInTText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup0CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup0CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup0CheckBox)
                {
                    fCheckBoxmAuthSiDup0CheckBox = new CheckBox("CheckBoxmAuthSiDup0CheckBox", SystemWindowsCoI0XDup0TreeItem);
                    fCheckBoxmAuthSiDup0CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup0CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup0CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBoxAll_deviceGuest");
                }

                return fCheckBoxmAuthSiDup0CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI0XImage
        /// </summary>
        public Image ImageLockI0XImage
        {
            get
            {
                if (null == fImageLockI0XImage)
                {
                    fImageLockI0XImage = new Image("ImageLockI0XImage", CheckBoxmAuthSiDup0CheckBox);
                    fImageLockI0XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI0XImage.UIMap.Index = 0;
                    fImageLockI0XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI0XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI0XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI0XText
        /// </summary>
        public Text TextBlockTextCoI0XText
        {
            get
            {
                if (null == fTextBlockTextCoI0XText)
                {
                    fTextBlockTextCoI0XText = new Text("TextBlockTextCoI0XText", CheckBoxmAuthSiDup0CheckBox);
                    fTextBlockTextCoI0XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI0XText.UIMap.Index = 0;
                    fTextBlockTextCoI0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI0XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI0XText;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceAdministrDup0Text
        /// </summary>
        public Text DeviceAdministrDup0Text
        {
            get
            {
                if (null == fDeviceAdministrDup0Text)
                {
                    fDeviceAdministrDup0Text = new Text("DeviceAdministrDup0Text", SystemWindowsCoI0XDup0TreeItem);
                    fDeviceAdministrDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDeviceAdministrDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDeviceAdministrDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Administrator");
                }

                return fDeviceAdministrDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceAdministrDup1Text
        /// </summary>
        public Text DeviceAdministrDup1Text
        {
            get
            {
                if (null == fDeviceAdministrDup1Text)
                {
                    fDeviceAdministrDup1Text = new Text("DeviceAdministrDup1Text", DeviceAdministrDup0Text);
                    fDeviceAdministrDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDeviceAdministrDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceAdministrDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Administrator");
                }

                return fDeviceAdministrDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextText
        /// </summary>
        public Text TextText
        {
            get
            {
                if (null == fTextText)
                {
                    fTextText = new Text("TextText", SystemWindowsCoI0XDup0TreeItem);
                    fTextText.UIMap.Scope = UIASeachScope.Children;
                    fTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fTextText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockDup0Text
        /// </summary>
        public Text TextBlockDup0Text
        {
            get
            {
                if (null == fTextBlockDup0Text)
                {
                    fTextBlockDup0Text = new Text("TextBlockDup0Text", TextText);
                    fTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup1CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup1CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup1CheckBox)
                {
                    fCheckBoxmAuthSiDup1CheckBox = new CheckBox("CheckBoxmAuthSiDup1CheckBox", SystemWindowsCoI0XDup0TreeItem);
                    fCheckBoxmAuthSiDup1CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup1CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup1CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBoxAll_deviceAdministrator");
                }

                return fCheckBoxmAuthSiDup1CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceUserText
        /// </summary>
        public Text DeviceUserText
        {
            get
            {
                if (null == fDeviceUserText)
                {
                    fDeviceUserText = new Text("DeviceUserText", SystemWindowsCoI0XDup0TreeItem);
                    fDeviceUserText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceUserText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDeviceUserText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device User");
                }

                return fDeviceUserText;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceUserTextBText
        /// </summary>
        public Text DeviceUserTextBText
        {
            get
            {
                if (null == fDeviceUserTextBText)
                {
                    fDeviceUserTextBText = new Text("DeviceUserTextBText", DeviceUserText);
                    fDeviceUserTextBText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceUserTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceUserTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device User");
                }

                return fDeviceUserTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to FullAccessText
        /// </summary>
        public Text FullAccessText
        {
            get
            {
                if (null == fFullAccessText)
                {
                    fFullAccessText = new Text("FullAccessText", SystemWindowsCoI0XDup0TreeItem);
                    fFullAccessText.UIMap.Scope = UIASeachScope.Children;
                    fFullAccessText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFullAccessText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Full Access");
                }

                return fFullAccessText;
            }
        }

        /// <summary>
        /// Gets Reference to FullAccessTextBText
        /// </summary>
        public Text FullAccessTextBText
        {
            get
            {
                if (null == fFullAccessTextBText)
                {
                    fFullAccessTextBText = new Text("FullAccessTextBText", FullAccessText);
                    fFullAccessTextBText.UIMap.Scope = UIASeachScope.Children;
                    fFullAccessTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFullAccessTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Full Access");
                }

                return fFullAccessTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup2CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup2CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup2CheckBox)
                {
                    fCheckBoxmAuthSiDup2CheckBox = new CheckBox("CheckBoxmAuthSiDup2CheckBox", SystemWindowsCoI0XDup0TreeItem);
                    fCheckBoxmAuthSiDup2CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup2CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup2CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBoxAll_deviceUser");
                }

                return fCheckBoxmAuthSiDup2CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to SignInMethodText
        /// </summary>
        public Text SignInMethodText
        {
            get
            {
                if (null == fSignInMethodText)
                {
                    fSignInMethodText = new Text("SignInMethodText", SystemWindowsCoI0XDup0TreeItem);
                    fSignInMethodText.UIMap.Scope = UIASeachScope.Children;
                    fSignInMethodText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSignInMethodText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sign In Method");
                }

                return fSignInMethodText;
            }
        }

        /// <summary>
        /// Gets Reference to SignInMethodTexText
        /// </summary>
        public Text SignInMethodTexText
        {
            get
            {
                if (null == fSignInMethodTexText)
                {
                    fSignInMethodTexText = new Text("SignInMethodTexText", SignInMethodText);
                    fSignInMethodTexText.UIMap.Scope = UIASeachScope.Children;
                    fSignInMethodTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSignInMethodTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sign In Method");
                }

                return fSignInMethodTexText;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceDefaultTeDup0Text
        /// </summary>
        public Text DeviceDefaultTeDup0Text
        {
            get
            {
                if (null == fDeviceDefaultTeDup0Text)
                {
                    fDeviceDefaultTeDup0Text = new Text("DeviceDefaultTeDup0Text", SystemWindowsCoI0XDup0TreeItem);
                    fDeviceDefaultTeDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDeviceDefaultTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDeviceDefaultTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultLabel");
                    fDeviceDefaultTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Default");
                }

                return fDeviceDefaultTeDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceDefaultTeDup1Text
        /// </summary>
        public Text DeviceDefaultTeDup1Text
        {
            get
            {
                if (null == fDeviceDefaultTeDup1Text)
                {
                    fDeviceDefaultTeDup1Text = new Text("DeviceDefaultTeDup1Text", DeviceDefaultTeDup0Text);
                    fDeviceDefaultTeDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDeviceDefaultTeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceDefaultTeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Default");
                }

                return fDeviceDefaultTeDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup0ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup0ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup0ComboBox)
                {
                    fComboBoxmAuthSiDup0ComboBox = new ComboBox("ComboBoxmAuthSiDup0ComboBox", SystemWindowsCoI0XDup0TreeItem);
                    fComboBoxmAuthSiDup0ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup0ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup0ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox");
                }

                return fComboBoxmAuthSiDup0ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI0XDup1TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI0XDup1TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI0XDup1TreeItem)
                {
                    fSystemWindowsCoI0XDup1TreeItem = new TreeItem("SystemWindowsCoI0XDup1TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI0XDup1TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI0XDup1TreeItem.UIMap.Index = 0;
                    fSystemWindowsCoI0XDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI0XDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:3");
                }

                return fSystemWindowsCoI0XDup1TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI1XButton
        /// </summary>
        public Button ButtonExpanderI1XButton
        {
            get
            {
                if (null == fButtonExpanderI1XButton)
                {
                    fButtonExpanderI1XButton = new Button("ButtonExpanderI1XButton", SystemWindowsCoI0XDup1TreeItem);
                    fButtonExpanderI1XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI1XButton.UIMap.Index = 1;
                    fButtonExpanderI1XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI1XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI1XButton;
            }
        }

        /// <summary>
        /// Gets Reference to JobStatusapplicDup0Text
        /// </summary>
        public Text JobStatusapplicDup0Text
        {
            get
            {
                if (null == fJobStatusapplicDup0Text)
                {
                    fJobStatusapplicDup0Text = new Text("JobStatusapplicDup0Text", SystemWindowsCoI0XDup1TreeItem);
                    fJobStatusapplicDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fJobStatusapplicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fJobStatusapplicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Job Status application");
                }

                return fJobStatusapplicDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to JobStatusapplicDup1Text
        /// </summary>
        public Text JobStatusapplicDup1Text
        {
            get
            {
                if (null == fJobStatusapplicDup1Text)
                {
                    fJobStatusapplicDup1Text = new Text("JobStatusapplicDup1Text", JobStatusapplicDup0Text);
                    fJobStatusapplicDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fJobStatusapplicDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fJobStatusapplicDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Job Status application");
                }

                return fJobStatusapplicDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup3CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup3CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup3CheckBox)
                {
                    fCheckBoxmAuthSiDup3CheckBox = new CheckBox("CheckBoxmAuthSiDup3CheckBox", SystemWindowsCoI0XDup1TreeItem);
                    fCheckBoxmAuthSiDup3CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup3CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup3CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_0");
                }

                return fCheckBoxmAuthSiDup3CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI1XImage
        /// </summary>
        public Image ImageLockI1XImage
        {
            get
            {
                if (null == fImageLockI1XImage)
                {
                    fImageLockI1XImage = new Image("ImageLockI1XImage", CheckBoxmAuthSiDup3CheckBox);
                    fImageLockI1XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI1XImage.UIMap.Index = 1;
                    fImageLockI1XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI1XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI1XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI1XText
        /// </summary>
        public Text TextBlockTextCoI1XText
        {
            get
            {
                if (null == fTextBlockTextCoI1XText)
                {
                    fTextBlockTextCoI1XText = new Text("TextBlockTextCoI1XText", CheckBoxmAuthSiDup3CheckBox);
                    fTextBlockTextCoI1XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI1XText.UIMap.Index = 1;
                    fTextBlockTextCoI1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI1XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI1XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup4CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup4CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup4CheckBox)
                {
                    fCheckBoxmAuthSiDup4CheckBox = new CheckBox("CheckBoxmAuthSiDup4CheckBox", SystemWindowsCoI0XDup1TreeItem);
                    fCheckBoxmAuthSiDup4CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup4CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup4CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_0");
                }

                return fCheckBoxmAuthSiDup4CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup5CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup5CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup5CheckBox)
                {
                    fCheckBoxmAuthSiDup5CheckBox = new CheckBox("CheckBoxmAuthSiDup5CheckBox", SystemWindowsCoI0XDup1TreeItem);
                    fCheckBoxmAuthSiDup5CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup5CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup5CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_0");
                }

                return fCheckBoxmAuthSiDup5CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup1ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup1ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup1ComboBox)
                {
                    fComboBoxmAuthSiDup1ComboBox = new ComboBox("ComboBoxmAuthSiDup1ComboBox", SystemWindowsCoI0XDup1TreeItem);
                    fComboBoxmAuthSiDup1ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup1ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup1ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_0");
                }

                return fComboBoxmAuthSiDup1ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI0XDup2TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI0XDup2TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI0XDup2TreeItem)
                {
                    fSystemWindowsCoI0XDup2TreeItem = new TreeItem("SystemWindowsCoI0XDup2TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI0XDup2TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI0XDup2TreeItem.UIMap.Index = 0;
                    fSystemWindowsCoI0XDup2TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI0XDup2TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:1");
                }

                return fSystemWindowsCoI0XDup2TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI2XButton
        /// </summary>
        public Button ButtonExpanderI2XButton
        {
            get
            {
                if (null == fButtonExpanderI2XButton)
                {
                    fButtonExpanderI2XButton = new Button("ButtonExpanderI2XButton", SystemWindowsCoI0XDup2TreeItem);
                    fButtonExpanderI2XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI2XButton.UIMap.Index = 2;
                    fButtonExpanderI2XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI2XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI2XButton;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceMaintenanDup0Text
        /// </summary>
        public Text DeviceMaintenanDup0Text
        {
            get
            {
                if (null == fDeviceMaintenanDup0Text)
                {
                    fDeviceMaintenanDup0Text = new Text("DeviceMaintenanDup0Text", SystemWindowsCoI0XDup2TreeItem);
                    fDeviceMaintenanDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDeviceMaintenanDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDeviceMaintenanDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Maintenance application");
                }

                return fDeviceMaintenanDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceMaintenanDup1Text
        /// </summary>
        public Text DeviceMaintenanDup1Text
        {
            get
            {
                if (null == fDeviceMaintenanDup1Text)
                {
                    fDeviceMaintenanDup1Text = new Text("DeviceMaintenanDup1Text", DeviceMaintenanDup0Text);
                    fDeviceMaintenanDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDeviceMaintenanDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceMaintenanDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Maintenance application");
                }

                return fDeviceMaintenanDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup6CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup6CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup6CheckBox)
                {
                    fCheckBoxmAuthSiDup6CheckBox = new CheckBox("CheckBoxmAuthSiDup6CheckBox", SystemWindowsCoI0XDup2TreeItem);
                    fCheckBoxmAuthSiDup6CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup6CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup6CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_4");
                }

                return fCheckBoxmAuthSiDup6CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI2XImage
        /// </summary>
        public Image ImageLockI2XImage
        {
            get
            {
                if (null == fImageLockI2XImage)
                {
                    fImageLockI2XImage = new Image("ImageLockI2XImage", CheckBoxmAuthSiDup6CheckBox);
                    fImageLockI2XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI2XImage.UIMap.Index = 2;
                    fImageLockI2XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI2XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI2XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI2XText
        /// </summary>
        public Text TextBlockTextCoI2XText
        {
            get
            {
                if (null == fTextBlockTextCoI2XText)
                {
                    fTextBlockTextCoI2XText = new Text("TextBlockTextCoI2XText", CheckBoxmAuthSiDup6CheckBox);
                    fTextBlockTextCoI2XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI2XText.UIMap.Index = 2;
                    fTextBlockTextCoI2XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI2XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI2XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup7CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup7CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup7CheckBox)
                {
                    fCheckBoxmAuthSiDup7CheckBox = new CheckBox("CheckBoxmAuthSiDup7CheckBox", SystemWindowsCoI0XDup2TreeItem);
                    fCheckBoxmAuthSiDup7CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup7CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup7CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_4");
                }

                return fCheckBoxmAuthSiDup7CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup8CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup8CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup8CheckBox)
                {
                    fCheckBoxmAuthSiDup8CheckBox = new CheckBox("CheckBoxmAuthSiDup8CheckBox", SystemWindowsCoI0XDup2TreeItem);
                    fCheckBoxmAuthSiDup8CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup8CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup8CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_4");
                }

                return fCheckBoxmAuthSiDup8CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup2ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup2ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup2ComboBox)
                {
                    fComboBoxmAuthSiDup2ComboBox = new ComboBox("ComboBoxmAuthSiDup2ComboBox", SystemWindowsCoI0XDup2TreeItem);
                    fComboBoxmAuthSiDup2ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup2ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup2ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_4");
                }

                return fComboBoxmAuthSiDup2ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI1XDup0TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI1XDup0TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI1XDup0TreeItem)
                {
                    fSystemWindowsCoI1XDup0TreeItem = new TreeItem("SystemWindowsCoI1XDup0TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI1XDup0TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI1XDup0TreeItem.UIMap.Index = 1;
                    fSystemWindowsCoI1XDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI1XDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:3");
                }

                return fSystemWindowsCoI1XDup0TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI3XButton
        /// </summary>
        public Button ButtonExpanderI3XButton
        {
            get
            {
                if (null == fButtonExpanderI3XButton)
                {
                    fButtonExpanderI3XButton = new Button("ButtonExpanderI3XButton", SystemWindowsCoI1XDup0TreeItem);
                    fButtonExpanderI3XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI3XButton.UIMap.Index = 3;
                    fButtonExpanderI3XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI3XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI3XButton;
            }
        }

        /// <summary>
        /// Gets Reference to ReportsText
        /// </summary>
        public Text ReportsText
        {
            get
            {
                if (null == fReportsText)
                {
                    fReportsText = new Text("ReportsText", SystemWindowsCoI1XDup0TreeItem);
                    fReportsText.UIMap.Scope = UIASeachScope.Children;
                    fReportsText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fReportsText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Reports");
                }

                return fReportsText;
            }
        }

        /// <summary>
        /// Gets Reference to ReportsTextBlocText
        /// </summary>
        public Text ReportsTextBlocText
        {
            get
            {
                if (null == fReportsTextBlocText)
                {
                    fReportsTextBlocText = new Text("ReportsTextBlocText", ReportsText);
                    fReportsTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fReportsTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fReportsTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Reports");
                }

                return fReportsTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup9CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup9CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup9CheckBox)
                {
                    fCheckBoxmAuthSiDup9CheckBox = new CheckBox("CheckBoxmAuthSiDup9CheckBox", SystemWindowsCoI1XDup0TreeItem);
                    fCheckBoxmAuthSiDup9CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup9CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup9CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_8");
                }

                return fCheckBoxmAuthSiDup9CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI3XImage
        /// </summary>
        public Image ImageLockI3XImage
        {
            get
            {
                if (null == fImageLockI3XImage)
                {
                    fImageLockI3XImage = new Image("ImageLockI3XImage", CheckBoxmAuthSiDup9CheckBox);
                    fImageLockI3XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI3XImage.UIMap.Index = 3;
                    fImageLockI3XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI3XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI3XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI3XText
        /// </summary>
        public Text TextBlockTextCoI3XText
        {
            get
            {
                if (null == fTextBlockTextCoI3XText)
                {
                    fTextBlockTextCoI3XText = new Text("TextBlockTextCoI3XText", CheckBoxmAuthSiDup9CheckBox);
                    fTextBlockTextCoI3XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI3XText.UIMap.Index = 3;
                    fTextBlockTextCoI3XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI3XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI3XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup10CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup10CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup10CheckBox)
                {
                    fCheckBoxmAuthSiDup10CheckBox = new CheckBox("CheckBoxmAuthSiDup10CheckBox", SystemWindowsCoI1XDup0TreeItem);
                    fCheckBoxmAuthSiDup10CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup10CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup10CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_8");
                }

                return fCheckBoxmAuthSiDup10CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup11CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup11CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup11CheckBox)
                {
                    fCheckBoxmAuthSiDup11CheckBox = new CheckBox("CheckBoxmAuthSiDup11CheckBox", SystemWindowsCoI1XDup0TreeItem);
                    fCheckBoxmAuthSiDup11CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup11CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup11CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_8");
                }

                return fCheckBoxmAuthSiDup11CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup3ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup3ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup3ComboBox)
                {
                    fComboBoxmAuthSiDup3ComboBox = new ComboBox("ComboBoxmAuthSiDup3ComboBox", SystemWindowsCoI1XDup0TreeItem);
                    fComboBoxmAuthSiDup3ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup3ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup3ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_8");
                }

                return fComboBoxmAuthSiDup3ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI0XDup3TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI0XDup3TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI0XDup3TreeItem)
                {
                    fSystemWindowsCoI0XDup3TreeItem = new TreeItem("SystemWindowsCoI0XDup3TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI0XDup3TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI0XDup3TreeItem.UIMap.Index = 0;
                    fSystemWindowsCoI0XDup3TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI0XDup3TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:7");
                }

                return fSystemWindowsCoI0XDup3TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI4XButton
        /// </summary>
        public Button ButtonExpanderI4XButton
        {
            get
            {
                if (null == fButtonExpanderI4XButton)
                {
                    fButtonExpanderI4XButton = new Button("ButtonExpanderI4XButton", SystemWindowsCoI0XDup3TreeItem);
                    fButtonExpanderI4XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI4XButton.UIMap.Index = 4;
                    fButtonExpanderI4XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI4XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI4XButton;
            }
        }

        /// <summary>
        /// Gets Reference to AdministrationaDup0Text
        /// </summary>
        public Text AdministrationaDup0Text
        {
            get
            {
                if (null == fAdministrationaDup0Text)
                {
                    fAdministrationaDup0Text = new Text("AdministrationaDup0Text", SystemWindowsCoI0XDup3TreeItem);
                    fAdministrationaDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAdministrationaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAdministrationaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Administration application");
                }

                return fAdministrationaDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to AdministrationaDup1Text
        /// </summary>
        public Text AdministrationaDup1Text
        {
            get
            {
                if (null == fAdministrationaDup1Text)
                {
                    fAdministrationaDup1Text = new Text("AdministrationaDup1Text", AdministrationaDup0Text);
                    fAdministrationaDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAdministrationaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAdministrationaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Administration application");
                }

                return fAdministrationaDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup12CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup12CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup12CheckBox)
                {
                    fCheckBoxmAuthSiDup12CheckBox = new CheckBox("CheckBoxmAuthSiDup12CheckBox", SystemWindowsCoI0XDup3TreeItem);
                    fCheckBoxmAuthSiDup12CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup12CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup12CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_20");
                }

                return fCheckBoxmAuthSiDup12CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI4XImage
        /// </summary>
        public Image ImageLockI4XImage
        {
            get
            {
                if (null == fImageLockI4XImage)
                {
                    fImageLockI4XImage = new Image("ImageLockI4XImage", CheckBoxmAuthSiDup12CheckBox);
                    fImageLockI4XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI4XImage.UIMap.Index = 4;
                    fImageLockI4XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI4XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI4XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI4XText
        /// </summary>
        public Text TextBlockTextCoI4XText
        {
            get
            {
                if (null == fTextBlockTextCoI4XText)
                {
                    fTextBlockTextCoI4XText = new Text("TextBlockTextCoI4XText", CheckBoxmAuthSiDup12CheckBox);
                    fTextBlockTextCoI4XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI4XText.UIMap.Index = 4;
                    fTextBlockTextCoI4XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI4XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI4XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup13CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup13CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup13CheckBox)
                {
                    fCheckBoxmAuthSiDup13CheckBox = new CheckBox("CheckBoxmAuthSiDup13CheckBox", SystemWindowsCoI0XDup3TreeItem);
                    fCheckBoxmAuthSiDup13CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup13CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup13CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_20");
                }

                return fCheckBoxmAuthSiDup13CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup14CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup14CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup14CheckBox)
                {
                    fCheckBoxmAuthSiDup14CheckBox = new CheckBox("CheckBoxmAuthSiDup14CheckBox", SystemWindowsCoI0XDup3TreeItem);
                    fCheckBoxmAuthSiDup14CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup14CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup14CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_20");
                }

                return fCheckBoxmAuthSiDup14CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup4ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup4ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup4ComboBox)
                {
                    fComboBoxmAuthSiDup4ComboBox = new ComboBox("ComboBoxmAuthSiDup4ComboBox", SystemWindowsCoI0XDup3TreeItem);
                    fComboBoxmAuthSiDup4ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup4ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup4ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_20");
                }

                return fComboBoxmAuthSiDup4ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI0XDup4TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI0XDup4TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI0XDup4TreeItem)
                {
                    fSystemWindowsCoI0XDup4TreeItem = new TreeItem("SystemWindowsCoI0XDup4TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI0XDup4TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI0XDup4TreeItem.UIMap.Index = 0;
                    fSystemWindowsCoI0XDup4TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI0XDup4TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:2");
                }

                return fSystemWindowsCoI0XDup4TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI5XButton
        /// </summary>
        public Button ButtonExpanderI5XButton
        {
            get
            {
                if (null == fButtonExpanderI5XButton)
                {
                    fButtonExpanderI5XButton = new Button("ButtonExpanderI5XButton", SystemWindowsCoI0XDup4TreeItem);
                    fButtonExpanderI5XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI5XButton.UIMap.Index = 5;
                    fButtonExpanderI5XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI5XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI5XButton;
            }
        }

        /// <summary>
        /// Gets Reference to OpenfromDeviceMDup0Text
        /// </summary>
        public Text OpenfromDeviceMDup0Text
        {
            get
            {
                if (null == fOpenfromDeviceMDup0Text)
                {
                    fOpenfromDeviceMDup0Text = new Text("OpenfromDeviceMDup0Text", SystemWindowsCoI0XDup4TreeItem);
                    fOpenfromDeviceMDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fOpenfromDeviceMDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fOpenfromDeviceMDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Open from Device Memory application");
                }

                return fOpenfromDeviceMDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to OpenfromDeviceMDup1Text
        /// </summary>
        public Text OpenfromDeviceMDup1Text
        {
            get
            {
                if (null == fOpenfromDeviceMDup1Text)
                {
                    fOpenfromDeviceMDup1Text = new Text("OpenfromDeviceMDup1Text", OpenfromDeviceMDup0Text);
                    fOpenfromDeviceMDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fOpenfromDeviceMDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOpenfromDeviceMDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Open from Device Memory application");
                }

                return fOpenfromDeviceMDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup15CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup15CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup15CheckBox)
                {
                    fCheckBoxmAuthSiDup15CheckBox = new CheckBox("CheckBoxmAuthSiDup15CheckBox", SystemWindowsCoI0XDup4TreeItem);
                    fCheckBoxmAuthSiDup15CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup15CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup15CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_55");
                }

                return fCheckBoxmAuthSiDup15CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI5XImage
        /// </summary>
        public Image ImageLockI5XImage
        {
            get
            {
                if (null == fImageLockI5XImage)
                {
                    fImageLockI5XImage = new Image("ImageLockI5XImage", CheckBoxmAuthSiDup15CheckBox);
                    fImageLockI5XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI5XImage.UIMap.Index = 5;
                    fImageLockI5XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI5XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI5XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI5XText
        /// </summary>
        public Text TextBlockTextCoI5XText
        {
            get
            {
                if (null == fTextBlockTextCoI5XText)
                {
                    fTextBlockTextCoI5XText = new Text("TextBlockTextCoI5XText", CheckBoxmAuthSiDup15CheckBox);
                    fTextBlockTextCoI5XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI5XText.UIMap.Index = 5;
                    fTextBlockTextCoI5XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI5XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI5XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup16CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup16CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup16CheckBox)
                {
                    fCheckBoxmAuthSiDup16CheckBox = new CheckBox("CheckBoxmAuthSiDup16CheckBox", SystemWindowsCoI0XDup4TreeItem);
                    fCheckBoxmAuthSiDup16CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup16CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup16CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_55");
                }

                return fCheckBoxmAuthSiDup16CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup17CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup17CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup17CheckBox)
                {
                    fCheckBoxmAuthSiDup17CheckBox = new CheckBox("CheckBoxmAuthSiDup17CheckBox", SystemWindowsCoI0XDup4TreeItem);
                    fCheckBoxmAuthSiDup17CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup17CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup17CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_55");
                }

                return fCheckBoxmAuthSiDup17CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup5ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup5ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup5ComboBox)
                {
                    fComboBoxmAuthSiDup5ComboBox = new ComboBox("ComboBoxmAuthSiDup5ComboBox", SystemWindowsCoI0XDup4TreeItem);
                    fComboBoxmAuthSiDup5ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup5ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup5ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_55");
                }

                return fComboBoxmAuthSiDup5ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI1XDup1TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI1XDup1TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI1XDup1TreeItem)
                {
                    fSystemWindowsCoI1XDup1TreeItem = new TreeItem("SystemWindowsCoI1XDup1TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI1XDup1TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI1XDup1TreeItem.UIMap.Index = 1;
                    fSystemWindowsCoI1XDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI1XDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:2");
                }

                return fSystemWindowsCoI1XDup1TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI6XButton
        /// </summary>
        public Button ButtonExpanderI6XButton
        {
            get
            {
                if (null == fButtonExpanderI6XButton)
                {
                    fButtonExpanderI6XButton = new Button("ButtonExpanderI6XButton", SystemWindowsCoI1XDup1TreeItem);
                    fButtonExpanderI6XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI6XButton.UIMap.Index = 6;
                    fButtonExpanderI6XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI6XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI6XButton;
            }
        }

        /// <summary>
        /// Gets Reference to CopyapplicationDup0Text
        /// </summary>
        public Text CopyapplicationDup0Text
        {
            get
            {
                if (null == fCopyapplicationDup0Text)
                {
                    fCopyapplicationDup0Text = new Text("CopyapplicationDup0Text", SystemWindowsCoI1XDup1TreeItem);
                    fCopyapplicationDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fCopyapplicationDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fCopyapplicationDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Copy application");
                }

                return fCopyapplicationDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to CopyapplicationDup1Text
        /// </summary>
        public Text CopyapplicationDup1Text
        {
            get
            {
                if (null == fCopyapplicationDup1Text)
                {
                    fCopyapplicationDup1Text = new Text("CopyapplicationDup1Text", CopyapplicationDup0Text);
                    fCopyapplicationDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fCopyapplicationDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCopyapplicationDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Copy application");
                }

                return fCopyapplicationDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup18CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup18CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup18CheckBox)
                {
                    fCheckBoxmAuthSiDup18CheckBox = new CheckBox("CheckBoxmAuthSiDup18CheckBox", SystemWindowsCoI1XDup1TreeItem);
                    fCheckBoxmAuthSiDup18CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup18CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup18CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_58");
                }

                return fCheckBoxmAuthSiDup18CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI6XImage
        /// </summary>
        public Image ImageLockI6XImage
        {
            get
            {
                if (null == fImageLockI6XImage)
                {
                    fImageLockI6XImage = new Image("ImageLockI6XImage", CheckBoxmAuthSiDup18CheckBox);
                    fImageLockI6XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI6XImage.UIMap.Index = 6;
                    fImageLockI6XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI6XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI6XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI6XText
        /// </summary>
        public Text TextBlockTextCoI6XText
        {
            get
            {
                if (null == fTextBlockTextCoI6XText)
                {
                    fTextBlockTextCoI6XText = new Text("TextBlockTextCoI6XText", CheckBoxmAuthSiDup18CheckBox);
                    fTextBlockTextCoI6XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI6XText.UIMap.Index = 6;
                    fTextBlockTextCoI6XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI6XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI6XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup19CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup19CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup19CheckBox)
                {
                    fCheckBoxmAuthSiDup19CheckBox = new CheckBox("CheckBoxmAuthSiDup19CheckBox", SystemWindowsCoI1XDup1TreeItem);
                    fCheckBoxmAuthSiDup19CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup19CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup19CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_58");
                }

                return fCheckBoxmAuthSiDup19CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup20CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup20CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup20CheckBox)
                {
                    fCheckBoxmAuthSiDup20CheckBox = new CheckBox("CheckBoxmAuthSiDup20CheckBox", SystemWindowsCoI1XDup1TreeItem);
                    fCheckBoxmAuthSiDup20CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup20CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup20CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_58");
                }

                return fCheckBoxmAuthSiDup20CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup6ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup6ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup6ComboBox)
                {
                    fComboBoxmAuthSiDup6ComboBox = new ComboBox("ComboBoxmAuthSiDup6ComboBox", SystemWindowsCoI1XDup1TreeItem);
                    fComboBoxmAuthSiDup6ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup6ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup6ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_58");
                }

                return fComboBoxmAuthSiDup6ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI1XDup2TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI1XDup2TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI1XDup2TreeItem)
                {
                    fSystemWindowsCoI1XDup2TreeItem = new TreeItem("SystemWindowsCoI1XDup2TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI1XDup2TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI1XDup2TreeItem.UIMap.Index = 1;
                    fSystemWindowsCoI1XDup2TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI1XDup2TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:0");
                }

                return fSystemWindowsCoI1XDup2TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI7XButton
        /// </summary>
        public Button ButtonExpanderI7XButton
        {
            get
            {
                if (null == fButtonExpanderI7XButton)
                {
                    fButtonExpanderI7XButton = new Button("ButtonExpanderI7XButton", SystemWindowsCoI1XDup2TreeItem);
                    fButtonExpanderI7XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI7XButton.UIMap.Index = 7;
                    fButtonExpanderI7XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI7XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI7XButton;
            }
        }

        /// <summary>
        /// Gets Reference to SupplyStatusappDup0Text
        /// </summary>
        public Text SupplyStatusappDup0Text
        {
            get
            {
                if (null == fSupplyStatusappDup0Text)
                {
                    fSupplyStatusappDup0Text = new Text("SupplyStatusappDup0Text", SystemWindowsCoI1XDup2TreeItem);
                    fSupplyStatusappDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSupplyStatusappDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSupplyStatusappDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Supply Status application");
                }

                return fSupplyStatusappDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SupplyStatusappDup1Text
        /// </summary>
        public Text SupplyStatusappDup1Text
        {
            get
            {
                if (null == fSupplyStatusappDup1Text)
                {
                    fSupplyStatusappDup1Text = new Text("SupplyStatusappDup1Text", SupplyStatusappDup0Text);
                    fSupplyStatusappDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSupplyStatusappDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSupplyStatusappDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Supply Status application");
                }

                return fSupplyStatusappDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup21CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup21CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup21CheckBox)
                {
                    fCheckBoxmAuthSiDup21CheckBox = new CheckBox("CheckBoxmAuthSiDup21CheckBox", SystemWindowsCoI1XDup2TreeItem);
                    fCheckBoxmAuthSiDup21CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup21CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup21CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_61");
                }

                return fCheckBoxmAuthSiDup21CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI7XImage
        /// </summary>
        public Image ImageLockI7XImage
        {
            get
            {
                if (null == fImageLockI7XImage)
                {
                    fImageLockI7XImage = new Image("ImageLockI7XImage", CheckBoxmAuthSiDup21CheckBox);
                    fImageLockI7XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI7XImage.UIMap.Index = 7;
                    fImageLockI7XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI7XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI7XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI7XText
        /// </summary>
        public Text TextBlockTextCoI7XText
        {
            get
            {
                if (null == fTextBlockTextCoI7XText)
                {
                    fTextBlockTextCoI7XText = new Text("TextBlockTextCoI7XText", CheckBoxmAuthSiDup21CheckBox);
                    fTextBlockTextCoI7XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI7XText.UIMap.Index = 7;
                    fTextBlockTextCoI7XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI7XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI7XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup22CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup22CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup22CheckBox)
                {
                    fCheckBoxmAuthSiDup22CheckBox = new CheckBox("CheckBoxmAuthSiDup22CheckBox", SystemWindowsCoI1XDup2TreeItem);
                    fCheckBoxmAuthSiDup22CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup22CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup22CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_61");
                }

                return fCheckBoxmAuthSiDup22CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup23CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup23CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup23CheckBox)
                {
                    fCheckBoxmAuthSiDup23CheckBox = new CheckBox("CheckBoxmAuthSiDup23CheckBox", SystemWindowsCoI1XDup2TreeItem);
                    fCheckBoxmAuthSiDup23CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup23CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup23CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_61");
                }

                return fCheckBoxmAuthSiDup23CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup7ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup7ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup7ComboBox)
                {
                    fComboBoxmAuthSiDup7ComboBox = new ComboBox("ComboBoxmAuthSiDup7ComboBox", SystemWindowsCoI1XDup2TreeItem);
                    fComboBoxmAuthSiDup7ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup7ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup7ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_61");
                }

                return fComboBoxmAuthSiDup7ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI1XDup3TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI1XDup3TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI1XDup3TreeItem)
                {
                    fSystemWindowsCoI1XDup3TreeItem = new TreeItem("SystemWindowsCoI1XDup3TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI1XDup3TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI1XDup3TreeItem.UIMap.Index = 1;
                    fSystemWindowsCoI1XDup3TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI1XDup3TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:1");
                }

                return fSystemWindowsCoI1XDup3TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI8XButton
        /// </summary>
        public Button ButtonExpanderI8XButton
        {
            get
            {
                if (null == fButtonExpanderI8XButton)
                {
                    fButtonExpanderI8XButton = new Button("ButtonExpanderI8XButton", SystemWindowsCoI1XDup3TreeItem);
                    fButtonExpanderI8XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI8XButton.UIMap.Index = 8;
                    fButtonExpanderI8XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI8XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI8XButton;
            }
        }

        /// <summary>
        /// Gets Reference to TraysText
        /// </summary>
        public Text TraysText
        {
            get
            {
                if (null == fTraysText)
                {
                    fTraysText = new Text("TraysText", SystemWindowsCoI1XDup3TreeItem);
                    fTraysText.UIMap.Scope = UIASeachScope.Children;
                    fTraysText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTraysText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Trays");
                }

                return fTraysText;
            }
        }

        /// <summary>
        /// Gets Reference to TraysTextBlockText
        /// </summary>
        public Text TraysTextBlockText
        {
            get
            {
                if (null == fTraysTextBlockText)
                {
                    fTraysTextBlockText = new Text("TraysTextBlockText", TraysText);
                    fTraysTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fTraysTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTraysTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Trays");
                }

                return fTraysTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup8ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup8ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup8ComboBox)
                {
                    fComboBoxmAuthSiDup8ComboBox = new ComboBox("ComboBoxmAuthSiDup8ComboBox", SystemWindowsCoI1XDup3TreeItem);
                    fComboBoxmAuthSiDup8ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup8ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup8ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_62");
                }

                return fComboBoxmAuthSiDup8ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI2XDup0TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI2XDup0TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI2XDup0TreeItem)
                {
                    fSystemWindowsCoI2XDup0TreeItem = new TreeItem("SystemWindowsCoI2XDup0TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI2XDup0TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI2XDup0TreeItem.UIMap.Index = 2;
                    fSystemWindowsCoI2XDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI2XDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:0");
                }

                return fSystemWindowsCoI2XDup0TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI9XButton
        /// </summary>
        public Button ButtonExpanderI9XButton
        {
            get
            {
                if (null == fButtonExpanderI9XButton)
                {
                    fButtonExpanderI9XButton = new Button("ButtonExpanderI9XButton", SystemWindowsCoI2XDup0TreeItem);
                    fButtonExpanderI9XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI9XButton.UIMap.Index = 9;
                    fButtonExpanderI9XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI9XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI9XButton;
            }
        }

        /// <summary>
        /// Gets Reference to OpenfromUSBapplDup0Text
        /// </summary>
        public Text OpenfromUSBapplDup0Text
        {
            get
            {
                if (null == fOpenfromUSBapplDup0Text)
                {
                    fOpenfromUSBapplDup0Text = new Text("OpenfromUSBapplDup0Text", SystemWindowsCoI2XDup0TreeItem);
                    fOpenfromUSBapplDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fOpenfromUSBapplDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fOpenfromUSBapplDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Open from USB application");
                }

                return fOpenfromUSBapplDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to OpenfromUSBapplDup1Text
        /// </summary>
        public Text OpenfromUSBapplDup1Text
        {
            get
            {
                if (null == fOpenfromUSBapplDup1Text)
                {
                    fOpenfromUSBapplDup1Text = new Text("OpenfromUSBapplDup1Text", OpenfromUSBapplDup0Text);
                    fOpenfromUSBapplDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fOpenfromUSBapplDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOpenfromUSBapplDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Open from USB application");
                }

                return fOpenfromUSBapplDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup24CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup24CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup24CheckBox)
                {
                    fCheckBoxmAuthSiDup24CheckBox = new CheckBox("CheckBoxmAuthSiDup24CheckBox", SystemWindowsCoI2XDup0TreeItem);
                    fCheckBoxmAuthSiDup24CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup24CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup24CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_64");
                }

                return fCheckBoxmAuthSiDup24CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI8XImage
        /// </summary>
        public Image ImageLockI8XImage
        {
            get
            {
                if (null == fImageLockI8XImage)
                {
                    fImageLockI8XImage = new Image("ImageLockI8XImage", CheckBoxmAuthSiDup24CheckBox);
                    fImageLockI8XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI8XImage.UIMap.Index = 8;
                    fImageLockI8XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI8XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI8XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI8XText
        /// </summary>
        public Text TextBlockTextCoI8XText
        {
            get
            {
                if (null == fTextBlockTextCoI8XText)
                {
                    fTextBlockTextCoI8XText = new Text("TextBlockTextCoI8XText", CheckBoxmAuthSiDup24CheckBox);
                    fTextBlockTextCoI8XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI8XText.UIMap.Index = 8;
                    fTextBlockTextCoI8XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI8XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI8XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup25CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup25CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup25CheckBox)
                {
                    fCheckBoxmAuthSiDup25CheckBox = new CheckBox("CheckBoxmAuthSiDup25CheckBox", SystemWindowsCoI2XDup0TreeItem);
                    fCheckBoxmAuthSiDup25CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup25CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup25CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_64");
                }

                return fCheckBoxmAuthSiDup25CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup26CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup26CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup26CheckBox)
                {
                    fCheckBoxmAuthSiDup26CheckBox = new CheckBox("CheckBoxmAuthSiDup26CheckBox", SystemWindowsCoI2XDup0TreeItem);
                    fCheckBoxmAuthSiDup26CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup26CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup26CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_64");
                }

                return fCheckBoxmAuthSiDup26CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup9ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup9ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup9ComboBox)
                {
                    fComboBoxmAuthSiDup9ComboBox = new ComboBox("ComboBoxmAuthSiDup9ComboBox", SystemWindowsCoI2XDup0TreeItem);
                    fComboBoxmAuthSiDup9ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup9ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup9ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_64");
                }

                return fComboBoxmAuthSiDup9ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI2XDup1TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI2XDup1TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI2XDup1TreeItem)
                {
                    fSystemWindowsCoI2XDup1TreeItem = new TreeItem("SystemWindowsCoI2XDup1TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI2XDup1TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI2XDup1TreeItem.UIMap.Index = 2;
                    fSystemWindowsCoI2XDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI2XDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:2");
                }

                return fSystemWindowsCoI2XDup1TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI10XButton
        /// </summary>
        public Button ButtonExpanderI10XButton
        {
            get
            {
                if (null == fButtonExpanderI10XButton)
                {
                    fButtonExpanderI10XButton = new Button("ButtonExpanderI10XButton", SystemWindowsCoI2XDup1TreeItem);
                    fButtonExpanderI10XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI10XButton.UIMap.Index = 10;
                    fButtonExpanderI10XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI10XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI10XButton;
            }
        }

        /// <summary>
        /// Gets Reference to FaxapplicationText
        /// </summary>
        public Text FaxapplicationText
        {
            get
            {
                if (null == fFaxapplicationText)
                {
                    fFaxapplicationText = new Text("FaxapplicationText", SystemWindowsCoI2XDup1TreeItem);
                    fFaxapplicationText.UIMap.Scope = UIASeachScope.Children;
                    fFaxapplicationText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFaxapplicationText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax application");
                }

                return fFaxapplicationText;
            }
        }

        /// <summary>
        /// Gets Reference to FaxapplicationTText
        /// </summary>
        public Text FaxapplicationTText
        {
            get
            {
                if (null == fFaxapplicationTText)
                {
                    fFaxapplicationTText = new Text("FaxapplicationTText", FaxapplicationText);
                    fFaxapplicationTText.UIMap.Scope = UIASeachScope.Children;
                    fFaxapplicationTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFaxapplicationTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax application");
                }

                return fFaxapplicationTText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup27CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup27CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup27CheckBox)
                {
                    fCheckBoxmAuthSiDup27CheckBox = new CheckBox("CheckBoxmAuthSiDup27CheckBox", SystemWindowsCoI2XDup1TreeItem);
                    fCheckBoxmAuthSiDup27CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup27CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup27CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_65");
                }

                return fCheckBoxmAuthSiDup27CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI9XImage
        /// </summary>
        public Image ImageLockI9XImage
        {
            get
            {
                if (null == fImageLockI9XImage)
                {
                    fImageLockI9XImage = new Image("ImageLockI9XImage", CheckBoxmAuthSiDup27CheckBox);
                    fImageLockI9XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI9XImage.UIMap.Index = 9;
                    fImageLockI9XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI9XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI9XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI9XText
        /// </summary>
        public Text TextBlockTextCoI9XText
        {
            get
            {
                if (null == fTextBlockTextCoI9XText)
                {
                    fTextBlockTextCoI9XText = new Text("TextBlockTextCoI9XText", CheckBoxmAuthSiDup27CheckBox);
                    fTextBlockTextCoI9XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI9XText.UIMap.Index = 9;
                    fTextBlockTextCoI9XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI9XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI9XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup28CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup28CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup28CheckBox)
                {
                    fCheckBoxmAuthSiDup28CheckBox = new CheckBox("CheckBoxmAuthSiDup28CheckBox", SystemWindowsCoI2XDup1TreeItem);
                    fCheckBoxmAuthSiDup28CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup28CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup28CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_65");
                }

                return fCheckBoxmAuthSiDup28CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup29CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup29CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup29CheckBox)
                {
                    fCheckBoxmAuthSiDup29CheckBox = new CheckBox("CheckBoxmAuthSiDup29CheckBox", SystemWindowsCoI2XDup1TreeItem);
                    fCheckBoxmAuthSiDup29CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup29CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup29CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_65");
                }

                return fCheckBoxmAuthSiDup29CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup10ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup10ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup10ComboBox)
                {
                    fComboBoxmAuthSiDup10ComboBox = new ComboBox("ComboBoxmAuthSiDup10ComboBox", SystemWindowsCoI2XDup1TreeItem);
                    fComboBoxmAuthSiDup10ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup10ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup10ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_65");
                }

                return fComboBoxmAuthSiDup10ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI1XDup4TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI1XDup4TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI1XDup4TreeItem)
                {
                    fSystemWindowsCoI1XDup4TreeItem = new TreeItem("SystemWindowsCoI1XDup4TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI1XDup4TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI1XDup4TreeItem.UIMap.Index = 1;
                    fSystemWindowsCoI1XDup4TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI1XDup4TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:7");
                }

                return fSystemWindowsCoI1XDup4TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI11XButton
        /// </summary>
        public Button ButtonExpanderI11XButton
        {
            get
            {
                if (null == fButtonExpanderI11XButton)
                {
                    fButtonExpanderI11XButton = new Button("ButtonExpanderI11XButton", SystemWindowsCoI1XDup4TreeItem);
                    fButtonExpanderI11XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI11XButton.UIMap.Index = 11;
                    fButtonExpanderI11XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI11XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI11XButton;
            }
        }

        /// <summary>
        /// Gets Reference to EmailapplicatioDup0Text
        /// </summary>
        public Text EmailapplicatioDup0Text
        {
            get
            {
                if (null == fEmailapplicatioDup0Text)
                {
                    fEmailapplicatioDup0Text = new Text("EmailapplicatioDup0Text", SystemWindowsCoI1XDup4TreeItem);
                    fEmailapplicatioDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fEmailapplicatioDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fEmailapplicatioDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail application");
                }

                return fEmailapplicatioDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to EmailapplicatioDup1Text
        /// </summary>
        public Text EmailapplicatioDup1Text
        {
            get
            {
                if (null == fEmailapplicatioDup1Text)
                {
                    fEmailapplicatioDup1Text = new Text("EmailapplicatioDup1Text", EmailapplicatioDup0Text);
                    fEmailapplicatioDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fEmailapplicatioDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEmailapplicatioDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail application");
                }

                return fEmailapplicatioDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup30CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup30CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup30CheckBox)
                {
                    fCheckBoxmAuthSiDup30CheckBox = new CheckBox("CheckBoxmAuthSiDup30CheckBox", SystemWindowsCoI1XDup4TreeItem);
                    fCheckBoxmAuthSiDup30CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup30CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup30CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_68");
                }

                return fCheckBoxmAuthSiDup30CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI10XImage
        /// </summary>
        public Image ImageLockI10XImage
        {
            get
            {
                if (null == fImageLockI10XImage)
                {
                    fImageLockI10XImage = new Image("ImageLockI10XImage", CheckBoxmAuthSiDup30CheckBox);
                    fImageLockI10XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI10XImage.UIMap.Index = 10;
                    fImageLockI10XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI10XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI10XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI10XText
        /// </summary>
        public Text TextBlockTextCoI10XText
        {
            get
            {
                if (null == fTextBlockTextCoI10XText)
                {
                    fTextBlockTextCoI10XText = new Text("TextBlockTextCoI10XText", CheckBoxmAuthSiDup30CheckBox);
                    fTextBlockTextCoI10XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI10XText.UIMap.Index = 10;
                    fTextBlockTextCoI10XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI10XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI10XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup31CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup31CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup31CheckBox)
                {
                    fCheckBoxmAuthSiDup31CheckBox = new CheckBox("CheckBoxmAuthSiDup31CheckBox", SystemWindowsCoI1XDup4TreeItem);
                    fCheckBoxmAuthSiDup31CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup31CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup31CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_68");
                }

                return fCheckBoxmAuthSiDup31CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup32CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup32CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup32CheckBox)
                {
                    fCheckBoxmAuthSiDup32CheckBox = new CheckBox("CheckBoxmAuthSiDup32CheckBox", SystemWindowsCoI1XDup4TreeItem);
                    fCheckBoxmAuthSiDup32CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup32CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup32CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_68");
                }

                return fCheckBoxmAuthSiDup32CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup11ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup11ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup11ComboBox)
                {
                    fComboBoxmAuthSiDup11ComboBox = new ComboBox("ComboBoxmAuthSiDup11ComboBox", SystemWindowsCoI1XDup4TreeItem);
                    fComboBoxmAuthSiDup11ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup11ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup11ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_68");
                }

                return fComboBoxmAuthSiDup11ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI2XDup2TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI2XDup2TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI2XDup2TreeItem)
                {
                    fSystemWindowsCoI2XDup2TreeItem = new TreeItem("SystemWindowsCoI2XDup2TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI2XDup2TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI2XDup2TreeItem.UIMap.Index = 2;
                    fSystemWindowsCoI2XDup2TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI2XDup2TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:3");
                }

                return fSystemWindowsCoI2XDup2TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI12XButton
        /// </summary>
        public Button ButtonExpanderI12XButton
        {
            get
            {
                if (null == fButtonExpanderI12XButton)
                {
                    fButtonExpanderI12XButton = new Button("ButtonExpanderI12XButton", SystemWindowsCoI2XDup2TreeItem);
                    fButtonExpanderI12XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI12XButton.UIMap.Index = 12;
                    fButtonExpanderI12XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI12XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI12XButton;
            }
        }

        /// <summary>
        /// Gets Reference to AddressBookText
        /// </summary>
        public Text AddressBookText
        {
            get
            {
                if (null == fAddressBookText)
                {
                    fAddressBookText = new Text("AddressBookText", SystemWindowsCoI2XDup2TreeItem);
                    fAddressBookText.UIMap.Scope = UIASeachScope.Children;
                    fAddressBookText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAddressBookText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book");
                }

                return fAddressBookText;
            }
        }

        /// <summary>
        /// Gets Reference to AddressBookTextText
        /// </summary>
        public Text AddressBookTextText
        {
            get
            {
                if (null == fAddressBookTextText)
                {
                    fAddressBookTextText = new Text("AddressBookTextText", AddressBookText);
                    fAddressBookTextText.UIMap.Scope = UIASeachScope.Children;
                    fAddressBookTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddressBookTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book");
                }

                return fAddressBookTextText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup33CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup33CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup33CheckBox)
                {
                    fCheckBoxmAuthSiDup33CheckBox = new CheckBox("CheckBoxmAuthSiDup33CheckBox", SystemWindowsCoI2XDup2TreeItem);
                    fCheckBoxmAuthSiDup33CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup33CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup33CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_76");
                }

                return fCheckBoxmAuthSiDup33CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI11XImage
        /// </summary>
        public Image ImageLockI11XImage
        {
            get
            {
                if (null == fImageLockI11XImage)
                {
                    fImageLockI11XImage = new Image("ImageLockI11XImage", CheckBoxmAuthSiDup33CheckBox);
                    fImageLockI11XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI11XImage.UIMap.Index = 11;
                    fImageLockI11XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI11XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI11XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI11XText
        /// </summary>
        public Text TextBlockTextCoI11XText
        {
            get
            {
                if (null == fTextBlockTextCoI11XText)
                {
                    fTextBlockTextCoI11XText = new Text("TextBlockTextCoI11XText", CheckBoxmAuthSiDup33CheckBox);
                    fTextBlockTextCoI11XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI11XText.UIMap.Index = 11;
                    fTextBlockTextCoI11XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI11XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI11XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup34CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup34CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup34CheckBox)
                {
                    fCheckBoxmAuthSiDup34CheckBox = new CheckBox("CheckBoxmAuthSiDup34CheckBox", SystemWindowsCoI2XDup2TreeItem);
                    fCheckBoxmAuthSiDup34CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup34CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup34CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_76");
                }

                return fCheckBoxmAuthSiDup34CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup35CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup35CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup35CheckBox)
                {
                    fCheckBoxmAuthSiDup35CheckBox = new CheckBox("CheckBoxmAuthSiDup35CheckBox", SystemWindowsCoI2XDup2TreeItem);
                    fCheckBoxmAuthSiDup35CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup35CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup35CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_76");
                }

                return fCheckBoxmAuthSiDup35CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup12ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup12ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup12ComboBox)
                {
                    fComboBoxmAuthSiDup12ComboBox = new ComboBox("ComboBoxmAuthSiDup12ComboBox", SystemWindowsCoI2XDup2TreeItem);
                    fComboBoxmAuthSiDup12ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup12ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup12ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_76");
                }

                return fComboBoxmAuthSiDup12ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI2XDup3TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI2XDup3TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI2XDup3TreeItem)
                {
                    fSystemWindowsCoI2XDup3TreeItem = new TreeItem("SystemWindowsCoI2XDup3TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI2XDup3TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI2XDup3TreeItem.UIMap.Index = 2;
                    fSystemWindowsCoI2XDup3TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI2XDup3TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:1");
                }

                return fSystemWindowsCoI2XDup3TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI13XButton
        /// </summary>
        public Button ButtonExpanderI13XButton
        {
            get
            {
                if (null == fButtonExpanderI13XButton)
                {
                    fButtonExpanderI13XButton = new Button("ButtonExpanderI13XButton", SystemWindowsCoI2XDup3TreeItem);
                    fButtonExpanderI13XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI13XButton.UIMap.Index = 13;
                    fButtonExpanderI13XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI13XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI13XButton;
            }
        }

        /// <summary>
        /// Gets Reference to SavetoSharePoinDup0Text
        /// </summary>
        public Text SavetoSharePoinDup0Text
        {
            get
            {
                if (null == fSavetoSharePoinDup0Text)
                {
                    fSavetoSharePoinDup0Text = new Text("SavetoSharePoinDup0Text", SystemWindowsCoI2XDup3TreeItem);
                    fSavetoSharePoinDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSavetoSharePoinDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSavetoSharePoinDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save to SharePoint®");
                }

                return fSavetoSharePoinDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SavetoSharePoinDup1Text
        /// </summary>
        public Text SavetoSharePoinDup1Text
        {
            get
            {
                if (null == fSavetoSharePoinDup1Text)
                {
                    fSavetoSharePoinDup1Text = new Text("SavetoSharePoinDup1Text", SavetoSharePoinDup0Text);
                    fSavetoSharePoinDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSavetoSharePoinDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSavetoSharePoinDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save to SharePoint®");
                }

                return fSavetoSharePoinDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup36CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup36CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup36CheckBox)
                {
                    fCheckBoxmAuthSiDup36CheckBox = new CheckBox("CheckBoxmAuthSiDup36CheckBox", SystemWindowsCoI2XDup3TreeItem);
                    fCheckBoxmAuthSiDup36CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup36CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup36CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_80");
                }

                return fCheckBoxmAuthSiDup36CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI12XImage
        /// </summary>
        public Image ImageLockI12XImage
        {
            get
            {
                if (null == fImageLockI12XImage)
                {
                    fImageLockI12XImage = new Image("ImageLockI12XImage", CheckBoxmAuthSiDup36CheckBox);
                    fImageLockI12XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI12XImage.UIMap.Index = 12;
                    fImageLockI12XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI12XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI12XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI12XText
        /// </summary>
        public Text TextBlockTextCoI12XText
        {
            get
            {
                if (null == fTextBlockTextCoI12XText)
                {
                    fTextBlockTextCoI12XText = new Text("TextBlockTextCoI12XText", CheckBoxmAuthSiDup36CheckBox);
                    fTextBlockTextCoI12XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI12XText.UIMap.Index = 12;
                    fTextBlockTextCoI12XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI12XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI12XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup37CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup37CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup37CheckBox)
                {
                    fCheckBoxmAuthSiDup37CheckBox = new CheckBox("CheckBoxmAuthSiDup37CheckBox", SystemWindowsCoI2XDup3TreeItem);
                    fCheckBoxmAuthSiDup37CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup37CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup37CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_80");
                }

                return fCheckBoxmAuthSiDup37CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup38CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup38CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup38CheckBox)
                {
                    fCheckBoxmAuthSiDup38CheckBox = new CheckBox("CheckBoxmAuthSiDup38CheckBox", SystemWindowsCoI2XDup3TreeItem);
                    fCheckBoxmAuthSiDup38CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup38CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup38CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_80");
                }

                return fCheckBoxmAuthSiDup38CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup13ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup13ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup13ComboBox)
                {
                    fComboBoxmAuthSiDup13ComboBox = new ComboBox("ComboBoxmAuthSiDup13ComboBox", SystemWindowsCoI2XDup3TreeItem);
                    fComboBoxmAuthSiDup13ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup13ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup13ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_80");
                }

                return fComboBoxmAuthSiDup13ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI3XDup0TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI3XDup0TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI3XDup0TreeItem)
                {
                    fSystemWindowsCoI3XDup0TreeItem = new TreeItem("SystemWindowsCoI3XDup0TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI3XDup0TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI3XDup0TreeItem.UIMap.Index = 3;
                    fSystemWindowsCoI3XDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI3XDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:2");
                }

                return fSystemWindowsCoI3XDup0TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI14XButton
        /// </summary>
        public Button ButtonExpanderI14XButton
        {
            get
            {
                if (null == fButtonExpanderI14XButton)
                {
                    fButtonExpanderI14XButton = new Button("ButtonExpanderI14XButton", SystemWindowsCoI3XDup0TreeItem);
                    fButtonExpanderI14XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI14XButton.UIMap.Index = 14;
                    fButtonExpanderI14XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI14XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI14XButton;
            }
        }

        /// <summary>
        /// Gets Reference to NetworkFolderapDup0Text
        /// </summary>
        public Text NetworkFolderapDup0Text
        {
            get
            {
                if (null == fNetworkFolderapDup0Text)
                {
                    fNetworkFolderapDup0Text = new Text("NetworkFolderapDup0Text", SystemWindowsCoI3XDup0TreeItem);
                    fNetworkFolderapDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fNetworkFolderapDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fNetworkFolderapDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network Folder application");
                }

                return fNetworkFolderapDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to NetworkFolderapDup1Text
        /// </summary>
        public Text NetworkFolderapDup1Text
        {
            get
            {
                if (null == fNetworkFolderapDup1Text)
                {
                    fNetworkFolderapDup1Text = new Text("NetworkFolderapDup1Text", NetworkFolderapDup0Text);
                    fNetworkFolderapDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fNetworkFolderapDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNetworkFolderapDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network Folder application");
                }

                return fNetworkFolderapDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup39CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup39CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup39CheckBox)
                {
                    fCheckBoxmAuthSiDup39CheckBox = new CheckBox("CheckBoxmAuthSiDup39CheckBox", SystemWindowsCoI3XDup0TreeItem);
                    fCheckBoxmAuthSiDup39CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup39CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup39CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_82");
                }

                return fCheckBoxmAuthSiDup39CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI13XImage
        /// </summary>
        public Image ImageLockI13XImage
        {
            get
            {
                if (null == fImageLockI13XImage)
                {
                    fImageLockI13XImage = new Image("ImageLockI13XImage", CheckBoxmAuthSiDup39CheckBox);
                    fImageLockI13XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI13XImage.UIMap.Index = 13;
                    fImageLockI13XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI13XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI13XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI13XText
        /// </summary>
        public Text TextBlockTextCoI13XText
        {
            get
            {
                if (null == fTextBlockTextCoI13XText)
                {
                    fTextBlockTextCoI13XText = new Text("TextBlockTextCoI13XText", CheckBoxmAuthSiDup39CheckBox);
                    fTextBlockTextCoI13XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI13XText.UIMap.Index = 13;
                    fTextBlockTextCoI13XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI13XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI13XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup40CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup40CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup40CheckBox)
                {
                    fCheckBoxmAuthSiDup40CheckBox = new CheckBox("CheckBoxmAuthSiDup40CheckBox", SystemWindowsCoI3XDup0TreeItem);
                    fCheckBoxmAuthSiDup40CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup40CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup40CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_82");
                }

                return fCheckBoxmAuthSiDup40CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup41CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup41CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup41CheckBox)
                {
                    fCheckBoxmAuthSiDup41CheckBox = new CheckBox("CheckBoxmAuthSiDup41CheckBox", SystemWindowsCoI3XDup0TreeItem);
                    fCheckBoxmAuthSiDup41CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup41CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup41CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_82");
                }

                return fCheckBoxmAuthSiDup41CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup14ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup14ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup14ComboBox)
                {
                    fComboBoxmAuthSiDup14ComboBox = new ComboBox("ComboBoxmAuthSiDup14ComboBox", SystemWindowsCoI3XDup0TreeItem);
                    fComboBoxmAuthSiDup14ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup14ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup14ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_82");
                }

                return fComboBoxmAuthSiDup14ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI3XDup1TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI3XDup1TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI3XDup1TreeItem)
                {
                    fSystemWindowsCoI3XDup1TreeItem = new TreeItem("SystemWindowsCoI3XDup1TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI3XDup1TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI3XDup1TreeItem.UIMap.Index = 3;
                    fSystemWindowsCoI3XDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI3XDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:1");
                }

                return fSystemWindowsCoI3XDup1TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI15XButton
        /// </summary>
        public Button ButtonExpanderI15XButton
        {
            get
            {
                if (null == fButtonExpanderI15XButton)
                {
                    fButtonExpanderI15XButton = new Button("ButtonExpanderI15XButton", SystemWindowsCoI3XDup1TreeItem);
                    fButtonExpanderI15XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI15XButton.UIMap.Index = 15;
                    fButtonExpanderI15XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI15XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI15XButton;
            }
        }

        /// <summary>
        /// Gets Reference to SavetoUSBapplicDup0Text
        /// </summary>
        public Text SavetoUSBapplicDup0Text
        {
            get
            {
                if (null == fSavetoUSBapplicDup0Text)
                {
                    fSavetoUSBapplicDup0Text = new Text("SavetoUSBapplicDup0Text", SystemWindowsCoI3XDup1TreeItem);
                    fSavetoUSBapplicDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSavetoUSBapplicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSavetoUSBapplicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save to USB application");
                }

                return fSavetoUSBapplicDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SavetoUSBapplicDup1Text
        /// </summary>
        public Text SavetoUSBapplicDup1Text
        {
            get
            {
                if (null == fSavetoUSBapplicDup1Text)
                {
                    fSavetoUSBapplicDup1Text = new Text("SavetoUSBapplicDup1Text", SavetoUSBapplicDup0Text);
                    fSavetoUSBapplicDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSavetoUSBapplicDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSavetoUSBapplicDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save to USB application");
                }

                return fSavetoUSBapplicDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup42CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup42CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup42CheckBox)
                {
                    fCheckBoxmAuthSiDup42CheckBox = new CheckBox("CheckBoxmAuthSiDup42CheckBox", SystemWindowsCoI3XDup1TreeItem);
                    fCheckBoxmAuthSiDup42CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup42CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup42CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_85");
                }

                return fCheckBoxmAuthSiDup42CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI14XImage
        /// </summary>
        public Image ImageLockI14XImage
        {
            get
            {
                if (null == fImageLockI14XImage)
                {
                    fImageLockI14XImage = new Image("ImageLockI14XImage", CheckBoxmAuthSiDup42CheckBox);
                    fImageLockI14XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI14XImage.UIMap.Index = 14;
                    fImageLockI14XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI14XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI14XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI14XText
        /// </summary>
        public Text TextBlockTextCoI14XText
        {
            get
            {
                if (null == fTextBlockTextCoI14XText)
                {
                    fTextBlockTextCoI14XText = new Text("TextBlockTextCoI14XText", CheckBoxmAuthSiDup42CheckBox);
                    fTextBlockTextCoI14XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI14XText.UIMap.Index = 14;
                    fTextBlockTextCoI14XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI14XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI14XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup43CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup43CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup43CheckBox)
                {
                    fCheckBoxmAuthSiDup43CheckBox = new CheckBox("CheckBoxmAuthSiDup43CheckBox", SystemWindowsCoI3XDup1TreeItem);
                    fCheckBoxmAuthSiDup43CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup43CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup43CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_85");
                }

                return fCheckBoxmAuthSiDup43CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup44CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup44CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup44CheckBox)
                {
                    fCheckBoxmAuthSiDup44CheckBox = new CheckBox("CheckBoxmAuthSiDup44CheckBox", SystemWindowsCoI3XDup1TreeItem);
                    fCheckBoxmAuthSiDup44CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup44CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup44CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_85");
                }

                return fCheckBoxmAuthSiDup44CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup15ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup15ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup15ComboBox)
                {
                    fComboBoxmAuthSiDup15ComboBox = new ComboBox("ComboBoxmAuthSiDup15ComboBox", SystemWindowsCoI3XDup1TreeItem);
                    fComboBoxmAuthSiDup15ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup15ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup15ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_85");
                }

                return fComboBoxmAuthSiDup15ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI3XDup2TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI3XDup2TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI3XDup2TreeItem)
                {
                    fSystemWindowsCoI3XDup2TreeItem = new TreeItem("SystemWindowsCoI3XDup2TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI3XDup2TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI3XDup2TreeItem.UIMap.Index = 3;
                    fSystemWindowsCoI3XDup2TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI3XDup2TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:0");
                }

                return fSystemWindowsCoI3XDup2TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI16XButton
        /// </summary>
        public Button ButtonExpanderI16XButton
        {
            get
            {
                if (null == fButtonExpanderI16XButton)
                {
                    fButtonExpanderI16XButton = new Button("ButtonExpanderI16XButton", SystemWindowsCoI3XDup2TreeItem);
                    fButtonExpanderI16XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI16XButton.UIMap.Index = 16;
                    fButtonExpanderI16XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI16XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI16XButton;
            }
        }

        /// <summary>
        /// Gets Reference to SavetoDeviceMemDup0Text
        /// </summary>
        public Text SavetoDeviceMemDup0Text
        {
            get
            {
                if (null == fSavetoDeviceMemDup0Text)
                {
                    fSavetoDeviceMemDup0Text = new Text("SavetoDeviceMemDup0Text", SystemWindowsCoI3XDup2TreeItem);
                    fSavetoDeviceMemDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSavetoDeviceMemDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSavetoDeviceMemDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save to Device Memory application");
                }

                return fSavetoDeviceMemDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SavetoDeviceMemDup1Text
        /// </summary>
        public Text SavetoDeviceMemDup1Text
        {
            get
            {
                if (null == fSavetoDeviceMemDup1Text)
                {
                    fSavetoDeviceMemDup1Text = new Text("SavetoDeviceMemDup1Text", SavetoDeviceMemDup0Text);
                    fSavetoDeviceMemDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSavetoDeviceMemDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSavetoDeviceMemDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save to Device Memory application");
                }

                return fSavetoDeviceMemDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup45CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup45CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup45CheckBox)
                {
                    fCheckBoxmAuthSiDup45CheckBox = new CheckBox("CheckBoxmAuthSiDup45CheckBox", SystemWindowsCoI3XDup2TreeItem);
                    fCheckBoxmAuthSiDup45CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup45CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup45CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_87");
                }

                return fCheckBoxmAuthSiDup45CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI15XImage
        /// </summary>
        public Image ImageLockI15XImage
        {
            get
            {
                if (null == fImageLockI15XImage)
                {
                    fImageLockI15XImage = new Image("ImageLockI15XImage", CheckBoxmAuthSiDup45CheckBox);
                    fImageLockI15XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI15XImage.UIMap.Index = 15;
                    fImageLockI15XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI15XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI15XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI15XText
        /// </summary>
        public Text TextBlockTextCoI15XText
        {
            get
            {
                if (null == fTextBlockTextCoI15XText)
                {
                    fTextBlockTextCoI15XText = new Text("TextBlockTextCoI15XText", CheckBoxmAuthSiDup45CheckBox);
                    fTextBlockTextCoI15XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI15XText.UIMap.Index = 15;
                    fTextBlockTextCoI15XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI15XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI15XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup46CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup46CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup46CheckBox)
                {
                    fCheckBoxmAuthSiDup46CheckBox = new CheckBox("CheckBoxmAuthSiDup46CheckBox", SystemWindowsCoI3XDup2TreeItem);
                    fCheckBoxmAuthSiDup46CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup46CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup46CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_87");
                }

                return fCheckBoxmAuthSiDup46CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup47CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup47CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup47CheckBox)
                {
                    fCheckBoxmAuthSiDup47CheckBox = new CheckBox("CheckBoxmAuthSiDup47CheckBox", SystemWindowsCoI3XDup2TreeItem);
                    fCheckBoxmAuthSiDup47CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup47CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup47CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_87");
                }

                return fCheckBoxmAuthSiDup47CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup16ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup16ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup16ComboBox)
                {
                    fComboBoxmAuthSiDup16ComboBox = new ComboBox("ComboBoxmAuthSiDup16ComboBox", SystemWindowsCoI3XDup2TreeItem);
                    fComboBoxmAuthSiDup16ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup16ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup16ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_87");
                }

                return fComboBoxmAuthSiDup16ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI4XDup0TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI4XDup0TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI4XDup0TreeItem)
                {
                    fSystemWindowsCoI4XDup0TreeItem = new TreeItem("SystemWindowsCoI4XDup0TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI4XDup0TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI4XDup0TreeItem.UIMap.Index = 4;
                    fSystemWindowsCoI4XDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI4XDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:0");
                }

                return fSystemWindowsCoI4XDup0TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI17XButton
        /// </summary>
        public Button ButtonExpanderI17XButton
        {
            get
            {
                if (null == fButtonExpanderI17XButton)
                {
                    fButtonExpanderI17XButton = new Button("ButtonExpanderI17XButton", SystemWindowsCoI4XDup0TreeItem);
                    fButtonExpanderI17XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI17XButton.UIMap.Index = 17;
                    fButtonExpanderI17XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI17XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI17XButton;
            }
        }

        /// <summary>
        /// Gets Reference to RemoteScanRequeDup0Text
        /// </summary>
        public Text RemoteScanRequeDup0Text
        {
            get
            {
                if (null == fRemoteScanRequeDup0Text)
                {
                    fRemoteScanRequeDup0Text = new Text("RemoteScanRequeDup0Text", SystemWindowsCoI4XDup0TreeItem);
                    fRemoteScanRequeDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fRemoteScanRequeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fRemoteScanRequeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remote Scan Request");
                }

                return fRemoteScanRequeDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to RemoteScanRequeDup1Text
        /// </summary>
        public Text RemoteScanRequeDup1Text
        {
            get
            {
                if (null == fRemoteScanRequeDup1Text)
                {
                    fRemoteScanRequeDup1Text = new Text("RemoteScanRequeDup1Text", RemoteScanRequeDup0Text);
                    fRemoteScanRequeDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fRemoteScanRequeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRemoteScanRequeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remote Scan Request");
                }

                return fRemoteScanRequeDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup48CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup48CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup48CheckBox)
                {
                    fCheckBoxmAuthSiDup48CheckBox = new CheckBox("CheckBoxmAuthSiDup48CheckBox", SystemWindowsCoI4XDup0TreeItem);
                    fCheckBoxmAuthSiDup48CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup48CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup48CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_88");
                }

                return fCheckBoxmAuthSiDup48CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI16XImage
        /// </summary>
        public Image ImageLockI16XImage
        {
            get
            {
                if (null == fImageLockI16XImage)
                {
                    fImageLockI16XImage = new Image("ImageLockI16XImage", CheckBoxmAuthSiDup48CheckBox);
                    fImageLockI16XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI16XImage.UIMap.Index = 16;
                    fImageLockI16XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI16XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI16XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI16XText
        /// </summary>
        public Text TextBlockTextCoI16XText
        {
            get
            {
                if (null == fTextBlockTextCoI16XText)
                {
                    fTextBlockTextCoI16XText = new Text("TextBlockTextCoI16XText", CheckBoxmAuthSiDup48CheckBox);
                    fTextBlockTextCoI16XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI16XText.UIMap.Index = 16;
                    fTextBlockTextCoI16XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI16XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI16XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup49CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup49CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup49CheckBox)
                {
                    fCheckBoxmAuthSiDup49CheckBox = new CheckBox("CheckBoxmAuthSiDup49CheckBox", SystemWindowsCoI4XDup0TreeItem);
                    fCheckBoxmAuthSiDup49CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup49CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup49CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_88");
                }

                return fCheckBoxmAuthSiDup49CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup50CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup50CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup50CheckBox)
                {
                    fCheckBoxmAuthSiDup50CheckBox = new CheckBox("CheckBoxmAuthSiDup50CheckBox", SystemWindowsCoI4XDup0TreeItem);
                    fCheckBoxmAuthSiDup50CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup50CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup50CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_88");
                }

                return fCheckBoxmAuthSiDup50CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup17ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup17ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup17ComboBox)
                {
                    fComboBoxmAuthSiDup17ComboBox = new ComboBox("ComboBoxmAuthSiDup17ComboBox", SystemWindowsCoI4XDup0TreeItem);
                    fComboBoxmAuthSiDup17ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup17ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup17ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_88");
                }

                return fComboBoxmAuthSiDup17ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI0XDup5TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI0XDup5TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI0XDup5TreeItem)
                {
                    fSystemWindowsCoI0XDup5TreeItem = new TreeItem("SystemWindowsCoI0XDup5TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI0XDup5TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI0XDup5TreeItem.UIMap.Index = 0;
                    fSystemWindowsCoI0XDup5TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI0XDup5TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:6");
                }

                return fSystemWindowsCoI0XDup5TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI18XButton
        /// </summary>
        public Button ButtonExpanderI18XButton
        {
            get
            {
                if (null == fButtonExpanderI18XButton)
                {
                    fButtonExpanderI18XButton = new Button("ButtonExpanderI18XButton", SystemWindowsCoI0XDup5TreeItem);
                    fButtonExpanderI18XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI18XButton.UIMap.Index = 18;
                    fButtonExpanderI18XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI18XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI18XButton;
            }
        }

        /// <summary>
        /// Gets Reference to InformationText
        /// </summary>
        public Text InformationText
        {
            get
            {
                if (null == fInformationText)
                {
                    fInformationText = new Text("InformationText", SystemWindowsCoI0XDup5TreeItem);
                    fInformationText.UIMap.Scope = UIASeachScope.Children;
                    fInformationText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fInformationText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Information");
                }

                return fInformationText;
            }
        }

        /// <summary>
        /// Gets Reference to InformationTextText
        /// </summary>
        public Text InformationTextText
        {
            get
            {
                if (null == fInformationTextText)
                {
                    fInformationTextText = new Text("InformationTextText", InformationText);
                    fInformationTextText.UIMap.Scope = UIASeachScope.Children;
                    fInformationTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fInformationTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Information");
                }

                return fInformationTextText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup51CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup51CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup51CheckBox)
                {
                    fCheckBoxmAuthSiDup51CheckBox = new CheckBox("CheckBoxmAuthSiDup51CheckBox", SystemWindowsCoI0XDup5TreeItem);
                    fCheckBoxmAuthSiDup51CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup51CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup51CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_89");
                }

                return fCheckBoxmAuthSiDup51CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI17XImage
        /// </summary>
        public Image ImageLockI17XImage
        {
            get
            {
                if (null == fImageLockI17XImage)
                {
                    fImageLockI17XImage = new Image("ImageLockI17XImage", CheckBoxmAuthSiDup51CheckBox);
                    fImageLockI17XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI17XImage.UIMap.Index = 17;
                    fImageLockI17XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI17XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI17XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI17XText
        /// </summary>
        public Text TextBlockTextCoI17XText
        {
            get
            {
                if (null == fTextBlockTextCoI17XText)
                {
                    fTextBlockTextCoI17XText = new Text("TextBlockTextCoI17XText", CheckBoxmAuthSiDup51CheckBox);
                    fTextBlockTextCoI17XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI17XText.UIMap.Index = 17;
                    fTextBlockTextCoI17XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI17XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI17XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup52CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup52CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup52CheckBox)
                {
                    fCheckBoxmAuthSiDup52CheckBox = new CheckBox("CheckBoxmAuthSiDup52CheckBox", SystemWindowsCoI0XDup5TreeItem);
                    fCheckBoxmAuthSiDup52CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup52CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup52CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_89");
                }

                return fCheckBoxmAuthSiDup52CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup53CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup53CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup53CheckBox)
                {
                    fCheckBoxmAuthSiDup53CheckBox = new CheckBox("CheckBoxmAuthSiDup53CheckBox", SystemWindowsCoI0XDup5TreeItem);
                    fCheckBoxmAuthSiDup53CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup53CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup53CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_89");
                }

                return fCheckBoxmAuthSiDup53CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup18ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup18ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup18ComboBox)
                {
                    fComboBoxmAuthSiDup18ComboBox = new ComboBox("ComboBoxmAuthSiDup18ComboBox", SystemWindowsCoI0XDup5TreeItem);
                    fComboBoxmAuthSiDup18ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup18ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup18ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_89");
                }

                return fComboBoxmAuthSiDup18ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI5XTreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI5XTreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI5XTreeItem)
                {
                    fSystemWindowsCoI5XTreeItem = new TreeItem("SystemWindowsCoI5XTreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI5XTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI5XTreeItem.UIMap.Index = 5;
                    fSystemWindowsCoI5XTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI5XTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:0");
                }

                return fSystemWindowsCoI5XTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI19XButton
        /// </summary>
        public Button ButtonExpanderI19XButton
        {
            get
            {
                if (null == fButtonExpanderI19XButton)
                {
                    fButtonExpanderI19XButton = new Button("ButtonExpanderI19XButton", SystemWindowsCoI5XTreeItem);
                    fButtonExpanderI19XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI19XButton.UIMap.Index = 19;
                    fButtonExpanderI19XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI19XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI19XButton;
            }
        }

        /// <summary>
        /// Gets Reference to NetworkingText
        /// </summary>
        public Text NetworkingText
        {
            get
            {
                if (null == fNetworkingText)
                {
                    fNetworkingText = new Text("NetworkingText", SystemWindowsCoI5XTreeItem);
                    fNetworkingText.UIMap.Scope = UIASeachScope.Children;
                    fNetworkingText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fNetworkingText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Networking");
                }

                return fNetworkingText;
            }
        }

        /// <summary>
        /// Gets Reference to NetworkingTextBText
        /// </summary>
        public Text NetworkingTextBText
        {
            get
            {
                if (null == fNetworkingTextBText)
                {
                    fNetworkingTextBText = new Text("NetworkingTextBText", NetworkingText);
                    fNetworkingTextBText.UIMap.Scope = UIASeachScope.Children;
                    fNetworkingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNetworkingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Networking");
                }

                return fNetworkingTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup54CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup54CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup54CheckBox)
                {
                    fCheckBoxmAuthSiDup54CheckBox = new CheckBox("CheckBoxmAuthSiDup54CheckBox", SystemWindowsCoI5XTreeItem);
                    fCheckBoxmAuthSiDup54CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup54CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup54CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_96");
                }

                return fCheckBoxmAuthSiDup54CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI18XImage
        /// </summary>
        public Image ImageLockI18XImage
        {
            get
            {
                if (null == fImageLockI18XImage)
                {
                    fImageLockI18XImage = new Image("ImageLockI18XImage", CheckBoxmAuthSiDup54CheckBox);
                    fImageLockI18XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI18XImage.UIMap.Index = 18;
                    fImageLockI18XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI18XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI18XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI18XText
        /// </summary>
        public Text TextBlockTextCoI18XText
        {
            get
            {
                if (null == fTextBlockTextCoI18XText)
                {
                    fTextBlockTextCoI18XText = new Text("TextBlockTextCoI18XText", CheckBoxmAuthSiDup54CheckBox);
                    fTextBlockTextCoI18XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI18XText.UIMap.Index = 18;
                    fTextBlockTextCoI18XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI18XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI18XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup55CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup55CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup55CheckBox)
                {
                    fCheckBoxmAuthSiDup55CheckBox = new CheckBox("CheckBoxmAuthSiDup55CheckBox", SystemWindowsCoI5XTreeItem);
                    fCheckBoxmAuthSiDup55CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup55CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup55CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_96");
                }

                return fCheckBoxmAuthSiDup55CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup56CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup56CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup56CheckBox)
                {
                    fCheckBoxmAuthSiDup56CheckBox = new CheckBox("CheckBoxmAuthSiDup56CheckBox", SystemWindowsCoI5XTreeItem);
                    fCheckBoxmAuthSiDup56CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup56CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup56CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_96");
                }

                return fCheckBoxmAuthSiDup56CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup19ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup19ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup19ComboBox)
                {
                    fComboBoxmAuthSiDup19ComboBox = new ComboBox("ComboBoxmAuthSiDup19ComboBox", SystemWindowsCoI5XTreeItem);
                    fComboBoxmAuthSiDup19ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup19ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup19ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_96");
                }

                return fComboBoxmAuthSiDup19ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI6XTreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI6XTreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI6XTreeItem)
                {
                    fSystemWindowsCoI6XTreeItem = new TreeItem("SystemWindowsCoI6XTreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI6XTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI6XTreeItem.UIMap.Index = 6;
                    fSystemWindowsCoI6XTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI6XTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:0");
                }

                return fSystemWindowsCoI6XTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI20XButton
        /// </summary>
        public Button ButtonExpanderI20XButton
        {
            get
            {
                if (null == fButtonExpanderI20XButton)
                {
                    fButtonExpanderI20XButton = new Button("ButtonExpanderI20XButton", SystemWindowsCoI6XTreeItem);
                    fButtonExpanderI20XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI20XButton.UIMap.Index = 20;
                    fButtonExpanderI20XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI20XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI20XButton;
            }
        }

        /// <summary>
        /// Gets Reference to HPWebServicesText
        /// </summary>
        public Text HPWebServicesText
        {
            get
            {
                if (null == fHPWebServicesText)
                {
                    fHPWebServicesText = new Text("HPWebServicesText", SystemWindowsCoI6XTreeItem);
                    fHPWebServicesText.UIMap.Scope = UIASeachScope.Children;
                    fHPWebServicesText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fHPWebServicesText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Web Services");
                }

                return fHPWebServicesText;
            }
        }

        /// <summary>
        /// Gets Reference to HPWebServicesTeText
        /// </summary>
        public Text HPWebServicesTeText
        {
            get
            {
                if (null == fHPWebServicesTeText)
                {
                    fHPWebServicesTeText = new Text("HPWebServicesTeText", HPWebServicesText);
                    fHPWebServicesTeText.UIMap.Scope = UIASeachScope.Children;
                    fHPWebServicesTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHPWebServicesTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Web Services");
                }

                return fHPWebServicesTeText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup57CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup57CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup57CheckBox)
                {
                    fCheckBoxmAuthSiDup57CheckBox = new CheckBox("CheckBoxmAuthSiDup57CheckBox", SystemWindowsCoI6XTreeItem);
                    fCheckBoxmAuthSiDup57CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup57CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup57CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_97");
                }

                return fCheckBoxmAuthSiDup57CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI19XImage
        /// </summary>
        public Image ImageLockI19XImage
        {
            get
            {
                if (null == fImageLockI19XImage)
                {
                    fImageLockI19XImage = new Image("ImageLockI19XImage", CheckBoxmAuthSiDup57CheckBox);
                    fImageLockI19XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI19XImage.UIMap.Index = 19;
                    fImageLockI19XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI19XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI19XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI19XText
        /// </summary>
        public Text TextBlockTextCoI19XText
        {
            get
            {
                if (null == fTextBlockTextCoI19XText)
                {
                    fTextBlockTextCoI19XText = new Text("TextBlockTextCoI19XText", CheckBoxmAuthSiDup57CheckBox);
                    fTextBlockTextCoI19XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI19XText.UIMap.Index = 19;
                    fTextBlockTextCoI19XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI19XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI19XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup58CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup58CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup58CheckBox)
                {
                    fCheckBoxmAuthSiDup58CheckBox = new CheckBox("CheckBoxmAuthSiDup58CheckBox", SystemWindowsCoI6XTreeItem);
                    fCheckBoxmAuthSiDup58CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup58CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup58CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_97");
                }

                return fCheckBoxmAuthSiDup58CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup59CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup59CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup59CheckBox)
                {
                    fCheckBoxmAuthSiDup59CheckBox = new CheckBox("CheckBoxmAuthSiDup59CheckBox", SystemWindowsCoI6XTreeItem);
                    fCheckBoxmAuthSiDup59CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup59CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup59CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_97");
                }

                return fCheckBoxmAuthSiDup59CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup20ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup20ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup20ComboBox)
                {
                    fComboBoxmAuthSiDup20ComboBox = new ComboBox("ComboBoxmAuthSiDup20ComboBox", SystemWindowsCoI6XTreeItem);
                    fComboBoxmAuthSiDup20ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup20ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup20ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_97");
                }

                return fComboBoxmAuthSiDup20ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup0TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoDup0TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoDup0TreeItem)
                {
                    fSystemWindowsCoDup0TreeItem = new TreeItem("SystemWindowsCoDup0TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoDup0TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:12");
                }

                return fSystemWindowsCoDup0TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI21XButton
        /// </summary>
        public Button ButtonExpanderI21XButton
        {
            get
            {
                if (null == fButtonExpanderI21XButton)
                {
                    fButtonExpanderI21XButton = new Button("ButtonExpanderI21XButton", SystemWindowsCoDup0TreeItem);
                    fButtonExpanderI21XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI21XButton.UIMap.Index = 21;
                    fButtonExpanderI21XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI21XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI21XButton;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralText
        /// </summary>
        public Text GeneralText
        {
            get
            {
                if (null == fGeneralText)
                {
                    fGeneralText = new Text("GeneralText", SystemWindowsCoDup0TreeItem);
                    fGeneralText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGeneralText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralText;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralTextBlocText
        /// </summary>
        public Text GeneralTextBlocText
        {
            get
            {
                if (null == fGeneralTextBlocText)
                {
                    fGeneralTextBlocText = new Text("GeneralTextBlocText", GeneralText);
                    fGeneralTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup60CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup60CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup60CheckBox)
                {
                    fCheckBoxmAuthSiDup60CheckBox = new CheckBox("CheckBoxmAuthSiDup60CheckBox", SystemWindowsCoDup0TreeItem);
                    fCheckBoxmAuthSiDup60CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup60CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup60CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_98");
                }

                return fCheckBoxmAuthSiDup60CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI20XImage
        /// </summary>
        public Image ImageLockI20XImage
        {
            get
            {
                if (null == fImageLockI20XImage)
                {
                    fImageLockI20XImage = new Image("ImageLockI20XImage", CheckBoxmAuthSiDup60CheckBox);
                    fImageLockI20XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI20XImage.UIMap.Index = 20;
                    fImageLockI20XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI20XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI20XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI20XText
        /// </summary>
        public Text TextBlockTextCoI20XText
        {
            get
            {
                if (null == fTextBlockTextCoI20XText)
                {
                    fTextBlockTextCoI20XText = new Text("TextBlockTextCoI20XText", CheckBoxmAuthSiDup60CheckBox);
                    fTextBlockTextCoI20XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI20XText.UIMap.Index = 20;
                    fTextBlockTextCoI20XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI20XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI20XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup61CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup61CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup61CheckBox)
                {
                    fCheckBoxmAuthSiDup61CheckBox = new CheckBox("CheckBoxmAuthSiDup61CheckBox", SystemWindowsCoDup0TreeItem);
                    fCheckBoxmAuthSiDup61CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup61CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup61CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_98");
                }

                return fCheckBoxmAuthSiDup61CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup62CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup62CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup62CheckBox)
                {
                    fCheckBoxmAuthSiDup62CheckBox = new CheckBox("CheckBoxmAuthSiDup62CheckBox", SystemWindowsCoDup0TreeItem);
                    fCheckBoxmAuthSiDup62CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup62CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup62CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_98");
                }

                return fCheckBoxmAuthSiDup62CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup21ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup21ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup21ComboBox)
                {
                    fComboBoxmAuthSiDup21ComboBox = new ComboBox("ComboBoxmAuthSiDup21ComboBox", SystemWindowsCoDup0TreeItem);
                    fComboBoxmAuthSiDup21ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup21ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup21ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_98");
                }

                return fComboBoxmAuthSiDup21ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup1TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoDup1TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoDup1TreeItem)
                {
                    fSystemWindowsCoDup1TreeItem = new TreeItem("SystemWindowsCoDup1TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoDup1TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:5");
                }

                return fSystemWindowsCoDup1TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI22XButton
        /// </summary>
        public Button ButtonExpanderI22XButton
        {
            get
            {
                if (null == fButtonExpanderI22XButton)
                {
                    fButtonExpanderI22XButton = new Button("ButtonExpanderI22XButton", SystemWindowsCoDup1TreeItem);
                    fButtonExpanderI22XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI22XButton.UIMap.Index = 22;
                    fButtonExpanderI22XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI22XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI22XButton;
            }
        }

        /// <summary>
        /// Gets Reference to TroubleshootingDup0Text
        /// </summary>
        public Text TroubleshootingDup0Text
        {
            get
            {
                if (null == fTroubleshootingDup0Text)
                {
                    fTroubleshootingDup0Text = new Text("TroubleshootingDup0Text", SystemWindowsCoDup1TreeItem);
                    fTroubleshootingDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fTroubleshootingDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTroubleshootingDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Troubleshooting");
                }

                return fTroubleshootingDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to TroubleshootingDup1Text
        /// </summary>
        public Text TroubleshootingDup1Text
        {
            get
            {
                if (null == fTroubleshootingDup1Text)
                {
                    fTroubleshootingDup1Text = new Text("TroubleshootingDup1Text", TroubleshootingDup0Text);
                    fTroubleshootingDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fTroubleshootingDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTroubleshootingDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Troubleshooting");
                }

                return fTroubleshootingDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup63CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup63CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup63CheckBox)
                {
                    fCheckBoxmAuthSiDup63CheckBox = new CheckBox("CheckBoxmAuthSiDup63CheckBox", SystemWindowsCoDup1TreeItem);
                    fCheckBoxmAuthSiDup63CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup63CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup63CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_111");
                }

                return fCheckBoxmAuthSiDup63CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI21XImage
        /// </summary>
        public Image ImageLockI21XImage
        {
            get
            {
                if (null == fImageLockI21XImage)
                {
                    fImageLockI21XImage = new Image("ImageLockI21XImage", CheckBoxmAuthSiDup63CheckBox);
                    fImageLockI21XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI21XImage.UIMap.Index = 21;
                    fImageLockI21XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI21XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI21XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI21XText
        /// </summary>
        public Text TextBlockTextCoI21XText
        {
            get
            {
                if (null == fTextBlockTextCoI21XText)
                {
                    fTextBlockTextCoI21XText = new Text("TextBlockTextCoI21XText", CheckBoxmAuthSiDup63CheckBox);
                    fTextBlockTextCoI21XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI21XText.UIMap.Index = 21;
                    fTextBlockTextCoI21XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI21XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI21XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup64CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup64CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup64CheckBox)
                {
                    fCheckBoxmAuthSiDup64CheckBox = new CheckBox("CheckBoxmAuthSiDup64CheckBox", SystemWindowsCoDup1TreeItem);
                    fCheckBoxmAuthSiDup64CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup64CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup64CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_111");
                }

                return fCheckBoxmAuthSiDup64CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup65CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup65CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup65CheckBox)
                {
                    fCheckBoxmAuthSiDup65CheckBox = new CheckBox("CheckBoxmAuthSiDup65CheckBox", SystemWindowsCoDup1TreeItem);
                    fCheckBoxmAuthSiDup65CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup65CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup65CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_111");
                }

                return fCheckBoxmAuthSiDup65CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup22ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup22ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup22ComboBox)
                {
                    fComboBoxmAuthSiDup22ComboBox = new ComboBox("ComboBoxmAuthSiDup22ComboBox", SystemWindowsCoDup1TreeItem);
                    fComboBoxmAuthSiDup22ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup22ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup22ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_111");
                }

                return fComboBoxmAuthSiDup22ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI1XDup5TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI1XDup5TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI1XDup5TreeItem)
                {
                    fSystemWindowsCoI1XDup5TreeItem = new TreeItem("SystemWindowsCoI1XDup5TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI1XDup5TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI1XDup5TreeItem.UIMap.Index = 1;
                    fSystemWindowsCoI1XDup5TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI1XDup5TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:6");
                }

                return fSystemWindowsCoI1XDup5TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI23XButton
        /// </summary>
        public Button ButtonExpanderI23XButton
        {
            get
            {
                if (null == fButtonExpanderI23XButton)
                {
                    fButtonExpanderI23XButton = new Button("ButtonExpanderI23XButton", SystemWindowsCoI1XDup5TreeItem);
                    fButtonExpanderI23XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI23XButton.UIMap.Index = 23;
                    fButtonExpanderI23XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI23XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI23XButton;
            }
        }

        /// <summary>
        /// Gets Reference to SecurityText
        /// </summary>
        public Text SecurityText
        {
            get
            {
                if (null == fSecurityText)
                {
                    fSecurityText = new Text("SecurityText", SystemWindowsCoI1XDup5TreeItem);
                    fSecurityText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSecurityText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                }

                return fSecurityText;
            }
        }

        /// <summary>
        /// Gets Reference to SecurityTextBloDup0Text
        /// </summary>
        public Text SecurityTextBloDup0Text
        {
            get
            {
                if (null == fSecurityTextBloDup0Text)
                {
                    fSecurityTextBloDup0Text = new Text("SecurityTextBloDup0Text", SecurityText);
                    fSecurityTextBloDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSecurityTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                }

                return fSecurityTextBloDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup66CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup66CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup66CheckBox)
                {
                    fCheckBoxmAuthSiDup66CheckBox = new CheckBox("CheckBoxmAuthSiDup66CheckBox", SystemWindowsCoI1XDup5TreeItem);
                    fCheckBoxmAuthSiDup66CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup66CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup66CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_117");
                }

                return fCheckBoxmAuthSiDup66CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI22XImage
        /// </summary>
        public Image ImageLockI22XImage
        {
            get
            {
                if (null == fImageLockI22XImage)
                {
                    fImageLockI22XImage = new Image("ImageLockI22XImage", CheckBoxmAuthSiDup66CheckBox);
                    fImageLockI22XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI22XImage.UIMap.Index = 22;
                    fImageLockI22XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI22XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI22XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI22XText
        /// </summary>
        public Text TextBlockTextCoI22XText
        {
            get
            {
                if (null == fTextBlockTextCoI22XText)
                {
                    fTextBlockTextCoI22XText = new Text("TextBlockTextCoI22XText", CheckBoxmAuthSiDup66CheckBox);
                    fTextBlockTextCoI22XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI22XText.UIMap.Index = 22;
                    fTextBlockTextCoI22XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI22XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI22XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup67CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup67CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup67CheckBox)
                {
                    fCheckBoxmAuthSiDup67CheckBox = new CheckBox("CheckBoxmAuthSiDup67CheckBox", SystemWindowsCoI1XDup5TreeItem);
                    fCheckBoxmAuthSiDup67CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup67CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup67CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_117");
                }

                return fCheckBoxmAuthSiDup67CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup68CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup68CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup68CheckBox)
                {
                    fCheckBoxmAuthSiDup68CheckBox = new CheckBox("CheckBoxmAuthSiDup68CheckBox", SystemWindowsCoI1XDup5TreeItem);
                    fCheckBoxmAuthSiDup68CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup68CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup68CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_117");
                }

                return fCheckBoxmAuthSiDup68CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup23ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup23ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup23ComboBox)
                {
                    fComboBoxmAuthSiDup23ComboBox = new ComboBox("ComboBoxmAuthSiDup23ComboBox", SystemWindowsCoI1XDup5TreeItem);
                    fComboBoxmAuthSiDup23ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup23ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup23ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_117");
                }

                return fComboBoxmAuthSiDup23ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI4XDup1TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI4XDup1TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI4XDup1TreeItem)
                {
                    fSystemWindowsCoI4XDup1TreeItem = new TreeItem("SystemWindowsCoI4XDup1TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI4XDup1TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI4XDup1TreeItem.UIMap.Index = 4;
                    fSystemWindowsCoI4XDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI4XDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:1");
                }

                return fSystemWindowsCoI4XDup1TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI24XButton
        /// </summary>
        public Button ButtonExpanderI24XButton
        {
            get
            {
                if (null == fButtonExpanderI24XButton)
                {
                    fButtonExpanderI24XButton = new Button("ButtonExpanderI24XButton", SystemWindowsCoI4XDup1TreeItem);
                    fButtonExpanderI24XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI24XButton.UIMap.Index = 24;
                    fButtonExpanderI24XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI24XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI24XButton;
            }
        }

        /// <summary>
        /// Gets Reference to ScanDigitalSendDup0Text
        /// </summary>
        public Text ScanDigitalSendDup0Text
        {
            get
            {
                if (null == fScanDigitalSendDup0Text)
                {
                    fScanDigitalSendDup0Text = new Text("ScanDigitalSendDup0Text", SystemWindowsCoI4XDup1TreeItem);
                    fScanDigitalSendDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fScanDigitalSendDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fScanDigitalSendDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan/Digital Send");
                }

                return fScanDigitalSendDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to ScanDigitalSendDup1Text
        /// </summary>
        public Text ScanDigitalSendDup1Text
        {
            get
            {
                if (null == fScanDigitalSendDup1Text)
                {
                    fScanDigitalSendDup1Text = new Text("ScanDigitalSendDup1Text", ScanDigitalSendDup0Text);
                    fScanDigitalSendDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fScanDigitalSendDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fScanDigitalSendDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan/Digital Send");
                }

                return fScanDigitalSendDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup24ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup24ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup24ComboBox)
                {
                    fComboBoxmAuthSiDup24ComboBox = new ComboBox("ComboBoxmAuthSiDup24ComboBox", SystemWindowsCoI4XDup1TreeItem);
                    fComboBoxmAuthSiDup24ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup24ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup24ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_124");
                }

                return fComboBoxmAuthSiDup24ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI3XDup3TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI3XDup3TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI3XDup3TreeItem)
                {
                    fSystemWindowsCoI3XDup3TreeItem = new TreeItem("SystemWindowsCoI3XDup3TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI3XDup3TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI3XDup3TreeItem.UIMap.Index = 3;
                    fSystemWindowsCoI3XDup3TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI3XDup3TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:3");
                }

                return fSystemWindowsCoI3XDup3TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI25XButton
        /// </summary>
        public Button ButtonExpanderI25XButton
        {
            get
            {
                if (null == fButtonExpanderI25XButton)
                {
                    fButtonExpanderI25XButton = new Button("ButtonExpanderI25XButton", SystemWindowsCoI3XDup3TreeItem);
                    fButtonExpanderI25XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI25XButton.UIMap.Index = 25;
                    fButtonExpanderI25XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI25XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI25XButton;
            }
        }

        /// <summary>
        /// Gets Reference to FaxText
        /// </summary>
        public Text FaxText
        {
            get
            {
                if (null == fFaxText)
                {
                    fFaxText = new Text("FaxText", SystemWindowsCoI3XDup3TreeItem);
                    fFaxText.UIMap.Scope = UIASeachScope.Children;
                    fFaxText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFaxText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxText;
            }
        }

        /// <summary>
        /// Gets Reference to FaxTextBlockText
        /// </summary>
        public Text FaxTextBlockText
        {
            get
            {
                if (null == fFaxTextBlockText)
                {
                    fFaxTextBlockText = new Text("FaxTextBlockText", FaxText);
                    fFaxTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup25ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup25ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup25ComboBox)
                {
                    fComboBoxmAuthSiDup25ComboBox = new ComboBox("ComboBoxmAuthSiDup25ComboBox", SystemWindowsCoI3XDup3TreeItem);
                    fComboBoxmAuthSiDup25ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup25ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup25ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_126");
                }

                return fComboBoxmAuthSiDup25ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI2XDup4TreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI2XDup4TreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI2XDup4TreeItem)
                {
                    fSystemWindowsCoI2XDup4TreeItem = new TreeItem("SystemWindowsCoI2XDup4TreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI2XDup4TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI2XDup4TreeItem.UIMap.Index = 2;
                    fSystemWindowsCoI2XDup4TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI2XDup4TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:6");
                }

                return fSystemWindowsCoI2XDup4TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI26XButton
        /// </summary>
        public Button ButtonExpanderI26XButton
        {
            get
            {
                if (null == fButtonExpanderI26XButton)
                {
                    fButtonExpanderI26XButton = new Button("ButtonExpanderI26XButton", SystemWindowsCoI2XDup4TreeItem);
                    fButtonExpanderI26XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI26XButton.UIMap.Index = 26;
                    fButtonExpanderI26XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI26XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI26XButton;
            }
        }

        /// <summary>
        /// Gets Reference to CopyPrintText
        /// </summary>
        public Text CopyPrintText
        {
            get
            {
                if (null == fCopyPrintText)
                {
                    fCopyPrintText = new Text("CopyPrintText", SystemWindowsCoI2XDup4TreeItem);
                    fCopyPrintText.UIMap.Scope = UIASeachScope.Children;
                    fCopyPrintText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fCopyPrintText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Copy/Print");
                }

                return fCopyPrintText;
            }
        }

        /// <summary>
        /// Gets Reference to CopyPrintTextBlText
        /// </summary>
        public Text CopyPrintTextBlText
        {
            get
            {
                if (null == fCopyPrintTextBlText)
                {
                    fCopyPrintTextBlText = new Text("CopyPrintTextBlText", CopyPrintText);
                    fCopyPrintTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fCopyPrintTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCopyPrintTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Copy/Print");
                }

                return fCopyPrintTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup69CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup69CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup69CheckBox)
                {
                    fCheckBoxmAuthSiDup69CheckBox = new CheckBox("CheckBoxmAuthSiDup69CheckBox", SystemWindowsCoI2XDup4TreeItem);
                    fCheckBoxmAuthSiDup69CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup69CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup69CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_130");
                }

                return fCheckBoxmAuthSiDup69CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI23XImage
        /// </summary>
        public Image ImageLockI23XImage
        {
            get
            {
                if (null == fImageLockI23XImage)
                {
                    fImageLockI23XImage = new Image("ImageLockI23XImage", CheckBoxmAuthSiDup69CheckBox);
                    fImageLockI23XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI23XImage.UIMap.Index = 23;
                    fImageLockI23XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI23XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI23XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI23XText
        /// </summary>
        public Text TextBlockTextCoI23XText
        {
            get
            {
                if (null == fTextBlockTextCoI23XText)
                {
                    fTextBlockTextCoI23XText = new Text("TextBlockTextCoI23XText", CheckBoxmAuthSiDup69CheckBox);
                    fTextBlockTextCoI23XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI23XText.UIMap.Index = 23;
                    fTextBlockTextCoI23XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI23XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI23XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup70CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup70CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup70CheckBox)
                {
                    fCheckBoxmAuthSiDup70CheckBox = new CheckBox("CheckBoxmAuthSiDup70CheckBox", SystemWindowsCoI2XDup4TreeItem);
                    fCheckBoxmAuthSiDup70CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup70CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup70CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_130");
                }

                return fCheckBoxmAuthSiDup70CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup71CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup71CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup71CheckBox)
                {
                    fCheckBoxmAuthSiDup71CheckBox = new CheckBox("CheckBoxmAuthSiDup71CheckBox", SystemWindowsCoI2XDup4TreeItem);
                    fCheckBoxmAuthSiDup71CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup71CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup71CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_130");
                }

                return fCheckBoxmAuthSiDup71CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup26ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup26ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup26ComboBox)
                {
                    fComboBoxmAuthSiDup26ComboBox = new ComboBox("ComboBoxmAuthSiDup26ComboBox", SystemWindowsCoI2XDup4TreeItem);
                    fComboBoxmAuthSiDup26ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup26ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup26ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_130");
                }

                return fComboBoxmAuthSiDup26ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoI7XTreeItem
        /// </summary>
        public TreeItem SystemWindowsCoI7XTreeItem
        {
            get
            {
                if (null == fSystemWindowsCoI7XTreeItem)
                {
                    fSystemWindowsCoI7XTreeItem = new TreeItem("SystemWindowsCoI7XTreeItem", TreeViewF3A67BCTree);
                    fSystemWindowsCoI7XTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoI7XTreeItem.UIMap.Index = 7;
                    fSystemWindowsCoI7XTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSystemWindowsCoI7XTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TreeViewItem Header: Items.Count:0");
                }

                return fSystemWindowsCoI7XTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderI27XButton
        /// </summary>
        public Button ButtonExpanderI27XButton
        {
            get
            {
                if (null == fButtonExpanderI27XButton)
                {
                    fButtonExpanderI27XButton = new Button("ButtonExpanderI27XButton", SystemWindowsCoI7XTreeItem);
                    fButtonExpanderI27XButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderI27XButton.UIMap.Index = 27;
                    fButtonExpanderI27XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderI27XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderI27XButton;
            }
        }

        /// <summary>
        /// Gets Reference to EnhancedWorkfloDup0Text
        /// </summary>
        public Text EnhancedWorkfloDup0Text
        {
            get
            {
                if (null == fEnhancedWorkfloDup0Text)
                {
                    fEnhancedWorkfloDup0Text = new Text("EnhancedWorkfloDup0Text", SystemWindowsCoI7XTreeItem);
                    fEnhancedWorkfloDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fEnhancedWorkfloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fEnhancedWorkfloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enhanced Workflow");
                }

                return fEnhancedWorkfloDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to EnhancedWorkfloDup1Text
        /// </summary>
        public Text EnhancedWorkfloDup1Text
        {
            get
            {
                if (null == fEnhancedWorkfloDup1Text)
                {
                    fEnhancedWorkfloDup1Text = new Text("EnhancedWorkfloDup1Text", EnhancedWorkfloDup0Text);
                    fEnhancedWorkfloDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fEnhancedWorkfloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEnhancedWorkfloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enhanced Workflow");
                }

                return fEnhancedWorkfloDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup72CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup72CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup72CheckBox)
                {
                    fCheckBoxmAuthSiDup72CheckBox = new CheckBox("CheckBoxmAuthSiDup72CheckBox", SystemWindowsCoI7XTreeItem);
                    fCheckBoxmAuthSiDup72CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup72CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup72CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceGuest_137");
                }

                return fCheckBoxmAuthSiDup72CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ImageLockI24XImage
        /// </summary>
        public Image ImageLockI24XImage
        {
            get
            {
                if (null == fImageLockI24XImage)
                {
                    fImageLockI24XImage = new Image("ImageLockI24XImage", CheckBoxmAuthSiDup72CheckBox);
                    fImageLockI24XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageLockI24XImage.UIMap.Index = 24;
                    fImageLockI24XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageLockI24XImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LockImage");
                }

                return fImageLockI24XImage;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockTextCoI24XText
        /// </summary>
        public Text TextBlockTextCoI24XText
        {
            get
            {
                if (null == fTextBlockTextCoI24XText)
                {
                    fTextBlockTextCoI24XText = new Text("TextBlockTextCoI24XText", CheckBoxmAuthSiDup72CheckBox);
                    fTextBlockTextCoI24XText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockTextCoI24XText.UIMap.Index = 24;
                    fTextBlockTextCoI24XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockTextCoI24XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TextContent");
                }

                return fTextBlockTextCoI24XText;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup73CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup73CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup73CheckBox)
                {
                    fCheckBoxmAuthSiDup73CheckBox = new CheckBox("CheckBoxmAuthSiDup73CheckBox", SystemWindowsCoI7XTreeItem);
                    fCheckBoxmAuthSiDup73CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup73CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup73CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceAdministrator_137");
                }

                return fCheckBoxmAuthSiDup73CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CheckBoxmAuthSiDup74CheckBox
        /// </summary>
        public CheckBox CheckBoxmAuthSiDup74CheckBox
        {
            get
            {
                if (null == fCheckBoxmAuthSiDup74CheckBox)
                {
                    fCheckBoxmAuthSiDup74CheckBox = new CheckBox("CheckBoxmAuthSiDup74CheckBox", SystemWindowsCoI7XTreeItem);
                    fCheckBoxmAuthSiDup74CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCheckBoxmAuthSiDup74CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fCheckBoxmAuthSiDup74CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInCheckBox_deviceUser_137");
                }

                return fCheckBoxmAuthSiDup74CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxmAuthSiDup27ComboBox
        /// </summary>
        public ComboBox ComboBoxmAuthSiDup27ComboBox
        {
            get
            {
                if (null == fComboBoxmAuthSiDup27ComboBox)
                {
                    fComboBoxmAuthSiDup27ComboBox = new ComboBox("ComboBoxmAuthSiDup27ComboBox", SystemWindowsCoI7XTreeItem);
                    fComboBoxmAuthSiDup27ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxmAuthSiDup27ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxmAuthSiDup27ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthSignInDeviceDefaultComboBox_137");
                }

                return fComboBoxmAuthSiDup27ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationGGroup
        /// </summary>
        public Group AuthenticationGGroup
        {
            get
            {
                if (null == fAuthenticationGGroup)
                {
                    fAuthenticationGGroup = new Group("AuthenticationGGroup", MfpConfiguratioCustom);
                    fAuthenticationGGroup.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationGGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fAuthenticationGGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8C3CAD3B-BF0F-43ac-977C-56ADE3847C6D");
                    fAuthenticationGGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationGGroup;
            }
        }

        /// <summary>
        /// Gets Reference to GroupBoxB6544EFGroup
        /// </summary>
        public Group GroupBoxB6544EFGroup
        {
            get
            {
                if (null == fGroupBoxB6544EFGroup)
                {
                    fGroupBoxB6544EFGroup = new Group("GroupBoxB6544EFGroup", MfpConfiguratioCustom);
                    fGroupBoxB6544EFGroup.UIMap.Scope = UIASeachScope.Children;
                    fGroupBoxB6544EFGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fGroupBoxB6544EFGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B6544EFE-2E24-4b69-969C-71B05C413E0C");
                }

                return fGroupBoxB6544EFGroup;
            }
        }

        /// <summary>
        /// Gets Reference to AllowuserstochoCheckBox
        /// </summary>
        public CheckBox AllowuserstochoCheckBox
        {
            get
            {
                if (null == fAllowuserstochoCheckBox)
                {
                    fAllowuserstochoCheckBox = new CheckBox("AllowuserstochoCheckBox", GroupBoxB6544EFGroup);
                    fAllowuserstochoCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fAllowuserstochoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fAllowuserstochoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9CF02FC4-CB80-4949-9D8A-A078C15E963B");
                    fAllowuserstochoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Allow users to choose alternate sign-in methods");
                }

                return fAllowuserstochoCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to AllowuserstochoText
        /// </summary>
        public Text AllowuserstochoText
        {
            get
            {
                if (null == fAllowuserstochoText)
                {
                    fAllowuserstochoText = new Text("AllowuserstochoText", AllowuserstochoCheckBox);
                    fAllowuserstochoText.UIMap.Scope = UIASeachScope.Children;
                    fAllowuserstochoText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAllowuserstochoText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Allow users to choose alternate sign-in methods");
                }

                return fAllowuserstochoText;
            }
        }

        /// <summary>
        /// Gets Reference to IfuncheckeduserText
        /// </summary>
        public Text IfuncheckeduserText
        {
            get
            {
                if (null == fIfuncheckeduserText)
                {
                    fIfuncheckeduserText = new Text("IfuncheckeduserText", GroupBoxB6544EFGroup);
                    fIfuncheckeduserText.UIMap.Scope = UIASeachScope.Children;
                    fIfuncheckeduserText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fIfuncheckeduserText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"If unchecked, users must sign in using the sign-in method set for each application");
                }

                return fIfuncheckeduserText;
            }
        }

        /// <summary>
        /// Gets Reference to AutomaticallysiDup0CheckBox
        /// </summary>
        public CheckBox AutomaticallysiDup0CheckBox
        {
            get
            {
                if (null == fAutomaticallysiDup0CheckBox)
                {
                    fAutomaticallysiDup0CheckBox = new CheckBox("AutomaticallysiDup0CheckBox", GroupBoxB6544EFGroup);
                    fAutomaticallysiDup0CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fAutomaticallysiDup0CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fAutomaticallysiDup0CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"06E7150D-977A-4FD1-B5D8-C7C6FD2ABB7E");
                    fAutomaticallysiDup0CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Automatically sign users out after starting each job");
                }

                return fAutomaticallysiDup0CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to IfcheckeduserswDup0Text
        /// </summary>
        public Text IfcheckeduserswDup0Text
        {
            get
            {
                if (null == fIfcheckeduserswDup0Text)
                {
                    fIfcheckeduserswDup0Text = new Text("IfcheckeduserswDup0Text", GroupBoxB6544EFGroup);
                    fIfcheckeduserswDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fIfcheckeduserswDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fIfcheckeduserswDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"If checked, users will not see job status feedback and will need to sign in to start another job. Automatic sign out will not occur when a Smart Card is inserted.");
                }

                return fIfcheckeduserswDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to JobStatusScreenGroup
        /// </summary>
        public Group JobStatusScreenGroup
        {
            get
            {
                if (null == fJobStatusScreenGroup)
                {
                    fJobStatusScreenGroup = new Group("JobStatusScreenGroup", MfpConfiguratioCustom);
                    fJobStatusScreenGroup.UIMap.Scope = UIASeachScope.Children;
                    fJobStatusScreenGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fJobStatusScreenGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mJobStatusScreenBehaviorGroupBox");
                    fJobStatusScreenGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Job Status Screen Behavior");
                }

                return fJobStatusScreenGroup;
            }
        }

        /// <summary>
        /// Gets Reference to JobStatusScreenText
        /// </summary>
        public Text JobStatusScreenText
        {
            get
            {
                if (null == fJobStatusScreenText)
                {
                    fJobStatusScreenText = new Text("JobStatusScreenText", JobStatusScreenGroup);
                    fJobStatusScreenText.UIMap.Scope = UIASeachScope.Children;
                    fJobStatusScreenText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fJobStatusScreenText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Job Status Screen Behavior");
                }

                return fJobStatusScreenText;
            }
        }

        /// <summary>
        /// Gets Reference to AutomaticallysiDup1CheckBox
        /// </summary>
        public CheckBox AutomaticallysiDup1CheckBox
        {
            get
            {
                if (null == fAutomaticallysiDup1CheckBox)
                {
                    fAutomaticallysiDup1CheckBox = new CheckBox("AutomaticallysiDup1CheckBox", JobStatusScreenGroup);
                    fAutomaticallysiDup1CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fAutomaticallysiDup1CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fAutomaticallysiDup1CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"BEB1F246-F7B9-406d-BF4A-25923A29C7E6");
                    fAutomaticallysiDup1CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Automatically sign users out after starting each job");
                }

                return fAutomaticallysiDup1CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to AutomaticallysiText
        /// </summary>
        public Text AutomaticallysiText
        {
            get
            {
                if (null == fAutomaticallysiText)
                {
                    fAutomaticallysiText = new Text("AutomaticallysiText", AutomaticallysiDup1CheckBox);
                    fAutomaticallysiText.UIMap.Scope = UIASeachScope.Children;
                    fAutomaticallysiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAutomaticallysiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Automatically sign users out after starting each job");
                }

                return fAutomaticallysiText;
            }
        }

        /// <summary>
        /// Gets Reference to IfcheckeduserswDup1Text
        /// </summary>
        public Text IfcheckeduserswDup1Text
        {
            get
            {
                if (null == fIfcheckeduserswDup1Text)
                {
                    fIfcheckeduserswDup1Text = new Text("IfcheckeduserswDup1Text", JobStatusScreenGroup);
                    fIfcheckeduserswDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fIfcheckeduserswDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fIfcheckeduserswDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"If checked, users will not see job status feedback and will need to sign in to start another job. Automatic sign out will not occur when a Smart Card is inserted.");
                }

                return fIfcheckeduserswDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to SignoutimmediatRadioButton
        /// </summary>
        public RadioButton SignoutimmediatRadioButton
        {
            get
            {
                if (null == fSignoutimmediatRadioButton)
                {
                    fSignoutimmediatRadioButton = new RadioButton("SignoutimmediatRadioButton", JobStatusScreenGroup);
                    fSignoutimmediatRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fSignoutimmediatRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    fSignoutimmediatRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8476B1FA-AC1C-4535-B064-A479C31B0E7A");
                    fSignoutimmediatRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sign out immediately when job starts");
                }

                return fSignoutimmediatRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to Signoutafter10sRadioButton
        /// </summary>
        public RadioButton Signoutafter10sRadioButton
        {
            get
            {
                if (null == fSignoutafter10sRadioButton)
                {
                    fSignoutafter10sRadioButton = new RadioButton("Signoutafter10sRadioButton", JobStatusScreenGroup);
                    fSignoutafter10sRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fSignoutafter10sRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    fSignoutafter10sRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7E9312F8-DD64-4819-A655-54ABA14F4EC6");
                    fSignoutafter10sRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sign out after 10 seconds with option to stay signed in");
                }

                return fSignoutafter10sRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticScrollBar
        {
            get
            {
                if (null == fScrollBarVerticScrollBar)
                {
                    fScrollBarVerticScrollBar = new ScrollBar("ScrollBarVerticScrollBar", ScrollViewerPane);
                    fScrollBarVerticScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonPARDup0Button
        /// </summary>
        public Button RepeatButtonPARDup0Button
        {
            get
            {
                if (null == fRepeatButtonPARDup0Button)
                {
                    fRepeatButtonPARDup0Button = new Button("RepeatButtonPARDup0Button", ScrollBarVerticScrollBar);
                    fRepeatButtonPARDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPARDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonPARDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_LineUpButton");
                }

                return fRepeatButtonPARDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonPagDup0Button
        /// </summary>
        public Button RepeatButtonPagDup0Button
        {
            get
            {
                if (null == fRepeatButtonPagDup0Button)
                {
                    fRepeatButtonPagDup0Button = new Button("RepeatButtonPagDup0Button", ScrollBarVerticScrollBar);
                    fRepeatButtonPagDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageUp");
                }

                return fRepeatButtonPagDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonPagDup1Button
        /// </summary>
        public Button RepeatButtonPagDup1Button
        {
            get
            {
                if (null == fRepeatButtonPagDup1Button)
                {
                    fRepeatButtonPagDup1Button = new Button("RepeatButtonPagDup1Button", ScrollBarVerticScrollBar);
                    fRepeatButtonPagDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageDown");
                }

                return fRepeatButtonPagDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbDup0Thumb
        /// </summary>
        public Thumb ThumbDup0Thumb
        {
            get
            {
                if (null == fThumbDup0Thumb)
                {
                    fThumbDup0Thumb = new Thumb("ThumbDup0Thumb", ScrollBarVerticScrollBar);
                    fThumbDup0Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbDup0Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonPARDup1Button
        /// </summary>
        public Button RepeatButtonPARDup1Button
        {
            get
            {
                if (null == fRepeatButtonPARDup1Button)
                {
                    fRepeatButtonPARDup1Button = new Button("RepeatButtonPARDup1Button", ScrollBarVerticScrollBar);
                    fRepeatButtonPARDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPARDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonPARDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_LineDownButton");
                }

                return fRepeatButtonPARDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoScrollBar)
                {
                    fScrollBarHorizoScrollBar = new ScrollBar("ScrollBarHorizoScrollBar", ScrollViewerPane);
                    fScrollBarHorizoScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonPARDup2Button
        /// </summary>
        public Button RepeatButtonPARDup2Button
        {
            get
            {
                if (null == fRepeatButtonPARDup2Button)
                {
                    fRepeatButtonPARDup2Button = new Button("RepeatButtonPARDup2Button", ScrollBarHorizoScrollBar);
                    fRepeatButtonPARDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPARDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonPARDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_LineLeftButton");
                }

                return fRepeatButtonPARDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonPagDup2Button
        /// </summary>
        public Button RepeatButtonPagDup2Button
        {
            get
            {
                if (null == fRepeatButtonPagDup2Button)
                {
                    fRepeatButtonPagDup2Button = new Button("RepeatButtonPagDup2Button", ScrollBarHorizoScrollBar);
                    fRepeatButtonPagDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonPagDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageLeft");
                }

                return fRepeatButtonPagDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonPagDup3Button
        /// </summary>
        public Button RepeatButtonPagDup3Button
        {
            get
            {
                if (null == fRepeatButtonPagDup3Button)
                {
                    fRepeatButtonPagDup3Button = new Button("RepeatButtonPagDup3Button", ScrollBarHorizoScrollBar);
                    fRepeatButtonPagDup3Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonPagDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageRight");
                }

                return fRepeatButtonPagDup3Button;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbDup1Thumb
        /// </summary>
        public Thumb ThumbDup1Thumb
        {
            get
            {
                if (null == fThumbDup1Thumb)
                {
                    fThumbDup1Thumb = new Thumb("ThumbDup1Thumb", ScrollBarHorizoScrollBar);
                    fThumbDup1Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbDup1Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonPARDup3Button
        /// </summary>
        public Button RepeatButtonPARDup3Button
        {
            get
            {
                if (null == fRepeatButtonPARDup3Button)
                {
                    fRepeatButtonPARDup3Button = new Button("RepeatButtonPARDup3Button", ScrollBarHorizoScrollBar);
                    fRepeatButtonPARDup3Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPARDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonPARDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_LineRightButton");
                }

                return fRepeatButtonPARDup3Button;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup2TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup2TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup2TabItem)
                {
                    fSystemWindowsCoDup2TabItem = new TabItem("SystemWindowsCoDup2TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup2TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6D0F0F02-8197-4a09-BEE5-BDF68AFFBB76");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup2TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoEmailTextDup0Text
        /// </summary>
        public Text SendtoEmailTextDup0Text
        {
            get
            {
                if (null == fSendtoEmailTextDup0Text)
                {
                    fSendtoEmailTextDup0Text = new Text("SendtoEmailTextDup0Text", SystemWindowsCoDup2TabItem);
                    fSendtoEmailTextDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoEmailTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoEmailTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                    fSendtoEmailTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to E-mail");
                }

                return fSendtoEmailTextDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoEmailTextDup1Text
        /// </summary>
        public Text SendtoEmailTextDup1Text
        {
            get
            {
                if (null == fSendtoEmailTextDup1Text)
                {
                    fSendtoEmailTextDup1Text = new Text("SendtoEmailTextDup1Text", SendtoEmailTextDup0Text);
                    fSendtoEmailTextDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoEmailTextDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoEmailTextDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to E-mail");
                }

                return fSendtoEmailTextDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text265ea8f2a5fText
        /// </summary>
        public Text Text265ea8f2a5fText
        {
            get
            {
                if (null == fText265ea8f2a5fText)
                {
                    fText265ea8f2a5fText = new Text("Text265ea8f2a5fText", SystemWindowsCoDup2TabItem);
                    fText265ea8f2a5fText.UIMap.Scope = UIASeachScope.Children;
                    fText265ea8f2a5fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText265ea8f2a5fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"265ea8f2-a5f1-4612-b9c9-04b14bb686b6");
                    fText265ea8f2a5fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText265ea8f2a5fText;
            }
        }

        /// <summary>
        /// Gets Reference to Text1a251d5f398Text
        /// </summary>
        public Text Text1a251d5f398Text
        {
            get
            {
                if (null == fText1a251d5f398Text)
                {
                    fText1a251d5f398Text = new Text("Text1a251d5f398Text", SystemWindowsCoDup2TabItem);
                    fText1a251d5f398Text.UIMap.Scope = UIASeachScope.Children;
                    fText1a251d5f398Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText1a251d5f398Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1a251d5f-3981-419a-b1b8-472df8e4b6aa");
                    fText1a251d5f398Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText1a251d5f398Text;
            }
        }

        /// <summary>
        /// Gets Reference to ProgressBara2e8ProgressBar
        /// </summary>
        public ProgressBar ProgressBara2e8ProgressBar
        {
            get
            {
                if (null == fProgressBara2e8ProgressBar)
                {
                    fProgressBara2e8ProgressBar = new ProgressBar("ProgressBara2e8ProgressBar", SystemWindowsCoDup2TabItem);
                    fProgressBara2e8ProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBara2e8ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBara2e8ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a2e8e90d-d0e0-4939-a375-588d9cf351be");
                }

                return fProgressBara2e8ProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup3TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup3TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup3TabItem)
                {
                    fSystemWindowsCoDup3TabItem = new TabItem("SystemWindowsCoDup3TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"59f7cef3-80db-4e16-8c7d-7214d65c4ad6");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to FaxTextmFaxTabLI0XText
        /// </summary>
        public Text FaxTextmFaxTabLI0XText
        {
            get
            {
                if (null == fFaxTextmFaxTabLI0XText)
                {
                    fFaxTextmFaxTabLI0XText = new Text("FaxTextmFaxTabLI0XText", SystemWindowsCoDup3TabItem);
                    fFaxTextmFaxTabLI0XText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextmFaxTabLI0XText.UIMap.Index = 0;
                    fFaxTextmFaxTabLI0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFaxTextmFaxTabLI0XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                    fFaxTextmFaxTabLI0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextmFaxTabLI0XText;
            }
        }

        /// <summary>
        /// Gets Reference to FaxTextBlockI0XText
        /// </summary>
        public Text FaxTextBlockI0XText
        {
            get
            {
                if (null == fFaxTextBlockI0XText)
                {
                    fFaxTextBlockI0XText = new Text("FaxTextBlockI0XText", FaxTextmFaxTabLI0XText);
                    fFaxTextBlockI0XText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextBlockI0XText.UIMap.Index = 0;
                    fFaxTextBlockI0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFaxTextBlockI0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextBlockI0XText;
            }
        }

        /// <summary>
        /// Gets Reference to Text105C9A93254Text
        /// </summary>
        public Text Text105C9A93254Text
        {
            get
            {
                if (null == fText105C9A93254Text)
                {
                    fText105C9A93254Text = new Text("Text105C9A93254Text", SystemWindowsCoDup3TabItem);
                    fText105C9A93254Text.UIMap.Scope = UIASeachScope.Children;
                    fText105C9A93254Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText105C9A93254Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"105C9A93-254E-4da7-8BA1-3CC66B8EAD15");
                    fText105C9A93254Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText105C9A93254Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text25DD30D682EText
        /// </summary>
        public Text Text25DD30D682EText
        {
            get
            {
                if (null == fText25DD30D682EText)
                {
                    fText25DD30D682EText = new Text("Text25DD30D682EText", SystemWindowsCoDup3TabItem);
                    fText25DD30D682EText.UIMap.Scope = UIASeachScope.Children;
                    fText25DD30D682EText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText25DD30D682EText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"25DD30D6-82E0-4bf3-9D85-D9C3EF71087A");
                    fText25DD30D682EText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText25DD30D682EText;
            }
        }

        /// <summary>
        /// Gets Reference to ProgressBare99cProgressBar
        /// </summary>
        public ProgressBar ProgressBare99cProgressBar
        {
            get
            {
                if (null == fProgressBare99cProgressBar)
                {
                    fProgressBare99cProgressBar = new ProgressBar("ProgressBare99cProgressBar", SystemWindowsCoDup3TabItem);
                    fProgressBare99cProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBare99cProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBare99cProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e99c5788-f8b1-43bb-849f-3ab550aa4b30");
                }

                return fProgressBare99cProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup4TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup4TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup4TabItem)
                {
                    fSystemWindowsCoDup4TabItem = new TabItem("SystemWindowsCoDup4TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup4TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4fc77c37-e986-429e-b033-e2e5fb4a85e5");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup4TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoFolderTexI0XDup0Text
        /// </summary>
        public Text SendtoFolderTexI0XDup0Text
        {
            get
            {
                if (null == fSendtoFolderTexI0XDup0Text)
                {
                    fSendtoFolderTexI0XDup0Text = new Text("SendtoFolderTexI0XDup0Text", SystemWindowsCoDup4TabItem);
                    fSendtoFolderTexI0XDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexI0XDup0Text.UIMap.Index = 0;
                    fSendtoFolderTexI0XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoFolderTexI0XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                    fSendtoFolderTexI0XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexI0XDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoFolderTexI0XDup1Text
        /// </summary>
        public Text SendtoFolderTexI0XDup1Text
        {
            get
            {
                if (null == fSendtoFolderTexI0XDup1Text)
                {
                    fSendtoFolderTexI0XDup1Text = new Text("SendtoFolderTexI0XDup1Text", SendtoFolderTexI0XDup0Text);
                    fSendtoFolderTexI0XDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexI0XDup1Text.UIMap.Index = 0;
                    fSendtoFolderTexI0XDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoFolderTexI0XDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexI0XDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Texta7a758d4d75Text
        /// </summary>
        public Text Texta7a758d4d75Text
        {
            get
            {
                if (null == fTexta7a758d4d75Text)
                {
                    fTexta7a758d4d75Text = new Text("Texta7a758d4d75Text", SystemWindowsCoDup4TabItem);
                    fTexta7a758d4d75Text.UIMap.Scope = UIASeachScope.Children;
                    fTexta7a758d4d75Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTexta7a758d4d75Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a7a758d4-d759-4b19-8ea7-353731d0c2f4");
                    fTexta7a758d4d75Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTexta7a758d4d75Text;
            }
        }

        /// <summary>
        /// Gets Reference to Texte95b3491f6bText
        /// </summary>
        public Text Texte95b3491f6bText
        {
            get
            {
                if (null == fTexte95b3491f6bText)
                {
                    fTexte95b3491f6bText = new Text("Texte95b3491f6bText", SystemWindowsCoDup4TabItem);
                    fTexte95b3491f6bText.UIMap.Scope = UIASeachScope.Children;
                    fTexte95b3491f6bText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTexte95b3491f6bText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e95b3491-f6b7-4a10-92d2-862dc0b4b188");
                    fTexte95b3491f6bText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTexte95b3491f6bText;
            }
        }

        /// <summary>
        /// Gets Reference to ProgressBar9a14ProgressBar
        /// </summary>
        public ProgressBar ProgressBar9a14ProgressBar
        {
            get
            {
                if (null == fProgressBar9a14ProgressBar)
                {
                    fProgressBar9a14ProgressBar = new ProgressBar("ProgressBar9a14ProgressBar", SystemWindowsCoDup4TabItem);
                    fProgressBar9a14ProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBar9a14ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBar9a14ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9a144af2-3c52-4a7b-8336-ba2eef27f32c");
                }

                return fProgressBar9a14ProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup5TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup5TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup5TabItem)
                {
                    fSystemWindowsCoDup5TabItem = new TabItem("SystemWindowsCoDup5TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup5TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"72389cc4-0879-48a1-94ae-3f27e4f6ebf4");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup5TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoWorkflowsDup0Text
        /// </summary>
        public Text SendtoWorkflowsDup0Text
        {
            get
            {
                if (null == fSendtoWorkflowsDup0Text)
                {
                    fSendtoWorkflowsDup0Text = new Text("SendtoWorkflowsDup0Text", SystemWindowsCoDup5TabItem);
                    fSendtoWorkflowsDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoWorkflowsDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoWorkflowsDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                    fSendtoWorkflowsDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Workflows");
                }

                return fSendtoWorkflowsDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoWorkflowsDup1Text
        /// </summary>
        public Text SendtoWorkflowsDup1Text
        {
            get
            {
                if (null == fSendtoWorkflowsDup1Text)
                {
                    fSendtoWorkflowsDup1Text = new Text("SendtoWorkflowsDup1Text", SendtoWorkflowsDup0Text);
                    fSendtoWorkflowsDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoWorkflowsDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoWorkflowsDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Workflows");
                }

                return fSendtoWorkflowsDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextAA63352F914Text
        /// </summary>
        public Text TextAA63352F914Text
        {
            get
            {
                if (null == fTextAA63352F914Text)
                {
                    fTextAA63352F914Text = new Text("TextAA63352F914Text", SystemWindowsCoDup5TabItem);
                    fTextAA63352F914Text.UIMap.Scope = UIASeachScope.Children;
                    fTextAA63352F914Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextAA63352F914Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AA63352F-9148-41b9-AED8-B26A079FCA6A");
                    fTextAA63352F914Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTextAA63352F914Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextB31E1B768A7Text
        /// </summary>
        public Text TextB31E1B768A7Text
        {
            get
            {
                if (null == fTextB31E1B768A7Text)
                {
                    fTextB31E1B768A7Text = new Text("TextB31E1B768A7Text", SystemWindowsCoDup5TabItem);
                    fTextB31E1B768A7Text.UIMap.Scope = UIASeachScope.Children;
                    fTextB31E1B768A7Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextB31E1B768A7Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B31E1B76-8A70-407b-B844-637C1737D8A0");
                    fTextB31E1B768A7Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextB31E1B768A7Text;
            }
        }

        /// <summary>
        /// Gets Reference to ProgressBar55dfProgressBar
        /// </summary>
        public ProgressBar ProgressBar55dfProgressBar
        {
            get
            {
                if (null == fProgressBar55dfProgressBar)
                {
                    fProgressBar55dfProgressBar = new ProgressBar("ProgressBar55dfProgressBar", SystemWindowsCoDup5TabItem);
                    fProgressBar55dfProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBar55dfProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBar55dfProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"55df71ad-b53b-46b8-95fc-ab4433bec7b4");
                }

                return fProgressBar55dfProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup6TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup6TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup6TabItem)
                {
                    fSystemWindowsCoDup6TabItem = new TabItem("SystemWindowsCoDup6TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup6TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2392b462-3286-4dd1-9fb7-c962c43de01a");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup6TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoSharePoinDup0Text
        /// </summary>
        public Text SendtoSharePoinDup0Text
        {
            get
            {
                if (null == fSendtoSharePoinDup0Text)
                {
                    fSendtoSharePoinDup0Text = new Text("SendtoSharePoinDup0Text", SystemWindowsCoDup6TabItem);
                    fSendtoSharePoinDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoSharePoinDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoSharePoinDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mSharePointTabLabel");
                    fSendtoSharePoinDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to SharePoint®");
                }

                return fSendtoSharePoinDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoSharePoinDup1Text
        /// </summary>
        public Text SendtoSharePoinDup1Text
        {
            get
            {
                if (null == fSendtoSharePoinDup1Text)
                {
                    fSendtoSharePoinDup1Text = new Text("SendtoSharePoinDup1Text", SendtoSharePoinDup0Text);
                    fSendtoSharePoinDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoSharePoinDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoSharePoinDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to SharePoint®");
                }

                return fSendtoSharePoinDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text348fa329f78Text
        /// </summary>
        public Text Text348fa329f78Text
        {
            get
            {
                if (null == fText348fa329f78Text)
                {
                    fText348fa329f78Text = new Text("Text348fa329f78Text", SystemWindowsCoDup6TabItem);
                    fText348fa329f78Text.UIMap.Scope = UIASeachScope.Children;
                    fText348fa329f78Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText348fa329f78Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"348fa329-f78c-49b1-9622-5c08f7e021d2");
                    fText348fa329f78Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText348fa329f78Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text4bfa1a11126Text
        /// </summary>
        public Text Text4bfa1a11126Text
        {
            get
            {
                if (null == fText4bfa1a11126Text)
                {
                    fText4bfa1a11126Text = new Text("Text4bfa1a11126Text", SystemWindowsCoDup6TabItem);
                    fText4bfa1a11126Text.UIMap.Scope = UIASeachScope.Children;
                    fText4bfa1a11126Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText4bfa1a11126Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4bfa1a11-126e-47ee-bae0-b57524f306c5");
                    fText4bfa1a11126Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText4bfa1a11126Text;
            }
        }

        /// <summary>
        /// Gets Reference to ProgressBard093ProgressBar
        /// </summary>
        public ProgressBar ProgressBard093ProgressBar
        {
            get
            {
                if (null == fProgressBard093ProgressBar)
                {
                    fProgressBard093ProgressBar = new ProgressBar("ProgressBard093ProgressBar", SystemWindowsCoDup6TabItem);
                    fProgressBard093ProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBard093ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBard093ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"d093c10f-9c9a-4951-8778-ae36e4cb8906");
                }

                return fProgressBard093ProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup7TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup7TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup7TabItem)
                {
                    fSystemWindowsCoDup7TabItem = new TabItem("SystemWindowsCoDup7TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup7TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2c39648c-5b8c-4a4a-8403-9204bab8f86a");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup7TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingTextmI0XText
        /// </summary>
        public Text AddressingTextmI0XText
        {
            get
            {
                if (null == fAddressingTextmI0XText)
                {
                    fAddressingTextmI0XText = new Text("AddressingTextmI0XText", SystemWindowsCoDup7TabItem);
                    fAddressingTextmI0XText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextmI0XText.UIMap.Index = 0;
                    fAddressingTextmI0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAddressingTextmI0XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                    fAddressingTextmI0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextmI0XText;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingTextBI0XText
        /// </summary>
        public Text AddressingTextBI0XText
        {
            get
            {
                if (null == fAddressingTextBI0XText)
                {
                    fAddressingTextBI0XText = new Text("AddressingTextBI0XText", AddressingTextmI0XText);
                    fAddressingTextBI0XText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextBI0XText.UIMap.Index = 0;
                    fAddressingTextBI0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddressingTextBI0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextBI0XText;
            }
        }

        /// <summary>
        /// Gets Reference to Text7a57f43ecb1I0XText
        /// </summary>
        public Text Text7a57f43ecb1I0XText
        {
            get
            {
                if (null == fText7a57f43ecb1I0XText)
                {
                    fText7a57f43ecb1I0XText = new Text("Text7a57f43ecb1I0XText", SystemWindowsCoDup7TabItem);
                    fText7a57f43ecb1I0XText.UIMap.Scope = UIASeachScope.Children;
                    fText7a57f43ecb1I0XText.UIMap.Index = 0;
                    fText7a57f43ecb1I0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7a57f43ecb1I0XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                    fText7a57f43ecb1I0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText7a57f43ecb1I0XText;
            }
        }

        /// <summary>
        /// Gets Reference to Text654b650dd19I0XText
        /// </summary>
        public Text Text654b650dd19I0XText
        {
            get
            {
                if (null == fText654b650dd19I0XText)
                {
                    fText654b650dd19I0XText = new Text("Text654b650dd19I0XText", SystemWindowsCoDup7TabItem);
                    fText654b650dd19I0XText.UIMap.Scope = UIASeachScope.Children;
                    fText654b650dd19I0XText.UIMap.Index = 0;
                    fText654b650dd19I0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText654b650dd19I0XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                    fText654b650dd19I0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText654b650dd19I0XText;
            }
        }

        /// <summary>
        /// Gets Reference to ProgressBar15a0ProgressBar
        /// </summary>
        public ProgressBar ProgressBar15a0ProgressBar
        {
            get
            {
                if (null == fProgressBar15a0ProgressBar)
                {
                    fProgressBar15a0ProgressBar = new ProgressBar("ProgressBar15a0ProgressBar", SystemWindowsCoDup7TabItem);
                    fProgressBar15a0ProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBar15a0ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBar15a0ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"15a0e097-7457-4429-ad09-7faad221b9da");
                }

                return fProgressBar15a0ProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup8TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup8TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup8TabItem)
                {
                    fSystemWindowsCoDup8TabItem = new TabItem("SystemWindowsCoDup8TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup8TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C5AD81FA-F1DA-466c-96FD-190B67B3FB49");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup8TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to LogTextmLogTabLText
        /// </summary>
        public Text LogTextmLogTabLText
        {
            get
            {
                if (null == fLogTextmLogTabLText)
                {
                    fLogTextmLogTabLText = new Text("LogTextmLogTabLText", SystemWindowsCoDup8TabItem);
                    fLogTextmLogTabLText.UIMap.Scope = UIASeachScope.Children;
                    fLogTextmLogTabLText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fLogTextmLogTabLText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mLogTabLabel");
                    fLogTextmLogTabLText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTextmLogTabLText;
            }
        }

        /// <summary>
        /// Gets Reference to LogTextBlockDup0Text
        /// </summary>
        public Text LogTextBlockDup0Text
        {
            get
            {
                if (null == fLogTextBlockDup0Text)
                {
                    fLogTextBlockDup0Text = new Text("LogTextBlockDup0Text", LogTextmLogTabLText);
                    fLogTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fLogTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLogTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to ProgressBarA997ProgressBar
        /// </summary>
        public ProgressBar ProgressBarA997ProgressBar
        {
            get
            {
                if (null == fProgressBarA997ProgressBar)
                {
                    fProgressBarA997ProgressBar = new ProgressBar("ProgressBarA997ProgressBar", SystemWindowsCoDup8TabItem);
                    fProgressBarA997ProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBarA997ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBarA997ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A99714B6-EFB6-4249-BE44-2C003700270A");
                }

                return fProgressBarA997ProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup9TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup9TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup9TabItem)
                {
                    fSystemWindowsCoDup9TabItem = new TabItem("SystemWindowsCoDup9TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup9TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup9TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup9TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"cf949d55-8696-4f80-9cf7-0478eedc98e0");
                    fSystemWindowsCoDup9TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup9TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to HPDigitalSendinTitleBar
        /// </summary>
        public TitleBar HPDigitalSendinTitleBar
        {
            get
            {
                if (null == fHPDigitalSendinTitleBar)
                {
                    fHPDigitalSendinTitleBar = new TitleBar("HPDigitalSendinTitleBar", HPDigitalSendinWindow);
                    fHPDigitalSendinTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Digital Sending Software Configuration (Server IP Address: 15.77.231.70)");
                }

                return fHPDigitalSendinTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemMenuBarSyDup1MenuBar
        /// </summary>
        public MenuBar SystemMenuBarSyDup1MenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyDup1MenuBar)
                {
                    fSystemMenuBarSyDup1MenuBar = new MenuBar("SystemMenuBarSyDup1MenuBar", HPDigitalSendinTitleBar);
                    fSystemMenuBarSyDup1MenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                }

                return fSystemMenuBarSyDup1MenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemItem1I1XMenuItem
        /// </summary>
        public MenuItem SystemItem1I1XMenuItem
        {
            get
            {
                if (null == fSystemItem1I1XMenuItem)
                {
                    fSystemItem1I1XMenuItem = new MenuItem("SystemItem1I1XMenuItem", SystemMenuBarSyDup1MenuBar);
                    fSystemItem1I1XMenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1I1XMenuItem.UIMap.Index = 1;
                    fSystemItem1I1XMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    fSystemItem1I1XMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                }

                return fSystemItem1I1XMenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to MinimizeMinimizDup1Button
        /// </summary>
        public Button MinimizeMinimizDup1Button
        {
            get
            {
                if (null == fMinimizeMinimizDup1Button)
                {
                    fMinimizeMinimizDup1Button = new Button("MinimizeMinimizDup1Button", HPDigitalSendinTitleBar);
                    fMinimizeMinimizDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                    fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                }

                return fMinimizeMinimizDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to MaximizeMaximizDup1Button
        /// </summary>
        public Button MaximizeMaximizDup1Button
        {
            get
            {
                if (null == fMaximizeMaximizDup1Button)
                {
                    fMaximizeMaximizDup1Button = new Button("MaximizeMaximizDup1Button", HPDigitalSendinTitleBar);
                    fMaximizeMaximizDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                    fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                }

                return fMaximizeMaximizDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to CloseCloseDup1Button
        /// </summary>
        public Button CloseCloseDup1Button
        {
            get
            {
                if (null == fCloseCloseDup1Button)
                {
                    fCloseCloseDup1Button = new Button("CloseCloseDup1Button", HPDigitalSendinTitleBar);
                    fCloseCloseDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                }

                return fCloseCloseDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to HelpButtonCB8CFButton
        /// </summary>
        public Button HelpButtonCB8CFButton
        {
            get
            {
                if (null == fHelpButtonCB8CFButton)
                {
                    fHelpButtonCB8CFButton = new Button("HelpButtonCB8CFButton", HPDigitalSendinWindow);
                    fHelpButtonCB8CFButton.UIMap.Scope = UIASeachScope.Children;
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CB8CF0C3-DFBE-49b8-B09B-03A34F5D4186");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpButtonCB8CFButton;
            }
        }

        /// <summary>
        /// Gets Reference to HelpTextBlockDup1Text
        /// </summary>
        public Text HelpTextBlockDup1Text
        {
            get
            {
                if (null == fHelpTextBlockDup1Text)
                {
                    fHelpTextBlockDup1Text = new Text("HelpTextBlockDup1Text", HelpButtonCB8CFButton);
                    fHelpTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fHelpTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHelpTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ApplyButton61E2Button
        /// </summary>
        public Button ApplyButtonDevice
        {
            get
            {
                if (null == fApplyButton61E2Button)
                {
                    fApplyButton61E2Button = new Button("ApplyButton61E2Button", HPDigitalSendinWindow);
                    fApplyButton61E2Button.UIMap.Scope = UIASeachScope.Children;
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"61E2369B-F53B-4662-A361-B3034C4EFF67");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyButton61E2Button;
            }
        }

        /// <summary>
        /// Gets Reference to ApplyTextBlockDup1Text
        /// </summary>
        public Text ApplyTextBlockDup1Text
        {
            get
            {
                if (null == fApplyTextBlockDup1Text)
                {
                    fApplyTextBlockDup1Text = new Text("ApplyTextBlockDup1Text", ApplyButtonDevice);
                    fApplyTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fApplyTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fApplyTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to CancelButton65CButton
        /// </summary>
        public Button CancelButton65CButton
        {
            get
            {
                if (null == fCancelButton65CButton)
                {
                    fCancelButton65CButton = new Button("CancelButton65CButton", HPDigitalSendinWindow);
                    fCancelButton65CButton.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"65C76204-7AB5-4681-B7FD-2D8F02DA6D4B");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelButton65CButton;
            }
        }

        /// <summary>
        /// Gets Reference to CancelTextBlockDup1Text
        /// </summary>
        public Text CancelTextBlockDup1Text
        {
            get
            {
                if (null == fCancelTextBlockDup1Text)
                {
                    fCancelTextBlockDup1Text = new Text("CancelTextBlockDup1Text", CancelButton65CButton);
                    fCancelTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fCancelTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCancelTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to OKButtonCC2EF49Button
        /// </summary>
        public Button OKButtonCC2EF49Button
        {
            get
            {
                if (null == fOKButtonCC2EF49Button)
                {
                    fOKButtonCC2EF49Button = new Button("OKButtonCC2EF49Button", HPDigitalSendinWindow);
                    fOKButtonCC2EF49Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CC2EF491-0BD1-4ac5-9D00-AA61A9D6BA0C");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKButtonCC2EF49Button;
            }
        }

        /// <summary>
        /// Gets Reference to OKTextBlockDup1Text
        /// </summary>
        public Text OKTextBlockDup1Text
        {
            get
            {
                if (null == fOKTextBlockDup1Text)
                {
                    fOKTextBlockDup1Text = new Text("OKTextBlockDup1Text", OKButtonCC2EF49Button);
                    fOKTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TabControlec0fdTab
        /// </summary>
        public Tab TabControlec0fdTab
        {
            get
            {
                if (null == fTabControlec0fdTab)
                {
                    fTabControlec0fdTab = new Tab("TabControlec0fdTab", HPDigitalSendinWindow);
                    fTabControlec0fdTab.UIMap.Scope = UIASeachScope.Children;
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ec0fd6cd-2ab8-482f-96a5-d1fa158f38d1");
                }

                return fTabControlec0fdTab;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup10TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup10TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup10TabItem)
                {
                    fSystemWindowsCoDup10TabItem = new TabItem("SystemWindowsCoDup10TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup10TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup10TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup10TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1e2be878-0c03-4404-988c-54d0df925f0f");
                    fSystemWindowsCoDup10TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup10TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralTextmGenI1XText
        /// </summary>
        public Text GeneralTextmGenI1XText
        {
            get
            {
                if (null == fGeneralTextmGenI1XText)
                {
                    fGeneralTextmGenI1XText = new Text("GeneralTextmGenI1XText", SystemWindowsCoDup10TabItem);
                    fGeneralTextmGenI1XText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextmGenI1XText.UIMap.Index = 1;
                    fGeneralTextmGenI1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGeneralTextmGenI1XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                    fGeneralTextmGenI1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextmGenI1XText;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralTextBlocI1XText
        /// </summary>
        public Text GeneralTextBlocI1XText
        {
            get
            {
                if (null == fGeneralTextBlocI1XText)
                {
                    fGeneralTextBlocI1XText = new Text("GeneralTextBlocI1XText", GeneralTextmGenI1XText);
                    fGeneralTextBlocI1XText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextBlocI1XText.UIMap.Index = 1;
                    fGeneralTextBlocI1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGeneralTextBlocI1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextBlocI1XText;
            }
        }

        /// <summary>
        /// Gets Reference to Text933345b04e3Text
        /// </summary>
        public Text Text933345b04e3Text
        {
            get
            {
                if (null == fText933345b04e3Text)
                {
                    fText933345b04e3Text = new Text("Text933345b04e3Text", SystemWindowsCoDup10TabItem);
                    fText933345b04e3Text.UIMap.Scope = UIASeachScope.Children;
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"933345b0-4e39-44d3-a511-0077f3176ca4");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText933345b04e3Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text786caf67344Text
        /// </summary>
        public Text Text786caf67344Text
        {
            get
            {
                if (null == fText786caf67344Text)
                {
                    fText786caf67344Text = new Text("Text786caf67344Text", SystemWindowsCoDup10TabItem);
                    fText786caf67344Text.UIMap.Scope = UIASeachScope.Children;
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"786caf67-344f-4ddc-83a5-b9431fb36731");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText786caf67344Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup11TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup11TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup11TabItem)
                {
                    fSystemWindowsCoDup11TabItem = new TabItem("SystemWindowsCoDup11TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup11TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup11TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup11TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4e90d18a-f33c-43c0-8505-08f4a17169b5");
                    fSystemWindowsCoDup11TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup11TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationTI1XDup0Text
        /// </summary>
        public Text AuthenticationTI1XDup0Text
        {
            get
            {
                if (null == fAuthenticationTI1XDup0Text)
                {
                    fAuthenticationTI1XDup0Text = new Text("AuthenticationTI1XDup0Text", SystemWindowsCoDup11TabItem);
                    fAuthenticationTI1XDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTI1XDup0Text.UIMap.Index = 1;
                    fAuthenticationTI1XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAuthenticationTI1XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                    fAuthenticationTI1XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTI1XDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationTI1XDup1Text
        /// </summary>
        public Text AuthenticationTI1XDup1Text
        {
            get
            {
                if (null == fAuthenticationTI1XDup1Text)
                {
                    fAuthenticationTI1XDup1Text = new Text("AuthenticationTI1XDup1Text", AuthenticationTI1XDup0Text);
                    fAuthenticationTI1XDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTI1XDup1Text.UIMap.Index = 1;
                    fAuthenticationTI1XDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAuthenticationTI1XDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTI1XDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text31EC91730B9Text
        /// </summary>
        public Text Text31EC91730B9Text
        {
            get
            {
                if (null == fText31EC91730B9Text)
                {
                    fText31EC91730B9Text = new Text("Text31EC91730B9Text", SystemWindowsCoDup11TabItem);
                    fText31EC91730B9Text.UIMap.Scope = UIASeachScope.Children;
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"31EC9173-0B98-4d46-BC99-7DF8EA2BE02F");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText31EC91730B9Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextA479C271445Text
        /// </summary>
        public Text TextA479C271445Text
        {
            get
            {
                if (null == fTextA479C271445Text)
                {
                    fTextA479C271445Text = new Text("TextA479C271445Text", SystemWindowsCoDup11TabItem);
                    fTextA479C271445Text.UIMap.Scope = UIASeachScope.Children;
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A479C271-445D-43f1-864D-7503428703E4");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextA479C271445Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup12TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup12TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup12TabItem)
                {
                    fSystemWindowsCoDup12TabItem = new TabItem("SystemWindowsCoDup12TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup12TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup12TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup12TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33A07ED3-E1EE-411e-B583-7D0A3374100F");
                    fSystemWindowsCoDup12TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup12TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to EmailTextmEmailText
        /// </summary>
        public Text EmailTextmEmailText
        {
            get
            {
                if (null == fEmailTextmEmailText)
                {
                    fEmailTextmEmailText = new Text("EmailTextmEmailText", SystemWindowsCoDup12TabItem);
                    fEmailTextmEmailText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                }

                return fEmailTextmEmailText;
            }
        }

        /// <summary>
        /// Gets Reference to EmailTextBlockText
        /// </summary>
        public Text EmailTextBlockText
        {
            get
            {
                if (null == fEmailTextBlockText)
                {
                    fEmailTextBlockText = new Text("EmailTextBlockText", EmailTextmEmailText);
                    fEmailTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                }

                return fEmailTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to Text32de714a8bdText
        /// </summary>
        public Text Text32de714a8bdText
        {
            get
            {
                if (null == fText32de714a8bdText)
                {
                    fText32de714a8bdText = new Text("Text32de714a8bdText", SystemWindowsCoDup12TabItem);
                    fText32de714a8bdText.UIMap.Scope = UIASeachScope.Children;
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"32de714a-8bda-4f11-bf20-b9a56b5f18bc");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText32de714a8bdText;
            }
        }

        /// <summary>
        /// Gets Reference to Text3b2a8761f4fText
        /// </summary>
        public Text Text3b2a8761f4fText
        {
            get
            {
                if (null == fText3b2a8761f4fText)
                {
                    fText3b2a8761f4fText = new Text("Text3b2a8761f4fText", SystemWindowsCoDup12TabItem);
                    fText3b2a8761f4fText.UIMap.Scope = UIASeachScope.Children;
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3b2a8761-f4f6-41b1-b08c-9c33744bdc43");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText3b2a8761f4fText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockDup1Text
        /// </summary>
        public Text TextBlockDup1Text
        {
            get
            {
                if (null == fTextBlockDup1Text)
                {
                    fTextBlockDup1Text = new Text("TextBlockDup1Text", Text3b2a8761f4fText);
                    fTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup13TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup13TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup13TabItem)
                {
                    fSystemWindowsCoDup13TabItem = new TabItem("SystemWindowsCoDup13TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup13TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup13TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup13TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4f116988-2b22-473f-bca3-094589a44954");
                    fSystemWindowsCoDup13TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup13TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to FaxTextmFaxTabLI1XText
        /// </summary>
        public Text FaxTextmFaxTabLI1XText
        {
            get
            {
                if (null == fFaxTextmFaxTabLI1XText)
                {
                    fFaxTextmFaxTabLI1XText = new Text("FaxTextmFaxTabLI1XText", SystemWindowsCoDup13TabItem);
                    fFaxTextmFaxTabLI1XText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextmFaxTabLI1XText.UIMap.Index = 1;
                    fFaxTextmFaxTabLI1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFaxTextmFaxTabLI1XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                    fFaxTextmFaxTabLI1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextmFaxTabLI1XText;
            }
        }

        /// <summary>
        /// Gets Reference to FaxTextBlockI1XText
        /// </summary>
        public Text FaxTextBlockI1XText
        {
            get
            {
                if (null == fFaxTextBlockI1XText)
                {
                    fFaxTextBlockI1XText = new Text("FaxTextBlockI1XText", FaxTextmFaxTabLI1XText);
                    fFaxTextBlockI1XText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextBlockI1XText.UIMap.Index = 1;
                    fFaxTextBlockI1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFaxTextBlockI1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextBlockI1XText;
            }
        }

        /// <summary>
        /// Gets Reference to TextD1ED4F16F38Text
        /// </summary>
        public Text TextD1ED4F16F38Text
        {
            get
            {
                if (null == fTextD1ED4F16F38Text)
                {
                    fTextD1ED4F16F38Text = new Text("TextD1ED4F16F38Text", SystemWindowsCoDup13TabItem);
                    fTextD1ED4F16F38Text.UIMap.Scope = UIASeachScope.Children;
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D1ED4F16-F389-4dfd-A884-D258EDB48C11");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTextD1ED4F16F38Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text7DDE04FD251Text
        /// </summary>
        public Text Text7DDE04FD251Text
        {
            get
            {
                if (null == fText7DDE04FD251Text)
                {
                    fText7DDE04FD251Text = new Text("Text7DDE04FD251Text", SystemWindowsCoDup13TabItem);
                    fText7DDE04FD251Text.UIMap.Scope = UIASeachScope.Children;
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7DDE04FD-2519-44c2-A212-67B0838E1C91");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText7DDE04FD251Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup14TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup14TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup14TabItem)
                {
                    fSystemWindowsCoDup14TabItem = new TabItem("SystemWindowsCoDup14TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup14TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup14TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup14TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ff96a045-6e12-4ce3-ba85-b65d16c39ffb");
                    fSystemWindowsCoDup14TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup14TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoFolderTexI1XDup0Text
        /// </summary>
        public Text SendtoFolderTexI1XDup0Text
        {
            get
            {
                if (null == fSendtoFolderTexI1XDup0Text)
                {
                    fSendtoFolderTexI1XDup0Text = new Text("SendtoFolderTexI1XDup0Text", SystemWindowsCoDup14TabItem);
                    fSendtoFolderTexI1XDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexI1XDup0Text.UIMap.Index = 1;
                    fSendtoFolderTexI1XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoFolderTexI1XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                    fSendtoFolderTexI1XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexI1XDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoFolderTexI1XDup1Text
        /// </summary>
        public Text SendtoFolderTexI1XDup1Text
        {
            get
            {
                if (null == fSendtoFolderTexI1XDup1Text)
                {
                    fSendtoFolderTexI1XDup1Text = new Text("SendtoFolderTexI1XDup1Text", SendtoFolderTexI1XDup0Text);
                    fSendtoFolderTexI1XDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexI1XDup1Text.UIMap.Index = 1;
                    fSendtoFolderTexI1XDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoFolderTexI1XDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexI1XDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text7a57f43ecb1I1XText
        /// </summary>
        public Text Text7a57f43ecb1I1XText
        {
            get
            {
                if (null == fText7a57f43ecb1I1XText)
                {
                    fText7a57f43ecb1I1XText = new Text("Text7a57f43ecb1I1XText", SystemWindowsCoDup14TabItem);
                    fText7a57f43ecb1I1XText.UIMap.Scope = UIASeachScope.Children;
                    fText7a57f43ecb1I1XText.UIMap.Index = 1;
                    fText7a57f43ecb1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7a57f43ecb1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                    fText7a57f43ecb1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText7a57f43ecb1I1XText;
            }
        }

        /// <summary>
        /// Gets Reference to Text654b650dd19I1XText
        /// </summary>
        public Text Text654b650dd19I1XText
        {
            get
            {
                if (null == fText654b650dd19I1XText)
                {
                    fText654b650dd19I1XText = new Text("Text654b650dd19I1XText", SystemWindowsCoDup14TabItem);
                    fText654b650dd19I1XText.UIMap.Scope = UIASeachScope.Children;
                    fText654b650dd19I1XText.UIMap.Index = 1;
                    fText654b650dd19I1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText654b650dd19I1XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                    fText654b650dd19I1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText654b650dd19I1XText;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup15TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup15TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup15TabItem)
                {
                    fSystemWindowsCoDup15TabItem = new TabItem("SystemWindowsCoDup15TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup15TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup15TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup15TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"38feb495-2893-4d8b-8961-31ebc2a3bd56");
                    fSystemWindowsCoDup15TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup15TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to WorkflowsTextmWText
        /// </summary>
        public Text WorkflowsTextmWText
        {
            get
            {
                if (null == fWorkflowsTextmWText)
                {
                    fWorkflowsTextmWText = new Text("WorkflowsTextmWText", SystemWindowsCoDup15TabItem);
                    fWorkflowsTextmWText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                }

                return fWorkflowsTextmWText;
            }
        }

        /// <summary>
        /// Gets Reference to WorkflowsTextBlText
        /// </summary>
        public Text WorkflowsTextBlText
        {
            get
            {
                if (null == fWorkflowsTextBlText)
                {
                    fWorkflowsTextBlText = new Text("WorkflowsTextBlText", WorkflowsTextmWText);
                    fWorkflowsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                }

                return fWorkflowsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to Text22D9C34E84CText
        /// </summary>
        public Text Text22D9C34E84CText
        {
            get
            {
                if (null == fText22D9C34E84CText)
                {
                    fText22D9C34E84CText = new Text("Text22D9C34E84CText", SystemWindowsCoDup15TabItem);
                    fText22D9C34E84CText.UIMap.Scope = UIASeachScope.Children;
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22D9C34E-84C8-4995-AC9E-5B46F8284284");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText22D9C34E84CText;
            }
        }

        /// <summary>
        /// Gets Reference to TextC8D15BD39C8Text
        /// </summary>
        public Text TextC8D15BD39C8Text
        {
            get
            {
                if (null == fTextC8D15BD39C8Text)
                {
                    fTextC8D15BD39C8Text = new Text("TextC8D15BD39C8Text", SystemWindowsCoDup15TabItem);
                    fTextC8D15BD39C8Text.UIMap.Scope = UIASeachScope.Children;
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C8D15BD3-9C8D-484c-A5E2-309CA8AA6C56");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextC8D15BD39C8Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup16TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup16TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup16TabItem)
                {
                    fSystemWindowsCoDup16TabItem = new TabItem("SystemWindowsCoDup16TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup16TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup16TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup16TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b8c06323-208e-4239-a523-a025661e0eab");
                    fSystemWindowsCoDup16TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup16TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingTextmI1XText
        /// </summary>
        public Text AddressingTextmI1XText
        {
            get
            {
                if (null == fAddressingTextmI1XText)
                {
                    fAddressingTextmI1XText = new Text("AddressingTextmI1XText", SystemWindowsCoDup16TabItem);
                    fAddressingTextmI1XText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextmI1XText.UIMap.Index = 1;
                    fAddressingTextmI1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAddressingTextmI1XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                    fAddressingTextmI1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextmI1XText;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingTextBI1XText
        /// </summary>
        public Text AddressingTextBI1XText
        {
            get
            {
                if (null == fAddressingTextBI1XText)
                {
                    fAddressingTextBI1XText = new Text("AddressingTextBI1XText", AddressingTextmI1XText);
                    fAddressingTextBI1XText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextBI1XText.UIMap.Index = 1;
                    fAddressingTextBI1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddressingTextBI1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextBI1XText;
            }
        }

        /// <summary>
        /// Gets Reference to Text47EB5CBA4D1Text
        /// </summary>
        public Text Text47EB5CBA4D1Text
        {
            get
            {
                if (null == fText47EB5CBA4D1Text)
                {
                    fText47EB5CBA4D1Text = new Text("Text47EB5CBA4D1Text", SystemWindowsCoDup16TabItem);
                    fText47EB5CBA4D1Text.UIMap.Scope = UIASeachScope.Children;
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"47EB5CBA-4D1C-4eee-AD64-E26BDA31A3AC");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText47EB5CBA4D1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text0757E148179Text
        /// </summary>
        public Text Text0757E148179Text
        {
            get
            {
                if (null == fText0757E148179Text)
                {
                    fText0757E148179Text = new Text("Text0757E148179Text", SystemWindowsCoDup16TabItem);
                    fText0757E148179Text.UIMap.Scope = UIASeachScope.Children;
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0757E148-1794-4a5d-B378-6BE8049F65E1");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText0757E148179Text;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceConfiguraTabItem
        /// </summary>
        public TabItem DeviceConfiguraTabItem
        {
            get
            {
                if (null == fDeviceConfiguraTabItem)
                {
                    fDeviceConfiguraTabItem = new TabItem("DeviceConfiguraTabItem", TabControlec0fdTab);
                    fDeviceConfiguraTabItem.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6DF1E016-517F-40e4-A63E-CD48D560192F");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                }

                return fDeviceConfiguraTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceConfiguraText
        /// </summary>
        public Text DeviceConfiguraText
        {
            get
            {
                if (null == fDeviceConfiguraText)
                {
                    fDeviceConfiguraText = new Text("DeviceConfiguraText", DeviceConfiguraTabItem);
                    fDeviceConfiguraText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                }

                return fDeviceConfiguraText;
            }
        }

        /// <summary>
        /// Gets Reference to ServiceConfigurCustom
        /// </summary>
        public Custom ServiceConfigurCustom
        {
            get
            {
                if (null == fServiceConfigurCustom)
                {
                    fServiceConfigurCustom = new Custom("ServiceConfigurCustom", DeviceConfiguraTabItem);
                    fServiceConfigurCustom.UIMap.Scope = UIASeachScope.Children;
                    fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ServiceConfigurationDeviceConfigTab");
                    fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mServiceDeviceTab");
                }

                return fServiceConfigurCustom;
            }
        }

        /// <summary>
        /// Gets Reference to GroupListText
        /// </summary>
        public Text GroupListText
        {
            get
            {
                if (null == fGroupListText)
                {
                    fGroupListText = new Text("GroupListText", ServiceConfigurCustom);
                    fGroupListText.UIMap.Scope = UIASeachScope.Children;
                    fGroupListText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGroupListText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Group List");
                }

                return fGroupListText;
            }
        }

        /// <summary>
        /// Gets Reference to GroupListTextBlText
        /// </summary>
        public Text GroupListTextBlText
        {
            get
            {
                if (null == fGroupListTextBlText)
                {
                    fGroupListTextBlText = new Text("GroupListTextBlText", GroupListText);
                    fGroupListTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fGroupListTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGroupListTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Group List");
                }

                return fGroupListTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceGroupsText
        /// </summary>
        public Text DeviceGroupsText
        {
            get
            {
                if (null == fDeviceGroupsText)
                {
                    fDeviceGroupsText = new Text("DeviceGroupsText", ServiceConfigurCustom);
                    fDeviceGroupsText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceGroupsText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDeviceGroupsText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Groups");
                }

                return fDeviceGroupsText;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceGroupsTexText
        /// </summary>
        public Text DeviceGroupsTexText
        {
            get
            {
                if (null == fDeviceGroupsTexText)
                {
                    fDeviceGroupsTexText = new Text("DeviceGroupsTexText", DeviceGroupsText);
                    fDeviceGroupsTexText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceGroupsTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceGroupsTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Groups");
                }

                return fDeviceGroupsTexText;
            }
        }

        /// <summary>
        /// Gets Reference to TreeView1416BDETree
        /// </summary>
        public Tree TreeView1416BDETree
        {
            get
            {
                if (null == fTreeView1416BDETree)
                {
                    fTreeView1416BDETree = new Tree("TreeView1416BDETree", ServiceConfigurCustom);
                    fTreeView1416BDETree.UIMap.Scope = UIASeachScope.Children;
                    fTreeView1416BDETree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeView");
                    fTreeView1416BDETree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1416BDED-715B-43e3-AAE3-D7E3FE37F0F0");
                }

                return fTreeView1416BDETree;
            }
        }

        /// <summary>
        /// Gets Reference to AllDevicesTreeVTreeItem
        /// </summary>
        public TreeItem AllDevicesTreeVTreeItem
        {
            get
            {
                if (null == fAllDevicesTreeVTreeItem)
                {
                    fAllDevicesTreeVTreeItem = new TreeItem("AllDevicesTreeVTreeItem", TreeView1416BDETree);
                    fAllDevicesTreeVTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fAllDevicesTreeVTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fAllDevicesTreeVTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"All Devices");
                }

                return fAllDevicesTreeVTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup0Button
        /// </summary>
        public Button ButtonExpanderDup0Button
        {
            get
            {
                if (null == fButtonExpanderDup0Button)
                {
                    fButtonExpanderDup0Button = new Button("ButtonExpanderDup0Button", AllDevicesTreeVTreeItem);
                    fButtonExpanderDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to AllDevicesTextBText
        /// </summary>
        public Text AllDevicesTextBText
        {
            get
            {
                if (null == fAllDevicesTextBText)
                {
                    fAllDevicesTextBText = new Text("AllDevicesTextBText", AllDevicesTreeVTreeItem);
                    fAllDevicesTextBText.UIMap.Scope = UIASeachScope.Children;
                    fAllDevicesTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAllDevicesTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"All Devices");
                }

                return fAllDevicesTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to MatungaTreeViewTreeItem
        /// </summary>
        public TreeItem MatungaTreeViewTreeItem
        {
            get
            {
                if (null == fMatungaTreeViewTreeItem)
                {
                    fMatungaTreeViewTreeItem = new TreeItem("MatungaTreeViewTreeItem", AllDevicesTreeVTreeItem);
                    fMatungaTreeViewTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fMatungaTreeViewTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fMatungaTreeViewTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Matunga");
                }

                return fMatungaTreeViewTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup1Button
        /// </summary>
        public Button ButtonExpanderDup1Button
        {
            get
            {
                if (null == fButtonExpanderDup1Button)
                {
                    fButtonExpanderDup1Button = new Button("ButtonExpanderDup1Button", MatungaTreeViewTreeItem);
                    fButtonExpanderDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to MatungaTextBlocText
        /// </summary>
        public Text MatungaTextBlocText
        {
            get
            {
                if (null == fMatungaTextBlocText)
                {
                    fMatungaTextBlocText = new Text("MatungaTextBlocText", MatungaTreeViewTreeItem);
                    fMatungaTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fMatungaTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fMatungaTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Matunga");
                }

                return fMatungaTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to OmniTreeViewIteTreeItem
        /// </summary>
        public TreeItem OmniTreeViewIteTreeItem
        {
            get
            {
                if (null == fOmniTreeViewIteTreeItem)
                {
                    fOmniTreeViewIteTreeItem = new TreeItem("OmniTreeViewIteTreeItem", AllDevicesTreeVTreeItem);
                    fOmniTreeViewIteTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fOmniTreeViewIteTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fOmniTreeViewIteTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Omni");
                }

                return fOmniTreeViewIteTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup2Button
        /// </summary>
        public Button ButtonExpanderDup2Button
        {
            get
            {
                if (null == fButtonExpanderDup2Button)
                {
                    fButtonExpanderDup2Button = new Button("ButtonExpanderDup2Button", OmniTreeViewIteTreeItem);
                    fButtonExpanderDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to OmniTextBlockText
        /// </summary>
        public Text OmniTextBlockText
        {
            get
            {
                if (null == fOmniTextBlockText)
                {
                    fOmniTextBlockText = new Text("OmniTextBlockText", OmniTreeViewIteTreeItem);
                    fOmniTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fOmniTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOmniTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Omni");
                }

                return fOmniTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to OmniFlatuTreeViTreeItem
        /// </summary>
        public TreeItem OmniFlatuTreeViTreeItem
        {
            get
            {
                if (null == fOmniFlatuTreeViTreeItem)
                {
                    fOmniFlatuTreeViTreeItem = new TreeItem("OmniFlatuTreeViTreeItem", AllDevicesTreeVTreeItem);
                    fOmniFlatuTreeViTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fOmniFlatuTreeViTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fOmniFlatuTreeViTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OmniFlatu");
                }

                return fOmniFlatuTreeViTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup3Button
        /// </summary>
        public Button ButtonExpanderDup3Button
        {
            get
            {
                if (null == fButtonExpanderDup3Button)
                {
                    fButtonExpanderDup3Button = new Button("ButtonExpanderDup3Button", OmniFlatuTreeViTreeItem);
                    fButtonExpanderDup3Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup3Button;
            }
        }

        /// <summary>
        /// Gets Reference to OmniFlatuTextBlText
        /// </summary>
        public Text OmniFlatuTextBlText
        {
            get
            {
                if (null == fOmniFlatuTextBlText)
                {
                    fOmniFlatuTextBlText = new Text("OmniFlatuTextBlText", OmniFlatuTreeViTreeItem);
                    fOmniFlatuTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fOmniFlatuTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOmniFlatuTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OmniFlatu");
                }

                return fOmniFlatuTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to AddGroupButtonFButton
        /// </summary>
        public Button AddGroupButtonFButton
        {
            get
            {
                if (null == fAddGroupButtonFButton)
                {
                    fAddGroupButtonFButton = new Button("AddGroupButtonFButton", ServiceConfigurCustom);
                    fAddGroupButtonFButton.UIMap.Scope = UIASeachScope.Children;
                    fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FF3CA114-616C-4372-9E90-DEBFDDC95553");
                    fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group...");
                }

                return fAddGroupButtonFButton;
            }
        }

        /// <summary>
        /// Gets Reference to AddGroupTextBloText
        /// </summary>
        public Text AddGroupTextBloText
        {
            get
            {
                if (null == fAddGroupTextBloText)
                {
                    fAddGroupTextBloText = new Text("AddGroupTextBloText", AddGroupButtonFButton);
                    fAddGroupTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group...");
                }

                return fAddGroupTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveGroupButtButton
        /// </summary>
        public Button RemoveGroupButtButton
        {
            get
            {
                if (null == fRemoveGroupButtButton)
                {
                    fRemoveGroupButtButton = new Button("RemoveGroupButtButton", ServiceConfigurCustom);
                    fRemoveGroupButtButton.UIMap.Scope = UIASeachScope.Children;
                    fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"254907B3-979B-4706-8099-4EB37924DFB2");
                    fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Group...");
                }

                return fRemoveGroupButtButton;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveGroupTextText
        /// </summary>
        public Text RemoveGroupTextText
        {
            get
            {
                if (null == fRemoveGroupTextText)
                {
                    fRemoveGroupTextText = new Text("RemoveGroupTextText", RemoveGroupButtButton);
                    fRemoveGroupTextText.UIMap.Scope = UIASeachScope.Children;
                    fRemoveGroupTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRemoveGroupTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Group...");
                }

                return fRemoveGroupTextText;
            }
        }

        /// <summary>
        /// Gets Reference to RenameButton261Button
        /// </summary>
        public Button RenameButton261Button
        {
            get
            {
                if (null == fRenameButton261Button)
                {
                    fRenameButton261Button = new Button("RenameButton261Button", ServiceConfigurCustom);
                    fRenameButton261Button.UIMap.Scope = UIASeachScope.Children;
                    fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2619DFAD-0185-42fb-A689-994ED4ACC316");
                    fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rename");
                }

                return fRenameButton261Button;
            }
        }

        /// <summary>
        /// Gets Reference to RenameTextBlockText
        /// </summary>
        public Text RenameTextBlockText
        {
            get
            {
                if (null == fRenameTextBlockText)
                {
                    fRenameTextBlockText = new Text("RenameTextBlockText", RenameButton261Button);
                    fRenameTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fRenameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRenameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rename");
                }

                return fRenameTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to GridSplitterThumb
        /// </summary>
        public Thumb GridSplitterThumb
        {
            get
            {
                if (null == fGridSplitterThumb)
                {
                    fGridSplitterThumb = new Thumb("GridSplitterThumb", ServiceConfigurCustom);
                    fGridSplitterThumb.UIMap.Scope = UIASeachScope.Children;
                    fGridSplitterThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridSplitter");
                }

                return fGridSplitterThumb;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceListText
        /// </summary>
        public Text DeviceListText
        {
            get
            {
                if (null == fDeviceListText)
                {
                    fDeviceListText = new Text("DeviceListText", ServiceConfigurCustom);
                    fDeviceListText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceListText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDeviceListText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device List");
                }

                return fDeviceListText;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceListTextBText
        /// </summary>
        public Text DeviceListTextBText
        {
            get
            {
                if (null == fDeviceListTextBText)
                {
                    fDeviceListTextBText = new Text("DeviceListTextBText", DeviceListText);
                    fDeviceListTextBText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceListTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceListTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device List");
                }

                return fDeviceListTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to ListView141cb8bDataGrid
        /// </summary>
        public DataGrid ListView141cb8bDataGrid
        {
            get
            {
                if (null == fListView141cb8bDataGrid)
                {
                    fListView141cb8bDataGrid = new DataGrid("ListView141cb8bDataGrid", ServiceConfigurCustom);
                    fListView141cb8bDataGrid.UIMap.Scope = UIASeachScope.Children;
                    fListView141cb8bDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListView");
                    fListView141cb8bDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"141cb8be-89c3-4b41-80ca-be09bdf636f2");
                }

                return fListView141cb8bDataGrid;
            }
        }

        /// <summary>
        /// Gets Reference to GridViewHeaderRHeader
        /// </summary>
        public Header GridViewHeaderRHeader
        {
            get
            {
                if (null == fGridViewHeaderRHeader)
                {
                    fGridViewHeaderRHeader = new Header("GridViewHeaderRHeader", ListView141cb8bDataGrid);
                    fGridViewHeaderRHeader.UIMap.Scope = UIASeachScope.Children;
                    fGridViewHeaderRHeader.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewHeaderRowPresenter");
                }

                return fGridViewHeaderRHeader;
            }
        }

        /// <summary>
        /// Gets Reference to StatusGridViewCHeaderItem
        /// </summary>
        public HeaderItem StatusGridViewCHeaderItem
        {
            get
            {
                if (null == fStatusGridViewCHeaderItem)
                {
                    fStatusGridViewCHeaderItem = new HeaderItem("StatusGridViewCHeaderItem", GridViewHeaderRHeader);
                    fStatusGridViewCHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84BDE37C-126B-473a-923B-180DBBB478C6");
                    fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Status");
                }

                return fStatusGridViewCHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to StatusTextBlockText
        /// </summary>
        public Text StatusTextBlockText
        {
            get
            {
                if (null == fStatusTextBlockText)
                {
                    fStatusTextBlockText = new Text("StatusTextBlockText", StatusGridViewCHeaderItem);
                    fStatusTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fStatusTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fStatusTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Status");
                }

                return fStatusTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup0Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup0Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup0Thumb)
                {
                    fThumbPARTHeadeDup0Thumb = new Thumb("ThumbPARTHeadeDup0Thumb", StatusGridViewCHeaderItem);
                    fThumbPARTHeadeDup0Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup0Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to NameGridViewColHeaderItem
        /// </summary>
        public HeaderItem NameGridViewColHeaderItem
        {
            get
            {
                if (null == fNameGridViewColHeaderItem)
                {
                    fNameGridViewColHeaderItem = new HeaderItem("NameGridViewColHeaderItem", GridViewHeaderRHeader);
                    fNameGridViewColHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"507D57C0-BC09-4a0a-8D17-F2A9117ADCE5");
                    fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameGridViewColHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to NameTextBlockText
        /// </summary>
        public Text NameTextBlockText
        {
            get
            {
                if (null == fNameTextBlockText)
                {
                    fNameTextBlockText = new Text("NameTextBlockText", NameGridViewColHeaderItem);
                    fNameTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fNameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup1Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup1Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup1Thumb)
                {
                    fThumbPARTHeadeDup1Thumb = new Thumb("ThumbPARTHeadeDup1Thumb", NameGridViewColHeaderItem);
                    fThumbPARTHeadeDup1Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup1Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to GridViewColumnHDup0HeaderItem
        /// </summary>
        public HeaderItem GridViewColumnHDup0HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup0HeaderItem)
                {
                    fGridViewColumnHDup0HeaderItem = new HeaderItem("GridViewColumnHDup0HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup0HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup0HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup0HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"458F7960-4394-4579-919F-D58D5043C703");
                }

                return fGridViewColumnHDup0HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to ImageI0XImage
        /// </summary>
        public Image ImageI0XImage
        {
            get
            {
                if (null == fImageI0XImage)
                {
                    fImageI0XImage = new Image("ImageI0XImage", GridViewColumnHDup0HeaderItem);
                    fImageI0XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageI0XImage.UIMap.Index = 0;
                    fImageI0XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageI0XImage;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeI0XThumb
        /// </summary>
        public Thumb ThumbPARTHeadeI0XThumb
        {
            get
            {
                if (null == fThumbPARTHeadeI0XThumb)
                {
                    fThumbPARTHeadeI0XThumb = new Thumb("ThumbPARTHeadeI0XThumb", GridViewColumnHDup0HeaderItem);
                    fThumbPARTHeadeI0XThumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeI0XThumb.UIMap.Index = 0;
                    fThumbPARTHeadeI0XThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeI0XThumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeI0XThumb;
            }
        }

        /// <summary>
        /// Gets Reference to GridViewColumnHDup1HeaderItem
        /// </summary>
        public HeaderItem GridViewColumnHDup1HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup1HeaderItem)
                {
                    fGridViewColumnHDup1HeaderItem = new HeaderItem("GridViewColumnHDup1HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup1HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup1HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup1HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CD97A6CC-D4F4-4ddb-A3BB-7FF26B2222FF");
                }

                return fGridViewColumnHDup1HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to ImageI1XImage
        /// </summary>
        public Image ImageI1XImage
        {
            get
            {
                if (null == fImageI1XImage)
                {
                    fImageI1XImage = new Image("ImageI1XImage", GridViewColumnHDup1HeaderItem);
                    fImageI1XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageI1XImage.UIMap.Index = 1;
                    fImageI1XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageI1XImage;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeI1XThumb
        /// </summary>
        public Thumb ThumbPARTHeadeI1XThumb
        {
            get
            {
                if (null == fThumbPARTHeadeI1XThumb)
                {
                    fThumbPARTHeadeI1XThumb = new Thumb("ThumbPARTHeadeI1XThumb", GridViewColumnHDup1HeaderItem);
                    fThumbPARTHeadeI1XThumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeI1XThumb.UIMap.Index = 1;
                    fThumbPARTHeadeI1XThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeI1XThumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeI1XThumb;
            }
        }

        /// <summary>
        /// Gets Reference to GridViewColumnHDup2HeaderItem
        /// </summary>
        public HeaderItem GridViewColumnHDup2HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup2HeaderItem)
                {
                    fGridViewColumnHDup2HeaderItem = new HeaderItem("GridViewColumnHDup2HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup2HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup2HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup2HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"008BEEE0-3AE1-47be-BD91-66E124BE04A5");
                }

                return fGridViewColumnHDup2HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to ImageI2XImage
        /// </summary>
        public Image ImageI2XImage
        {
            get
            {
                if (null == fImageI2XImage)
                {
                    fImageI2XImage = new Image("ImageI2XImage", GridViewColumnHDup2HeaderItem);
                    fImageI2XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageI2XImage.UIMap.Index = 2;
                    fImageI2XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageI2XImage;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeI2XThumb
        /// </summary>
        public Thumb ThumbPARTHeadeI2XThumb
        {
            get
            {
                if (null == fThumbPARTHeadeI2XThumb)
                {
                    fThumbPARTHeadeI2XThumb = new Thumb("ThumbPARTHeadeI2XThumb", GridViewColumnHDup2HeaderItem);
                    fThumbPARTHeadeI2XThumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeI2XThumb.UIMap.Index = 2;
                    fThumbPARTHeadeI2XThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeI2XThumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeI2XThumb;
            }
        }

        /// <summary>
        /// Gets Reference to GridViewColumnHDup3HeaderItem
        /// </summary>
        public HeaderItem GridViewColumnHDup3HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup3HeaderItem)
                {
                    fGridViewColumnHDup3HeaderItem = new HeaderItem("GridViewColumnHDup3HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup3HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup3HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup3HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4DC0435C-FF08-4325-A9AC-115D1891ABA6");
                }

                return fGridViewColumnHDup3HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to ImageI3XImage
        /// </summary>
        public Image ImageI3XImage
        {
            get
            {
                if (null == fImageI3XImage)
                {
                    fImageI3XImage = new Image("ImageI3XImage", GridViewColumnHDup3HeaderItem);
                    fImageI3XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageI3XImage.UIMap.Index = 3;
                    fImageI3XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageI3XImage;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeI3XThumb
        /// </summary>
        public Thumb ThumbPARTHeadeI3XThumb
        {
            get
            {
                if (null == fThumbPARTHeadeI3XThumb)
                {
                    fThumbPARTHeadeI3XThumb = new Thumb("ThumbPARTHeadeI3XThumb", GridViewColumnHDup3HeaderItem);
                    fThumbPARTHeadeI3XThumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeI3XThumb.UIMap.Index = 3;
                    fThumbPARTHeadeI3XThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeI3XThumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeI3XThumb;
            }
        }

        /// <summary>
        /// Gets Reference to GridViewColumnHDup4HeaderItem
        /// </summary>
        public HeaderItem GridViewColumnHDup4HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup4HeaderItem)
                {
                    fGridViewColumnHDup4HeaderItem = new HeaderItem("GridViewColumnHDup4HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup4HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup4HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup4HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"BE6ECE9F-4708-4266-8106-AE6D598B0396");
                }

                return fGridViewColumnHDup4HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to ImageI4XImage
        /// </summary>
        public Image ImageI4XImage
        {
            get
            {
                if (null == fImageI4XImage)
                {
                    fImageI4XImage = new Image("ImageI4XImage", GridViewColumnHDup4HeaderItem);
                    fImageI4XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageI4XImage.UIMap.Index = 4;
                    fImageI4XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageI4XImage;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeI4XThumb
        /// </summary>
        public Thumb ThumbPARTHeadeI4XThumb
        {
            get
            {
                if (null == fThumbPARTHeadeI4XThumb)
                {
                    fThumbPARTHeadeI4XThumb = new Thumb("ThumbPARTHeadeI4XThumb", GridViewColumnHDup4HeaderItem);
                    fThumbPARTHeadeI4XThumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeI4XThumb.UIMap.Index = 4;
                    fThumbPARTHeadeI4XThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeI4XThumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeI4XThumb;
            }
        }

        /// <summary>
        /// Gets Reference to GridViewColumnHDup5HeaderItem
        /// </summary>
        public HeaderItem GridViewColumnHDup5HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup5HeaderItem)
                {
                    fGridViewColumnHDup5HeaderItem = new HeaderItem("GridViewColumnHDup5HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup5HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup5HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup5HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5C264E70-DAEF-44F3-9DE9-9824BC0B9ECF");
                }

                return fGridViewColumnHDup5HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to ImageI5XImage
        /// </summary>
        public Image ImageI5XImage
        {
            get
            {
                if (null == fImageI5XImage)
                {
                    fImageI5XImage = new Image("ImageI5XImage", GridViewColumnHDup5HeaderItem);
                    fImageI5XImage.UIMap.Scope = UIASeachScope.Children;
                    fImageI5XImage.UIMap.Index = 5;
                    fImageI5XImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageI5XImage;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeI5XThumb
        /// </summary>
        public Thumb ThumbPARTHeadeI5XThumb
        {
            get
            {
                if (null == fThumbPARTHeadeI5XThumb)
                {
                    fThumbPARTHeadeI5XThumb = new Thumb("ThumbPARTHeadeI5XThumb", GridViewColumnHDup5HeaderItem);
                    fThumbPARTHeadeI5XThumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeI5XThumb.UIMap.Index = 5;
                    fThumbPARTHeadeI5XThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeI5XThumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeI5XThumb;
            }
        }

        /// <summary>
        /// Gets Reference to ModelGridViewCoHeaderItem
        /// </summary>
        public HeaderItem ModelGridViewCoHeaderItem
        {
            get
            {
                if (null == fModelGridViewCoHeaderItem)
                {
                    fModelGridViewCoHeaderItem = new HeaderItem("ModelGridViewCoHeaderItem", GridViewHeaderRHeader);
                    fModelGridViewCoHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"805FD78E-D6A4-4559-939B-ECDD285AE6D7");
                    fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Model");
                }

                return fModelGridViewCoHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to ModelTextBlockText
        /// </summary>
        public Text ModelTextBlockText
        {
            get
            {
                if (null == fModelTextBlockText)
                {
                    fModelTextBlockText = new Text("ModelTextBlockText", ModelGridViewCoHeaderItem);
                    fModelTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fModelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fModelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Model");
                }

                return fModelTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup2Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup2Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup2Thumb)
                {
                    fThumbPARTHeadeDup2Thumb = new Thumb("ThumbPARTHeadeDup2Thumb", ModelGridViewCoHeaderItem);
                    fThumbPARTHeadeDup2Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup2Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to IPAddressGridViHeaderItem
        /// </summary>
        public HeaderItem IPAddressGridViHeaderItem
        {
            get
            {
                if (null == fIPAddressGridViHeaderItem)
                {
                    fIPAddressGridViHeaderItem = new HeaderItem("IPAddressGridViHeaderItem", GridViewHeaderRHeader);
                    fIPAddressGridViHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"70E1D5F4-0DA5-4e87-A451-28399734B74C");
                    fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"IP Address");
                }

                return fIPAddressGridViHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to IPAddressTextBlText
        /// </summary>
        public Text IPAddressTextBlText
        {
            get
            {
                if (null == fIPAddressTextBlText)
                {
                    fIPAddressTextBlText = new Text("IPAddressTextBlText", IPAddressGridViHeaderItem);
                    fIPAddressTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fIPAddressTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fIPAddressTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"IP Address");
                }

                return fIPAddressTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup3Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup3Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup3Thumb)
                {
                    fThumbPARTHeadeDup3Thumb = new Thumb("ThumbPARTHeadeDup3Thumb", IPAddressGridViHeaderItem);
                    fThumbPARTHeadeDup3Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup3Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup3Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup3Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to HostnameGridVieHeaderItem
        /// </summary>
        public HeaderItem HostnameGridVieHeaderItem
        {
            get
            {
                if (null == fHostnameGridVieHeaderItem)
                {
                    fHostnameGridVieHeaderItem = new HeaderItem("HostnameGridVieHeaderItem", GridViewHeaderRHeader);
                    fHostnameGridVieHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"82BE5D16-D370-4519-8FC4-0F517E12AFDF");
                    fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname");
                }

                return fHostnameGridVieHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to HostnameTextBloText
        /// </summary>
        public Text HostnameTextBloText
        {
            get
            {
                if (null == fHostnameTextBloText)
                {
                    fHostnameTextBloText = new Text("HostnameTextBloText", HostnameGridVieHeaderItem);
                    fHostnameTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fHostnameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHostnameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname");
                }

                return fHostnameTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup4Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup4Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup4Thumb)
                {
                    fThumbPARTHeadeDup4Thumb = new Thumb("ThumbPARTHeadeDup4Thumb", HostnameGridVieHeaderItem);
                    fThumbPARTHeadeDup4Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup4Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup4Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup4Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to DescriptionGridHeaderItem
        /// </summary>
        public HeaderItem DescriptionGridHeaderItem
        {
            get
            {
                if (null == fDescriptionGridHeaderItem)
                {
                    fDescriptionGridHeaderItem = new HeaderItem("DescriptionGridHeaderItem", GridViewHeaderRHeader);
                    fDescriptionGridHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"26A46CB8-53AC-446f-8012-A92323091104");
                    fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                }

                return fDescriptionGridHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to DescriptionTextText
        /// </summary>
        public Text DescriptionTextText
        {
            get
            {
                if (null == fDescriptionTextText)
                {
                    fDescriptionTextText = new Text("DescriptionTextText", DescriptionGridHeaderItem);
                    fDescriptionTextText.UIMap.Scope = UIASeachScope.Children;
                    fDescriptionTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDescriptionTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                }

                return fDescriptionTextText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup5Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup5Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup5Thumb)
                {
                    fThumbPARTHeadeDup5Thumb = new Thumb("ThumbPARTHeadeDup5Thumb", DescriptionGridHeaderItem);
                    fThumbPARTHeadeDup5Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup5Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup5Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup5Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to FirmwareGridVieHeaderItem
        /// </summary>
        public HeaderItem FirmwareGridVieHeaderItem
        {
            get
            {
                if (null == fFirmwareGridVieHeaderItem)
                {
                    fFirmwareGridVieHeaderItem = new HeaderItem("FirmwareGridVieHeaderItem", GridViewHeaderRHeader);
                    fFirmwareGridVieHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2A8C9E5A-0A8D-48DD-9D15-42B45EB4177B");
                    fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Firmware");
                }

                return fFirmwareGridVieHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to FirmwareTextBloText
        /// </summary>
        public Text FirmwareTextBloText
        {
            get
            {
                if (null == fFirmwareTextBloText)
                {
                    fFirmwareTextBloText = new Text("FirmwareTextBloText", FirmwareGridVieHeaderItem);
                    fFirmwareTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fFirmwareTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFirmwareTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Firmware");
                }

                return fFirmwareTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup6Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup6Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup6Thumb)
                {
                    fThumbPARTHeadeDup6Thumb = new Thumb("ThumbPARTHeadeDup6Thumb", FirmwareGridVieHeaderItem);
                    fThumbPARTHeadeDup6Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup6Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup6Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup6Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to bound157720325eDataItem
        /// </summary>
        public DataItem bound157720325eDataItem
        {
            get
            {
                if (null == fbound157720325eDataItem)
                {
                    fbound157720325eDataItem = new DataItem("bound157720325eDataItem", ListView141cb8bDataGrid);
                    fbound157720325eDataItem.UIMap.Scope = UIASeachScope.Children;
                    fbound157720325eDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                    fbound157720325eDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"bound; 15.77.203.25; email=disabled; folder=disabled; fax=disabled; addressing=disabled; authentication=notApplicable; customKey=disabled; sharePoint=disabled; HP LaserJet Flow MFP M630; 15.77.203.25; HP LaserJet Flow MFP M630");
                }

                return fbound157720325eDataItem;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteI0XCustom
        /// </summary>
        public Custom ContentPresenteI0XCustom
        {
            get
            {
                if (null == fContentPresenteI0XCustom)
                {
                    fContentPresenteI0XCustom = new Custom("ContentPresenteI0XCustom", bound157720325eDataItem);
                    fContentPresenteI0XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteI0XCustom.UIMap.Index = 0;
                    fContentPresenteI0XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteI0XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to Image84ACE29E0AImage
        /// </summary>
        public Image Image84ACE29E0AImage
        {
            get
            {
                if (null == fImage84ACE29E0AImage)
                {
                    fImage84ACE29E0AImage = new Image("Image84ACE29E0AImage", ContentPresenteI0XCustom);
                    fImage84ACE29E0AImage.UIMap.Scope = UIASeachScope.Children;
                    fImage84ACE29E0AImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage84ACE29E0AImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84ACE29E-0A0D-4d4b-9168-34F42B14D952");
                }

                return fImage84ACE29E0AImage;
            }
        }

        /// <summary>
        /// Gets Reference to WaitSpinnerUserCustom
        /// </summary>
        public Custom WaitSpinnerUserCustom
        {
            get
            {
                if (null == fWaitSpinnerUserCustom)
                {
                    fWaitSpinnerUserCustom = new Custom("WaitSpinnerUserCustom", ContentPresenteI0XCustom);
                    fWaitSpinnerUserCustom.UIMap.Scope = UIASeachScope.Children;
                    fWaitSpinnerUserCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WaitSpinnerUserControl");
                    fWaitSpinnerUserCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C736946B-5A03-4603-A63B-2B489C87B082");
                }

                return fWaitSpinnerUserCustom;
            }
        }

        /// <summary>
        /// Gets Reference to ImagemWaitSpinnImage
        /// </summary>
        public Image ImagemWaitSpinnImage
        {
            get
            {
                if (null == fImagemWaitSpinnImage)
                {
                    fImagemWaitSpinnImage = new Image("ImagemWaitSpinnImage", WaitSpinnerUserCustom);
                    fImagemWaitSpinnImage.UIMap.Scope = UIASeachScope.Children;
                    fImagemWaitSpinnImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImagemWaitSpinnImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWaitSpinnerImage");
                }

                return fImagemWaitSpinnImage;
            }
        }

        /// <summary>
        /// Gets Reference to HPLaserJetFlowMI0XText
        /// </summary>
        public Text HPLaserJetFlowMI0XText
        {
            get
            {
                if (null == fHPLaserJetFlowMI0XText)
                {
                    fHPLaserJetFlowMI0XText = new Text("HPLaserJetFlowMI0XText", bound157720325eDataItem);
                    fHPLaserJetFlowMI0XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetFlowMI0XText.UIMap.Index = 0;
                    fHPLaserJetFlowMI0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHPLaserJetFlowMI0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet Flow MFP M630");
                }

                return fHPLaserJetFlowMI0XText;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteI1XCustom
        /// </summary>
        public Custom ContentPresenteI1XCustom
        {
            get
            {
                if (null == fContentPresenteI1XCustom)
                {
                    fContentPresenteI1XCustom = new Custom("ContentPresenteI1XCustom", bound157720325eDataItem);
                    fContentPresenteI1XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteI1XCustom.UIMap.Index = 1;
                    fContentPresenteI1XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteI1XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to Image844100985AImage
        /// </summary>
        public Image Image844100985AImage
        {
            get
            {
                if (null == fImage844100985AImage)
                {
                    fImage844100985AImage = new Image("Image844100985AImage", ContentPresenteI1XCustom);
                    fImage844100985AImage.UIMap.Scope = UIASeachScope.Children;
                    fImage844100985AImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage844100985AImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84410098-5A15-4470-B28C-3220220B3CF7");
                }

                return fImage844100985AImage;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteI2XCustom
        /// </summary>
        public Custom ContentPresenteI2XCustom
        {
            get
            {
                if (null == fContentPresenteI2XCustom)
                {
                    fContentPresenteI2XCustom = new Custom("ContentPresenteI2XCustom", bound157720325eDataItem);
                    fContentPresenteI2XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteI2XCustom.UIMap.Index = 2;
                    fContentPresenteI2XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteI2XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to Image20F9A92A96Image
        /// </summary>
        public Image Image20F9A92A96Image
        {
            get
            {
                if (null == fImage20F9A92A96Image)
                {
                    fImage20F9A92A96Image = new Image("Image20F9A92A96Image", ContentPresenteI2XCustom);
                    fImage20F9A92A96Image.UIMap.Scope = UIASeachScope.Children;
                    fImage20F9A92A96Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage20F9A92A96Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"20F9A92A-9628-46b7-9034-C31A2B2C2052");
                }

                return fImage20F9A92A96Image;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteI3XCustom
        /// </summary>
        public Custom ContentPresenteI3XCustom
        {
            get
            {
                if (null == fContentPresenteI3XCustom)
                {
                    fContentPresenteI3XCustom = new Custom("ContentPresenteI3XCustom", bound157720325eDataItem);
                    fContentPresenteI3XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteI3XCustom.UIMap.Index = 3;
                    fContentPresenteI3XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteI3XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to ImageCA1843E8BFImage
        /// </summary>
        public Image ImageCA1843E8BFImage
        {
            get
            {
                if (null == fImageCA1843E8BFImage)
                {
                    fImageCA1843E8BFImage = new Image("ImageCA1843E8BFImage", ContentPresenteI3XCustom);
                    fImageCA1843E8BFImage.UIMap.Scope = UIASeachScope.Children;
                    fImageCA1843E8BFImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageCA1843E8BFImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CA1843E8-BF8B-4fd4-88C2-66CB0A66A1C2");
                }

                return fImageCA1843E8BFImage;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteI4XCustom
        /// </summary>
        public Custom ContentPresenteI4XCustom
        {
            get
            {
                if (null == fContentPresenteI4XCustom)
                {
                    fContentPresenteI4XCustom = new Custom("ContentPresenteI4XCustom", bound157720325eDataItem);
                    fContentPresenteI4XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteI4XCustom.UIMap.Index = 4;
                    fContentPresenteI4XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteI4XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to ImageE24499D7C0Image
        /// </summary>
        public Image ImageE24499D7C0Image
        {
            get
            {
                if (null == fImageE24499D7C0Image)
                {
                    fImageE24499D7C0Image = new Image("ImageE24499D7C0Image", ContentPresenteI4XCustom);
                    fImageE24499D7C0Image.UIMap.Scope = UIASeachScope.Children;
                    fImageE24499D7C0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageE24499D7C0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"E24499D7-C0DD-4982-A105-C235E810CBF8");
                }

                return fImageE24499D7C0Image;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteI5XCustom
        /// </summary>
        public Custom ContentPresenteI5XCustom
        {
            get
            {
                if (null == fContentPresenteI5XCustom)
                {
                    fContentPresenteI5XCustom = new Custom("ContentPresenteI5XCustom", bound157720325eDataItem);
                    fContentPresenteI5XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteI5XCustom.UIMap.Index = 5;
                    fContentPresenteI5XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteI5XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to Image86A371F7F4Image
        /// </summary>
        public Image Image86A371F7F4Image
        {
            get
            {
                if (null == fImage86A371F7F4Image)
                {
                    fImage86A371F7F4Image = new Image("Image86A371F7F4Image", ContentPresenteI5XCustom);
                    fImage86A371F7F4Image.UIMap.Scope = UIASeachScope.Children;
                    fImage86A371F7F4Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage86A371F7F4Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"86A371F7-F478-4dfd-AE88-854F4FB069A0");
                }

                return fImage86A371F7F4Image;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteI6XCustom
        /// </summary>
        public Custom ContentPresenteI6XCustom
        {
            get
            {
                if (null == fContentPresenteI6XCustom)
                {
                    fContentPresenteI6XCustom = new Custom("ContentPresenteI6XCustom", bound157720325eDataItem);
                    fContentPresenteI6XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteI6XCustom.UIMap.Index = 6;
                    fContentPresenteI6XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteI6XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to Image1D2DC29B85Image
        /// </summary>
        public Image Image1D2DC29B85Image
        {
            get
            {
                if (null == fImage1D2DC29B85Image)
                {
                    fImage1D2DC29B85Image = new Image("Image1D2DC29B85Image", ContentPresenteI6XCustom);
                    fImage1D2DC29B85Image.UIMap.Scope = UIASeachScope.Children;
                    fImage1D2DC29B85Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage1D2DC29B85Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1D2DC29B-85AC-4341-9FBC-741DEC6996B9");
                }

                return fImage1D2DC29B85Image;
            }
        }

        /// <summary>
        /// Gets Reference to HPLaserJetFlowMI1XText
        /// </summary>
        public Text HPLaserJetFlowMI1XText
        {
            get
            {
                if (null == fHPLaserJetFlowMI1XText)
                {
                    fHPLaserJetFlowMI1XText = new Text("HPLaserJetFlowMI1XText", bound157720325eDataItem);
                    fHPLaserJetFlowMI1XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetFlowMI1XText.UIMap.Index = 1;
                    fHPLaserJetFlowMI1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHPLaserJetFlowMI1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet Flow MFP M630");
                }

                return fHPLaserJetFlowMI1XText;
            }
        }

        /// <summary>
        /// Gets Reference to A157720325TextBText
        /// </summary>
        public Text A157720325TextBText
        {
            get
            {
                if (null == fA157720325TextBText)
                {
                    fA157720325TextBText = new Text("A157720325TextBText", bound157720325eDataItem);
                    fA157720325TextBText.UIMap.Scope = UIASeachScope.Children;
                    fA157720325TextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fA157720325TextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"15.77.203.25");
                }

                return fA157720325TextBText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockDup2Text
        /// </summary>
        public Text TextBlockDup2Text
        {
            get
            {
                if (null == fTextBlockDup2Text)
                {
                    fTextBlockDup2Text = new Text("TextBlockDup2Text", bound157720325eDataItem);
                    fTextBlockDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTextBlockDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to HPLaserJetFlowMI2XText
        /// </summary>
        public Text HPLaserJetFlowMI2XText
        {
            get
            {
                if (null == fHPLaserJetFlowMI2XText)
                {
                    fHPLaserJetFlowMI2XText = new Text("HPLaserJetFlowMI2XText", bound157720325eDataItem);
                    fHPLaserJetFlowMI2XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetFlowMI2XText.UIMap.Index = 2;
                    fHPLaserJetFlowMI2XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHPLaserJetFlowMI2XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet Flow MFP M630");
                }

                return fHPLaserJetFlowMI2XText;
            }
        }

        /// <summary>
        /// Gets Reference to FutureSmart4BetText
        /// </summary>
        public Text FutureSmart4BetText
        {
            get
            {
                if (null == fFutureSmart4BetText)
                {
                    fFutureSmart4BetText = new Text("FutureSmart4BetText", bound157720325eDataItem);
                    fFutureSmart4BetText.UIMap.Scope = UIASeachScope.Children;
                    fFutureSmart4BetText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFutureSmart4BetText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"FutureSmart 4 (Beta) (2457618_669110)");
                }

                return fFutureSmart4BetText;
            }
        }

        /// <summary>
        /// Gets Reference to AddDeviceButtonButton
        /// </summary>
        public Button AddDeviceButtonButton
        {
            get
            {
                if (null == fAddDeviceButtonButton)
                {
                    fAddDeviceButtonButton = new Button("AddDeviceButtonButton", ServiceConfigurCustom);
                    fAddDeviceButtonButton.UIMap.Scope = UIASeachScope.Children;
                    fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"F312568F-16E2-4717-876C-9A076CE2602B");
                    fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Device...");
                }

                return fAddDeviceButtonButton;
            }
        }

        /// <summary>
        /// Gets Reference to AddDeviceTextBlText
        /// </summary>
        public Text AddDeviceTextBlText
        {
            get
            {
                if (null == fAddDeviceTextBlText)
                {
                    fAddDeviceTextBlText = new Text("AddDeviceTextBlText", AddDeviceButtonButton);
                    fAddDeviceTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fAddDeviceTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddDeviceTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Device...");
                }

                return fAddDeviceTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to ExportButtonef5Button
        /// </summary>
        public Button ExportButtonef5Button
        {
            get
            {
                if (null == fExportButtonef5Button)
                {
                    fExportButtonef5Button = new Button("ExportButtonef5Button", ServiceConfigurCustom);
                    fExportButtonef5Button.UIMap.Scope = UIASeachScope.Children;
                    fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ef506fe9-b864-4efe-a960-ad04e56aab91");
                    fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                }

                return fExportButtonef5Button;
            }
        }

        /// <summary>
        /// Gets Reference to ExportTextBlockText
        /// </summary>
        public Text ExportTextBlockText
        {
            get
            {
                if (null == fExportTextBlockText)
                {
                    fExportTextBlockText = new Text("ExportTextBlockText", ExportButtonef5Button);
                    fExportTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                }

                return fExportTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveDeviceButButton
        /// </summary>
        public Button RemoveDeviceButButton
        {
            get
            {
                if (null == fRemoveDeviceButButton)
                {
                    fRemoveDeviceButButton = new Button("RemoveDeviceButButton", ServiceConfigurCustom);
                    fRemoveDeviceButButton.UIMap.Scope = UIASeachScope.Children;
                    fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6f0bbda8-ae72-4b07-bd10-508b3cd6df98");
                    fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Device...");
                }

                return fRemoveDeviceButButton;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveDeviceTexText
        /// </summary>
        public Text RemoveDeviceTexText
        {
            get
            {
                if (null == fRemoveDeviceTexText)
                {
                    fRemoveDeviceTexText = new Text("RemoveDeviceTexText", RemoveDeviceButButton);
                    fRemoveDeviceTexText.UIMap.Scope = UIASeachScope.Children;
                    fRemoveDeviceTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRemoveDeviceTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Device...");
                }

                return fRemoveDeviceTexText;
            }
        }

        /// <summary>
        /// Gets Reference to ImportButtona69Button
        /// </summary>
        public Button ImportButtona69Button
        {
            get
            {
                if (null == fImportButtona69Button)
                {
                    fImportButtona69Button = new Button("ImportButtona69Button", ServiceConfigurCustom);
                    fImportButtona69Button.UIMap.Scope = UIASeachScope.Children;
                    fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a694c1f5-ca51-45dc-ae40-8decc9704ca5");
                    fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import");
                }

                return fImportButtona69Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImportTextBlockText
        /// </summary>
        public Text ImportTextBlockText
        {
            get
            {
                if (null == fImportTextBlockText)
                {
                    fImportTextBlockText = new Text("ImportTextBlockText", ImportButtona69Button);
                    fImportTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fImportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fImportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import");
                }

                return fImportTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to CreateTemplateBButton
        /// </summary>
        public Button CreateTemplateBButton
        {
            get
            {
                if (null == fCreateTemplateBButton)
                {
                    fCreateTemplateBButton = new Button("CreateTemplateBButton", ServiceConfigurCustom);
                    fCreateTemplateBButton.UIMap.Scope = UIASeachScope.Children;
                    fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4C50BE02-6C60-4097-9595-ACF2CC3D5F50");
                    fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create Template");
                }

                return fCreateTemplateBButton;
            }
        }

        /// <summary>
        /// Gets Reference to CreateTemplateTText
        /// </summary>
        public Text CreateTemplateTText
        {
            get
            {
                if (null == fCreateTemplateTText)
                {
                    fCreateTemplateTText = new Text("CreateTemplateTText", CreateTemplateBButton);
                    fCreateTemplateTText.UIMap.Scope = UIASeachScope.Children;
                    fCreateTemplateTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCreateTemplateTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create Template");
                }

                return fCreateTemplateTText;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceSignInButButton
        /// </summary>
        public Button DeviceSignInButButton
        {
            get
            {
                if (null == fDeviceSignInButButton)
                {
                    fDeviceSignInButButton = new Button("DeviceSignInButButton", ServiceConfigurCustom);
                    fDeviceSignInButButton.UIMap.Scope = UIASeachScope.Children;
                    fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mDeviceSignInButton");
                    fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Sign In...");
                }

                return fDeviceSignInButButton;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceSignInTexText
        /// </summary>
        public Text DeviceSignInTexText
        {
            get
            {
                if (null == fDeviceSignInTexText)
                {
                    fDeviceSignInTexText = new Text("DeviceSignInTexText", DeviceSignInButButton);
                    fDeviceSignInTexText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceSignInTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceSignInTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Sign In...");
                }

                return fDeviceSignInTexText;
            }
        }

        /// <summary>
        /// Gets Reference to TotalDevicesText
        /// </summary>
        public Text TotalDevicesText
        {
            get
            {
                if (null == fTotalDevicesText)
                {
                    fTotalDevicesText = new Text("TotalDevicesText", ServiceConfigurCustom);
                    fTotalDevicesText.UIMap.Scope = UIASeachScope.Children;
                    fTotalDevicesText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTotalDevicesText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Total Devices");
                }

                return fTotalDevicesText;
            }
        }

        /// <summary>
        /// Gets Reference to TotalDevicesTexText
        /// </summary>
        public Text TotalDevicesTexText
        {
            get
            {
                if (null == fTotalDevicesTexText)
                {
                    fTotalDevicesTexText = new Text("TotalDevicesTexText", TotalDevicesText);
                    fTotalDevicesTexText.UIMap.Scope = UIASeachScope.Children;
                    fTotalDevicesTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTotalDevicesTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Total Devices");
                }

                return fTotalDevicesTexText;
            }
        }

        /// <summary>
        /// Gets Reference to A1Text82f844376Text
        /// </summary>
        public Text A1Text82f844376Text
        {
            get
            {
                if (null == fA1Text82f844376Text)
                {
                    fA1Text82f844376Text = new Text("A1Text82f844376Text", ServiceConfigurCustom);
                    fA1Text82f844376Text.UIMap.Scope = UIASeachScope.Children;
                    fA1Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fA1Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"82f84437-601e-4562-a536-33b7ebcbf6d7");
                    fA1Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"1");
                }

                return fA1Text82f844376Text;
            }
        }

        /// <summary>
        /// Gets Reference to A1TextBlockText
        /// </summary>
        public Text A1TextBlockText
        {
            get
            {
                if (null == fA1TextBlockText)
                {
                    fA1TextBlockText = new Text("A1TextBlockText", A1Text82f844376Text);
                    fA1TextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fA1TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fA1TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"1");
                }

                return fA1TextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ConfigureDeviceButton
        /// </summary>
        public Button ConfigureDeviceButton
        {
            get
            {
                if (null == fConfigureDeviceButton)
                {
                    fConfigureDeviceButton = new Button("ConfigureDeviceButton", ServiceConfigurCustom);
                    fConfigureDeviceButton.UIMap.Scope = UIASeachScope.Children;
                    fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"cc06ce85-fb0a-4048-8b41-968e5c947ca3");
                    fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Configure Device...");
                }

                return fConfigureDeviceButton;
            }
        }

        /// <summary>
        /// Gets Reference to ConfigureDeviceText
        /// </summary>
        public Text ConfigureDeviceText
        {
            get
            {
                if (null == fConfigureDeviceText)
                {
                    fConfigureDeviceText = new Text("ConfigureDeviceText", ConfigureDeviceButton);
                    fConfigureDeviceText.UIMap.Scope = UIASeachScope.Children;
                    fConfigureDeviceText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fConfigureDeviceText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Configure Device...");
                }

                return fConfigureDeviceText;
            }
        }

        /// <summary>
        /// Gets Reference to TemplateConfiguTabItem
        /// </summary>
        public TabItem TemplateConfiguTabItem
        {
            get
            {
                if (null == fTemplateConfiguTabItem)
                {
                    fTemplateConfiguTabItem = new TabItem("TemplateConfiguTabItem", TabControlec0fdTab);
                    fTemplateConfiguTabItem.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AC05F9B9-A7D8-4b34-80E7-910FB9870D47");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                }

                return fTemplateConfiguTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to TemplateConfiguText
        /// </summary>
        public Text TemplateConfiguText
        {
            get
            {
                if (null == fTemplateConfiguText)
                {
                    fTemplateConfiguText = new Text("TemplateConfiguText", TemplateConfiguTabItem);
                    fTemplateConfiguText.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                }

                return fTemplateConfiguText;
            }
        }

        /// <summary>
        /// Gets Reference to LogTabItem9b4f3TabItem
        /// </summary>
        public TabItem LogTabItem9b4f3TabItem
        {
            get
            {
                if (null == fLogTabItem9b4f3TabItem)
                {
                    fLogTabItem9b4f3TabItem = new TabItem("LogTabItem9b4f3TabItem", TabControlec0fdTab);
                    fLogTabItem9b4f3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9b4f34bb-d75a-4080-9be3-1c50ec31c5b6");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTabItem9b4f3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to LogTextBlockDup1Text
        /// </summary>
        public Text LogTextBlockDup1Text
        {
            get
            {
                if (null == fLogTextBlockDup1Text)
                {
                    fLogTextBlockDup1Text = new Text("LogTextBlockDup1Text", LogTabItem9b4f3TabItem);
                    fLogTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fLogTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLogTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup17TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup17TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup17TabItem)
                {
                    fSystemWindowsCoDup17TabItem = new TabItem("SystemWindowsCoDup17TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup17TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup17TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup17TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3AC8D4A8-3B06-421A-911B-E8CA248A9ED4");
                    fSystemWindowsCoDup17TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup17TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SecurityTextmSeText
        /// </summary>
        public Text SecurityTextmSeText
        {
            get
            {
                if (null == fSecurityTextmSeText)
                {
                    fSecurityTextmSeText = new Text("SecurityTextmSeText", SystemWindowsCoDup17TabItem);
                    fSecurityTextmSeText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mSecurityTabLabel");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                }

                return fSecurityTextmSeText;
            }
        }

        /// <summary>
        /// Gets Reference to SecurityTextBloDup1Text
        /// </summary>
        public Text SecurityTextBloDup1Text
        {
            get
            {
                if (null == fSecurityTextBloDup1Text)
                {
                    fSecurityTextBloDup1Text = new Text("SecurityTextBloDup1Text", SecurityTextmSeText);
                    fSecurityTextBloDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSecurityTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                }

                return fSecurityTextBloDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text8A7A84DB894Text
        /// </summary>
        public Text Text8A7A84DB894Text
        {
            get
            {
                if (null == fText8A7A84DB894Text)
                {
                    fText8A7A84DB894Text = new Text("Text8A7A84DB894Text", SystemWindowsCoDup17TabItem);
                    fText8A7A84DB894Text.UIMap.Scope = UIASeachScope.Children;
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8A7A84DB-8945-40E1-A0F9-C40DDD129739");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText8A7A84DB894Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text16F78FB18FFText
        /// </summary>
        public Text Text16F78FB18FFText
        {
            get
            {
                if (null == fText16F78FB18FFText)
                {
                    fText16F78FB18FFText = new Text("Text16F78FB18FFText", SystemWindowsCoDup17TabItem);
                    fText16F78FB18FFText.UIMap.Scope = UIASeachScope.Children;
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16F78FB1-8FF9-4B0D-8251-FB09F520EA73");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText16F78FB18FFText;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup18TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup18TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup18TabItem)
                {
                    fSystemWindowsCoDup18TabItem = new TabItem("SystemWindowsCoDup18TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup18TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup18TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup18TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1678607C-20BF-4137-8238-C9D46EA8FF70");
                    fSystemWindowsCoDup18TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup18TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AnalyticsTextmAText
        /// </summary>
        public Text AnalyticsTextmAText
        {
            get
            {
                if (null == fAnalyticsTextmAText)
                {
                    fAnalyticsTextmAText = new Text("AnalyticsTextmAText", SystemWindowsCoDup18TabItem);
                    fAnalyticsTextmAText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAnalyticsTabLabel");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                }

                return fAnalyticsTextmAText;
            }
        }

        /// <summary>
        /// Gets Reference to AnalyticsTextBlText
        /// </summary>
        public Text AnalyticsTextBlText
        {
            get
            {
                if (null == fAnalyticsTextBlText)
                {
                    fAnalyticsTextBlText = new Text("AnalyticsTextBlText", AnalyticsTextmAText);
                    fAnalyticsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                }

                return fAnalyticsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to AboutTabItemf45TabItem
        /// </summary>
        public TabItem AboutTabItemf45TabItem
        {
            get
            {
                if (null == fAboutTabItemf45TabItem)
                {
                    fAboutTabItemf45TabItem = new TabItem("AboutTabItemf45TabItem", TabControlec0fdTab);
                    fAboutTabItemf45TabItem.UIMap.Scope = UIASeachScope.Children;
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f45c22d9-f77a-481a-95bc-09cdff03e131");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                }

                return fAboutTabItemf45TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AboutTextBlockText
        /// </summary>
        public Text AboutTextBlockText
        {
            get
            {
                if (null == fAboutTextBlockText)
                {
                    fAboutTextBlockText = new Text("AboutTextBlockText", AboutTabItemf45TabItem);
                    fAboutTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                }

                return fAboutTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to Window336E32508Window
        /// </summary>
        public Window Window336E32508Window
        {
            get
            {
                if (null == fWindow336E32508Window)
                {
                    fWindow336E32508Window = new Window("Window336E32508Window", ConfigureDeviceWindow);
                    fWindow336E32508Window.UIMap.Scope = UIASeachScope.Children;
                    fWindow336E32508Window.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fWindow336E32508Window.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"336E3250-8749-475d-952F-E36223E36750");
                }

                return fWindow336E32508Window;
            }
        }

        /// <summary>
        /// Gets Reference to YesButtonAE4B0CButton
        /// </summary>
        public Button YesButtonAE4B0CButton
        {
            get
            {
                if (null == fYesButtonAE4B0CButton)
                {
                    fYesButtonAE4B0CButton = new Button("YesButtonAE4B0CButton", Window336E32508Window);
                    fYesButtonAE4B0CButton.UIMap.Scope = UIASeachScope.Children;
                    fYesButtonAE4B0CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Yes");
                    fYesButtonAE4B0CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AE4B0C61-2DEE-4974-B517-4A1388A3F4CC");
                    fYesButtonAE4B0CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fYesButtonAE4B0CButton;
            }
        }
    }
}

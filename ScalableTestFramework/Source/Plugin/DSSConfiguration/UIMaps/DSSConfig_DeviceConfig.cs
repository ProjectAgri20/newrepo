//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------

using TopCat.TestApi.Enums;

namespace HP.ScalableTest.Plugin.DSSConfiguration.UIMaps
{
    using System;
    using TopCat.Core;
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class DSSConfig_DeviceConfig
    {
        /// <summary>
        /// Backing field for HPDigitalSendinWindow property
        /// </summary>
        private Window fHPDigitalSendinWindow;

        /// <summary>
        /// Backing field for HPDigitalSendinTitleBar property
        /// </summary>
        private TitleBar fHPDigitalSendinTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyMenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyMenuBar;

        /// <summary>
        /// Backing field for SystemItem1MenuItem property
        /// </summary>
        private MenuItem fSystemItem1MenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizButton property
        /// </summary>
        private Button fMinimizeMinimizButton;

        /// <summary>
        /// Backing field for MaximizeMaximizButton property
        /// </summary>
        private Button fMaximizeMaximizButton;

        /// <summary>
        /// Backing field for CloseCloseButton property
        /// </summary>
        private Button fCloseCloseButton;

        /// <summary>
        /// Backing field for HelpButtonCB8CFButton property
        /// </summary>
        private Button fHelpButtonCB8CFButton;

        /// <summary>
        /// Backing field for HelpTextBlockText property
        /// </summary>
        private Text fHelpTextBlockText;

        /// <summary>
        /// Backing field for ApplyButton property
        /// </summary>
        private Button fApplyButton61E2Button;

        /// <summary>
        /// Backing field for ApplyTextBlockText property
        /// </summary>
        private Text fApplyTextBlockText;

        /// <summary>
        /// Backing field for CancelButton65CButton property
        /// </summary>
        private Button fCancelButton65CButton;

        /// <summary>
        /// Backing field for CancelTextBlockText property
        /// </summary>
        private Text fCancelTextBlockText;

        /// <summary>
        /// Backing field for OKButton property
        /// </summary>
        private Button fOKButtonCC2EF49Button;

        /// <summary>
        /// Backing field for OKTextBlockText property
        /// </summary>
        private Text fOKTextBlockText;

        /// <summary>
        /// Backing field for TabControlec0fdTab property
        /// </summary>
        private Tab fTabControlec0fdTab;

        /// <summary>
        /// Backing field for SystemWindowsCoDup0TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup0TabItem;

        /// <summary>
        /// Backing field for GeneralTextmGenText property
        /// </summary>
        private Text fGeneralTextmGenText;

        /// <summary>
        /// Backing field for GeneralTextBlocText property
        /// </summary>
        private Text fGeneralTextBlocText;

        /// <summary>
        /// Backing field for Text933345b04e3Text property
        /// </summary>
        private Text fText933345b04e3Text;

        /// <summary>
        /// Backing field for Text786caf67344Text property
        /// </summary>
        private Text fText786caf67344Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup1TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup1TabItem;

        /// <summary>
        /// Backing field for AuthenticationTDup0Text property
        /// </summary>
        private Text fAuthenticationTDup0Text;

        /// <summary>
        /// Backing field for AuthenticationTDup1Text property
        /// </summary>
        private Text fAuthenticationTDup1Text;

        /// <summary>
        /// Backing field for Text31EC91730B9Text property
        /// </summary>
        private Text fText31EC91730B9Text;

        /// <summary>
        /// Backing field for TextA479C271445Text property
        /// </summary>
        private Text fTextA479C271445Text;

        /// <summary>
        /// Backing field for EmailTabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup2TabItem;

        /// <summary>
        /// Backing field for EmailTextmEmailText property
        /// </summary>
        private Text fEmailTextmEmailText;

        /// <summary>
        /// Backing field for EmailTextBlockText property
        /// </summary>
        private Text fEmailTextBlockText;

        /// <summary>
        /// Backing field for Text32de714a8bdText property
        /// </summary>
        private Text fText32de714a8bdText;

        /// <summary>
        /// Backing field for Text3b2a8761f4fText property
        /// </summary>
        private Text fText3b2a8761f4fText;

        /// <summary>
        /// Backing field for TextBlockText property
        /// </summary>
        private Text fTextBlockText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup3TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup3TabItem;

        /// <summary>
        /// Backing field for FaxTextmFaxTabLText property
        /// </summary>
        private Text fFaxTextmFaxTabLText;

        /// <summary>
        /// Backing field for FaxTextBlockText property
        /// </summary>
        private Text fFaxTextBlockText;

        /// <summary>
        /// Backing field for TextD1ED4F16F38Text property
        /// </summary>
        private Text fTextD1ED4F16F38Text;

        /// <summary>
        /// Backing field for Text7DDE04FD251Text property
        /// </summary>
        private Text fText7DDE04FD251Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup4TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup4TabItem;

        /// <summary>
        /// Backing field for SendtoFolderTexDup0Text property
        /// </summary>
        private Text fSendtoFolderTexDup0Text;

        /// <summary>
        /// Backing field for SendtoFolderTexDup1Text property
        /// </summary>
        private Text fSendtoFolderTexDup1Text;

        /// <summary>
        /// Backing field for Text7a57f43ecb1Text property
        /// </summary>
        private Text fText7a57f43ecb1Text;

        /// <summary>
        /// Backing field for Text654b650dd19Text property
        /// </summary>
        private Text fText654b650dd19Text;

        /// <summary>
        /// Backing field for WorkflowsTabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup5TabItem;

        /// <summary>
        /// Backing field for WorkflowsTextmWText property
        /// </summary>
        private Text fWorkflowsTextmWText;

        /// <summary>
        /// Backing field for WorkflowsTextBlText property
        /// </summary>
        private Text fWorkflowsTextBlText;

        /// <summary>
        /// Backing field for Text22D9C34E84CText property
        /// </summary>
        private Text fText22D9C34E84CText;

        /// <summary>
        /// Backing field for TextC8D15BD39C8Text property
        /// </summary>
        private Text fTextC8D15BD39C8Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup6TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup6TabItem;

        /// <summary>
        /// Backing field for AddressingTextmText property
        /// </summary>
        private Text fAddressingTextmText;

        /// <summary>
        /// Backing field for AddressingTextBText property
        /// </summary>
        private Text fAddressingTextBText;

        /// <summary>
        /// Backing field for Text47EB5CBA4D1Text property
        /// </summary>
        private Text fText47EB5CBA4D1Text;

        /// <summary>
        /// Backing field for Text0757E148179Text property
        /// </summary>
        private Text fText0757E148179Text;

        /// <summary>
        /// Backing field for DeviceConfiguraTabItem property
        /// </summary>
        private TabItem fDeviceConfiguraTabItem;

        /// <summary>
        /// Backing field for DeviceConfiguraText property
        /// </summary>
        private Text fDeviceConfiguraText;

        /// <summary>
        /// Backing field for ServiceConfigurCustom property
        /// </summary>
        private Custom fServiceConfigurCustom;

        /// <summary>
        /// Backing field for GroupListText property
        /// </summary>
        private Text fGroupListText;

        /// <summary>
        /// Backing field for GroupListTextBlText property
        /// </summary>
        private Text fGroupListTextBlText;

        /// <summary>
        /// Backing field for DeviceGroupsText property
        /// </summary>
        private Text fDeviceGroupsText;

        /// <summary>
        /// Backing field for DeviceGroupsTexText property
        /// </summary>
        private Text fDeviceGroupsTexText;

        /// <summary>
        /// Backing field for TreeView1416BDETree property
        /// </summary>
        private Tree fTreeView1416BDETree;

        /// <summary>
        /// Backing field for AllDevicesTreeVTreeItem property
        /// </summary>
        private TreeItem fAllDevicesTreeVTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderButton property
        /// </summary>
        private Button fButtonExpanderButton;

        /// <summary>
        /// Backing field for AllDevicesTextBText property
        /// </summary>
        private Text fAllDevicesTextBText;

        /// <summary>
        /// Backing field for AddGroupButtonFButton property
        /// </summary>
        private Button fAddGroupButtonFButton;

        /// <summary>
        /// Backing field for AddGroupTextBloText property
        /// </summary>
        private Text fAddGroupTextBloText;

        /// <summary>
        /// Backing field for RemoveGroupButtButton property
        /// </summary>
        private Button fRemoveGroupButtButton;

        /// <summary>
        /// Backing field for RemoveGroupTextText property
        /// </summary>
        private Text fRemoveGroupTextText;

        /// <summary>
        /// Backing field for RenameButton261Button property
        /// </summary>
        private Button fRenameButton261Button;

        /// <summary>
        /// Backing field for RenameTextBlockText property
        /// </summary>
        private Text fRenameTextBlockText;

        /// <summary>
        /// Backing field for GridSplitterThumb property
        /// </summary>
        private Thumb fGridSplitterThumb;

        /// <summary>
        /// Backing field for DeviceListText property
        /// </summary>
        private Text fDeviceListText;

        /// <summary>
        /// Backing field for DeviceListTextBText property
        /// </summary>
        private Text fDeviceListTextBText;

        /// <summary>
        /// Backing field for ListView141cb8bDataGrid property
        /// </summary>
        private DataGrid fListView141cb8bDataGrid;

        /// <summary>
        /// Backing field for GridViewHeaderRHeader property
        /// </summary>
        private Header fGridViewHeaderRHeader;

        /// <summary>
        /// Backing field for StatusGridViewCHeaderItem property
        /// </summary>
        private HeaderItem fStatusGridViewCHeaderItem;

        /// <summary>
        /// Backing field for StatusTextBlockText property
        /// </summary>
        private Text fStatusTextBlockText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup0Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup0Thumb;

        /// <summary>
        /// Backing field for NameGridViewColHeaderItem property
        /// </summary>
        private HeaderItem fNameGridViewColHeaderItem;

        /// <summary>
        /// Backing field for NameTextBlockText property
        /// </summary>
        private Text fNameTextBlockText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup1Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup1Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup0HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup0HeaderItem;

        /// <summary>
        /// Backing field for ImageDup0Image property
        /// </summary>
        private Image fImageDup0Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup2Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup2Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup1HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup1HeaderItem;

        /// <summary>
        /// Backing field for ImageDup1Image property
        /// </summary>
        private Image fImageDup1Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup3Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup3Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup2HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup2HeaderItem;

        /// <summary>
        /// Backing field for ImageDup2Image property
        /// </summary>
        private Image fImageDup2Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup4Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup4Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup3HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup3HeaderItem;

        /// <summary>
        /// Backing field for ImageDup3Image property
        /// </summary>
        private Image fImageDup3Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup5Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup5Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup4HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup4HeaderItem;

        /// <summary>
        /// Backing field for ImageDup4Image property
        /// </summary>
        private Image fImageDup4Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup6Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup6Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup5HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup5HeaderItem;

        /// <summary>
        /// Backing field for ImageDup5Image property
        /// </summary>
        private Image fImageDup5Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup7Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup7Thumb;

        /// <summary>
        /// Backing field for ModelGridViewCoHeaderItem property
        /// </summary>
        private HeaderItem fModelGridViewCoHeaderItem;

        /// <summary>
        /// Backing field for ModelTextBlockText property
        /// </summary>
        private Text fModelTextBlockText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup8Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup8Thumb;

        /// <summary>
        /// Backing field for IPAddressGridViHeaderItem property
        /// </summary>
        private HeaderItem fIPAddressGridViHeaderItem;

        /// <summary>
        /// Backing field for IPAddressTextBlText property
        /// </summary>
        private Text fIPAddressTextBlText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup9Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup9Thumb;

        /// <summary>
        /// Backing field for HostnameGridVieHeaderItem property
        /// </summary>
        private HeaderItem fHostnameGridVieHeaderItem;

        /// <summary>
        /// Backing field for HostnameTextBloText property
        /// </summary>
        private Text fHostnameTextBloText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup10Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup10Thumb;

        /// <summary>
        /// Backing field for DescriptionGridHeaderItem property
        /// </summary>
        private HeaderItem fDescriptionGridHeaderItem;

        /// <summary>
        /// Backing field for DescriptionTextText property
        /// </summary>
        private Text fDescriptionTextText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup11Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup11Thumb;

        /// <summary>
        /// Backing field for FirmwareGridVieHeaderItem property
        /// </summary>
        private HeaderItem fFirmwareGridVieHeaderItem;

        /// <summary>
        /// Backing field for FirmwareTextBloText property
        /// </summary>
        private Text fFirmwareTextBloText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup12Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup12Thumb;

        /// <summary>
        /// Backing field for AddDeviceButtonButton property
        /// </summary>
        private Button fAddDeviceButtonButton;

        /// <summary>
        /// Backing field for AddDeviceTextBlText property
        /// </summary>
        private Text fAddDeviceTextBlText;

        /// <summary>
        /// Backing field for ExportButtonef5Button property
        /// </summary>
        private Button fExportButtonef5Button;

        /// <summary>
        /// Backing field for ExportTextBlockText property
        /// </summary>
        private Text fExportTextBlockText;

        /// <summary>
        /// Backing field for RemoveDeviceButButton property
        /// </summary>
        private Button fRemoveDeviceButButton;

        /// <summary>
        /// Backing field for RemoveDeviceTexText property
        /// </summary>
        private Text fRemoveDeviceTexText;

        /// <summary>
        /// Backing field for ImportButtona69Button property
        /// </summary>
        private Button fImportButtona69Button;

        /// <summary>
        /// Backing field for ImportTextBlockText property
        /// </summary>
        private Text fImportTextBlockText;

        /// <summary>
        /// Backing field for CreateTemplateBButton property
        /// </summary>
        private Button fCreateTemplateBButton;

        /// <summary>
        /// Backing field for CreateTemplateTText property
        /// </summary>
        private Text fCreateTemplateTText;

        /// <summary>
        /// Backing field for DeviceSignInButButton property
        /// </summary>
        private Button fDeviceSignInButButton;

        /// <summary>
        /// Backing field for DeviceSignInTexText property
        /// </summary>
        private Text fDeviceSignInTexText;

        /// <summary>
        /// Backing field for TotalDevicesText property
        /// </summary>
        private Text fTotalDevicesText;

        /// <summary>
        /// Backing field for TotalDevicesTexText property
        /// </summary>
        private Text fTotalDevicesTexText;

        /// <summary>
        /// Backing field for A0Text82f844376Text property
        /// </summary>
        private Text fA0Text82f844376Text;

        /// <summary>
        /// Backing field for A0TextBlockText property
        /// </summary>
        private Text fA0TextBlockText;

        /// <summary>
        /// Backing field for ConfigureDeviceButton property
        /// </summary>
        private Button fConfigureDeviceButton;

        /// <summary>
        /// Backing field for ConfigureDeviceText property
        /// </summary>
        private Text fConfigureDeviceText;

        /// <summary>
        /// Backing field for TemplateConfiguTabItem property
        /// </summary>
        private TabItem fTemplateConfiguTabItem;

        /// <summary>
        /// Backing field for TemplateConfiguText property
        /// </summary>
        private Text fTemplateConfiguText;

        /// <summary>
        /// Backing field for LogTabItem9b4f3TabItem property
        /// </summary>
        private TabItem fLogTabItem9b4f3TabItem;

        /// <summary>
        /// Backing field for LogTextBlockText property
        /// </summary>
        private Text fLogTextBlockText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup7TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup7TabItem;

        /// <summary>
        /// Backing field for SecurityTextmSeText property
        /// </summary>
        private Text fSecurityTextmSeText;

        /// <summary>
        /// Backing field for SecurityTextBloText property
        /// </summary>
        private Text fSecurityTextBloText;

        /// <summary>
        /// Backing field for Text8A7A84DB894Text property
        /// </summary>
        private Text fText8A7A84DB894Text;

        /// <summary>
        /// Backing field for Text16F78FB18FFText property
        /// </summary>
        private Text fText16F78FB18FFText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup8TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup8TabItem;

        /// <summary>
        /// Backing field for AnalyticsTextmAText property
        /// </summary>
        private Text fAnalyticsTextmAText;

        /// <summary>
        /// Backing field for AnalyticsTextBlText property
        /// </summary>
        private Text fAnalyticsTextBlText;

        /// <summary>
        /// Backing field for AboutTabItemf45TabItem property
        /// </summary>
        private TabItem fAboutTabItemf45TabItem;

        /// <summary>
        /// Backing field for AboutTextBlockText property
        /// </summary>
        private Text fAboutTextBlockText;

        /// <summary>
        /// Backing field for Window336E32508Window property
        /// </summary>
        private Window fWindow336E32508Window;

        /// <summary>
        /// The Ip Address
        /// </summary>
        private string _ipaddress;

        /// <summary>
        /// Backing field for boundDeviceDataItem property
        /// </summary>
        private DataItem fboundDeviceDataItem;

        /// <summary>
        /// The Device Ip
        /// </summary>
        private static string _deviceAddress;

        /// <summary>
        /// The Device Model Name
        /// </summary>
        private string _deviceModelName;

        /// <summary>
        /// Backing field for ContextMenu property
        /// </summary>
        private ContextMenu _contextMenuItem;

        /// <summary>
        /// Backing field for fGroupNameTreeItem property
        /// </summary>
        private TreeItem fGroupNameTreeItem;

        /// <summary>
        /// The Group Name
        /// </summary>
        private string _groupName;

        /// <summary>
        /// Backing field for DeviceConfigurationGroupWindow property
        /// </summary>
        private Window fDeviceConfigurationGroupWindow { get; set; }

        /// <summary>
        /// Backing field for GroupNameEditTextBox property
        /// </summary>
        private Edit fGroupNameEditTextBox { get; set; }

        /// <summary>
        /// Backing field for OkGroupNameButton property
        /// </summary>
        private Button fOkGroupNameButton { get; set; }

        /// <summary>
        /// Backing field for GroupNameMenuItem property
        /// </summary>
        private MenuItem fGroupNameMenuItem { get; set; }

        /// <summary>
        /// Backing field for YesButtonAE4B0CButton property
        /// </summary>
        private Button fYesButtonAE4B0CButton;

        /// <summary>
        /// Initializes a new instance of the <see cref="DSSConfig_DeviceConfig"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public DSSConfig_DeviceConfig(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DSSConfig_DeviceConfig"/> class using the default UIAFramework.
        /// </summary>
        public DSSConfig_DeviceConfig()
        {
            Desktop = new Desktop();
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="DSSConfig_DeviceConfig"/> class using the default UIAFramework.
        /// </summary>
        /// <param name="address">
        /// The IP address.
        /// </param>
        public DSSConfig_DeviceConfig(string address)
        {
            Desktop = new Desktop(UIAFramework.ManagedUIA);
            _ipaddress = address;
            ContextMenuItem = new ContextMenu(address);
        }

        /// <summary>
        /// Sets the Device Info
        /// </summary>
        /// <param name="deviceAddress">
        /// The device address
        /// </param>
        /// <param name="deviceModelName">
        /// The device Model Name
        /// </param>
        public void SetDeviceInfo(string deviceAddress, string deviceModelName)
        {
            _deviceAddress = deviceAddress;
            _deviceModelName = deviceModelName;
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        /// <summary>
        /// Gets ContextMenuItem
        /// </summary>
        public ContextMenu ContextMenuItem
        {
            get {return _contextMenuItem;}
            set
            {
                _contextMenuItem = new ContextMenu(_ipaddress);
            }
        }

        /// <summary>
        /// Checks for screen avalability
        /// </summary>
        /// <param name="timeout">
        /// The amount of time allowed for the screen avalability
        /// </param>
        public bool WaitForAvailable(int timeout)
        {
            try
            {
                if (HPDigitalSendinWindow.WaitForAvailable(timeout) == ResultCode.Passed)
                {
                    if (DeviceConfiguraTabItem.WaitForAvailable(timeout) == ResultCode.Passed)
                    {
                        return true;
                    }
                }
            }
            catch(Exception)
            {
                return false;
            }

            return false;
        }

        /// <summary>
        /// Adds New GroupName
        /// </summary>
        /// <param name="groupName">
        /// The GroupName
        /// </param>
        public void AddNewGroupName(string groupName)
        {
            _groupName = groupName;
            
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Window HPDigitalSendinWindow
        {
            get
            {
                if (null == fHPDigitalSendinWindow)
                {
                    fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                    fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_ipaddress})");
                }

                return fHPDigitalSendinWindow;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Window DeviceConfigurationGroupWindow
        {
            get
            {
                if (null == fDeviceConfigurationGroupWindow)
                {
                    fDeviceConfigurationGroupWindow = new Window("DeviceConfigurationGroupWindow", HPDigitalSendinWindow);
                    fDeviceConfigurationGroupWindow.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfigurationGroupWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fDeviceConfigurationGroupWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"772D6D7B-4619-48d0-AB22-149E210ADEC9");
                    fDeviceConfigurationGroupWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration Group");
                }

                return fDeviceConfigurationGroupWindow;
            }

        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit GroupNameEditTextBox
        {
            get
            {
                if (null == fGroupNameEditTextBox)
                {
                    fGroupNameEditTextBox = new Edit("GroupNameEditTextBox", DeviceConfigurationGroupWindow);
                    fGroupNameEditTextBox.UIMap.Scope = UIASeachScope.Children;
                    fGroupNameEditTextBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fGroupNameEditTextBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1253A5BC-9658-4c5a-886C-FB23BFD20439");
                }

                return fGroupNameEditTextBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button OkGroupNameButton
        {
            get
            {
                if (null == fOkGroupNameButton)
                {
                    fOkGroupNameButton = new Button("OkGroupNameButton", DeviceConfigurationGroupWindow);
                    fOkGroupNameButton.UIMap.Scope = UIASeachScope.Children;
                    fOkGroupNameButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DD0F382E-B1EC-4eab-9D77-7127F1FCE724");
                    fOkGroupNameButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOkGroupNameButton;
            }

        }

       


        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TitleBar HPDigitalSendinTitleBar
        {
            get
            {
                if (null == fHPDigitalSendinTitleBar)
                {
                    fHPDigitalSendinTitleBar = new TitleBar("HPDigitalSendinTitleBar", HPDigitalSendinWindow);
                    fHPDigitalSendinTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_ipaddress})");
                }

                return fHPDigitalSendinTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuBar SystemMenuBarSyMenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyMenuBar)
                {
                    fSystemMenuBarSyMenuBar = new MenuBar("SystemMenuBarSyMenuBar", HPDigitalSendinTitleBar);
                    fSystemMenuBarSyMenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyMenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    fSystemMenuBarSyMenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                }

                return fSystemMenuBarSyMenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuItem SystemItem1MenuItem
        {
            get
            {
                if (null == fSystemItem1MenuItem)
                {
                    fSystemItem1MenuItem = new MenuItem("SystemItem1MenuItem", SystemMenuBarSyMenuBar);
                    fSystemItem1MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    fSystemItem1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                }

                return fSystemItem1MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button MinimizeMinimizButton
        {
            get
            {
                if (null == fMinimizeMinimizButton)
                {
                    fMinimizeMinimizButton = new Button("MinimizeMinimizButton", HPDigitalSendinTitleBar);
                    fMinimizeMinimizButton.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                    fMinimizeMinimizButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                }

                return fMinimizeMinimizButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button MaximizeMaximizButton
        {
            get
            {
                if (null == fMaximizeMaximizButton)
                {
                    fMaximizeMaximizButton = new Button("MaximizeMaximizButton", HPDigitalSendinTitleBar);
                    fMaximizeMaximizButton.UIMap.Scope = UIASeachScope.Children;
                    fMaximizeMaximizButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                    fMaximizeMaximizButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                }

                return fMaximizeMaximizButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CloseCloseButton
        {
            get
            {
                if (null == fCloseCloseButton)
                {
                    fCloseCloseButton = new Button("CloseCloseButton", HPDigitalSendinTitleBar);
                    fCloseCloseButton.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    fCloseCloseButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                }

                return fCloseCloseButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button HelpButtonCB8CFButton
        {
            get
            {
                if (null == fHelpButtonCB8CFButton)
                {
                    fHelpButtonCB8CFButton = new Button("HelpButtonCB8CFButton", HPDigitalSendinWindow);
                    fHelpButtonCB8CFButton.UIMap.Scope = UIASeachScope.Children;
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CB8CF0C3-DFBE-49b8-B09B-03A34F5D4186");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpButtonCB8CFButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text HelpTextBlockText
        {
            get
            {
                if (null == fHelpTextBlockText)
                {
                    fHelpTextBlockText = new Text("HelpTextBlockText", HelpButtonCB8CFButton);
                    fHelpTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ApplyButton61E2Button
        {
            get
            {
                if (null == fApplyButton61E2Button)
                {
                    fApplyButton61E2Button = new Button("ApplyButton", HPDigitalSendinWindow);
                    fApplyButton61E2Button.UIMap.Scope = UIASeachScope.Children;
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"61E2369B-F53B-4662-A361-B3034C4EFF67");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyButton61E2Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ApplyTextBlockText
        {
            get
            {
                if (null == fApplyTextBlockText)
                {
                    fApplyTextBlockText = new Text("ApplyTextBlockText", ApplyButton61E2Button);
                    fApplyTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CancelButton65CButton
        {
            get
            {
                if (null == fCancelButton65CButton)
                {
                    fCancelButton65CButton = new Button("CancelButton65CButton", HPDigitalSendinWindow);
                    fCancelButton65CButton.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"65C76204-7AB5-4681-B7FD-2D8F02DA6D4B");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelButton65CButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CancelTextBlockText
        {
            get
            {
                if (null == fCancelTextBlockText)
                {
                    fCancelTextBlockText = new Text("CancelTextBlockText", CancelButton65CButton);
                    fCancelTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fCancelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCancelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button OKButtonCC2EF49Button
        {
            get
            {
                if (null == fOKButtonCC2EF49Button)
                {
                    fOKButtonCC2EF49Button = new Button("OKButton", HPDigitalSendinWindow);
                    fOKButtonCC2EF49Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CC2EF491-0BD1-4ac5-9D00-AA61A9D6BA0C");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKButtonCC2EF49Button;
            }
        }        

        /// <summary>
        /// Gets Reference to Window336E32508Window
        /// </summary>
        public Window Window336E32508Window
        {
            get
            {
                if (null == fWindow336E32508Window)
                {
                    fWindow336E32508Window = new Window("Window336E32508Window", HPDigitalSendinWindow);
                    fWindow336E32508Window.UIMap.Scope = UIASeachScope.Children;
                    fWindow336E32508Window.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"336E3250-8749-475d-952F-E36223E36750");
                    fWindow336E32508Window.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                }

                return fWindow336E32508Window;
            }
        }        

        /// <summary>
        /// Gets Reference to YesButtonAE4B0CButton
        /// </summary>
        public Button YesButtonAE4B0CButton
        {
            get
            {
                if (null == fYesButtonAE4B0CButton)
                {
                    fYesButtonAE4B0CButton = new Button("YesButtonAE4B0CButton", Window336E32508Window);
                    fYesButtonAE4B0CButton.UIMap.Scope = UIASeachScope.Children;
                    fYesButtonAE4B0CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Yes");
                    fYesButtonAE4B0CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AE4B0C61-2DEE-4974-B517-4A1388A3F4CC");
                    fYesButtonAE4B0CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fYesButtonAE4B0CButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OKTextBlockText
        {
            get
            {
                if (null == fOKTextBlockText)
                {
                    fOKTextBlockText = new Text("OKTextBlockText", OKButtonCC2EF49Button);
                    fOKTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fOKTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOKTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Tab TabControlec0fdTab
        {
            get
            {
                if (null == fTabControlec0fdTab)
                {
                    fTabControlec0fdTab = new Tab("TabControlec0fdTab", HPDigitalSendinWindow);
                    fTabControlec0fdTab.UIMap.Scope = UIASeachScope.Children;
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ec0fd6cd-2ab8-482f-96a5-d1fa158f38d1");
                }

                return fTabControlec0fdTab;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup0TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup0TabItem)
                {
                    fSystemWindowsCoDup0TabItem = new TabItem("SystemWindowsCoDup0TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup0TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1e2be878-0c03-4404-988c-54d0df925f0f");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup0TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GeneralTextmGenText
        {
            get
            {
                if (null == fGeneralTextmGenText)
                {
                    fGeneralTextmGenText = new Text("GeneralTextmGenText", SystemWindowsCoDup0TabItem);
                    fGeneralTextmGenText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextmGenText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GeneralTextBlocText
        {
            get
            {
                if (null == fGeneralTextBlocText)
                {
                    fGeneralTextBlocText = new Text("GeneralTextBlocText", GeneralTextmGenText);
                    fGeneralTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text933345b04e3Text
        {
            get
            {
                if (null == fText933345b04e3Text)
                {
                    fText933345b04e3Text = new Text("Text933345b04e3Text", SystemWindowsCoDup0TabItem);
                    fText933345b04e3Text.UIMap.Scope = UIASeachScope.Children;
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"933345b0-4e39-44d3-a511-0077f3176ca4");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText933345b04e3Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text786caf67344Text
        {
            get
            {
                if (null == fText786caf67344Text)
                {
                    fText786caf67344Text = new Text("Text786caf67344Text", SystemWindowsCoDup0TabItem);
                    fText786caf67344Text.UIMap.Scope = UIASeachScope.Children;
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"786caf67-344f-4ddc-83a5-b9431fb36731");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText786caf67344Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup1TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup1TabItem)
                {
                    fSystemWindowsCoDup1TabItem = new TabItem("SystemWindowsCoDup1TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup1TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4e90d18a-f33c-43c0-8505-08f4a17169b5");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup1TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AuthenticationTDup0Text
        {
            get
            {
                if (null == fAuthenticationTDup0Text)
                {
                    fAuthenticationTDup0Text = new Text("AuthenticationTDup0Text", SystemWindowsCoDup1TabItem);
                    fAuthenticationTDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AuthenticationTDup1Text
        {
            get
            {
                if (null == fAuthenticationTDup1Text)
                {
                    fAuthenticationTDup1Text = new Text("AuthenticationTDup1Text", AuthenticationTDup0Text);
                    fAuthenticationTDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text31EC91730B9Text
        {
            get
            {
                if (null == fText31EC91730B9Text)
                {
                    fText31EC91730B9Text = new Text("Text31EC91730B9Text", SystemWindowsCoDup1TabItem);
                    fText31EC91730B9Text.UIMap.Scope = UIASeachScope.Children;
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"31EC9173-0B98-4d46-BC99-7DF8EA2BE02F");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText31EC91730B9Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextA479C271445Text
        {
            get
            {
                if (null == fTextA479C271445Text)
                {
                    fTextA479C271445Text = new Text("TextA479C271445Text", SystemWindowsCoDup1TabItem);
                    fTextA479C271445Text.UIMap.Scope = UIASeachScope.Children;
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A479C271-445D-43f1-864D-7503428703E4");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextA479C271445Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup2TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup2TabItem)
                {
                    fSystemWindowsCoDup2TabItem = new TabItem("EmailTabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup2TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33A07ED3-E1EE-411e-B583-7D0A3374100F");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup2TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EmailTextmEmailText
        {
            get
            {
                if (null == fEmailTextmEmailText)
                {
                    fEmailTextmEmailText = new Text("EmailTextmEmailText", SystemWindowsCoDup2TabItem);
                    fEmailTextmEmailText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                }

                return fEmailTextmEmailText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EmailTextBlockText
        {
            get
            {
                if (null == fEmailTextBlockText)
                {
                    fEmailTextBlockText = new Text("EmailTextBlockText", EmailTextmEmailText);
                    fEmailTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                }

                return fEmailTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text32de714a8bdText
        {
            get
            {
                if (null == fText32de714a8bdText)
                {
                    fText32de714a8bdText = new Text("Text32de714a8bdText", SystemWindowsCoDup2TabItem);
                    fText32de714a8bdText.UIMap.Scope = UIASeachScope.Children;
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"32de714a-8bda-4f11-bf20-b9a56b5f18bc");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText32de714a8bdText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text3b2a8761f4fText
        {
            get
            {
                if (null == fText3b2a8761f4fText)
                {
                    fText3b2a8761f4fText = new Text("Text3b2a8761f4fText", SystemWindowsCoDup2TabItem);
                    fText3b2a8761f4fText.UIMap.Scope = UIASeachScope.Children;
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3b2a8761-f4f6-41b1-b08c-9c33744bdc43");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText3b2a8761f4fText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextBlockText
        {
            get
            {
                if (null == fTextBlockText)
                {
                    fTextBlockText = new Text("TextBlockText", Text3b2a8761f4fText);
                    fTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup3TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup3TabItem)
                {
                    fSystemWindowsCoDup3TabItem = new TabItem("SystemWindowsCoDup3TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4f116988-2b22-473f-bca3-094589a44954");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FaxTextmFaxTabLText
        {
            get
            {
                if (null == fFaxTextmFaxTabLText)
                {
                    fFaxTextmFaxTabLText = new Text("FaxTextmFaxTabLText", SystemWindowsCoDup3TabItem);
                    fFaxTextmFaxTabLText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextmFaxTabLText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FaxTextBlockText
        {
            get
            {
                if (null == fFaxTextBlockText)
                {
                    fFaxTextBlockText = new Text("FaxTextBlockText", FaxTextmFaxTabLText);
                    fFaxTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextD1ED4F16F38Text
        {
            get
            {
                if (null == fTextD1ED4F16F38Text)
                {
                    fTextD1ED4F16F38Text = new Text("TextD1ED4F16F38Text", SystemWindowsCoDup3TabItem);
                    fTextD1ED4F16F38Text.UIMap.Scope = UIASeachScope.Children;
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D1ED4F16-F389-4dfd-A884-D258EDB48C11");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTextD1ED4F16F38Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text7DDE04FD251Text
        {
            get
            {
                if (null == fText7DDE04FD251Text)
                {
                    fText7DDE04FD251Text = new Text("Text7DDE04FD251Text", SystemWindowsCoDup3TabItem);
                    fText7DDE04FD251Text.UIMap.Scope = UIASeachScope.Children;
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7DDE04FD-2519-44c2-A212-67B0838E1C91");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText7DDE04FD251Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup4TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup4TabItem)
                {
                    fSystemWindowsCoDup4TabItem = new TabItem("SystemWindowsCoDup4TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup4TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ff96a045-6e12-4ce3-ba85-b65d16c39ffb");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup4TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoFolderTexDup0Text
        {
            get
            {
                if (null == fSendtoFolderTexDup0Text)
                {
                    fSendtoFolderTexDup0Text = new Text("SendtoFolderTexDup0Text", SystemWindowsCoDup4TabItem);
                    fSendtoFolderTexDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoFolderTexDup1Text
        {
            get
            {
                if (null == fSendtoFolderTexDup1Text)
                {
                    fSendtoFolderTexDup1Text = new Text("SendtoFolderTexDup1Text", SendtoFolderTexDup0Text);
                    fSendtoFolderTexDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text7a57f43ecb1Text
        {
            get
            {
                if (null == fText7a57f43ecb1Text)
                {
                    fText7a57f43ecb1Text = new Text("Text7a57f43ecb1Text", SystemWindowsCoDup4TabItem);
                    fText7a57f43ecb1Text.UIMap.Scope = UIASeachScope.Children;
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText7a57f43ecb1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text654b650dd19Text
        {
            get
            {
                if (null == fText654b650dd19Text)
                {
                    fText654b650dd19Text = new Text("Text654b650dd19Text", SystemWindowsCoDup4TabItem);
                    fText654b650dd19Text.UIMap.Scope = UIASeachScope.Children;
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText654b650dd19Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup5TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup5TabItem)
                {
                    fSystemWindowsCoDup5TabItem = new TabItem("WorkflowsTabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup5TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"38feb495-2893-4d8b-8961-31ebc2a3bd56");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup5TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text WorkflowsTextmWText
        {
            get
            {
                if (null == fWorkflowsTextmWText)
                {
                    fWorkflowsTextmWText = new Text("WorkflowsTextmWText", SystemWindowsCoDup5TabItem);
                    fWorkflowsTextmWText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                }

                return fWorkflowsTextmWText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text WorkflowsTextBlText
        {
            get
            {
                if (null == fWorkflowsTextBlText)
                {
                    fWorkflowsTextBlText = new Text("WorkflowsTextBlText", WorkflowsTextmWText);
                    fWorkflowsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                }

                return fWorkflowsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text22D9C34E84CText
        {
            get
            {
                if (null == fText22D9C34E84CText)
                {
                    fText22D9C34E84CText = new Text("Text22D9C34E84CText", SystemWindowsCoDup5TabItem);
                    fText22D9C34E84CText.UIMap.Scope = UIASeachScope.Children;
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22D9C34E-84C8-4995-AC9E-5B46F8284284");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText22D9C34E84CText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextC8D15BD39C8Text
        {
            get
            {
                if (null == fTextC8D15BD39C8Text)
                {
                    fTextC8D15BD39C8Text = new Text("TextC8D15BD39C8Text", SystemWindowsCoDup5TabItem);
                    fTextC8D15BD39C8Text.UIMap.Scope = UIASeachScope.Children;
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C8D15BD3-9C8D-484c-A5E2-309CA8AA6C56");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextC8D15BD39C8Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup6TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup6TabItem)
                {
                    fSystemWindowsCoDup6TabItem = new TabItem("SystemWindowsCoDup6TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup6TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b8c06323-208e-4239-a523-a025661e0eab");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup6TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddressingTextmText
        {
            get
            {
                if (null == fAddressingTextmText)
                {
                    fAddressingTextmText = new Text("AddressingTextmText", SystemWindowsCoDup6TabItem);
                    fAddressingTextmText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextmText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddressingTextBText
        {
            get
            {
                if (null == fAddressingTextBText)
                {
                    fAddressingTextBText = new Text("AddressingTextBText", AddressingTextmText);
                    fAddressingTextBText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text47EB5CBA4D1Text
        {
            get
            {
                if (null == fText47EB5CBA4D1Text)
                {
                    fText47EB5CBA4D1Text = new Text("Text47EB5CBA4D1Text", SystemWindowsCoDup6TabItem);
                    fText47EB5CBA4D1Text.UIMap.Scope = UIASeachScope.Children;
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"47EB5CBA-4D1C-4eee-AD64-E26BDA31A3AC");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText47EB5CBA4D1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text0757E148179Text
        {
            get
            {
                if (null == fText0757E148179Text)
                {
                    fText0757E148179Text = new Text("Text0757E148179Text", SystemWindowsCoDup6TabItem);
                    fText0757E148179Text.UIMap.Scope = UIASeachScope.Children;
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0757E148-1794-4a5d-B378-6BE8049F65E1");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText0757E148179Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem DeviceConfiguraTabItem
        {
            get
            {
                if (null == fDeviceConfiguraTabItem)
                {
                    fDeviceConfiguraTabItem = new TabItem("DeviceConfiguraTabItem", TabControlec0fdTab);
                    fDeviceConfiguraTabItem.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6DF1E016-517F-40e4-A63E-CD48D560192F");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                }

                return fDeviceConfiguraTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceConfiguraText
        {
            get
            {
                if (null == fDeviceConfiguraText)
                {
                    fDeviceConfiguraText = new Text("DeviceConfiguraText", DeviceConfiguraTabItem);
                    fDeviceConfiguraText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                }

                return fDeviceConfiguraText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ServiceConfigurCustom
        {
            get
            {
                if (null == fServiceConfigurCustom)
                {
                    fServiceConfigurCustom = new Custom("ServiceConfigurCustom", DeviceConfiguraTabItem);
                    fServiceConfigurCustom.UIMap.Scope = UIASeachScope.Children;
                    fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ServiceConfigurationDeviceConfigTab");
                    fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mServiceDeviceTab");
                }

                return fServiceConfigurCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GroupListText
        {
            get
            {
                if (null == fGroupListText)
                {
                    fGroupListText = new Text("GroupListText", ServiceConfigurCustom);
                    fGroupListText.UIMap.Scope = UIASeachScope.Children;
                    fGroupListText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGroupListText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Group List");
                }

                return fGroupListText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GroupListTextBlText
        {
            get
            {
                if (null == fGroupListTextBlText)
                {
                    fGroupListTextBlText = new Text("GroupListTextBlText", GroupListText);
                    fGroupListTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fGroupListTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGroupListTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Group List");
                }

                return fGroupListTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceGroupsText
        {
            get
            {
                if (null == fDeviceGroupsText)
                {
                    fDeviceGroupsText = new Text("DeviceGroupsText", ServiceConfigurCustom);
                    fDeviceGroupsText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceGroupsText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDeviceGroupsText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Groups");
                }

                return fDeviceGroupsText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceGroupsTexText
        {
            get
            {
                if (null == fDeviceGroupsTexText)
                {
                    fDeviceGroupsTexText = new Text("DeviceGroupsTexText", DeviceGroupsText);
                    fDeviceGroupsTexText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceGroupsTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceGroupsTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Groups");
                }

                return fDeviceGroupsTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Tree TreeView1416BDETree
        {
            get
            {
                if (null == fTreeView1416BDETree)
                {
                    fTreeView1416BDETree = new Tree("TreeView1416BDETree", ServiceConfigurCustom);
                    fTreeView1416BDETree.UIMap.Scope = UIASeachScope.Children;
                    fTreeView1416BDETree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeView");
                    fTreeView1416BDETree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1416BDED-715B-43e3-AAE3-D7E3FE37F0F0");
                }

                return fTreeView1416BDETree;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TreeItem AllDevicesTreeVTreeItem
        {
            get
            {
                if (null == fAllDevicesTreeVTreeItem)
                {
                    fAllDevicesTreeVTreeItem = new TreeItem("AllDevicesTreeVTreeItem", TreeView1416BDETree);
                    fAllDevicesTreeVTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fAllDevicesTreeVTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fAllDevicesTreeVTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"All Devices");
                }

                return fAllDevicesTreeVTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ButtonExpanderButton
        {
            get
            {
                if (null == fButtonExpanderButton)
                {
                    fButtonExpanderButton = new Button("ButtonExpanderButton", AllDevicesTreeVTreeItem);
                    fButtonExpanderButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AllDevicesTextBText
        {
            get
            {
                if (null == fAllDevicesTextBText)
                {
                    fAllDevicesTextBText = new Text("AllDevicesTextBText", AllDevicesTreeVTreeItem);
                    fAllDevicesTextBText.UIMap.Scope = UIASeachScope.Children;
                    fAllDevicesTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAllDevicesTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"All Devices");
                }

                return fAllDevicesTextBText;
            }
        }

        public TreeItem GroupNameTreeItem
        {
            get
            {
                if (null == fGroupNameTreeItem)
                {
                    fGroupNameTreeItem = new TreeItem("GroupNameTreeItem", AllDevicesTreeVTreeItem);
                    fGroupNameTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fGroupNameTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fGroupNameTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, _groupName);
                }

                return fGroupNameTreeItem;
            }
        }

        public Button GroupTreeExpanderButton
        {
            get
            {
                if (null == fButtonExpanderButton)
                {
                    fButtonExpanderButton = new Button("GroupTreeExpanderButton", GroupNameTreeItem);
                    fButtonExpanderButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button AddGroupButtonFButton
        {
            get
            {
                if (null == fAddGroupButtonFButton)
                {
                    fAddGroupButtonFButton = new Button("AddGroupButtonFButton", ServiceConfigurCustom);
                    fAddGroupButtonFButton.UIMap.Scope = UIASeachScope.Children;
                    fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FF3CA114-616C-4372-9E90-DEBFDDC95553");
                    fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group...");
                }

                return fAddGroupButtonFButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddGroupTextBloText
        {
            get
            {
                if (null == fAddGroupTextBloText)
                {
                    fAddGroupTextBloText = new Text("AddGroupTextBloText", AddGroupButtonFButton);
                    fAddGroupTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group...");
                }

                return fAddGroupTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RemoveGroupButtButton
        {
            get
            {
                if (null == fRemoveGroupButtButton)
                {
                    fRemoveGroupButtButton = new Button("RemoveGroupButtButton", ServiceConfigurCustom);
                    fRemoveGroupButtButton.UIMap.Scope = UIASeachScope.Children;
                    fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"254907B3-979B-4706-8099-4EB37924DFB2");
                    fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Group...");
                }

                return fRemoveGroupButtButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text RemoveGroupTextText
        {
            get
            {
                if (null == fRemoveGroupTextText)
                {
                    fRemoveGroupTextText = new Text("RemoveGroupTextText", RemoveGroupButtButton);
                    fRemoveGroupTextText.UIMap.Scope = UIASeachScope.Children;
                    fRemoveGroupTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRemoveGroupTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Group...");
                }

                return fRemoveGroupTextText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RenameButton261Button
        {
            get
            {
                if (null == fRenameButton261Button)
                {
                    fRenameButton261Button = new Button("RenameButton261Button", ServiceConfigurCustom);
                    fRenameButton261Button.UIMap.Scope = UIASeachScope.Children;
                    fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2619DFAD-0185-42fb-A689-994ED4ACC316");
                    fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rename");
                }

                return fRenameButton261Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text RenameTextBlockText
        {
            get
            {
                if (null == fRenameTextBlockText)
                {
                    fRenameTextBlockText = new Text("RenameTextBlockText", RenameButton261Button);
                    fRenameTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fRenameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRenameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rename");
                }

                return fRenameTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb GridSplitterThumb
        {
            get
            {
                if (null == fGridSplitterThumb)
                {
                    fGridSplitterThumb = new Thumb("GridSplitterThumb", ServiceConfigurCustom);
                    fGridSplitterThumb.UIMap.Scope = UIASeachScope.Children;
                    fGridSplitterThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridSplitter");
                }

                return fGridSplitterThumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceListText
        {
            get
            {
                if (null == fDeviceListText)
                {
                    fDeviceListText = new Text("DeviceListText", ServiceConfigurCustom);
                    fDeviceListText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceListText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDeviceListText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device List");
                }

                return fDeviceListText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceListTextBText
        {
            get
            {
                if (null == fDeviceListTextBText)
                {
                    fDeviceListTextBText = new Text("DeviceListTextBText", DeviceListText);
                    fDeviceListTextBText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceListTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceListTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device List");
                }

                return fDeviceListTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public DataGrid ListView141cb8bDataGrid
        {
            get
            {
                if (null == fListView141cb8bDataGrid)
                {
                    fListView141cb8bDataGrid = new DataGrid("ListView141cb8bDataGrid", ServiceConfigurCustom);
                    fListView141cb8bDataGrid.UIMap.Scope = UIASeachScope.Children;
                    fListView141cb8bDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListView");
                    fListView141cb8bDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"141cb8be-89c3-4b41-80ca-be09bdf636f2");
                }

                return fListView141cb8bDataGrid;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public DataItem boundDeviceDataItem
        {
            get
            {
                if (null == fboundDeviceDataItem)
                {
                    fboundDeviceDataItem = new DataItem("boundDeviceDataItem", ListView141cb8bDataGrid);
                    fboundDeviceDataItem.UIMap.Scope = UIASeachScope.Children;
                    fboundDeviceDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                    fboundDeviceDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"bound; {_deviceAddress}; email=enabled; folder=enabled; fax=enabled; addressing=disabled; authentication=notApplicable; customKey=enabled; sharePoint=notApplicable; {_deviceModelName}; {_deviceAddress}; {_deviceModelName}");
                }

                return fboundDeviceDataItem;
            }
        }

        public DataItem SelectedDeviceDataItem
        {
            get
            {
                if (null == fboundDeviceDataItem)
                {
                    fboundDeviceDataItem = new DataItem("boundDeviceDataItem", ListView141cb8bDataGrid);
                    fboundDeviceDataItem.UIMap.Scope = UIASeachScope.Children;
                    fboundDeviceDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                    fboundDeviceDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"bound; {_deviceAddress}; email=enabled; folder=enabled; fax=enabled; addressing=disabled; authentication=notApplicable; customKey=enabled; sharePoint=notApplicable; {_deviceModelName}; {_deviceAddress}; {_deviceModelName}");
                }

                if(!fboundDeviceDataItem.IsVisible())
                {
                    fboundDeviceDataItem = null;
                    var deviceElement = TopCatUiHelper.GetChildByName(fListView141cb8bDataGrid, "ListViewItem",_deviceAddress);
                    if (deviceElement != null)
                    {
                        fboundDeviceDataItem = new DataItem("boundDeviceDataItem", ListView141cb8bDataGrid);
                        fboundDeviceDataItem.UIMap.Scope = UIASeachScope.Children;
                        fboundDeviceDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                        fboundDeviceDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name,
                            deviceElement.Current.Name);
                    }
                }
                return fboundDeviceDataItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Header GridViewHeaderRHeader
        {
            get
            {
                if (null == fGridViewHeaderRHeader)
                {
                    fGridViewHeaderRHeader = new Header("GridViewHeaderRHeader", ListView141cb8bDataGrid);
                    fGridViewHeaderRHeader.UIMap.Scope = UIASeachScope.Children;
                    fGridViewHeaderRHeader.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewHeaderRowPresenter");
                }

                return fGridViewHeaderRHeader;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem StatusGridViewCHeaderItem
        {
            get
            {
                if (null == fStatusGridViewCHeaderItem)
                {
                    fStatusGridViewCHeaderItem = new HeaderItem("StatusGridViewCHeaderItem", GridViewHeaderRHeader);
                    fStatusGridViewCHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84BDE37C-126B-473a-923B-180DBBB478C6");
                    fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Status");
                }

                return fStatusGridViewCHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text StatusTextBlockText
        {
            get
            {
                if (null == fStatusTextBlockText)
                {
                    fStatusTextBlockText = new Text("StatusTextBlockText", StatusGridViewCHeaderItem);
                    fStatusTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fStatusTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fStatusTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Status");
                }

                return fStatusTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup0Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup0Thumb)
                {
                    fThumbPARTHeadeDup0Thumb = new Thumb("ThumbPARTHeadeDup0Thumb", StatusGridViewCHeaderItem);
                    fThumbPARTHeadeDup0Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup0Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem NameGridViewColHeaderItem
        {
            get
            {
                if (null == fNameGridViewColHeaderItem)
                {
                    fNameGridViewColHeaderItem = new HeaderItem("NameGridViewColHeaderItem", GridViewHeaderRHeader);
                    fNameGridViewColHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"507D57C0-BC09-4a0a-8D17-F2A9117ADCE5");
                    fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameGridViewColHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NameTextBlockText
        {
            get
            {
                if (null == fNameTextBlockText)
                {
                    fNameTextBlockText = new Text("NameTextBlockText", NameGridViewColHeaderItem);
                    fNameTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fNameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup1Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup1Thumb)
                {
                    fThumbPARTHeadeDup1Thumb = new Thumb("ThumbPARTHeadeDup1Thumb", NameGridViewColHeaderItem);
                    fThumbPARTHeadeDup1Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup1Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup0HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup0HeaderItem)
                {
                    fGridViewColumnHDup0HeaderItem = new HeaderItem("GridViewColumnHDup0HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup0HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup0HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup0HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"458F7960-4394-4579-919F-D58D5043C703");
                }

                return fGridViewColumnHDup0HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup0Image
        {
            get
            {
                if (null == fImageDup0Image)
                {
                    fImageDup0Image = new Image("ImageDup0Image", GridViewColumnHDup0HeaderItem);
                    fImageDup0Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup0Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup2Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup2Thumb)
                {
                    fThumbPARTHeadeDup2Thumb = new Thumb("ThumbPARTHeadeDup2Thumb", GridViewColumnHDup0HeaderItem);
                    fThumbPARTHeadeDup2Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup2Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup1HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup1HeaderItem)
                {
                    fGridViewColumnHDup1HeaderItem = new HeaderItem("GridViewColumnHDup1HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup1HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup1HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup1HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CD97A6CC-D4F4-4ddb-A3BB-7FF26B2222FF");
                }

                return fGridViewColumnHDup1HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup1Image
        {
            get
            {
                if (null == fImageDup1Image)
                {
                    fImageDup1Image = new Image("ImageDup1Image", GridViewColumnHDup1HeaderItem);
                    fImageDup1Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup1Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup3Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup3Thumb)
                {
                    fThumbPARTHeadeDup3Thumb = new Thumb("ThumbPARTHeadeDup3Thumb", GridViewColumnHDup1HeaderItem);
                    fThumbPARTHeadeDup3Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup3Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup3Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup3Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup2HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup2HeaderItem)
                {
                    fGridViewColumnHDup2HeaderItem = new HeaderItem("GridViewColumnHDup2HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup2HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup2HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup2HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"008BEEE0-3AE1-47be-BD91-66E124BE04A5");
                }

                return fGridViewColumnHDup2HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup2Image
        {
            get
            {
                if (null == fImageDup2Image)
                {
                    fImageDup2Image = new Image("ImageDup2Image", GridViewColumnHDup2HeaderItem);
                    fImageDup2Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup2Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup2Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup4Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup4Thumb)
                {
                    fThumbPARTHeadeDup4Thumb = new Thumb("ThumbPARTHeadeDup4Thumb", GridViewColumnHDup2HeaderItem);
                    fThumbPARTHeadeDup4Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup4Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup4Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup4Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup3HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup3HeaderItem)
                {
                    fGridViewColumnHDup3HeaderItem = new HeaderItem("GridViewColumnHDup3HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup3HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup3HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup3HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4DC0435C-FF08-4325-A9AC-115D1891ABA6");
                }

                return fGridViewColumnHDup3HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup3Image
        {
            get
            {
                if (null == fImageDup3Image)
                {
                    fImageDup3Image = new Image("ImageDup3Image", GridViewColumnHDup3HeaderItem);
                    fImageDup3Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup3Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup3Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup5Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup5Thumb)
                {
                    fThumbPARTHeadeDup5Thumb = new Thumb("ThumbPARTHeadeDup5Thumb", GridViewColumnHDup3HeaderItem);
                    fThumbPARTHeadeDup5Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup5Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup5Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup5Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup4HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup4HeaderItem)
                {
                    fGridViewColumnHDup4HeaderItem = new HeaderItem("GridViewColumnHDup4HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup4HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup4HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup4HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"BE6ECE9F-4708-4266-8106-AE6D598B0396");
                }

                return fGridViewColumnHDup4HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup4Image
        {
            get
            {
                if (null == fImageDup4Image)
                {
                    fImageDup4Image = new Image("ImageDup4Image", GridViewColumnHDup4HeaderItem);
                    fImageDup4Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup4Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup4Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup6Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup6Thumb)
                {
                    fThumbPARTHeadeDup6Thumb = new Thumb("ThumbPARTHeadeDup6Thumb", GridViewColumnHDup4HeaderItem);
                    fThumbPARTHeadeDup6Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup6Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup6Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup6Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup5HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup5HeaderItem)
                {
                    fGridViewColumnHDup5HeaderItem = new HeaderItem("GridViewColumnHDup5HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup5HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup5HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup5HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5C264E70-DAEF-44F3-9DE9-9824BC0B9ECF");
                }

                return fGridViewColumnHDup5HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup5Image
        {
            get
            {
                if (null == fImageDup5Image)
                {
                    fImageDup5Image = new Image("ImageDup5Image", GridViewColumnHDup5HeaderItem);
                    fImageDup5Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup5Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup5Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup7Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup7Thumb)
                {
                    fThumbPARTHeadeDup7Thumb = new Thumb("ThumbPARTHeadeDup7Thumb", GridViewColumnHDup5HeaderItem);
                    fThumbPARTHeadeDup7Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup7Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup7Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup7Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem ModelGridViewCoHeaderItem
        {
            get
            {
                if (null == fModelGridViewCoHeaderItem)
                {
                    fModelGridViewCoHeaderItem = new HeaderItem("ModelGridViewCoHeaderItem", GridViewHeaderRHeader);
                    fModelGridViewCoHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"805FD78E-D6A4-4559-939B-ECDD285AE6D7");
                    fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Model");
                }

                return fModelGridViewCoHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ModelTextBlockText
        {
            get
            {
                if (null == fModelTextBlockText)
                {
                    fModelTextBlockText = new Text("ModelTextBlockText", ModelGridViewCoHeaderItem);
                    fModelTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fModelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fModelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Model");
                }

                return fModelTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup8Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup8Thumb)
                {
                    fThumbPARTHeadeDup8Thumb = new Thumb("ThumbPARTHeadeDup8Thumb", ModelGridViewCoHeaderItem);
                    fThumbPARTHeadeDup8Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup8Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup8Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup8Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem IPAddressGridViHeaderItem
        {
            get
            {
                if (null == fIPAddressGridViHeaderItem)
                {
                    fIPAddressGridViHeaderItem = new HeaderItem("IPAddressGridViHeaderItem", GridViewHeaderRHeader);
                    fIPAddressGridViHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"70E1D5F4-0DA5-4e87-A451-28399734B74C");
                    fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"IP Address");
                }

                return fIPAddressGridViHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text IPAddressTextBlText
        {
            get
            {
                if (null == fIPAddressTextBlText)
                {
                    fIPAddressTextBlText = new Text("IPAddressTextBlText", IPAddressGridViHeaderItem);
                    fIPAddressTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fIPAddressTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fIPAddressTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"IP Address");
                }

                return fIPAddressTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup9Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup9Thumb)
                {
                    fThumbPARTHeadeDup9Thumb = new Thumb("ThumbPARTHeadeDup9Thumb", IPAddressGridViHeaderItem);
                    fThumbPARTHeadeDup9Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup9Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup9Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup9Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem HostnameGridVieHeaderItem
        {
            get
            {
                if (null == fHostnameGridVieHeaderItem)
                {
                    fHostnameGridVieHeaderItem = new HeaderItem("HostnameGridVieHeaderItem", GridViewHeaderRHeader);
                    fHostnameGridVieHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"82BE5D16-D370-4519-8FC4-0F517E12AFDF");
                    fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname");
                }

                return fHostnameGridVieHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text HostnameTextBloText
        {
            get
            {
                if (null == fHostnameTextBloText)
                {
                    fHostnameTextBloText = new Text("HostnameTextBloText", HostnameGridVieHeaderItem);
                    fHostnameTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fHostnameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHostnameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname");
                }

                return fHostnameTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup10Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup10Thumb)
                {
                    fThumbPARTHeadeDup10Thumb = new Thumb("ThumbPARTHeadeDup10Thumb", HostnameGridVieHeaderItem);
                    fThumbPARTHeadeDup10Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup10Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup10Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup10Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem DescriptionGridHeaderItem
        {
            get
            {
                if (null == fDescriptionGridHeaderItem)
                {
                    fDescriptionGridHeaderItem = new HeaderItem("DescriptionGridHeaderItem", GridViewHeaderRHeader);
                    fDescriptionGridHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"26A46CB8-53AC-446f-8012-A92323091104");
                    fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                }

                return fDescriptionGridHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DescriptionTextText
        {
            get
            {
                if (null == fDescriptionTextText)
                {
                    fDescriptionTextText = new Text("DescriptionTextText", DescriptionGridHeaderItem);
                    fDescriptionTextText.UIMap.Scope = UIASeachScope.Children;
                    fDescriptionTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDescriptionTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                }

                return fDescriptionTextText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup11Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup11Thumb)
                {
                    fThumbPARTHeadeDup11Thumb = new Thumb("ThumbPARTHeadeDup11Thumb", DescriptionGridHeaderItem);
                    fThumbPARTHeadeDup11Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup11Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup11Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup11Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem FirmwareGridVieHeaderItem
        {
            get
            {
                if (null == fFirmwareGridVieHeaderItem)
                {
                    fFirmwareGridVieHeaderItem = new HeaderItem("FirmwareGridVieHeaderItem", GridViewHeaderRHeader);
                    fFirmwareGridVieHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2A8C9E5A-0A8D-48DD-9D15-42B45EB4177B");
                    fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Firmware");
                }

                return fFirmwareGridVieHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FirmwareTextBloText
        {
            get
            {
                if (null == fFirmwareTextBloText)
                {
                    fFirmwareTextBloText = new Text("FirmwareTextBloText", FirmwareGridVieHeaderItem);
                    fFirmwareTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fFirmwareTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFirmwareTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Firmware");
                }

                return fFirmwareTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup12Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup12Thumb)
                {
                    fThumbPARTHeadeDup12Thumb = new Thumb("ThumbPARTHeadeDup12Thumb", FirmwareGridVieHeaderItem);
                    fThumbPARTHeadeDup12Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup12Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup12Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup12Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button AddDeviceButtonButton
        {
            get
            {
                if (null == fAddDeviceButtonButton)
                {
                    fAddDeviceButtonButton = new Button("AddDeviceButtonButton", ServiceConfigurCustom);
                    fAddDeviceButtonButton.UIMap.Scope = UIASeachScope.Children;
                    fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"F312568F-16E2-4717-876C-9A076CE2602B");
                    fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Device...");
                }

                return fAddDeviceButtonButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddDeviceTextBlText
        {
            get
            {
                if (null == fAddDeviceTextBlText)
                {
                    fAddDeviceTextBlText = new Text("AddDeviceTextBlText", AddDeviceButtonButton);
                    fAddDeviceTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fAddDeviceTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddDeviceTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Device...");
                }

                return fAddDeviceTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ExportButtonef5Button
        {
            get
            {
                if (null == fExportButtonef5Button)
                {
                    fExportButtonef5Button = new Button("ExportButtonef5Button", ServiceConfigurCustom);
                    fExportButtonef5Button.UIMap.Scope = UIASeachScope.Children;
                    fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ef506fe9-b864-4efe-a960-ad04e56aab91");
                    fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                }

                return fExportButtonef5Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ExportTextBlockText
        {
            get
            {
                if (null == fExportTextBlockText)
                {
                    fExportTextBlockText = new Text("ExportTextBlockText", ExportButtonef5Button);
                    fExportTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                }

                return fExportTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RemoveDeviceButButton
        {
            get
            {
                if (null == fRemoveDeviceButButton)
                {
                    fRemoveDeviceButButton = new Button("RemoveDeviceButButton", ServiceConfigurCustom);
                    fRemoveDeviceButButton.UIMap.Scope = UIASeachScope.Children;
                    fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6f0bbda8-ae72-4b07-bd10-508b3cd6df98");
                    fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Device...");
                }

                return fRemoveDeviceButButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text RemoveDeviceTexText
        {
            get
            {
                if (null == fRemoveDeviceTexText)
                {
                    fRemoveDeviceTexText = new Text("RemoveDeviceTexText", RemoveDeviceButButton);
                    fRemoveDeviceTexText.UIMap.Scope = UIASeachScope.Children;
                    fRemoveDeviceTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRemoveDeviceTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Device...");
                }

                return fRemoveDeviceTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ImportButtona69Button
        {
            get
            {
                if (null == fImportButtona69Button)
                {
                    fImportButtona69Button = new Button("ImportButtona69Button", ServiceConfigurCustom);
                    fImportButtona69Button.UIMap.Scope = UIASeachScope.Children;
                    fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a694c1f5-ca51-45dc-ae40-8decc9704ca5");
                    fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import");
                }

                return fImportButtona69Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ImportTextBlockText
        {
            get
            {
                if (null == fImportTextBlockText)
                {
                    fImportTextBlockText = new Text("ImportTextBlockText", ImportButtona69Button);
                    fImportTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fImportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fImportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import");
                }

                return fImportTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CreateTemplateBButton
        {
            get
            {
                if (null == fCreateTemplateBButton)
                {
                    fCreateTemplateBButton = new Button("CreateTemplateBButton", ServiceConfigurCustom);
                    fCreateTemplateBButton.UIMap.Scope = UIASeachScope.Children;
                    fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4C50BE02-6C60-4097-9595-ACF2CC3D5F50");
                    fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create Template");
                }

                return fCreateTemplateBButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CreateTemplateTText
        {
            get
            {
                if (null == fCreateTemplateTText)
                {
                    fCreateTemplateTText = new Text("CreateTemplateTText", CreateTemplateBButton);
                    fCreateTemplateTText.UIMap.Scope = UIASeachScope.Children;
                    fCreateTemplateTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCreateTemplateTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create Template");
                }

                return fCreateTemplateTText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button DeviceSignInButButton
        {
            get
            {
                if (null == fDeviceSignInButButton)
                {
                    fDeviceSignInButButton = new Button("DeviceSignInButButton", ServiceConfigurCustom);
                    fDeviceSignInButButton.UIMap.Scope = UIASeachScope.Children;
                    fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mDeviceSignInButton");
                    fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Sign In...");
                }

                return fDeviceSignInButButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceSignInTexText
        {
            get
            {
                if (null == fDeviceSignInTexText)
                {
                    fDeviceSignInTexText = new Text("DeviceSignInTexText", DeviceSignInButButton);
                    fDeviceSignInTexText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceSignInTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceSignInTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Sign In...");
                }

                return fDeviceSignInTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TotalDevicesText
        {
            get
            {
                if (null == fTotalDevicesText)
                {
                    fTotalDevicesText = new Text("TotalDevicesText", ServiceConfigurCustom);
                    fTotalDevicesText.UIMap.Scope = UIASeachScope.Children;
                    fTotalDevicesText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTotalDevicesText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Total Devices");
                }

                return fTotalDevicesText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TotalDevicesTexText
        {
            get
            {
                if (null == fTotalDevicesTexText)
                {
                    fTotalDevicesTexText = new Text("TotalDevicesTexText", TotalDevicesText);
                    fTotalDevicesTexText.UIMap.Scope = UIASeachScope.Children;
                    fTotalDevicesTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTotalDevicesTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Total Devices");
                }

                return fTotalDevicesTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text A0Text82f844376Text
        {
            get
            {
                if (null == fA0Text82f844376Text)
                {
                    fA0Text82f844376Text = new Text("A0Text82f844376Text", ServiceConfigurCustom);
                    fA0Text82f844376Text.UIMap.Scope = UIASeachScope.Children;
                    fA0Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fA0Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"82f84437-601e-4562-a536-33b7ebcbf6d7");
                    fA0Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"0");
                }

                return fA0Text82f844376Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text A0TextBlockText
        {
            get
            {
                if (null == fA0TextBlockText)
                {
                    fA0TextBlockText = new Text("A0TextBlockText", A0Text82f844376Text);
                    fA0TextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fA0TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fA0TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"0");
                }

                return fA0TextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ConfigureDeviceButton
        {
            get
            {
                if (null == fConfigureDeviceButton)
                {
                    fConfigureDeviceButton = new Button("ConfigureDeviceButton", ServiceConfigurCustom);
                    fConfigureDeviceButton.UIMap.Scope = UIASeachScope.Children;
                    fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"cc06ce85-fb0a-4048-8b41-968e5c947ca3");
                    fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Configure Device...");
                }

                return fConfigureDeviceButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ConfigureDeviceText
        {
            get
            {
                if (null == fConfigureDeviceText)
                {
                    fConfigureDeviceText = new Text("ConfigureDeviceText", ConfigureDeviceButton);
                    fConfigureDeviceText.UIMap.Scope = UIASeachScope.Children;
                    fConfigureDeviceText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fConfigureDeviceText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Configure Device...");
                }

                return fConfigureDeviceText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem TemplateConfiguTabItem
        {
            get
            {
                if (null == fTemplateConfiguTabItem)
                {
                    fTemplateConfiguTabItem = new TabItem("TemplateConfiguTabItem", TabControlec0fdTab);
                    fTemplateConfiguTabItem.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AC05F9B9-A7D8-4b34-80E7-910FB9870D47");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                }

                return fTemplateConfiguTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TemplateConfiguText
        {
            get
            {
                if (null == fTemplateConfiguText)
                {
                    fTemplateConfiguText = new Text("TemplateConfiguText", TemplateConfiguTabItem);
                    fTemplateConfiguText.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                }

                return fTemplateConfiguText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem LogTabItem9b4f3TabItem
        {
            get
            {
                if (null == fLogTabItem9b4f3TabItem)
                {
                    fLogTabItem9b4f3TabItem = new TabItem("LogTabItem9b4f3TabItem", TabControlec0fdTab);
                    fLogTabItem9b4f3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9b4f34bb-d75a-4080-9be3-1c50ec31c5b6");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTabItem9b4f3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text LogTextBlockText
        {
            get
            {
                if (null == fLogTextBlockText)
                {
                    fLogTextBlockText = new Text("LogTextBlockText", LogTabItem9b4f3TabItem);
                    fLogTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup7TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup7TabItem)
                {
                    fSystemWindowsCoDup7TabItem = new TabItem("SystemWindowsCoDup7TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup7TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3AC8D4A8-3B06-421A-911B-E8CA248A9ED4");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup7TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SecurityTextmSeText
        {
            get
            {
                if (null == fSecurityTextmSeText)
                {
                    fSecurityTextmSeText = new Text("SecurityTextmSeText", SystemWindowsCoDup7TabItem);
                    fSecurityTextmSeText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mSecurityTabLabel");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                }

                return fSecurityTextmSeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SecurityTextBloText
        {
            get
            {
                if (null == fSecurityTextBloText)
                {
                    fSecurityTextBloText = new Text("SecurityTextBloText", SecurityTextmSeText);
                    fSecurityTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                }

                return fSecurityTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text8A7A84DB894Text
        {
            get
            {
                if (null == fText8A7A84DB894Text)
                {
                    fText8A7A84DB894Text = new Text("Text8A7A84DB894Text", SystemWindowsCoDup7TabItem);
                    fText8A7A84DB894Text.UIMap.Scope = UIASeachScope.Children;
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8A7A84DB-8945-40E1-A0F9-C40DDD129739");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText8A7A84DB894Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text16F78FB18FFText
        {
            get
            {
                if (null == fText16F78FB18FFText)
                {
                    fText16F78FB18FFText = new Text("Text16F78FB18FFText", SystemWindowsCoDup7TabItem);
                    fText16F78FB18FFText.UIMap.Scope = UIASeachScope.Children;
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16F78FB1-8FF9-4B0D-8251-FB09F520EA73");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText16F78FB18FFText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup8TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup8TabItem)
                {
                    fSystemWindowsCoDup8TabItem = new TabItem("SystemWindowsCoDup8TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup8TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1678607C-20BF-4137-8238-C9D46EA8FF70");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup8TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AnalyticsTextmAText
        {
            get
            {
                if (null == fAnalyticsTextmAText)
                {
                    fAnalyticsTextmAText = new Text("AnalyticsTextmAText", SystemWindowsCoDup8TabItem);
                    fAnalyticsTextmAText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAnalyticsTabLabel");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                }

                return fAnalyticsTextmAText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AnalyticsTextBlText
        {
            get
            {
                if (null == fAnalyticsTextBlText)
                {
                    fAnalyticsTextBlText = new Text("AnalyticsTextBlText", AnalyticsTextmAText);
                    fAnalyticsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                }

                return fAnalyticsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem AboutTabItemf45TabItem
        {
            get
            {
                if (null == fAboutTabItemf45TabItem)
                {
                    fAboutTabItemf45TabItem = new TabItem("AboutTabItemf45TabItem", TabControlec0fdTab);
                    fAboutTabItemf45TabItem.UIMap.Scope = UIASeachScope.Children;
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f45c22d9-f77a-481a-95bc-09cdff03e131");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                }

                return fAboutTabItemf45TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AboutTextBlockText
        {
            get
            {
                if (null == fAboutTextBlockText)
                {
                    fAboutTextBlockText = new Text("AboutTextBlockText", AboutTabItemf45TabItem);
                    fAboutTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                }

                return fAboutTextBlockText;
            }
        }

        public class ContextMenu
        {
            /// <summary>
            /// Backing field for HPDigitalSendinWindow property
            /// </summary>
            private Window fHPDigitalSendinWindow;

            /// <summary>
            /// Backing field for PopupDup0Window property
            /// </summary>
            private Window fPopupDup0Window;

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Desktop Desktop { get; private set; }

            /// <summary>
            /// The IP Address
            /// </summary>
            private string _ipAddress;

            /// <summary>
            /// Backing field for ContextMenuEAA6Menu property
            /// </summary>
            private Menu fContextMenuEAA6Menu;

            /// <summary>
            /// Backing field for ScrollViewerConPane property
            /// </summary>
            private Pane fScrollViewerConPane;

            /// <summary>
            /// Backing field for GetStatusMenuItMenuItem property
            /// </summary>
            private MenuItem fGetStatusMenuItMenuItem;

            /// <summary>
            /// Backing field for GetStatusTextBlText property
            /// </summary>
            private Text fGetStatusTextBlText;

            /// <summary>
            /// Backing field for TextBlockmenuGeDup0Text property
            /// </summary>
            private Text fTextBlockmenuGeDup0Text;

            /// <summary>
            /// Backing field for AddtoGroupMenuItem property
            /// </summary>
            private MenuItem fAddtoGroupMenuItem;

            /// <summary>
            /// Backing field for AddtoGroupTextBText property
            /// </summary>
            private Text fAddtoGroupTextBText;

            /// <summary>
            /// Backing field for TextBlockDup0Text property
            /// </summary>
            private Text fTextBlockDup0Text;

            /// <summary>
            /// Backing field for RemoveMenuItem property
            /// </summary>
            private MenuItem fRemoveMenuItem;

            /// <summary>
            /// Backing field for RemoveTextBlockText property
            /// </summary>
            private Text fRemoveTextBlockText;

            /// <summary>
            /// Backing field for TextBlockDup1Text property
            /// </summary>
            private Text fTextBlockDup1Text;

            /// <summary>
            /// Backing field for ConfigureMenuItMenuItem property
            /// </summary>
            private MenuItem fConfigureMenuItMenuItem;

            /// <summary>
            /// Backing field for ConfigureTextBlText property
            /// </summary>
            private Text fConfigureTextBlText;

            /// <summary>
            /// Backing field for TextBlockmenuGeDup1Text property
            /// </summary>
            private Text fTextBlockmenuGeDup1Text;

            /// <summary>
            /// Backing field for ReclaimMenuItemMenuItem property
            /// </summary>
            private MenuItem fReclaimMenuItemMenuItem;

            /// <summary>
            /// Backing field for ReclaimTextBlocText property
            /// </summary>
            private Text fReclaimTextBlocText;

            /// <summary>
            /// Backing field for TextBlockmenuGeDup2Text property
            /// </summary>
            private Text fTextBlockmenuGeDup2Text;

            /// <summary>
            /// Backing field for ApplyTemplateMeMenuItem property
            /// </summary>
            private MenuItem fApplyTemplateMeMenuItem;

            /// <summary>
            /// Backing field for TemplateMenuItem property
            /// </summary>
            private MenuItem fTemplateMenuItem;

            /// <summary>
            /// Backing field for TemplateTextBlI1XText property
            /// </summary>
            private Text fTemplateTextBlI1XText;

            /// <summary>
            /// Backing field for TextBlockmenuGeI1XDup1Text property
            /// </summary>
            private Text fTextBlockmenuGeI1XDup1Text;

            /// <summary>
            /// Backing field for ApplyTemplateGrMenuItem property
            /// </summary>
            private MenuItem fApplyTemplateGrMenuItem;

            /// <summary>
            /// Backing field for ApplyTemplateGrText property
            /// </summary>
            private Text fApplyTemplateGrText;

            /// <summary>
            /// Backing field for TextBlockmenuGeDup3Text property
            /// </summary>
            private Text fTextBlockmenuGeDup3Text;

            /// <summary>
            /// Backing field for RenameMenuItemAMenuItem property
            /// </summary>
            private MenuItem fRenameMenuItemAMenuItem;

            /// <summary>
            /// Backing field for RenameTextBlockDup0Text property
            /// </summary>
            private Text fRenameTextBlockDup0Text;

            /// <summary>
            /// Backing field for TextBlockmenuGeDup4Text property
            /// </summary>
            private Text fTextBlockmenuGeDup4Text;

            /// <summary>
            /// Backing field for CreateTemplateMMenuItem property
            /// </summary>
            private MenuItem fCreateTemplateMMenuItem;

            /// <summary>
            /// Backing field for CreateTemplateTDup0Text property
            /// </summary>
            private Text fCreateTemplateTDup0Text;

            /// <summary>
            /// Backing field for TextBlockmenuGeDup5Text property
            /// </summary>
            private Text fTextBlockmenuGeDup5Text;

            /// <summary>
            /// Backing field for VerifybidirectiMenuItem property
            /// </summary>
            private MenuItem fVerifybidirectiMenuItem;

            /// <summary>
            /// Backing field for VerifybidirectiText property
            /// </summary>
            private Text fVerifybidirectiText;

            /// <summary>
            /// Backing field for TextBlockmenuGeDup6Text property
            /// </summary>
            private Text fTextBlockmenuGeDup6Text;

            /// <summary>
            /// Backing field for RepeatButtonLinDup0Button property
            /// </summary>
            private Button fRepeatButtonLinDup0Button;

            /// <summary>
            /// Backing field for RepeatButtonLinDup1Button property
            /// </summary>
            private Button fRepeatButtonLinDup1Button;

            /// <summary>
            /// Template Name and Group name
            /// </summary>
            private string _templateName, _groupName;

            /// <summary>
            /// Backing field for GroupNameMenuMenuItem property
            /// </summary>
            private MenuItem fGroupNameMenuMenuItem { get; set; }

            /// <summary>
            /// Backing field for GroupNameMenuItem property
            /// </summary>
            private MenuItem fGroupNameMenuItem { get; set; }

            /// <summary>
            /// Sets the Context Menu
            /// </summary>
            /// <param name="address">
            /// The IP address
            /// </param>            
            public ContextMenu(string address)
            {
                Desktop = new Desktop(UIAFramework.ManagedUIA);
                _ipAddress = address;
            }

            /// <summary>
            /// Sets the Template Name
            /// </summary>
            /// <param name="templateName">
            /// The name of the Template
            /// </param>    
            public void SetTemplateName(string templateName)
            {
                _templateName = templateName;
            }

            /// <summary>
            /// Sets the Group Name
            /// </summary>
            /// <param name="groupName">
            /// The name of the group
            /// </param> 
            public void SetGroupName(string groupName)
            {
                _groupName = groupName;
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Window HPDigitalSendinWindow
            {
                get
                {
                    if (null == fHPDigitalSendinWindow)
                    {
                        fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                        fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_ipAddress})");
                    }

                    return fHPDigitalSendinWindow;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Window PopupDup0Window
            {
                get
                {
                    if (null == fPopupDup0Window)
                    {
                        fPopupDup0Window = new Window("PopupDup0Window", HPDigitalSendinWindow);
                        fPopupDup0Window.UIMap.Scope = UIASeachScope.Children;
                        fPopupDup0Window.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Popup");
                    }

                    return fPopupDup0Window;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Menu ContextMenuEAA6Menu
            {
                get
                {
                    if (null == fContextMenuEAA6Menu)
                    {
                        fContextMenuEAA6Menu = new Menu("ContextMenuEAA6Menu", PopupDup0Window);
                        fContextMenuEAA6Menu.UIMap.Scope = UIASeachScope.Children;
                        fContextMenuEAA6Menu.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContextMenu");
                        fContextMenuEAA6Menu.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"EAA6204F-C4A1-44a5-A72E-D3EEBF87FA22");
                    }

                    return fContextMenuEAA6Menu;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Pane ScrollViewerConPane
            {
                get
                {
                    if (null == fScrollViewerConPane)
                    {
                        fScrollViewerConPane = new Pane("ScrollViewerConPane", ContextMenuEAA6Menu);
                        fScrollViewerConPane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerConPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                        fScrollViewerConPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ContextMenuScrollViewer");
                    }

                    return fScrollViewerConPane;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public MenuItem GetStatusMenuItMenuItem
            {
                get
                {
                    if (null == fGetStatusMenuItMenuItem)
                    {
                        fGetStatusMenuItMenuItem = new MenuItem("GetStatusMenuItMenuItem", ScrollViewerConPane);
                        fGetStatusMenuItMenuItem.UIMap.Scope = UIASeachScope.Children;
                        fGetStatusMenuItMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MenuItem");
                        fGetStatusMenuItMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C86039FB-F971-4973-86C7-8F84672A8277");
                        fGetStatusMenuItMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Get Status");
                    }

                    return fGetStatusMenuItMenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text GetStatusTextBlText
            {
                get
                {
                    if (null == fGetStatusTextBlText)
                    {
                        fGetStatusTextBlText = new Text("GetStatusTextBlText", GetStatusMenuItMenuItem);
                        fGetStatusTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fGetStatusTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fGetStatusTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Get Status");
                    }

                    return fGetStatusTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text TextBlockmenuGeDup0Text
            {
                get
                {
                    if (null == fTextBlockmenuGeDup0Text)
                    {
                        fTextBlockmenuGeDup0Text = new Text("TextBlockmenuGeDup0Text", GetStatusMenuItMenuItem);
                        fTextBlockmenuGeDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fTextBlockmenuGeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTextBlockmenuGeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"menuGestureText");
                    }

                    return fTextBlockmenuGeDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public MenuItem AddtoGroupMenuItem
            {
                get
                {
                    if (null == fAddtoGroupMenuItem)
                    {
                        fAddtoGroupMenuItem = new MenuItem("AddtoGroupMenuItem", ScrollViewerConPane);
                        fAddtoGroupMenuItem.UIMap.Scope = UIASeachScope.Children;
                        fAddtoGroupMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MenuItem");
                        fAddtoGroupMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddToGroupMenuItem");
                        fAddtoGroupMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add to Group");
                    }

                    return fAddtoGroupMenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text AddtoGroupTextBText
            {
                get
                {
                    if (null == fAddtoGroupTextBText)
                    {
                        fAddtoGroupTextBText = new Text("AddtoGroupTextBText", AddtoGroupMenuItem);
                        fAddtoGroupTextBText.UIMap.Scope = UIASeachScope.Children;
                        fAddtoGroupTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAddtoGroupTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add to Group");
                    }

                    return fAddtoGroupTextBText;
                }
            }

            public MenuItem GroupNameMenuItem
            {
                get
                {
                    if (null == fGroupNameMenuItem)
                    {
                        fGroupNameMenuItem = new MenuItem("GroupNameMenuItem", AddtoGroupMenuItem);
                        fGroupNameMenuItem.UIMap.Scope = UIASeachScope.Children;
                        fGroupNameMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MenuItem");
                        fGroupNameMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, _groupName);
                    }

                    return fGroupNameMenuItem;
                }
            }
            public MenuItem GroupNameMenuMenuItem
            {
                get
                {
                    if (null == fGroupNameMenuMenuItem)
                    {
                        fGroupNameMenuMenuItem = new MenuItem("GroupNameMenuMenuItem", GroupNameMenuItem);
                        fGroupNameMenuMenuItem.UIMap.Scope = UIASeachScope.Children;
                        fGroupNameMenuMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MenuItem");
                        fGroupNameMenuMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, _groupName);
                    }

                    return fGroupNameMenuMenuItem;
                }
            }


            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text TextBlockDup0Text
            {
                get
                {
                    if (null == fTextBlockDup0Text)
                    {
                        fTextBlockDup0Text = new Text("TextBlockDup0Text", AddtoGroupMenuItem);
                        fTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public MenuItem RemoveMenuItem
            {
                get
                {
                    if (null == fRemoveMenuItem)
                    {
                        fRemoveMenuItem = new MenuItem("RemoveMenuItem", ScrollViewerConPane);
                        fRemoveMenuItem.UIMap.Scope = UIASeachScope.Children;
                        fRemoveMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MenuItem");
                        fRemoveMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                    }

                    return fRemoveMenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text RemoveTextBlockText
            {
                get
                {
                    if (null == fRemoveTextBlockText)
                    {
                        fRemoveTextBlockText = new Text("RemoveTextBlockText", RemoveMenuItem);
                        fRemoveTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fRemoveTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fRemoveTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                    }

                    return fRemoveTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text TextBlockDup1Text
            {
                get
                {
                    if (null == fTextBlockDup1Text)
                    {
                        fTextBlockDup1Text = new Text("TextBlockDup1Text", RemoveMenuItem);
                        fTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public MenuItem ConfigureMenuItMenuItem
            {
                get
                {
                    if (null == fConfigureMenuItMenuItem)
                    {
                        fConfigureMenuItMenuItem = new MenuItem("ConfigureMenuItMenuItem", ScrollViewerConPane);
                        fConfigureMenuItMenuItem.UIMap.Scope = UIASeachScope.Children;
                        fConfigureMenuItMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MenuItem");
                        fConfigureMenuItMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7F629690-6A3C-40DE-ACAF-CFEC14D015DE");
                        fConfigureMenuItMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Configure");
                    }

                    return fConfigureMenuItMenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text ConfigureTextBlText
            {
                get
                {
                    if (null == fConfigureTextBlText)
                    {
                        fConfigureTextBlText = new Text("ConfigureTextBlText", ConfigureMenuItMenuItem);
                        fConfigureTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fConfigureTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fConfigureTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Configure");
                    }

                    return fConfigureTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text TextBlockmenuGeDup1Text
            {
                get
                {
                    if (null == fTextBlockmenuGeDup1Text)
                    {
                        fTextBlockmenuGeDup1Text = new Text("TextBlockmenuGeDup1Text", ConfigureMenuItMenuItem);
                        fTextBlockmenuGeDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fTextBlockmenuGeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTextBlockmenuGeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"menuGestureText");
                    }

                    return fTextBlockmenuGeDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public MenuItem ReclaimMenuItemMenuItem
            {
                get
                {
                    if (null == fReclaimMenuItemMenuItem)
                    {
                        fReclaimMenuItemMenuItem = new MenuItem("ReclaimMenuItemMenuItem", ScrollViewerConPane);
                        fReclaimMenuItemMenuItem.UIMap.Scope = UIASeachScope.Children;
                        fReclaimMenuItemMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MenuItem");
                        fReclaimMenuItemMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8C7D28E4-778C-49f1-828E-497C06365842");
                        fReclaimMenuItemMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Reclaim");
                    }

                    return fReclaimMenuItemMenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text ReclaimTextBlocText
            {
                get
                {
                    if (null == fReclaimTextBlocText)
                    {
                        fReclaimTextBlocText = new Text("ReclaimTextBlocText", ReclaimMenuItemMenuItem);
                        fReclaimTextBlocText.UIMap.Scope = UIASeachScope.Children;
                        fReclaimTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fReclaimTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Reclaim");
                    }

                    return fReclaimTextBlocText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text TextBlockmenuGeDup2Text
            {
                get
                {
                    if (null == fTextBlockmenuGeDup2Text)
                    {
                        fTextBlockmenuGeDup2Text = new Text("TextBlockmenuGeDup2Text", ReclaimMenuItemMenuItem);
                        fTextBlockmenuGeDup2Text.UIMap.Scope = UIASeachScope.Children;
                        fTextBlockmenuGeDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTextBlockmenuGeDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"menuGestureText");
                    }

                    return fTextBlockmenuGeDup2Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public MenuItem ApplyTemplateMeMenuItem
            {
                get
                {
                    if (null == fApplyTemplateMeMenuItem)
                    {
                        fApplyTemplateMeMenuItem = new MenuItem("ApplyTemplateMeMenuItem", ScrollViewerConPane);
                        fApplyTemplateMeMenuItem.UIMap.Scope = UIASeachScope.Children;
                        fApplyTemplateMeMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MenuItem");
                        fApplyTemplateMeMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FD48B2AD-204B-4f31-9D73-C7AB79A198D3");
                        fApplyTemplateMeMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply Template");
                    }

                    return fApplyTemplateMeMenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public MenuItem TemplateMenuItem
            {
                get
                {
                    if (null == fTemplateMenuItem)
                    {
                        fTemplateMenuItem = new MenuItem("TemplateMenuItem", ApplyTemplateMeMenuItem);
                        fTemplateMenuItem.UIMap.Scope = UIASeachScope.Children;
                        fTemplateMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MenuItem");
                        fTemplateMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, _templateName);
                    }

                    return fTemplateMenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text TemplateTextBlI1XText
            {
                get
                {
                    if (null == fTemplateTextBlI1XText)
                    {
                        fTemplateTextBlI1XText = new Text("TemplateTextBlI1XText", TemplateMenuItem);
                        fTemplateTextBlI1XText.UIMap.Scope = UIASeachScope.Children;
                        fTemplateTextBlI1XText.UIMap.Index = 1;
                        fTemplateTextBlI1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTemplateTextBlI1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, _templateName);
                    }

                    return fTemplateTextBlI1XText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text TextBlockmenuGeI1XDup1Text
            {
                get
                {
                    if (null == fTextBlockmenuGeI1XDup1Text)
                    {
                        fTextBlockmenuGeI1XDup1Text = new Text("TextBlockmenuGeI1XDup1Text", TemplateMenuItem);
                        fTextBlockmenuGeI1XDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fTextBlockmenuGeI1XDup1Text.UIMap.Index = 1;
                        fTextBlockmenuGeI1XDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTextBlockmenuGeI1XDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"menuGestureText");
                    }

                    return fTextBlockmenuGeI1XDup1Text;
                }
            }
            
       

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public MenuItem ApplyTemplateGrMenuItem
            {
                get
                {
                    if (null == fApplyTemplateGrMenuItem)
                    {
                        fApplyTemplateGrMenuItem = new MenuItem("ApplyTemplateGrMenuItem", ScrollViewerConPane);
                        fApplyTemplateGrMenuItem.UIMap.Scope = UIASeachScope.Children;
                        fApplyTemplateGrMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MenuItem");
                        fApplyTemplateGrMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"F01DDC92-8B69-4889-8A1B-55D13C67146F");
                        fApplyTemplateGrMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply Template Group");
                    }

                    return fApplyTemplateGrMenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text ApplyTemplateGrText
            {
                get
                {
                    if (null == fApplyTemplateGrText)
                    {
                        fApplyTemplateGrText = new Text("ApplyTemplateGrText", ApplyTemplateGrMenuItem);
                        fApplyTemplateGrText.UIMap.Scope = UIASeachScope.Children;
                        fApplyTemplateGrText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fApplyTemplateGrText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply Template Group");
                    }

                    return fApplyTemplateGrText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text TextBlockmenuGeDup3Text
            {
                get
                {
                    if (null == fTextBlockmenuGeDup3Text)
                    {
                        fTextBlockmenuGeDup3Text = new Text("TextBlockmenuGeDup3Text", ApplyTemplateGrMenuItem);
                        fTextBlockmenuGeDup3Text.UIMap.Scope = UIASeachScope.Children;
                        fTextBlockmenuGeDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTextBlockmenuGeDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"menuGestureText");
                    }

                    return fTextBlockmenuGeDup3Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public MenuItem RenameMenuItemAMenuItem
            {
                get
                {
                    if (null == fRenameMenuItemAMenuItem)
                    {
                        fRenameMenuItemAMenuItem = new MenuItem("RenameMenuItemAMenuItem", ScrollViewerConPane);
                        fRenameMenuItemAMenuItem.UIMap.Scope = UIASeachScope.Children;
                        fRenameMenuItemAMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MenuItem");
                        fRenameMenuItemAMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AF5F886C-FFA1-448a-9D91-C7712ECE2276");
                        fRenameMenuItemAMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rename");
                    }

                    return fRenameMenuItemAMenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text RenameTextBlockDup0Text
            {
                get
                {
                    if (null == fRenameTextBlockDup0Text)
                    {
                        fRenameTextBlockDup0Text = new Text("RenameTextBlockDup0Text", RenameMenuItemAMenuItem);
                        fRenameTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fRenameTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fRenameTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rename");
                    }

                    return fRenameTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text TextBlockmenuGeDup4Text
            {
                get
                {
                    if (null == fTextBlockmenuGeDup4Text)
                    {
                        fTextBlockmenuGeDup4Text = new Text("TextBlockmenuGeDup4Text", RenameMenuItemAMenuItem);
                        fTextBlockmenuGeDup4Text.UIMap.Scope = UIASeachScope.Children;
                        fTextBlockmenuGeDup4Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTextBlockmenuGeDup4Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"menuGestureText");
                    }

                    return fTextBlockmenuGeDup4Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public MenuItem CreateTemplateMMenuItem
            {
                get
                {
                    if (null == fCreateTemplateMMenuItem)
                    {
                        fCreateTemplateMMenuItem = new MenuItem("CreateTemplateMMenuItem", ScrollViewerConPane);
                        fCreateTemplateMMenuItem.UIMap.Scope = UIASeachScope.Children;
                        fCreateTemplateMMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MenuItem");
                        fCreateTemplateMMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3DBDFE72-6424-4d59-BEA4-F5AE739A7187");
                        fCreateTemplateMMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create Template");
                    }

                    return fCreateTemplateMMenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text CreateTemplateTDup0Text
            {
                get
                {
                    if (null == fCreateTemplateTDup0Text)
                    {
                        fCreateTemplateTDup0Text = new Text("CreateTemplateTDup0Text", CreateTemplateMMenuItem);
                        fCreateTemplateTDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fCreateTemplateTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fCreateTemplateTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create Template");
                    }

                    return fCreateTemplateTDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text TextBlockmenuGeDup5Text
            {
                get
                {
                    if (null == fTextBlockmenuGeDup5Text)
                    {
                        fTextBlockmenuGeDup5Text = new Text("TextBlockmenuGeDup5Text", CreateTemplateMMenuItem);
                        fTextBlockmenuGeDup5Text.UIMap.Scope = UIASeachScope.Children;
                        fTextBlockmenuGeDup5Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTextBlockmenuGeDup5Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"menuGestureText");
                    }

                    return fTextBlockmenuGeDup5Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public MenuItem VerifybidirectiMenuItem
            {
                get
                {
                    if (null == fVerifybidirectiMenuItem)
                    {
                        fVerifybidirectiMenuItem = new MenuItem("VerifybidirectiMenuItem", ScrollViewerConPane);
                        fVerifybidirectiMenuItem.UIMap.Scope = UIASeachScope.Children;
                        fVerifybidirectiMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MenuItem");
                        fVerifybidirectiMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CDA09917-F4C1-41A9-AEFE-DB15F0815025");
                        fVerifybidirectiMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Verify bidirectional connection");
                    }

                    return fVerifybidirectiMenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text VerifybidirectiText
            {
                get
                {
                    if (null == fVerifybidirectiText)
                    {
                        fVerifybidirectiText = new Text("VerifybidirectiText", VerifybidirectiMenuItem);
                        fVerifybidirectiText.UIMap.Scope = UIASeachScope.Children;
                        fVerifybidirectiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fVerifybidirectiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Verify bidirectional connection");
                    }

                    return fVerifybidirectiText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text TextBlockmenuGeDup6Text
            {
                get
                {
                    if (null == fTextBlockmenuGeDup6Text)
                    {
                        fTextBlockmenuGeDup6Text = new Text("TextBlockmenuGeDup6Text", VerifybidirectiMenuItem);
                        fTextBlockmenuGeDup6Text.UIMap.Scope = UIASeachScope.Children;
                        fTextBlockmenuGeDup6Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTextBlockmenuGeDup6Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"menuGestureText");
                    }

                    return fTextBlockmenuGeDup6Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Button RepeatButtonLinDup0Button
            {
                get
                {
                    if (null == fRepeatButtonLinDup0Button)
                    {
                        fRepeatButtonLinDup0Button = new Button("RepeatButtonLinDup0Button", ScrollViewerConPane);
                        fRepeatButtonLinDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fRepeatButtonLinDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                        fRepeatButtonLinDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LineUp");
                    }

                    return fRepeatButtonLinDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Button RepeatButtonLinDup1Button
            {
                get
                {
                    if (null == fRepeatButtonLinDup1Button)
                    {
                        fRepeatButtonLinDup1Button = new Button("RepeatButtonLinDup1Button", ScrollViewerConPane);
                        fRepeatButtonLinDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fRepeatButtonLinDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                        fRepeatButtonLinDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LineDown");
                    }

                    return fRepeatButtonLinDup1Button;
                }
            }

        }

        public class TemplateSummary
        {
            /// <summary>
            /// Backing field for TemplateApplySuWindow property
            /// </summary>
            private Window fTemplateApplySuWindow;

            /// <summary>
            /// Backing field for TotalDevicesDup0Text property
            /// </summary>
            private Text fTotalDevicesDup0Text;

            /// <summary>
            /// Backing field for HPDigitalSendinWindow property
            /// </summary>
            private Window fHPDigitalSendinWindow;

            /// <summary>
            /// The Ip Address
            /// </summary>
            private string _ipAddress;

            /// <summary>
            /// Backing field for ConfigureMenuItMenuItem property
            /// </summary>
            private Text fTotalDevicesTexI0XText;

            /// <summary>
            /// Backing field for A1Text82B3163CAText property
            /// </summary>
            private Text fA1Text82B3163CAText;

            /// <summary>
            /// Backing field for A1TextBlockText property
            /// </summary>
            private Text fA1TextBlockText;

            /// <summary>
            /// Backing field for HijackedText property
            /// </summary>
            private Text fHijackedText;

            /// <summary>
            /// Backing field for HijackedTextBloText property
            /// </summary>
            private Text fHijackedTextBloText;

            /// <summary>
            /// Backing field for A0TextA62418563Text property
            /// </summary>
            private Text fA0TextA62418563Text;

            /// <summary>
            /// Backing field for A0TextBlockDup0Text property
            /// </summary>
            private Text fA0TextBlockDup0Text;

            /// <summary>
            /// Backing field for InvalidcredentiDup0Text property
            /// </summary>
            private Text fInvalidcredentiDup0Text;

            /// <summary>
            /// Backing field for InvalidcredentiDup1Text property
            /// </summary>
            private Text fInvalidcredentiDup1Text;

            /// <summary>
            /// Backing field for A0TextFA47F0B9EText property
            /// </summary>
            private Text fA0TextFA47F0B9EText;

            /// <summary>
            /// Backing field for A0TextBlockDup1Text property
            /// </summary>
            private Text fA0TextBlockDup1Text;

            /// <summary>
            /// Backing field for DSSNotAllowedText property
            /// </summary>
            private Text fDSSNotAllowedText;

            /// <summary>
            /// Backing field for DSSNotAllowedTeText property
            /// </summary>
            private Text fDSSNotAllowedTeText;

            /// <summary>
            /// Backing field for A0TextDF9DEEF80Text property
            /// </summary>
            private Text fA0TextDF9DEEF80Text;

            /// <summary>
            /// Backing field for A0TextBlockDup2Text property
            /// </summary>
            private Text fA0TextBlockDup2Text;

            /// <summary>
            /// Backing field for NotApplicableText property
            /// </summary>
            private Text fNotApplicableText;

            /// <summary>
            /// Backing field for NotApplicableTeText property
            /// </summary>
            private Text fNotApplicableTeText;

            /// <summary>
            /// Backing field for A0TextB1B2DB356Text property
            /// </summary>
            private Text fA0TextB1B2DB356Text;

            /// <summary>
            /// Backing field for A0TextBlockDup3Text property
            /// </summary>
            private Text fA0TextBlockDup3Text;

            /// <summary>
            /// Backing field for UnableToCommuniDup0Text property
            /// </summary>
            private Text fUnableToCommuniDup0Text;

            /// <summary>
            /// Backing field for UnableToCommuniDup1Text property
            /// </summary>
            private Text fUnableToCommuniDup1Text;

            /// <summary>
            /// Backing field for A0Text811830675Text property
            /// </summary>
            private Text fA0Text811830675Text;

            /// <summary>
            /// Backing field for A0TextBlockDup4Text property
            /// </summary>
            private Text fA0TextBlockDup4Text;

            /// <summary>
            /// Backing field for OKButtonCA11C16Button property
            /// </summary>
            private Button fOKButtonCA11C16Button;

            /// <summary>
            /// Backing field for ConfigureMenuItMenuItem property
            /// </summary>
            private Text fOKTextBlockDup0Text;

            /// <summary>
            /// Backing field for SaveButtonBA8DAButton property
            /// </summary>
            private Button fSaveButtonBA8DAButton;

            /// <summary>
            /// Backing field for SaveTextBlockText property
            /// </summary>
            private Text fSaveTextBlockText;

            /// <summary>
            /// Backing field for ListViewD15352FDataGrid property
            /// </summary>
            private DataGrid fListViewD15352FDataGrid;

            /// <summary>
            /// Backing field for NetworkIDDataItem property
            /// </summary>
            private DataItem fNetworkIDDataItem;

            /// <summary>
            /// The Template Name
            /// </summary>
            private string _templateName;

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Desktop Desktop { get; private set; }

            /// <summary>
            /// The Template Summary
            /// </summary>
            /// /// <param name="address">
            /// The device address
            /// </param>
            /// <param name="templateName">
            /// The Template Name
            /// </param>
            public TemplateSummary(string address, string templateName)
            {
                _ipAddress = address;
                _templateName = templateName;
                Desktop = new Desktop(UIAFramework.ManagedUIA);
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Window HPDigitalSendinWindow
            {
                get
                {
                    if (null == fHPDigitalSendinWindow)
                    {
                        fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                        fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_ipAddress})");
                    }

                    return fHPDigitalSendinWindow;
                }
            }
            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Window TemplateApplyWindow
            {
                get
                {
                    if (null == fTemplateApplySuWindow)
                    {
                        fTemplateApplySuWindow = new Window("TemplateApplyWindow", HPDigitalSendinWindow);
                        fTemplateApplySuWindow.UIMap.Scope = UIASeachScope.Children;
                        fTemplateApplySuWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                        fTemplateApplySuWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"79E113D5-E13E-4339-846A-C2053E04DF8D");
                        fTemplateApplySuWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Apply Summary");
                    }

                    return fTemplateApplySuWindow;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text TotalDevicesDup0Text
            {
                get
                {
                    if (null == fTotalDevicesDup0Text)
                    {
                        fTotalDevicesDup0Text = new Text("TotalDevicesDup0Text", TemplateApplyWindow);
                        fTotalDevicesDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fTotalDevicesDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fTotalDevicesDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Total Devices");
                    }

                    return fTotalDevicesDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text TotalDevicesTexI0XText
            {
                get
                {
                    if (null == fTotalDevicesTexI0XText)
                    {
                        fTotalDevicesTexI0XText = new Text("TotalDevicesTexI0XText", TotalDevicesDup0Text);
                        fTotalDevicesTexI0XText.UIMap.Scope = UIASeachScope.Children;
                        fTotalDevicesTexI0XText.UIMap.Index = 0;
                        fTotalDevicesTexI0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTotalDevicesTexI0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Total Devices");
                    }

                    return fTotalDevicesTexI0XText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text A1Text82B3163CAText
            {
                get
                {
                    if (null == fA1Text82B3163CAText)
                    {
                        fA1Text82B3163CAText = new Text("A1Text82B3163CAText", TemplateApplyWindow);
                        fA1Text82B3163CAText.UIMap.Scope = UIASeachScope.Children;
                        fA1Text82B3163CAText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fA1Text82B3163CAText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"82B3163C-A2CF-4ebb-8D7A-399B070CC9D4");
                        fA1Text82B3163CAText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"1");
                    }

                    return fA1Text82B3163CAText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text A1TextBlockText
            {
                get
                {
                    if (null == fA1TextBlockText)
                    {
                        fA1TextBlockText = new Text("A1TextBlockText", A1Text82B3163CAText);
                        fA1TextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fA1TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fA1TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"1");
                    }

                    return fA1TextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text HijackedText
            {
                get
                {
                    if (null == fHijackedText)
                    {
                        fHijackedText = new Text("HijackedText", TemplateApplyWindow);
                        fHijackedText.UIMap.Scope = UIASeachScope.Children;
                        fHijackedText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fHijackedText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hijacked");
                    }

                    return fHijackedText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text HijackedTextBloText
            {
                get
                {
                    if (null == fHijackedTextBloText)
                    {
                        fHijackedTextBloText = new Text("HijackedTextBloText", HijackedText);
                        fHijackedTextBloText.UIMap.Scope = UIASeachScope.Children;
                        fHijackedTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fHijackedTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hijacked");
                    }

                    return fHijackedTextBloText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text A0TextA62418563Text
            {
                get
                {
                    if (null == fA0TextA62418563Text)
                    {
                        fA0TextA62418563Text = new Text("A0TextA62418563Text", TemplateApplyWindow);
                        fA0TextA62418563Text.UIMap.Scope = UIASeachScope.Children;
                        fA0TextA62418563Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fA0TextA62418563Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A6241856-34EC-4fb7-B510-34FEE9ACF20E");
                        fA0TextA62418563Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"0");
                    }

                    return fA0TextA62418563Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text A0TextBlockDup0Text
            {
                get
                {
                    if (null == fA0TextBlockDup0Text)
                    {
                        fA0TextBlockDup0Text = new Text("A0TextBlockDup0Text", A0TextA62418563Text);
                        fA0TextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fA0TextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fA0TextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"0");
                    }

                    return fA0TextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text InvalidcredentiDup0Text
            {
                get
                {
                    if (null == fInvalidcredentiDup0Text)
                    {
                        fInvalidcredentiDup0Text = new Text("InvalidcredentiDup0Text", TemplateApplyWindow);
                        fInvalidcredentiDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fInvalidcredentiDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fInvalidcredentiDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Invalid credentials");
                    }

                    return fInvalidcredentiDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text InvalidcredentiDup1Text
            {
                get
                {
                    if (null == fInvalidcredentiDup1Text)
                    {
                        fInvalidcredentiDup1Text = new Text("InvalidcredentiDup1Text", InvalidcredentiDup0Text);
                        fInvalidcredentiDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fInvalidcredentiDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fInvalidcredentiDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Invalid credentials");
                    }

                    return fInvalidcredentiDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text A0TextFA47F0B9EText
            {
                get
                {
                    if (null == fA0TextFA47F0B9EText)
                    {
                        fA0TextFA47F0B9EText = new Text("A0TextFA47F0B9EText", TemplateApplyWindow);
                        fA0TextFA47F0B9EText.UIMap.Scope = UIASeachScope.Children;
                        fA0TextFA47F0B9EText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fA0TextFA47F0B9EText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FA47F0B9-E90A-40cd-A5D4-BF75D68040A0");
                        fA0TextFA47F0B9EText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"0");
                    }

                    return fA0TextFA47F0B9EText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text A0TextBlockDup1Text
            {
                get
                {
                    if (null == fA0TextBlockDup1Text)
                    {
                        fA0TextBlockDup1Text = new Text("A0TextBlockDup1Text", A0TextFA47F0B9EText);
                        fA0TextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fA0TextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fA0TextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"0");
                    }

                    return fA0TextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text DSSNotAllowedText
            {
                get
                {
                    if (null == fDSSNotAllowedText)
                    {
                        fDSSNotAllowedText = new Text("DSSNotAllowedText", TemplateApplyWindow);
                        fDSSNotAllowedText.UIMap.Scope = UIASeachScope.Children;
                        fDSSNotAllowedText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fDSSNotAllowedText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"DSS Not Allowed");
                    }

                    return fDSSNotAllowedText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text DSSNotAllowedTeText
            {
                get
                {
                    if (null == fDSSNotAllowedTeText)
                    {
                        fDSSNotAllowedTeText = new Text("DSSNotAllowedTeText", DSSNotAllowedText);
                        fDSSNotAllowedTeText.UIMap.Scope = UIASeachScope.Children;
                        fDSSNotAllowedTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fDSSNotAllowedTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"DSS Not Allowed");
                    }

                    return fDSSNotAllowedTeText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text A0TextDF9DEEF80Text
            {
                get
                {
                    if (null == fA0TextDF9DEEF80Text)
                    {
                        fA0TextDF9DEEF80Text = new Text("A0TextDF9DEEF80Text", TemplateApplyWindow);
                        fA0TextDF9DEEF80Text.UIMap.Scope = UIASeachScope.Children;
                        fA0TextDF9DEEF80Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fA0TextDF9DEEF80Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DF9DEEF8-0EA3-4f83-BCCD-DBB03D50DCA0");
                        fA0TextDF9DEEF80Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"0");
                    }

                    return fA0TextDF9DEEF80Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text A0TextBlockDup2Text
            {
                get
                {
                    if (null == fA0TextBlockDup2Text)
                    {
                        fA0TextBlockDup2Text = new Text("A0TextBlockDup2Text", A0TextDF9DEEF80Text);
                        fA0TextBlockDup2Text.UIMap.Scope = UIASeachScope.Children;
                        fA0TextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fA0TextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"0");
                    }

                    return fA0TextBlockDup2Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text NotApplicableText
            {
                get
                {
                    if (null == fNotApplicableText)
                    {
                        fNotApplicableText = new Text("NotApplicableText", TemplateApplyWindow);
                        fNotApplicableText.UIMap.Scope = UIASeachScope.Children;
                        fNotApplicableText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fNotApplicableText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Not Applicable");
                    }

                    return fNotApplicableText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text NotApplicableTeText
            {
                get
                {
                    if (null == fNotApplicableTeText)
                    {
                        fNotApplicableTeText = new Text("NotApplicableTeText", NotApplicableText);
                        fNotApplicableTeText.UIMap.Scope = UIASeachScope.Children;
                        fNotApplicableTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fNotApplicableTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Not Applicable");
                    }

                    return fNotApplicableTeText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text A0TextB1B2DB356Text
            {
                get
                {
                    if (null == fA0TextB1B2DB356Text)
                    {
                        fA0TextB1B2DB356Text = new Text("A0TextB1B2DB356Text", TemplateApplyWindow);
                        fA0TextB1B2DB356Text.UIMap.Scope = UIASeachScope.Children;
                        fA0TextB1B2DB356Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fA0TextB1B2DB356Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B1B2DB35-63E8-4470-AB07-8195DAE47EBC");
                        fA0TextB1B2DB356Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"0");
                    }

                    return fA0TextB1B2DB356Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text A0TextBlockDup3Text
            {
                get
                {
                    if (null == fA0TextBlockDup3Text)
                    {
                        fA0TextBlockDup3Text = new Text("A0TextBlockDup3Text", A0TextB1B2DB356Text);
                        fA0TextBlockDup3Text.UIMap.Scope = UIASeachScope.Children;
                        fA0TextBlockDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fA0TextBlockDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"0");
                    }

                    return fA0TextBlockDup3Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text UnableToCommuniDup0Text
            {
                get
                {
                    if (null == fUnableToCommuniDup0Text)
                    {
                        fUnableToCommuniDup0Text = new Text("UnableToCommuniDup0Text", TemplateApplyWindow);
                        fUnableToCommuniDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fUnableToCommuniDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fUnableToCommuniDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Unable To Communicate");
                    }

                    return fUnableToCommuniDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text UnableToCommuniDup1Text
            {
                get
                {
                    if (null == fUnableToCommuniDup1Text)
                    {
                        fUnableToCommuniDup1Text = new Text("UnableToCommuniDup1Text", UnableToCommuniDup0Text);
                        fUnableToCommuniDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fUnableToCommuniDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fUnableToCommuniDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Unable To Communicate");
                    }

                    return fUnableToCommuniDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text A0Text811830675Text
            {
                get
                {
                    if (null == fA0Text811830675Text)
                    {
                        fA0Text811830675Text = new Text("A0Text811830675Text", TemplateApplyWindow);
                        fA0Text811830675Text.UIMap.Scope = UIASeachScope.Children;
                        fA0Text811830675Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fA0Text811830675Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"81183067-5094-4761-9F74-0DF11B6FA996");
                        fA0Text811830675Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"0");
                    }

                    return fA0Text811830675Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text A0TextBlockDup4Text
            {
                get
                {
                    if (null == fA0TextBlockDup4Text)
                    {
                        fA0TextBlockDup4Text = new Text("A0TextBlockDup4Text", A0Text811830675Text);
                        fA0TextBlockDup4Text.UIMap.Scope = UIASeachScope.Children;
                        fA0TextBlockDup4Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fA0TextBlockDup4Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"0");
                    }

                    return fA0TextBlockDup4Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Button OKButtonCA11C16Button
            {
                get
                {
                    if (null == fOKButtonCA11C16Button)
                    {
                        fOKButtonCA11C16Button = new Button("OKButtonCA11C16Button", TemplateApplyWindow);
                        fOKButtonCA11C16Button.UIMap.Scope = UIASeachScope.Children;
                        fOKButtonCA11C16Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fOKButtonCA11C16Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CA11C167-BBF0-4835-ADD2-6DB7CE049A1A");
                        fOKButtonCA11C16Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    }

                    return fOKButtonCA11C16Button;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text OKTextBlockDup0Text
            {
                get
                {
                    if (null == fOKTextBlockDup0Text)
                    {
                        fOKTextBlockDup0Text = new Text("OKTextBlockDup0Text", OKButtonCA11C16Button);
                        fOKTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    }

                    return fOKTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Button SaveButtonBA8DAButton
            {
                get
                {
                    if (null == fSaveButtonBA8DAButton)
                    {
                        fSaveButtonBA8DAButton = new Button("SaveButtonBA8DAButton", TemplateApplyWindow);
                        fSaveButtonBA8DAButton.UIMap.Scope = UIASeachScope.Children;
                        fSaveButtonBA8DAButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fSaveButtonBA8DAButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"BA8DA2DE-2111-4cb3-87F9-5D6C5590CC81");
                        fSaveButtonBA8DAButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save");
                    }

                    return fSaveButtonBA8DAButton;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Text SaveTextBlockText
            {
                get
                {
                    if (null == fSaveTextBlockText)
                    {
                        fSaveTextBlockText = new Text("SaveTextBlockText", SaveButtonBA8DAButton);
                        fSaveTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fSaveTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fSaveTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save");
                    }

                    return fSaveTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public DataGrid ListViewD15352FDataGrid
            {
                get
                {
                    if (null == fListViewD15352FDataGrid)
                    {
                        fListViewD15352FDataGrid = new DataGrid("ListViewD15352FDataGrid", TemplateApplyWindow);
                        fListViewD15352FDataGrid.UIMap.Scope = UIASeachScope.Children;
                        fListViewD15352FDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListView");
                        fListViewD15352FDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D15352F5-432C-4653-9993-A7A820D63308");
                    }

                    return fListViewD15352FDataGrid;
                }
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public DataItem NetworkIdDataItem
            {
                get
                {
                    if (null == fNetworkIDDataItem)
                    {
                        fNetworkIDDataItem = new DataItem("NetworkID157718DataItem", ListViewD15352FDataGrid);
                        fNetworkIDDataItem.UIMap.Scope = UIASeachScope.Children;
                        fNetworkIDDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                        fNetworkIDDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"Network ID,{_deviceAddress};Status,Success;General,Success;Email,Success;Folder,Success;Fax,Success;customKey,Success;Authentication,Success;Addressing,Success;SharePoint®,Not Applicable;Description,Successfully applied template: {_templateName};");
                    }

                    return fNetworkIDDataItem;
                }
            }
        }

        /// <summary>
        /// Application which exercises the TopCat Coded C# test API.
        /// </summary>
        public class CreateTemplate
        {
            /// <summary>
            /// Backing field for HPDigitalSendinWindow property
            /// </summary>
            private Window fHPDigitalSendinWindow;

            /// <summary>
            /// Backing field for CreatingTemplatWindow property
            /// </summary>
            private Window fCreatingTemplatWindow;

            /// <summary>
            /// Backing field for CreatingTemplatTitleBar property
            /// </summary>
            private TitleBar fCreatingTemplatTitleBar;

            /// <summary>
            /// Backing field for SystemMenuBarSyDup0MenuBar property
            /// </summary>
            private MenuBar fSystemMenuBarSyDup0MenuBar;

            /// <summary>
            /// Backing field for SystemItem1Dup0MenuItem property
            /// </summary>
            private MenuItem fSystemItem1Dup0MenuItem;

            /// <summary>
            /// Backing field for MinimizeMinimizDup0Button property
            /// </summary>
            private Button fMinimizeMinimizDup0Button;

            /// <summary>
            /// Backing field for MaximizeMaximizDup0Button property
            /// </summary>
            private Button fMaximizeMaximizDup0Button;

            /// <summary>
            /// Backing field for CloseCloseDup0Button property
            /// </summary>
            private Button fCloseCloseDup0Button;

            /// <summary>
            /// Backing field for HelpButton268CFButton property
            /// </summary>
            private Button fHelpButton268CFButton;

            /// <summary>
            /// Backing field for HelpTextBlockDup0Text property
            /// </summary>
            private Text fHelpTextBlockDup0Text;

            /// <summary>
            /// Backing field for CancelButtonE2EButton property
            /// </summary>
            private Button fCancelButtonE2EButton;

            /// <summary>
            /// Backing field for CancelTextBlockDup0Text property
            /// </summary>
            private Text fCancelTextBlockDup0Text;

            /// <summary>
            /// Backing field for OKButton98812F5Button property
            /// </summary>
            private Button fOKButton98812F5Button;

            /// <summary>
            /// Backing field for OKTextBlockDup0Text property
            /// </summary>
            private Text fOKTextBlockDup0Text;

            /// <summary>
            /// Backing field for ImageDup0Image property
            /// </summary>
            private Image fImageDup0Image;

            /// <summary>
            /// Backing field for PasswordscannotText property
            /// </summary>
            private Text fPasswordscannotText;

            /// <summary>
            /// Backing field for CheckBoxInformaCheckBox property
            /// </summary>
            private CheckBox fCheckBoxInformaCheckBox;

            /// <summary>
            /// Backing field for ImageDup1Image property
            /// </summary>
            private Image fImageDup1Image;

            /// <summary>
            /// Backing field for NameText property
            /// </summary>
            private Text fNameText;

            /// <summary>
            /// Backing field for NameTextBlockDup0Text property
            /// </summary>
            private Text fNameTextBlockDup0Text;

            /// <summary>
            /// Backing field for TextBox02EC542DEdit property
            /// </summary>
            private Edit fTextBox02EC542DEdit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup0Pane property
            /// </summary>
            private Pane fScrollViewerPARDup0Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup0ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup0ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup0ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup0ScrollBar;

            /// <summary>
            /// Backing field for DescriptionText property
            /// </summary>
            private Text fDescriptionText;

            /// <summary>
            /// Backing field for DescriptionTextDup0Text property
            /// </summary>
            private Text fDescriptionTextDup0Text;

            /// <summary>
            /// Backing field for TextBox212A3C47Edit property
            /// </summary>
            private Edit fTextBox212A3C47Edit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup1Pane property
            /// </summary>
            private Pane fScrollViewerPARDup1Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup1ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup1ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup1ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup1ScrollBar;

            /// <summary>
            /// Backing field for ConfigurableFeaGroup property
            /// </summary>
            private Group fConfigurableFeaGroup;

            /// <summary>
            /// Backing field for ConfigurableFeaText property
            /// </summary>
            private Text fConfigurableFeaText;

            /// <summary>
            /// Backing field for GeneralCheckBoxCheckBox property
            /// </summary>
            private CheckBox fGeneralCheckBoxCheckBox;

            /// <summary>
            /// Backing field for GeneralTextBlocDup0Text property
            /// </summary>
            private Text fGeneralTextBlocDup0Text;

            /// <summary>
            /// Backing field for EmailCheckBox4DCheckBox property
            /// </summary>
            private CheckBox fEmailCheckBox4DCheckBox;

            /// <summary>
            /// Backing field for EmailTextBlockDup0Text property
            /// </summary>
            private Text fEmailTextBlockDup0Text;

            /// <summary>
            /// Backing field for SendtoFolderCheCheckBox property
            /// </summary>
            private CheckBox fSendtoFolderCheCheckBox;

            /// <summary>
            /// Backing field for SendtoFolderTexDup0Text property
            /// </summary>
            private Text fSendtoFolderTexDup0Text;

            /// <summary>
            /// Backing field for FaxCheckBox063FCheckBox property
            /// </summary>
            private CheckBox fFaxCheckBox063FCheckBox;

            /// <summary>
            /// Backing field for FaxTextBlockDup0Text property
            /// </summary>
            private Text fFaxTextBlockDup0Text;

            /// <summary>
            /// Backing field for AddressingCheckCheckBox property
            /// </summary>
            private CheckBox fAddressingCheckCheckBox;

            /// <summary>
            /// Backing field for AddressingTextBDup0Text property
            /// </summary>
            private Text fAddressingTextBDup0Text;

            /// <summary>
            /// Backing field for AuthenticationCCheckBox property
            /// </summary>
            private CheckBox fAuthenticationCCheckBox;

            /// <summary>
            /// Backing field for AuthenticationTDup0Text property
            /// </summary>
            private Text fAuthenticationTDup0Text;

            /// <summary>
            /// Backing field for WorkflowsCheckBCheckBox property
            /// </summary>
            private CheckBox fWorkflowsCheckBCheckBox;

            /// <summary>
            /// Backing field for WorkflowsTextBlDup0Text property
            /// </summary>
            private Text fWorkflowsTextBlDup0Text;

            /// <summary>
            /// Backing field for PreferencesChecCheckBox property
            /// </summary>
            private CheckBox fPreferencesChecCheckBox;

            /// <summary>
            /// Backing field for SharePointCheckCheckBox property
            /// </summary>
            private CheckBox fSharePointCheckCheckBox;

            /// <summary>
            /// Backing field for SharePointTextBText property
            /// </summary>
            private Text fSharePointTextBText;

            /// <summary>
            /// Backing field for HPDigitalSendinTitleBar property
            /// </summary>
            private TitleBar fHPDigitalSendinTitleBar;

            /// <summary>
            /// Backing field for SystemMenuBarSyDup1MenuBar property
            /// </summary>
            private MenuBar fSystemMenuBarSyDup1MenuBar;

            /// <summary>
            /// Backing field for SystemItem1Dup1MenuItem property
            /// </summary>
            private MenuItem fSystemItem1Dup1MenuItem;

            /// <summary>
            /// Backing field for MinimizeMinimizDup1Button property
            /// </summary>
            private Button fMinimizeMinimizDup1Button;

            /// <summary>
            /// Backing field for MaximizeMaximizDup1Button property
            /// </summary>
            private Button fMaximizeMaximizDup1Button;

            /// <summary>
            /// Backing field for CloseCloseDup1Button property
            /// </summary>
            private Button fCloseCloseDup1Button;

            /// <summary>
            /// Backing field for HelpButtonCB8CFButton property
            /// </summary>
            private Button fHelpButtonCB8CFButton;

            /// <summary>
            /// Backing field for HelpTextBlockDup1Text property
            /// </summary>
            private Text fHelpTextBlockDup1Text;

            /// <summary>
            /// Backing field for ApplyButton61E2Button property
            /// </summary>
            private Button fApplyButton61E2Button;

            /// <summary>
            /// Backing field for ApplyTextBlockText property
            /// </summary>
            private Text fApplyTextBlockText;

            /// <summary>
            /// Backing field for CancelButton65CButton property
            /// </summary>
            private Button fCancelButton65CButton;

            /// <summary>
            /// Backing field for CancelTextBlockDup1Text property
            /// </summary>
            private Text fCancelTextBlockDup1Text;

            /// <summary>
            /// Backing field for OKButtonCC2EF49Button property
            /// </summary>
            private Button fOKButtonCC2EF49Button;

            /// <summary>
            /// Backing field for OKTextBlockDup1Text property
            /// </summary>
            private Text fOKTextBlockDup1Text;

            /// <summary>
            /// Backing field for TabControlec0fdTab property
            /// </summary>
            private Tab fTabControlec0fdTab;

            /// <summary>
            /// Backing field for SystemWindowsCoDup0TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup0TabItem;

            /// <summary>
            /// Backing field for GeneralTextmGenText property
            /// </summary>
            private Text fGeneralTextmGenText;

            /// <summary>
            /// Backing field for GeneralTextBlocDup1Text property
            /// </summary>
            private Text fGeneralTextBlocDup1Text;

            /// <summary>
            /// Backing field for Text933345b04e3Text property
            /// </summary>
            private Text fText933345b04e3Text;

            /// <summary>
            /// Backing field for Text786caf67344Text property
            /// </summary>
            private Text fText786caf67344Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup1TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup1TabItem;

            /// <summary>
            /// Backing field for AuthenticationTDup1Text property
            /// </summary>
            private Text fAuthenticationTDup1Text;

            /// <summary>
            /// Backing field for AuthenticationTDup2Text property
            /// </summary>
            private Text fAuthenticationTDup2Text;

            /// <summary>
            /// Backing field for Text31EC91730B9Text property
            /// </summary>
            private Text fText31EC91730B9Text;

            /// <summary>
            /// Backing field for TextA479C271445Text property
            /// </summary>
            private Text fTextA479C271445Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup2TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup2TabItem;

            /// <summary>
            /// Backing field for EmailTextmEmailText property
            /// </summary>
            private Text fEmailTextmEmailText;

            /// <summary>
            /// Backing field for EmailTextBlockDup1Text property
            /// </summary>
            private Text fEmailTextBlockDup1Text;

            /// <summary>
            /// Backing field for Text32de714a8bdText property
            /// </summary>
            private Text fText32de714a8bdText;

            /// <summary>
            /// Backing field for Text3b2a8761f4fText property
            /// </summary>
            private Text fText3b2a8761f4fText;

            /// <summary>
            /// Backing field for TextBlockDup0Text property
            /// </summary>
            private Text fTextBlockDup0Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup3TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup3TabItem;

            /// <summary>
            /// Backing field for FaxTextmFaxTabLText property
            /// </summary>
            private Text fFaxTextmFaxTabLText;

            /// <summary>
            /// Backing field for FaxTextBlockDup1Text property
            /// </summary>
            private Text fFaxTextBlockDup1Text;

            /// <summary>
            /// Backing field for TextD1ED4F16F38Text property
            /// </summary>
            private Text fTextD1ED4F16F38Text;

            /// <summary>
            /// Backing field for Text7DDE04FD251Text property
            /// </summary>
            private Text fText7DDE04FD251Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup4TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup4TabItem;

            /// <summary>
            /// Backing field for SendtoFolderTexDup1Text property
            /// </summary>
            private Text fSendtoFolderTexDup1Text;

            /// <summary>
            /// Backing field for SendtoFolderTexDup2Text property
            /// </summary>
            private Text fSendtoFolderTexDup2Text;

            /// <summary>
            /// Backing field for Text7a57f43ecb1Text property
            /// </summary>
            private Text fText7a57f43ecb1Text;

            /// <summary>
            /// Backing field for Text654b650dd19Text property
            /// </summary>
            private Text fText654b650dd19Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup5TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup5TabItem;

            /// <summary>
            /// Backing field for WorkflowsTextmWText property
            /// </summary>
            private Text fWorkflowsTextmWText;

            /// <summary>
            /// Backing field for WorkflowsTextBlDup1Text property
            /// </summary>
            private Text fWorkflowsTextBlDup1Text;

            /// <summary>
            /// Backing field for Text22D9C34E84CText property
            /// </summary>
            private Text fText22D9C34E84CText;

            /// <summary>
            /// Backing field for TextC8D15BD39C8Text property
            /// </summary>
            private Text fTextC8D15BD39C8Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup6TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup6TabItem;

            /// <summary>
            /// Backing field for AddressingTextmText property
            /// </summary>
            private Text fAddressingTextmText;

            /// <summary>
            /// Backing field for AddressingTextBDup1Text property
            /// </summary>
            private Text fAddressingTextBDup1Text;

            /// <summary>
            /// Backing field for Text47EB5CBA4D1Text property
            /// </summary>
            private Text fText47EB5CBA4D1Text;

            /// <summary>
            /// Backing field for Text0757E148179Text property
            /// </summary>
            private Text fText0757E148179Text;

            /// <summary>
            /// Backing field for DeviceConfiguraTabItem property
            /// </summary>
            private TabItem fDeviceConfiguraTabItem;

            /// <summary>
            /// Backing field for DeviceConfiguraText property
            /// </summary>
            private Text fDeviceConfiguraText;

            /// <summary>
            /// Backing field for ServiceConfigurCustom property
            /// </summary>
            private Custom fServiceConfigurCustom;

            /// <summary>
            /// Backing field for GroupListText property
            /// </summary>
            private Text fGroupListText;

            /// <summary>
            /// Backing field for GroupListTextBlText property
            /// </summary>
            private Text fGroupListTextBlText;

            /// <summary>
            /// Backing field for DeviceGroupsText property
            /// </summary>
            private Text fDeviceGroupsText;

            /// <summary>
            /// Backing field for DeviceGroupsTexText property
            /// </summary>
            private Text fDeviceGroupsTexText;

            /// <summary>
            /// Backing field for TreeView1416BDETree property
            /// </summary>
            private Tree fTreeView1416BDETree;

            /// <summary>
            /// Backing field for AllDevicesTreeVTreeItem property
            /// </summary>
            private TreeItem fAllDevicesTreeVTreeItem;

            /// <summary>
            /// Backing field for ButtonExpanderButton property
            /// </summary>
            private Button fButtonExpanderButton;

            /// <summary>
            /// Backing field for AllDevicesTextBText property
            /// </summary>
            private Text fAllDevicesTextBText;

            /// <summary>
            /// Backing field for AddGroupButtonFButton property
            /// </summary>
            private Button fAddGroupButtonFButton;

            /// <summary>
            /// Backing field for AddGroupTextBloText property
            /// </summary>
            private Text fAddGroupTextBloText;

            /// <summary>
            /// Backing field for RemoveGroupButtButton property
            /// </summary>
            private Button fRemoveGroupButtButton;

            /// <summary>
            /// Backing field for RemoveGroupTextText property
            /// </summary>
            private Text fRemoveGroupTextText;

            /// <summary>
            /// Backing field for RenameButton261Button property
            /// </summary>
            private Button fRenameButton261Button;

            /// <summary>
            /// Backing field for RenameTextBlockText property
            /// </summary>
            private Text fRenameTextBlockText;

            /// <summary>
            /// Backing field for GridSplitterThumb property
            /// </summary>
            private Thumb fGridSplitterThumb;

            /// <summary>
            /// Backing field for DeviceListText property
            /// </summary>
            private Text fDeviceListText;

            /// <summary>
            /// Backing field for DeviceListTextBText property
            /// </summary>
            private Text fDeviceListTextBText;

            /// <summary>
            /// Backing field for ListView141cb8bDataGrid property
            /// </summary>
            private DataGrid fListView141cb8bDataGrid;

            /// <summary>
            /// Backing field for GridViewHeaderRHeader property
            /// </summary>
            private Header fGridViewHeaderRHeader;

            /// <summary>
            /// Backing field for StatusGridViewCHeaderItem property
            /// </summary>
            private HeaderItem fStatusGridViewCHeaderItem;

            /// <summary>
            /// Backing field for StatusTextBlockText property
            /// </summary>
            private Text fStatusTextBlockText;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup0Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup0Thumb;

            /// <summary>
            /// Backing field for NameGridViewColHeaderItem property
            /// </summary>
            private HeaderItem fNameGridViewColHeaderItem;

            /// <summary>
            /// Backing field for NameTextBlockDup1Text property
            /// </summary>
            private Text fNameTextBlockDup1Text;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup1Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup1Thumb;

            /// <summary>
            /// Backing field for GridViewColumnHDup0HeaderItem property
            /// </summary>
            private HeaderItem fGridViewColumnHDup0HeaderItem;

            /// <summary>
            /// Backing field for ImageDup2Image property
            /// </summary>
            private Image fImageDup2Image;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup2Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup2Thumb;

            /// <summary>
            /// Backing field for GridViewColumnHDup1HeaderItem property
            /// </summary>
            private HeaderItem fGridViewColumnHDup1HeaderItem;

            /// <summary>
            /// Backing field for ImageDup3Image property
            /// </summary>
            private Image fImageDup3Image;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup3Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup3Thumb;

            /// <summary>
            /// Backing field for GridViewColumnHDup2HeaderItem property
            /// </summary>
            private HeaderItem fGridViewColumnHDup2HeaderItem;

            /// <summary>
            /// Backing field for ImageDup4Image property
            /// </summary>
            private Image fImageDup4Image;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup4Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup4Thumb;

            /// <summary>
            /// Backing field for GridViewColumnHDup3HeaderItem property
            /// </summary>
            private HeaderItem fGridViewColumnHDup3HeaderItem;

            /// <summary>
            /// Backing field for ImageDup5Image property
            /// </summary>
            private Image fImageDup5Image;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup5Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup5Thumb;

            /// <summary>
            /// Backing field for GridViewColumnHDup4HeaderItem property
            /// </summary>
            private HeaderItem fGridViewColumnHDup4HeaderItem;

            /// <summary>
            /// Backing field for ImageDup6Image property
            /// </summary>
            private Image fImageDup6Image;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup6Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup6Thumb;

            /// <summary>
            /// Backing field for GridViewColumnHDup5HeaderItem property
            /// </summary>
            private HeaderItem fGridViewColumnHDup5HeaderItem;

            /// <summary>
            /// Backing field for ImageDup7Image property
            /// </summary>
            private Image fImageDup7Image;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup7Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup7Thumb;

            /// <summary>
            /// Backing field for ModelGridViewCoHeaderItem property
            /// </summary>
            private HeaderItem fModelGridViewCoHeaderItem;

            /// <summary>
            /// Backing field for ModelTextBlockText property
            /// </summary>
            private Text fModelTextBlockText;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup8Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup8Thumb;

            /// <summary>
            /// Backing field for IPAddressGridViHeaderItem property
            /// </summary>
            private HeaderItem fIPAddressGridViHeaderItem;

            /// <summary>
            /// Backing field for IPAddressTextBlText property
            /// </summary>
            private Text fIPAddressTextBlText;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup9Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup9Thumb;

            /// <summary>
            /// Backing field for HostnameGridVieHeaderItem property
            /// </summary>
            private HeaderItem fHostnameGridVieHeaderItem;

            /// <summary>
            /// Backing field for HostnameTextBloText property
            /// </summary>
            private Text fHostnameTextBloText;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup10Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup10Thumb;

            /// <summary>
            /// Backing field for DescriptionGridHeaderItem property
            /// </summary>
            private HeaderItem fDescriptionGridHeaderItem;

            /// <summary>
            /// Backing field for DescriptionTextDup1Text property
            /// </summary>
            private Text fDescriptionTextDup1Text;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup11Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup11Thumb;

            /// <summary>
            /// Backing field for FirmwareGridVieHeaderItem property
            /// </summary>
            private HeaderItem fFirmwareGridVieHeaderItem;

            /// <summary>
            /// Backing field for FirmwareTextBloText property
            /// </summary>
            private Text fFirmwareTextBloText;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup12Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup12Thumb;

            /// <summary>
            /// Backing field for bound101113136eDataItem property
            /// </summary>
            private DataItem fbound101113136eDataItem;

            /// <summary>
            /// Backing field for ContentPresenteDup0I0XCustom property
            /// </summary>
            private Custom fContentPresenteDup0I0XCustom;

            /// <summary>
            /// Backing field for Image84ACE29E0ADup0Image property
            /// </summary>
            private Image fImage84ACE29E0ADup0Image;

            /// <summary>
            /// Backing field for WaitSpinnerUserDup0Custom property
            /// </summary>
            private Custom fWaitSpinnerUserDup0Custom;

            /// <summary>
            /// Backing field for ImagemWaitSpinnDup0Image property
            /// </summary>
            private Image fImagemWaitSpinnDup0Image;

            /// <summary>
            /// Backing field for HPOfficejetColoDup0I0XText property
            /// </summary>
            private Text fHPOfficejetColoDup0I0XText;

            /// <summary>
            /// Backing field for ContentPresenteDup1I1XCustom property
            /// </summary>
            private Custom fContentPresenteDup1I1XCustom;

            /// <summary>
            /// Backing field for Image844100985ADup0Image property
            /// </summary>
            private Image fImage844100985ADup0Image;

            /// <summary>
            /// Backing field for ContentPresenteDup2I2XCustom property
            /// </summary>
            private Custom fContentPresenteDup2I2XCustom;

            /// <summary>
            /// Backing field for Image20F9A92A96Dup0Image property
            /// </summary>
            private Image fImage20F9A92A96Dup0Image;

            /// <summary>
            /// Backing field for ContentPresenteDup3I3XCustom property
            /// </summary>
            private Custom fContentPresenteDup3I3XCustom;

            /// <summary>
            /// Backing field for ImageCA1843E8BFDup0Image property
            /// </summary>
            private Image fImageCA1843E8BFDup0Image;

            /// <summary>
            /// Backing field for ContentPresenteDup4I4XCustom property
            /// </summary>
            private Custom fContentPresenteDup4I4XCustom;

            /// <summary>
            /// Backing field for ImageE24499D7C0Dup0Image property
            /// </summary>
            private Image fImageE24499D7C0Dup0Image;

            /// <summary>
            /// Backing field for ContentPresenteDup5I5XCustom property
            /// </summary>
            private Custom fContentPresenteDup5I5XCustom;

            /// <summary>
            /// Backing field for Image86A371F7F4Dup0Image property
            /// </summary>
            private Image fImage86A371F7F4Dup0Image;

            /// <summary>
            /// Backing field for ContentPresenteDup6I6XCustom property
            /// </summary>
            private Custom fContentPresenteDup6I6XCustom;

            /// <summary>
            /// Backing field for Image1D2DC29B85Dup0Image property
            /// </summary>
            private Image fImage1D2DC29B85Dup0Image;

            /// <summary>
            /// Backing field for HPOfficejetColoDup1I1XText property
            /// </summary>
            private Text fHPOfficejetColoDup1I1XText;

            /// <summary>
            /// Backing field for A101113136TextBText property
            /// </summary>
            private Text fA101113136TextBText;

            /// <summary>
            /// Backing field for TextBlockDup1Text property
            /// </summary>
            private Text fTextBlockDup1Text;

            /// <summary>
            /// Backing field for HPOfficejetColoDup2I2XText property
            /// </summary>
            private Text fHPOfficejetColoDup2I2XText;

            /// <summary>
            /// Backing field for FutureSmart4BetText property
            /// </summary>
            private Text fFutureSmart4BetText;

            /// <summary>
            /// Backing field for dssDisallowed10DataItem property
            /// </summary>
            private DataItem fdssDisallowed10DataItem;

            /// <summary>
            /// Backing field for ContentPresenteDup7I0XCustom property
            /// </summary>
            private Custom fContentPresenteDup7I0XCustom;

            /// <summary>
            /// Backing field for Image84ACE29E0ADup1Image property
            /// </summary>
            private Image fImage84ACE29E0ADup1Image;

            /// <summary>
            /// Backing field for WaitSpinnerUserDup1Custom property
            /// </summary>
            private Custom fWaitSpinnerUserDup1Custom;

            /// <summary>
            /// Backing field for ImagemWaitSpinnDup1Image property
            /// </summary>
            private Image fImagemWaitSpinnDup1Image;

            /// <summary>
            /// Backing field for HPLaserJetMFPM5Dup0I0XText property
            /// </summary>
            private Text fHPLaserJetMFPM5Dup0I0XText;

            /// <summary>
            /// Backing field for ContentPresenteDup8I1XCustom property
            /// </summary>
            private Custom fContentPresenteDup8I1XCustom;

            /// <summary>
            /// Backing field for Image844100985ADup1Image property
            /// </summary>
            private Image fImage844100985ADup1Image;

            /// <summary>
            /// Backing field for ContentPresenteDup9I2XCustom property
            /// </summary>
            private Custom fContentPresenteDup9I2XCustom;

            /// <summary>
            /// Backing field for Image20F9A92A96Dup1Image property
            /// </summary>
            private Image fImage20F9A92A96Dup1Image;

            /// <summary>
            /// Backing field for ContentPresenteDup10I3XCustom property
            /// </summary>
            private Custom fContentPresenteDup10I3XCustom;

            /// <summary>
            /// Backing field for ImageCA1843E8BFDup1Image property
            /// </summary>
            private Image fImageCA1843E8BFDup1Image;

            /// <summary>
            /// Backing field for ContentPresenteDup11I4XCustom property
            /// </summary>
            private Custom fContentPresenteDup11I4XCustom;

            /// <summary>
            /// Backing field for ImageE24499D7C0Dup1Image property
            /// </summary>
            private Image fImageE24499D7C0Dup1Image;

            /// <summary>
            /// Backing field for ContentPresenteDup12I5XCustom property
            /// </summary>
            private Custom fContentPresenteDup12I5XCustom;

            /// <summary>
            /// Backing field for Image86A371F7F4Dup1Image property
            /// </summary>
            private Image fImage86A371F7F4Dup1Image;

            /// <summary>
            /// Backing field for ContentPresenteDup13I6XCustom property
            /// </summary>
            private Custom fContentPresenteDup13I6XCustom;

            /// <summary>
            /// Backing field for Image1D2DC29B85Dup1Image property
            /// </summary>
            private Image fImage1D2DC29B85Dup1Image;

            /// <summary>
            /// Backing field for HPLaserJetMFPM5Dup1I1XText property
            /// </summary>
            private Text fHPLaserJetMFPM5Dup1I1XText;

            /// <summary>
            /// Backing field for A101112159TextBText property
            /// </summary>
            private Text fA101112159TextBText;

            /// <summary>
            /// Backing field for TextBlockDup2Text property
            /// </summary>
            private Text fTextBlockDup2Text;

            /// <summary>
            /// Backing field for HPLaserJetMFPM5Dup2I2XText property
            /// </summary>
            private Text fHPLaserJetMFPM5Dup2I2XText;

            /// <summary>
            /// Backing field for FutureSmart4452Text property
            /// </summary>
            private Text fFutureSmart4452Text;

            /// <summary>
            /// Backing field for AddDeviceButtonButton property
            /// </summary>
            private Button fAddDeviceButtonButton;

            /// <summary>
            /// Backing field for AddDeviceTextBlText property
            /// </summary>
            private Text fAddDeviceTextBlText;

            /// <summary>
            /// Backing field for ExportButtonef5Button property
            /// </summary>
            private Button fExportButtonef5Button;

            /// <summary>
            /// Backing field for ExportTextBlockText property
            /// </summary>
            private Text fExportTextBlockText;

            /// <summary>
            /// Backing field for RemoveDeviceButButton property
            /// </summary>
            private Button fRemoveDeviceButButton;

            /// <summary>
            /// Backing field for RemoveDeviceTexText property
            /// </summary>
            private Text fRemoveDeviceTexText;

            /// <summary>
            /// Backing field for ImportButtona69Button property
            /// </summary>
            private Button fImportButtona69Button;

            /// <summary>
            /// Backing field for ImportTextBlockText property
            /// </summary>
            private Text fImportTextBlockText;

            /// <summary>
            /// Backing field for CreateTemplateBButton property
            /// </summary>
            private Button fCreateTemplateBButton;

            /// <summary>
            /// Backing field for CreateTemplateTText property
            /// </summary>
            private Text fCreateTemplateTText;

            /// <summary>
            /// Backing field for DeviceSignInButButton property
            /// </summary>
            private Button fDeviceSignInButButton;

            /// <summary>
            /// Backing field for DeviceSignInTexText property
            /// </summary>
            private Text fDeviceSignInTexText;

            /// <summary>
            /// Backing field for TotalDevicesText property
            /// </summary>
            private Text fTotalDevicesText;

            /// <summary>
            /// Backing field for TotalDevicesTexText property
            /// </summary>
            private Text fTotalDevicesTexText;

            /// <summary>
            /// Backing field for A2Text82f844376Text property
            /// </summary>
            private Text fA2Text82f844376Text;

            /// <summary>
            /// Backing field for A2TextBlockText property
            /// </summary>
            private Text fA2TextBlockText;

            /// <summary>
            /// Backing field for ConfigureDeviceButton property
            /// </summary>
            private Button fConfigureDeviceButton;

            /// <summary>
            /// Backing field for ConfigureDeviceText property
            /// </summary>
            private Text fConfigureDeviceText;

            /// <summary>
            /// Backing field for TemplateConfiguTabItem property
            /// </summary>
            private TabItem fTemplateConfiguTabItem;

            /// <summary>
            /// Backing field for TemplateConfiguText property
            /// </summary>
            private Text fTemplateConfiguText;

            /// <summary>
            /// Backing field for LogTabItem9b4f3TabItem property
            /// </summary>
            private TabItem fLogTabItem9b4f3TabItem;

            /// <summary>
            /// Backing field for LogTextBlockText property
            /// </summary>
            private Text fLogTextBlockText;

            /// <summary>
            /// Backing field for SystemWindowsCoDup7TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup7TabItem;

            /// <summary>
            /// Backing field for SecurityTextmSeText property
            /// </summary>
            private Text fSecurityTextmSeText;

            /// <summary>
            /// Backing field for SecurityTextBloText property
            /// </summary>
            private Text fSecurityTextBloText;

            /// <summary>
            /// Backing field for Text8A7A84DB894Text property
            /// </summary>
            private Text fText8A7A84DB894Text;

            /// <summary>
            /// Backing field for Text16F78FB18FFText property
            /// </summary>
            private Text fText16F78FB18FFText;

            /// <summary>
            /// Backing field for SystemWindowsCoDup8TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup8TabItem;

            /// <summary>
            /// Backing field for AnalyticsTextmAText property
            /// </summary>
            private Text fAnalyticsTextmAText;

            /// <summary>
            /// Backing field for AnalyticsTextBlText property
            /// </summary>
            private Text fAnalyticsTextBlText;

            /// <summary>
            /// Backing field for AboutTabItemf45TabItem property
            /// </summary>
            private TabItem fAboutTabItemf45TabItem;

            /// <summary>
            /// Backing field for AboutTextBlockText property
            /// </summary>
            private Text fAboutTextBlockText;

            /// <summary>
            /// The Device Ip
            /// </summary>
            private static string _deviceAddress;

            /// <summary>
            /// The Device Model Name
            /// </summary>
            private string _deviceModelName;

            /// <summary>
            /// The Ip Address
            /// </summary>
            private string _ipAddress;

            /// <summary>
            /// Initializes a new instance of the <see cref="CreateTemplate"/> class.
            /// </summary>
            /// <param name="framework">
            /// The framework.
            /// </param>
            public CreateTemplate(UIAFramework framework)
            {
                Desktop = new Desktop(framework);
            }

            /// <summary>
            /// Initializes a new instance of the <see cref="CreateTemplate"/> class using the default UIAFramework.
            /// </summary>
            public CreateTemplate()
            {
                Desktop = new Desktop();
            }

            /// <summary>
            /// Initializes a new instance of the <see cref="CreateTemplate"/> class using the default UIAFramework.
            /// </summary>          
            /// <param name="address">
            /// The IP address.
            /// </param>
            public CreateTemplate(string address)
            {
                _ipAddress = address;
                Desktop = new Desktop();
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Desktop Desktop { get; private set; }

            /// <summary>
            /// Sets the Device Info
            /// </summary>
            /// <param name="deviceAddress">
            /// The device address
            /// </param>
            /// <param name="deviceModelName">
            /// The device Model Name
            /// </param>
            public void SetDeviceInfo(string deviceAddress, string deviceModelName)
            {
                _deviceAddress = deviceAddress;
                _deviceModelName = deviceModelName;
            }

            /// <summary>
            /// Gets Reference to HPDigitalSendinWindow
            /// </summary>
            public Window HPDigitalSendinWindow
            {
                get
                {
                    if (null == fHPDigitalSendinWindow)
                    {
                        fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                        fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_ipAddress})");
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    }

                    return fHPDigitalSendinWindow;
                }
            }

            /// <summary>
            /// Gets Reference to CreatingTemplatWindow
            /// </summary>
            public Window CreatingTemplatWindow
            {
                get
                {
                    if (null == fCreatingTemplatWindow)
                    {
                        fCreatingTemplatWindow = new Window("CreatingTemplatWindow", HPDigitalSendinWindow);
                        fCreatingTemplatWindow.UIMap.Scope = UIASeachScope.Children;
                        fCreatingTemplatWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"Creating Template from Device ({_deviceAddress})");
                        fCreatingTemplatWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"148B92B2-589D-4d7d-B323-D385AB9A07CB");
                        fCreatingTemplatWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    }

                    return fCreatingTemplatWindow;
                }
            }

            /// <summary>
            /// Gets Reference to CreatingTemplatTitleBar
            /// </summary>
            public TitleBar CreatingTemplatTitleBar
            {
                get
                {
                    if (null == fCreatingTemplatTitleBar)
                    {
                        fCreatingTemplatTitleBar = new TitleBar("CreatingTemplatTitleBar", CreatingTemplatWindow);
                        fCreatingTemplatTitleBar.UIMap.Scope = UIASeachScope.Children;
                        fCreatingTemplatTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"Creating Template from Device ({_deviceAddress})");
                        fCreatingTemplatTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    }

                    return fCreatingTemplatTitleBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemMenuBarSyDup0MenuBar
            /// </summary>
            public MenuBar SystemMenuBarSyDup0MenuBar
            {
                get
                {
                    if (null == fSystemMenuBarSyDup0MenuBar)
                    {
                        fSystemMenuBarSyDup0MenuBar = new MenuBar("SystemMenuBarSyDup0MenuBar", CreatingTemplatTitleBar);
                        fSystemMenuBarSyDup0MenuBar.UIMap.Scope = UIASeachScope.Children;
                        fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                        fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    }

                    return fSystemMenuBarSyDup0MenuBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemItem1Dup0MenuItem
            /// </summary>
            public MenuItem SystemItem1Dup0MenuItem
            {
                get
                {
                    if (null == fSystemItem1Dup0MenuItem)
                    {
                        fSystemItem1Dup0MenuItem = new MenuItem("SystemItem1Dup0MenuItem", SystemMenuBarSyDup0MenuBar);
                        fSystemItem1Dup0MenuItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                        fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    }

                    return fSystemItem1Dup0MenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to MinimizeMinimizDup0Button
            /// </summary>
            public Button MinimizeMinimizDup0Button
            {
                get
                {
                    if (null == fMinimizeMinimizDup0Button)
                    {
                        fMinimizeMinimizDup0Button = new Button("MinimizeMinimizDup0Button", CreatingTemplatTitleBar);
                        fMinimizeMinimizDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                        fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                    }

                    return fMinimizeMinimizDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to MaximizeMaximizDup0Button
            /// </summary>
            public Button MaximizeMaximizDup0Button
            {
                get
                {
                    if (null == fMaximizeMaximizDup0Button)
                    {
                        fMaximizeMaximizDup0Button = new Button("MaximizeMaximizDup0Button", CreatingTemplatTitleBar);
                        fMaximizeMaximizDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                        fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                    }

                    return fMaximizeMaximizDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to CloseCloseDup0Button
            /// </summary>
            public Button CloseCloseDup0Button
            {
                get
                {
                    if (null == fCloseCloseDup0Button)
                    {
                        fCloseCloseDup0Button = new Button("CloseCloseDup0Button", CreatingTemplatTitleBar);
                        fCloseCloseDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                        fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    }

                    return fCloseCloseDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to HelpButton268CFButton
            /// </summary>
            public Button HelpButton268CFButton
            {
                get
                {
                    if (null == fHelpButton268CFButton)
                    {
                        fHelpButton268CFButton = new Button("HelpButton268CFButton", CreatingTemplatWindow);
                        fHelpButton268CFButton.UIMap.Scope = UIASeachScope.Children;
                        fHelpButton268CFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                        fHelpButton268CFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"268CFFEC-6669-4aca-9ED4-B488CBC7C11F");
                        fHelpButton268CFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fHelpButton268CFButton;
                }
            }

            /// <summary>
            /// Gets Reference to HelpTextBlockDup0Text
            /// </summary>
            public Text HelpTextBlockDup0Text
            {
                get
                {
                    if (null == fHelpTextBlockDup0Text)
                    {
                        fHelpTextBlockDup0Text = new Text("HelpTextBlockDup0Text", HelpButton268CFButton);
                        fHelpTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fHelpTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                        fHelpTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fHelpTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to CancelButtonE2EButton
            /// </summary>
            public Button CancelButtonE2EButton
            {
                get
                {
                    if (null == fCancelButtonE2EButton)
                    {
                        fCancelButtonE2EButton = new Button("CancelButtonE2EButton", CreatingTemplatWindow);
                        fCancelButtonE2EButton.UIMap.Scope = UIASeachScope.Children;
                        fCancelButtonE2EButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                        fCancelButtonE2EButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"E2E12DCE-BB81-4df6-84DE-D575DC803221");
                        fCancelButtonE2EButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fCancelButtonE2EButton;
                }
            }

            /// <summary>
            /// Gets Reference to CancelTextBlockDup0Text
            /// </summary>
            public Text CancelTextBlockDup0Text
            {
                get
                {
                    if (null == fCancelTextBlockDup0Text)
                    {
                        fCancelTextBlockDup0Text = new Text("CancelTextBlockDup0Text", CancelButtonE2EButton);
                        fCancelTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fCancelTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                        fCancelTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fCancelTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to OKButton98812F5Button
            /// </summary>
            public Button OKButton98812F5Button
            {
                get
                {
                    if (null == fOKButton98812F5Button)
                    {
                        fOKButton98812F5Button = new Button("OKButton98812F5Button", CreatingTemplatWindow);
                        fOKButton98812F5Button.UIMap.Scope = UIASeachScope.Children;
                        fOKButton98812F5Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                        fOKButton98812F5Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"98812F50-A72D-44a8-919A-7C4160F452B7");
                        fOKButton98812F5Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fOKButton98812F5Button;
                }
            }

            /// <summary>
            /// Gets Reference to OKTextBlockDup0Text
            /// </summary>
            public Text OKTextBlockDup0Text
            {
                get
                {
                    if (null == fOKTextBlockDup0Text)
                    {
                        fOKTextBlockDup0Text = new Text("OKTextBlockDup0Text", OKButton98812F5Button);
                        fOKTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                        fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fOKTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to ImageDup0Image
            /// </summary>
            public Image ImageDup0Image
            {
                get
                {
                    if (null == fImageDup0Image)
                    {
                        fImageDup0Image = new Image("ImageDup0Image", CreatingTemplatWindow);
                        fImageDup0Image.UIMap.Scope = UIASeachScope.Children;
                        fImageDup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImageDup0Image;
                }
            }

            /// <summary>
            /// Gets Reference to PasswordscannotText
            /// </summary>
            public Text PasswordscannotText
            {
                get
                {
                    if (null == fPasswordscannotText)
                    {
                        fPasswordscannotText = new Text("PasswordscannotText", CreatingTemplatWindow);
                        fPasswordscannotText.UIMap.Scope = UIASeachScope.Children;
                        fPasswordscannotText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Passwords cannot be retrieved from FutureSmart devices. 
Make sure passwords are manually entered in the template after creation and before performing any other operation with the created template.");
                        fPasswordscannotText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"716BAD43-5E46-4E16-B14E-3C9EE12CC482");
                        fPasswordscannotText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fPasswordscannotText;
                }
            }

            /// <summary>
            /// Gets Reference to CheckBoxInformaCheckBox
            /// </summary>
            public CheckBox CheckBoxInformaCheckBox
            {
                get
                {
                    if (null == fCheckBoxInformaCheckBox)
                    {
                        fCheckBoxInformaCheckBox = new CheckBox("CheckBoxInformaCheckBox", CreatingTemplatWindow);
                        fCheckBoxInformaCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fCheckBoxInformaCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"InformationButton");
                        fCheckBoxInformaCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fCheckBoxInformaCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to ImageDup1Image
            /// </summary>
            public Image ImageDup1Image
            {
                get
                {
                    if (null == fImageDup1Image)
                    {
                        fImageDup1Image = new Image("ImageDup1Image", CheckBoxInformaCheckBox);
                        fImageDup1Image.UIMap.Scope = UIASeachScope.Children;
                        fImageDup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImageDup1Image;
                }
            }

            /// <summary>
            /// Gets Reference to NameText
            /// </summary>
            public Text NameText
            {
                get
                {
                    if (null == fNameText)
                    {
                        fNameText = new Text("NameText", CreatingTemplatWindow);
                        fNameText.UIMap.Scope = UIASeachScope.Children;
                        fNameText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                        fNameText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fNameText;
                }
            }

            /// <summary>
            /// Gets Reference to NameTextBlockDup0Text
            /// </summary>
            public Text NameTextBlockDup0Text
            {
                get
                {
                    if (null == fNameTextBlockDup0Text)
                    {
                        fNameTextBlockDup0Text = new Text("NameTextBlockDup0Text", NameText);
                        fNameTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fNameTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                        fNameTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fNameTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox02EC542DEdit
            /// </summary>
            public Edit TextBox02EC542DEdit
            {
                get
                {
                    if (null == fTextBox02EC542DEdit)
                    {
                        fTextBox02EC542DEdit = new Edit("TextBox02EC542DEdit", CreatingTemplatWindow);
                        fTextBox02EC542DEdit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox02EC542DEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"02EC542D-6500-4e11-B014-83BE9F13E147");
                        fTextBox02EC542DEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox02EC542DEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup0Pane
            /// </summary>
            public Pane ScrollViewerPARDup0Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup0Pane)
                    {
                        fScrollViewerPARDup0Pane = new Pane("ScrollViewerPARDup0Pane", TextBox02EC542DEdit);
                        fScrollViewerPARDup0Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup0Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup0ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup0ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup0ScrollBar)
                    {
                        fScrollBarVerticDup0ScrollBar = new ScrollBar("ScrollBarVerticDup0ScrollBar", ScrollViewerPARDup0Pane);
                        fScrollBarVerticDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup0ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup0ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup0ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup0ScrollBar)
                    {
                        fScrollBarHorizoDup0ScrollBar = new ScrollBar("ScrollBarHorizoDup0ScrollBar", ScrollViewerPARDup0Pane);
                        fScrollBarHorizoDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup0ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to DescriptionText
            /// </summary>
            public Text DescriptionText
            {
                get
                {
                    if (null == fDescriptionText)
                    {
                        fDescriptionText = new Text("DescriptionText", CreatingTemplatWindow);
                        fDescriptionText.UIMap.Scope = UIASeachScope.Children;
                        fDescriptionText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                        fDescriptionText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fDescriptionText;
                }
            }

            /// <summary>
            /// Gets Reference to DescriptionTextDup0Text
            /// </summary>
            public Text DescriptionTextDup0Text
            {
                get
                {
                    if (null == fDescriptionTextDup0Text)
                    {
                        fDescriptionTextDup0Text = new Text("DescriptionTextDup0Text", DescriptionText);
                        fDescriptionTextDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fDescriptionTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                        fDescriptionTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fDescriptionTextDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox212A3C47Edit
            /// </summary>
            public Edit TextBox212A3C47Edit
            {
                get
                {
                    if (null == fTextBox212A3C47Edit)
                    {
                        fTextBox212A3C47Edit = new Edit("TextBox212A3C47Edit", CreatingTemplatWindow);
                        fTextBox212A3C47Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox212A3C47Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"212A3C47-BE4E-4b42-A6FD-445B62DA6B90");
                        fTextBox212A3C47Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox212A3C47Edit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup1Pane
            /// </summary>
            public Pane ScrollViewerPARDup1Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup1Pane)
                    {
                        fScrollViewerPARDup1Pane = new Pane("ScrollViewerPARDup1Pane", TextBox212A3C47Edit);
                        fScrollViewerPARDup1Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup1Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup1ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup1ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup1ScrollBar)
                    {
                        fScrollBarVerticDup1ScrollBar = new ScrollBar("ScrollBarVerticDup1ScrollBar", ScrollViewerPARDup1Pane);
                        fScrollBarVerticDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup1ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup1ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup1ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup1ScrollBar)
                    {
                        fScrollBarHorizoDup1ScrollBar = new ScrollBar("ScrollBarHorizoDup1ScrollBar", ScrollViewerPARDup1Pane);
                        fScrollBarHorizoDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup1ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ConfigurableFeaGroup
            /// </summary>
            public Group ConfigurableFeaGroup
            {
                get
                {
                    if (null == fConfigurableFeaGroup)
                    {
                        fConfigurableFeaGroup = new Group("ConfigurableFeaGroup", CreatingTemplatWindow);
                        fConfigurableFeaGroup.UIMap.Scope = UIASeachScope.Children;
                        fConfigurableFeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Configurable Features");
                        fConfigurableFeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mConfigurableFeaturesGroupBox");
                        fConfigurableFeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    }

                    return fConfigurableFeaGroup;
                }
            }

            /// <summary>
            /// Gets Reference to ConfigurableFeaText
            /// </summary>
            public Text ConfigurableFeaText
            {
                get
                {
                    if (null == fConfigurableFeaText)
                    {
                        fConfigurableFeaText = new Text("ConfigurableFeaText", ConfigurableFeaGroup);
                        fConfigurableFeaText.UIMap.Scope = UIASeachScope.Children;
                        fConfigurableFeaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Configurable Features");
                        fConfigurableFeaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fConfigurableFeaText;
                }
            }

            /// <summary>
            /// Gets Reference to GeneralCheckBoxCheckBox
            /// </summary>
            public CheckBox GeneralCheckBoxCheckBox
            {
                get
                {
                    if (null == fGeneralCheckBoxCheckBox)
                    {
                        fGeneralCheckBoxCheckBox = new CheckBox("GeneralCheckBoxCheckBox", ConfigurableFeaGroup);
                        fGeneralCheckBoxCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fGeneralCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                        fGeneralCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"981224EB-AB79-4cb9-A023-E96D5E07169D");
                        fGeneralCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fGeneralCheckBoxCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to GeneralTextBlocDup0Text
            /// </summary>
            public Text GeneralTextBlocDup0Text
            {
                get
                {
                    if (null == fGeneralTextBlocDup0Text)
                    {
                        fGeneralTextBlocDup0Text = new Text("GeneralTextBlocDup0Text", GeneralCheckBoxCheckBox);
                        fGeneralTextBlocDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fGeneralTextBlocDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                        fGeneralTextBlocDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fGeneralTextBlocDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to EmailCheckBox4DCheckBox
            /// </summary>
            public CheckBox EmailCheckBox4DCheckBox
            {
                get
                {
                    if (null == fEmailCheckBox4DCheckBox)
                    {
                        fEmailCheckBox4DCheckBox = new CheckBox("EmailCheckBox4DCheckBox", ConfigurableFeaGroup);
                        fEmailCheckBox4DCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fEmailCheckBox4DCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                        fEmailCheckBox4DCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4D364053-2D58-48e3-984D-2B00F8F41322");
                        fEmailCheckBox4DCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fEmailCheckBox4DCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to EmailTextBlockDup0Text
            /// </summary>
            public Text EmailTextBlockDup0Text
            {
                get
                {
                    if (null == fEmailTextBlockDup0Text)
                    {
                        fEmailTextBlockDup0Text = new Text("EmailTextBlockDup0Text", EmailCheckBox4DCheckBox);
                        fEmailTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fEmailTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                        fEmailTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fEmailTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to SendtoFolderCheCheckBox
            /// </summary>
            public CheckBox SendtoFolderCheCheckBox
            {
                get
                {
                    if (null == fSendtoFolderCheCheckBox)
                    {
                        fSendtoFolderCheCheckBox = new CheckBox("SendtoFolderCheCheckBox", ConfigurableFeaGroup);
                        fSendtoFolderCheCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fSendtoFolderCheCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                        fSendtoFolderCheCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2752570D-8031-4ca5-ADA5-4044FD0ED3B7");
                        fSendtoFolderCheCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fSendtoFolderCheCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to SendtoFolderTexDup0Text
            /// </summary>
            public Text SendtoFolderTexDup0Text
            {
                get
                {
                    if (null == fSendtoFolderTexDup0Text)
                    {
                        fSendtoFolderTexDup0Text = new Text("SendtoFolderTexDup0Text", SendtoFolderCheCheckBox);
                        fSendtoFolderTexDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                        fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fSendtoFolderTexDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to FaxCheckBox063FCheckBox
            /// </summary>
            public CheckBox FaxCheckBox063FCheckBox
            {
                get
                {
                    if (null == fFaxCheckBox063FCheckBox)
                    {
                        fFaxCheckBox063FCheckBox = new CheckBox("FaxCheckBox063FCheckBox", ConfigurableFeaGroup);
                        fFaxCheckBox063FCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fFaxCheckBox063FCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                        fFaxCheckBox063FCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"063F8928-3DBF-45c4-9E73-15115A48922F");
                        fFaxCheckBox063FCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fFaxCheckBox063FCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to FaxTextBlockDup0Text
            /// </summary>
            public Text FaxTextBlockDup0Text
            {
                get
                {
                    if (null == fFaxTextBlockDup0Text)
                    {
                        fFaxTextBlockDup0Text = new Text("FaxTextBlockDup0Text", FaxCheckBox063FCheckBox);
                        fFaxTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fFaxTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                        fFaxTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fFaxTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to AddressingCheckCheckBox
            /// </summary>
            public CheckBox AddressingCheckCheckBox
            {
                get
                {
                    if (null == fAddressingCheckCheckBox)
                    {
                        fAddressingCheckCheckBox = new CheckBox("AddressingCheckCheckBox", ConfigurableFeaGroup);
                        fAddressingCheckCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fAddressingCheckCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                        fAddressingCheckCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"E7DB41DF-EA3A-454d-832E-6740F82ABEDF");
                        fAddressingCheckCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fAddressingCheckCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to AddressingTextBDup0Text
            /// </summary>
            public Text AddressingTextBDup0Text
            {
                get
                {
                    if (null == fAddressingTextBDup0Text)
                    {
                        fAddressingTextBDup0Text = new Text("AddressingTextBDup0Text", AddressingCheckCheckBox);
                        fAddressingTextBDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fAddressingTextBDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                        fAddressingTextBDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAddressingTextBDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to AuthenticationCCheckBox
            /// </summary>
            public CheckBox AuthenticationCCheckBox
            {
                get
                {
                    if (null == fAuthenticationCCheckBox)
                    {
                        fAuthenticationCCheckBox = new CheckBox("AuthenticationCCheckBox", ConfigurableFeaGroup);
                        fAuthenticationCCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fAuthenticationCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                        fAuthenticationCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D41B37FF-79A6-4a40-B665-F89783C96C10");
                        fAuthenticationCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fAuthenticationCCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to AuthenticationTDup0Text
            /// </summary>
            public Text AuthenticationTDup0Text
            {
                get
                {
                    if (null == fAuthenticationTDup0Text)
                    {
                        fAuthenticationTDup0Text = new Text("AuthenticationTDup0Text", AuthenticationCCheckBox);
                        fAuthenticationTDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                        fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAuthenticationTDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to WorkflowsCheckBCheckBox
            /// </summary>
            public CheckBox WorkflowsCheckBCheckBox
            {
                get
                {
                    if (null == fWorkflowsCheckBCheckBox)
                    {
                        fWorkflowsCheckBCheckBox = new CheckBox("WorkflowsCheckBCheckBox", ConfigurableFeaGroup);
                        fWorkflowsCheckBCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fWorkflowsCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                        fWorkflowsCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"F3CABD37-DCFF-4cfc-804A-4605C5CF45EF");
                        fWorkflowsCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fWorkflowsCheckBCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to WorkflowsTextBlDup0Text
            /// </summary>
            public Text WorkflowsTextBlDup0Text
            {
                get
                {
                    if (null == fWorkflowsTextBlDup0Text)
                    {
                        fWorkflowsTextBlDup0Text = new Text("WorkflowsTextBlDup0Text", WorkflowsCheckBCheckBox);
                        fWorkflowsTextBlDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fWorkflowsTextBlDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                        fWorkflowsTextBlDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fWorkflowsTextBlDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to PreferencesChecCheckBox
            /// </summary>
            public CheckBox PreferencesChecCheckBox
            {
                get
                {
                    if (null == fPreferencesChecCheckBox)
                    {
                        fPreferencesChecCheckBox = new CheckBox("PreferencesChecCheckBox", ConfigurableFeaGroup);
                        fPreferencesChecCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fPreferencesChecCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Preferences");
                        fPreferencesChecCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"EB97FEED-9820-4472-B199-2E136431EA86");
                        fPreferencesChecCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fPreferencesChecCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to SharePointCheckCheckBox
            /// </summary>
            public CheckBox SharePointCheckCheckBox
            {
                get
                {
                    if (null == fSharePointCheckCheckBox)
                    {
                        fSharePointCheckCheckBox = new CheckBox("SharePointCheckCheckBox", ConfigurableFeaGroup);
                        fSharePointCheckCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fSharePointCheckCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"SharePoint®");
                        fSharePointCheckCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"029BDD12-03C1-4682-9AB5-64928EF93B0A");
                        fSharePointCheckCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fSharePointCheckCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to SharePointTextBText
            /// </summary>
            public Text SharePointTextBText
            {
                get
                {
                    if (null == fSharePointTextBText)
                    {
                        fSharePointTextBText = new Text("SharePointTextBText", SharePointCheckCheckBox);
                        fSharePointTextBText.UIMap.Scope = UIASeachScope.Children;
                        fSharePointTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"SharePoint®");
                        fSharePointTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fSharePointTextBText;
                }
            }

            /// <summary>
            /// Gets Reference to HPDigitalSendinTitleBar
            /// </summary>
            public TitleBar HPDigitalSendinTitleBar
            {
                get
                {
                    if (null == fHPDigitalSendinTitleBar)
                    {
                        fHPDigitalSendinTitleBar = new TitleBar("HPDigitalSendinTitleBar", HPDigitalSendinWindow);
                        fHPDigitalSendinTitleBar.UIMap.Scope = UIASeachScope.Children;
                        fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Digital Sending Software Configuration (Server IP Address: 15.75.45.78)");
                        fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    }

                    return fHPDigitalSendinTitleBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemMenuBarSyDup1MenuBar
            /// </summary>
            public MenuBar SystemMenuBarSyDup1MenuBar
            {
                get
                {
                    if (null == fSystemMenuBarSyDup1MenuBar)
                    {
                        fSystemMenuBarSyDup1MenuBar = new MenuBar("SystemMenuBarSyDup1MenuBar", HPDigitalSendinTitleBar);
                        fSystemMenuBarSyDup1MenuBar.UIMap.Scope = UIASeachScope.Children;
                        fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                        fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    }

                    return fSystemMenuBarSyDup1MenuBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemItem1Dup1MenuItem
            /// </summary>
            public MenuItem SystemItem1Dup1MenuItem
            {
                get
                {
                    if (null == fSystemItem1Dup1MenuItem)
                    {
                        fSystemItem1Dup1MenuItem = new MenuItem("SystemItem1Dup1MenuItem", SystemMenuBarSyDup1MenuBar);
                        fSystemItem1Dup1MenuItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                        fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    }

                    return fSystemItem1Dup1MenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to MinimizeMinimizDup1Button
            /// </summary>
            public Button MinimizeMinimizDup1Button
            {
                get
                {
                    if (null == fMinimizeMinimizDup1Button)
                    {
                        fMinimizeMinimizDup1Button = new Button("MinimizeMinimizDup1Button", HPDigitalSendinTitleBar);
                        fMinimizeMinimizDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                        fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                    }

                    return fMinimizeMinimizDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to MaximizeMaximizDup1Button
            /// </summary>
            public Button MaximizeMaximizDup1Button
            {
                get
                {
                    if (null == fMaximizeMaximizDup1Button)
                    {
                        fMaximizeMaximizDup1Button = new Button("MaximizeMaximizDup1Button", HPDigitalSendinTitleBar);
                        fMaximizeMaximizDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                        fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                    }

                    return fMaximizeMaximizDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to CloseCloseDup1Button
            /// </summary>
            public Button CloseCloseDup1Button
            {
                get
                {
                    if (null == fCloseCloseDup1Button)
                    {
                        fCloseCloseDup1Button = new Button("CloseCloseDup1Button", HPDigitalSendinTitleBar);
                        fCloseCloseDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                        fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    }

                    return fCloseCloseDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to HelpButtonCB8CFButton
            /// </summary>
            public Button HelpButtonCB8CFButton
            {
                get
                {
                    if (null == fHelpButtonCB8CFButton)
                    {
                        fHelpButtonCB8CFButton = new Button("HelpButtonCB8CFButton", HPDigitalSendinWindow);
                        fHelpButtonCB8CFButton.UIMap.Scope = UIASeachScope.Children;
                        fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                        fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CB8CF0C3-DFBE-49b8-B09B-03A34F5D4186");
                        fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fHelpButtonCB8CFButton;
                }
            }

            /// <summary>
            /// Gets Reference to HelpTextBlockDup1Text
            /// </summary>
            public Text HelpTextBlockDup1Text
            {
                get
                {
                    if (null == fHelpTextBlockDup1Text)
                    {
                        fHelpTextBlockDup1Text = new Text("HelpTextBlockDup1Text", HelpButtonCB8CFButton);
                        fHelpTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fHelpTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                        fHelpTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fHelpTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to ApplyButton61E2Button
            /// </summary>
            public Button ApplyButton61E2Button
            {
                get
                {
                    if (null == fApplyButton61E2Button)
                    {
                        fApplyButton61E2Button = new Button("ApplyButton61E2Button", HPDigitalSendinWindow);
                        fApplyButton61E2Button.UIMap.Scope = UIASeachScope.Children;
                        fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                        fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"61E2369B-F53B-4662-A361-B3034C4EFF67");
                        fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fApplyButton61E2Button;
                }
            }

            /// <summary>
            /// Gets Reference to ApplyTextBlockText
            /// </summary>
            public Text ApplyTextBlockText
            {
                get
                {
                    if (null == fApplyTextBlockText)
                    {
                        fApplyTextBlockText = new Text("ApplyTextBlockText", ApplyButton61E2Button);
                        fApplyTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                        fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fApplyTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to CancelButton65CButton
            /// </summary>
            public Button CancelButton65CButton
            {
                get
                {
                    if (null == fCancelButton65CButton)
                    {
                        fCancelButton65CButton = new Button("CancelButton65CButton", HPDigitalSendinWindow);
                        fCancelButton65CButton.UIMap.Scope = UIASeachScope.Children;
                        fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                        fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"65C76204-7AB5-4681-B7FD-2D8F02DA6D4B");
                        fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fCancelButton65CButton;
                }
            }

            /// <summary>
            /// Gets Reference to CancelTextBlockDup1Text
            /// </summary>
            public Text CancelTextBlockDup1Text
            {
                get
                {
                    if (null == fCancelTextBlockDup1Text)
                    {
                        fCancelTextBlockDup1Text = new Text("CancelTextBlockDup1Text", CancelButton65CButton);
                        fCancelTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fCancelTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                        fCancelTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fCancelTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to OKButtonCC2EF49Button
            /// </summary>
            public Button OKButtonCC2EF49Button
            {
                get
                {
                    if (null == fOKButtonCC2EF49Button)
                    {
                        fOKButtonCC2EF49Button = new Button("OKButtonCC2EF49Button", HPDigitalSendinWindow);
                        fOKButtonCC2EF49Button.UIMap.Scope = UIASeachScope.Children;
                        fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                        fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CC2EF491-0BD1-4ac5-9D00-AA61A9D6BA0C");
                        fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fOKButtonCC2EF49Button;
                }
            }

            /// <summary>
            /// Gets Reference to OKTextBlockDup1Text
            /// </summary>
            public Text OKTextBlockDup1Text
            {
                get
                {
                    if (null == fOKTextBlockDup1Text)
                    {
                        fOKTextBlockDup1Text = new Text("OKTextBlockDup1Text", OKButtonCC2EF49Button);
                        fOKTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                        fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fOKTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to TabControlec0fdTab
            /// </summary>
            public Tab TabControlec0fdTab
            {
                get
                {
                    if (null == fTabControlec0fdTab)
                    {
                        fTabControlec0fdTab = new Tab("TabControlec0fdTab", HPDigitalSendinWindow);
                        fTabControlec0fdTab.UIMap.Scope = UIASeachScope.Children;
                        fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ec0fd6cd-2ab8-482f-96a5-d1fa158f38d1");
                        fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                    }

                    return fTabControlec0fdTab;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup0TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup0TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup0TabItem)
                    {
                        fSystemWindowsCoDup0TabItem = new TabItem("SystemWindowsCoDup0TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup0TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1e2be878-0c03-4404-988c-54d0df925f0f");
                        fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup0TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to GeneralTextmGenText
            /// </summary>
            public Text GeneralTextmGenText
            {
                get
                {
                    if (null == fGeneralTextmGenText)
                    {
                        fGeneralTextmGenText = new Text("GeneralTextmGenText", SystemWindowsCoDup0TabItem);
                        fGeneralTextmGenText.UIMap.Scope = UIASeachScope.Children;
                        fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                        fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                        fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fGeneralTextmGenText;
                }
            }

            /// <summary>
            /// Gets Reference to GeneralTextBlocDup1Text
            /// </summary>
            public Text GeneralTextBlocDup1Text
            {
                get
                {
                    if (null == fGeneralTextBlocDup1Text)
                    {
                        fGeneralTextBlocDup1Text = new Text("GeneralTextBlocDup1Text", GeneralTextmGenText);
                        fGeneralTextBlocDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fGeneralTextBlocDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                        fGeneralTextBlocDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fGeneralTextBlocDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text933345b04e3Text
            /// </summary>
            public Text Text933345b04e3Text
            {
                get
                {
                    if (null == fText933345b04e3Text)
                    {
                        fText933345b04e3Text = new Text("Text933345b04e3Text", SystemWindowsCoDup0TabItem);
                        fText933345b04e3Text.UIMap.Scope = UIASeachScope.Children;
                        fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                        fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"933345b0-4e39-44d3-a511-0077f3176ca4");
                        fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText933345b04e3Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text786caf67344Text
            /// </summary>
            public Text Text786caf67344Text
            {
                get
                {
                    if (null == fText786caf67344Text)
                    {
                        fText786caf67344Text = new Text("Text786caf67344Text", SystemWindowsCoDup0TabItem);
                        fText786caf67344Text.UIMap.Scope = UIASeachScope.Children;
                        fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"786caf67-344f-4ddc-83a5-b9431fb36731");
                        fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText786caf67344Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup1TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup1TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup1TabItem)
                    {
                        fSystemWindowsCoDup1TabItem = new TabItem("SystemWindowsCoDup1TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup1TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4e90d18a-f33c-43c0-8505-08f4a17169b5");
                        fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup1TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to AuthenticationTDup1Text
            /// </summary>
            public Text AuthenticationTDup1Text
            {
                get
                {
                    if (null == fAuthenticationTDup1Text)
                    {
                        fAuthenticationTDup1Text = new Text("AuthenticationTDup1Text", SystemWindowsCoDup1TabItem);
                        fAuthenticationTDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                        fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                        fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fAuthenticationTDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to AuthenticationTDup2Text
            /// </summary>
            public Text AuthenticationTDup2Text
            {
                get
                {
                    if (null == fAuthenticationTDup2Text)
                    {
                        fAuthenticationTDup2Text = new Text("AuthenticationTDup2Text", AuthenticationTDup1Text);
                        fAuthenticationTDup2Text.UIMap.Scope = UIASeachScope.Children;
                        fAuthenticationTDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                        fAuthenticationTDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAuthenticationTDup2Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text31EC91730B9Text
            /// </summary>
            public Text Text31EC91730B9Text
            {
                get
                {
                    if (null == fText31EC91730B9Text)
                    {
                        fText31EC91730B9Text = new Text("Text31EC91730B9Text", SystemWindowsCoDup1TabItem);
                        fText31EC91730B9Text.UIMap.Scope = UIASeachScope.Children;
                        fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                        fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"31EC9173-0B98-4d46-BC99-7DF8EA2BE02F");
                        fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText31EC91730B9Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextA479C271445Text
            /// </summary>
            public Text TextA479C271445Text
            {
                get
                {
                    if (null == fTextA479C271445Text)
                    {
                        fTextA479C271445Text = new Text("TextA479C271445Text", SystemWindowsCoDup1TabItem);
                        fTextA479C271445Text.UIMap.Scope = UIASeachScope.Children;
                        fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A479C271-445D-43f1-864D-7503428703E4");
                        fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fTextA479C271445Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup2TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup2TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup2TabItem)
                    {
                        fSystemWindowsCoDup2TabItem = new TabItem("SystemWindowsCoDup2TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup2TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33A07ED3-E1EE-411e-B583-7D0A3374100F");
                        fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup2TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to EmailTextmEmailText
            /// </summary>
            public Text EmailTextmEmailText
            {
                get
                {
                    if (null == fEmailTextmEmailText)
                    {
                        fEmailTextmEmailText = new Text("EmailTextmEmailText", SystemWindowsCoDup2TabItem);
                        fEmailTextmEmailText.UIMap.Scope = UIASeachScope.Children;
                        fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                        fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                        fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fEmailTextmEmailText;
                }
            }

            /// <summary>
            /// Gets Reference to EmailTextBlockDup1Text
            /// </summary>
            public Text EmailTextBlockDup1Text
            {
                get
                {
                    if (null == fEmailTextBlockDup1Text)
                    {
                        fEmailTextBlockDup1Text = new Text("EmailTextBlockDup1Text", EmailTextmEmailText);
                        fEmailTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fEmailTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                        fEmailTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fEmailTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text32de714a8bdText
            /// </summary>
            public Text Text32de714a8bdText
            {
                get
                {
                    if (null == fText32de714a8bdText)
                    {
                        fText32de714a8bdText = new Text("Text32de714a8bdText", SystemWindowsCoDup2TabItem);
                        fText32de714a8bdText.UIMap.Scope = UIASeachScope.Children;
                        fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                        fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"32de714a-8bda-4f11-bf20-b9a56b5f18bc");
                        fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText32de714a8bdText;
                }
            }

            /// <summary>
            /// Gets Reference to Text3b2a8761f4fText
            /// </summary>
            public Text Text3b2a8761f4fText
            {
                get
                {
                    if (null == fText3b2a8761f4fText)
                    {
                        fText3b2a8761f4fText = new Text("Text3b2a8761f4fText", SystemWindowsCoDup2TabItem);
                        fText3b2a8761f4fText.UIMap.Scope = UIASeachScope.Children;
                        fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3b2a8761-f4f6-41b1-b08c-9c33744bdc43");
                        fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText3b2a8761f4fText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBlockDup0Text
            /// </summary>
            public Text TextBlockDup0Text
            {
                get
                {
                    if (null == fTextBlockDup0Text)
                    {
                        fTextBlockDup0Text = new Text("TextBlockDup0Text", Text3b2a8761f4fText);
                        fTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup3TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup3TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup3TabItem)
                    {
                        fSystemWindowsCoDup3TabItem = new TabItem("SystemWindowsCoDup3TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup3TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4f116988-2b22-473f-bca3-094589a44954");
                        fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup3TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to FaxTextmFaxTabLText
            /// </summary>
            public Text FaxTextmFaxTabLText
            {
                get
                {
                    if (null == fFaxTextmFaxTabLText)
                    {
                        fFaxTextmFaxTabLText = new Text("FaxTextmFaxTabLText", SystemWindowsCoDup3TabItem);
                        fFaxTextmFaxTabLText.UIMap.Scope = UIASeachScope.Children;
                        fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                        fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                        fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fFaxTextmFaxTabLText;
                }
            }

            /// <summary>
            /// Gets Reference to FaxTextBlockDup1Text
            /// </summary>
            public Text FaxTextBlockDup1Text
            {
                get
                {
                    if (null == fFaxTextBlockDup1Text)
                    {
                        fFaxTextBlockDup1Text = new Text("FaxTextBlockDup1Text", FaxTextmFaxTabLText);
                        fFaxTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fFaxTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                        fFaxTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fFaxTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextD1ED4F16F38Text
            /// </summary>
            public Text TextD1ED4F16F38Text
            {
                get
                {
                    if (null == fTextD1ED4F16F38Text)
                    {
                        fTextD1ED4F16F38Text = new Text("TextD1ED4F16F38Text", SystemWindowsCoDup3TabItem);
                        fTextD1ED4F16F38Text.UIMap.Scope = UIASeachScope.Children;
                        fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                        fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D1ED4F16-F389-4dfd-A884-D258EDB48C11");
                        fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fTextD1ED4F16F38Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text7DDE04FD251Text
            /// </summary>
            public Text Text7DDE04FD251Text
            {
                get
                {
                    if (null == fText7DDE04FD251Text)
                    {
                        fText7DDE04FD251Text = new Text("Text7DDE04FD251Text", SystemWindowsCoDup3TabItem);
                        fText7DDE04FD251Text.UIMap.Scope = UIASeachScope.Children;
                        fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7DDE04FD-2519-44c2-A212-67B0838E1C91");
                        fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText7DDE04FD251Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup4TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup4TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup4TabItem)
                    {
                        fSystemWindowsCoDup4TabItem = new TabItem("SystemWindowsCoDup4TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup4TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ff96a045-6e12-4ce3-ba85-b65d16c39ffb");
                        fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup4TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to SendtoFolderTexDup1Text
            /// </summary>
            public Text SendtoFolderTexDup1Text
            {
                get
                {
                    if (null == fSendtoFolderTexDup1Text)
                    {
                        fSendtoFolderTexDup1Text = new Text("SendtoFolderTexDup1Text", SystemWindowsCoDup4TabItem);
                        fSendtoFolderTexDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                        fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                        fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fSendtoFolderTexDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to SendtoFolderTexDup2Text
            /// </summary>
            public Text SendtoFolderTexDup2Text
            {
                get
                {
                    if (null == fSendtoFolderTexDup2Text)
                    {
                        fSendtoFolderTexDup2Text = new Text("SendtoFolderTexDup2Text", SendtoFolderTexDup1Text);
                        fSendtoFolderTexDup2Text.UIMap.Scope = UIASeachScope.Children;
                        fSendtoFolderTexDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                        fSendtoFolderTexDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fSendtoFolderTexDup2Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text7a57f43ecb1Text
            /// </summary>
            public Text Text7a57f43ecb1Text
            {
                get
                {
                    if (null == fText7a57f43ecb1Text)
                    {
                        fText7a57f43ecb1Text = new Text("Text7a57f43ecb1Text", SystemWindowsCoDup4TabItem);
                        fText7a57f43ecb1Text.UIMap.Scope = UIASeachScope.Children;
                        fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                        fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                        fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText7a57f43ecb1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text654b650dd19Text
            /// </summary>
            public Text Text654b650dd19Text
            {
                get
                {
                    if (null == fText654b650dd19Text)
                    {
                        fText654b650dd19Text = new Text("Text654b650dd19Text", SystemWindowsCoDup4TabItem);
                        fText654b650dd19Text.UIMap.Scope = UIASeachScope.Children;
                        fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                        fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText654b650dd19Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup5TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup5TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup5TabItem)
                    {
                        fSystemWindowsCoDup5TabItem = new TabItem("SystemWindowsCoDup5TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup5TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"38feb495-2893-4d8b-8961-31ebc2a3bd56");
                        fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup5TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to WorkflowsTextmWText
            /// </summary>
            public Text WorkflowsTextmWText
            {
                get
                {
                    if (null == fWorkflowsTextmWText)
                    {
                        fWorkflowsTextmWText = new Text("WorkflowsTextmWText", SystemWindowsCoDup5TabItem);
                        fWorkflowsTextmWText.UIMap.Scope = UIASeachScope.Children;
                        fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                        fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                        fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fWorkflowsTextmWText;
                }
            }

            /// <summary>
            /// Gets Reference to WorkflowsTextBlDup1Text
            /// </summary>
            public Text WorkflowsTextBlDup1Text
            {
                get
                {
                    if (null == fWorkflowsTextBlDup1Text)
                    {
                        fWorkflowsTextBlDup1Text = new Text("WorkflowsTextBlDup1Text", WorkflowsTextmWText);
                        fWorkflowsTextBlDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fWorkflowsTextBlDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                        fWorkflowsTextBlDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fWorkflowsTextBlDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text22D9C34E84CText
            /// </summary>
            public Text Text22D9C34E84CText
            {
                get
                {
                    if (null == fText22D9C34E84CText)
                    {
                        fText22D9C34E84CText = new Text("Text22D9C34E84CText", SystemWindowsCoDup5TabItem);
                        fText22D9C34E84CText.UIMap.Scope = UIASeachScope.Children;
                        fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                        fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22D9C34E-84C8-4995-AC9E-5B46F8284284");
                        fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText22D9C34E84CText;
                }
            }

            /// <summary>
            /// Gets Reference to TextC8D15BD39C8Text
            /// </summary>
            public Text TextC8D15BD39C8Text
            {
                get
                {
                    if (null == fTextC8D15BD39C8Text)
                    {
                        fTextC8D15BD39C8Text = new Text("TextC8D15BD39C8Text", SystemWindowsCoDup5TabItem);
                        fTextC8D15BD39C8Text.UIMap.Scope = UIASeachScope.Children;
                        fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C8D15BD3-9C8D-484c-A5E2-309CA8AA6C56");
                        fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fTextC8D15BD39C8Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup6TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup6TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup6TabItem)
                    {
                        fSystemWindowsCoDup6TabItem = new TabItem("SystemWindowsCoDup6TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup6TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b8c06323-208e-4239-a523-a025661e0eab");
                        fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup6TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to AddressingTextmText
            /// </summary>
            public Text AddressingTextmText
            {
                get
                {
                    if (null == fAddressingTextmText)
                    {
                        fAddressingTextmText = new Text("AddressingTextmText", SystemWindowsCoDup6TabItem);
                        fAddressingTextmText.UIMap.Scope = UIASeachScope.Children;
                        fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                        fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                        fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fAddressingTextmText;
                }
            }

            /// <summary>
            /// Gets Reference to AddressingTextBDup1Text
            /// </summary>
            public Text AddressingTextBDup1Text
            {
                get
                {
                    if (null == fAddressingTextBDup1Text)
                    {
                        fAddressingTextBDup1Text = new Text("AddressingTextBDup1Text", AddressingTextmText);
                        fAddressingTextBDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fAddressingTextBDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                        fAddressingTextBDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAddressingTextBDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text47EB5CBA4D1Text
            /// </summary>
            public Text Text47EB5CBA4D1Text
            {
                get
                {
                    if (null == fText47EB5CBA4D1Text)
                    {
                        fText47EB5CBA4D1Text = new Text("Text47EB5CBA4D1Text", SystemWindowsCoDup6TabItem);
                        fText47EB5CBA4D1Text.UIMap.Scope = UIASeachScope.Children;
                        fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                        fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"47EB5CBA-4D1C-4eee-AD64-E26BDA31A3AC");
                        fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText47EB5CBA4D1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text0757E148179Text
            /// </summary>
            public Text Text0757E148179Text
            {
                get
                {
                    if (null == fText0757E148179Text)
                    {
                        fText0757E148179Text = new Text("Text0757E148179Text", SystemWindowsCoDup6TabItem);
                        fText0757E148179Text.UIMap.Scope = UIASeachScope.Children;
                        fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0757E148-1794-4a5d-B378-6BE8049F65E1");
                        fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText0757E148179Text;
                }
            }

            /// <summary>
            /// Gets Reference to DeviceConfiguraTabItem
            /// </summary>
            public TabItem DeviceConfiguraTabItem
            {
                get
                {
                    if (null == fDeviceConfiguraTabItem)
                    {
                        fDeviceConfiguraTabItem = new TabItem("DeviceConfiguraTabItem", TabControlec0fdTab);
                        fDeviceConfiguraTabItem.UIMap.Scope = UIASeachScope.Children;
                        fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                        fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6DF1E016-517F-40e4-A63E-CD48D560192F");
                        fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fDeviceConfiguraTabItem;
                }
            }

            /// <summary>
            /// Gets Reference to DeviceConfiguraText
            /// </summary>
            public Text DeviceConfiguraText
            {
                get
                {
                    if (null == fDeviceConfiguraText)
                    {
                        fDeviceConfiguraText = new Text("DeviceConfiguraText", DeviceConfiguraTabItem);
                        fDeviceConfiguraText.UIMap.Scope = UIASeachScope.Children;
                        fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                        fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fDeviceConfiguraText;
                }
            }

            /// <summary>
            /// Gets Reference to ServiceConfigurCustom
            /// </summary>
            public Custom ServiceConfigurCustom
            {
                get
                {
                    if (null == fServiceConfigurCustom)
                    {
                        fServiceConfigurCustom = new Custom("ServiceConfigurCustom", DeviceConfiguraTabItem);
                        fServiceConfigurCustom.UIMap.Scope = UIASeachScope.Children;
                        fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mServiceDeviceTab");
                        fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ServiceConfigurationDeviceConfigTab");
                    }

                    return fServiceConfigurCustom;
                }
            }

            /// <summary>
            /// Gets Reference to GroupListText
            /// </summary>
            public Text GroupListText
            {
                get
                {
                    if (null == fGroupListText)
                    {
                        fGroupListText = new Text("GroupListText", ServiceConfigurCustom);
                        fGroupListText.UIMap.Scope = UIASeachScope.Children;
                        fGroupListText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Group List");
                        fGroupListText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fGroupListText;
                }
            }

            /// <summary>
            /// Gets Reference to GroupListTextBlText
            /// </summary>
            public Text GroupListTextBlText
            {
                get
                {
                    if (null == fGroupListTextBlText)
                    {
                        fGroupListTextBlText = new Text("GroupListTextBlText", GroupListText);
                        fGroupListTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fGroupListTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Group List");
                        fGroupListTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fGroupListTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to DeviceGroupsText
            /// </summary>
            public Text DeviceGroupsText
            {
                get
                {
                    if (null == fDeviceGroupsText)
                    {
                        fDeviceGroupsText = new Text("DeviceGroupsText", ServiceConfigurCustom);
                        fDeviceGroupsText.UIMap.Scope = UIASeachScope.Children;
                        fDeviceGroupsText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Groups");
                        fDeviceGroupsText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fDeviceGroupsText;
                }
            }

            /// <summary>
            /// Gets Reference to DeviceGroupsTexText
            /// </summary>
            public Text DeviceGroupsTexText
            {
                get
                {
                    if (null == fDeviceGroupsTexText)
                    {
                        fDeviceGroupsTexText = new Text("DeviceGroupsTexText", DeviceGroupsText);
                        fDeviceGroupsTexText.UIMap.Scope = UIASeachScope.Children;
                        fDeviceGroupsTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Groups");
                        fDeviceGroupsTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fDeviceGroupsTexText;
                }
            }

            /// <summary>
            /// Gets Reference to TreeView1416BDETree
            /// </summary>
            public Tree TreeView1416BDETree
            {
                get
                {
                    if (null == fTreeView1416BDETree)
                    {
                        fTreeView1416BDETree = new Tree("TreeView1416BDETree", ServiceConfigurCustom);
                        fTreeView1416BDETree.UIMap.Scope = UIASeachScope.Children;
                        fTreeView1416BDETree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1416BDED-715B-43e3-AAE3-D7E3FE37F0F0");
                        fTreeView1416BDETree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeView");
                    }

                    return fTreeView1416BDETree;
                }
            }

            /// <summary>
            /// Gets Reference to AllDevicesTreeVTreeItem
            /// </summary>
            public TreeItem AllDevicesTreeVTreeItem
            {
                get
                {
                    if (null == fAllDevicesTreeVTreeItem)
                    {
                        fAllDevicesTreeVTreeItem = new TreeItem("AllDevicesTreeVTreeItem", TreeView1416BDETree);
                        fAllDevicesTreeVTreeItem.UIMap.Scope = UIASeachScope.Children;
                        fAllDevicesTreeVTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"All Devices");
                        fAllDevicesTreeVTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    }

                    return fAllDevicesTreeVTreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to ButtonExpanderButton
            /// </summary>
            public Button ButtonExpanderButton
            {
                get
                {
                    if (null == fButtonExpanderButton)
                    {
                        fButtonExpanderButton = new Button("ButtonExpanderButton", AllDevicesTreeVTreeItem);
                        fButtonExpanderButton.UIMap.Scope = UIASeachScope.Children;
                        fButtonExpanderButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                        fButtonExpanderButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fButtonExpanderButton;
                }
            }

            /// <summary>
            /// Gets Reference to AllDevicesTextBText
            /// </summary>
            public Text AllDevicesTextBText
            {
                get
                {
                    if (null == fAllDevicesTextBText)
                    {
                        fAllDevicesTextBText = new Text("AllDevicesTextBText", AllDevicesTreeVTreeItem);
                        fAllDevicesTextBText.UIMap.Scope = UIASeachScope.Children;
                        fAllDevicesTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"All Devices");
                        fAllDevicesTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAllDevicesTextBText;
                }
            }

            /// <summary>
            /// Gets Reference to AddGroupButtonFButton
            /// </summary>
            public Button AddGroupButtonFButton
            {
                get
                {
                    if (null == fAddGroupButtonFButton)
                    {
                        fAddGroupButtonFButton = new Button("AddGroupButtonFButton", ServiceConfigurCustom);
                        fAddGroupButtonFButton.UIMap.Scope = UIASeachScope.Children;
                        fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group...");
                        fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FF3CA114-616C-4372-9E90-DEBFDDC95553");
                        fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fAddGroupButtonFButton;
                }
            }

            /// <summary>
            /// Gets Reference to AddGroupTextBloText
            /// </summary>
            public Text AddGroupTextBloText
            {
                get
                {
                    if (null == fAddGroupTextBloText)
                    {
                        fAddGroupTextBloText = new Text("AddGroupTextBloText", AddGroupButtonFButton);
                        fAddGroupTextBloText.UIMap.Scope = UIASeachScope.Children;
                        fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group...");
                        fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAddGroupTextBloText;
                }
            }

            /// <summary>
            /// Gets Reference to RemoveGroupButtButton
            /// </summary>
            public Button RemoveGroupButtButton
            {
                get
                {
                    if (null == fRemoveGroupButtButton)
                    {
                        fRemoveGroupButtButton = new Button("RemoveGroupButtButton", ServiceConfigurCustom);
                        fRemoveGroupButtButton.UIMap.Scope = UIASeachScope.Children;
                        fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Group...");
                        fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"254907B3-979B-4706-8099-4EB37924DFB2");
                        fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fRemoveGroupButtButton;
                }
            }

            /// <summary>
            /// Gets Reference to RemoveGroupTextText
            /// </summary>
            public Text RemoveGroupTextText
            {
                get
                {
                    if (null == fRemoveGroupTextText)
                    {
                        fRemoveGroupTextText = new Text("RemoveGroupTextText", RemoveGroupButtButton);
                        fRemoveGroupTextText.UIMap.Scope = UIASeachScope.Children;
                        fRemoveGroupTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Group...");
                        fRemoveGroupTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fRemoveGroupTextText;
                }
            }

            /// <summary>
            /// Gets Reference to RenameButton261Button
            /// </summary>
            public Button RenameButton261Button
            {
                get
                {
                    if (null == fRenameButton261Button)
                    {
                        fRenameButton261Button = new Button("RenameButton261Button", ServiceConfigurCustom);
                        fRenameButton261Button.UIMap.Scope = UIASeachScope.Children;
                        fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rename");
                        fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2619DFAD-0185-42fb-A689-994ED4ACC316");
                        fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fRenameButton261Button;
                }
            }

            /// <summary>
            /// Gets Reference to RenameTextBlockText
            /// </summary>
            public Text RenameTextBlockText
            {
                get
                {
                    if (null == fRenameTextBlockText)
                    {
                        fRenameTextBlockText = new Text("RenameTextBlockText", RenameButton261Button);
                        fRenameTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fRenameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rename");
                        fRenameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fRenameTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to GridSplitterThumb
            /// </summary>
            public Thumb GridSplitterThumb
            {
                get
                {
                    if (null == fGridSplitterThumb)
                    {
                        fGridSplitterThumb = new Thumb("GridSplitterThumb", ServiceConfigurCustom);
                        fGridSplitterThumb.UIMap.Scope = UIASeachScope.Children;
                        fGridSplitterThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridSplitter");
                    }

                    return fGridSplitterThumb;
                }
            }

            /// <summary>
            /// Gets Reference to DeviceListText
            /// </summary>
            public Text DeviceListText
            {
                get
                {
                    if (null == fDeviceListText)
                    {
                        fDeviceListText = new Text("DeviceListText", ServiceConfigurCustom);
                        fDeviceListText.UIMap.Scope = UIASeachScope.Children;
                        fDeviceListText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device List");
                        fDeviceListText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fDeviceListText;
                }
            }

            /// <summary>
            /// Gets Reference to DeviceListTextBText
            /// </summary>
            public Text DeviceListTextBText
            {
                get
                {
                    if (null == fDeviceListTextBText)
                    {
                        fDeviceListTextBText = new Text("DeviceListTextBText", DeviceListText);
                        fDeviceListTextBText.UIMap.Scope = UIASeachScope.Children;
                        fDeviceListTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device List");
                        fDeviceListTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fDeviceListTextBText;
                }
            }

            /// <summary>
            /// Gets Reference to ListView141cb8bDataGrid
            /// </summary>
            public DataGrid ListView141cb8bDataGrid
            {
                get
                {
                    if (null == fListView141cb8bDataGrid)
                    {
                        fListView141cb8bDataGrid = new DataGrid("ListView141cb8bDataGrid", ServiceConfigurCustom);
                        fListView141cb8bDataGrid.UIMap.Scope = UIASeachScope.Children;
                        fListView141cb8bDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"141cb8be-89c3-4b41-80ca-be09bdf636f2");
                        fListView141cb8bDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListView");
                    }

                    return fListView141cb8bDataGrid;
                }
            }

            /// <summary>
            /// Gets Reference to GridViewHeaderRHeader
            /// </summary>
            public Header GridViewHeaderRHeader
            {
                get
                {
                    if (null == fGridViewHeaderRHeader)
                    {
                        fGridViewHeaderRHeader = new Header("GridViewHeaderRHeader", ListView141cb8bDataGrid);
                        fGridViewHeaderRHeader.UIMap.Scope = UIASeachScope.Children;
                        fGridViewHeaderRHeader.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewHeaderRowPresenter");
                    }

                    return fGridViewHeaderRHeader;
                }
            }

            /// <summary>
            /// Gets Reference to StatusGridViewCHeaderItem
            /// </summary>
            public HeaderItem StatusGridViewCHeaderItem
            {
                get
                {
                    if (null == fStatusGridViewCHeaderItem)
                    {
                        fStatusGridViewCHeaderItem = new HeaderItem("StatusGridViewCHeaderItem", GridViewHeaderRHeader);
                        fStatusGridViewCHeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Status");
                        fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84BDE37C-126B-473a-923B-180DBBB478C6");
                        fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    }

                    return fStatusGridViewCHeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to StatusTextBlockText
            /// </summary>
            public Text StatusTextBlockText
            {
                get
                {
                    if (null == fStatusTextBlockText)
                    {
                        fStatusTextBlockText = new Text("StatusTextBlockText", StatusGridViewCHeaderItem);
                        fStatusTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fStatusTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Status");
                        fStatusTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fStatusTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup0Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup0Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup0Thumb)
                    {
                        fThumbPARTHeadeDup0Thumb = new Thumb("ThumbPARTHeadeDup0Thumb", StatusGridViewCHeaderItem);
                        fThumbPARTHeadeDup0Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup0Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to NameGridViewColHeaderItem
            /// </summary>
            public HeaderItem NameGridViewColHeaderItem
            {
                get
                {
                    if (null == fNameGridViewColHeaderItem)
                    {
                        fNameGridViewColHeaderItem = new HeaderItem("NameGridViewColHeaderItem", GridViewHeaderRHeader);
                        fNameGridViewColHeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                        fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"507D57C0-BC09-4a0a-8D17-F2A9117ADCE5");
                        fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    }

                    return fNameGridViewColHeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to NameTextBlockDup1Text
            /// </summary>
            public Text NameTextBlockDup1Text
            {
                get
                {
                    if (null == fNameTextBlockDup1Text)
                    {
                        fNameTextBlockDup1Text = new Text("NameTextBlockDup1Text", NameGridViewColHeaderItem);
                        fNameTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fNameTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                        fNameTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fNameTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup1Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup1Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup1Thumb)
                    {
                        fThumbPARTHeadeDup1Thumb = new Thumb("ThumbPARTHeadeDup1Thumb", NameGridViewColHeaderItem);
                        fThumbPARTHeadeDup1Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup1Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to GridViewColumnHDup0HeaderItem
            /// </summary>
            public HeaderItem GridViewColumnHDup0HeaderItem
            {
                get
                {
                    if (null == fGridViewColumnHDup0HeaderItem)
                    {
                        fGridViewColumnHDup0HeaderItem = new HeaderItem("GridViewColumnHDup0HeaderItem", GridViewHeaderRHeader);
                        fGridViewColumnHDup0HeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fGridViewColumnHDup0HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"458F7960-4394-4579-919F-D58D5043C703");
                        fGridViewColumnHDup0HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    }

                    return fGridViewColumnHDup0HeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to ImageDup2Image
            /// </summary>
            public Image ImageDup2Image
            {
                get
                {
                    if (null == fImageDup2Image)
                    {
                        fImageDup2Image = new Image("ImageDup2Image", GridViewColumnHDup0HeaderItem);
                        fImageDup2Image.UIMap.Scope = UIASeachScope.Children;
                        fImageDup2Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImageDup2Image;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup2Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup2Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup2Thumb)
                    {
                        fThumbPARTHeadeDup2Thumb = new Thumb("ThumbPARTHeadeDup2Thumb", GridViewColumnHDup0HeaderItem);
                        fThumbPARTHeadeDup2Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup2Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to GridViewColumnHDup1HeaderItem
            /// </summary>
            public HeaderItem GridViewColumnHDup1HeaderItem
            {
                get
                {
                    if (null == fGridViewColumnHDup1HeaderItem)
                    {
                        fGridViewColumnHDup1HeaderItem = new HeaderItem("GridViewColumnHDup1HeaderItem", GridViewHeaderRHeader);
                        fGridViewColumnHDup1HeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fGridViewColumnHDup1HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CD97A6CC-D4F4-4ddb-A3BB-7FF26B2222FF");
                        fGridViewColumnHDup1HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    }

                    return fGridViewColumnHDup1HeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to ImageDup3Image
            /// </summary>
            public Image ImageDup3Image
            {
                get
                {
                    if (null == fImageDup3Image)
                    {
                        fImageDup3Image = new Image("ImageDup3Image", GridViewColumnHDup1HeaderItem);
                        fImageDup3Image.UIMap.Scope = UIASeachScope.Children;
                        fImageDup3Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImageDup3Image;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup3Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup3Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup3Thumb)
                    {
                        fThumbPARTHeadeDup3Thumb = new Thumb("ThumbPARTHeadeDup3Thumb", GridViewColumnHDup1HeaderItem);
                        fThumbPARTHeadeDup3Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup3Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup3Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup3Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to GridViewColumnHDup2HeaderItem
            /// </summary>
            public HeaderItem GridViewColumnHDup2HeaderItem
            {
                get
                {
                    if (null == fGridViewColumnHDup2HeaderItem)
                    {
                        fGridViewColumnHDup2HeaderItem = new HeaderItem("GridViewColumnHDup2HeaderItem", GridViewHeaderRHeader);
                        fGridViewColumnHDup2HeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fGridViewColumnHDup2HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"008BEEE0-3AE1-47be-BD91-66E124BE04A5");
                        fGridViewColumnHDup2HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    }

                    return fGridViewColumnHDup2HeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to ImageDup4Image
            /// </summary>
            public Image ImageDup4Image
            {
                get
                {
                    if (null == fImageDup4Image)
                    {
                        fImageDup4Image = new Image("ImageDup4Image", GridViewColumnHDup2HeaderItem);
                        fImageDup4Image.UIMap.Scope = UIASeachScope.Children;
                        fImageDup4Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImageDup4Image;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup4Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup4Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup4Thumb)
                    {
                        fThumbPARTHeadeDup4Thumb = new Thumb("ThumbPARTHeadeDup4Thumb", GridViewColumnHDup2HeaderItem);
                        fThumbPARTHeadeDup4Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup4Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup4Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup4Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to GridViewColumnHDup3HeaderItem
            /// </summary>
            public HeaderItem GridViewColumnHDup3HeaderItem
            {
                get
                {
                    if (null == fGridViewColumnHDup3HeaderItem)
                    {
                        fGridViewColumnHDup3HeaderItem = new HeaderItem("GridViewColumnHDup3HeaderItem", GridViewHeaderRHeader);
                        fGridViewColumnHDup3HeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fGridViewColumnHDup3HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4DC0435C-FF08-4325-A9AC-115D1891ABA6");
                        fGridViewColumnHDup3HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    }

                    return fGridViewColumnHDup3HeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to ImageDup5Image
            /// </summary>
            public Image ImageDup5Image
            {
                get
                {
                    if (null == fImageDup5Image)
                    {
                        fImageDup5Image = new Image("ImageDup5Image", GridViewColumnHDup3HeaderItem);
                        fImageDup5Image.UIMap.Scope = UIASeachScope.Children;
                        fImageDup5Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImageDup5Image;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup5Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup5Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup5Thumb)
                    {
                        fThumbPARTHeadeDup5Thumb = new Thumb("ThumbPARTHeadeDup5Thumb", GridViewColumnHDup3HeaderItem);
                        fThumbPARTHeadeDup5Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup5Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup5Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup5Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to GridViewColumnHDup4HeaderItem
            /// </summary>
            public HeaderItem GridViewColumnHDup4HeaderItem
            {
                get
                {
                    if (null == fGridViewColumnHDup4HeaderItem)
                    {
                        fGridViewColumnHDup4HeaderItem = new HeaderItem("GridViewColumnHDup4HeaderItem", GridViewHeaderRHeader);
                        fGridViewColumnHDup4HeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fGridViewColumnHDup4HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"BE6ECE9F-4708-4266-8106-AE6D598B0396");
                        fGridViewColumnHDup4HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    }

                    return fGridViewColumnHDup4HeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to ImageDup6Image
            /// </summary>
            public Image ImageDup6Image
            {
                get
                {
                    if (null == fImageDup6Image)
                    {
                        fImageDup6Image = new Image("ImageDup6Image", GridViewColumnHDup4HeaderItem);
                        fImageDup6Image.UIMap.Scope = UIASeachScope.Children;
                        fImageDup6Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImageDup6Image;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup6Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup6Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup6Thumb)
                    {
                        fThumbPARTHeadeDup6Thumb = new Thumb("ThumbPARTHeadeDup6Thumb", GridViewColumnHDup4HeaderItem);
                        fThumbPARTHeadeDup6Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup6Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup6Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup6Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to GridViewColumnHDup5HeaderItem
            /// </summary>
            public HeaderItem GridViewColumnHDup5HeaderItem
            {
                get
                {
                    if (null == fGridViewColumnHDup5HeaderItem)
                    {
                        fGridViewColumnHDup5HeaderItem = new HeaderItem("GridViewColumnHDup5HeaderItem", GridViewHeaderRHeader);
                        fGridViewColumnHDup5HeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fGridViewColumnHDup5HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5C264E70-DAEF-44F3-9DE9-9824BC0B9ECF");
                        fGridViewColumnHDup5HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    }

                    return fGridViewColumnHDup5HeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to ImageDup7Image
            /// </summary>
            public Image ImageDup7Image
            {
                get
                {
                    if (null == fImageDup7Image)
                    {
                        fImageDup7Image = new Image("ImageDup7Image", GridViewColumnHDup5HeaderItem);
                        fImageDup7Image.UIMap.Scope = UIASeachScope.Children;
                        fImageDup7Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImageDup7Image;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup7Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup7Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup7Thumb)
                    {
                        fThumbPARTHeadeDup7Thumb = new Thumb("ThumbPARTHeadeDup7Thumb", GridViewColumnHDup5HeaderItem);
                        fThumbPARTHeadeDup7Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup7Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup7Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup7Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to ModelGridViewCoHeaderItem
            /// </summary>
            public HeaderItem ModelGridViewCoHeaderItem
            {
                get
                {
                    if (null == fModelGridViewCoHeaderItem)
                    {
                        fModelGridViewCoHeaderItem = new HeaderItem("ModelGridViewCoHeaderItem", GridViewHeaderRHeader);
                        fModelGridViewCoHeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Model");
                        fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"805FD78E-D6A4-4559-939B-ECDD285AE6D7");
                        fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    }

                    return fModelGridViewCoHeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to ModelTextBlockText
            /// </summary>
            public Text ModelTextBlockText
            {
                get
                {
                    if (null == fModelTextBlockText)
                    {
                        fModelTextBlockText = new Text("ModelTextBlockText", ModelGridViewCoHeaderItem);
                        fModelTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fModelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Model");
                        fModelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fModelTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup8Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup8Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup8Thumb)
                    {
                        fThumbPARTHeadeDup8Thumb = new Thumb("ThumbPARTHeadeDup8Thumb", ModelGridViewCoHeaderItem);
                        fThumbPARTHeadeDup8Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup8Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup8Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup8Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to IPAddressGridViHeaderItem
            /// </summary>
            public HeaderItem IPAddressGridViHeaderItem
            {
                get
                {
                    if (null == fIPAddressGridViHeaderItem)
                    {
                        fIPAddressGridViHeaderItem = new HeaderItem("IPAddressGridViHeaderItem", GridViewHeaderRHeader);
                        fIPAddressGridViHeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"IP Address");
                        fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"70E1D5F4-0DA5-4e87-A451-28399734B74C");
                        fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    }

                    return fIPAddressGridViHeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to IPAddressTextBlText
            /// </summary>
            public Text IPAddressTextBlText
            {
                get
                {
                    if (null == fIPAddressTextBlText)
                    {
                        fIPAddressTextBlText = new Text("IPAddressTextBlText", IPAddressGridViHeaderItem);
                        fIPAddressTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fIPAddressTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"IP Address");
                        fIPAddressTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fIPAddressTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup9Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup9Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup9Thumb)
                    {
                        fThumbPARTHeadeDup9Thumb = new Thumb("ThumbPARTHeadeDup9Thumb", IPAddressGridViHeaderItem);
                        fThumbPARTHeadeDup9Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup9Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup9Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup9Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to HostnameGridVieHeaderItem
            /// </summary>
            public HeaderItem HostnameGridVieHeaderItem
            {
                get
                {
                    if (null == fHostnameGridVieHeaderItem)
                    {
                        fHostnameGridVieHeaderItem = new HeaderItem("HostnameGridVieHeaderItem", GridViewHeaderRHeader);
                        fHostnameGridVieHeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname");
                        fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"82BE5D16-D370-4519-8FC4-0F517E12AFDF");
                        fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    }

                    return fHostnameGridVieHeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to HostnameTextBloText
            /// </summary>
            public Text HostnameTextBloText
            {
                get
                {
                    if (null == fHostnameTextBloText)
                    {
                        fHostnameTextBloText = new Text("HostnameTextBloText", HostnameGridVieHeaderItem);
                        fHostnameTextBloText.UIMap.Scope = UIASeachScope.Children;
                        fHostnameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname");
                        fHostnameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fHostnameTextBloText;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup10Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup10Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup10Thumb)
                    {
                        fThumbPARTHeadeDup10Thumb = new Thumb("ThumbPARTHeadeDup10Thumb", HostnameGridVieHeaderItem);
                        fThumbPARTHeadeDup10Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup10Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup10Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup10Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to DescriptionGridHeaderItem
            /// </summary>
            public HeaderItem DescriptionGridHeaderItem
            {
                get
                {
                    if (null == fDescriptionGridHeaderItem)
                    {
                        fDescriptionGridHeaderItem = new HeaderItem("DescriptionGridHeaderItem", GridViewHeaderRHeader);
                        fDescriptionGridHeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                        fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"26A46CB8-53AC-446f-8012-A92323091104");
                        fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    }

                    return fDescriptionGridHeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to DescriptionTextDup1Text
            /// </summary>
            public Text DescriptionTextDup1Text
            {
                get
                {
                    if (null == fDescriptionTextDup1Text)
                    {
                        fDescriptionTextDup1Text = new Text("DescriptionTextDup1Text", DescriptionGridHeaderItem);
                        fDescriptionTextDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fDescriptionTextDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                        fDescriptionTextDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fDescriptionTextDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup11Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup11Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup11Thumb)
                    {
                        fThumbPARTHeadeDup11Thumb = new Thumb("ThumbPARTHeadeDup11Thumb", DescriptionGridHeaderItem);
                        fThumbPARTHeadeDup11Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup11Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup11Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup11Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to FirmwareGridVieHeaderItem
            /// </summary>
            public HeaderItem FirmwareGridVieHeaderItem
            {
                get
                {
                    if (null == fFirmwareGridVieHeaderItem)
                    {
                        fFirmwareGridVieHeaderItem = new HeaderItem("FirmwareGridVieHeaderItem", GridViewHeaderRHeader);
                        fFirmwareGridVieHeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Firmware");
                        fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2A8C9E5A-0A8D-48DD-9D15-42B45EB4177B");
                        fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    }

                    return fFirmwareGridVieHeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to FirmwareTextBloText
            /// </summary>
            public Text FirmwareTextBloText
            {
                get
                {
                    if (null == fFirmwareTextBloText)
                    {
                        fFirmwareTextBloText = new Text("FirmwareTextBloText", FirmwareGridVieHeaderItem);
                        fFirmwareTextBloText.UIMap.Scope = UIASeachScope.Children;
                        fFirmwareTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Firmware");
                        fFirmwareTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fFirmwareTextBloText;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup12Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup12Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup12Thumb)
                    {
                        fThumbPARTHeadeDup12Thumb = new Thumb("ThumbPARTHeadeDup12Thumb", FirmwareGridVieHeaderItem);
                        fThumbPARTHeadeDup12Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup12Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup12Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup12Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to bound101113136eDataItem
            /// </summary>
            public DataItem bound101113136eDataItem
            {
                get
                {
                    if (null == fbound101113136eDataItem)
                    {
                        fbound101113136eDataItem = new DataItem("bound101113136eDataItem", ListView141cb8bDataGrid);
                        fbound101113136eDataItem.UIMap.Scope = UIASeachScope.Children;
                        fbound101113136eDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"bound; 10.11.13.136; email=enabled; folder=enabled; fax=enabled; addressing=disabled; authentication=notApplicable; customKey=enabled; sharePoint=disabled; HP Officejet Color FlowMFP X585; 10.11.13.136; HP Officejet Color FlowMFP X585");
                        fbound101113136eDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                    }

                    return fbound101113136eDataItem;
                }
            }

            /// <summary>
            /// Gets Reference to ContentPresenteDup0I0XCustom
            /// </summary>
            public Custom ContentPresenteDup0I0XCustom
            {
                get
                {
                    if (null == fContentPresenteDup0I0XCustom)
                    {
                        fContentPresenteDup0I0XCustom = new Custom("ContentPresenteDup0I0XCustom", bound101113136eDataItem);
                        fContentPresenteDup0I0XCustom.UIMap.Scope = UIASeachScope.Children;
                        fContentPresenteDup0I0XCustom.UIMap.Index = 0;
                        fContentPresenteDup0I0XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                    }

                    return fContentPresenteDup0I0XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to Image84ACE29E0ADup0Image
            /// </summary>
            public Image Image84ACE29E0ADup0Image
            {
                get
                {
                    if (null == fImage84ACE29E0ADup0Image)
                    {
                        fImage84ACE29E0ADup0Image = new Image("Image84ACE29E0ADup0Image", ContentPresenteDup0I0XCustom);
                        fImage84ACE29E0ADup0Image.UIMap.Scope = UIASeachScope.Children;
                        fImage84ACE29E0ADup0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84ACE29E-0A0D-4d4b-9168-34F42B14D952");
                        fImage84ACE29E0ADup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImage84ACE29E0ADup0Image;
                }
            }

            /// <summary>
            /// Gets Reference to WaitSpinnerUserDup0Custom
            /// </summary>
            public Custom WaitSpinnerUserDup0Custom
            {
                get
                {
                    if (null == fWaitSpinnerUserDup0Custom)
                    {
                        fWaitSpinnerUserDup0Custom = new Custom("WaitSpinnerUserDup0Custom", ContentPresenteDup0I0XCustom);
                        fWaitSpinnerUserDup0Custom.UIMap.Scope = UIASeachScope.Children;
                        fWaitSpinnerUserDup0Custom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C736946B-5A03-4603-A63B-2B489C87B082");
                        fWaitSpinnerUserDup0Custom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WaitSpinnerUserControl");
                    }

                    return fWaitSpinnerUserDup0Custom;
                }
            }

            /// <summary>
            /// Gets Reference to ImagemWaitSpinnDup0Image
            /// </summary>
            public Image ImagemWaitSpinnDup0Image
            {
                get
                {
                    if (null == fImagemWaitSpinnDup0Image)
                    {
                        fImagemWaitSpinnDup0Image = new Image("ImagemWaitSpinnDup0Image", WaitSpinnerUserDup0Custom);
                        fImagemWaitSpinnDup0Image.UIMap.Scope = UIASeachScope.Children;
                        fImagemWaitSpinnDup0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWaitSpinnerImage");
                        fImagemWaitSpinnDup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImagemWaitSpinnDup0Image;
                }
            }

            /// <summary>
            /// Gets Reference to HPOfficejetColoDup0I0XText
            /// </summary>
            public Text HPOfficejetColoDup0I0XText
            {
                get
                {
                    if (null == fHPOfficejetColoDup0I0XText)
                    {
                        fHPOfficejetColoDup0I0XText = new Text("HPOfficejetColoDup0I0XText", bound101113136eDataItem);
                        fHPOfficejetColoDup0I0XText.UIMap.Scope = UIASeachScope.Children;
                        fHPOfficejetColoDup0I0XText.UIMap.Index = 0;
                        fHPOfficejetColoDup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Officejet Color FlowMFP X585");
                        fHPOfficejetColoDup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fHPOfficejetColoDup0I0XText;
                }
            }

            /// <summary>
            /// Gets Reference to ContentPresenteDup1I1XCustom
            /// </summary>
            public Custom ContentPresenteDup1I1XCustom
            {
                get
                {
                    if (null == fContentPresenteDup1I1XCustom)
                    {
                        fContentPresenteDup1I1XCustom = new Custom("ContentPresenteDup1I1XCustom", bound101113136eDataItem);
                        fContentPresenteDup1I1XCustom.UIMap.Scope = UIASeachScope.Children;
                        fContentPresenteDup1I1XCustom.UIMap.Index = 1;
                        fContentPresenteDup1I1XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                    }

                    return fContentPresenteDup1I1XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to Image844100985ADup0Image
            /// </summary>
            public Image Image844100985ADup0Image
            {
                get
                {
                    if (null == fImage844100985ADup0Image)
                    {
                        fImage844100985ADup0Image = new Image("Image844100985ADup0Image", ContentPresenteDup1I1XCustom);
                        fImage844100985ADup0Image.UIMap.Scope = UIASeachScope.Children;
                        fImage844100985ADup0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84410098-5A15-4470-B28C-3220220B3CF7");
                        fImage844100985ADup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImage844100985ADup0Image;
                }
            }

            /// <summary>
            /// Gets Reference to ContentPresenteDup2I2XCustom
            /// </summary>
            public Custom ContentPresenteDup2I2XCustom
            {
                get
                {
                    if (null == fContentPresenteDup2I2XCustom)
                    {
                        fContentPresenteDup2I2XCustom = new Custom("ContentPresenteDup2I2XCustom", bound101113136eDataItem);
                        fContentPresenteDup2I2XCustom.UIMap.Scope = UIASeachScope.Children;
                        fContentPresenteDup2I2XCustom.UIMap.Index = 2;
                        fContentPresenteDup2I2XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                    }

                    return fContentPresenteDup2I2XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to Image20F9A92A96Dup0Image
            /// </summary>
            public Image Image20F9A92A96Dup0Image
            {
                get
                {
                    if (null == fImage20F9A92A96Dup0Image)
                    {
                        fImage20F9A92A96Dup0Image = new Image("Image20F9A92A96Dup0Image", ContentPresenteDup2I2XCustom);
                        fImage20F9A92A96Dup0Image.UIMap.Scope = UIASeachScope.Children;
                        fImage20F9A92A96Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"20F9A92A-9628-46b7-9034-C31A2B2C2052");
                        fImage20F9A92A96Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImage20F9A92A96Dup0Image;
                }
            }

            /// <summary>
            /// Gets Reference to ContentPresenteDup3I3XCustom
            /// </summary>
            public Custom ContentPresenteDup3I3XCustom
            {
                get
                {
                    if (null == fContentPresenteDup3I3XCustom)
                    {
                        fContentPresenteDup3I3XCustom = new Custom("ContentPresenteDup3I3XCustom", bound101113136eDataItem);
                        fContentPresenteDup3I3XCustom.UIMap.Scope = UIASeachScope.Children;
                        fContentPresenteDup3I3XCustom.UIMap.Index = 3;
                        fContentPresenteDup3I3XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                    }

                    return fContentPresenteDup3I3XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to ImageCA1843E8BFDup0Image
            /// </summary>
            public Image ImageCA1843E8BFDup0Image
            {
                get
                {
                    if (null == fImageCA1843E8BFDup0Image)
                    {
                        fImageCA1843E8BFDup0Image = new Image("ImageCA1843E8BFDup0Image", ContentPresenteDup3I3XCustom);
                        fImageCA1843E8BFDup0Image.UIMap.Scope = UIASeachScope.Children;
                        fImageCA1843E8BFDup0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CA1843E8-BF8B-4fd4-88C2-66CB0A66A1C2");
                        fImageCA1843E8BFDup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImageCA1843E8BFDup0Image;
                }
            }

            /// <summary>
            /// Gets Reference to ContentPresenteDup4I4XCustom
            /// </summary>
            public Custom ContentPresenteDup4I4XCustom
            {
                get
                {
                    if (null == fContentPresenteDup4I4XCustom)
                    {
                        fContentPresenteDup4I4XCustom = new Custom("ContentPresenteDup4I4XCustom", bound101113136eDataItem);
                        fContentPresenteDup4I4XCustom.UIMap.Scope = UIASeachScope.Children;
                        fContentPresenteDup4I4XCustom.UIMap.Index = 4;
                        fContentPresenteDup4I4XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                    }

                    return fContentPresenteDup4I4XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to ImageE24499D7C0Dup0Image
            /// </summary>
            public Image ImageE24499D7C0Dup0Image
            {
                get
                {
                    if (null == fImageE24499D7C0Dup0Image)
                    {
                        fImageE24499D7C0Dup0Image = new Image("ImageE24499D7C0Dup0Image", ContentPresenteDup4I4XCustom);
                        fImageE24499D7C0Dup0Image.UIMap.Scope = UIASeachScope.Children;
                        fImageE24499D7C0Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"E24499D7-C0DD-4982-A105-C235E810CBF8");
                        fImageE24499D7C0Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImageE24499D7C0Dup0Image;
                }
            }

            /// <summary>
            /// Gets Reference to ContentPresenteDup5I5XCustom
            /// </summary>
            public Custom ContentPresenteDup5I5XCustom
            {
                get
                {
                    if (null == fContentPresenteDup5I5XCustom)
                    {
                        fContentPresenteDup5I5XCustom = new Custom("ContentPresenteDup5I5XCustom", bound101113136eDataItem);
                        fContentPresenteDup5I5XCustom.UIMap.Scope = UIASeachScope.Children;
                        fContentPresenteDup5I5XCustom.UIMap.Index = 5;
                        fContentPresenteDup5I5XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                    }

                    return fContentPresenteDup5I5XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to Image86A371F7F4Dup0Image
            /// </summary>
            public Image Image86A371F7F4Dup0Image
            {
                get
                {
                    if (null == fImage86A371F7F4Dup0Image)
                    {
                        fImage86A371F7F4Dup0Image = new Image("Image86A371F7F4Dup0Image", ContentPresenteDup5I5XCustom);
                        fImage86A371F7F4Dup0Image.UIMap.Scope = UIASeachScope.Children;
                        fImage86A371F7F4Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"86A371F7-F478-4dfd-AE88-854F4FB069A0");
                        fImage86A371F7F4Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImage86A371F7F4Dup0Image;
                }
            }

            /// <summary>
            /// Gets Reference to ContentPresenteDup6I6XCustom
            /// </summary>
            public Custom ContentPresenteDup6I6XCustom
            {
                get
                {
                    if (null == fContentPresenteDup6I6XCustom)
                    {
                        fContentPresenteDup6I6XCustom = new Custom("ContentPresenteDup6I6XCustom", bound101113136eDataItem);
                        fContentPresenteDup6I6XCustom.UIMap.Scope = UIASeachScope.Children;
                        fContentPresenteDup6I6XCustom.UIMap.Index = 6;
                        fContentPresenteDup6I6XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                    }

                    return fContentPresenteDup6I6XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to Image1D2DC29B85Dup0Image
            /// </summary>
            public Image Image1D2DC29B85Dup0Image
            {
                get
                {
                    if (null == fImage1D2DC29B85Dup0Image)
                    {
                        fImage1D2DC29B85Dup0Image = new Image("Image1D2DC29B85Dup0Image", ContentPresenteDup6I6XCustom);
                        fImage1D2DC29B85Dup0Image.UIMap.Scope = UIASeachScope.Children;
                        fImage1D2DC29B85Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1D2DC29B-85AC-4341-9FBC-741DEC6996B9");
                        fImage1D2DC29B85Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImage1D2DC29B85Dup0Image;
                }
            }

            /// <summary>
            /// Gets Reference to HPOfficejetColoDup1I1XText
            /// </summary>
            public Text HPOfficejetColoDup1I1XText
            {
                get
                {
                    if (null == fHPOfficejetColoDup1I1XText)
                    {
                        fHPOfficejetColoDup1I1XText = new Text("HPOfficejetColoDup1I1XText", bound101113136eDataItem);
                        fHPOfficejetColoDup1I1XText.UIMap.Scope = UIASeachScope.Children;
                        fHPOfficejetColoDup1I1XText.UIMap.Index = 1;
                        fHPOfficejetColoDup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Officejet Color FlowMFP X585");
                        fHPOfficejetColoDup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fHPOfficejetColoDup1I1XText;
                }
            }

            /// <summary>
            /// Gets Reference to A101113136TextBText
            /// </summary>
            public Text A101113136TextBText
            {
                get
                {
                    if (null == fA101113136TextBText)
                    {
                        fA101113136TextBText = new Text("A101113136TextBText", bound101113136eDataItem);
                        fA101113136TextBText.UIMap.Scope = UIASeachScope.Children;
                        fA101113136TextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"10.11.13.136");
                        fA101113136TextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fA101113136TextBText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBlockDup1Text
            /// </summary>
            public Text TextBlockDup1Text
            {
                get
                {
                    if (null == fTextBlockDup1Text)
                    {
                        fTextBlockDup1Text = new Text("TextBlockDup1Text", bound101113136eDataItem);
                        fTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to HPOfficejetColoDup2I2XText
            /// </summary>
            public Text HPOfficejetColoDup2I2XText
            {
                get
                {
                    if (null == fHPOfficejetColoDup2I2XText)
                    {
                        fHPOfficejetColoDup2I2XText = new Text("HPOfficejetColoDup2I2XText", bound101113136eDataItem);
                        fHPOfficejetColoDup2I2XText.UIMap.Scope = UIASeachScope.Children;
                        fHPOfficejetColoDup2I2XText.UIMap.Index = 2;
                        fHPOfficejetColoDup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Officejet Color FlowMFP X585");
                        fHPOfficejetColoDup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fHPOfficejetColoDup2I2XText;
                }
            }

            /// <summary>
            /// Gets Reference to FutureSmart4BetText
            /// </summary>
            public Text FutureSmart4BetText
            {
                get
                {
                    if (null == fFutureSmart4BetText)
                    {
                        fFutureSmart4BetText = new Text("FutureSmart4BetText", bound101113136eDataItem);
                        fFutureSmart4BetText.UIMap.Scope = UIASeachScope.Children;
                        fFutureSmart4BetText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"FutureSmart 4 (Beta) (2458541_102187)");
                        fFutureSmart4BetText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fFutureSmart4BetText;
                }
            }

            /// <summary>
            /// Gets Reference to dssDisallowed10DataItem
            /// </summary>
            public DataItem dssDisallowed10DataItem
            {
                get
                {
                    if (null == fdssDisallowed10DataItem)
                    {
                        fdssDisallowed10DataItem = new DataItem("dssDisallowed10DataItem", ListView141cb8bDataGrid);
                        fdssDisallowed10DataItem.UIMap.Scope = UIASeachScope.Children;
                        fdssDisallowed10DataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"dssDisallowed; 10.11.12.159; email=enabled; folder=enabled; fax=enabled; addressing=disabled; authentication=notApplicable; customKey=disabled; sharePoint=disabled; HP LaserJet MFP M527; 10.11.12.159; HP LaserJet MFP M527");
                        fdssDisallowed10DataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                    }

                    return fdssDisallowed10DataItem;
                }
            }

            /// <summary>
            /// Gets Reference to ContentPresenteDup7I0XCustom
            /// </summary>
            public Custom ContentPresenteDup7I0XCustom
            {
                get
                {
                    if (null == fContentPresenteDup7I0XCustom)
                    {
                        fContentPresenteDup7I0XCustom = new Custom("ContentPresenteDup7I0XCustom", dssDisallowed10DataItem);
                        fContentPresenteDup7I0XCustom.UIMap.Scope = UIASeachScope.Children;
                        fContentPresenteDup7I0XCustom.UIMap.Index = 0;
                        fContentPresenteDup7I0XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                    }

                    return fContentPresenteDup7I0XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to Image84ACE29E0ADup1Image
            /// </summary>
            public Image Image84ACE29E0ADup1Image
            {
                get
                {
                    if (null == fImage84ACE29E0ADup1Image)
                    {
                        fImage84ACE29E0ADup1Image = new Image("Image84ACE29E0ADup1Image", ContentPresenteDup7I0XCustom);
                        fImage84ACE29E0ADup1Image.UIMap.Scope = UIASeachScope.Children;
                        fImage84ACE29E0ADup1Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84ACE29E-0A0D-4d4b-9168-34F42B14D952");
                        fImage84ACE29E0ADup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImage84ACE29E0ADup1Image;
                }
            }

            /// <summary>
            /// Gets Reference to WaitSpinnerUserDup1Custom
            /// </summary>
            public Custom WaitSpinnerUserDup1Custom
            {
                get
                {
                    if (null == fWaitSpinnerUserDup1Custom)
                    {
                        fWaitSpinnerUserDup1Custom = new Custom("WaitSpinnerUserDup1Custom", ContentPresenteDup7I0XCustom);
                        fWaitSpinnerUserDup1Custom.UIMap.Scope = UIASeachScope.Children;
                        fWaitSpinnerUserDup1Custom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C736946B-5A03-4603-A63B-2B489C87B082");
                        fWaitSpinnerUserDup1Custom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WaitSpinnerUserControl");
                    }

                    return fWaitSpinnerUserDup1Custom;
                }
            }

            /// <summary>
            /// Gets Reference to ImagemWaitSpinnDup1Image
            /// </summary>
            public Image ImagemWaitSpinnDup1Image
            {
                get
                {
                    if (null == fImagemWaitSpinnDup1Image)
                    {
                        fImagemWaitSpinnDup1Image = new Image("ImagemWaitSpinnDup1Image", WaitSpinnerUserDup1Custom);
                        fImagemWaitSpinnDup1Image.UIMap.Scope = UIASeachScope.Children;
                        fImagemWaitSpinnDup1Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWaitSpinnerImage");
                        fImagemWaitSpinnDup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImagemWaitSpinnDup1Image;
                }
            }

            /// <summary>
            /// Gets Reference to HPLaserJetMFPM5Dup0I0XText
            /// </summary>
            public Text HPLaserJetMFPM5Dup0I0XText
            {
                get
                {
                    if (null == fHPLaserJetMFPM5Dup0I0XText)
                    {
                        fHPLaserJetMFPM5Dup0I0XText = new Text("HPLaserJetMFPM5Dup0I0XText", dssDisallowed10DataItem);
                        fHPLaserJetMFPM5Dup0I0XText.UIMap.Scope = UIASeachScope.Children;
                        fHPLaserJetMFPM5Dup0I0XText.UIMap.Index = 0;
                        fHPLaserJetMFPM5Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet MFP M527");
                        fHPLaserJetMFPM5Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fHPLaserJetMFPM5Dup0I0XText;
                }
            }

            /// <summary>
            /// Gets Reference to ContentPresenteDup8I1XCustom
            /// </summary>
            public Custom ContentPresenteDup8I1XCustom
            {
                get
                {
                    if (null == fContentPresenteDup8I1XCustom)
                    {
                        fContentPresenteDup8I1XCustom = new Custom("ContentPresenteDup8I1XCustom", dssDisallowed10DataItem);
                        fContentPresenteDup8I1XCustom.UIMap.Scope = UIASeachScope.Children;
                        fContentPresenteDup8I1XCustom.UIMap.Index = 1;
                        fContentPresenteDup8I1XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                    }

                    return fContentPresenteDup8I1XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to Image844100985ADup1Image
            /// </summary>
            public Image Image844100985ADup1Image
            {
                get
                {
                    if (null == fImage844100985ADup1Image)
                    {
                        fImage844100985ADup1Image = new Image("Image844100985ADup1Image", ContentPresenteDup8I1XCustom);
                        fImage844100985ADup1Image.UIMap.Scope = UIASeachScope.Children;
                        fImage844100985ADup1Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84410098-5A15-4470-B28C-3220220B3CF7");
                        fImage844100985ADup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImage844100985ADup1Image;
                }
            }

            /// <summary>
            /// Gets Reference to ContentPresenteDup9I2XCustom
            /// </summary>
            public Custom ContentPresenteDup9I2XCustom
            {
                get
                {
                    if (null == fContentPresenteDup9I2XCustom)
                    {
                        fContentPresenteDup9I2XCustom = new Custom("ContentPresenteDup9I2XCustom", dssDisallowed10DataItem);
                        fContentPresenteDup9I2XCustom.UIMap.Scope = UIASeachScope.Children;
                        fContentPresenteDup9I2XCustom.UIMap.Index = 2;
                        fContentPresenteDup9I2XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                    }

                    return fContentPresenteDup9I2XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to Image20F9A92A96Dup1Image
            /// </summary>
            public Image Image20F9A92A96Dup1Image
            {
                get
                {
                    if (null == fImage20F9A92A96Dup1Image)
                    {
                        fImage20F9A92A96Dup1Image = new Image("Image20F9A92A96Dup1Image", ContentPresenteDup9I2XCustom);
                        fImage20F9A92A96Dup1Image.UIMap.Scope = UIASeachScope.Children;
                        fImage20F9A92A96Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"20F9A92A-9628-46b7-9034-C31A2B2C2052");
                        fImage20F9A92A96Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImage20F9A92A96Dup1Image;
                }
            }

            /// <summary>
            /// Gets Reference to ContentPresenteDup10I3XCustom
            /// </summary>
            public Custom ContentPresenteDup10I3XCustom
            {
                get
                {
                    if (null == fContentPresenteDup10I3XCustom)
                    {
                        fContentPresenteDup10I3XCustom = new Custom("ContentPresenteDup10I3XCustom", dssDisallowed10DataItem);
                        fContentPresenteDup10I3XCustom.UIMap.Scope = UIASeachScope.Children;
                        fContentPresenteDup10I3XCustom.UIMap.Index = 3;
                        fContentPresenteDup10I3XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                    }

                    return fContentPresenteDup10I3XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to ImageCA1843E8BFDup1Image
            /// </summary>
            public Image ImageCA1843E8BFDup1Image
            {
                get
                {
                    if (null == fImageCA1843E8BFDup1Image)
                    {
                        fImageCA1843E8BFDup1Image = new Image("ImageCA1843E8BFDup1Image", ContentPresenteDup10I3XCustom);
                        fImageCA1843E8BFDup1Image.UIMap.Scope = UIASeachScope.Children;
                        fImageCA1843E8BFDup1Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CA1843E8-BF8B-4fd4-88C2-66CB0A66A1C2");
                        fImageCA1843E8BFDup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImageCA1843E8BFDup1Image;
                }
            }

            /// <summary>
            /// Gets Reference to ContentPresenteDup11I4XCustom
            /// </summary>
            public Custom ContentPresenteDup11I4XCustom
            {
                get
                {
                    if (null == fContentPresenteDup11I4XCustom)
                    {
                        fContentPresenteDup11I4XCustom = new Custom("ContentPresenteDup11I4XCustom", dssDisallowed10DataItem);
                        fContentPresenteDup11I4XCustom.UIMap.Scope = UIASeachScope.Children;
                        fContentPresenteDup11I4XCustom.UIMap.Index = 4;
                        fContentPresenteDup11I4XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                    }

                    return fContentPresenteDup11I4XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to ImageE24499D7C0Dup1Image
            /// </summary>
            public Image ImageE24499D7C0Dup1Image
            {
                get
                {
                    if (null == fImageE24499D7C0Dup1Image)
                    {
                        fImageE24499D7C0Dup1Image = new Image("ImageE24499D7C0Dup1Image", ContentPresenteDup11I4XCustom);
                        fImageE24499D7C0Dup1Image.UIMap.Scope = UIASeachScope.Children;
                        fImageE24499D7C0Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"E24499D7-C0DD-4982-A105-C235E810CBF8");
                        fImageE24499D7C0Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImageE24499D7C0Dup1Image;
                }
            }

            /// <summary>
            /// Gets Reference to ContentPresenteDup12I5XCustom
            /// </summary>
            public Custom ContentPresenteDup12I5XCustom
            {
                get
                {
                    if (null == fContentPresenteDup12I5XCustom)
                    {
                        fContentPresenteDup12I5XCustom = new Custom("ContentPresenteDup12I5XCustom", dssDisallowed10DataItem);
                        fContentPresenteDup12I5XCustom.UIMap.Scope = UIASeachScope.Children;
                        fContentPresenteDup12I5XCustom.UIMap.Index = 5;
                        fContentPresenteDup12I5XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                    }

                    return fContentPresenteDup12I5XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to Image86A371F7F4Dup1Image
            /// </summary>
            public Image Image86A371F7F4Dup1Image
            {
                get
                {
                    if (null == fImage86A371F7F4Dup1Image)
                    {
                        fImage86A371F7F4Dup1Image = new Image("Image86A371F7F4Dup1Image", ContentPresenteDup12I5XCustom);
                        fImage86A371F7F4Dup1Image.UIMap.Scope = UIASeachScope.Children;
                        fImage86A371F7F4Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"86A371F7-F478-4dfd-AE88-854F4FB069A0");
                        fImage86A371F7F4Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImage86A371F7F4Dup1Image;
                }
            }

            /// <summary>
            /// Gets Reference to ContentPresenteDup13I6XCustom
            /// </summary>
            public Custom ContentPresenteDup13I6XCustom
            {
                get
                {
                    if (null == fContentPresenteDup13I6XCustom)
                    {
                        fContentPresenteDup13I6XCustom = new Custom("ContentPresenteDup13I6XCustom", dssDisallowed10DataItem);
                        fContentPresenteDup13I6XCustom.UIMap.Scope = UIASeachScope.Children;
                        fContentPresenteDup13I6XCustom.UIMap.Index = 6;
                        fContentPresenteDup13I6XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                    }

                    return fContentPresenteDup13I6XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to Image1D2DC29B85Dup1Image
            /// </summary>
            public Image Image1D2DC29B85Dup1Image
            {
                get
                {
                    if (null == fImage1D2DC29B85Dup1Image)
                    {
                        fImage1D2DC29B85Dup1Image = new Image("Image1D2DC29B85Dup1Image", ContentPresenteDup13I6XCustom);
                        fImage1D2DC29B85Dup1Image.UIMap.Scope = UIASeachScope.Children;
                        fImage1D2DC29B85Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1D2DC29B-85AC-4341-9FBC-741DEC6996B9");
                        fImage1D2DC29B85Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    }

                    return fImage1D2DC29B85Dup1Image;
                }
            }

            /// <summary>
            /// Gets Reference to HPLaserJetMFPM5Dup1I1XText
            /// </summary>
            public Text HPLaserJetMFPM5Dup1I1XText
            {
                get
                {
                    if (null == fHPLaserJetMFPM5Dup1I1XText)
                    {
                        fHPLaserJetMFPM5Dup1I1XText = new Text("HPLaserJetMFPM5Dup1I1XText", dssDisallowed10DataItem);
                        fHPLaserJetMFPM5Dup1I1XText.UIMap.Scope = UIASeachScope.Children;
                        fHPLaserJetMFPM5Dup1I1XText.UIMap.Index = 1;
                        fHPLaserJetMFPM5Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet MFP M527");
                        fHPLaserJetMFPM5Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fHPLaserJetMFPM5Dup1I1XText;
                }
            }

            /// <summary>
            /// Gets Reference to A101112159TextBText
            /// </summary>
            public Text A101112159TextBText
            {
                get
                {
                    if (null == fA101112159TextBText)
                    {
                        fA101112159TextBText = new Text("A101112159TextBText", dssDisallowed10DataItem);
                        fA101112159TextBText.UIMap.Scope = UIASeachScope.Children;
                        fA101112159TextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"10.11.12.159");
                        fA101112159TextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fA101112159TextBText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBlockDup2Text
            /// </summary>
            public Text TextBlockDup2Text
            {
                get
                {
                    if (null == fTextBlockDup2Text)
                    {
                        fTextBlockDup2Text = new Text("TextBlockDup2Text", dssDisallowed10DataItem);
                        fTextBlockDup2Text.UIMap.Scope = UIASeachScope.Children;
                        fTextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fTextBlockDup2Text;
                }
            }

            /// <summary>
            /// Gets Reference to HPLaserJetMFPM5Dup2I2XText
            /// </summary>
            public Text HPLaserJetMFPM5Dup2I2XText
            {
                get
                {
                    if (null == fHPLaserJetMFPM5Dup2I2XText)
                    {
                        fHPLaserJetMFPM5Dup2I2XText = new Text("HPLaserJetMFPM5Dup2I2XText", dssDisallowed10DataItem);
                        fHPLaserJetMFPM5Dup2I2XText.UIMap.Scope = UIASeachScope.Children;
                        fHPLaserJetMFPM5Dup2I2XText.UIMap.Index = 2;
                        fHPLaserJetMFPM5Dup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet MFP M527");
                        fHPLaserJetMFPM5Dup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fHPLaserJetMFPM5Dup2I2XText;
                }
            }

            /// <summary>
            /// Gets Reference to FutureSmart4452Text
            /// </summary>
            public Text FutureSmart4452Text
            {
                get
                {
                    if (null == fFutureSmart4452Text)
                    {
                        fFutureSmart4452Text = new Text("FutureSmart4452Text", dssDisallowed10DataItem);
                        fFutureSmart4452Text.UIMap.Scope = UIASeachScope.Children;
                        fFutureSmart4452Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"FutureSmart 4 (4.5) (2405013_016307)");
                        fFutureSmart4452Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fFutureSmart4452Text;
                }
            }

            /// <summary>
            /// Gets Reference to AddDeviceButtonButton
            /// </summary>
            public Button AddDeviceButtonButton
            {
                get
                {
                    if (null == fAddDeviceButtonButton)
                    {
                        fAddDeviceButtonButton = new Button("AddDeviceButtonButton", ServiceConfigurCustom);
                        fAddDeviceButtonButton.UIMap.Scope = UIASeachScope.Children;
                        fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Device...");
                        fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"F312568F-16E2-4717-876C-9A076CE2602B");
                        fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fAddDeviceButtonButton;
                }
            }

            /// <summary>
            /// Gets Reference to AddDeviceTextBlText
            /// </summary>
            public Text AddDeviceTextBlText
            {
                get
                {
                    if (null == fAddDeviceTextBlText)
                    {
                        fAddDeviceTextBlText = new Text("AddDeviceTextBlText", AddDeviceButtonButton);
                        fAddDeviceTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fAddDeviceTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Device...");
                        fAddDeviceTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAddDeviceTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to ExportButtonef5Button
            /// </summary>
            public Button ExportButtonef5Button
            {
                get
                {
                    if (null == fExportButtonef5Button)
                    {
                        fExportButtonef5Button = new Button("ExportButtonef5Button", ServiceConfigurCustom);
                        fExportButtonef5Button.UIMap.Scope = UIASeachScope.Children;
                        fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                        fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ef506fe9-b864-4efe-a960-ad04e56aab91");
                        fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fExportButtonef5Button;
                }
            }

            /// <summary>
            /// Gets Reference to ExportTextBlockText
            /// </summary>
            public Text ExportTextBlockText
            {
                get
                {
                    if (null == fExportTextBlockText)
                    {
                        fExportTextBlockText = new Text("ExportTextBlockText", ExportButtonef5Button);
                        fExportTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                        fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fExportTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to RemoveDeviceButButton
            /// </summary>
            public Button RemoveDeviceButButton
            {
                get
                {
                    if (null == fRemoveDeviceButButton)
                    {
                        fRemoveDeviceButButton = new Button("RemoveDeviceButButton", ServiceConfigurCustom);
                        fRemoveDeviceButButton.UIMap.Scope = UIASeachScope.Children;
                        fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Device...");
                        fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6f0bbda8-ae72-4b07-bd10-508b3cd6df98");
                        fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fRemoveDeviceButButton;
                }
            }

            /// <summary>
            /// Gets Reference to RemoveDeviceTexText
            /// </summary>
            public Text RemoveDeviceTexText
            {
                get
                {
                    if (null == fRemoveDeviceTexText)
                    {
                        fRemoveDeviceTexText = new Text("RemoveDeviceTexText", RemoveDeviceButButton);
                        fRemoveDeviceTexText.UIMap.Scope = UIASeachScope.Children;
                        fRemoveDeviceTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Device...");
                        fRemoveDeviceTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fRemoveDeviceTexText;
                }
            }

            /// <summary>
            /// Gets Reference to ImportButtona69Button
            /// </summary>
            public Button ImportButtona69Button
            {
                get
                {
                    if (null == fImportButtona69Button)
                    {
                        fImportButtona69Button = new Button("ImportButtona69Button", ServiceConfigurCustom);
                        fImportButtona69Button.UIMap.Scope = UIASeachScope.Children;
                        fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import");
                        fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a694c1f5-ca51-45dc-ae40-8decc9704ca5");
                        fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fImportButtona69Button;
                }
            }

            /// <summary>
            /// Gets Reference to ImportTextBlockText
            /// </summary>
            public Text ImportTextBlockText
            {
                get
                {
                    if (null == fImportTextBlockText)
                    {
                        fImportTextBlockText = new Text("ImportTextBlockText", ImportButtona69Button);
                        fImportTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fImportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import");
                        fImportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fImportTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to CreateTemplateBButton
            /// </summary>
            public Button CreateTemplateBButton
            {
                get
                {
                    if (null == fCreateTemplateBButton)
                    {
                        fCreateTemplateBButton = new Button("CreateTemplateBButton", ServiceConfigurCustom);
                        fCreateTemplateBButton.UIMap.Scope = UIASeachScope.Children;
                        fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create Template");
                        fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4C50BE02-6C60-4097-9595-ACF2CC3D5F50");
                        fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fCreateTemplateBButton;
                }
            }

            /// <summary>
            /// Gets Reference to CreateTemplateTText
            /// </summary>
            public Text CreateTemplateTText
            {
                get
                {
                    if (null == fCreateTemplateTText)
                    {
                        fCreateTemplateTText = new Text("CreateTemplateTText", CreateTemplateBButton);
                        fCreateTemplateTText.UIMap.Scope = UIASeachScope.Children;
                        fCreateTemplateTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create Template");
                        fCreateTemplateTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fCreateTemplateTText;
                }
            }

            /// <summary>
            /// Gets Reference to DeviceSignInButButton
            /// </summary>
            public Button DeviceSignInButButton
            {
                get
                {
                    if (null == fDeviceSignInButButton)
                    {
                        fDeviceSignInButButton = new Button("DeviceSignInButButton", ServiceConfigurCustom);
                        fDeviceSignInButButton.UIMap.Scope = UIASeachScope.Children;
                        fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Sign In...");
                        fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mDeviceSignInButton");
                        fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fDeviceSignInButButton;
                }
            }

            /// <summary>
            /// Gets Reference to DeviceSignInTexText
            /// </summary>
            public Text DeviceSignInTexText
            {
                get
                {
                    if (null == fDeviceSignInTexText)
                    {
                        fDeviceSignInTexText = new Text("DeviceSignInTexText", DeviceSignInButButton);
                        fDeviceSignInTexText.UIMap.Scope = UIASeachScope.Children;
                        fDeviceSignInTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Sign In...");
                        fDeviceSignInTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fDeviceSignInTexText;
                }
            }

            /// <summary>
            /// Gets Reference to TotalDevicesText
            /// </summary>
            public Text TotalDevicesText
            {
                get
                {
                    if (null == fTotalDevicesText)
                    {
                        fTotalDevicesText = new Text("TotalDevicesText", ServiceConfigurCustom);
                        fTotalDevicesText.UIMap.Scope = UIASeachScope.Children;
                        fTotalDevicesText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Total Devices");
                        fTotalDevicesText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fTotalDevicesText;
                }
            }

            /// <summary>
            /// Gets Reference to TotalDevicesTexText
            /// </summary>
            public Text TotalDevicesTexText
            {
                get
                {
                    if (null == fTotalDevicesTexText)
                    {
                        fTotalDevicesTexText = new Text("TotalDevicesTexText", TotalDevicesText);
                        fTotalDevicesTexText.UIMap.Scope = UIASeachScope.Children;
                        fTotalDevicesTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Total Devices");
                        fTotalDevicesTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fTotalDevicesTexText;
                }
            }

            /// <summary>
            /// Gets Reference to A2Text82f844376Text
            /// </summary>
            public Text A2Text82f844376Text
            {
                get
                {
                    if (null == fA2Text82f844376Text)
                    {
                        fA2Text82f844376Text = new Text("A2Text82f844376Text", ServiceConfigurCustom);
                        fA2Text82f844376Text.UIMap.Scope = UIASeachScope.Children;
                        fA2Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"2");
                        fA2Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"82f84437-601e-4562-a536-33b7ebcbf6d7");
                        fA2Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fA2Text82f844376Text;
                }
            }

            /// <summary>
            /// Gets Reference to A2TextBlockText
            /// </summary>
            public Text A2TextBlockText
            {
                get
                {
                    if (null == fA2TextBlockText)
                    {
                        fA2TextBlockText = new Text("A2TextBlockText", A2Text82f844376Text);
                        fA2TextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fA2TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"2");
                        fA2TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fA2TextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to ConfigureDeviceButton
            /// </summary>
            public Button ConfigureDeviceButton
            {
                get
                {
                    if (null == fConfigureDeviceButton)
                    {
                        fConfigureDeviceButton = new Button("ConfigureDeviceButton", ServiceConfigurCustom);
                        fConfigureDeviceButton.UIMap.Scope = UIASeachScope.Children;
                        fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Configure Device...");
                        fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"cc06ce85-fb0a-4048-8b41-968e5c947ca3");
                        fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fConfigureDeviceButton;
                }
            }

            /// <summary>
            /// Gets Reference to ConfigureDeviceText
            /// </summary>
            public Text ConfigureDeviceText
            {
                get
                {
                    if (null == fConfigureDeviceText)
                    {
                        fConfigureDeviceText = new Text("ConfigureDeviceText", ConfigureDeviceButton);
                        fConfigureDeviceText.UIMap.Scope = UIASeachScope.Children;
                        fConfigureDeviceText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Configure Device...");
                        fConfigureDeviceText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fConfigureDeviceText;
                }
            }

            /// <summary>
            /// Gets Reference to TemplateConfiguTabItem
            /// </summary>
            public TabItem TemplateConfiguTabItem
            {
                get
                {
                    if (null == fTemplateConfiguTabItem)
                    {
                        fTemplateConfiguTabItem = new TabItem("TemplateConfiguTabItem", TabControlec0fdTab);
                        fTemplateConfiguTabItem.UIMap.Scope = UIASeachScope.Children;
                        fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                        fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AC05F9B9-A7D8-4b34-80E7-910FB9870D47");
                        fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fTemplateConfiguTabItem;
                }
            }

            /// <summary>
            /// Gets Reference to TemplateConfiguText
            /// </summary>
            public Text TemplateConfiguText
            {
                get
                {
                    if (null == fTemplateConfiguText)
                    {
                        fTemplateConfiguText = new Text("TemplateConfiguText", TemplateConfiguTabItem);
                        fTemplateConfiguText.UIMap.Scope = UIASeachScope.Children;
                        fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                        fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fTemplateConfiguText;
                }
            }

            /// <summary>
            /// Gets Reference to LogTabItem9b4f3TabItem
            /// </summary>
            public TabItem LogTabItem9b4f3TabItem
            {
                get
                {
                    if (null == fLogTabItem9b4f3TabItem)
                    {
                        fLogTabItem9b4f3TabItem = new TabItem("LogTabItem9b4f3TabItem", TabControlec0fdTab);
                        fLogTabItem9b4f3TabItem.UIMap.Scope = UIASeachScope.Children;
                        fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                        fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9b4f34bb-d75a-4080-9be3-1c50ec31c5b6");
                        fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fLogTabItem9b4f3TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to LogTextBlockText
            /// </summary>
            public Text LogTextBlockText
            {
                get
                {
                    if (null == fLogTextBlockText)
                    {
                        fLogTextBlockText = new Text("LogTextBlockText", LogTabItem9b4f3TabItem);
                        fLogTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                        fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fLogTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup7TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup7TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup7TabItem)
                    {
                        fSystemWindowsCoDup7TabItem = new TabItem("SystemWindowsCoDup7TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup7TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3AC8D4A8-3B06-421A-911B-E8CA248A9ED4");
                        fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup7TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to SecurityTextmSeText
            /// </summary>
            public Text SecurityTextmSeText
            {
                get
                {
                    if (null == fSecurityTextmSeText)
                    {
                        fSecurityTextmSeText = new Text("SecurityTextmSeText", SystemWindowsCoDup7TabItem);
                        fSecurityTextmSeText.UIMap.Scope = UIASeachScope.Children;
                        fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                        fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mSecurityTabLabel");
                        fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fSecurityTextmSeText;
                }
            }

            /// <summary>
            /// Gets Reference to SecurityTextBloText
            /// </summary>
            public Text SecurityTextBloText
            {
                get
                {
                    if (null == fSecurityTextBloText)
                    {
                        fSecurityTextBloText = new Text("SecurityTextBloText", SecurityTextmSeText);
                        fSecurityTextBloText.UIMap.Scope = UIASeachScope.Children;
                        fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                        fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fSecurityTextBloText;
                }
            }

            /// <summary>
            /// Gets Reference to Text8A7A84DB894Text
            /// </summary>
            public Text Text8A7A84DB894Text
            {
                get
                {
                    if (null == fText8A7A84DB894Text)
                    {
                        fText8A7A84DB894Text = new Text("Text8A7A84DB894Text", SystemWindowsCoDup7TabItem);
                        fText8A7A84DB894Text.UIMap.Scope = UIASeachScope.Children;
                        fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                        fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8A7A84DB-8945-40E1-A0F9-C40DDD129739");
                        fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText8A7A84DB894Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text16F78FB18FFText
            /// </summary>
            public Text Text16F78FB18FFText
            {
                get
                {
                    if (null == fText16F78FB18FFText)
                    {
                        fText16F78FB18FFText = new Text("Text16F78FB18FFText", SystemWindowsCoDup7TabItem);
                        fText16F78FB18FFText.UIMap.Scope = UIASeachScope.Children;
                        fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16F78FB1-8FF9-4B0D-8251-FB09F520EA73");
                        fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText16F78FB18FFText;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup8TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup8TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup8TabItem)
                    {
                        fSystemWindowsCoDup8TabItem = new TabItem("SystemWindowsCoDup8TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup8TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1678607C-20BF-4137-8238-C9D46EA8FF70");
                        fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup8TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to AnalyticsTextmAText
            /// </summary>
            public Text AnalyticsTextmAText
            {
                get
                {
                    if (null == fAnalyticsTextmAText)
                    {
                        fAnalyticsTextmAText = new Text("AnalyticsTextmAText", SystemWindowsCoDup8TabItem);
                        fAnalyticsTextmAText.UIMap.Scope = UIASeachScope.Children;
                        fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                        fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAnalyticsTabLabel");
                        fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fAnalyticsTextmAText;
                }
            }

            /// <summary>
            /// Gets Reference to AnalyticsTextBlText
            /// </summary>
            public Text AnalyticsTextBlText
            {
                get
                {
                    if (null == fAnalyticsTextBlText)
                    {
                        fAnalyticsTextBlText = new Text("AnalyticsTextBlText", AnalyticsTextmAText);
                        fAnalyticsTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                        fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAnalyticsTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to AboutTabItemf45TabItem
            /// </summary>
            public TabItem AboutTabItemf45TabItem
            {
                get
                {
                    if (null == fAboutTabItemf45TabItem)
                    {
                        fAboutTabItemf45TabItem = new TabItem("AboutTabItemf45TabItem", TabControlec0fdTab);
                        fAboutTabItemf45TabItem.UIMap.Scope = UIASeachScope.Children;
                        fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                        fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f45c22d9-f77a-481a-95bc-09cdff03e131");
                        fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fAboutTabItemf45TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to AboutTextBlockText
            /// </summary>
            public Text AboutTextBlockText
            {
                get
                {
                    if (null == fAboutTextBlockText)
                    {
                        fAboutTextBlockText = new Text("AboutTextBlockText", AboutTabItemf45TabItem);
                        fAboutTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                        fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAboutTextBlockText;
                }
            }
        }
    }
}

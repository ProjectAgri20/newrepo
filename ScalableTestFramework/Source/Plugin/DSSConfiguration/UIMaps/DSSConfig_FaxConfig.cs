//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------

using TopCat.Core;

namespace HP.ScalableTest.Plugin.DSSConfiguration.UIMaps
{
    using System;
    using TopCat.TestApi.Enums;
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class DSSConfig_FaxConfig
    {
        /// <summary>
        /// Backing field for HPDigitalSendinWindow property
        /// </summary>
        private Window fHPDigitalSendinWindow;

        /// <summary>
        /// Backing field for PopupWindow property
        /// </summary>
        private Window fPopupWindow;

        /// <summary>
        /// Backing field for ScrollViewerDroPane property
        /// </summary>
        private Pane fScrollViewerDroPane;

        /// <summary>
        /// Backing field for LANFaxServiceLiDup0ListItem property
        /// </summary>
        private ListItem fLANFaxServiceLiDup0ListItem;

        /// <summary>
        /// Backing field for LANFaxServiceTeDup0Text property
        /// </summary>
        private Text fLANFaxServiceTeDup0Text;

        /// <summary>
        /// Backing field for InternetFaxServDup0ListItem property
        /// </summary>
        private ListItem fInternetFaxServDup0ListItem;

        /// <summary>
        /// Backing field for InternetFaxServDup0Text property
        /// </summary>
        private Text fInternetFaxServDup0Text;

        /// <summary>
        /// Backing field for ScrollBarVerticDup0ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup0ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup0ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup0ScrollBar;

        /// <summary>
        /// Backing field for HPDigitalSendinTitleBar property
        /// </summary>
        private TitleBar fHPDigitalSendinTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyMenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyMenuBar;

        /// <summary>
        /// Backing field for SystemItem1MenuItem property
        /// </summary>
        private MenuItem fSystemItem1MenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizButton property
        /// </summary>
        private Button fMinimizeMinimizButton;

        /// <summary>
        /// Backing field for RestoreRestoreButton property
        /// </summary>
        private Button fRestoreRestoreButton;

        /// <summary>
        /// Backing field for CloseCloseButton property
        /// </summary>
        private Button fCloseCloseButton;

        /// <summary>
        /// Backing field for HelpButtonCB8CFButton property
        /// </summary>
        private Button fHelpButtonCB8CFButton;

        /// <summary>
        /// Backing field for HelpTextBlockText property
        /// </summary>
        private Text fHelpTextBlockText;

        /// <summary>
        /// Backing field for ApplyButton property
        /// </summary>
        private Button fApplyButton61E2Button;

        /// <summary>
        /// Backing field for ApplyTextBlockText property
        /// </summary>
        private Text fApplyTextBlockText;

        /// <summary>
        /// Backing field for CancelButton65CButton property
        /// </summary>
        private Button fCancelButton65CButton;

        /// <summary>
        /// Backing field for CancelTextBlockText property
        /// </summary>
        private Text fCancelTextBlockText;

        /// <summary>
        /// Backing field for OKButton property
        /// </summary>
        private Button fOKButtonCC2EF49Button;

        /// <summary>
        /// Backing field for OKTextBlockText property
        /// </summary>
        private Text fOKTextBlockText;

        /// <summary>
        /// Backing field for TabControlec0fdTab property
        /// </summary>
        private Tab fTabControlec0fdTab;

        /// <summary>
        /// Backing field for SystemWindowsCoDup0TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup0TabItem;

        /// <summary>
        /// Backing field for GeneralTextmGenText property
        /// </summary>
        private Text fGeneralTextmGenText;

        /// <summary>
        /// Backing field for GeneralTextBlocText property
        /// </summary>
        private Text fGeneralTextBlocText;

        /// <summary>
        /// Backing field for Text933345b04e3Text property
        /// </summary>
        private Text fText933345b04e3Text;

        /// <summary>
        /// Backing field for Text786caf67344Text property
        /// </summary>
        private Text fText786caf67344Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup1TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup1TabItem;

        /// <summary>
        /// Backing field for AuthenticationTDup0Text property
        /// </summary>
        private Text fAuthenticationTDup0Text;

        /// <summary>
        /// Backing field for AuthenticationTDup1Text property
        /// </summary>
        private Text fAuthenticationTDup1Text;

        /// <summary>
        /// Backing field for Text31EC91730B9Text property
        /// </summary>
        private Text fText31EC91730B9Text;

        /// <summary>
        /// Backing field for TextA479C271445Text property
        /// </summary>
        private Text fTextA479C271445Text;

        /// <summary>
        /// Backing field for EmailTabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup2TabItem;

        /// <summary>
        /// Backing field for EmailTextmEmailText property
        /// </summary>
        private Text fEmailTextmEmailText;

        /// <summary>
        /// Backing field for EmailTextBlockText property
        /// </summary>
        private Text fEmailTextBlockText;

        /// <summary>
        /// Backing field for Text32de714a8bdText property
        /// </summary>
        private Text fText32de714a8bdText;

        /// <summary>
        /// Backing field for Text3b2a8761f4fText property
        /// </summary>
        private Text fText3b2a8761f4fText;

        /// <summary>
        /// Backing field for TextBlockDup0Text property
        /// </summary>
        private Text fTextBlockDup0Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup3TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup3TabItem;

        /// <summary>
        /// Backing field for FaxTextmFaxTabLText property
        /// </summary>
        private Text fFaxTextmFaxTabLText;

        /// <summary>
        /// Backing field for FaxTextBlockText property
        /// </summary>
        private Text fFaxTextBlockText;

        /// <summary>
        /// Backing field for TextD1ED4F16F38Text property
        /// </summary>
        private Text fTextD1ED4F16F38Text;

        /// <summary>
        /// Backing field for TextBlockDup1Text property
        /// </summary>
        private Text fTextBlockDup1Text;

        /// <summary>
        /// Backing field for Text7DDE04FD251Text property
        /// </summary>
        private Text fText7DDE04FD251Text;

        /// <summary>
        /// Backing field for TextBlockDup2Text property
        /// </summary>
        private Text fTextBlockDup2Text;

        /// <summary>
        /// Backing field for ServiceConfigurCustom property
        /// </summary>
        private Custom fServiceConfigurCustom;

        /// <summary>
        /// Backing field for ScrollViewerPane property
        /// </summary>
        private Pane fScrollViewerPane;

        /// <summary>
        /// Backing field for ErrorConflictUsCustom property
        /// </summary>
        private Custom fErrorConflictUsCustom;

        /// <summary>
        /// Backing field for ImageImage property
        /// </summary>
        private Image fImageImage;

        /// <summary>
        /// Backing field for TextBlock33CC58Text property
        /// </summary>
        private Text fTextBlock33CC58Text;

        /// <summary>
        /// Backing field for EnableFaxSendChCheckBox property
        /// </summary>
        private CheckBox fEnableFaxSendChCheckBox;

        /// <summary>
        /// Backing field for EnableFaxSendTeText property
        /// </summary>
        private Text fEnableFaxSendTeText;

        /// <summary>
        /// Backing field for FaxSendMethodTeDup0Text property
        /// </summary>
        private Text fFaxSendMethodTeDup0Text;

        /// <summary>
        /// Backing field for FaxSendMethodTeDup1Text property
        /// </summary>
        private Text fFaxSendMethodTeDup1Text;

        /// <summary>
        /// Backing field for ComboBoxf9a5a65ComboBox property
        /// </summary>
        private ComboBox fComboBoxf9a5a65ComboBox;

        /// <summary>
        /// Backing field for LANFaxServiceLiDup1ListItem property
        /// </summary>
        private ListItem fLANFaxServiceLiDup1ListItem;

        /// <summary>
        /// Backing field for LANFaxServiceTeDup1Text property
        /// </summary>
        private Text fLANFaxServiceTeDup1Text;

        /// <summary>
        /// Backing field for InternetFaxServDup1ListItem property
        /// </summary>
        private ListItem fInternetFaxServDup1ListItem;

        /// <summary>
        /// Backing field for InternetFaxServDup1Text property
        /// </summary>
        private Text fInternetFaxServDup1Text;

        /// <summary>
        /// Backing field for InternetFaxSetuGroup property
        /// </summary>
        private Group fInternetFaxSetuGroup;

        /// <summary>
        /// Backing field for LANFaxSetupGrouGroup property
        /// </summary>
        private Group fLANFaxSetupGrouGroup;

        /// <summary>
        /// Backing field for LANFaxSetupTextText property
        /// </summary>
        private Text fLANFaxSetupTextText;

        /// <summary>
        /// Backing field for LanFaxServiceSeGroup property
        /// </summary>
        private Group fLanFaxServiceSeGroup;

        /// <summary>
        /// Backing field for LanFaxServiceSeText property
        /// </summary>
        private Text fLanFaxServiceSeText;

        /// <summary>
        /// Backing field for ThirdPartyLANFaDup0Text property
        /// </summary>
        private Text fThirdPartyLANFaDup0Text;

        /// <summary>
        /// Backing field for ThirdPartyLANFaDup1Text property
        /// </summary>
        private Text fThirdPartyLANFaDup1Text;

        /// <summary>
        /// Backing field for ComboBox411fa59ComboBox property
        /// </summary>
        private ComboBox fComboBox411fa59ComboBox;

        /// <summary>
        /// Backing field for ACCPACListBoxItListItem property
        /// </summary>
        private ListItem fACCPACListBoxItListItem;

        /// <summary>
        /// Backing field for ACCPACTextBlockText property
        /// </summary>
        private Text fACCPACTextBlockText;

        /// <summary>
        /// Backing field for AnnyWayOfficeEDListItem property
        /// </summary>
        private ListItem fAnnyWayOfficeEDListItem;

        /// <summary>
        /// Backing field for AnnyWayOfficeEDText property
        /// </summary>
        private Text fAnnyWayOfficeEDText;

        /// <summary>
        /// Backing field for BiscomFAXCOMLisListItem property
        /// </summary>
        private ListItem fBiscomFAXCOMLisListItem;

        /// <summary>
        /// Backing field for BiscomFAXCOMTexText property
        /// </summary>
        private Text fBiscomFAXCOMTexText;

        /// <summary>
        /// Backing field for CaptarisRightFADup0ListItem property
        /// </summary>
        private ListItem fCaptarisRightFADup0ListItem;

        /// <summary>
        /// Backing field for CaptarisRightFADup0Text property
        /// </summary>
        private Text fCaptarisRightFADup0Text;

        /// <summary>
        /// Backing field for CaptarisRightFADup1ListItem property
        /// </summary>
        private ListItem fCaptarisRightFADup1ListItem;

        /// <summary>
        /// Backing field for CaptarisRightFADup1Text property
        /// </summary>
        private Text fCaptarisRightFADup1Text;

        /// <summary>
        /// Backing field for CaptarisRightFADup2ListItem property
        /// </summary>
        private ListItem fCaptarisRightFADup2ListItem;

        /// <summary>
        /// Backing field for CaptarisRightFADup2Text property
        /// </summary>
        private Text fCaptarisRightFADup2Text;

        /// <summary>
        /// Backing field for CastelleFaxPresDup0ListItem property
        /// </summary>
        private ListItem fCastelleFaxPresDup0ListItem;

        /// <summary>
        /// Backing field for CastelleFaxPresDup0Text property
        /// </summary>
        private Text fCastelleFaxPresDup0Text;

        /// <summary>
        /// Backing field for CastelleFaxPresDup1ListItem property
        /// </summary>
        private ListItem fCastelleFaxPresDup1ListItem;

        /// <summary>
        /// Backing field for CastelleFaxPresDup1Text property
        /// </summary>
        private Text fCastelleFaxPresDup1Text;

        /// <summary>
        /// Backing field for CycosmrsUnifiedListItem property
        /// </summary>
        private ListItem fCycosmrsUnifiedListItem;

        /// <summary>
        /// Backing field for CycosmrsUnifiedText property
        /// </summary>
        private Text fCycosmrsUnifiedText;

        /// <summary>
        /// Backing field for EskerLanFaxListListItem property
        /// </summary>
        private ListItem fEskerLanFaxListListItem;

        /// <summary>
        /// Backing field for EskerLanFaxTextText property
        /// </summary>
        private Text fEskerLanFaxTextText;

        /// <summary>
        /// Backing field for EskerPulseFaxLiListItem property
        /// </summary>
        private ListItem fEskerPulseFaxLiListItem;

        /// <summary>
        /// Backing field for EskerPulseFaxTeText property
        /// </summary>
        private Text fEskerPulseFaxTeText;

        /// <summary>
        /// Backing field for FACSysFaxMessagListItem property
        /// </summary>
        private ListItem fFACSysFaxMessagListItem;

        /// <summary>
        /// Backing field for FACSysFaxMessagText property
        /// </summary>
        private Text fFACSysFaxMessagText;

        /// <summary>
        /// Backing field for FenestraeFaxinaListItem property
        /// </summary>
        private ListItem fFenestraeFaxinaListItem;

        /// <summary>
        /// Backing field for FenestraeFaxinaText property
        /// </summary>
        private Text fFenestraeFaxinaText;

        /// <summary>
        /// Backing field for GFIFAXmakerListListItem property
        /// </summary>
        private ListItem fGFIFAXmakerListListItem;

        /// <summary>
        /// Backing field for GFIFAXmakerTextText property
        /// </summary>
        private Text fGFIFAXmakerTextText;

        /// <summary>
        /// Backing field for GoldFaxListBoxIListItem property
        /// </summary>
        private ListItem fGoldFaxListBoxIListItem;

        /// <summary>
        /// Backing field for GoldFaxTextBlocText property
        /// </summary>
        private Text fGoldFaxTextBlocText;

        /// <summary>
        /// Backing field for ImecomIntegralFListItem property
        /// </summary>
        private ListItem fImecomIntegralFListItem;

        /// <summary>
        /// Backing field for ImecomIntegralFText property
        /// </summary>
        private Text fImecomIntegralFText;

        /// <summary>
        /// Backing field for INTERCOPEFaxPluListItem property
        /// </summary>
        private ListItem fINTERCOPEFaxPluListItem;

        /// <summary>
        /// Backing field for INTERCOPEFaxPluText property
        /// </summary>
        private Text fINTERCOPEFaxPluText;

        /// <summary>
        /// Backing field for InterstarLightnListItem property
        /// </summary>
        private ListItem fInterstarLightnListItem;

        /// <summary>
        /// Backing field for InterstarLightnText property
        /// </summary>
        private Text fInterstarLightnText;

        /// <summary>
        /// Backing field for GenericLANFaxprDup0ListItem property
        /// </summary>
        private ListItem fGenericLANFaxprDup0ListItem;

        /// <summary>
        /// Backing field for GenericLANFaxprDup0Text property
        /// </summary>
        private Text fGenericLANFaxprDup0Text;

        /// <summary>
        /// Backing field for GenericLANFaxprDup1ListItem property
        /// </summary>
        private ListItem fGenericLANFaxprDup1ListItem;

        /// <summary>
        /// Backing field for GenericLANFaxprDup1Text property
        /// </summary>
        private Text fGenericLANFaxprDup1Text;

        /// <summary>
        /// Backing field for NETSatisFAXtionListItem property
        /// </summary>
        private ListItem fNETSatisFAXtionListItem;

        /// <summary>
        /// Backing field for NETSatisFAXtionText property
        /// </summary>
        private Text fNETSatisFAXtionText;

        /// <summary>
        /// Backing field for ObjectFaxListBoListItem property
        /// </summary>
        private ListItem fObjectFaxListBoListItem;

        /// <summary>
        /// Backing field for ObjectFaxTextBlText property
        /// </summary>
        private Text fObjectFaxTextBlText;

        /// <summary>
        /// Backing field for OmtoolListBoxItListItem property
        /// </summary>
        private ListItem fOmtoolListBoxItListItem;

        /// <summary>
        /// Backing field for OmtoolTextBlockText property
        /// </summary>
        private Text fOmtoolTextBlockText;

        /// <summary>
        /// Backing field for RedRockFaxNowLiListItem property
        /// </summary>
        private ListItem fRedRockFaxNowLiListItem;

        /// <summary>
        /// Backing field for RedRockFaxNowTeText property
        /// </summary>
        private Text fRedRockFaxNowTeText;

        /// <summary>
        /// Backing field for RTEFAXListBoxItListItem property
        /// </summary>
        private ListItem fRTEFAXListBoxItListItem;

        /// <summary>
        /// Backing field for RTEFAXTextBlockText property
        /// </summary>
        private Text fRTEFAXTextBlockText;

        /// <summary>
        /// Backing field for TobitDvISEListBListItem property
        /// </summary>
        private ListItem fTobitDvISEListBListItem;

        /// <summary>
        /// Backing field for TobitDvISETextBText property
        /// </summary>
        private Text fTobitDvISETextBText;

        /// <summary>
        /// Backing field for TOPCALLListBoxIListItem property
        /// </summary>
        private ListItem fTOPCALLListBoxIListItem;

        /// <summary>
        /// Backing field for TOPCALLTextBlocText property
        /// </summary>
        private Text fTOPCALLTextBlocText;

        /// <summary>
        /// Backing field for ZetafaxListBoxIListItem property
        /// </summary>
        private ListItem fZetafaxListBoxIListItem;

        /// <summary>
        /// Backing field for ZetafaxTextBlocText property
        /// </summary>
        private Text fZetafaxTextBlocText;

        /// <summary>
        /// Backing field for FileFormatText property
        /// </summary>
        private Text fFileFormatText;

        /// <summary>
        /// Backing field for FileFormatTextBText property
        /// </summary>
        private Text fFileFormatTextBText;

        /// <summary>
        /// Backing field for ComboBox454be57ComboBox property
        /// </summary>
        private ComboBox fComboBox454be57ComboBox;

        /// <summary>
        /// Backing field for MTIFFG3ListBoxIListItem property
        /// </summary>
        private ListItem fMTIFFG3ListBoxIListItem;

        /// <summary>
        /// Backing field for MTIFFG3TextBlocText property
        /// </summary>
        private Text fMTIFFG3TextBlocText;

        /// <summary>
        /// Backing field for MTIFFG4ListBoxIListItem property
        /// </summary>
        private ListItem fMTIFFG4ListBoxIListItem;

        /// <summary>
        /// Backing field for MTIFFG4TextBlocText property
        /// </summary>
        private Text fMTIFFG4TextBlocText;

        /// <summary>
        /// Backing field for PCL5packedbitLiListItem property
        /// </summary>
        private ListItem fPCL5packedbitLiListItem;

        /// <summary>
        /// Backing field for PCL5packedbitTeText property
        /// </summary>
        private Text fPCL5packedbitTeText;

        /// <summary>
        /// Backing field for PCL5uncompresseListItem property
        /// </summary>
        private ListItem fPCL5uncompresseListItem;

        /// <summary>
        /// Backing field for PCL5uncompresseText property
        /// </summary>
        private Text fPCL5uncompresseText;

        /// <summary>
        /// Backing field for FolderSettingsGGroup property
        /// </summary>
        private Group fFolderSettingsGGroup;

        /// <summary>
        /// Backing field for FolderSettingsTText property
        /// </summary>
        private Text fFolderSettingsTText;

        /// <summary>
        /// Backing field for FolderPathText property
        /// </summary>
        private Text fFolderPathText;

        /// <summary>
        /// Backing field for FolderPathTextBText property
        /// </summary>
        private Text fFolderPathTextBText;

        /// <summary>
        /// Backing field for TextBox963de5ecEdit property
        /// </summary>
        private Edit fTextBox963de5ecEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup0Pane property
        /// </summary>
        private Pane fScrollViewerPARDup0Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup1ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup1ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup1ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup1ScrollBar;

        /// <summary>
        /// Backing field for BrowseButton278Button property
        /// </summary>
        private Button fBrowseButton278Button;

        /// <summary>
        /// Backing field for BrowseTextBlockText property
        /// </summary>
        private Text fBrowseTextBlockText;

        /// <summary>
        /// Backing field for UsernameText property
        /// </summary>
        private Text fUsernameText;

        /// <summary>
        /// Backing field for UsernameTextBloText property
        /// </summary>
        private Text fUsernameTextBloText;

        /// <summary>
        /// Backing field for TextBoxa432c48dEdit property
        /// </summary>
        private Edit fTextBoxa432c48dEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup1Pane property
        /// </summary>
        private Pane fScrollViewerPARDup1Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup2ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup2ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup2ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup2ScrollBar;

        /// <summary>
        /// Backing field for PasswordText property
        /// </summary>
        private Text fPasswordText;

        /// <summary>
        /// Backing field for PasswordTextBloText property
        /// </summary>
        private Text fPasswordTextBloText;

        /// <summary>
        /// Backing field for PasswordBoxcd46Edit property
        /// </summary>
        private Edit fPasswordBoxcd46Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup2Pane property
        /// </summary>
        private Pane fScrollViewerPARDup2Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup3ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup3ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup3ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup3ScrollBar;

        /// <summary>
        /// Backing field for WindowsDomainTeDup0Text property
        /// </summary>
        private Text fWindowsDomainTeDup0Text;

        /// <summary>
        /// Backing field for WindowsDomainTeDup1Text property
        /// </summary>
        private Text fWindowsDomainTeDup1Text;

        /// <summary>
        /// Backing field for TextBox80fa1a93Edit property
        /// </summary>
        private Edit fTextBox80fa1a93Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup3Pane property
        /// </summary>
        private Pane fScrollViewerPARDup3Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup4ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup4ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup4ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup4ScrollBar;

        /// <summary>
        /// Backing field for VerifyFolderAccButton property
        /// </summary>
        private Button fVerifyFolderAccButton;

        /// <summary>
        /// Backing field for VerifyFolderAccText property
        /// </summary>
        private Text fVerifyFolderAccText;

        /// <summary>
        /// Backing field for DialingSettingsGroup property
        /// </summary>
        private Group fDialingSettingsGroup;

        /// <summary>
        /// Backing field for DialingSettingsText property
        /// </summary>
        private Text fDialingSettingsText;

        /// <summary>
        /// Backing field for MaximumRetryAttDup0Text property
        /// </summary>
        private Text fMaximumRetryAttDup0Text;

        /// <summary>
        /// Backing field for MaximumRetryAttDup1Text property
        /// </summary>
        private Text fMaximumRetryAttDup1Text;

        /// <summary>
        /// Backing field for TextBoxa0efb839Edit property
        /// </summary>
        private Edit fTextBoxa0efb839Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup4Pane property
        /// </summary>
        private Pane fScrollViewerPARDup4Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup5ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup5ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup5ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup5ScrollBar;

        /// <summary>
        /// Backing field for RetryIntervalmiDup0Text property
        /// </summary>
        private Text fRetryIntervalmiDup0Text;

        /// <summary>
        /// Backing field for RetryIntervalmiDup1Text property
        /// </summary>
        private Text fRetryIntervalmiDup1Text;

        /// <summary>
        /// Backing field for TextBox1b041501Edit property
        /// </summary>
        private Edit fTextBox1b041501Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup5Pane property
        /// </summary>
        private Pane fScrollViewerPARDup5Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup6ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup6ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup6ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup6ScrollBar;

        /// <summary>
        /// Backing field for InputSettingsGrGroup property
        /// </summary>
        private Group fInputSettingsGrGroup;

        /// <summary>
        /// Backing field for InputSettingsTeText property
        /// </summary>
        private Text fInputSettingsTeText;

        /// <summary>
        /// Backing field for NotificationText property
        /// </summary>
        private Text fNotificationText;

        /// <summary>
        /// Backing field for NotificationTexText property
        /// </summary>
        private Text fNotificationTexText;

        /// <summary>
        /// Backing field for ComboBoxd7ebe04ComboBox property
        /// </summary>
        private ComboBox fComboBoxd7ebe04ComboBox;

        /// <summary>
        /// Backing field for ErrorCorrectionDup0Text property
        /// </summary>
        private Text fErrorCorrectionDup0Text;

        /// <summary>
        /// Backing field for ErrorCorrectionDup1Text property
        /// </summary>
        private Text fErrorCorrectionDup1Text;

        /// <summary>
        /// Backing field for ComboBox7a33df3ComboBox property
        /// </summary>
        private ComboBox fComboBox7a33df3ComboBox;

        /// <summary>
        /// Backing field for NotificationTimDup0Text property
        /// </summary>
        private Text fNotificationTimDup0Text;

        /// <summary>
        /// Backing field for NotificationTimDup1Text property
        /// </summary>
        private Text fNotificationTimDup1Text;

        /// <summary>
        /// Backing field for TextBox025adef9Edit property
        /// </summary>
        private Edit fTextBox025adef9Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup6Pane property
        /// </summary>
        private Pane fScrollViewerPARDup6Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup7ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup7ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup7ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup7ScrollBar;

        /// <summary>
        /// Backing field for OutputSettingsGGroup property
        /// </summary>
        private Group fOutputSettingsGGroup;

        /// <summary>
        /// Backing field for OutputSettingsTText property
        /// </summary>
        private Text fOutputSettingsTText;

        /// <summary>
        /// Backing field for TransmissionSpeDup0Text property
        /// </summary>
        private Text fTransmissionSpeDup0Text;

        /// <summary>
        /// Backing field for TransmissionSpeDup1Text property
        /// </summary>
        private Text fTransmissionSpeDup1Text;

        /// <summary>
        /// Backing field for ComboBox41eac0dComboBox property
        /// </summary>
        private ComboBox fComboBox41eac0dComboBox;

        /// <summary>
        /// Backing field for CoverPageText property
        /// </summary>
        private Text fCoverPageText;

        /// <summary>
        /// Backing field for CoverPageTextBlText property
        /// </summary>
        private Text fCoverPageTextBlText;

        /// <summary>
        /// Backing field for ComboBox8070d42ComboBox property
        /// </summary>
        private ComboBox fComboBox8070d42ComboBox;

        /// <summary>
        /// Backing field for ScrollBarVerticDup8ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup8ScrollBar;

        /// <summary>
        /// Backing field for RepeatButtonLinDup0Button property
        /// </summary>
        private Button fRepeatButtonLinDup0Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup0Button property
        /// </summary>
        private Button fRepeatButtonPagDup0Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup1Button property
        /// </summary>
        private Button fRepeatButtonPagDup1Button;

        /// <summary>
        /// Backing field for ThumbThumb property
        /// </summary>
        private Thumb fThumbThumb;

        /// <summary>
        /// Backing field for RepeatButtonLinDup1Button property
        /// </summary>
        private Button fRepeatButtonLinDup1Button;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup8ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup8ScrollBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup4TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup4TabItem;

        /// <summary>
        /// Backing field for SendtoFolderTexDup0Text property
        /// </summary>
        private Text fSendtoFolderTexDup0Text;

        /// <summary>
        /// Backing field for SendtoFolderTexDup1Text property
        /// </summary>
        private Text fSendtoFolderTexDup1Text;

        /// <summary>
        /// Backing field for Text7a57f43ecb1Text property
        /// </summary>
        private Text fText7a57f43ecb1Text;

        /// <summary>
        /// Backing field for Text654b650dd19Text property
        /// </summary>
        private Text fText654b650dd19Text;

        /// <summary>
        /// Backing field for WorkflowsTabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup5TabItem;

        /// <summary>
        /// Backing field for WorkflowsTextmWText property
        /// </summary>
        private Text fWorkflowsTextmWText;

        /// <summary>
        /// Backing field for WorkflowsTextBlText property
        /// </summary>
        private Text fWorkflowsTextBlText;

        /// <summary>
        /// Backing field for Text22D9C34E84CText property
        /// </summary>
        private Text fText22D9C34E84CText;

        /// <summary>
        /// Backing field for TextC8D15BD39C8Text property
        /// </summary>
        private Text fTextC8D15BD39C8Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup6TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup6TabItem;

        /// <summary>
        /// Backing field for AddressingTextmText property
        /// </summary>
        private Text fAddressingTextmText;

        /// <summary>
        /// Backing field for AddressingTextBText property
        /// </summary>
        private Text fAddressingTextBText;

        /// <summary>
        /// Backing field for Text47EB5CBA4D1Text property
        /// </summary>
        private Text fText47EB5CBA4D1Text;

        /// <summary>
        /// Backing field for Text0757E148179Text property
        /// </summary>
        private Text fText0757E148179Text;

        /// <summary>
        /// Backing field for DeviceConfiguraTabItem property
        /// </summary>
        private TabItem fDeviceConfiguraTabItem;

        /// <summary>
        /// Backing field for DeviceConfiguraText property
        /// </summary>
        private Text fDeviceConfiguraText;

        /// <summary>
        /// Backing field for TemplateConfiguTabItem property
        /// </summary>
        private TabItem fTemplateConfiguTabItem;

        /// <summary>
        /// Backing field for TemplateConfiguText property
        /// </summary>
        private Text fTemplateConfiguText;

        /// <summary>
        /// Backing field for LogTabItem9b4f3TabItem property
        /// </summary>
        private TabItem fLogTabItem9b4f3TabItem;

        /// <summary>
        /// Backing field for LogTextBlockText property
        /// </summary>
        private Text fLogTextBlockText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup7TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup7TabItem;

        /// <summary>
        /// Backing field for SecurityTextmSeText property
        /// </summary>
        private Text fSecurityTextmSeText;

        /// <summary>
        /// Backing field for SecurityTextBloText property
        /// </summary>
        private Text fSecurityTextBloText;

        /// <summary>
        /// Backing field for Text8A7A84DB894Text property
        /// </summary>
        private Text fText8A7A84DB894Text;

        /// <summary>
        /// Backing field for Text16F78FB18FFText property
        /// </summary>
        private Text fText16F78FB18FFText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup8TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup8TabItem;

        /// <summary>
        /// Backing field for AnalyticsTextmAText property
        /// </summary>
        private Text fAnalyticsTextmAText;

        /// <summary>
        /// Backing field for AnalyticsTextBlText property
        /// </summary>
        private Text fAnalyticsTextBlText;

        /// <summary>
        /// Backing field for AboutTabItemf45TabItem property
        /// </summary>
        private TabItem fAboutTabItemf45TabItem;

        /// <summary>
        /// Backing field for AboutTextBlockText property
        /// </summary>
        private Text fAboutTextBlockText;

        /// <summary>
        /// The Ip Address
        /// </summary>
        private string _ipaddress;

        /// <summary>
        /// Initializes a new instance of the <see cref="DSSConfig_FaxConfig"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public DSSConfig_FaxConfig(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DSSConfig_FaxConfig"/> class using the default UIAFramework.
        /// </summary>
        /// <param name="address">
        /// The IP address.
        /// </param>
        public DSSConfig_FaxConfig(string address)
        {
            Desktop = new Desktop(UIAFramework.ManagedUIA);
            _ipaddress = address;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DSSConfig_FaxConfig"/> class using the default UIAFramework.
        /// </summary>
        public DSSConfig_FaxConfig()
        {
            Desktop = new Desktop();
        }

       

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Window HPDigitalSendinWindow
        {
            get
            {
                if (null == fHPDigitalSendinWindow)
                {
                    fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                    fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_ipaddress})");
                }

                return fHPDigitalSendinWindow;
            }
        }

        /// <summary>
        /// Checks for screen avalability
        /// </summary>
        /// <param name="timeout">
        /// The amount of time allowed for the screen avalability
        /// </param>
        public bool WaitForAvailable(int timeout)
        {
            try
            {
                if (HPDigitalSendinWindow.WaitForAvailable(timeout) == ResultCode.Passed)
                {
                    if (DeviceConfiguraTabItem.WaitForAvailable(timeout) == ResultCode.Passed)
                    {
                        return true;
                    }
                }
            }
            catch(Exception)
            {
                return false;
            }

            return false;
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Window PopupWindow
        {
            get
            {
                if (null == fPopupWindow)
                {
                    fPopupWindow = new Window("PopupWindow", HPDigitalSendinWindow);
                    fPopupWindow.UIMap.Scope = UIASeachScope.Children;
                    fPopupWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Popup");
                }

                return fPopupWindow;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerDroPane
        {
            get
            {
                if (null == fScrollViewerDroPane)
                {
                    fScrollViewerDroPane = new Pane("ScrollViewerDroPane", PopupWindow);
                    fScrollViewerDroPane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerDroPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerDroPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDownScrollViewer");
                }

                return fScrollViewerDroPane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem LANFaxServiceLiDup0ListItem
        {
            get
            {
                if (null == fLANFaxServiceLiDup0ListItem)
                {
                    fLANFaxServiceLiDup0ListItem = new ListItem("LANFaxServiceLiDup0ListItem", ScrollViewerDroPane);
                    fLANFaxServiceLiDup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fLANFaxServiceLiDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fLANFaxServiceLiDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LAN Fax Service");
                }

                return fLANFaxServiceLiDup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text LANFaxServiceTeDup0Text
        {
            get
            {
                if (null == fLANFaxServiceTeDup0Text)
                {
                    fLANFaxServiceTeDup0Text = new Text("LANFaxServiceTeDup0Text", LANFaxServiceLiDup0ListItem);
                    fLANFaxServiceTeDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fLANFaxServiceTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLANFaxServiceTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LAN Fax Service");
                }

                return fLANFaxServiceTeDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem InternetFaxServDup0ListItem
        {
            get
            {
                if (null == fInternetFaxServDup0ListItem)
                {
                    fInternetFaxServDup0ListItem = new ListItem("InternetFaxServDup0ListItem", ScrollViewerDroPane);
                    fInternetFaxServDup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fInternetFaxServDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fInternetFaxServDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Internet Fax Service");
                }

                return fInternetFaxServDup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text InternetFaxServDup0Text
        {
            get
            {
                if (null == fInternetFaxServDup0Text)
                {
                    fInternetFaxServDup0Text = new Text("InternetFaxServDup0Text", InternetFaxServDup0ListItem);
                    fInternetFaxServDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fInternetFaxServDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fInternetFaxServDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Internet Fax Service");
                }

                return fInternetFaxServDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup0ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup0ScrollBar)
                {
                    fScrollBarVerticDup0ScrollBar = new ScrollBar("ScrollBarVerticDup0ScrollBar", ScrollViewerDroPane);
                    fScrollBarVerticDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup0ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup0ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup0ScrollBar)
                {
                    fScrollBarHorizoDup0ScrollBar = new ScrollBar("ScrollBarHorizoDup0ScrollBar", ScrollViewerDroPane);
                    fScrollBarHorizoDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup0ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TitleBar HPDigitalSendinTitleBar
        {
            get
            {
                if (null == fHPDigitalSendinTitleBar)
                {
                    fHPDigitalSendinTitleBar = new TitleBar("HPDigitalSendinTitleBar", HPDigitalSendinWindow);
                    fHPDigitalSendinTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_ipaddress})");
                }

                return fHPDigitalSendinTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuBar SystemMenuBarSyMenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyMenuBar)
                {
                    fSystemMenuBarSyMenuBar = new MenuBar("SystemMenuBarSyMenuBar", HPDigitalSendinTitleBar);
                    fSystemMenuBarSyMenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyMenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    fSystemMenuBarSyMenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                }

                return fSystemMenuBarSyMenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuItem SystemItem1MenuItem
        {
            get
            {
                if (null == fSystemItem1MenuItem)
                {
                    fSystemItem1MenuItem = new MenuItem("SystemItem1MenuItem", SystemMenuBarSyMenuBar);
                    fSystemItem1MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    fSystemItem1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                }

                return fSystemItem1MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button MinimizeMinimizButton
        {
            get
            {
                if (null == fMinimizeMinimizButton)
                {
                    fMinimizeMinimizButton = new Button("MinimizeMinimizButton", HPDigitalSendinTitleBar);
                    fMinimizeMinimizButton.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                    fMinimizeMinimizButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                }

                return fMinimizeMinimizButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RestoreRestoreButton
        {
            get
            {
                if (null == fRestoreRestoreButton)
                {
                    fRestoreRestoreButton = new Button("RestoreRestoreButton", HPDigitalSendinTitleBar);
                    fRestoreRestoreButton.UIMap.Scope = UIASeachScope.Children;
                    fRestoreRestoreButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Restore");
                    fRestoreRestoreButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Restore");
                }

                return fRestoreRestoreButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CloseCloseButton
        {
            get
            {
                if (null == fCloseCloseButton)
                {
                    fCloseCloseButton = new Button("CloseCloseButton", HPDigitalSendinTitleBar);
                    fCloseCloseButton.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    fCloseCloseButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                }

                return fCloseCloseButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button HelpButtonCB8CFButton
        {
            get
            {
                if (null == fHelpButtonCB8CFButton)
                {
                    fHelpButtonCB8CFButton = new Button("HelpButtonCB8CFButton", HPDigitalSendinWindow);
                    fHelpButtonCB8CFButton.UIMap.Scope = UIASeachScope.Children;
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CB8CF0C3-DFBE-49b8-B09B-03A34F5D4186");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpButtonCB8CFButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text HelpTextBlockText
        {
            get
            {
                if (null == fHelpTextBlockText)
                {
                    fHelpTextBlockText = new Text("HelpTextBlockText", HelpButtonCB8CFButton);
                    fHelpTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button GlobalApplyButton
        {
            get
            {
                if (null == fApplyButton61E2Button)
                {
                    fApplyButton61E2Button = new Button("ApplyButton", HPDigitalSendinWindow);
                    fApplyButton61E2Button.UIMap.Scope = UIASeachScope.Children;
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"61E2369B-F53B-4662-A361-B3034C4EFF67");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyButton61E2Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ApplyTextBlockText
        {
            get
            {
                if (null == fApplyTextBlockText)
                {
                    fApplyTextBlockText = new Text("ApplyTextBlockText", GlobalApplyButton);
                    fApplyTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CancelButton65CButton
        {
            get
            {
                if (null == fCancelButton65CButton)
                {
                    fCancelButton65CButton = new Button("CancelButton65CButton", HPDigitalSendinWindow);
                    fCancelButton65CButton.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"65C76204-7AB5-4681-B7FD-2D8F02DA6D4B");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelButton65CButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CancelTextBlockText
        {
            get
            {
                if (null == fCancelTextBlockText)
                {
                    fCancelTextBlockText = new Text("CancelTextBlockText", CancelButton65CButton);
                    fCancelTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fCancelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCancelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button OKButtonCC2EF49Button
        {
            get
            {
                if (null == fOKButtonCC2EF49Button)
                {
                    fOKButtonCC2EF49Button = new Button("OKButton", HPDigitalSendinWindow);
                    fOKButtonCC2EF49Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CC2EF491-0BD1-4ac5-9D00-AA61A9D6BA0C");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKButtonCC2EF49Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OKTextBlockText
        {
            get
            {
                if (null == fOKTextBlockText)
                {
                    fOKTextBlockText = new Text("OKTextBlockText", OKButtonCC2EF49Button);
                    fOKTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fOKTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOKTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Tab TabControlec0fdTab
        {
            get
            {
                if (null == fTabControlec0fdTab)
                {
                    fTabControlec0fdTab = new Tab("TabControlec0fdTab", HPDigitalSendinWindow);
                    fTabControlec0fdTab.UIMap.Scope = UIASeachScope.Children;
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ec0fd6cd-2ab8-482f-96a5-d1fa158f38d1");
                }

                return fTabControlec0fdTab;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup0TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup0TabItem)
                {
                    fSystemWindowsCoDup0TabItem = new TabItem("SystemWindowsCoDup0TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup0TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1e2be878-0c03-4404-988c-54d0df925f0f");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup0TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GeneralTextmGenText
        {
            get
            {
                if (null == fGeneralTextmGenText)
                {
                    fGeneralTextmGenText = new Text("GeneralTextmGenText", SystemWindowsCoDup0TabItem);
                    fGeneralTextmGenText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextmGenText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GeneralTextBlocText
        {
            get
            {
                if (null == fGeneralTextBlocText)
                {
                    fGeneralTextBlocText = new Text("GeneralTextBlocText", GeneralTextmGenText);
                    fGeneralTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text933345b04e3Text
        {
            get
            {
                if (null == fText933345b04e3Text)
                {
                    fText933345b04e3Text = new Text("Text933345b04e3Text", SystemWindowsCoDup0TabItem);
                    fText933345b04e3Text.UIMap.Scope = UIASeachScope.Children;
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"933345b0-4e39-44d3-a511-0077f3176ca4");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText933345b04e3Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text786caf67344Text
        {
            get
            {
                if (null == fText786caf67344Text)
                {
                    fText786caf67344Text = new Text("Text786caf67344Text", SystemWindowsCoDup0TabItem);
                    fText786caf67344Text.UIMap.Scope = UIASeachScope.Children;
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"786caf67-344f-4ddc-83a5-b9431fb36731");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText786caf67344Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup1TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup1TabItem)
                {
                    fSystemWindowsCoDup1TabItem = new TabItem("SystemWindowsCoDup1TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup1TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4e90d18a-f33c-43c0-8505-08f4a17169b5");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup1TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AuthenticationTDup0Text
        {
            get
            {
                if (null == fAuthenticationTDup0Text)
                {
                    fAuthenticationTDup0Text = new Text("AuthenticationTDup0Text", SystemWindowsCoDup1TabItem);
                    fAuthenticationTDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AuthenticationTDup1Text
        {
            get
            {
                if (null == fAuthenticationTDup1Text)
                {
                    fAuthenticationTDup1Text = new Text("AuthenticationTDup1Text", AuthenticationTDup0Text);
                    fAuthenticationTDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text31EC91730B9Text
        {
            get
            {
                if (null == fText31EC91730B9Text)
                {
                    fText31EC91730B9Text = new Text("Text31EC91730B9Text", SystemWindowsCoDup1TabItem);
                    fText31EC91730B9Text.UIMap.Scope = UIASeachScope.Children;
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"31EC9173-0B98-4d46-BC99-7DF8EA2BE02F");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText31EC91730B9Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextA479C271445Text
        {
            get
            {
                if (null == fTextA479C271445Text)
                {
                    fTextA479C271445Text = new Text("TextA479C271445Text", SystemWindowsCoDup1TabItem);
                    fTextA479C271445Text.UIMap.Scope = UIASeachScope.Children;
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A479C271-445D-43f1-864D-7503428703E4");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextA479C271445Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup2TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup2TabItem)
                {
                    fSystemWindowsCoDup2TabItem = new TabItem("EmailTabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup2TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33A07ED3-E1EE-411e-B583-7D0A3374100F");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup2TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EmailTextmEmailText
        {
            get
            {
                if (null == fEmailTextmEmailText)
                {
                    fEmailTextmEmailText = new Text("EmailTextmEmailText", SystemWindowsCoDup2TabItem);
                    fEmailTextmEmailText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                }

                return fEmailTextmEmailText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EmailTextBlockText
        {
            get
            {
                if (null == fEmailTextBlockText)
                {
                    fEmailTextBlockText = new Text("EmailTextBlockText", EmailTextmEmailText);
                    fEmailTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                }

                return fEmailTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text32de714a8bdText
        {
            get
            {
                if (null == fText32de714a8bdText)
                {
                    fText32de714a8bdText = new Text("Text32de714a8bdText", SystemWindowsCoDup2TabItem);
                    fText32de714a8bdText.UIMap.Scope = UIASeachScope.Children;
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"32de714a-8bda-4f11-bf20-b9a56b5f18bc");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText32de714a8bdText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text3b2a8761f4fText
        {
            get
            {
                if (null == fText3b2a8761f4fText)
                {
                    fText3b2a8761f4fText = new Text("Text3b2a8761f4fText", SystemWindowsCoDup2TabItem);
                    fText3b2a8761f4fText.UIMap.Scope = UIASeachScope.Children;
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3b2a8761-f4f6-41b1-b08c-9c33744bdc43");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText3b2a8761f4fText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextBlockDup0Text
        {
            get
            {
                if (null == fTextBlockDup0Text)
                {
                    fTextBlockDup0Text = new Text("TextBlockDup0Text", Text3b2a8761f4fText);
                    fTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem GlobalFaxTabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup3TabItem)
                {
                    fSystemWindowsCoDup3TabItem = new TabItem("SystemWindowsCoDup3TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4f116988-2b22-473f-bca3-094589a44954");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FaxTextmFaxTabLText
        {
            get
            {
                if (null == fFaxTextmFaxTabLText)
                {
                    fFaxTextmFaxTabLText = new Text("FaxTextmFaxTabLText", GlobalFaxTabItem);
                    fFaxTextmFaxTabLText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextmFaxTabLText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FaxTextBlockText
        {
            get
            {
                if (null == fFaxTextBlockText)
                {
                    fFaxTextBlockText = new Text("FaxTextBlockText", FaxTextmFaxTabLText);
                    fFaxTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextD1ED4F16F38Text
        {
            get
            {
                if (null == fTextD1ED4F16F38Text)
                {
                    fTextD1ED4F16F38Text = new Text("TextD1ED4F16F38Text", GlobalFaxTabItem);
                    fTextD1ED4F16F38Text.UIMap.Scope = UIASeachScope.Children;
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D1ED4F16-F389-4dfd-A884-D258EDB48C11");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTextD1ED4F16F38Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextBlockDup1Text
        {
            get
            {
                if (null == fTextBlockDup1Text)
                {
                    fTextBlockDup1Text = new Text("TextBlockDup1Text", TextD1ED4F16F38Text);
                    fTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text7DDE04FD251Text
        {
            get
            {
                if (null == fText7DDE04FD251Text)
                {
                    fText7DDE04FD251Text = new Text("Text7DDE04FD251Text", GlobalFaxTabItem);
                    fText7DDE04FD251Text.UIMap.Scope = UIASeachScope.Children;
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7DDE04FD-2519-44c2-A212-67B0838E1C91");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText7DDE04FD251Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextBlockDup2Text
        {
            get
            {
                if (null == fTextBlockDup2Text)
                {
                    fTextBlockDup2Text = new Text("TextBlockDup2Text", Text7DDE04FD251Text);
                    fTextBlockDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextBlockDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ServiceConfigurCustom
        {
            get
            {
                if (null == fServiceConfigurCustom)
                {
                    fServiceConfigurCustom = new Custom("ServiceConfigurCustom", GlobalFaxTabItem);
                    fServiceConfigurCustom.UIMap.Scope = UIASeachScope.Children;
                    fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ServiceConfigurationFaxTab");
                    fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mServiceConfigurationFaxTab");
                }

                return fServiceConfigurCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPane
        {
            get
            {
                if (null == fScrollViewerPane)
                {
                    fScrollViewerPane = new Pane("ScrollViewerPane", ServiceConfigurCustom);
                    fScrollViewerPane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ErrorConflictUsCustom
        {
            get
            {
                if (null == fErrorConflictUsCustom)
                {
                    fErrorConflictUsCustom = new Custom("ErrorConflictUsCustom", ScrollViewerPane);
                    fErrorConflictUsCustom.UIMap.Scope = UIASeachScope.Children;
                    fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ErrorConflictUserControl");
                    fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mErrorConflictUserControl");
                }

                return fErrorConflictUsCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageImage
        {
            get
            {
                if (null == fImageImage)
                {
                    fImageImage = new Image("ImageImage", ErrorConflictUsCustom);
                    fImageImage.UIMap.Scope = UIASeachScope.Children;
                    fImageImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageImage;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextBlock33CC58Text
        {
            get
            {
                if (null == fTextBlock33CC58Text)
                {
                    fTextBlock33CC58Text = new Text("TextBlock33CC58Text", ErrorConflictUsCustom);
                    fTextBlock33CC58Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlock33CC58Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlock33CC58Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33CC58FF-B4EB-41e5-B4AC-3A926D5E70A7");
                }

                return fTextBlock33CC58Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox EnableFaxSendCheckBox
        {
            get
            {
                if (null == fEnableFaxSendChCheckBox)
                {
                    fEnableFaxSendChCheckBox = new CheckBox("EnableFaxSendChCheckBox", ScrollViewerPane);
                    fEnableFaxSendChCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEnableFaxSendChCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fEnableFaxSendChCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6531b666-efa2-4390-ad4a-4580e0cf7d0e");
                    fEnableFaxSendChCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Fax Send");
                }

                return fEnableFaxSendChCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EnableFaxSendTeText
        {
            get
            {
                if (null == fEnableFaxSendTeText)
                {
                    fEnableFaxSendTeText = new Text("EnableFaxSendTeText", EnableFaxSendCheckBox);
                    fEnableFaxSendTeText.UIMap.Scope = UIASeachScope.Children;
                    fEnableFaxSendTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEnableFaxSendTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Fax Send");
                }

                return fEnableFaxSendTeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FaxSendMethodTeDup0Text
        {
            get
            {
                if (null == fFaxSendMethodTeDup0Text)
                {
                    fFaxSendMethodTeDup0Text = new Text("FaxSendMethodTeDup0Text", ScrollViewerPane);
                    fFaxSendMethodTeDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fFaxSendMethodTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFaxSendMethodTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"87366d0a-78d4-451e-885b-caca065f32f7");
                    fFaxSendMethodTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax Send Method");
                }

                return fFaxSendMethodTeDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FaxSendMethodTeDup1Text
        {
            get
            {
                if (null == fFaxSendMethodTeDup1Text)
                {
                    fFaxSendMethodTeDup1Text = new Text("FaxSendMethodTeDup1Text", FaxSendMethodTeDup0Text);
                    fFaxSendMethodTeDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fFaxSendMethodTeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFaxSendMethodTeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax Send Method");
                }

                return fFaxSendMethodTeDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox FaxServiceComboBox
        {
            get
            {
                if (null == fComboBoxf9a5a65ComboBox)
                {
                    fComboBoxf9a5a65ComboBox = new ComboBox("ComboBoxf9a5a65ComboBox", ScrollViewerPane);
                    fComboBoxf9a5a65ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxf9a5a65ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxf9a5a65ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f9a5a656-b98d-4d86-9021-a3648ea540c9");
                }

                return fComboBoxf9a5a65ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem LANFaxServiceLiDup1ListItem
        {
            get
            {
                if (null == fLANFaxServiceLiDup1ListItem)
                {
                    fLANFaxServiceLiDup1ListItem = new ListItem("LANFaxServiceLiDup1ListItem", FaxServiceComboBox);
                    fLANFaxServiceLiDup1ListItem.UIMap.Scope = UIASeachScope.Children;
                    fLANFaxServiceLiDup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fLANFaxServiceLiDup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LAN Fax Service");
                }

                return fLANFaxServiceLiDup1ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text LANFaxServiceTeDup1Text
        {
            get
            {
                if (null == fLANFaxServiceTeDup1Text)
                {
                    fLANFaxServiceTeDup1Text = new Text("LANFaxServiceTeDup1Text", LANFaxServiceLiDup1ListItem);
                    fLANFaxServiceTeDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fLANFaxServiceTeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLANFaxServiceTeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LAN Fax Service");
                }

                return fLANFaxServiceTeDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem InternetFaxServDup1ListItem
        {
            get
            {
                if (null == fInternetFaxServDup1ListItem)
                {
                    fInternetFaxServDup1ListItem = new ListItem("InternetFaxServDup1ListItem", FaxServiceComboBox);
                    fInternetFaxServDup1ListItem.UIMap.Scope = UIASeachScope.Children;
                    fInternetFaxServDup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fInternetFaxServDup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Internet Fax Service");
                }

                return fInternetFaxServDup1ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text InternetFaxServDup1Text
        {
            get
            {
                if (null == fInternetFaxServDup1Text)
                {
                    fInternetFaxServDup1Text = new Text("InternetFaxServDup1Text", InternetFaxServDup1ListItem);
                    fInternetFaxServDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fInternetFaxServDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fInternetFaxServDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Internet Fax Service");
                }

                return fInternetFaxServDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group InternetFaxSetuGroup
        {
            get
            {
                if (null == fInternetFaxSetuGroup)
                {
                    fInternetFaxSetuGroup = new Group("InternetFaxSetuGroup", ScrollViewerPane);
                    fInternetFaxSetuGroup.UIMap.Scope = UIASeachScope.Children;
                    fInternetFaxSetuGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fInternetFaxSetuGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7cfa635c-75d7-45bc-8ba9-6df755eb6950");
                    fInternetFaxSetuGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Internet Fax Setup");
                }

                return fInternetFaxSetuGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group LANFaxSetupGrouGroup
        {
            get
            {
                if (null == fLANFaxSetupGrouGroup)
                {
                    fLANFaxSetupGrouGroup = new Group("LANFaxSetupGrouGroup", ScrollViewerPane);
                    fLANFaxSetupGrouGroup.UIMap.Scope = UIASeachScope.Children;
                    fLANFaxSetupGrouGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fLANFaxSetupGrouGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"03fd0f29-2571-432d-97a7-f4abe2d640b7");
                    fLANFaxSetupGrouGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LAN Fax Setup");
                }

                return fLANFaxSetupGrouGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text LANFaxSetupTextText
        {
            get
            {
                if (null == fLANFaxSetupTextText)
                {
                    fLANFaxSetupTextText = new Text("LANFaxSetupTextText", LANFaxSetupGrouGroup);
                    fLANFaxSetupTextText.UIMap.Scope = UIASeachScope.Children;
                    fLANFaxSetupTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLANFaxSetupTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LAN Fax Setup");
                }

                return fLANFaxSetupTextText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group LanFaxServiceSeGroup
        {
            get
            {
                if (null == fLanFaxServiceSeGroup)
                {
                    fLanFaxServiceSeGroup = new Group("LanFaxServiceSeGroup", LANFaxSetupGrouGroup);
                    fLanFaxServiceSeGroup.UIMap.Scope = UIASeachScope.Children;
                    fLanFaxServiceSeGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fLanFaxServiceSeGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Lan Fax Service Settings");
                }

                return fLanFaxServiceSeGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text LanFaxServiceSeText
        {
            get
            {
                if (null == fLanFaxServiceSeText)
                {
                    fLanFaxServiceSeText = new Text("LanFaxServiceSeText", LanFaxServiceSeGroup);
                    fLanFaxServiceSeText.UIMap.Scope = UIASeachScope.Children;
                    fLanFaxServiceSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLanFaxServiceSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Lan Fax Service Settings");
                }

                return fLanFaxServiceSeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ThirdPartyLANFaDup0Text
        {
            get
            {
                if (null == fThirdPartyLANFaDup0Text)
                {
                    fThirdPartyLANFaDup0Text = new Text("ThirdPartyLANFaDup0Text", LanFaxServiceSeGroup);
                    fThirdPartyLANFaDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fThirdPartyLANFaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fThirdPartyLANFaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Third Party LAN Fax Product");
                }

                return fThirdPartyLANFaDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ThirdPartyLANFaDup1Text
        {
            get
            {
                if (null == fThirdPartyLANFaDup1Text)
                {
                    fThirdPartyLANFaDup1Text = new Text("ThirdPartyLANFaDup1Text", ThirdPartyLANFaDup0Text);
                    fThirdPartyLANFaDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fThirdPartyLANFaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fThirdPartyLANFaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Third Party LAN Fax Product");
                }

                return fThirdPartyLANFaDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox LanFaxProductComboBox
        {
            get
            {
                if (null == fComboBox411fa59ComboBox)
                {
                    fComboBox411fa59ComboBox = new ComboBox("ComboBox411fa59ComboBox", LanFaxServiceSeGroup);
                    fComboBox411fa59ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox411fa59ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox411fa59ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"411fa594-2202-4e29-81e2-2873f3958240");
                }

                return fComboBox411fa59ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem ACCPACListBoxItListItem
        {
            get
            {
                if (null == fACCPACListBoxItListItem)
                {
                    fACCPACListBoxItListItem = new ListItem("ACCPACListBoxItListItem", LanFaxProductComboBox);
                    fACCPACListBoxItListItem.UIMap.Scope = UIASeachScope.Children;
                    fACCPACListBoxItListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fACCPACListBoxItListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"ACCPAC");
                }

                return fACCPACListBoxItListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ACCPACTextBlockText
        {
            get
            {
                if (null == fACCPACTextBlockText)
                {
                    fACCPACTextBlockText = new Text("ACCPACTextBlockText", ACCPACListBoxItListItem);
                    fACCPACTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fACCPACTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fACCPACTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"ACCPAC");
                }

                return fACCPACTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem AnnyWayOfficeEDListItem
        {
            get
            {
                if (null == fAnnyWayOfficeEDListItem)
                {
                    fAnnyWayOfficeEDListItem = new ListItem("AnnyWayOfficeEDListItem", LanFaxProductComboBox);
                    fAnnyWayOfficeEDListItem.UIMap.Scope = UIASeachScope.Children;
                    fAnnyWayOfficeEDListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fAnnyWayOfficeEDListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Anny Way Office EDITION");
                }

                return fAnnyWayOfficeEDListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AnnyWayOfficeEDText
        {
            get
            {
                if (null == fAnnyWayOfficeEDText)
                {
                    fAnnyWayOfficeEDText = new Text("AnnyWayOfficeEDText", AnnyWayOfficeEDListItem);
                    fAnnyWayOfficeEDText.UIMap.Scope = UIASeachScope.Children;
                    fAnnyWayOfficeEDText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAnnyWayOfficeEDText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Anny Way Office EDITION");
                }

                return fAnnyWayOfficeEDText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem BiscomFAXCOMLisListItem
        {
            get
            {
                if (null == fBiscomFAXCOMLisListItem)
                {
                    fBiscomFAXCOMLisListItem = new ListItem("BiscomFAXCOMLisListItem", LanFaxProductComboBox);
                    fBiscomFAXCOMLisListItem.UIMap.Scope = UIASeachScope.Children;
                    fBiscomFAXCOMLisListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fBiscomFAXCOMLisListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Biscom FAXCOM");
                }

                return fBiscomFAXCOMLisListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text BiscomFAXCOMTexText
        {
            get
            {
                if (null == fBiscomFAXCOMTexText)
                {
                    fBiscomFAXCOMTexText = new Text("BiscomFAXCOMTexText", BiscomFAXCOMLisListItem);
                    fBiscomFAXCOMTexText.UIMap.Scope = UIASeachScope.Children;
                    fBiscomFAXCOMTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fBiscomFAXCOMTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Biscom FAXCOM");
                }

                return fBiscomFAXCOMTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem CaptarisRightFADup0ListItem
        {
            get
            {
                if (null == fCaptarisRightFADup0ListItem)
                {
                    fCaptarisRightFADup0ListItem = new ListItem("CaptarisRightFADup0ListItem", LanFaxProductComboBox);
                    fCaptarisRightFADup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fCaptarisRightFADup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fCaptarisRightFADup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Captaris RightFAX");
                }

                return fCaptarisRightFADup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CaptarisRightFADup0Text
        {
            get
            {
                if (null == fCaptarisRightFADup0Text)
                {
                    fCaptarisRightFADup0Text = new Text("CaptarisRightFADup0Text", CaptarisRightFADup0ListItem);
                    fCaptarisRightFADup0Text.UIMap.Scope = UIASeachScope.Children;
                    fCaptarisRightFADup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCaptarisRightFADup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Captaris RightFAX");
                }

                return fCaptarisRightFADup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem CaptarisRightFADup1ListItem
        {
            get
            {
                if (null == fCaptarisRightFADup1ListItem)
                {
                    fCaptarisRightFADup1ListItem = new ListItem("CaptarisRightFADup1ListItem", LanFaxProductComboBox);
                    fCaptarisRightFADup1ListItem.UIMap.Scope = UIASeachScope.Children;
                    fCaptarisRightFADup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fCaptarisRightFADup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Captaris RightFAX version 8.7 or later");
                }

                return fCaptarisRightFADup1ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CaptarisRightFADup1Text
        {
            get
            {
                if (null == fCaptarisRightFADup1Text)
                {
                    fCaptarisRightFADup1Text = new Text("CaptarisRightFADup1Text", CaptarisRightFADup1ListItem);
                    fCaptarisRightFADup1Text.UIMap.Scope = UIASeachScope.Children;
                    fCaptarisRightFADup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCaptarisRightFADup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Captaris RightFAX version 8.7 or later");
                }

                return fCaptarisRightFADup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem CaptarisRightFADup2ListItem
        {
            get
            {
                if (null == fCaptarisRightFADup2ListItem)
                {
                    fCaptarisRightFADup2ListItem = new ListItem("CaptarisRightFADup2ListItem", LanFaxProductComboBox);
                    fCaptarisRightFADup2ListItem.UIMap.Scope = UIASeachScope.Children;
                    fCaptarisRightFADup2ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fCaptarisRightFADup2ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Captaris RightFAX-HP MFP Module");
                }

                return fCaptarisRightFADup2ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CaptarisRightFADup2Text
        {
            get
            {
                if (null == fCaptarisRightFADup2Text)
                {
                    fCaptarisRightFADup2Text = new Text("CaptarisRightFADup2Text", CaptarisRightFADup2ListItem);
                    fCaptarisRightFADup2Text.UIMap.Scope = UIASeachScope.Children;
                    fCaptarisRightFADup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCaptarisRightFADup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Captaris RightFAX-HP MFP Module");
                }

                return fCaptarisRightFADup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem CastelleFaxPresDup0ListItem
        {
            get
            {
                if (null == fCastelleFaxPresDup0ListItem)
                {
                    fCastelleFaxPresDup0ListItem = new ListItem("CastelleFaxPresDup0ListItem", LanFaxProductComboBox);
                    fCastelleFaxPresDup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fCastelleFaxPresDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fCastelleFaxPresDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Castelle FaxPress");
                }

                return fCastelleFaxPresDup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CastelleFaxPresDup0Text
        {
            get
            {
                if (null == fCastelleFaxPresDup0Text)
                {
                    fCastelleFaxPresDup0Text = new Text("CastelleFaxPresDup0Text", CastelleFaxPresDup0ListItem);
                    fCastelleFaxPresDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fCastelleFaxPresDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCastelleFaxPresDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Castelle FaxPress");
                }

                return fCastelleFaxPresDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem CastelleFaxPresDup1ListItem
        {
            get
            {
                if (null == fCastelleFaxPresDup1ListItem)
                {
                    fCastelleFaxPresDup1ListItem = new ListItem("CastelleFaxPresDup1ListItem", LanFaxProductComboBox);
                    fCastelleFaxPresDup1ListItem.UIMap.Scope = UIASeachScope.Children;
                    fCastelleFaxPresDup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fCastelleFaxPresDup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Castelle FaxPress Premier");
                }

                return fCastelleFaxPresDup1ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CastelleFaxPresDup1Text
        {
            get
            {
                if (null == fCastelleFaxPresDup1Text)
                {
                    fCastelleFaxPresDup1Text = new Text("CastelleFaxPresDup1Text", CastelleFaxPresDup1ListItem);
                    fCastelleFaxPresDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fCastelleFaxPresDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCastelleFaxPresDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Castelle FaxPress Premier");
                }

                return fCastelleFaxPresDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem CycosmrsUnifiedListItem
        {
            get
            {
                if (null == fCycosmrsUnifiedListItem)
                {
                    fCycosmrsUnifiedListItem = new ListItem("CycosmrsUnifiedListItem", LanFaxProductComboBox);
                    fCycosmrsUnifiedListItem.UIMap.Scope = UIASeachScope.Children;
                    fCycosmrsUnifiedListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fCycosmrsUnifiedListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cycos-mrs Unified Communication");
                }

                return fCycosmrsUnifiedListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CycosmrsUnifiedText
        {
            get
            {
                if (null == fCycosmrsUnifiedText)
                {
                    fCycosmrsUnifiedText = new Text("CycosmrsUnifiedText", CycosmrsUnifiedListItem);
                    fCycosmrsUnifiedText.UIMap.Scope = UIASeachScope.Children;
                    fCycosmrsUnifiedText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCycosmrsUnifiedText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cycos-mrs Unified Communication");
                }

                return fCycosmrsUnifiedText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem EskerLanFaxListListItem
        {
            get
            {
                if (null == fEskerLanFaxListListItem)
                {
                    fEskerLanFaxListListItem = new ListItem("EskerLanFaxListListItem", LanFaxProductComboBox);
                    fEskerLanFaxListListItem.UIMap.Scope = UIASeachScope.Children;
                    fEskerLanFaxListListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fEskerLanFaxListListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Esker LanFax");
                }

                return fEskerLanFaxListListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EskerLanFaxTextText
        {
            get
            {
                if (null == fEskerLanFaxTextText)
                {
                    fEskerLanFaxTextText = new Text("EskerLanFaxTextText", EskerLanFaxListListItem);
                    fEskerLanFaxTextText.UIMap.Scope = UIASeachScope.Children;
                    fEskerLanFaxTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEskerLanFaxTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Esker LanFax");
                }

                return fEskerLanFaxTextText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem EskerPulseFaxLiListItem
        {
            get
            {
                if (null == fEskerPulseFaxLiListItem)
                {
                    fEskerPulseFaxLiListItem = new ListItem("EskerPulseFaxLiListItem", LanFaxProductComboBox);
                    fEskerPulseFaxLiListItem.UIMap.Scope = UIASeachScope.Children;
                    fEskerPulseFaxLiListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fEskerPulseFaxLiListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Esker Pulse / Fax");
                }

                return fEskerPulseFaxLiListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EskerPulseFaxTeText
        {
            get
            {
                if (null == fEskerPulseFaxTeText)
                {
                    fEskerPulseFaxTeText = new Text("EskerPulseFaxTeText", EskerPulseFaxLiListItem);
                    fEskerPulseFaxTeText.UIMap.Scope = UIASeachScope.Children;
                    fEskerPulseFaxTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEskerPulseFaxTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Esker Pulse / Fax");
                }

                return fEskerPulseFaxTeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem FACSysFaxMessagListItem
        {
            get
            {
                if (null == fFACSysFaxMessagListItem)
                {
                    fFACSysFaxMessagListItem = new ListItem("FACSysFaxMessagListItem", LanFaxProductComboBox);
                    fFACSysFaxMessagListItem.UIMap.Scope = UIASeachScope.Children;
                    fFACSysFaxMessagListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fFACSysFaxMessagListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"FACSys Fax Messaging Gateway");
                }

                return fFACSysFaxMessagListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FACSysFaxMessagText
        {
            get
            {
                if (null == fFACSysFaxMessagText)
                {
                    fFACSysFaxMessagText = new Text("FACSysFaxMessagText", FACSysFaxMessagListItem);
                    fFACSysFaxMessagText.UIMap.Scope = UIASeachScope.Children;
                    fFACSysFaxMessagText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFACSysFaxMessagText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"FACSys Fax Messaging Gateway");
                }

                return fFACSysFaxMessagText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem FenestraeFaxinaListItem
        {
            get
            {
                if (null == fFenestraeFaxinaListItem)
                {
                    fFenestraeFaxinaListItem = new ListItem("FenestraeFaxinaListItem", LanFaxProductComboBox);
                    fFenestraeFaxinaListItem.UIMap.Scope = UIASeachScope.Children;
                    fFenestraeFaxinaListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fFenestraeFaxinaListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fenestrae Faxination");
                }

                return fFenestraeFaxinaListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FenestraeFaxinaText
        {
            get
            {
                if (null == fFenestraeFaxinaText)
                {
                    fFenestraeFaxinaText = new Text("FenestraeFaxinaText", FenestraeFaxinaListItem);
                    fFenestraeFaxinaText.UIMap.Scope = UIASeachScope.Children;
                    fFenestraeFaxinaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFenestraeFaxinaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fenestrae Faxination");
                }

                return fFenestraeFaxinaText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem GFIFAXmakerListListItem
        {
            get
            {
                if (null == fGFIFAXmakerListListItem)
                {
                    fGFIFAXmakerListListItem = new ListItem("GFIFAXmakerListListItem", LanFaxProductComboBox);
                    fGFIFAXmakerListListItem.UIMap.Scope = UIASeachScope.Children;
                    fGFIFAXmakerListListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fGFIFAXmakerListListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"GFI FAXmaker");
                }

                return fGFIFAXmakerListListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GFIFAXmakerTextText
        {
            get
            {
                if (null == fGFIFAXmakerTextText)
                {
                    fGFIFAXmakerTextText = new Text("GFIFAXmakerTextText", GFIFAXmakerListListItem);
                    fGFIFAXmakerTextText.UIMap.Scope = UIASeachScope.Children;
                    fGFIFAXmakerTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGFIFAXmakerTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"GFI FAXmaker");
                }

                return fGFIFAXmakerTextText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem GoldFaxListBoxIListItem
        {
            get
            {
                if (null == fGoldFaxListBoxIListItem)
                {
                    fGoldFaxListBoxIListItem = new ListItem("GoldFaxListBoxIListItem", LanFaxProductComboBox);
                    fGoldFaxListBoxIListItem.UIMap.Scope = UIASeachScope.Children;
                    fGoldFaxListBoxIListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fGoldFaxListBoxIListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Gold-Fax");
                }

                return fGoldFaxListBoxIListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GoldFaxTextBlocText
        {
            get
            {
                if (null == fGoldFaxTextBlocText)
                {
                    fGoldFaxTextBlocText = new Text("GoldFaxTextBlocText", GoldFaxListBoxIListItem);
                    fGoldFaxTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fGoldFaxTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGoldFaxTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Gold-Fax");
                }

                return fGoldFaxTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem ImecomIntegralFListItem
        {
            get
            {
                if (null == fImecomIntegralFListItem)
                {
                    fImecomIntegralFListItem = new ListItem("ImecomIntegralFListItem", LanFaxProductComboBox);
                    fImecomIntegralFListItem.UIMap.Scope = UIASeachScope.Children;
                    fImecomIntegralFListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fImecomIntegralFListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Imecom Integral Fax");
                }

                return fImecomIntegralFListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ImecomIntegralFText
        {
            get
            {
                if (null == fImecomIntegralFText)
                {
                    fImecomIntegralFText = new Text("ImecomIntegralFText", ImecomIntegralFListItem);
                    fImecomIntegralFText.UIMap.Scope = UIASeachScope.Children;
                    fImecomIntegralFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fImecomIntegralFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Imecom Integral Fax");
                }

                return fImecomIntegralFText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem INTERCOPEFaxPluListItem
        {
            get
            {
                if (null == fINTERCOPEFaxPluListItem)
                {
                    fINTERCOPEFaxPluListItem = new ListItem("INTERCOPEFaxPluListItem", LanFaxProductComboBox);
                    fINTERCOPEFaxPluListItem.UIMap.Scope = UIASeachScope.Children;
                    fINTERCOPEFaxPluListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fINTERCOPEFaxPluListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"INTERCOPE FaxPlus/Open");
                }

                return fINTERCOPEFaxPluListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text INTERCOPEFaxPluText
        {
            get
            {
                if (null == fINTERCOPEFaxPluText)
                {
                    fINTERCOPEFaxPluText = new Text("INTERCOPEFaxPluText", INTERCOPEFaxPluListItem);
                    fINTERCOPEFaxPluText.UIMap.Scope = UIASeachScope.Children;
                    fINTERCOPEFaxPluText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fINTERCOPEFaxPluText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"INTERCOPE FaxPlus/Open");
                }

                return fINTERCOPEFaxPluText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem InterstarLightnListItem
        {
            get
            {
                if (null == fInterstarLightnListItem)
                {
                    fInterstarLightnListItem = new ListItem("InterstarLightnListItem", LanFaxProductComboBox);
                    fInterstarLightnListItem.UIMap.Scope = UIASeachScope.Children;
                    fInterstarLightnListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fInterstarLightnListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Interstar LightningFAX");
                }

                return fInterstarLightnListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text InterstarLightnText
        {
            get
            {
                if (null == fInterstarLightnText)
                {
                    fInterstarLightnText = new Text("InterstarLightnText", InterstarLightnListItem);
                    fInterstarLightnText.UIMap.Scope = UIASeachScope.Children;
                    fInterstarLightnText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fInterstarLightnText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Interstar LightningFAX");
                }

                return fInterstarLightnText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem GenericLANFaxprDup0ListItem
        {
            get
            {
                if (null == fGenericLANFaxprDup0ListItem)
                {
                    fGenericLANFaxprDup0ListItem = new ListItem("GenericLANFaxprDup0ListItem", LanFaxProductComboBox);
                    fGenericLANFaxprDup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fGenericLANFaxprDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fGenericLANFaxprDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Generic LAN Fax product with notification support");
                }

                return fGenericLANFaxprDup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GenericLANFaxprDup0Text
        {
            get
            {
                if (null == fGenericLANFaxprDup0Text)
                {
                    fGenericLANFaxprDup0Text = new Text("GenericLANFaxprDup0Text", GenericLANFaxprDup0ListItem);
                    fGenericLANFaxprDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fGenericLANFaxprDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGenericLANFaxprDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Generic LAN Fax product with notification support");
                }

                return fGenericLANFaxprDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem GenericLANFaxprDup1ListItem
        {
            get
            {
                if (null == fGenericLANFaxprDup1ListItem)
                {
                    fGenericLANFaxprDup1ListItem = new ListItem("GenericLANFaxprDup1ListItem", LanFaxProductComboBox);
                    fGenericLANFaxprDup1ListItem.UIMap.Scope = UIASeachScope.Children;
                    fGenericLANFaxprDup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fGenericLANFaxprDup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Generic LAN Fax product without notification support");
                }

                return fGenericLANFaxprDup1ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GenericLANFaxprDup1Text
        {
            get
            {
                if (null == fGenericLANFaxprDup1Text)
                {
                    fGenericLANFaxprDup1Text = new Text("GenericLANFaxprDup1Text", GenericLANFaxprDup1ListItem);
                    fGenericLANFaxprDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fGenericLANFaxprDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGenericLANFaxprDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Generic LAN Fax product without notification support");
                }

                return fGenericLANFaxprDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem NETSatisFAXtionListItem
        {
            get
            {
                if (null == fNETSatisFAXtionListItem)
                {
                    fNETSatisFAXtionListItem = new ListItem("NETSatisFAXtionListItem", LanFaxProductComboBox);
                    fNETSatisFAXtionListItem.UIMap.Scope = UIASeachScope.Children;
                    fNETSatisFAXtionListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fNETSatisFAXtionListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"NET SatisFAXtion");
                }

                return fNETSatisFAXtionListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NETSatisFAXtionText
        {
            get
            {
                if (null == fNETSatisFAXtionText)
                {
                    fNETSatisFAXtionText = new Text("NETSatisFAXtionText", NETSatisFAXtionListItem);
                    fNETSatisFAXtionText.UIMap.Scope = UIASeachScope.Children;
                    fNETSatisFAXtionText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNETSatisFAXtionText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"NET SatisFAXtion");
                }

                return fNETSatisFAXtionText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem ObjectFaxListBoListItem
        {
            get
            {
                if (null == fObjectFaxListBoListItem)
                {
                    fObjectFaxListBoListItem = new ListItem("ObjectFaxListBoListItem", LanFaxProductComboBox);
                    fObjectFaxListBoListItem.UIMap.Scope = UIASeachScope.Children;
                    fObjectFaxListBoListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fObjectFaxListBoListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Object Fax");
                }

                return fObjectFaxListBoListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ObjectFaxTextBlText
        {
            get
            {
                if (null == fObjectFaxTextBlText)
                {
                    fObjectFaxTextBlText = new Text("ObjectFaxTextBlText", ObjectFaxListBoListItem);
                    fObjectFaxTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fObjectFaxTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fObjectFaxTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Object Fax");
                }

                return fObjectFaxTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem OmtoolListBoxItListItem
        {
            get
            {
                if (null == fOmtoolListBoxItListItem)
                {
                    fOmtoolListBoxItListItem = new ListItem("OmtoolListBoxItListItem", LanFaxProductComboBox);
                    fOmtoolListBoxItListItem.UIMap.Scope = UIASeachScope.Children;
                    fOmtoolListBoxItListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fOmtoolListBoxItListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Omtool");
                }

                return fOmtoolListBoxItListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OmtoolTextBlockText
        {
            get
            {
                if (null == fOmtoolTextBlockText)
                {
                    fOmtoolTextBlockText = new Text("OmtoolTextBlockText", OmtoolListBoxItListItem);
                    fOmtoolTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fOmtoolTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOmtoolTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Omtool");
                }

                return fOmtoolTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem RedRockFaxNowLiListItem
        {
            get
            {
                if (null == fRedRockFaxNowLiListItem)
                {
                    fRedRockFaxNowLiListItem = new ListItem("RedRockFaxNowLiListItem", LanFaxProductComboBox);
                    fRedRockFaxNowLiListItem.UIMap.Scope = UIASeachScope.Children;
                    fRedRockFaxNowLiListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fRedRockFaxNowLiListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"RedRock FaxNow");
                }

                return fRedRockFaxNowLiListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text RedRockFaxNowTeText
        {
            get
            {
                if (null == fRedRockFaxNowTeText)
                {
                    fRedRockFaxNowTeText = new Text("RedRockFaxNowTeText", RedRockFaxNowLiListItem);
                    fRedRockFaxNowTeText.UIMap.Scope = UIASeachScope.Children;
                    fRedRockFaxNowTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRedRockFaxNowTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"RedRock FaxNow");
                }

                return fRedRockFaxNowTeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem RTEFAXListBoxItListItem
        {
            get
            {
                if (null == fRTEFAXListBoxItListItem)
                {
                    fRTEFAXListBoxItListItem = new ListItem("RTEFAXListBoxItListItem", LanFaxProductComboBox);
                    fRTEFAXListBoxItListItem.UIMap.Scope = UIASeachScope.Children;
                    fRTEFAXListBoxItListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fRTEFAXListBoxItListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"RTEFAX");
                }

                return fRTEFAXListBoxItListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text RTEFAXTextBlockText
        {
            get
            {
                if (null == fRTEFAXTextBlockText)
                {
                    fRTEFAXTextBlockText = new Text("RTEFAXTextBlockText", RTEFAXListBoxItListItem);
                    fRTEFAXTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fRTEFAXTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRTEFAXTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"RTEFAX");
                }

                return fRTEFAXTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem TobitDvISEListBListItem
        {
            get
            {
                if (null == fTobitDvISEListBListItem)
                {
                    fTobitDvISEListBListItem = new ListItem("TobitDvISEListBListItem", LanFaxProductComboBox);
                    fTobitDvISEListBListItem.UIMap.Scope = UIASeachScope.Children;
                    fTobitDvISEListBListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fTobitDvISEListBListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Tobit DvISE");
                }

                return fTobitDvISEListBListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TobitDvISETextBText
        {
            get
            {
                if (null == fTobitDvISETextBText)
                {
                    fTobitDvISETextBText = new Text("TobitDvISETextBText", TobitDvISEListBListItem);
                    fTobitDvISETextBText.UIMap.Scope = UIASeachScope.Children;
                    fTobitDvISETextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTobitDvISETextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Tobit DvISE");
                }

                return fTobitDvISETextBText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem TOPCALLListBoxIListItem
        {
            get
            {
                if (null == fTOPCALLListBoxIListItem)
                {
                    fTOPCALLListBoxIListItem = new ListItem("TOPCALLListBoxIListItem", LanFaxProductComboBox);
                    fTOPCALLListBoxIListItem.UIMap.Scope = UIASeachScope.Children;
                    fTOPCALLListBoxIListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fTOPCALLListBoxIListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"TOPCALL");
                }

                return fTOPCALLListBoxIListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TOPCALLTextBlocText
        {
            get
            {
                if (null == fTOPCALLTextBlocText)
                {
                    fTOPCALLTextBlocText = new Text("TOPCALLTextBlocText", TOPCALLListBoxIListItem);
                    fTOPCALLTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fTOPCALLTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTOPCALLTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"TOPCALL");
                }

                return fTOPCALLTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem ZetafaxListBoxIListItem
        {
            get
            {
                if (null == fZetafaxListBoxIListItem)
                {
                    fZetafaxListBoxIListItem = new ListItem("ZetafaxListBoxIListItem", LanFaxProductComboBox);
                    fZetafaxListBoxIListItem.UIMap.Scope = UIASeachScope.Children;
                    fZetafaxListBoxIListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fZetafaxListBoxIListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Zetafax");
                }

                return fZetafaxListBoxIListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ZetafaxTextBlocText
        {
            get
            {
                if (null == fZetafaxTextBlocText)
                {
                    fZetafaxTextBlocText = new Text("ZetafaxTextBlocText", ZetafaxListBoxIListItem);
                    fZetafaxTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fZetafaxTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fZetafaxTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Zetafax");
                }

                return fZetafaxTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FileFormatText
        {
            get
            {
                if (null == fFileFormatText)
                {
                    fFileFormatText = new Text("FileFormatText", LanFaxServiceSeGroup);
                    fFileFormatText.UIMap.Scope = UIASeachScope.Children;
                    fFileFormatText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFileFormatText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Format:");
                }

                return fFileFormatText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FileFormatTextBText
        {
            get
            {
                if (null == fFileFormatTextBText)
                {
                    fFileFormatTextBText = new Text("FileFormatTextBText", FileFormatText);
                    fFileFormatTextBText.UIMap.Scope = UIASeachScope.Children;
                    fFileFormatTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFileFormatTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Format:");
                }

                return fFileFormatTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox454be57ComboBox
        {
            get
            {
                if (null == fComboBox454be57ComboBox)
                {
                    fComboBox454be57ComboBox = new ComboBox("ComboBox454be57ComboBox", LanFaxServiceSeGroup);
                    fComboBox454be57ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox454be57ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox454be57ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"454be574-a89c-471a-9899-0122dbfb0635");
                }

                return fComboBox454be57ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem MTIFFG3ListBoxIListItem
        {
            get
            {
                if (null == fMTIFFG3ListBoxIListItem)
                {
                    fMTIFFG3ListBoxIListItem = new ListItem("MTIFFG3ListBoxIListItem", ComboBox454be57ComboBox);
                    fMTIFFG3ListBoxIListItem.UIMap.Scope = UIASeachScope.Children;
                    fMTIFFG3ListBoxIListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fMTIFFG3ListBoxIListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"MTIFF/G3");
                }

                return fMTIFFG3ListBoxIListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text MTIFFG3TextBlocText
        {
            get
            {
                if (null == fMTIFFG3TextBlocText)
                {
                    fMTIFFG3TextBlocText = new Text("MTIFFG3TextBlocText", MTIFFG3ListBoxIListItem);
                    fMTIFFG3TextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fMTIFFG3TextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fMTIFFG3TextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"MTIFF/G3");
                }

                return fMTIFFG3TextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem MTIFFG4ListBoxIListItem
        {
            get
            {
                if (null == fMTIFFG4ListBoxIListItem)
                {
                    fMTIFFG4ListBoxIListItem = new ListItem("MTIFFG4ListBoxIListItem", ComboBox454be57ComboBox);
                    fMTIFFG4ListBoxIListItem.UIMap.Scope = UIASeachScope.Children;
                    fMTIFFG4ListBoxIListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fMTIFFG4ListBoxIListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"MTIFF/G4");
                }

                return fMTIFFG4ListBoxIListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text MTIFFG4TextBlocText
        {
            get
            {
                if (null == fMTIFFG4TextBlocText)
                {
                    fMTIFFG4TextBlocText = new Text("MTIFFG4TextBlocText", MTIFFG4ListBoxIListItem);
                    fMTIFFG4TextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fMTIFFG4TextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fMTIFFG4TextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"MTIFF/G4");
                }

                return fMTIFFG4TextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem PCL5packedbitLiListItem
        {
            get
            {
                if (null == fPCL5packedbitLiListItem)
                {
                    fPCL5packedbitLiListItem = new ListItem("PCL5packedbitLiListItem", ComboBox454be57ComboBox);
                    fPCL5packedbitLiListItem.UIMap.Scope = UIASeachScope.Children;
                    fPCL5packedbitLiListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fPCL5packedbitLiListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"PCL 5 (packed bit)");
                }

                return fPCL5packedbitLiListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text PCL5packedbitTeText
        {
            get
            {
                if (null == fPCL5packedbitTeText)
                {
                    fPCL5packedbitTeText = new Text("PCL5packedbitTeText", PCL5packedbitLiListItem);
                    fPCL5packedbitTeText.UIMap.Scope = UIASeachScope.Children;
                    fPCL5packedbitTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPCL5packedbitTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"PCL 5 (packed bit)");
                }

                return fPCL5packedbitTeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem PCL5uncompresseListItem
        {
            get
            {
                if (null == fPCL5uncompresseListItem)
                {
                    fPCL5uncompresseListItem = new ListItem("PCL5uncompresseListItem", ComboBox454be57ComboBox);
                    fPCL5uncompresseListItem.UIMap.Scope = UIASeachScope.Children;
                    fPCL5uncompresseListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fPCL5uncompresseListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"PCL 5 (uncompressed)");
                }

                return fPCL5uncompresseListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text PCL5uncompresseText
        {
            get
            {
                if (null == fPCL5uncompresseText)
                {
                    fPCL5uncompresseText = new Text("PCL5uncompresseText", PCL5uncompresseListItem);
                    fPCL5uncompresseText.UIMap.Scope = UIASeachScope.Children;
                    fPCL5uncompresseText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPCL5uncompresseText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"PCL 5 (uncompressed)");
                }

                return fPCL5uncompresseText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group FolderSettingsGGroup
        {
            get
            {
                if (null == fFolderSettingsGGroup)
                {
                    fFolderSettingsGGroup = new Group("FolderSettingsGGroup", LANFaxSetupGrouGroup);
                    fFolderSettingsGGroup.UIMap.Scope = UIASeachScope.Children;
                    fFolderSettingsGGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fFolderSettingsGGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mCredentialsGroupBox");
                    fFolderSettingsGGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Folder Settings");
                }

                return fFolderSettingsGGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FolderSettingsTText
        {
            get
            {
                if (null == fFolderSettingsTText)
                {
                    fFolderSettingsTText = new Text("FolderSettingsTText", FolderSettingsGGroup);
                    fFolderSettingsTText.UIMap.Scope = UIASeachScope.Children;
                    fFolderSettingsTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFolderSettingsTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Folder Settings");
                }

                return fFolderSettingsTText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FolderPathText
        {
            get
            {
                if (null == fFolderPathText)
                {
                    fFolderPathText = new Text("FolderPathText", FolderSettingsGGroup);
                    fFolderPathText.UIMap.Scope = UIASeachScope.Children;
                    fFolderPathText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFolderPathText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Folder Path");
                }

                return fFolderPathText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FolderPathTextBText
        {
            get
            {
                if (null == fFolderPathTextBText)
                {
                    fFolderPathTextBText = new Text("FolderPathTextBText", FolderPathText);
                    fFolderPathTextBText.UIMap.Scope = UIASeachScope.Children;
                    fFolderPathTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFolderPathTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Folder Path");
                }

                return fFolderPathTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit FolderPathEditTextBox
        {
            get
            {
                if (null == fTextBox963de5ecEdit)
                {
                    fTextBox963de5ecEdit = new Edit("TextBox963de5ecEdit", FolderSettingsGGroup);
                    fTextBox963de5ecEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox963de5ecEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox963de5ecEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"963de5ec-3d11-41e6-a814-9151d752c939");
                }

                return fTextBox963de5ecEdit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup0Pane
        {
            get
            {
                if (null == fScrollViewerPARDup0Pane)
                {
                    fScrollViewerPARDup0Pane = new Pane("ScrollViewerPARDup0Pane", FolderPathEditTextBox);
                    fScrollViewerPARDup0Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup0Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup1ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup1ScrollBar)
                {
                    fScrollBarVerticDup1ScrollBar = new ScrollBar("ScrollBarVerticDup1ScrollBar", ScrollViewerPARDup0Pane);
                    fScrollBarVerticDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup1ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup1ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup1ScrollBar)
                {
                    fScrollBarHorizoDup1ScrollBar = new ScrollBar("ScrollBarHorizoDup1ScrollBar", ScrollViewerPARDup0Pane);
                    fScrollBarHorizoDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup1ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button BrowseButton278Button
        {
            get
            {
                if (null == fBrowseButton278Button)
                {
                    fBrowseButton278Button = new Button("BrowseButton278Button", FolderSettingsGGroup);
                    fBrowseButton278Button.UIMap.Scope = UIASeachScope.Children;
                    fBrowseButton278Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fBrowseButton278Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2786c377-0adb-4358-b077-4066aa12eb43");
                    fBrowseButton278Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Browse");
                }

                return fBrowseButton278Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text BrowseTextBlockText
        {
            get
            {
                if (null == fBrowseTextBlockText)
                {
                    fBrowseTextBlockText = new Text("BrowseTextBlockText", BrowseButton278Button);
                    fBrowseTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fBrowseTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fBrowseTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Browse");
                }

                return fBrowseTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text UsernameText
        {
            get
            {
                if (null == fUsernameText)
                {
                    fUsernameText = new Text("UsernameText", FolderSettingsGGroup);
                    fUsernameText.UIMap.Scope = UIASeachScope.Children;
                    fUsernameText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fUsernameText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                }

                return fUsernameText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text UsernameTextBloText
        {
            get
            {
                if (null == fUsernameTextBloText)
                {
                    fUsernameTextBloText = new Text("UsernameTextBloText", UsernameText);
                    fUsernameTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fUsernameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUsernameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                }

                return fUsernameTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit UserNameEditTextBox
        {
            get
            {
                if (null == fTextBoxa432c48dEdit)
                {
                    fTextBoxa432c48dEdit = new Edit("TextBoxa432c48dEdit", FolderSettingsGGroup);
                    fTextBoxa432c48dEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxa432c48dEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBoxa432c48dEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a432c48d-4945-4d64-af27-bec2fa28421e");
                }

                return fTextBoxa432c48dEdit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup1Pane
        {
            get
            {
                if (null == fScrollViewerPARDup1Pane)
                {
                    fScrollViewerPARDup1Pane = new Pane("ScrollViewerPARDup1Pane", UserNameEditTextBox);
                    fScrollViewerPARDup1Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup1Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup2ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup2ScrollBar)
                {
                    fScrollBarVerticDup2ScrollBar = new ScrollBar("ScrollBarVerticDup2ScrollBar", ScrollViewerPARDup1Pane);
                    fScrollBarVerticDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup2ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup2ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup2ScrollBar)
                {
                    fScrollBarHorizoDup2ScrollBar = new ScrollBar("ScrollBarHorizoDup2ScrollBar", ScrollViewerPARDup1Pane);
                    fScrollBarHorizoDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup2ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text PasswordText
        {
            get
            {
                if (null == fPasswordText)
                {
                    fPasswordText = new Text("PasswordText", FolderSettingsGGroup);
                    fPasswordText.UIMap.Scope = UIASeachScope.Children;
                    fPasswordText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fPasswordText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                }

                return fPasswordText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text PasswordTextBloText
        {
            get
            {
                if (null == fPasswordTextBloText)
                {
                    fPasswordTextBloText = new Text("PasswordTextBloText", PasswordText);
                    fPasswordTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fPasswordTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPasswordTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                }

                return fPasswordTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit PasswordEditPasswordBox
        {
            get
            {
                if (null == fPasswordBoxcd46Edit)
                {
                    fPasswordBoxcd46Edit = new Edit("PasswordBoxcd46Edit", FolderSettingsGGroup);
                    fPasswordBoxcd46Edit.UIMap.Scope = UIASeachScope.Children;
                    fPasswordBoxcd46Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"PasswordBox");
                    fPasswordBoxcd46Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"cd468ecc-9148-4c7c-a15e-5d1ce1623a31");
                }

                return fPasswordBoxcd46Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup2Pane
        {
            get
            {
                if (null == fScrollViewerPARDup2Pane)
                {
                    fScrollViewerPARDup2Pane = new Pane("ScrollViewerPARDup2Pane", PasswordEditPasswordBox);
                    fScrollViewerPARDup2Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup2Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup3ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup3ScrollBar)
                {
                    fScrollBarVerticDup3ScrollBar = new ScrollBar("ScrollBarVerticDup3ScrollBar", ScrollViewerPARDup2Pane);
                    fScrollBarVerticDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup3ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup3ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup3ScrollBar)
                {
                    fScrollBarHorizoDup3ScrollBar = new ScrollBar("ScrollBarHorizoDup3ScrollBar", ScrollViewerPARDup2Pane);
                    fScrollBarHorizoDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup3ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text WindowsDomainTeDup0Text
        {
            get
            {
                if (null == fWindowsDomainTeDup0Text)
                {
                    fWindowsDomainTeDup0Text = new Text("WindowsDomainTeDup0Text", FolderSettingsGGroup);
                    fWindowsDomainTeDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fWindowsDomainTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fWindowsDomainTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"dc8d2a58-72b0-4d71-9731-92eff05bba8a");
                    fWindowsDomainTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Domain");
                }

                return fWindowsDomainTeDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text WindowsDomainTeDup1Text
        {
            get
            {
                if (null == fWindowsDomainTeDup1Text)
                {
                    fWindowsDomainTeDup1Text = new Text("WindowsDomainTeDup1Text", WindowsDomainTeDup0Text);
                    fWindowsDomainTeDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fWindowsDomainTeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fWindowsDomainTeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Domain");
                }

                return fWindowsDomainTeDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit DomainEditTextBox
        {
            get
            {
                if (null == fTextBox80fa1a93Edit)
                {
                    fTextBox80fa1a93Edit = new Edit("TextBox80fa1a93Edit", FolderSettingsGGroup);
                    fTextBox80fa1a93Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox80fa1a93Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox80fa1a93Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"80fa1a93-e7ff-4eaa-a833-17881dd99605");
                }

                return fTextBox80fa1a93Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup3Pane
        {
            get
            {
                if (null == fScrollViewerPARDup3Pane)
                {
                    fScrollViewerPARDup3Pane = new Pane("ScrollViewerPARDup3Pane", DomainEditTextBox);
                    fScrollViewerPARDup3Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup3Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup4ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup4ScrollBar)
                {
                    fScrollBarVerticDup4ScrollBar = new ScrollBar("ScrollBarVerticDup4ScrollBar", ScrollViewerPARDup3Pane);
                    fScrollBarVerticDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup4ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup4ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup4ScrollBar)
                {
                    fScrollBarHorizoDup4ScrollBar = new ScrollBar("ScrollBarHorizoDup4ScrollBar", ScrollViewerPARDup3Pane);
                    fScrollBarHorizoDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup4ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button VerifyFolderAccessButton
        {
            get
            {
                if (null == fVerifyFolderAccButton)
                {
                    fVerifyFolderAccButton = new Button("VerifyFolderAccButton", FolderSettingsGGroup);
                    fVerifyFolderAccButton.UIMap.Scope = UIASeachScope.Children;
                    fVerifyFolderAccButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fVerifyFolderAccButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4a683597-b682-422d-bdc7-146ffe63279f");
                    fVerifyFolderAccButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Verify Folder Access");
                }

                return fVerifyFolderAccButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text VerifyFolderAccText
        {
            get
            {
                if (null == fVerifyFolderAccText)
                {
                    fVerifyFolderAccText = new Text("VerifyFolderAccText", VerifyFolderAccessButton);
                    fVerifyFolderAccText.UIMap.Scope = UIASeachScope.Children;
                    fVerifyFolderAccText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fVerifyFolderAccText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Verify Folder Access");
                }

                return fVerifyFolderAccText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group DialingSettingsGroup
        {
            get
            {
                if (null == fDialingSettingsGroup)
                {
                    fDialingSettingsGroup = new Group("DialingSettingsGroup", LANFaxSetupGrouGroup);
                    fDialingSettingsGroup.UIMap.Scope = UIASeachScope.Children;
                    fDialingSettingsGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fDialingSettingsGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Dialing Settings");
                }

                return fDialingSettingsGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DialingSettingsText
        {
            get
            {
                if (null == fDialingSettingsText)
                {
                    fDialingSettingsText = new Text("DialingSettingsText", DialingSettingsGroup);
                    fDialingSettingsText.UIMap.Scope = UIASeachScope.Children;
                    fDialingSettingsText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDialingSettingsText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Dialing Settings");
                }

                return fDialingSettingsText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text MaximumRetryAttDup0Text
        {
            get
            {
                if (null == fMaximumRetryAttDup0Text)
                {
                    fMaximumRetryAttDup0Text = new Text("MaximumRetryAttDup0Text", DialingSettingsGroup);
                    fMaximumRetryAttDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fMaximumRetryAttDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fMaximumRetryAttDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximum Retry Attempts");
                }

                return fMaximumRetryAttDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text MaximumRetryAttDup1Text
        {
            get
            {
                if (null == fMaximumRetryAttDup1Text)
                {
                    fMaximumRetryAttDup1Text = new Text("MaximumRetryAttDup1Text", MaximumRetryAttDup0Text);
                    fMaximumRetryAttDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fMaximumRetryAttDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fMaximumRetryAttDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximum Retry Attempts");
                }

                return fMaximumRetryAttDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBoxMaxRetryAttemptEdit
        {
            get
            {
                if (null == fTextBoxa0efb839Edit)
                {
                    fTextBoxa0efb839Edit = new Edit("TextBoxa0efb839Edit", DialingSettingsGroup);
                    fTextBoxa0efb839Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxa0efb839Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBoxa0efb839Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a0efb839-9faf-42dc-8c10-1cc419a32bfe");
                }

                return fTextBoxa0efb839Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup4Pane
        {
            get
            {
                if (null == fScrollViewerPARDup4Pane)
                {
                    fScrollViewerPARDup4Pane = new Pane("ScrollViewerPARDup4Pane", TextBoxMaxRetryAttemptEdit);
                    fScrollViewerPARDup4Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup4Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup5ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup5ScrollBar)
                {
                    fScrollBarVerticDup5ScrollBar = new ScrollBar("ScrollBarVerticDup5ScrollBar", ScrollViewerPARDup4Pane);
                    fScrollBarVerticDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup5ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup5ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup5ScrollBar)
                {
                    fScrollBarHorizoDup5ScrollBar = new ScrollBar("ScrollBarHorizoDup5ScrollBar", ScrollViewerPARDup4Pane);
                    fScrollBarHorizoDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup5ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text RetryIntervalmiDup0Text
        {
            get
            {
                if (null == fRetryIntervalmiDup0Text)
                {
                    fRetryIntervalmiDup0Text = new Text("RetryIntervalmiDup0Text", DialingSettingsGroup);
                    fRetryIntervalmiDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fRetryIntervalmiDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fRetryIntervalmiDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retry Interval (minutes)");
                }

                return fRetryIntervalmiDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text RetryIntervalmiDup1Text
        {
            get
            {
                if (null == fRetryIntervalmiDup1Text)
                {
                    fRetryIntervalmiDup1Text = new Text("RetryIntervalmiDup1Text", RetryIntervalmiDup0Text);
                    fRetryIntervalmiDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fRetryIntervalmiDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRetryIntervalmiDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retry Interval (minutes)");
                }

                return fRetryIntervalmiDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit RetryIntervalEditTextBox
        {
            get
            {
                if (null == fTextBox1b041501Edit)
                {
                    fTextBox1b041501Edit = new Edit("TextBox1b041501Edit", DialingSettingsGroup);
                    fTextBox1b041501Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox1b041501Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox1b041501Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1b041501-9935-4d07-a8e3-4ec26ef5be93");
                }

                return fTextBox1b041501Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup5Pane
        {
            get
            {
                if (null == fScrollViewerPARDup5Pane)
                {
                    fScrollViewerPARDup5Pane = new Pane("ScrollViewerPARDup5Pane", RetryIntervalEditTextBox);
                    fScrollViewerPARDup5Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup5Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup6ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup6ScrollBar)
                {
                    fScrollBarVerticDup6ScrollBar = new ScrollBar("ScrollBarVerticDup6ScrollBar", ScrollViewerPARDup5Pane);
                    fScrollBarVerticDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup6ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup6ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup6ScrollBar)
                {
                    fScrollBarHorizoDup6ScrollBar = new ScrollBar("ScrollBarHorizoDup6ScrollBar", ScrollViewerPARDup5Pane);
                    fScrollBarHorizoDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup6ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group InputSettingsGrGroup
        {
            get
            {
                if (null == fInputSettingsGrGroup)
                {
                    fInputSettingsGrGroup = new Group("InputSettingsGrGroup", LANFaxSetupGrouGroup);
                    fInputSettingsGrGroup.UIMap.Scope = UIASeachScope.Children;
                    fInputSettingsGrGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fInputSettingsGrGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Input Settings");
                }

                return fInputSettingsGrGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text InputSettingsTeText
        {
            get
            {
                if (null == fInputSettingsTeText)
                {
                    fInputSettingsTeText = new Text("InputSettingsTeText", InputSettingsGrGroup);
                    fInputSettingsTeText.UIMap.Scope = UIASeachScope.Children;
                    fInputSettingsTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fInputSettingsTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Input Settings");
                }

                return fInputSettingsTeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotificationText
        {
            get
            {
                if (null == fNotificationText)
                {
                    fNotificationText = new Text("NotificationText", InputSettingsGrGroup);
                    fNotificationText.UIMap.Scope = UIASeachScope.Children;
                    fNotificationText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fNotificationText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Notification");
                }

                return fNotificationText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotificationTexText
        {
            get
            {
                if (null == fNotificationTexText)
                {
                    fNotificationTexText = new Text("NotificationTexText", NotificationText);
                    fNotificationTexText.UIMap.Scope = UIASeachScope.Children;
                    fNotificationTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNotificationTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Notification");
                }

                return fNotificationTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox NotificationComboBox
        {
            get
            {
                if (null == fComboBoxd7ebe04ComboBox)
                {
                    fComboBoxd7ebe04ComboBox = new ComboBox("ComboBoxd7ebe04ComboBox", InputSettingsGrGroup);
                    fComboBoxd7ebe04ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxd7ebe04ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxd7ebe04ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"d7ebe04c-e411-4c6c-85f2-b015b78ad9e9");
                }

                return fComboBoxd7ebe04ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ErrorCorrectionDup0Text
        {
            get
            {
                if (null == fErrorCorrectionDup0Text)
                {
                    fErrorCorrectionDup0Text = new Text("ErrorCorrectionDup0Text", InputSettingsGrGroup);
                    fErrorCorrectionDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fErrorCorrectionDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fErrorCorrectionDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Error Correction Mode");
                }

                return fErrorCorrectionDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ErrorCorrectionDup1Text
        {
            get
            {
                if (null == fErrorCorrectionDup1Text)
                {
                    fErrorCorrectionDup1Text = new Text("ErrorCorrectionDup1Text", ErrorCorrectionDup0Text);
                    fErrorCorrectionDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fErrorCorrectionDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fErrorCorrectionDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Error Correction Mode");
                }

                return fErrorCorrectionDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ErrorCorrectionComboBox
        {
            get
            {
                if (null == fComboBox7a33df3ComboBox)
                {
                    fComboBox7a33df3ComboBox = new ComboBox("ComboBox7a33df3ComboBox", InputSettingsGrGroup);
                    fComboBox7a33df3ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox7a33df3ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox7a33df3ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a33df32-4792-47aa-b457-1c5e44d443d9");
                }

                return fComboBox7a33df3ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotificationTimDup0Text
        {
            get
            {
                if (null == fNotificationTimDup0Text)
                {
                    fNotificationTimDup0Text = new Text("NotificationTimDup0Text", InputSettingsGrGroup);
                    fNotificationTimDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fNotificationTimDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fNotificationTimDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Notification Timeout (minutes)");
                }

                return fNotificationTimDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotificationTimDup1Text
        {
            get
            {
                if (null == fNotificationTimDup1Text)
                {
                    fNotificationTimDup1Text = new Text("NotificationTimDup1Text", NotificationTimDup0Text);
                    fNotificationTimDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fNotificationTimDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNotificationTimDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Notification Timeout (minutes)");
                }

                return fNotificationTimDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit NotificationTimeoutEditTextBox
        {
            get
            {
                if (null == fTextBox025adef9Edit)
                {
                    fTextBox025adef9Edit = new Edit("TextBox025adef9Edit", InputSettingsGrGroup);
                    fTextBox025adef9Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox025adef9Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox025adef9Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"025adef9-7861-481d-8fda-fbf409652ed0");
                }

                return fTextBox025adef9Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup6Pane
        {
            get
            {
                if (null == fScrollViewerPARDup6Pane)
                {
                    fScrollViewerPARDup6Pane = new Pane("ScrollViewerPARDup6Pane", NotificationTimeoutEditTextBox);
                    fScrollViewerPARDup6Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup6Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup7ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup7ScrollBar)
                {
                    fScrollBarVerticDup7ScrollBar = new ScrollBar("ScrollBarVerticDup7ScrollBar", ScrollViewerPARDup6Pane);
                    fScrollBarVerticDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup7ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup7ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup7ScrollBar)
                {
                    fScrollBarHorizoDup7ScrollBar = new ScrollBar("ScrollBarHorizoDup7ScrollBar", ScrollViewerPARDup6Pane);
                    fScrollBarHorizoDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup7ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group OutputSettingsGGroup
        {
            get
            {
                if (null == fOutputSettingsGGroup)
                {
                    fOutputSettingsGGroup = new Group("OutputSettingsGGroup", LANFaxSetupGrouGroup);
                    fOutputSettingsGGroup.UIMap.Scope = UIASeachScope.Children;
                    fOutputSettingsGGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fOutputSettingsGGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Output Settings");
                }

                return fOutputSettingsGGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OutputSettingsTText
        {
            get
            {
                if (null == fOutputSettingsTText)
                {
                    fOutputSettingsTText = new Text("OutputSettingsTText", OutputSettingsGGroup);
                    fOutputSettingsTText.UIMap.Scope = UIASeachScope.Children;
                    fOutputSettingsTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOutputSettingsTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Output Settings");
                }

                return fOutputSettingsTText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TransmissionSpeDup0Text
        {
            get
            {
                if (null == fTransmissionSpeDup0Text)
                {
                    fTransmissionSpeDup0Text = new Text("TransmissionSpeDup0Text", OutputSettingsGGroup);
                    fTransmissionSpeDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fTransmissionSpeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTransmissionSpeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Transmission Speed");
                }

                return fTransmissionSpeDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TransmissionSpeDup1Text
        {
            get
            {
                if (null == fTransmissionSpeDup1Text)
                {
                    fTransmissionSpeDup1Text = new Text("TransmissionSpeDup1Text", TransmissionSpeDup0Text);
                    fTransmissionSpeDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fTransmissionSpeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTransmissionSpeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Transmission Speed");
                }

                return fTransmissionSpeDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox LanFaxSpeedComboBox
        {
            get
            {
                if (null == fComboBox41eac0dComboBox)
                {
                    fComboBox41eac0dComboBox = new ComboBox("ComboBox41eac0dComboBox", OutputSettingsGGroup);
                    fComboBox41eac0dComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox41eac0dComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox41eac0dComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"41eac0de-08bc-4bcb-afea-a862e7ab3c85");
                }

                return fComboBox41eac0dComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CoverPageText
        {
            get
            {
                if (null == fCoverPageText)
                {
                    fCoverPageText = new Text("CoverPageText", OutputSettingsGGroup);
                    fCoverPageText.UIMap.Scope = UIASeachScope.Children;
                    fCoverPageText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fCoverPageText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cover Page");
                }

                return fCoverPageText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CoverPageTextBlText
        {
            get
            {
                if (null == fCoverPageTextBlText)
                {
                    fCoverPageTextBlText = new Text("CoverPageTextBlText", CoverPageText);
                    fCoverPageTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fCoverPageTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCoverPageTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cover Page");
                }

                return fCoverPageTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox LanFaxCoverPageComboBox
        {
            get
            {
                if (null == fComboBox8070d42ComboBox)
                {
                    fComboBox8070d42ComboBox = new ComboBox("ComboBox8070d42ComboBox", OutputSettingsGGroup);
                    fComboBox8070d42ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox8070d42ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox8070d42ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8070d42c-3648-4429-b3cb-478f8679744d");
                }

                return fComboBox8070d42ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup8ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup8ScrollBar)
                {
                    fScrollBarVerticDup8ScrollBar = new ScrollBar("ScrollBarVerticDup8ScrollBar", ScrollViewerPane);
                    fScrollBarVerticDup8ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup8ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RepeatButtonLinDup0Button
        {
            get
            {
                if (null == fRepeatButtonLinDup0Button)
                {
                    fRepeatButtonLinDup0Button = new Button("RepeatButtonLinDup0Button", ScrollBarVerticDup8ScrollBar);
                    fRepeatButtonLinDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonLinDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonLinDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LineUp");
                }

                return fRepeatButtonLinDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RepeatButtonPagDup0Button
        {
            get
            {
                if (null == fRepeatButtonPagDup0Button)
                {
                    fRepeatButtonPagDup0Button = new Button("RepeatButtonPagDup0Button", ScrollBarVerticDup8ScrollBar);
                    fRepeatButtonPagDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageUp");
                }

                return fRepeatButtonPagDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RepeatButtonPagDup1Button
        {
            get
            {
                if (null == fRepeatButtonPagDup1Button)
                {
                    fRepeatButtonPagDup1Button = new Button("RepeatButtonPagDup1Button", ScrollBarVerticDup8ScrollBar);
                    fRepeatButtonPagDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageDown");
                }

                return fRepeatButtonPagDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbThumb
        {
            get
            {
                if (null == fThumbThumb)
                {
                    fThumbThumb = new Thumb("ThumbThumb", ScrollBarVerticDup8ScrollBar);
                    fThumbThumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbThumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RepeatButtonLinDup1Button
        {
            get
            {
                if (null == fRepeatButtonLinDup1Button)
                {
                    fRepeatButtonLinDup1Button = new Button("RepeatButtonLinDup1Button", ScrollBarVerticDup8ScrollBar);
                    fRepeatButtonLinDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonLinDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonLinDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LineDown");
                }

                return fRepeatButtonLinDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup8ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup8ScrollBar)
                {
                    fScrollBarHorizoDup8ScrollBar = new ScrollBar("ScrollBarHorizoDup8ScrollBar", ScrollViewerPane);
                    fScrollBarHorizoDup8ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup8ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup4TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup4TabItem)
                {
                    fSystemWindowsCoDup4TabItem = new TabItem("SystemWindowsCoDup4TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup4TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ff96a045-6e12-4ce3-ba85-b65d16c39ffb");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup4TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoFolderTexDup0Text
        {
            get
            {
                if (null == fSendtoFolderTexDup0Text)
                {
                    fSendtoFolderTexDup0Text = new Text("SendtoFolderTexDup0Text", SystemWindowsCoDup4TabItem);
                    fSendtoFolderTexDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoFolderTexDup1Text
        {
            get
            {
                if (null == fSendtoFolderTexDup1Text)
                {
                    fSendtoFolderTexDup1Text = new Text("SendtoFolderTexDup1Text", SendtoFolderTexDup0Text);
                    fSendtoFolderTexDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text7a57f43ecb1Text
        {
            get
            {
                if (null == fText7a57f43ecb1Text)
                {
                    fText7a57f43ecb1Text = new Text("Text7a57f43ecb1Text", SystemWindowsCoDup4TabItem);
                    fText7a57f43ecb1Text.UIMap.Scope = UIASeachScope.Children;
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText7a57f43ecb1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text654b650dd19Text
        {
            get
            {
                if (null == fText654b650dd19Text)
                {
                    fText654b650dd19Text = new Text("Text654b650dd19Text", SystemWindowsCoDup4TabItem);
                    fText654b650dd19Text.UIMap.Scope = UIASeachScope.Children;
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText654b650dd19Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup5TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup5TabItem)
                {
                    fSystemWindowsCoDup5TabItem = new TabItem("WorkflowsTabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup5TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"38feb495-2893-4d8b-8961-31ebc2a3bd56");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup5TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text WorkflowsTextmWText
        {
            get
            {
                if (null == fWorkflowsTextmWText)
                {
                    fWorkflowsTextmWText = new Text("WorkflowsTextmWText", SystemWindowsCoDup5TabItem);
                    fWorkflowsTextmWText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                }

                return fWorkflowsTextmWText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text WorkflowsTextBlText
        {
            get
            {
                if (null == fWorkflowsTextBlText)
                {
                    fWorkflowsTextBlText = new Text("WorkflowsTextBlText", WorkflowsTextmWText);
                    fWorkflowsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                }

                return fWorkflowsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text22D9C34E84CText
        {
            get
            {
                if (null == fText22D9C34E84CText)
                {
                    fText22D9C34E84CText = new Text("Text22D9C34E84CText", SystemWindowsCoDup5TabItem);
                    fText22D9C34E84CText.UIMap.Scope = UIASeachScope.Children;
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22D9C34E-84C8-4995-AC9E-5B46F8284284");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText22D9C34E84CText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextC8D15BD39C8Text
        {
            get
            {
                if (null == fTextC8D15BD39C8Text)
                {
                    fTextC8D15BD39C8Text = new Text("TextC8D15BD39C8Text", SystemWindowsCoDup5TabItem);
                    fTextC8D15BD39C8Text.UIMap.Scope = UIASeachScope.Children;
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C8D15BD3-9C8D-484c-A5E2-309CA8AA6C56");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextC8D15BD39C8Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup6TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup6TabItem)
                {
                    fSystemWindowsCoDup6TabItem = new TabItem("SystemWindowsCoDup6TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup6TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b8c06323-208e-4239-a523-a025661e0eab");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup6TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddressingTextmText
        {
            get
            {
                if (null == fAddressingTextmText)
                {
                    fAddressingTextmText = new Text("AddressingTextmText", SystemWindowsCoDup6TabItem);
                    fAddressingTextmText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextmText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddressingTextBText
        {
            get
            {
                if (null == fAddressingTextBText)
                {
                    fAddressingTextBText = new Text("AddressingTextBText", AddressingTextmText);
                    fAddressingTextBText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text47EB5CBA4D1Text
        {
            get
            {
                if (null == fText47EB5CBA4D1Text)
                {
                    fText47EB5CBA4D1Text = new Text("Text47EB5CBA4D1Text", SystemWindowsCoDup6TabItem);
                    fText47EB5CBA4D1Text.UIMap.Scope = UIASeachScope.Children;
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"47EB5CBA-4D1C-4eee-AD64-E26BDA31A3AC");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText47EB5CBA4D1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text0757E148179Text
        {
            get
            {
                if (null == fText0757E148179Text)
                {
                    fText0757E148179Text = new Text("Text0757E148179Text", SystemWindowsCoDup6TabItem);
                    fText0757E148179Text.UIMap.Scope = UIASeachScope.Children;
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0757E148-1794-4a5d-B378-6BE8049F65E1");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText0757E148179Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem DeviceConfiguraTabItem
        {
            get
            {
                if (null == fDeviceConfiguraTabItem)
                {
                    fDeviceConfiguraTabItem = new TabItem("DeviceConfiguraTabItem", TabControlec0fdTab);
                    fDeviceConfiguraTabItem.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6DF1E016-517F-40e4-A63E-CD48D560192F");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                }

                return fDeviceConfiguraTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceConfiguraText
        {
            get
            {
                if (null == fDeviceConfiguraText)
                {
                    fDeviceConfiguraText = new Text("DeviceConfiguraText", DeviceConfiguraTabItem);
                    fDeviceConfiguraText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                }

                return fDeviceConfiguraText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem TemplateConfiguTabItem
        {
            get
            {
                if (null == fTemplateConfiguTabItem)
                {
                    fTemplateConfiguTabItem = new TabItem("TemplateConfiguTabItem", TabControlec0fdTab);
                    fTemplateConfiguTabItem.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AC05F9B9-A7D8-4b34-80E7-910FB9870D47");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                }

                return fTemplateConfiguTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TemplateConfiguText
        {
            get
            {
                if (null == fTemplateConfiguText)
                {
                    fTemplateConfiguText = new Text("TemplateConfiguText", TemplateConfiguTabItem);
                    fTemplateConfiguText.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                }

                return fTemplateConfiguText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem LogTabItem9b4f3TabItem
        {
            get
            {
                if (null == fLogTabItem9b4f3TabItem)
                {
                    fLogTabItem9b4f3TabItem = new TabItem("LogTabItem9b4f3TabItem", TabControlec0fdTab);
                    fLogTabItem9b4f3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9b4f34bb-d75a-4080-9be3-1c50ec31c5b6");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTabItem9b4f3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text LogTextBlockText
        {
            get
            {
                if (null == fLogTextBlockText)
                {
                    fLogTextBlockText = new Text("LogTextBlockText", LogTabItem9b4f3TabItem);
                    fLogTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup7TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup7TabItem)
                {
                    fSystemWindowsCoDup7TabItem = new TabItem("SystemWindowsCoDup7TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup7TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3AC8D4A8-3B06-421A-911B-E8CA248A9ED4");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup7TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SecurityTextmSeText
        {
            get
            {
                if (null == fSecurityTextmSeText)
                {
                    fSecurityTextmSeText = new Text("SecurityTextmSeText", SystemWindowsCoDup7TabItem);
                    fSecurityTextmSeText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mSecurityTabLabel");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                }

                return fSecurityTextmSeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SecurityTextBloText
        {
            get
            {
                if (null == fSecurityTextBloText)
                {
                    fSecurityTextBloText = new Text("SecurityTextBloText", SecurityTextmSeText);
                    fSecurityTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                }

                return fSecurityTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text8A7A84DB894Text
        {
            get
            {
                if (null == fText8A7A84DB894Text)
                {
                    fText8A7A84DB894Text = new Text("Text8A7A84DB894Text", SystemWindowsCoDup7TabItem);
                    fText8A7A84DB894Text.UIMap.Scope = UIASeachScope.Children;
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8A7A84DB-8945-40E1-A0F9-C40DDD129739");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText8A7A84DB894Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text16F78FB18FFText
        {
            get
            {
                if (null == fText16F78FB18FFText)
                {
                    fText16F78FB18FFText = new Text("Text16F78FB18FFText", SystemWindowsCoDup7TabItem);
                    fText16F78FB18FFText.UIMap.Scope = UIASeachScope.Children;
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16F78FB1-8FF9-4B0D-8251-FB09F520EA73");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText16F78FB18FFText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup8TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup8TabItem)
                {
                    fSystemWindowsCoDup8TabItem = new TabItem("SystemWindowsCoDup8TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup8TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1678607C-20BF-4137-8238-C9D46EA8FF70");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup8TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AnalyticsTextmAText
        {
            get
            {
                if (null == fAnalyticsTextmAText)
                {
                    fAnalyticsTextmAText = new Text("AnalyticsTextmAText", SystemWindowsCoDup8TabItem);
                    fAnalyticsTextmAText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAnalyticsTabLabel");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                }

                return fAnalyticsTextmAText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AnalyticsTextBlText
        {
            get
            {
                if (null == fAnalyticsTextBlText)
                {
                    fAnalyticsTextBlText = new Text("AnalyticsTextBlText", AnalyticsTextmAText);
                    fAnalyticsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                }

                return fAnalyticsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem AboutTabItemf45TabItem
        {
            get
            {
                if (null == fAboutTabItemf45TabItem)
                {
                    fAboutTabItemf45TabItem = new TabItem("AboutTabItemf45TabItem", TabControlec0fdTab);
                    fAboutTabItemf45TabItem.UIMap.Scope = UIASeachScope.Children;
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f45c22d9-f77a-481a-95bc-09cdff03e131");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                }

                return fAboutTabItemf45TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AboutTextBlockText
        {
            get
            {
                if (null == fAboutTextBlockText)
                {
                    fAboutTextBlockText = new Text("AboutTextBlockText", AboutTabItemf45TabItem);
                    fAboutTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                }

                return fAboutTextBlockText;
            }
        }
    }
}

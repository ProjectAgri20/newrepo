//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------

namespace HP.ScalableTest.Plugin.DSSConfiguration.UIMaps
{
    using TopCat.TestApi.Enums;
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class DSS_Address
    {
        /// <summary>
        /// Backing field for HPDigitalSendinWindow property
        /// </summary>
        private Window fHPDigitalSendinWindow;

        /// <summary>
        /// Backing field for HPDigitalSendinTitleBar property
        /// </summary>
        private TitleBar fHPDigitalSendinTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyMenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyMenuBar;

        /// <summary>
        /// Backing field for SystemItem1MenuItem property
        /// </summary>
        private MenuItem fSystemItem1MenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizButton property
        /// </summary>
        private Button fMinimizeMinimizButton;

        /// <summary>
        /// Backing field for RestoreRestoreButton property
        /// </summary>
        private Button fRestoreRestoreButton;

        /// <summary>
        /// Backing field for CloseCloseButton property
        /// </summary>
        private Button fCloseCloseButton;

        /// <summary>
        /// Backing field for HelpButtonCB8CFButton property
        /// </summary>
        private Button fHelpButtonCB8CFButton;

        /// <summary>
        /// Backing field for HelpTextBlockText property
        /// </summary>
        private Text fHelpTextBlockText;

        /// <summary>
        /// Backing field for ApplyButton61E2Button property
        /// </summary>
        private Button fApplyButton61E2Button;

        /// <summary>
        /// Backing field for ApplyTextBlockText property
        /// </summary>
        private Text fApplyTextBlockText;

        /// <summary>
        /// Backing field for CancelButton65CButton property
        /// </summary>
        private Button fCancelButton65CButton;

        /// <summary>
        /// Backing field for CancelTextBlockText property
        /// </summary>
        private Text fCancelTextBlockText;

        /// <summary>
        /// Backing field for OKButtonCC2EF49Button property
        /// </summary>
        private Button fOKButtonCC2EF49Button;

        /// <summary>
        /// Backing field for OKTextBlockText property
        /// </summary>
        private Text fOKTextBlockText;

        /// <summary>
        /// Backing field for TabControlec0fdTab property
        /// </summary>
        private Tab fTabControlec0fdTab;

        /// <summary>
        /// Backing field for SystemWindowsCoDup0TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup0TabItem;

        /// <summary>
        /// Backing field for GeneralTextmGenText property
        /// </summary>
        private Text fGeneralTextmGenText;

        /// <summary>
        /// Backing field for GeneralTextBlocText property
        /// </summary>
        private Text fGeneralTextBlocText;

        /// <summary>
        /// Backing field for Text933345b04e3Text property
        /// </summary>
        private Text fText933345b04e3Text;

        /// <summary>
        /// Backing field for Text786caf67344Text property
        /// </summary>
        private Text fText786caf67344Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup1TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup1TabItem;

        /// <summary>
        /// Backing field for AuthenticationTDup0Text property
        /// </summary>
        private Text fAuthenticationTDup0Text;

        /// <summary>
        /// Backing field for AuthenticationTDup1Text property
        /// </summary>
        private Text fAuthenticationTDup1Text;

        /// <summary>
        /// Backing field for Text31EC91730B9Text property
        /// </summary>
        private Text fText31EC91730B9Text;

        /// <summary>
        /// Backing field for TextA479C271445Text property
        /// </summary>
        private Text fTextA479C271445Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup2TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup2TabItem;

        /// <summary>
        /// Backing field for EmailTextmEmailText property
        /// </summary>
        private Text fEmailTextmEmailText;

        /// <summary>
        /// Backing field for EmailTextBlockText property
        /// </summary>
        private Text fEmailTextBlockText;

        /// <summary>
        /// Backing field for Text32de714a8bdText property
        /// </summary>
        private Text fText32de714a8bdText;

        /// <summary>
        /// Backing field for Text3b2a8761f4fText property
        /// </summary>
        private Text fText3b2a8761f4fText;

        /// <summary>
        /// Backing field for TextBlockDup0Text property
        /// </summary>
        private Text fTextBlockDup0Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup3TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup3TabItem;

        /// <summary>
        /// Backing field for FaxTextmFaxTabLText property
        /// </summary>
        private Text fFaxTextmFaxTabLText;

        /// <summary>
        /// Backing field for FaxTextBlockText property
        /// </summary>
        private Text fFaxTextBlockText;

        /// <summary>
        /// Backing field for TextD1ED4F16F38Text property
        /// </summary>
        private Text fTextD1ED4F16F38Text;

        /// <summary>
        /// Backing field for Text7DDE04FD251Text property
        /// </summary>
        private Text fText7DDE04FD251Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup4TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup4TabItem;

        /// <summary>
        /// Backing field for SendtoFolderTexDup0Text property
        /// </summary>
        private Text fSendtoFolderTexDup0Text;

        /// <summary>
        /// Backing field for SendtoFolderTexDup1Text property
        /// </summary>
        private Text fSendtoFolderTexDup1Text;

        /// <summary>
        /// Backing field for Text7a57f43ecb1Text property
        /// </summary>
        private Text fText7a57f43ecb1Text;

        /// <summary>
        /// Backing field for Text654b650dd19Text property
        /// </summary>
        private Text fText654b650dd19Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup5TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup5TabItem;

        /// <summary>
        /// Backing field for WorkflowsTextmWText property
        /// </summary>
        private Text fWorkflowsTextmWText;

        /// <summary>
        /// Backing field for WorkflowsTextBlText property
        /// </summary>
        private Text fWorkflowsTextBlText;

        /// <summary>
        /// Backing field for Text22D9C34E84CText property
        /// </summary>
        private Text fText22D9C34E84CText;

        /// <summary>
        /// Backing field for TextC8D15BD39C8Text property
        /// </summary>
        private Text fTextC8D15BD39C8Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup6TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup6TabItem;

        /// <summary>
        /// Backing field for AddressingTextmText property
        /// </summary>
        private Text fAddressingTextmText;

        /// <summary>
        /// Backing field for AddressingTextBText property
        /// </summary>
        private Text fAddressingTextBText;

        /// <summary>
        /// Backing field for Text47EB5CBA4D1Text property
        /// </summary>
        private Text fText47EB5CBA4D1Text;

        /// <summary>
        /// Backing field for TextBlockDup1Text property
        /// </summary>
        private Text fTextBlockDup1Text;

        /// <summary>
        /// Backing field for Text0757E148179Text property
        /// </summary>
        private Text fText0757E148179Text;

        /// <summary>
        /// Backing field for ScrollViewerPane property
        /// </summary>
        private Pane fScrollViewerPane;

        /// <summary>
        /// Backing field for AddressingNetwoCustom property
        /// </summary>
        private Custom fAddressingNetwoCustom;

        /// <summary>
        /// Backing field for ErrorConflictUsCustom property
        /// </summary>
        private Custom fErrorConflictUsCustom;

        /// <summary>
        /// Backing field for SearchMethodGroGroup property
        /// </summary>
        private Group fSearchMethodGroGroup;

        /// <summary>
        /// Backing field for SearchMethodTexText property
        /// </summary>
        private Text fSearchMethodTexText;

        /// <summary>
        /// Backing field for QuickSearchFindRadioButton property
        /// </summary>
        private RadioButton fQuickSearchFindRadioButton;

        /// <summary>
        /// Backing field for QuickSearchFindText property
        /// </summary>
        private Text fQuickSearchFindText;

        /// <summary>
        /// Backing field for DetailedSearchFRadioButton property
        /// </summary>
        private RadioButton fDetailedSearchFRadioButton;

        /// <summary>
        /// Backing field for DetailedSearchFText property
        /// </summary>
        private Text fDetailedSearchFText;

        /// <summary>
        /// Backing field for PersonalContactGroup property
        /// </summary>
        private Group fPersonalContactGroup;

        /// <summary>
        /// Backing field for PersonalContactText property
        /// </summary>
        private Text fPersonalContactText;

        /// <summary>
        /// Backing field for ThepersonalcontText property
        /// </summary>
        private Text fThepersonalcontText;

        /// <summary>
        /// Backing field for EnablePersonalCCheckBox property
        /// </summary>
        private CheckBox fEnablePersonalCCheckBox;

        /// <summary>
        /// Backing field for EnablePersonalCText property
        /// </summary>
        private Text fEnablePersonalCText;

        /// <summary>
        /// Backing field for TestExchangeSerGroup property
        /// </summary>
        private Group fTestExchangeSerGroup;

        /// <summary>
        /// Backing field for TestExchangeSerText property
        /// </summary>
        private Text fTestExchangeSerText;

        /// <summary>
        /// Backing field for WindowsDomainDup0Text property
        /// </summary>
        private Text fWindowsDomainDup0Text;

        /// <summary>
        /// Backing field for WindowsDomainTeText property
        /// </summary>
        private Text fWindowsDomainTeText;

        /// <summary>
        /// Backing field for TextBox0857B9D0Edit property
        /// </summary>
        private Edit fTextBox0857B9D0Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup0Pane property
        /// </summary>
        private Pane fScrollViewerPARDup0Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup0ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup0ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup0ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup0ScrollBar;

        /// <summary>
        /// Backing field for UsernameDup0Text property
        /// </summary>
        private Text fUsernameDup0Text;

        /// <summary>
        /// Backing field for UsernameTextBloDup0Text property
        /// </summary>
        private Text fUsernameTextBloDup0Text;

        /// <summary>
        /// Backing field for TextBox9B0DA4ABEdit property
        /// </summary>
        private Edit fTextBox9B0DA4ABEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup1Pane property
        /// </summary>
        private Pane fScrollViewerPARDup1Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup1ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup1ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup1ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup1ScrollBar;

        /// <summary>
        /// Backing field for PasswordDup0Text property
        /// </summary>
        private Text fPasswordDup0Text;

        /// <summary>
        /// Backing field for PasswordTextBloDup0Text property
        /// </summary>
        private Text fPasswordTextBloDup0Text;

        /// <summary>
        /// Backing field for PasswordBox6B3CEdit property
        /// </summary>
        private Edit fPasswordBox6B3CEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup2Pane property
        /// </summary>
        private Pane fScrollViewerPARDup2Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup2ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup2ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup2ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup2ScrollBar;

        /// <summary>
        /// Backing field for TestText property
        /// </summary>
        private Text fTestText;

        /// <summary>
        /// Backing field for TestTextBlockDup0Text property
        /// </summary>
        private Text fTestTextBlockDup0Text;

        /// <summary>
        /// Backing field for TextBoxDE0C2350Edit property
        /// </summary>
        private Edit fTextBoxDE0C2350Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup3Pane property
        /// </summary>
        private Pane fScrollViewerPARDup3Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup3ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup3ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup3ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup3ScrollBar;

        /// <summary>
        /// Backing field for TestButtonA90BEButton property
        /// </summary>
        private Button fTestButtonA90BEButton;

        /// <summary>
        /// Backing field for TestTextBlockDup1Text property
        /// </summary>
        private Text fTestTextBlockDup1Text;

        /// <summary>
        /// Backing field for LDAPReplicationGroup property
        /// </summary>
        private Group fLDAPReplicationGroup;

        /// <summary>
        /// Backing field for LDAPReplicationText property
        /// </summary>
        private Text fLDAPReplicationText;

        /// <summary>
        /// Backing field for EnableNetworkCoCheckBox property
        /// </summary>
        private CheckBox fEnableNetworkCoCheckBox;

        /// <summary>
        /// Backing field for EnableNetworkCoText property
        /// </summary>
        private Text fEnableNetworkCoText;

        /// <summary>
        /// Backing field for ExpanderFD3555EGroup property
        /// </summary>
        private Group fExpanderFD3555EGroup;

        /// <summary>
        /// Backing field for ButtonHeaderSitDup0Button property
        /// </summary>
        private Button fButtonHeaderSitDup0Button;

        /// <summary>
        /// Backing field for NetworkDirectorGroup property
        /// </summary>
        private Group fNetworkDirectorGroup;

        /// <summary>
        /// Backing field for NetworkDirectorText property
        /// </summary>
        private Text fNetworkDirectorText;

        /// <summary>
        /// Backing field for LDAPServerAddreDup0Text property
        /// </summary>
        private Text fLDAPServerAddreDup0Text;

        /// <summary>
        /// Backing field for LDAPServerAddreDup1Text property
        /// </summary>
        private Text fLDAPServerAddreDup1Text;

        /// <summary>
        /// Backing field for TextBox858933a3Edit property
        /// </summary>
        private Edit fTextBox858933a3Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup4Pane property
        /// </summary>
        private Pane fScrollViewerPARDup4Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup4ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup4ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup4ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup4ScrollBar;

        /// <summary>
        /// Backing field for AutoFindButton3Button property
        /// </summary>
        private Button fAutoFindButton3Button;

        /// <summary>
        /// Backing field for AutoFindTextBloDup0Text property
        /// </summary>
        private Text fAutoFindTextBloDup0Text;

        /// <summary>
        /// Backing field for HostnameorIPaddDup0Text property
        /// </summary>
        private Text fHostnameorIPaddDup0Text;

        /// <summary>
        /// Backing field for HostnameorIPaddDup1Text property
        /// </summary>
        private Text fHostnameorIPaddDup1Text;

        /// <summary>
        /// Backing field for PortText property
        /// </summary>
        private Text fPortText;

        /// <summary>
        /// Backing field for PortTextBlockText property
        /// </summary>
        private Text fPortTextBlockText;

        /// <summary>
        /// Backing field for UseasecureconneCheckBox property
        /// </summary>
        private CheckBox fUseasecureconneCheckBox;

        /// <summary>
        /// Backing field for UseasecureconneText property
        /// </summary>
        private Text fUseasecureconneText;

        /// <summary>
        /// Backing field for TextBox79f22c3aEdit property
        /// </summary>
        private Edit fTextBox79f22c3aEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup5Pane property
        /// </summary>
        private Pane fScrollViewerPARDup5Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup5ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup5ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup5ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup5ScrollBar;

        /// <summary>
        /// Backing field for Port636isthedefDup0Text property
        /// </summary>
        private Text fPort636isthedefDup0Text;

        /// <summary>
        /// Backing field for Port636isthedefDup1Text property
        /// </summary>
        private Text fPort636isthedefDup1Text;

        /// <summary>
        /// Backing field for ExpanderDD1518FGroup property
        /// </summary>
        private Group fExpanderDD1518FGroup;

        /// <summary>
        /// Backing field for ButtonHeaderSitDup1Button property
        /// </summary>
        private Button fButtonHeaderSitDup1Button;

        /// <summary>
        /// Backing field for ServerAuthenticGroup property
        /// </summary>
        private Group fServerAuthenticGroup;

        /// <summary>
        /// Backing field for ServerAuthenticText property
        /// </summary>
        private Text fServerAuthenticText;

        /// <summary>
        /// Backing field for ServerdoesnotreRadioButton property
        /// </summary>
        private RadioButton fServerdoesnotreRadioButton;

        /// <summary>
        /// Backing field for ServerdoesnotreText property
        /// </summary>
        private Text fServerdoesnotreText;

        /// <summary>
        /// Backing field for ServerrequiresaRadioButton property
        /// </summary>
        private RadioButton fServerrequiresaRadioButton;

        /// <summary>
        /// Backing field for ServerrequiresaText property
        /// </summary>
        private Text fServerrequiresaText;

        /// <summary>
        /// Backing field for ComboBox5cd52d1ComboBox property
        /// </summary>
        private ComboBox fComboBox5cd52d1ComboBox;

        /// <summary>
        /// Backing field for WindowsorLDAPsiText property
        /// </summary>
        private Text fWindowsorLDAPsiText;

        /// <summary>
        /// Backing field for UsernameDup1Text property
        /// </summary>
        private Text fUsernameDup1Text;

        /// <summary>
        /// Backing field for UsernameTextBloDup1Text property
        /// </summary>
        private Text fUsernameTextBloDup1Text;

        /// <summary>
        /// Backing field for TextBoxb54cac9eEdit property
        /// </summary>
        private Edit fTextBoxb54cac9eEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup6Pane property
        /// </summary>
        private Pane fScrollViewerPARDup6Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup6ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup6ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup6ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup6ScrollBar;

        /// <summary>
        /// Backing field for PasswordDup1Text property
        /// </summary>
        private Text fPasswordDup1Text;

        /// <summary>
        /// Backing field for PasswordTextBloDup1Text property
        /// </summary>
        private Text fPasswordTextBloDup1Text;

        /// <summary>
        /// Backing field for PasswordBox8ed9Edit property
        /// </summary>
        private Edit fPasswordBox8ed9Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup7Pane property
        /// </summary>
        private Pane fScrollViewerPARDup7Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup7ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup7ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup7ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup7ScrollBar;

        /// <summary>
        /// Backing field for WindowsDomainDup1Text property
        /// </summary>
        private Text fWindowsDomainDup1Text;

        /// <summary>
        /// Backing field for TextBox1cce79f4Edit property
        /// </summary>
        private Edit fTextBox1cce79f4Edit;

        /// <summary>
        /// Backing field for KerberosDefaultText property
        /// </summary>
        private Text fKerberosDefaultText;

        /// <summary>
        /// Backing field for TextBox757e1b31Edit property
        /// </summary>
        private Edit fTextBox757e1b31Edit;

        /// <summary>
        /// Backing field for KerberosServerHText property
        /// </summary>
        private Text fKerberosServerHText;

        /// <summary>
        /// Backing field for TextBoxe5cfa172Edit property
        /// </summary>
        private Edit fTextBoxe5cfa172Edit;

        /// <summary>
        /// Backing field for KerberosServerPText property
        /// </summary>
        private Text fKerberosServerPText;

        /// <summary>
        /// Backing field for TextBoxf986abfaEdit property
        /// </summary>
        private Edit fTextBoxf986abfaEdit;

        /// <summary>
        /// Backing field for ExpanderB7151C3Group property
        /// </summary>
        private Group fExpanderB7151C3Group;

        /// <summary>
        /// Backing field for ButtonHeaderSitDup2Button property
        /// </summary>
        private Button fButtonHeaderSitDup2Button;

        /// <summary>
        /// Backing field for LDAPDatabaseSeaGroup property
        /// </summary>
        private Group fLDAPDatabaseSeaGroup;

        /// <summary>
        /// Backing field for LDAPDatabaseSeaText property
        /// </summary>
        private Text fLDAPDatabaseSeaText;

        /// <summary>
        /// Backing field for PathtostartsearDup0Text property
        /// </summary>
        private Text fPathtostartsearDup0Text;

        /// <summary>
        /// Backing field for PathtostartsearDup1Text property
        /// </summary>
        private Text fPathtostartsearDup1Text;

        /// <summary>
        /// Backing field for TextBox2e2cfbd5Edit property
        /// </summary>
        private Edit fTextBox2e2cfbd5Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup8Pane property
        /// </summary>
        private Pane fScrollViewerPARDup8Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup8ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup8ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup8ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup8ScrollBar;

        /// <summary>
        /// Backing field for AutoFindButton4Button property
        /// </summary>
        private Button fAutoFindButton4Button;

        /// <summary>
        /// Backing field for AutoFindTextBloDup1Text property
        /// </summary>
        private Text fAutoFindTextBloDup1Text;

        /// <summary>
        /// Backing field for SourceforAttribDup0Text property
        /// </summary>
        private Text fSourceforAttribDup0Text;

        /// <summary>
        /// Backing field for SourceforAttribDup1Text property
        /// </summary>
        private Text fSourceforAttribDup1Text;

        /// <summary>
        /// Backing field for UseActiveDirectRadioButton property
        /// </summary>
        private RadioButton fUseActiveDirectRadioButton;

        /// <summary>
        /// Backing field for UseActiveDirectText property
        /// </summary>
        private Text fUseActiveDirectText;

        /// <summary>
        /// Backing field for UseExchange55DeRadioButton property
        /// </summary>
        private RadioButton fUseExchange55DeRadioButton;

        /// <summary>
        /// Backing field for UseExchange55DeText property
        /// </summary>
        private Text fUseExchange55DeText;

        /// <summary>
        /// Backing field for UseCustomAttribRadioButton property
        /// </summary>
        private RadioButton fUseCustomAttribRadioButton;

        /// <summary>
        /// Backing field for UseCustomAttribText property
        /// </summary>
        private Text fUseCustomAttribText;

        /// <summary>
        /// Backing field for AutoFindButton8Button property
        /// </summary>
        private Button fAutoFindButton8Button;

        /// <summary>
        /// Backing field for AutoFindTextBloDup2Text property
        /// </summary>
        private Text fAutoFindTextBloDup2Text;

        /// <summary>
        /// Backing field for MatchtheRecipieDup0Text property
        /// </summary>
        private Text fMatchtheRecipieDup0Text;

        /// <summary>
        /// Backing field for MatchtheRecipieDup1Text property
        /// </summary>
        private Text fMatchtheRecipieDup1Text;

        /// <summary>
        /// Backing field for TextBox0fd71265Edit property
        /// </summary>
        private Edit fTextBox0fd71265Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup9Pane property
        /// </summary>
        private Pane fScrollViewerPARDup9Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup9ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup9ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup9ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup9ScrollBar;

        /// <summary>
        /// Backing field for AttributeNamefoDup0Text property
        /// </summary>
        private Text fAttributeNamefoDup0Text;

        /// <summary>
        /// Backing field for AttributeNamefoDup1Text property
        /// </summary>
        private Text fAttributeNamefoDup1Text;

        /// <summary>
        /// Backing field for TextBoxc34b5023Edit property
        /// </summary>
        private Edit fTextBoxc34b5023Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup10Pane property
        /// </summary>
        private Pane fScrollViewerPARDup10Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup10ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup10ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup10ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup10ScrollBar;

        /// <summary>
        /// Backing field for AttributeNamefoDup2Text property
        /// </summary>
        private Text fAttributeNamefoDup2Text;

        /// <summary>
        /// Backing field for AttributeNamefoDup3Text property
        /// </summary>
        private Text fAttributeNamefoDup3Text;

        /// <summary>
        /// Backing field for TextBox3a6d11c5Edit property
        /// </summary>
        private Edit fTextBox3a6d11c5Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup11Pane property
        /// </summary>
        private Pane fScrollViewerPARDup11Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup11ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup11ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup11ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup11ScrollBar;

        /// <summary>
        /// Backing field for AdvancedSearchOGroup property
        /// </summary>
        private Group fAdvancedSearchOGroup;

        /// <summary>
        /// Backing field for AdvancedSearchOText property
        /// </summary>
        private Text fAdvancedSearchOText;

        /// <summary>
        /// Backing field for MaximumLDAPAddrDup0Text property
        /// </summary>
        private Text fMaximumLDAPAddrDup0Text;

        /// <summary>
        /// Backing field for MaximumLDAPAddrDup1Text property
        /// </summary>
        private Text fMaximumLDAPAddrDup1Text;

        /// <summary>
        /// Backing field for ComboBox2137ab3ComboBox property
        /// </summary>
        private ComboBox fComboBox2137ab3ComboBox;

        /// <summary>
        /// Backing field for MaximumSearchTiDup0Text property
        /// </summary>
        private Text fMaximumSearchTiDup0Text;

        /// <summary>
        /// Backing field for MaximumSearchTiDup1Text property
        /// </summary>
        private Text fMaximumSearchTiDup1Text;

        /// <summary>
        /// Backing field for ComboBox290a3adComboBox property
        /// </summary>
        private ComboBox fComboBox290a3adComboBox;

        /// <summary>
        /// Backing field for LDAPFilterCondiDup0Text property
        /// </summary>
        private Text fLDAPFilterCondiDup0Text;

        /// <summary>
        /// Backing field for LDAPFilterCondiDup1Text property
        /// </summary>
        private Text fLDAPFilterCondiDup1Text;

        /// <summary>
        /// Backing field for TextBox3abd074eEdit property
        /// </summary>
        private Edit fTextBox3abd074eEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup12Pane property
        /// </summary>
        private Pane fScrollViewerPARDup12Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup12ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup12ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup12ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup12ScrollBar;

        /// <summary>
        /// Backing field for EntriesinDatabaCheckBox property
        /// </summary>
        private CheckBox fEntriesinDatabaCheckBox;

        /// <summary>
        /// Backing field for EntriesinDatabaText property
        /// </summary>
        private Text fEntriesinDatabaText;

        /// <summary>
        /// Backing field for Expander0D39A3CGroup property
        /// </summary>
        private Group fExpander0D39A3CGroup;

        /// <summary>
        /// Backing field for ButtonHeaderSitDup3Button property
        /// </summary>
        private Button fButtonHeaderSitDup3Button;

        /// <summary>
        /// Backing field for TestforLDAPRetrGroup property
        /// </summary>
        private Group fTestforLDAPRetrGroup;

        /// <summary>
        /// Backing field for TestforLDAPRetrText property
        /// </summary>
        private Text fTestforLDAPRetrText;

        /// <summary>
        /// Backing field for TestTextmTestLaText property
        /// </summary>
        private Text fTestTextmTestLaText;

        /// <summary>
        /// Backing field for TestTextBlockDup2Text property
        /// </summary>
        private Text fTestTextBlockDup2Text;

        /// <summary>
        /// Backing field for TextBoxf206c2f6Edit property
        /// </summary>
        private Edit fTextBoxf206c2f6Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup13Pane property
        /// </summary>
        private Pane fScrollViewerPARDup13Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup13ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup13ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup13ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup13ScrollBar;

        /// <summary>
        /// Backing field for TestButtone6d54Button property
        /// </summary>
        private Button fTestButtone6d54Button;

        /// <summary>
        /// Backing field for TestTextBlockDup3Text property
        /// </summary>
        private Text fTestTextBlockDup3Text;

        /// <summary>
        /// Backing field for Expander5DC4D6AGroup property
        /// </summary>
        private Group fExpander5DC4D6AGroup;

        /// <summary>
        /// Backing field for ButtonHeaderSitDup4Button property
        /// </summary>
        private Button fButtonHeaderSitDup4Button;

        /// <summary>
        /// Backing field for SyncScheduleSteGroup property
        /// </summary>
        private Group fSyncScheduleSteGroup;

        /// <summary>
        /// Backing field for SyncScheduleSteText property
        /// </summary>
        private Text fSyncScheduleSteText;

        /// <summary>
        /// Backing field for SyncText property
        /// </summary>
        private Text fSyncText;

        /// <summary>
        /// Backing field for SyncTextBlockText property
        /// </summary>
        private Text fSyncTextBlockText;

        /// <summary>
        /// Backing field for ComboBox1138dacComboBox property
        /// </summary>
        private ComboBox fComboBox1138dacComboBox;

        /// <summary>
        /// Backing field for SyncTimeText property
        /// </summary>
        private Text fSyncTimeText;

        /// <summary>
        /// Backing field for SyncTimeTextBloText property
        /// </summary>
        private Text fSyncTimeTextBloText;

        /// <summary>
        /// Backing field for WindowsFormsHosDup0Pane property
        /// </summary>
        private Pane fWindowsFormsHosDup0Pane;

        /// <summary>
        /// Backing field for A24HourCheckBoxCheckBox property
        /// </summary>
        private CheckBox fA24HourCheckBoxCheckBox;

        /// <summary>
        /// Backing field for A24HourTextBlocText property
        /// </summary>
        private Text fA24HourTextBlocText;

        /// <summary>
        /// Backing field for OnlysyncMondayFCheckBox property
        /// </summary>
        private CheckBox fOnlysyncMondayFCheckBox;

        /// <summary>
        /// Backing field for SundayCheckBox2CheckBox property
        /// </summary>
        private CheckBox fSundayCheckBox2CheckBox;

        /// <summary>
        /// Backing field for MondayCheckBoxCCheckBox property
        /// </summary>
        private CheckBox fMondayCheckBoxCCheckBox;

        /// <summary>
        /// Backing field for TuesdayCheckBoxCheckBox property
        /// </summary>
        private CheckBox fTuesdayCheckBoxCheckBox;

        /// <summary>
        /// Backing field for WednesdayCheckBCheckBox property
        /// </summary>
        private CheckBox fWednesdayCheckBCheckBox;

        /// <summary>
        /// Backing field for ThursdayCheckBoCheckBox property
        /// </summary>
        private CheckBox fThursdayCheckBoCheckBox;

        /// <summary>
        /// Backing field for FridayCheckBoxDCheckBox property
        /// </summary>
        private CheckBox fFridayCheckBoxDCheckBox;

        /// <summary>
        /// Backing field for SaturdayCheckBoCheckBox property
        /// </summary>
        private CheckBox fSaturdayCheckBoCheckBox;

        /// <summary>
        /// Backing field for LastDayoftheMonRadioButton property
        /// </summary>
        private RadioButton fLastDayoftheMonRadioButton;

        /// <summary>
        /// Backing field for DayRadioButton3RadioButton property
        /// </summary>
        private RadioButton fDayRadioButton3RadioButton;

        /// <summary>
        /// Backing field for WindowsFormsHosDup1Pane property
        /// </summary>
        private Pane fWindowsFormsHosDup1Pane;

        /// <summary>
        /// Backing field for LastReplicationDup0Text property
        /// </summary>
        private Text fLastReplicationDup0Text;

        /// <summary>
        /// Backing field for LastReplicationDup1Text property
        /// </summary>
        private Text fLastReplicationDup1Text;

        /// <summary>
        /// Backing field for TextBoxcc133df7Edit property
        /// </summary>
        private Edit fTextBoxcc133df7Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup14Pane property
        /// </summary>
        private Pane fScrollViewerPARDup14Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup14ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup14ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup14ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup14ScrollBar;

        /// <summary>
        /// Backing field for SyncNowButtonb7Button property
        /// </summary>
        private Button fSyncNowButtonb7Button;

        /// <summary>
        /// Backing field for SyncNowTextBlocText property
        /// </summary>
        private Text fSyncNowTextBlocText;

        /// <summary>
        /// Backing field for ClearLDAPCacheBButton property
        /// </summary>
        private Button fClearLDAPCacheBButton;

        /// <summary>
        /// Backing field for ClearLDAPCacheTText property
        /// </summary>
        private Text fClearLDAPCacheTText;

        /// <summary>
        /// Backing field for AddressBookManaGroup property
        /// </summary>
        private Group fAddressBookManaGroup;

        /// <summary>
        /// Backing field for AddressBookManaDup0Text property
        /// </summary>
        private Text fAddressBookManaDup0Text;

        /// <summary>
        /// Backing field for AddressBookManaButton property
        /// </summary>
        private Button fAddressBookManaButton;

        /// <summary>
        /// Backing field for AddressBookManaDup1Text property
        /// </summary>
        private Text fAddressBookManaDup1Text;

        /// <summary>
        /// Backing field for ScrollBarVerticDup15ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup15ScrollBar;

        /// <summary>
        /// Backing field for RepeatButtonLinDup0Button property
        /// </summary>
        private Button fRepeatButtonLinDup0Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup0Button property
        /// </summary>
        private Button fRepeatButtonPagDup0Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup1Button property
        /// </summary>
        private Button fRepeatButtonPagDup1Button;

        /// <summary>
        /// Backing field for ThumbThumb property
        /// </summary>
        private Thumb fThumbThumb;

        /// <summary>
        /// Backing field for RepeatButtonLinDup1Button property
        /// </summary>
        private Button fRepeatButtonLinDup1Button;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup15ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup15ScrollBar;

        /// <summary>
        /// Backing field for DeviceConfiguraTabItem property
        /// </summary>
        private TabItem fDeviceConfiguraTabItem;

        /// <summary>
        /// Backing field for DeviceConfiguraText property
        /// </summary>
        private Text fDeviceConfiguraText;

        /// <summary>
        /// Backing field for TemplateConfiguTabItem property
        /// </summary>
        private TabItem fTemplateConfiguTabItem;

        /// <summary>
        /// Backing field for TemplateConfiguText property
        /// </summary>
        private Text fTemplateConfiguText;

        /// <summary>
        /// Backing field for LogTabItem9b4f3TabItem property
        /// </summary>
        private TabItem fLogTabItem9b4f3TabItem;

        /// <summary>
        /// Backing field for LogTextBlockText property
        /// </summary>
        private Text fLogTextBlockText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup7TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup7TabItem;

        /// <summary>
        /// Backing field for SecurityTextmSeText property
        /// </summary>
        private Text fSecurityTextmSeText;

        /// <summary>
        /// Backing field for SecurityTextBloText property
        /// </summary>
        private Text fSecurityTextBloText;

        /// <summary>
        /// Backing field for Text8A7A84DB894Text property
        /// </summary>
        private Text fText8A7A84DB894Text;

        /// <summary>
        /// Backing field for Text16F78FB18FFText property
        /// </summary>
        private Text fText16F78FB18FFText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup8TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup8TabItem;

        /// <summary>
        /// Backing field for AnalyticsTextmAText property
        /// </summary>
        private Text fAnalyticsTextmAText;

        /// <summary>
        /// Backing field for AnalyticsTextBlText property
        /// </summary>
        private Text fAnalyticsTextBlText;

        /// <summary>
        /// Backing field for AboutTabItemf45TabItem property
        /// </summary>
        private TabItem fAboutTabItemf45TabItem;

        /// <summary>
        /// Backing field for AboutTextBlockText property
        /// </summary>
        private Text fAboutTextBlockText;

        /// <summary>
        /// Backing field for HPDigitalSendinDup0Window property
        /// </summary>
        private Window fHPDigitalSendinDup0Window;

        /// <summary>
        /// Backing field for HPDigitalSendinDup1Window property
        /// </summary>
        private Window fHPDigitalSendinDup1Window;

        /// <summary>
        /// Backing field for OKButtonAE4B0C6Button property
        /// </summary>
        private Button fOKButtonAE4B0C6Button;

        /// <summary>
        /// Backing field for LDAPEntriesWindWindow property
        /// </summary>
        private Window fLDAPEntriesWindWindow;

        /// <summary>
        /// Backing field for OKButton4F49CDFButton property
        /// </summary>
        private Button fOKButton4F49CDFButton;

        /// <summary>
        /// Backing field for ExchangeContactWindow property
        /// </summary>
        private Window fExchangeContactWindow;

        /// <summary>
        /// Backing field for TheoperationfaiPane property
        /// </summary>
        private Pane fTheoperationfaiPane;

        /// <summary>
        /// Backing field for TextBox85726F33Edit property
        /// </summary>
        private Edit fTextBox85726F33Edit;

        /// <summary>
        /// System IP property
        /// </summary>
        private string _systemIP;

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_Address"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public DSS_Address(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_Address"/> class using the default UIAFramework.
        /// </summary>
        public DSS_Address()
        {
            Desktop = new Desktop();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_Address"/> class using the default UIAFramework.
        /// </summary>
        /// <param name="address">
        /// The System IP Address.
        /// </param>
        public DSS_Address(string address)
        {
            _systemIP = address;
            Desktop = new Desktop(UIAFramework.ManagedUIA);
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        /// <summary>
        /// Gets Reference to HPDigitalSendinWindow
        /// </summary>
        public Window HPDigitalSendinWindow
        {
            get
            {
                if (null == fHPDigitalSendinWindow)
                {
                    fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                    fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_systemIP})");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                }

                return fHPDigitalSendinWindow;
            }
        }

        /// <summary>
        /// Gets Reference to HPDigitalSendinTitleBar
        /// </summary>
        public TitleBar HPDigitalSendinTitleBar
        {
            get
            {
                if (null == fHPDigitalSendinTitleBar)
                {
                    fHPDigitalSendinTitleBar = new TitleBar("HPDigitalSendinTitleBar", HPDigitalSendinWindow);
                    fHPDigitalSendinTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_systemIP})");
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                }

                return fHPDigitalSendinTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to HPDigitalSendinDup0Window
        /// </summary>
        public Window HPDigitalSendinDup0Window
        {
            get
            {
                if (null == fHPDigitalSendinDup0Window)
                {
                    fHPDigitalSendinDup0Window = new Window("HPDigitalSendinDup0Window", Desktop);
                    fHPDigitalSendinDup0Window.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinDup0Window.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_systemIP})");
                    fHPDigitalSendinDup0Window.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fHPDigitalSendinDup0Window.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                }

                return fHPDigitalSendinDup0Window;
            }
        }

        /// <summary>
        /// Gets Reference to HPDigitalSendinDup1Window
        /// </summary>
        public Window HPDigitalSendinDup1Window
        {
            get
            {
                if (null == fHPDigitalSendinDup1Window)
                {
                    fHPDigitalSendinDup1Window = new Window("HPDigitalSendinDup1Window", HPDigitalSendinDup0Window);
                    fHPDigitalSendinDup1Window.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinDup1Window.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Digital Sending Software");
                    fHPDigitalSendinDup1Window.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fHPDigitalSendinDup1Window.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"336E3250-8749-475d-952F-E36223E36750");
                }

                return fHPDigitalSendinDup1Window;
            }
        }

        /// <summary>
        /// Checks for screen avalability
        /// </summary>
        /// <param name="timeout">
        /// The amount of time allowed for the screen avalability
        /// </param>
        public bool WaitForAvailable(int timeout)
        {
            try
            {
                if (HPDigitalSendinWindow.WaitForAvailable(timeout) == ResultCode.Passed)
                {
                    if (SystemWindowsCoDup6TabItem.WaitForAvailable(timeout) == ResultCode.Passed)
                    {
                        return true;
                    }
                }
            }
            catch
            {
                return false;
            }
            return false;
        }

        /// <summary>
        /// Gets Reference to SystemMenuBarSyMenuBar
        /// </summary>
        public MenuBar SystemMenuBarSyMenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyMenuBar)
                {
                    fSystemMenuBarSyMenuBar = new MenuBar("SystemMenuBarSyMenuBar", HPDigitalSendinTitleBar);
                    fSystemMenuBarSyMenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyMenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                    fSystemMenuBarSyMenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                }

                return fSystemMenuBarSyMenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemItem1MenuItem
        /// </summary>
        public MenuItem SystemItem1MenuItem
        {
            get
            {
                if (null == fSystemItem1MenuItem)
                {
                    fSystemItem1MenuItem = new MenuItem("SystemItem1MenuItem", SystemMenuBarSyMenuBar);
                    fSystemItem1MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                    fSystemItem1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                }

                return fSystemItem1MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to MinimizeMinimizButton
        /// </summary>
        public Button MinimizeMinimizButton
        {
            get
            {
                if (null == fMinimizeMinimizButton)
                {
                    fMinimizeMinimizButton = new Button("MinimizeMinimizButton", HPDigitalSendinTitleBar);
                    fMinimizeMinimizButton.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                    fMinimizeMinimizButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                }

                return fMinimizeMinimizButton;
            }
        }

        /// <summary>
        /// Gets Reference to RestoreRestoreButton
        /// </summary>
        public Button RestoreRestoreButton
        {
            get
            {
                if (null == fRestoreRestoreButton)
                {
                    fRestoreRestoreButton = new Button("RestoreRestoreButton", HPDigitalSendinTitleBar);
                    fRestoreRestoreButton.UIMap.Scope = UIASeachScope.Children;
                    fRestoreRestoreButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Restore");
                    fRestoreRestoreButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Restore");
                }

                return fRestoreRestoreButton;
            }
        }

        /// <summary>
        /// Gets Reference to CloseCloseButton
        /// </summary>
        public Button CloseCloseButton
        {
            get
            {
                if (null == fCloseCloseButton)
                {
                    fCloseCloseButton = new Button("CloseCloseButton", HPDigitalSendinTitleBar);
                    fCloseCloseButton.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                    fCloseCloseButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                }

                return fCloseCloseButton;
            }
        }

        /// <summary>
        /// Gets Reference to HelpButtonCB8CFButton
        /// </summary>
        public Button HelpButtonCB8CFButton
        {
            get
            {
                if (null == fHelpButtonCB8CFButton)
                {
                    fHelpButtonCB8CFButton = new Button("HelpButtonCB8CFButton", HPDigitalSendinWindow);
                    fHelpButtonCB8CFButton.UIMap.Scope = UIASeachScope.Children;
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CB8CF0C3-DFBE-49b8-B09B-03A34F5D4186");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fHelpButtonCB8CFButton;
            }
        }

        /// <summary>
        /// Gets Reference to HelpTextBlockText
        /// </summary>
        public Text HelpTextBlockText
        {
            get
            {
                if (null == fHelpTextBlockText)
                {
                    fHelpTextBlockText = new Text("HelpTextBlockText", HelpButtonCB8CFButton);
                    fHelpTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                    fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fHelpTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ApplyButton61E2Button
        /// </summary>
        public Button ApplyButton61E2Button
        {
            get
            {
                if (null == fApplyButton61E2Button)
                {
                    fApplyButton61E2Button = new Button("ApplyButton61E2Button", HPDigitalSendinWindow);
                    fApplyButton61E2Button.UIMap.Scope = UIASeachScope.Children;
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"61E2369B-F53B-4662-A361-B3034C4EFF67");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fApplyButton61E2Button;
            }
        }

        /// <summary>
        /// Gets Reference to ApplyTextBlockText
        /// </summary>
        public Text ApplyTextBlockText
        {
            get
            {
                if (null == fApplyTextBlockText)
                {
                    fApplyTextBlockText = new Text("ApplyTextBlockText", ApplyButton61E2Button);
                    fApplyTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                    fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fApplyTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to CancelButton65CButton
        /// </summary>
        public Button CancelButton65CButton
        {
            get
            {
                if (null == fCancelButton65CButton)
                {
                    fCancelButton65CButton = new Button("CancelButton65CButton", HPDigitalSendinWindow);
                    fCancelButton65CButton.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"65C76204-7AB5-4681-B7FD-2D8F02DA6D4B");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fCancelButton65CButton;
            }
        }

        /// <summary>
        /// Gets Reference to CancelTextBlockText
        /// </summary>
        public Text CancelTextBlockText
        {
            get
            {
                if (null == fCancelTextBlockText)
                {
                    fCancelTextBlockText = new Text("CancelTextBlockText", CancelButton65CButton);
                    fCancelTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fCancelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    fCancelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fCancelTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to OKButtonCC2EF49Button
        /// </summary>
        public Button OKButtonCC2EF49Button
        {
            get
            {
                if (null == fOKButtonCC2EF49Button)
                {
                    fOKButtonCC2EF49Button = new Button("OKButtonCC2EF49Button", HPDigitalSendinWindow);
                    fOKButtonCC2EF49Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CC2EF491-0BD1-4ac5-9D00-AA61A9D6BA0C");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fOKButtonCC2EF49Button;
            }
        }

        /// <summary>
        /// Gets Reference to OKTextBlockText
        /// </summary>
        public Text OKTextBlockText
        {
            get
            {
                if (null == fOKTextBlockText)
                {
                    fOKTextBlockText = new Text("OKTextBlockText", OKButtonCC2EF49Button);
                    fOKTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fOKTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fOKTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to TabControlec0fdTab
        /// </summary>
        public Tab TabControlec0fdTab
        {
            get
            {
                if (null == fTabControlec0fdTab)
                {
                    fTabControlec0fdTab = new Tab("TabControlec0fdTab", HPDigitalSendinWindow);
                    fTabControlec0fdTab.UIMap.Scope = UIASeachScope.Children;
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ec0fd6cd-2ab8-482f-96a5-d1fa158f38d1");
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                }

                return fTabControlec0fdTab;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup0TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup0TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup0TabItem)
                {
                    fSystemWindowsCoDup0TabItem = new TabItem("SystemWindowsCoDup0TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup0TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1e2be878-0c03-4404-988c-54d0df925f0f");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup0TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralTextmGenText
        /// </summary>
        public Text GeneralTextmGenText
        {
            get
            {
                if (null == fGeneralTextmGenText)
                {
                    fGeneralTextmGenText = new Text("GeneralTextmGenText", SystemWindowsCoDup0TabItem);
                    fGeneralTextmGenText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fGeneralTextmGenText;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralTextBlocText
        /// </summary>
        public Text GeneralTextBlocText
        {
            get
            {
                if (null == fGeneralTextBlocText)
                {
                    fGeneralTextBlocText = new Text("GeneralTextBlocText", GeneralTextmGenText);
                    fGeneralTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fGeneralTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to Text933345b04e3Text
        /// </summary>
        public Text Text933345b04e3Text
        {
            get
            {
                if (null == fText933345b04e3Text)
                {
                    fText933345b04e3Text = new Text("Text933345b04e3Text", SystemWindowsCoDup0TabItem);
                    fText933345b04e3Text.UIMap.Scope = UIASeachScope.Children;
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"933345b0-4e39-44d3-a511-0077f3176ca4");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText933345b04e3Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text786caf67344Text
        /// </summary>
        public Text Text786caf67344Text
        {
            get
            {
                if (null == fText786caf67344Text)
                {
                    fText786caf67344Text = new Text("Text786caf67344Text", SystemWindowsCoDup0TabItem);
                    fText786caf67344Text.UIMap.Scope = UIASeachScope.Children;
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"786caf67-344f-4ddc-83a5-b9431fb36731");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText786caf67344Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup1TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup1TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup1TabItem)
                {
                    fSystemWindowsCoDup1TabItem = new TabItem("SystemWindowsCoDup1TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup1TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4e90d18a-f33c-43c0-8505-08f4a17169b5");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup1TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationTDup0Text
        /// </summary>
        public Text AuthenticationTDup0Text
        {
            get
            {
                if (null == fAuthenticationTDup0Text)
                {
                    fAuthenticationTDup0Text = new Text("AuthenticationTDup0Text", SystemWindowsCoDup1TabItem);
                    fAuthenticationTDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fAuthenticationTDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationTDup1Text
        /// </summary>
        public Text AuthenticationTDup1Text
        {
            get
            {
                if (null == fAuthenticationTDup1Text)
                {
                    fAuthenticationTDup1Text = new Text("AuthenticationTDup1Text", AuthenticationTDup0Text);
                    fAuthenticationTDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAuthenticationTDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text31EC91730B9Text
        /// </summary>
        public Text Text31EC91730B9Text
        {
            get
            {
                if (null == fText31EC91730B9Text)
                {
                    fText31EC91730B9Text = new Text("Text31EC91730B9Text", SystemWindowsCoDup1TabItem);
                    fText31EC91730B9Text.UIMap.Scope = UIASeachScope.Children;
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"31EC9173-0B98-4d46-BC99-7DF8EA2BE02F");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText31EC91730B9Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextA479C271445Text
        /// </summary>
        public Text TextA479C271445Text
        {
            get
            {
                if (null == fTextA479C271445Text)
                {
                    fTextA479C271445Text = new Text("TextA479C271445Text", SystemWindowsCoDup1TabItem);
                    fTextA479C271445Text.UIMap.Scope = UIASeachScope.Children;
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A479C271-445D-43f1-864D-7503428703E4");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fTextA479C271445Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup2TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup2TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup2TabItem)
                {
                    fSystemWindowsCoDup2TabItem = new TabItem("SystemWindowsCoDup2TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup2TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33A07ED3-E1EE-411e-B583-7D0A3374100F");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup2TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to EmailTextmEmailText
        /// </summary>
        public Text EmailTextmEmailText
        {
            get
            {
                if (null == fEmailTextmEmailText)
                {
                    fEmailTextmEmailText = new Text("EmailTextmEmailText", SystemWindowsCoDup2TabItem);
                    fEmailTextmEmailText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fEmailTextmEmailText;
            }
        }

        /// <summary>
        /// Gets Reference to EmailTextBlockText
        /// </summary>
        public Text EmailTextBlockText
        {
            get
            {
                if (null == fEmailTextBlockText)
                {
                    fEmailTextBlockText = new Text("EmailTextBlockText", EmailTextmEmailText);
                    fEmailTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fEmailTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to Text32de714a8bdText
        /// </summary>
        public Text Text32de714a8bdText
        {
            get
            {
                if (null == fText32de714a8bdText)
                {
                    fText32de714a8bdText = new Text("Text32de714a8bdText", SystemWindowsCoDup2TabItem);
                    fText32de714a8bdText.UIMap.Scope = UIASeachScope.Children;
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"32de714a-8bda-4f11-bf20-b9a56b5f18bc");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText32de714a8bdText;
            }
        }

        /// <summary>
        /// Gets Reference to Text3b2a8761f4fText
        /// </summary>
        public Text Text3b2a8761f4fText
        {
            get
            {
                if (null == fText3b2a8761f4fText)
                {
                    fText3b2a8761f4fText = new Text("Text3b2a8761f4fText", SystemWindowsCoDup2TabItem);
                    fText3b2a8761f4fText.UIMap.Scope = UIASeachScope.Children;
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3b2a8761-f4f6-41b1-b08c-9c33744bdc43");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText3b2a8761f4fText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockDup0Text
        /// </summary>
        public Text TextBlockDup0Text
        {
            get
            {
                if (null == fTextBlockDup0Text)
                {
                    fTextBlockDup0Text = new Text("TextBlockDup0Text", Text3b2a8761f4fText);
                    fTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup3TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup3TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup3TabItem)
                {
                    fSystemWindowsCoDup3TabItem = new TabItem("SystemWindowsCoDup3TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4f116988-2b22-473f-bca3-094589a44954");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to FaxTextmFaxTabLText
        /// </summary>
        public Text FaxTextmFaxTabLText
        {
            get
            {
                if (null == fFaxTextmFaxTabLText)
                {
                    fFaxTextmFaxTabLText = new Text("FaxTextmFaxTabLText", SystemWindowsCoDup3TabItem);
                    fFaxTextmFaxTabLText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fFaxTextmFaxTabLText;
            }
        }

        /// <summary>
        /// Gets Reference to FaxTextBlockText
        /// </summary>
        public Text FaxTextBlockText
        {
            get
            {
                if (null == fFaxTextBlockText)
                {
                    fFaxTextBlockText = new Text("FaxTextBlockText", FaxTextmFaxTabLText);
                    fFaxTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fFaxTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to TextD1ED4F16F38Text
        /// </summary>
        public Text TextD1ED4F16F38Text
        {
            get
            {
                if (null == fTextD1ED4F16F38Text)
                {
                    fTextD1ED4F16F38Text = new Text("TextD1ED4F16F38Text", SystemWindowsCoDup3TabItem);
                    fTextD1ED4F16F38Text.UIMap.Scope = UIASeachScope.Children;
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D1ED4F16-F389-4dfd-A884-D258EDB48C11");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fTextD1ED4F16F38Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text7DDE04FD251Text
        /// </summary>
        public Text Text7DDE04FD251Text
        {
            get
            {
                if (null == fText7DDE04FD251Text)
                {
                    fText7DDE04FD251Text = new Text("Text7DDE04FD251Text", SystemWindowsCoDup3TabItem);
                    fText7DDE04FD251Text.UIMap.Scope = UIASeachScope.Children;
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7DDE04FD-2519-44c2-A212-67B0838E1C91");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText7DDE04FD251Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup4TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup4TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup4TabItem)
                {
                    fSystemWindowsCoDup4TabItem = new TabItem("SystemWindowsCoDup4TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup4TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ff96a045-6e12-4ce3-ba85-b65d16c39ffb");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup4TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoFolderTexDup0Text
        /// </summary>
        public Text SendtoFolderTexDup0Text
        {
            get
            {
                if (null == fSendtoFolderTexDup0Text)
                {
                    fSendtoFolderTexDup0Text = new Text("SendtoFolderTexDup0Text", SystemWindowsCoDup4TabItem);
                    fSendtoFolderTexDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fSendtoFolderTexDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoFolderTexDup1Text
        /// </summary>
        public Text SendtoFolderTexDup1Text
        {
            get
            {
                if (null == fSendtoFolderTexDup1Text)
                {
                    fSendtoFolderTexDup1Text = new Text("SendtoFolderTexDup1Text", SendtoFolderTexDup0Text);
                    fSendtoFolderTexDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSendtoFolderTexDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text7a57f43ecb1Text
        /// </summary>
        public Text Text7a57f43ecb1Text
        {
            get
            {
                if (null == fText7a57f43ecb1Text)
                {
                    fText7a57f43ecb1Text = new Text("Text7a57f43ecb1Text", SystemWindowsCoDup4TabItem);
                    fText7a57f43ecb1Text.UIMap.Scope = UIASeachScope.Children;
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText7a57f43ecb1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text654b650dd19Text
        /// </summary>
        public Text Text654b650dd19Text
        {
            get
            {
                if (null == fText654b650dd19Text)
                {
                    fText654b650dd19Text = new Text("Text654b650dd19Text", SystemWindowsCoDup4TabItem);
                    fText654b650dd19Text.UIMap.Scope = UIASeachScope.Children;
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText654b650dd19Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup5TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup5TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup5TabItem)
                {
                    fSystemWindowsCoDup5TabItem = new TabItem("SystemWindowsCoDup5TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup5TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"38feb495-2893-4d8b-8961-31ebc2a3bd56");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup5TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to WorkflowsTextmWText
        /// </summary>
        public Text WorkflowsTextmWText
        {
            get
            {
                if (null == fWorkflowsTextmWText)
                {
                    fWorkflowsTextmWText = new Text("WorkflowsTextmWText", SystemWindowsCoDup5TabItem);
                    fWorkflowsTextmWText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fWorkflowsTextmWText;
            }
        }

        /// <summary>
        /// Gets Reference to WorkflowsTextBlText
        /// </summary>
        public Text WorkflowsTextBlText
        {
            get
            {
                if (null == fWorkflowsTextBlText)
                {
                    fWorkflowsTextBlText = new Text("WorkflowsTextBlText", WorkflowsTextmWText);
                    fWorkflowsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fWorkflowsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to Text22D9C34E84CText
        /// </summary>
        public Text Text22D9C34E84CText
        {
            get
            {
                if (null == fText22D9C34E84CText)
                {
                    fText22D9C34E84CText = new Text("Text22D9C34E84CText", SystemWindowsCoDup5TabItem);
                    fText22D9C34E84CText.UIMap.Scope = UIASeachScope.Children;
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22D9C34E-84C8-4995-AC9E-5B46F8284284");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText22D9C34E84CText;
            }
        }

        /// <summary>
        /// Gets Reference to TextC8D15BD39C8Text
        /// </summary>
        public Text TextC8D15BD39C8Text
        {
            get
            {
                if (null == fTextC8D15BD39C8Text)
                {
                    fTextC8D15BD39C8Text = new Text("TextC8D15BD39C8Text", SystemWindowsCoDup5TabItem);
                    fTextC8D15BD39C8Text.UIMap.Scope = UIASeachScope.Children;
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C8D15BD3-9C8D-484c-A5E2-309CA8AA6C56");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fTextC8D15BD39C8Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup6TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup6TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup6TabItem)
                {
                    fSystemWindowsCoDup6TabItem = new TabItem("SystemWindowsCoDup6TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup6TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b8c06323-208e-4239-a523-a025661e0eab");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup6TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingTextmText
        /// </summary>
        public Text AddressingTextmText
        {
            get
            {
                if (null == fAddressingTextmText)
                {
                    fAddressingTextmText = new Text("AddressingTextmText", SystemWindowsCoDup6TabItem);
                    fAddressingTextmText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fAddressingTextmText;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingTextBText
        /// </summary>
        public Text AddressingTextBText
        {
            get
            {
                if (null == fAddressingTextBText)
                {
                    fAddressingTextBText = new Text("AddressingTextBText", AddressingTextmText);
                    fAddressingTextBText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                    fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAddressingTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to Text47EB5CBA4D1Text
        /// </summary>
        public Text Text47EB5CBA4D1Text
        {
            get
            {
                if (null == fText47EB5CBA4D1Text)
                {
                    fText47EB5CBA4D1Text = new Text("Text47EB5CBA4D1Text", SystemWindowsCoDup6TabItem);
                    fText47EB5CBA4D1Text.UIMap.Scope = UIASeachScope.Children;
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"47EB5CBA-4D1C-4eee-AD64-E26BDA31A3AC");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText47EB5CBA4D1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockDup1Text
        /// </summary>
        public Text TextBlockDup1Text
        {
            get
            {
                if (null == fTextBlockDup1Text)
                {
                    fTextBlockDup1Text = new Text("TextBlockDup1Text", Text47EB5CBA4D1Text);
                    fTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text0757E148179Text
        /// </summary>
        public Text Text0757E148179Text
        {
            get
            {
                if (null == fText0757E148179Text)
                {
                    fText0757E148179Text = new Text("Text0757E148179Text", SystemWindowsCoDup6TabItem);
                    fText0757E148179Text.UIMap.Scope = UIASeachScope.Children;
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0757E148-1794-4a5d-B378-6BE8049F65E1");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText0757E148179Text;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPane
        /// </summary>
        public Pane ScrollViewerPane
        {
            get
            {
                if (null == fScrollViewerPane)
                {
                    fScrollViewerPane = new Pane("ScrollViewerPane", SystemWindowsCoDup6TabItem);
                    fScrollViewerPane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPane;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingNetwoCustom
        /// </summary>
        public Custom AddressingNetwoCustom
        {
            get
            {
                if (null == fAddressingNetwoCustom)
                {
                    fAddressingNetwoCustom = new Custom("AddressingNetwoCustom", ScrollViewerPane);
                    fAddressingNetwoCustom.UIMap.Scope = UIASeachScope.Children;
                    fAddressingNetwoCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingNetworkContactsUserControl");
                    fAddressingNetwoCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AddressingNetworkContactsUserControl");
                }

                return fAddressingNetwoCustom;
            }
        }

        /// <summary>
        /// Gets Reference to ErrorConflictUsCustom
        /// </summary>
        public Custom ErrorConflictUsCustom
        {
            get
            {
                if (null == fErrorConflictUsCustom)
                {
                    fErrorConflictUsCustom = new Custom("ErrorConflictUsCustom", AddressingNetwoCustom);
                    fErrorConflictUsCustom.UIMap.Scope = UIASeachScope.Children;
                    fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mErrorConflictUserControl");
                    fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ErrorConflictUserControl");
                }

                return fErrorConflictUsCustom;
            }
        }

        /// <summary>
        /// Gets Reference to SearchMethodGroGroup
        /// </summary>
        public Group SearchMethodGroGroup
        {
            get
            {
                if (null == fSearchMethodGroGroup)
                {
                    fSearchMethodGroGroup = new Group("SearchMethodGroGroup", AddressingNetwoCustom);
                    fSearchMethodGroGroup.UIMap.Scope = UIASeachScope.Children;
                    fSearchMethodGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddrSearchMethodGroupBox");
                    fSearchMethodGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search Method");
                    fSearchMethodGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fSearchMethodGroGroup;
            }
        }

        /// <summary>
        /// Gets Reference to SearchMethodTexText
        /// </summary>
        public Text SearchMethodTexText
        {
            get
            {
                if (null == fSearchMethodTexText)
                {
                    fSearchMethodTexText = new Text("SearchMethodTexText", SearchMethodGroGroup);
                    fSearchMethodTexText.UIMap.Scope = UIASeachScope.Children;
                    fSearchMethodTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search Method");
                    fSearchMethodTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSearchMethodTexText;
            }
        }

        /// <summary>
        /// Gets Reference to QuickSearchFindRadioButton
        /// </summary>
        public RadioButton QuickSearchFindRadioButton
        {
            get
            {
                if (null == fQuickSearchFindRadioButton)
                {
                    fQuickSearchFindRadioButton = new RadioButton("QuickSearchFindRadioButton", SearchMethodGroGroup);
                    fQuickSearchFindRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fQuickSearchFindRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a4cd062e-2a81-441c-b0f4-212efcecacf7");
                    fQuickSearchFindRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Search (Find matches beginning with the search string.)");
                    fQuickSearchFindRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                }

                return fQuickSearchFindRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to QuickSearchFindText
        /// </summary>
        public Text QuickSearchFindText
        {
            get
            {
                if (null == fQuickSearchFindText)
                {
                    fQuickSearchFindText = new Text("QuickSearchFindText", QuickSearchFindRadioButton);
                    fQuickSearchFindText.UIMap.Scope = UIASeachScope.Children;
                    fQuickSearchFindText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Search (Find matches beginning with the search string.)");
                    fQuickSearchFindText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fQuickSearchFindText;
            }
        }

        /// <summary>
        /// Gets Reference to DetailedSearchFRadioButton
        /// </summary>
        public RadioButton DetailedSearchFRadioButton
        {
            get
            {
                if (null == fDetailedSearchFRadioButton)
                {
                    fDetailedSearchFRadioButton = new RadioButton("DetailedSearchFRadioButton", SearchMethodGroGroup);
                    fDetailedSearchFRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fDetailedSearchFRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84bc451d-eca7-4d72-adee-f6d05739d60e");
                    fDetailedSearchFRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Detailed Search (Find matches containing the search string.)");
                    fDetailedSearchFRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                }

                return fDetailedSearchFRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to DetailedSearchFText
        /// </summary>
        public Text DetailedSearchFText
        {
            get
            {
                if (null == fDetailedSearchFText)
                {
                    fDetailedSearchFText = new Text("DetailedSearchFText", DetailedSearchFRadioButton);
                    fDetailedSearchFText.UIMap.Scope = UIASeachScope.Children;
                    fDetailedSearchFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Detailed Search (Find matches containing the search string.)");
                    fDetailedSearchFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fDetailedSearchFText;
            }
        }

        /// <summary>
        /// Gets Reference to PersonalContactGroup
        /// </summary>
        public Group PersonalContactGroup
        {
            get
            {
                if (null == fPersonalContactGroup)
                {
                    fPersonalContactGroup = new Group("PersonalContactGroup", AddressingNetwoCustom);
                    fPersonalContactGroup.UIMap.Scope = UIASeachScope.Children;
                    fPersonalContactGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddrPersonalContactsBox");
                    fPersonalContactGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Personal Contacts");
                    fPersonalContactGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fPersonalContactGroup;
            }
        }

        /// <summary>
        /// Gets Reference to PersonalContactText
        /// </summary>
        public Text PersonalContactText
        {
            get
            {
                if (null == fPersonalContactText)
                {
                    fPersonalContactText = new Text("PersonalContactText", PersonalContactGroup);
                    fPersonalContactText.UIMap.Scope = UIASeachScope.Children;
                    fPersonalContactText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Personal Contacts");
                    fPersonalContactText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fPersonalContactText;
            }
        }

        /// <summary>
        /// Gets Reference to ThepersonalcontText
        /// </summary>
        public Text ThepersonalcontText
        {
            get
            {
                if (null == fThepersonalcontText)
                {
                    fThepersonalcontText = new Text("ThepersonalcontText", PersonalContactGroup);
                    fThepersonalcontText.UIMap.Scope = UIASeachScope.Children;
                    fThepersonalcontText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"The personal contacts for a user can be retrieved from a Microsoft Exchange Server if the user has a Personal Address Book (PAB) associated with his or her user account.");
                    fThepersonalcontText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fThepersonalcontText;
            }
        }

        /// <summary>
        /// Gets Reference to EnablePersonalCCheckBox
        /// </summary>
        public CheckBox EnablePersonalCCheckBox
        {
            get
            {
                if (null == fEnablePersonalCCheckBox)
                {
                    fEnablePersonalCCheckBox = new CheckBox("EnablePersonalCCheckBox", PersonalContactGroup);
                    fEnablePersonalCCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEnablePersonalCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3edca417-7e14-47e9-8731-cf88146e55c7");
                    fEnablePersonalCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Personal Contacts (when users sign in to Windows at the device)");
                    fEnablePersonalCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                }

                return fEnablePersonalCCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to EnablePersonalCText
        /// </summary>
        public Text EnablePersonalCText
        {
            get
            {
                if (null == fEnablePersonalCText)
                {
                    fEnablePersonalCText = new Text("EnablePersonalCText", EnablePersonalCCheckBox);
                    fEnablePersonalCText.UIMap.Scope = UIASeachScope.Children;
                    fEnablePersonalCText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Personal Contacts (when users sign in to Windows at the device)");
                    fEnablePersonalCText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fEnablePersonalCText;
            }
        }

        /// <summary>
        /// Gets Reference to TestExchangeSerGroup
        /// </summary>
        public Group TestExchangeSerGroup
        {
            get
            {
                if (null == fTestExchangeSerGroup)
                {
                    fTestExchangeSerGroup = new Group("TestExchangeSerGroup", PersonalContactGroup);
                    fTestExchangeSerGroup.UIMap.Scope = UIASeachScope.Children;
                    fTestExchangeSerGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mTestPersonalContactsServerGroupBox");
                    fTestExchangeSerGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test Exchange Server");
                    fTestExchangeSerGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fTestExchangeSerGroup;
            }
        }

        /// <summary>
        /// Gets Reference to TestExchangeSerText
        /// </summary>
        public Text TestExchangeSerText
        {
            get
            {
                if (null == fTestExchangeSerText)
                {
                    fTestExchangeSerText = new Text("TestExchangeSerText", TestExchangeSerGroup);
                    fTestExchangeSerText.UIMap.Scope = UIASeachScope.Children;
                    fTestExchangeSerText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test Exchange Server");
                    fTestExchangeSerText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTestExchangeSerText;
            }
        }

        /// <summary>
        /// Gets Reference to WindowsDomainDup0Text
        /// </summary>
        public Text WindowsDomainDup0Text
        {
            get
            {
                if (null == fWindowsDomainDup0Text)
                {
                    fWindowsDomainDup0Text = new Text("WindowsDomainDup0Text", TestExchangeSerGroup);
                    fWindowsDomainDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fWindowsDomainDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Domain");
                    fWindowsDomainDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fWindowsDomainDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to WindowsDomainTeText
        /// </summary>
        public Text WindowsDomainTeText
        {
            get
            {
                if (null == fWindowsDomainTeText)
                {
                    fWindowsDomainTeText = new Text("WindowsDomainTeText", WindowsDomainDup0Text);
                    fWindowsDomainTeText.UIMap.Scope = UIASeachScope.Children;
                    fWindowsDomainTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Domain");
                    fWindowsDomainTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fWindowsDomainTeText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox0857B9D0Edit
        /// </summary>
        public Edit TextBox0857B9D0Edit
        {
            get
            {
                if (null == fTextBox0857B9D0Edit)
                {
                    fTextBox0857B9D0Edit = new Edit("TextBox0857B9D0Edit", TestExchangeSerGroup);
                    fTextBox0857B9D0Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox0857B9D0Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0857B9D0-3168-40aa-8702-9566638D2738");
                    fTextBox0857B9D0Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox0857B9D0Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup0Pane
        /// </summary>
        public Pane ScrollViewerPARDup0Pane
        {
            get
            {
                if (null == fScrollViewerPARDup0Pane)
                {
                    fScrollViewerPARDup0Pane = new Pane("ScrollViewerPARDup0Pane", TextBox0857B9D0Edit);
                    fScrollViewerPARDup0Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup0Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup0ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup0ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup0ScrollBar)
                {
                    fScrollBarVerticDup0ScrollBar = new ScrollBar("ScrollBarVerticDup0ScrollBar", ScrollViewerPARDup0Pane);
                    fScrollBarVerticDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup0ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup0ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup0ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup0ScrollBar)
                {
                    fScrollBarHorizoDup0ScrollBar = new ScrollBar("ScrollBarHorizoDup0ScrollBar", ScrollViewerPARDup0Pane);
                    fScrollBarHorizoDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup0ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameDup0Text
        /// </summary>
        public Text UsernameDup0Text
        {
            get
            {
                if (null == fUsernameDup0Text)
                {
                    fUsernameDup0Text = new Text("UsernameDup0Text", TestExchangeSerGroup);
                    fUsernameDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fUsernameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                    fUsernameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fUsernameDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameTextBloDup0Text
        /// </summary>
        public Text UsernameTextBloDup0Text
        {
            get
            {
                if (null == fUsernameTextBloDup0Text)
                {
                    fUsernameTextBloDup0Text = new Text("UsernameTextBloDup0Text", UsernameDup0Text);
                    fUsernameTextBloDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fUsernameTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                    fUsernameTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fUsernameTextBloDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox9B0DA4ABEdit
        /// </summary>
        public Edit TextBox9B0DA4ABEdit
        {
            get
            {
                if (null == fTextBox9B0DA4ABEdit)
                {
                    fTextBox9B0DA4ABEdit = new Edit("TextBox9B0DA4ABEdit", TestExchangeSerGroup);
                    fTextBox9B0DA4ABEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox9B0DA4ABEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9B0DA4AB-57EF-42dc-ADFE-210DEA97A0D7");
                    fTextBox9B0DA4ABEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox9B0DA4ABEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup1Pane
        /// </summary>
        public Pane ScrollViewerPARDup1Pane
        {
            get
            {
                if (null == fScrollViewerPARDup1Pane)
                {
                    fScrollViewerPARDup1Pane = new Pane("ScrollViewerPARDup1Pane", TextBox9B0DA4ABEdit);
                    fScrollViewerPARDup1Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup1Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup1ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup1ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup1ScrollBar)
                {
                    fScrollBarVerticDup1ScrollBar = new ScrollBar("ScrollBarVerticDup1ScrollBar", ScrollViewerPARDup1Pane);
                    fScrollBarVerticDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup1ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup1ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup1ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup1ScrollBar)
                {
                    fScrollBarHorizoDup1ScrollBar = new ScrollBar("ScrollBarHorizoDup1ScrollBar", ScrollViewerPARDup1Pane);
                    fScrollBarHorizoDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup1ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordDup0Text
        /// </summary>
        public Text PasswordDup0Text
        {
            get
            {
                if (null == fPasswordDup0Text)
                {
                    fPasswordDup0Text = new Text("PasswordDup0Text", TestExchangeSerGroup);
                    fPasswordDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fPasswordDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                    fPasswordDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fPasswordDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordTextBloDup0Text
        /// </summary>
        public Text PasswordTextBloDup0Text
        {
            get
            {
                if (null == fPasswordTextBloDup0Text)
                {
                    fPasswordTextBloDup0Text = new Text("PasswordTextBloDup0Text", PasswordDup0Text);
                    fPasswordTextBloDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fPasswordTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                    fPasswordTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fPasswordTextBloDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordBox6B3CEdit
        /// </summary>
        public Edit PasswordBox6B3CEdit
        {
            get
            {
                if (null == fPasswordBox6B3CEdit)
                {
                    fPasswordBox6B3CEdit = new Edit("PasswordBox6B3CEdit", TestExchangeSerGroup);
                    fPasswordBox6B3CEdit.UIMap.Scope = UIASeachScope.Children;
                    fPasswordBox6B3CEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6B3C5D9A-9C11-4c17-A2EE-0C3749EE142F");
                    fPasswordBox6B3CEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"PasswordBox");
                }

                return fPasswordBox6B3CEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup2Pane
        /// </summary>
        public Pane ScrollViewerPARDup2Pane
        {
            get
            {
                if (null == fScrollViewerPARDup2Pane)
                {
                    fScrollViewerPARDup2Pane = new Pane("ScrollViewerPARDup2Pane", PasswordBox6B3CEdit);
                    fScrollViewerPARDup2Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup2Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup2ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup2ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup2ScrollBar)
                {
                    fScrollBarVerticDup2ScrollBar = new ScrollBar("ScrollBarVerticDup2ScrollBar", ScrollViewerPARDup2Pane);
                    fScrollBarVerticDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup2ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup2ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup2ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup2ScrollBar)
                {
                    fScrollBarHorizoDup2ScrollBar = new ScrollBar("ScrollBarHorizoDup2ScrollBar", ScrollViewerPARDup2Pane);
                    fScrollBarHorizoDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup2ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to TestText
        /// </summary>
        public Text TestText
        {
            get
            {
                if (null == fTestText)
                {
                    fTestText = new Text("TestText", TestExchangeSerGroup);
                    fTestText.UIMap.Scope = UIASeachScope.Children;
                    fTestText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    fTestText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fTestText;
            }
        }

        /// <summary>
        /// Gets Reference to TestTextBlockDup0Text
        /// </summary>
        public Text TestTextBlockDup0Text
        {
            get
            {
                if (null == fTestTextBlockDup0Text)
                {
                    fTestTextBlockDup0Text = new Text("TestTextBlockDup0Text", TestText);
                    fTestTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fTestTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    fTestTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTestTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxDE0C2350Edit
        /// </summary>
        public Edit TextBoxDE0C2350Edit
        {
            get
            {
                if (null == fTextBoxDE0C2350Edit)
                {
                    fTextBoxDE0C2350Edit = new Edit("TextBoxDE0C2350Edit", TestExchangeSerGroup);
                    fTextBoxDE0C2350Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxDE0C2350Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DE0C2350-09E4-49dd-91B0-3260FFCC1A6E");
                    fTextBoxDE0C2350Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxDE0C2350Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup3Pane
        /// </summary>
        public Pane ScrollViewerPARDup3Pane
        {
            get
            {
                if (null == fScrollViewerPARDup3Pane)
                {
                    fScrollViewerPARDup3Pane = new Pane("ScrollViewerPARDup3Pane", TextBoxDE0C2350Edit);
                    fScrollViewerPARDup3Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup3Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup3ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup3ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup3ScrollBar)
                {
                    fScrollBarVerticDup3ScrollBar = new ScrollBar("ScrollBarVerticDup3ScrollBar", ScrollViewerPARDup3Pane);
                    fScrollBarVerticDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup3ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup3ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup3ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup3ScrollBar)
                {
                    fScrollBarHorizoDup3ScrollBar = new ScrollBar("ScrollBarHorizoDup3ScrollBar", ScrollViewerPARDup3Pane);
                    fScrollBarHorizoDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup3ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to TestButtonA90BEButton
        /// </summary>
        public Button TestButtonA90BEButton
        {
            get
            {
                if (null == fTestButtonA90BEButton)
                {
                    fTestButtonA90BEButton = new Button("TestButtonA90BEButton", TestExchangeSerGroup);
                    fTestButtonA90BEButton.UIMap.Scope = UIASeachScope.Children;
                    fTestButtonA90BEButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A90BEE9C-966C-4bb4-9413-182793C513C6");
                    fTestButtonA90BEButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    fTestButtonA90BEButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fTestButtonA90BEButton;
            }
        }

        /// <summary>
        /// Gets Reference to TestTextBlockDup1Text
        /// </summary>
        public Text TestTextBlockDup1Text
        {
            get
            {
                if (null == fTestTextBlockDup1Text)
                {
                    fTestTextBlockDup1Text = new Text("TestTextBlockDup1Text", TestButtonA90BEButton);
                    fTestTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fTestTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    fTestTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTestTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPReplicationGroup
        /// </summary>
        public Group LDAPReplicationGroup
        {
            get
            {
                if (null == fLDAPReplicationGroup)
                {
                    fLDAPReplicationGroup = new Group("LDAPReplicationGroup", AddressingNetwoCustom);
                    fLDAPReplicationGroup.UIMap.Scope = UIASeachScope.Children;
                    fLDAPReplicationGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mNetworkContactsGroupBox");
                    fLDAPReplicationGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Replication");
                    fLDAPReplicationGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fLDAPReplicationGroup;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPReplicationText
        /// </summary>
        public Text LDAPReplicationText
        {
            get
            {
                if (null == fLDAPReplicationText)
                {
                    fLDAPReplicationText = new Text("LDAPReplicationText", LDAPReplicationGroup);
                    fLDAPReplicationText.UIMap.Scope = UIASeachScope.Children;
                    fLDAPReplicationText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Replication");
                    fLDAPReplicationText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fLDAPReplicationText;
            }
        }

        /// <summary>
        /// Gets Reference to EnableNetworkCoCheckBox
        /// </summary>
        public CheckBox EnableNetworkCoCheckBox
        {
            get
            {
                if (null == fEnableNetworkCoCheckBox)
                {
                    fEnableNetworkCoCheckBox = new CheckBox("EnableNetworkCoCheckBox", LDAPReplicationGroup);
                    fEnableNetworkCoCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEnableNetworkCoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c771301b-e211-4fb2-809d-b4cb3bcd2067");
                    fEnableNetworkCoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Network Contacts (use LDAP server)");
                    fEnableNetworkCoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                }

                return fEnableNetworkCoCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to EnableNetworkCoText
        /// </summary>
        public Text EnableNetworkCoText
        {
            get
            {
                if (null == fEnableNetworkCoText)
                {
                    fEnableNetworkCoText = new Text("EnableNetworkCoText", EnableNetworkCoCheckBox);
                    fEnableNetworkCoText.UIMap.Scope = UIASeachScope.Children;
                    fEnableNetworkCoText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Network Contacts (use LDAP server)");
                    fEnableNetworkCoText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fEnableNetworkCoText;
            }
        }

        /// <summary>
        /// Gets Reference to ExpanderFD3555EGroup
        /// </summary>
        public Group ExpanderFD3555EGroup
        {
            get
            {
                if (null == fExpanderFD3555EGroup)
                {
                    fExpanderFD3555EGroup = new Group("ExpanderFD3555EGroup", LDAPReplicationGroup);
                    fExpanderFD3555EGroup.UIMap.Scope = UIASeachScope.Children;
                    fExpanderFD3555EGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FD3555EA-5DD8-4e8c-8013-4FBB6F98067E");
                    fExpanderFD3555EGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                }

                return fExpanderFD3555EGroup;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonHeaderSitDup0Button
        /// </summary>
        public Button ButtonHeaderSitDup0Button
        {
            get
            {
                if (null == fButtonHeaderSitDup0Button)
                {
                    fButtonHeaderSitDup0Button = new Button("ButtonHeaderSitDup0Button", ExpanderFD3555EGroup);
                    fButtonHeaderSitDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonHeaderSitDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                    fButtonHeaderSitDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonHeaderSitDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to NetworkDirectorGroup
        /// </summary>
        public Group NetworkDirectorGroup
        {
            get
            {
                if (null == fNetworkDirectorGroup)
                {
                    fNetworkDirectorGroup = new Group("NetworkDirectorGroup", LDAPReplicationGroup);
                    fNetworkDirectorGroup.UIMap.Scope = UIASeachScope.Children;
                    fNetworkDirectorGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mNetworkDirectoryServerGroupBox");
                    fNetworkDirectorGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network Directory Server (LDAP)(Step 1)");
                    fNetworkDirectorGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fNetworkDirectorGroup;
            }
        }

        /// <summary>
        /// Gets Reference to NetworkDirectorText
        /// </summary>
        public Text NetworkDirectorText
        {
            get
            {
                if (null == fNetworkDirectorText)
                {
                    fNetworkDirectorText = new Text("NetworkDirectorText", NetworkDirectorGroup);
                    fNetworkDirectorText.UIMap.Scope = UIASeachScope.Children;
                    fNetworkDirectorText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network Directory Server (LDAP)(Step 1)");
                    fNetworkDirectorText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fNetworkDirectorText;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPServerAddreDup0Text
        /// </summary>
        public Text LDAPServerAddreDup0Text
        {
            get
            {
                if (null == fLDAPServerAddreDup0Text)
                {
                    fLDAPServerAddreDup0Text = new Text("LDAPServerAddreDup0Text", NetworkDirectorGroup);
                    fLDAPServerAddreDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fLDAPServerAddreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Server Address");
                    fLDAPServerAddreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fLDAPServerAddreDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPServerAddreDup1Text
        /// </summary>
        public Text LDAPServerAddreDup1Text
        {
            get
            {
                if (null == fLDAPServerAddreDup1Text)
                {
                    fLDAPServerAddreDup1Text = new Text("LDAPServerAddreDup1Text", LDAPServerAddreDup0Text);
                    fLDAPServerAddreDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fLDAPServerAddreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Server Address");
                    fLDAPServerAddreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fLDAPServerAddreDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox858933a3Edit
        /// </summary>
        public Edit TextBox858933a3Edit
        {
            get
            {
                if (null == fTextBox858933a3Edit)
                {
                    fTextBox858933a3Edit = new Edit("TextBox858933a3Edit", NetworkDirectorGroup);
                    fTextBox858933a3Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox858933a3Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"858933a3-105f-40aa-8176-87a5d24120fa");
                    fTextBox858933a3Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox858933a3Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup4Pane
        /// </summary>
        public Pane ScrollViewerPARDup4Pane
        {
            get
            {
                if (null == fScrollViewerPARDup4Pane)
                {
                    fScrollViewerPARDup4Pane = new Pane("ScrollViewerPARDup4Pane", TextBox858933a3Edit);
                    fScrollViewerPARDup4Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup4Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup4ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup4ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup4ScrollBar)
                {
                    fScrollBarVerticDup4ScrollBar = new ScrollBar("ScrollBarVerticDup4ScrollBar", ScrollViewerPARDup4Pane);
                    fScrollBarVerticDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup4ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup4ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup4ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup4ScrollBar)
                {
                    fScrollBarHorizoDup4ScrollBar = new ScrollBar("ScrollBarHorizoDup4ScrollBar", ScrollViewerPARDup4Pane);
                    fScrollBarHorizoDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup4ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to AutoFindButton3Button
        /// </summary>
        public Button AutoFindButton3Button
        {
            get
            {
                if (null == fAutoFindButton3Button)
                {
                    fAutoFindButton3Button = new Button("AutoFindButton3Button", NetworkDirectorGroup);
                    fAutoFindButton3Button.UIMap.Scope = UIASeachScope.Children;
                    fAutoFindButton3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"319d911c-7b59-45c9-9d29-e1b648578eab");
                    fAutoFindButton3Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                    fAutoFindButton3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fAutoFindButton3Button;
            }
        }

        /// <summary>
        /// Gets Reference to AutoFindTextBloDup0Text
        /// </summary>
        public Text AutoFindTextBloDup0Text
        {
            get
            {
                if (null == fAutoFindTextBloDup0Text)
                {
                    fAutoFindTextBloDup0Text = new Text("AutoFindTextBloDup0Text", AutoFindButton3Button);
                    fAutoFindTextBloDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAutoFindTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                    fAutoFindTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAutoFindTextBloDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to HostnameorIPaddDup0Text
        /// </summary>
        public Text HostnameorIPaddDup0Text
        {
            get
            {
                if (null == fHostnameorIPaddDup0Text)
                {
                    fHostnameorIPaddDup0Text = new Text("HostnameorIPaddDup0Text", NetworkDirectorGroup);
                    fHostnameorIPaddDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fHostnameorIPaddDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname or IP address");
                    fHostnameorIPaddDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fHostnameorIPaddDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to HostnameorIPaddDup1Text
        /// </summary>
        public Text HostnameorIPaddDup1Text
        {
            get
            {
                if (null == fHostnameorIPaddDup1Text)
                {
                    fHostnameorIPaddDup1Text = new Text("HostnameorIPaddDup1Text", HostnameorIPaddDup0Text);
                    fHostnameorIPaddDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fHostnameorIPaddDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname or IP address");
                    fHostnameorIPaddDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fHostnameorIPaddDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to PortText
        /// </summary>
        public Text PortText
        {
            get
            {
                if (null == fPortText)
                {
                    fPortText = new Text("PortText", NetworkDirectorGroup);
                    fPortText.UIMap.Scope = UIASeachScope.Children;
                    fPortText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port");
                    fPortText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fPortText;
            }
        }

        /// <summary>
        /// Gets Reference to PortTextBlockText
        /// </summary>
        public Text PortTextBlockText
        {
            get
            {
                if (null == fPortTextBlockText)
                {
                    fPortTextBlockText = new Text("PortTextBlockText", PortText);
                    fPortTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fPortTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port");
                    fPortTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fPortTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to UseasecureconneCheckBox
        /// </summary>
        public CheckBox UseasecureconneCheckBox
        {
            get
            {
                if (null == fUseasecureconneCheckBox)
                {
                    fUseasecureconneCheckBox = new CheckBox("UseasecureconneCheckBox", NetworkDirectorGroup);
                    fUseasecureconneCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUseasecureconneCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f664dd2f-3a25-449d-adce-75616a828eef");
                    fUseasecureconneCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use a secure connection (SSL)");
                    fUseasecureconneCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                }

                return fUseasecureconneCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to UseasecureconneText
        /// </summary>
        public Text UseasecureconneText
        {
            get
            {
                if (null == fUseasecureconneText)
                {
                    fUseasecureconneText = new Text("UseasecureconneText", UseasecureconneCheckBox);
                    fUseasecureconneText.UIMap.Scope = UIASeachScope.Children;
                    fUseasecureconneText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use a secure connection (SSL)");
                    fUseasecureconneText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fUseasecureconneText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox79f22c3aEdit
        /// </summary>
        public Edit TextBox79f22c3aEdit
        {
            get
            {
                if (null == fTextBox79f22c3aEdit)
                {
                    fTextBox79f22c3aEdit = new Edit("TextBox79f22c3aEdit", NetworkDirectorGroup);
                    fTextBox79f22c3aEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox79f22c3aEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"79f22c3a-7b6e-4c21-96ce-aefbf8ca36aa");
                    fTextBox79f22c3aEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox79f22c3aEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup5Pane
        /// </summary>
        public Pane ScrollViewerPARDup5Pane
        {
            get
            {
                if (null == fScrollViewerPARDup5Pane)
                {
                    fScrollViewerPARDup5Pane = new Pane("ScrollViewerPARDup5Pane", TextBox79f22c3aEdit);
                    fScrollViewerPARDup5Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup5Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup5ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup5ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup5ScrollBar)
                {
                    fScrollBarVerticDup5ScrollBar = new ScrollBar("ScrollBarVerticDup5ScrollBar", ScrollViewerPARDup5Pane);
                    fScrollBarVerticDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup5ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup5ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup5ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup5ScrollBar)
                {
                    fScrollBarHorizoDup5ScrollBar = new ScrollBar("ScrollBarHorizoDup5ScrollBar", ScrollViewerPARDup5Pane);
                    fScrollBarHorizoDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup5ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to Port636isthedefDup0Text
        /// </summary>
        public Text Port636isthedefDup0Text
        {
            get
            {
                if (null == fPort636isthedefDup0Text)
                {
                    fPort636isthedefDup0Text = new Text("Port636isthedefDup0Text", NetworkDirectorGroup);
                    fPort636isthedefDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fPort636isthedefDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port 636 is the default for TLS or SSL");
                    fPort636isthedefDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fPort636isthedefDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to Port636isthedefDup1Text
        /// </summary>
        public Text Port636isthedefDup1Text
        {
            get
            {
                if (null == fPort636isthedefDup1Text)
                {
                    fPort636isthedefDup1Text = new Text("Port636isthedefDup1Text", Port636isthedefDup0Text);
                    fPort636isthedefDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fPort636isthedefDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port 636 is the default for TLS or SSL");
                    fPort636isthedefDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fPort636isthedefDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ExpanderDD1518FGroup
        /// </summary>
        public Group ExpanderDD1518FGroup
        {
            get
            {
                if (null == fExpanderDD1518FGroup)
                {
                    fExpanderDD1518FGroup = new Group("ExpanderDD1518FGroup", LDAPReplicationGroup);
                    fExpanderDD1518FGroup.UIMap.Scope = UIASeachScope.Children;
                    fExpanderDD1518FGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DD1518F6-229D-4794-BC45-4911B62A8276");
                    fExpanderDD1518FGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                }

                return fExpanderDD1518FGroup;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonHeaderSitDup1Button
        /// </summary>
        public Button ButtonHeaderSitDup1Button
        {
            get
            {
                if (null == fButtonHeaderSitDup1Button)
                {
                    fButtonHeaderSitDup1Button = new Button("ButtonHeaderSitDup1Button", ExpanderDD1518FGroup);
                    fButtonHeaderSitDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonHeaderSitDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                    fButtonHeaderSitDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonHeaderSitDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to ServerAuthenticGroup
        /// </summary>
        public Group ServerAuthenticGroup
        {
            get
            {
                if (null == fServerAuthenticGroup)
                {
                    fServerAuthenticGroup = new Group("ServerAuthenticGroup", LDAPReplicationGroup);
                    fServerAuthenticGroup.UIMap.Scope = UIASeachScope.Children;
                    fServerAuthenticGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mServerAuthRequirementsGroupBox");
                    fServerAuthenticGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server Authentication Requirements(Step 2)");
                    fServerAuthenticGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fServerAuthenticGroup;
            }
        }

        /// <summary>
        /// Gets Reference to ServerAuthenticText
        /// </summary>
        public Text ServerAuthenticText
        {
            get
            {
                if (null == fServerAuthenticText)
                {
                    fServerAuthenticText = new Text("ServerAuthenticText", ServerAuthenticGroup);
                    fServerAuthenticText.UIMap.Scope = UIASeachScope.Children;
                    fServerAuthenticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server Authentication Requirements(Step 2)");
                    fServerAuthenticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fServerAuthenticText;
            }
        }

        /// <summary>
        /// Gets Reference to ServerdoesnotreRadioButton
        /// </summary>
        public RadioButton ServerdoesnotreRadioButton
        {
            get
            {
                if (null == fServerdoesnotreRadioButton)
                {
                    fServerdoesnotreRadioButton = new RadioButton("ServerdoesnotreRadioButton", ServerAuthenticGroup);
                    fServerdoesnotreRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fServerdoesnotreRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"836ec313-c8b4-46ce-ac74-630bc6e0753a");
                    fServerdoesnotreRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server does not require authentication");
                    fServerdoesnotreRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                }

                return fServerdoesnotreRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to ServerdoesnotreText
        /// </summary>
        public Text ServerdoesnotreText
        {
            get
            {
                if (null == fServerdoesnotreText)
                {
                    fServerdoesnotreText = new Text("ServerdoesnotreText", ServerdoesnotreRadioButton);
                    fServerdoesnotreText.UIMap.Scope = UIASeachScope.Children;
                    fServerdoesnotreText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server does not require authentication");
                    fServerdoesnotreText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fServerdoesnotreText;
            }
        }

        /// <summary>
        /// Gets Reference to ServerrequiresaRadioButton
        /// </summary>
        public RadioButton ServerrequiresaRadioButton
        {
            get
            {
                if (null == fServerrequiresaRadioButton)
                {
                    fServerrequiresaRadioButton = new RadioButton("ServerrequiresaRadioButton", ServerAuthenticGroup);
                    fServerrequiresaRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fServerrequiresaRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"58374bee-32a1-40ba-9456-9722d6064b3f");
                    fServerrequiresaRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server requires authentication");
                    fServerrequiresaRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                }

                return fServerrequiresaRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to ServerrequiresaText
        /// </summary>
        public Text ServerrequiresaText
        {
            get
            {
                if (null == fServerrequiresaText)
                {
                    fServerrequiresaText = new Text("ServerrequiresaText", ServerrequiresaRadioButton);
                    fServerrequiresaText.UIMap.Scope = UIASeachScope.Children;
                    fServerrequiresaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server requires authentication");
                    fServerrequiresaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fServerrequiresaText;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBox5cd52d1ComboBox
        /// </summary>
        public ComboBox ComboBox5cd52d1ComboBox
        {
            get
            {
                if (null == fComboBox5cd52d1ComboBox)
                {
                    fComboBox5cd52d1ComboBox = new ComboBox("ComboBox5cd52d1ComboBox", ServerAuthenticGroup);
                    fComboBox5cd52d1ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox5cd52d1ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5cd52d18-4bd7-4996-8fe1-acb2c3f2ff84");
                    fComboBox5cd52d1ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                }

                return fComboBox5cd52d1ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to WindowsorLDAPsiText
        /// </summary>
        public Text WindowsorLDAPsiText
        {
            get
            {
                if (null == fWindowsorLDAPsiText)
                {
                    fWindowsorLDAPsiText = new Text("WindowsorLDAPsiText", ServerAuthenticGroup);
                    fWindowsorLDAPsiText.UIMap.Scope = UIASeachScope.Children;
                    fWindowsorLDAPsiText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33ad2d95-602a-471f-b536-fbc90d4fa5c0");
                    fWindowsorLDAPsiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows or LDAP sign in should be required for using the E-mail and Fax functions at the device to successfully query the LDAP server.");
                    fWindowsorLDAPsiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fWindowsorLDAPsiText;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameDup1Text
        /// </summary>
        public Text UsernameDup1Text
        {
            get
            {
                if (null == fUsernameDup1Text)
                {
                    fUsernameDup1Text = new Text("UsernameDup1Text", ServerAuthenticGroup);
                    fUsernameDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fUsernameDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                    fUsernameDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fUsernameDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameTextBloDup1Text
        /// </summary>
        public Text UsernameTextBloDup1Text
        {
            get
            {
                if (null == fUsernameTextBloDup1Text)
                {
                    fUsernameTextBloDup1Text = new Text("UsernameTextBloDup1Text", UsernameDup1Text);
                    fUsernameTextBloDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fUsernameTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                    fUsernameTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fUsernameTextBloDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxb54cac9eEdit
        /// </summary>
        public Edit TextBoxb54cac9eEdit
        {
            get
            {
                if (null == fTextBoxb54cac9eEdit)
                {
                    fTextBoxb54cac9eEdit = new Edit("TextBoxb54cac9eEdit", ServerAuthenticGroup);
                    fTextBoxb54cac9eEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxb54cac9eEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b54cac9e-8c97-45bc-9e83-a304dfd477fb");
                    fTextBoxb54cac9eEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxb54cac9eEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup6Pane
        /// </summary>
        public Pane ScrollViewerPARDup6Pane
        {
            get
            {
                if (null == fScrollViewerPARDup6Pane)
                {
                    fScrollViewerPARDup6Pane = new Pane("ScrollViewerPARDup6Pane", TextBoxb54cac9eEdit);
                    fScrollViewerPARDup6Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup6Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup6ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup6ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup6ScrollBar)
                {
                    fScrollBarVerticDup6ScrollBar = new ScrollBar("ScrollBarVerticDup6ScrollBar", ScrollViewerPARDup6Pane);
                    fScrollBarVerticDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup6ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup6ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup6ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup6ScrollBar)
                {
                    fScrollBarHorizoDup6ScrollBar = new ScrollBar("ScrollBarHorizoDup6ScrollBar", ScrollViewerPARDup6Pane);
                    fScrollBarHorizoDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup6ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordDup1Text
        /// </summary>
        public Text PasswordDup1Text
        {
            get
            {
                if (null == fPasswordDup1Text)
                {
                    fPasswordDup1Text = new Text("PasswordDup1Text", ServerAuthenticGroup);
                    fPasswordDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fPasswordDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                    fPasswordDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fPasswordDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordTextBloDup1Text
        /// </summary>
        public Text PasswordTextBloDup1Text
        {
            get
            {
                if (null == fPasswordTextBloDup1Text)
                {
                    fPasswordTextBloDup1Text = new Text("PasswordTextBloDup1Text", PasswordDup1Text);
                    fPasswordTextBloDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fPasswordTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                    fPasswordTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fPasswordTextBloDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordBox8ed9Edit
        /// </summary>
        public Edit PasswordBox8ed9Edit
        {
            get
            {
                if (null == fPasswordBox8ed9Edit)
                {
                    fPasswordBox8ed9Edit = new Edit("PasswordBox8ed9Edit", ServerAuthenticGroup);
                    fPasswordBox8ed9Edit.UIMap.Scope = UIASeachScope.Children;
                    fPasswordBox8ed9Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8ed98c8c-05d8-4392-be81-d6165bab46cd");
                    fPasswordBox8ed9Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"PasswordBox");
                }

                return fPasswordBox8ed9Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup7Pane
        /// </summary>
        public Pane ScrollViewerPARDup7Pane
        {
            get
            {
                if (null == fScrollViewerPARDup7Pane)
                {
                    fScrollViewerPARDup7Pane = new Pane("ScrollViewerPARDup7Pane", PasswordBox8ed9Edit);
                    fScrollViewerPARDup7Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup7Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup7Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup7Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup7ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup7ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup7ScrollBar)
                {
                    fScrollBarVerticDup7ScrollBar = new ScrollBar("ScrollBarVerticDup7ScrollBar", ScrollViewerPARDup7Pane);
                    fScrollBarVerticDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup7ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup7ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup7ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup7ScrollBar)
                {
                    fScrollBarHorizoDup7ScrollBar = new ScrollBar("ScrollBarHorizoDup7ScrollBar", ScrollViewerPARDup7Pane);
                    fScrollBarHorizoDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup7ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to WindowsDomainDup1Text
        /// </summary>
        public Text WindowsDomainDup1Text
        {
            get
            {
                if (null == fWindowsDomainDup1Text)
                {
                    fWindowsDomainDup1Text = new Text("WindowsDomainDup1Text", ServerAuthenticGroup);
                    fWindowsDomainDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fWindowsDomainDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Domain");
                    fWindowsDomainDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fWindowsDomainDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox1cce79f4Edit
        /// </summary>
        public Edit TextBox1cce79f4Edit
        {
            get
            {
                if (null == fTextBox1cce79f4Edit)
                {
                    fTextBox1cce79f4Edit = new Edit("TextBox1cce79f4Edit", ServerAuthenticGroup);
                    fTextBox1cce79f4Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox1cce79f4Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1cce79f4-4405-454b-8b93-73914a8c1e45");
                    fTextBox1cce79f4Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox1cce79f4Edit;
            }
        }

        /// <summary>
        /// Gets Reference to KerberosDefaultText
        /// </summary>
        public Text KerberosDefaultText
        {
            get
            {
                if (null == fKerberosDefaultText)
                {
                    fKerberosDefaultText = new Text("KerberosDefaultText", ServerAuthenticGroup);
                    fKerberosDefaultText.UIMap.Scope = UIASeachScope.Children;
                    fKerberosDefaultText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Kerberos Default Realm");
                    fKerberosDefaultText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fKerberosDefaultText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox757e1b31Edit
        /// </summary>
        public Edit TextBox757e1b31Edit
        {
            get
            {
                if (null == fTextBox757e1b31Edit)
                {
                    fTextBox757e1b31Edit = new Edit("TextBox757e1b31Edit", ServerAuthenticGroup);
                    fTextBox757e1b31Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox757e1b31Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"757e1b31-908c-481f-8d51-53d856ee65e8");
                    fTextBox757e1b31Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox757e1b31Edit;
            }
        }

        /// <summary>
        /// Gets Reference to KerberosServerHText
        /// </summary>
        public Text KerberosServerHText
        {
            get
            {
                if (null == fKerberosServerHText)
                {
                    fKerberosServerHText = new Text("KerberosServerHText", ServerAuthenticGroup);
                    fKerberosServerHText.UIMap.Scope = UIASeachScope.Children;
                    fKerberosServerHText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Kerberos Server Hostname");
                    fKerberosServerHText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fKerberosServerHText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxe5cfa172Edit
        /// </summary>
        public Edit TextBoxe5cfa172Edit
        {
            get
            {
                if (null == fTextBoxe5cfa172Edit)
                {
                    fTextBoxe5cfa172Edit = new Edit("TextBoxe5cfa172Edit", ServerAuthenticGroup);
                    fTextBoxe5cfa172Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxe5cfa172Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e5cfa172-a41a-4d1f-9605-5bb415448a80");
                    fTextBoxe5cfa172Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxe5cfa172Edit;
            }
        }

        /// <summary>
        /// Gets Reference to KerberosServerPText
        /// </summary>
        public Text KerberosServerPText
        {
            get
            {
                if (null == fKerberosServerPText)
                {
                    fKerberosServerPText = new Text("KerberosServerPText", ServerAuthenticGroup);
                    fKerberosServerPText.UIMap.Scope = UIASeachScope.Children;
                    fKerberosServerPText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Kerberos Server Port");
                    fKerberosServerPText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fKerberosServerPText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxf986abfaEdit
        /// </summary>
        public Edit TextBoxf986abfaEdit
        {
            get
            {
                if (null == fTextBoxf986abfaEdit)
                {
                    fTextBoxf986abfaEdit = new Edit("TextBoxf986abfaEdit", ServerAuthenticGroup);
                    fTextBoxf986abfaEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxf986abfaEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f986abfa-5563-459f-a15c-cd0c9ba2ffdf");
                    fTextBoxf986abfaEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxf986abfaEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ExpanderB7151C3Group
        /// </summary>
        public Group ExpanderB7151C3Group
        {
            get
            {
                if (null == fExpanderB7151C3Group)
                {
                    fExpanderB7151C3Group = new Group("ExpanderB7151C3Group", LDAPReplicationGroup);
                    fExpanderB7151C3Group.UIMap.Scope = UIASeachScope.Children;
                    fExpanderB7151C3Group.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B7151C32-813E-49fe-A052-F101BABC03F7");
                    fExpanderB7151C3Group.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                }

                return fExpanderB7151C3Group;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonHeaderSitDup2Button
        /// </summary>
        public Button ButtonHeaderSitDup2Button
        {
            get
            {
                if (null == fButtonHeaderSitDup2Button)
                {
                    fButtonHeaderSitDup2Button = new Button("ButtonHeaderSitDup2Button", ExpanderB7151C3Group);
                    fButtonHeaderSitDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonHeaderSitDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                    fButtonHeaderSitDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonHeaderSitDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPDatabaseSeaGroup
        /// </summary>
        public Group LDAPDatabaseSeaGroup
        {
            get
            {
                if (null == fLDAPDatabaseSeaGroup)
                {
                    fLDAPDatabaseSeaGroup = new Group("LDAPDatabaseSeaGroup", LDAPReplicationGroup);
                    fLDAPDatabaseSeaGroup.UIMap.Scope = UIASeachScope.Children;
                    fLDAPDatabaseSeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mLDAPDbSearchSettingsGroupBox");
                    fLDAPDatabaseSeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Database Search Settings(Step 3)");
                    fLDAPDatabaseSeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fLDAPDatabaseSeaGroup;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPDatabaseSeaText
        /// </summary>
        public Text LDAPDatabaseSeaText
        {
            get
            {
                if (null == fLDAPDatabaseSeaText)
                {
                    fLDAPDatabaseSeaText = new Text("LDAPDatabaseSeaText", LDAPDatabaseSeaGroup);
                    fLDAPDatabaseSeaText.UIMap.Scope = UIASeachScope.Children;
                    fLDAPDatabaseSeaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Database Search Settings(Step 3)");
                    fLDAPDatabaseSeaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fLDAPDatabaseSeaText;
            }
        }

        /// <summary>
        /// Gets Reference to PathtostartsearDup0Text
        /// </summary>
        public Text PathtostartsearDup0Text
        {
            get
            {
                if (null == fPathtostartsearDup0Text)
                {
                    fPathtostartsearDup0Text = new Text("PathtostartsearDup0Text", LDAPDatabaseSeaGroup);
                    fPathtostartsearDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fPathtostartsearDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Path to start search (BaseDN, Search Root):");
                    fPathtostartsearDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fPathtostartsearDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to PathtostartsearDup1Text
        /// </summary>
        public Text PathtostartsearDup1Text
        {
            get
            {
                if (null == fPathtostartsearDup1Text)
                {
                    fPathtostartsearDup1Text = new Text("PathtostartsearDup1Text", PathtostartsearDup0Text);
                    fPathtostartsearDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fPathtostartsearDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Path to start search (BaseDN, Search Root):");
                    fPathtostartsearDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fPathtostartsearDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox2e2cfbd5Edit
        /// </summary>
        public Edit TextBox2e2cfbd5Edit
        {
            get
            {
                if (null == fTextBox2e2cfbd5Edit)
                {
                    fTextBox2e2cfbd5Edit = new Edit("TextBox2e2cfbd5Edit", LDAPDatabaseSeaGroup);
                    fTextBox2e2cfbd5Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox2e2cfbd5Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2e2cfbd5-5072-4c10-b4a7-bb6d3e1e7c34");
                    fTextBox2e2cfbd5Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox2e2cfbd5Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup8Pane
        /// </summary>
        public Pane ScrollViewerPARDup8Pane
        {
            get
            {
                if (null == fScrollViewerPARDup8Pane)
                {
                    fScrollViewerPARDup8Pane = new Pane("ScrollViewerPARDup8Pane", TextBox2e2cfbd5Edit);
                    fScrollViewerPARDup8Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup8Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup8Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup8Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup8ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup8ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup8ScrollBar)
                {
                    fScrollBarVerticDup8ScrollBar = new ScrollBar("ScrollBarVerticDup8ScrollBar", ScrollViewerPARDup8Pane);
                    fScrollBarVerticDup8ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup8ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup8ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup8ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup8ScrollBar)
                {
                    fScrollBarHorizoDup8ScrollBar = new ScrollBar("ScrollBarHorizoDup8ScrollBar", ScrollViewerPARDup8Pane);
                    fScrollBarHorizoDup8ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup8ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to AutoFindButton4Button
        /// </summary>
        public Button AutoFindButton4Button
        {
            get
            {
                if (null == fAutoFindButton4Button)
                {
                    fAutoFindButton4Button = new Button("AutoFindButton4Button", LDAPDatabaseSeaGroup);
                    fAutoFindButton4Button.UIMap.Scope = UIASeachScope.Children;
                    fAutoFindButton4Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"44a89ec4-7799-4c0c-a4b7-c5d8fd9a005d");
                    fAutoFindButton4Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                    fAutoFindButton4Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fAutoFindButton4Button;
            }
        }

        /// <summary>
        /// Gets Reference to AutoFindTextBloDup1Text
        /// </summary>
        public Text AutoFindTextBloDup1Text
        {
            get
            {
                if (null == fAutoFindTextBloDup1Text)
                {
                    fAutoFindTextBloDup1Text = new Text("AutoFindTextBloDup1Text", AutoFindButton4Button);
                    fAutoFindTextBloDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAutoFindTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                    fAutoFindTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAutoFindTextBloDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to SourceforAttribDup0Text
        /// </summary>
        public Text SourceforAttribDup0Text
        {
            get
            {
                if (null == fSourceforAttribDup0Text)
                {
                    fSourceforAttribDup0Text = new Text("SourceforAttribDup0Text", LDAPDatabaseSeaGroup);
                    fSourceforAttribDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSourceforAttribDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Source for Attribute Names:");
                    fSourceforAttribDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fSourceforAttribDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SourceforAttribDup1Text
        /// </summary>
        public Text SourceforAttribDup1Text
        {
            get
            {
                if (null == fSourceforAttribDup1Text)
                {
                    fSourceforAttribDup1Text = new Text("SourceforAttribDup1Text", SourceforAttribDup0Text);
                    fSourceforAttribDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSourceforAttribDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Source for Attribute Names:");
                    fSourceforAttribDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSourceforAttribDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to UseActiveDirectRadioButton
        /// </summary>
        public RadioButton UseActiveDirectRadioButton
        {
            get
            {
                if (null == fUseActiveDirectRadioButton)
                {
                    fUseActiveDirectRadioButton = new RadioButton("UseActiveDirectRadioButton", LDAPDatabaseSeaGroup);
                    fUseActiveDirectRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fUseActiveDirectRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6b6281c0-c178-4b4c-ba63-1a672886cb81");
                    fUseActiveDirectRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use Active Directory Default");
                    fUseActiveDirectRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                }

                return fUseActiveDirectRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to UseActiveDirectText
        /// </summary>
        public Text UseActiveDirectText
        {
            get
            {
                if (null == fUseActiveDirectText)
                {
                    fUseActiveDirectText = new Text("UseActiveDirectText", UseActiveDirectRadioButton);
                    fUseActiveDirectText.UIMap.Scope = UIASeachScope.Children;
                    fUseActiveDirectText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use Active Directory Default");
                    fUseActiveDirectText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fUseActiveDirectText;
            }
        }

        /// <summary>
        /// Gets Reference to UseExchange55DeRadioButton
        /// </summary>
        public RadioButton UseExchange55DeRadioButton
        {
            get
            {
                if (null == fUseExchange55DeRadioButton)
                {
                    fUseExchange55DeRadioButton = new RadioButton("UseExchange55DeRadioButton", LDAPDatabaseSeaGroup);
                    fUseExchange55DeRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fUseExchange55DeRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a1ce7515-9374-451a-81b9-fdb7f597eeff");
                    fUseExchange55DeRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use Exchange 5.5 Default");
                    fUseExchange55DeRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                }

                return fUseExchange55DeRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to UseExchange55DeText
        /// </summary>
        public Text UseExchange55DeText
        {
            get
            {
                if (null == fUseExchange55DeText)
                {
                    fUseExchange55DeText = new Text("UseExchange55DeText", UseExchange55DeRadioButton);
                    fUseExchange55DeText.UIMap.Scope = UIASeachScope.Children;
                    fUseExchange55DeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use Exchange 5.5 Default");
                    fUseExchange55DeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fUseExchange55DeText;
            }
        }

        /// <summary>
        /// Gets Reference to UseCustomAttribRadioButton
        /// </summary>
        public RadioButton UseCustomAttribRadioButton
        {
            get
            {
                if (null == fUseCustomAttribRadioButton)
                {
                    fUseCustomAttribRadioButton = new RadioButton("UseCustomAttribRadioButton", LDAPDatabaseSeaGroup);
                    fUseCustomAttribRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fUseCustomAttribRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"dc1b3180-3ab6-48b5-9c29-d9ecc10e5cbf");
                    fUseCustomAttribRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use Custom Attributes");
                    fUseCustomAttribRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                }

                return fUseCustomAttribRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to UseCustomAttribText
        /// </summary>
        public Text UseCustomAttribText
        {
            get
            {
                if (null == fUseCustomAttribText)
                {
                    fUseCustomAttribText = new Text("UseCustomAttribText", UseCustomAttribRadioButton);
                    fUseCustomAttribText.UIMap.Scope = UIASeachScope.Children;
                    fUseCustomAttribText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use Custom Attributes");
                    fUseCustomAttribText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fUseCustomAttribText;
            }
        }

        /// <summary>
        /// Gets Reference to AutoFindButton8Button
        /// </summary>
        public Button AutoFindButton8Button
        {
            get
            {
                if (null == fAutoFindButton8Button)
                {
                    fAutoFindButton8Button = new Button("AutoFindButton8Button", LDAPDatabaseSeaGroup);
                    fAutoFindButton8Button.UIMap.Scope = UIASeachScope.Children;
                    fAutoFindButton8Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8ac869f3-a8e9-4be1-ad80-67cf52953b0f");
                    fAutoFindButton8Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                    fAutoFindButton8Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fAutoFindButton8Button;
            }
        }

        /// <summary>
        /// Gets Reference to AutoFindTextBloDup2Text
        /// </summary>
        public Text AutoFindTextBloDup2Text
        {
            get
            {
                if (null == fAutoFindTextBloDup2Text)
                {
                    fAutoFindTextBloDup2Text = new Text("AutoFindTextBloDup2Text", AutoFindButton8Button);
                    fAutoFindTextBloDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fAutoFindTextBloDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                    fAutoFindTextBloDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAutoFindTextBloDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to MatchtheRecipieDup0Text
        /// </summary>
        public Text MatchtheRecipieDup0Text
        {
            get
            {
                if (null == fMatchtheRecipieDup0Text)
                {
                    fMatchtheRecipieDup0Text = new Text("MatchtheRecipieDup0Text", LDAPDatabaseSeaGroup);
                    fMatchtheRecipieDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fMatchtheRecipieDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Match the Recipient's Name with this attribute:");
                    fMatchtheRecipieDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fMatchtheRecipieDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to MatchtheRecipieDup1Text
        /// </summary>
        public Text MatchtheRecipieDup1Text
        {
            get
            {
                if (null == fMatchtheRecipieDup1Text)
                {
                    fMatchtheRecipieDup1Text = new Text("MatchtheRecipieDup1Text", MatchtheRecipieDup0Text);
                    fMatchtheRecipieDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fMatchtheRecipieDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Match the Recipient's Name with this attribute:");
                    fMatchtheRecipieDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fMatchtheRecipieDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox0fd71265Edit
        /// </summary>
        public Edit TextBox0fd71265Edit
        {
            get
            {
                if (null == fTextBox0fd71265Edit)
                {
                    fTextBox0fd71265Edit = new Edit("TextBox0fd71265Edit", LDAPDatabaseSeaGroup);
                    fTextBox0fd71265Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox0fd71265Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0fd71265-6291-4b7b-871a-a52479d12671");
                    fTextBox0fd71265Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox0fd71265Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup9Pane
        /// </summary>
        public Pane ScrollViewerPARDup9Pane
        {
            get
            {
                if (null == fScrollViewerPARDup9Pane)
                {
                    fScrollViewerPARDup9Pane = new Pane("ScrollViewerPARDup9Pane", TextBox0fd71265Edit);
                    fScrollViewerPARDup9Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup9Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup9Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup9Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup9ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup9ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup9ScrollBar)
                {
                    fScrollBarVerticDup9ScrollBar = new ScrollBar("ScrollBarVerticDup9ScrollBar", ScrollViewerPARDup9Pane);
                    fScrollBarVerticDup9ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup9ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup9ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup9ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup9ScrollBar)
                {
                    fScrollBarHorizoDup9ScrollBar = new ScrollBar("ScrollBarHorizoDup9ScrollBar", ScrollViewerPARDup9Pane);
                    fScrollBarHorizoDup9ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup9ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to AttributeNamefoDup0Text
        /// </summary>
        public Text AttributeNamefoDup0Text
        {
            get
            {
                if (null == fAttributeNamefoDup0Text)
                {
                    fAttributeNamefoDup0Text = new Text("AttributeNamefoDup0Text", LDAPDatabaseSeaGroup);
                    fAttributeNamefoDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAttributeNamefoDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Attribute Name for Recipient's E-mail Address:");
                    fAttributeNamefoDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fAttributeNamefoDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to AttributeNamefoDup1Text
        /// </summary>
        public Text AttributeNamefoDup1Text
        {
            get
            {
                if (null == fAttributeNamefoDup1Text)
                {
                    fAttributeNamefoDup1Text = new Text("AttributeNamefoDup1Text", AttributeNamefoDup0Text);
                    fAttributeNamefoDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAttributeNamefoDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Attribute Name for Recipient's E-mail Address:");
                    fAttributeNamefoDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAttributeNamefoDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxc34b5023Edit
        /// </summary>
        public Edit TextBoxc34b5023Edit
        {
            get
            {
                if (null == fTextBoxc34b5023Edit)
                {
                    fTextBoxc34b5023Edit = new Edit("TextBoxc34b5023Edit", LDAPDatabaseSeaGroup);
                    fTextBoxc34b5023Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxc34b5023Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c34b5023-914c-4e04-825f-d3beb507eaea");
                    fTextBoxc34b5023Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxc34b5023Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup10Pane
        /// </summary>
        public Pane ScrollViewerPARDup10Pane
        {
            get
            {
                if (null == fScrollViewerPARDup10Pane)
                {
                    fScrollViewerPARDup10Pane = new Pane("ScrollViewerPARDup10Pane", TextBoxc34b5023Edit);
                    fScrollViewerPARDup10Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup10Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup10Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup10Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup10ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup10ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup10ScrollBar)
                {
                    fScrollBarVerticDup10ScrollBar = new ScrollBar("ScrollBarVerticDup10ScrollBar", ScrollViewerPARDup10Pane);
                    fScrollBarVerticDup10ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup10ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup10ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup10ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup10ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup10ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup10ScrollBar)
                {
                    fScrollBarHorizoDup10ScrollBar = new ScrollBar("ScrollBarHorizoDup10ScrollBar", ScrollViewerPARDup10Pane);
                    fScrollBarHorizoDup10ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup10ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup10ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup10ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to AttributeNamefoDup2Text
        /// </summary>
        public Text AttributeNamefoDup2Text
        {
            get
            {
                if (null == fAttributeNamefoDup2Text)
                {
                    fAttributeNamefoDup2Text = new Text("AttributeNamefoDup2Text", LDAPDatabaseSeaGroup);
                    fAttributeNamefoDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fAttributeNamefoDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Attribute Name for Recipient's Fax Number:");
                    fAttributeNamefoDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fAttributeNamefoDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to AttributeNamefoDup3Text
        /// </summary>
        public Text AttributeNamefoDup3Text
        {
            get
            {
                if (null == fAttributeNamefoDup3Text)
                {
                    fAttributeNamefoDup3Text = new Text("AttributeNamefoDup3Text", AttributeNamefoDup2Text);
                    fAttributeNamefoDup3Text.UIMap.Scope = UIASeachScope.Children;
                    fAttributeNamefoDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Attribute Name for Recipient's Fax Number:");
                    fAttributeNamefoDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAttributeNamefoDup3Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox3a6d11c5Edit
        /// </summary>
        public Edit TextBox3a6d11c5Edit
        {
            get
            {
                if (null == fTextBox3a6d11c5Edit)
                {
                    fTextBox3a6d11c5Edit = new Edit("TextBox3a6d11c5Edit", LDAPDatabaseSeaGroup);
                    fTextBox3a6d11c5Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox3a6d11c5Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3a6d11c5-2db5-478b-841b-4cff1eec20ce");
                    fTextBox3a6d11c5Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox3a6d11c5Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup11Pane
        /// </summary>
        public Pane ScrollViewerPARDup11Pane
        {
            get
            {
                if (null == fScrollViewerPARDup11Pane)
                {
                    fScrollViewerPARDup11Pane = new Pane("ScrollViewerPARDup11Pane", TextBox3a6d11c5Edit);
                    fScrollViewerPARDup11Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup11Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup11Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup11Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup11ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup11ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup11ScrollBar)
                {
                    fScrollBarVerticDup11ScrollBar = new ScrollBar("ScrollBarVerticDup11ScrollBar", ScrollViewerPARDup11Pane);
                    fScrollBarVerticDup11ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup11ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup11ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup11ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup11ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup11ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup11ScrollBar)
                {
                    fScrollBarHorizoDup11ScrollBar = new ScrollBar("ScrollBarHorizoDup11ScrollBar", ScrollViewerPARDup11Pane);
                    fScrollBarHorizoDup11ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup11ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup11ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup11ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to AdvancedSearchOGroup
        /// </summary>
        public Group AdvancedSearchOGroup
        {
            get
            {
                if (null == fAdvancedSearchOGroup)
                {
                    fAdvancedSearchOGroup = new Group("AdvancedSearchOGroup", LDAPDatabaseSeaGroup);
                    fAdvancedSearchOGroup.UIMap.Scope = UIASeachScope.Children;
                    fAdvancedSearchOGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAdvancedSearchOptionsGroupBox");
                    fAdvancedSearchOGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Advanced Search Options");
                    fAdvancedSearchOGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fAdvancedSearchOGroup;
            }
        }

        /// <summary>
        /// Gets Reference to AdvancedSearchOText
        /// </summary>
        public Text AdvancedSearchOText
        {
            get
            {
                if (null == fAdvancedSearchOText)
                {
                    fAdvancedSearchOText = new Text("AdvancedSearchOText", AdvancedSearchOGroup);
                    fAdvancedSearchOText.UIMap.Scope = UIASeachScope.Children;
                    fAdvancedSearchOText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Advanced Search Options");
                    fAdvancedSearchOText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAdvancedSearchOText;
            }
        }

        /// <summary>
        /// Gets Reference to MaximumLDAPAddrDup0Text
        /// </summary>
        public Text MaximumLDAPAddrDup0Text
        {
            get
            {
                if (null == fMaximumLDAPAddrDup0Text)
                {
                    fMaximumLDAPAddrDup0Text = new Text("MaximumLDAPAddrDup0Text", AdvancedSearchOGroup);
                    fMaximumLDAPAddrDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fMaximumLDAPAddrDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mMaximumLDAPAddressesLabel");
                    fMaximumLDAPAddrDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximum LDAP Addresses");
                    fMaximumLDAPAddrDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fMaximumLDAPAddrDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to MaximumLDAPAddrDup1Text
        /// </summary>
        public Text MaximumLDAPAddrDup1Text
        {
            get
            {
                if (null == fMaximumLDAPAddrDup1Text)
                {
                    fMaximumLDAPAddrDup1Text = new Text("MaximumLDAPAddrDup1Text", MaximumLDAPAddrDup0Text);
                    fMaximumLDAPAddrDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fMaximumLDAPAddrDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximum LDAP Addresses");
                    fMaximumLDAPAddrDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fMaximumLDAPAddrDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBox2137ab3ComboBox
        /// </summary>
        public ComboBox ComboBox2137ab3ComboBox
        {
            get
            {
                if (null == fComboBox2137ab3ComboBox)
                {
                    fComboBox2137ab3ComboBox = new ComboBox("ComboBox2137ab3ComboBox", AdvancedSearchOGroup);
                    fComboBox2137ab3ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox2137ab3ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2137ab3e-5055-49ca-9b3b-65d05f27231d");
                    fComboBox2137ab3ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                }

                return fComboBox2137ab3ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to MaximumSearchTiDup0Text
        /// </summary>
        public Text MaximumSearchTiDup0Text
        {
            get
            {
                if (null == fMaximumSearchTiDup0Text)
                {
                    fMaximumSearchTiDup0Text = new Text("MaximumSearchTiDup0Text", AdvancedSearchOGroup);
                    fMaximumSearchTiDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fMaximumSearchTiDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mMaximumSearchTimeLabel");
                    fMaximumSearchTiDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximum Search Time");
                    fMaximumSearchTiDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fMaximumSearchTiDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to MaximumSearchTiDup1Text
        /// </summary>
        public Text MaximumSearchTiDup1Text
        {
            get
            {
                if (null == fMaximumSearchTiDup1Text)
                {
                    fMaximumSearchTiDup1Text = new Text("MaximumSearchTiDup1Text", MaximumSearchTiDup0Text);
                    fMaximumSearchTiDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fMaximumSearchTiDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximum Search Time");
                    fMaximumSearchTiDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fMaximumSearchTiDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBox290a3adComboBox
        /// </summary>
        public ComboBox ComboBox290a3adComboBox
        {
            get
            {
                if (null == fComboBox290a3adComboBox)
                {
                    fComboBox290a3adComboBox = new ComboBox("ComboBox290a3adComboBox", AdvancedSearchOGroup);
                    fComboBox290a3adComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox290a3adComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"290a3adf-c203-4b77-9d94-5e632adfaa51");
                    fComboBox290a3adComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                }

                return fComboBox290a3adComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPFilterCondiDup0Text
        /// </summary>
        public Text LDAPFilterCondiDup0Text
        {
            get
            {
                if (null == fLDAPFilterCondiDup0Text)
                {
                    fLDAPFilterCondiDup0Text = new Text("LDAPFilterCondiDup0Text", AdvancedSearchOGroup);
                    fLDAPFilterCondiDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fLDAPFilterCondiDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mLDAPFilterConditionLabel");
                    fLDAPFilterCondiDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Filter Condition");
                    fLDAPFilterCondiDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fLDAPFilterCondiDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPFilterCondiDup1Text
        /// </summary>
        public Text LDAPFilterCondiDup1Text
        {
            get
            {
                if (null == fLDAPFilterCondiDup1Text)
                {
                    fLDAPFilterCondiDup1Text = new Text("LDAPFilterCondiDup1Text", LDAPFilterCondiDup0Text);
                    fLDAPFilterCondiDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fLDAPFilterCondiDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Filter Condition");
                    fLDAPFilterCondiDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fLDAPFilterCondiDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox3abd074eEdit
        /// </summary>
        public Edit TextBox3abd074eEdit
        {
            get
            {
                if (null == fTextBox3abd074eEdit)
                {
                    fTextBox3abd074eEdit = new Edit("TextBox3abd074eEdit", AdvancedSearchOGroup);
                    fTextBox3abd074eEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox3abd074eEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3abd074e-aaaf-43d5-a27a-f7d84752d830");
                    fTextBox3abd074eEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox3abd074eEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup12Pane
        /// </summary>
        public Pane ScrollViewerPARDup12Pane
        {
            get
            {
                if (null == fScrollViewerPARDup12Pane)
                {
                    fScrollViewerPARDup12Pane = new Pane("ScrollViewerPARDup12Pane", TextBox3abd074eEdit);
                    fScrollViewerPARDup12Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup12Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup12Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup12Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup12ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup12ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup12ScrollBar)
                {
                    fScrollBarVerticDup12ScrollBar = new ScrollBar("ScrollBarVerticDup12ScrollBar", ScrollViewerPARDup12Pane);
                    fScrollBarVerticDup12ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup12ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup12ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup12ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup12ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup12ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup12ScrollBar)
                {
                    fScrollBarHorizoDup12ScrollBar = new ScrollBar("ScrollBarHorizoDup12ScrollBar", ScrollViewerPARDup12Pane);
                    fScrollBarHorizoDup12ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup12ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup12ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup12ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to EntriesinDatabaCheckBox
        /// </summary>
        public CheckBox EntriesinDatabaCheckBox
        {
            get
            {
                if (null == fEntriesinDatabaCheckBox)
                {
                    fEntriesinDatabaCheckBox = new CheckBox("EntriesinDatabaCheckBox", AdvancedSearchOGroup);
                    fEntriesinDatabaCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEntriesinDatabaCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c949bcfc-c89e-4ed0-add4-051c105f7157");
                    fEntriesinDatabaCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Entries in Database are Alphabetized");
                    fEntriesinDatabaCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                }

                return fEntriesinDatabaCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to EntriesinDatabaText
        /// </summary>
        public Text EntriesinDatabaText
        {
            get
            {
                if (null == fEntriesinDatabaText)
                {
                    fEntriesinDatabaText = new Text("EntriesinDatabaText", EntriesinDatabaCheckBox);
                    fEntriesinDatabaText.UIMap.Scope = UIASeachScope.Children;
                    fEntriesinDatabaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Entries in Database are Alphabetized");
                    fEntriesinDatabaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fEntriesinDatabaText;
            }
        }

        /// <summary>
        /// Gets Reference to Expander0D39A3CGroup
        /// </summary>
        public Group Expander0D39A3CGroup
        {
            get
            {
                if (null == fExpander0D39A3CGroup)
                {
                    fExpander0D39A3CGroup = new Group("Expander0D39A3CGroup", LDAPReplicationGroup);
                    fExpander0D39A3CGroup.UIMap.Scope = UIASeachScope.Children;
                    fExpander0D39A3CGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0D39A3C1-0FEF-4c04-A306-85CAC8347DF0");
                    fExpander0D39A3CGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                }

                return fExpander0D39A3CGroup;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonHeaderSitDup3Button
        /// </summary>
        public Button ButtonHeaderSitDup3Button
        {
            get
            {
                if (null == fButtonHeaderSitDup3Button)
                {
                    fButtonHeaderSitDup3Button = new Button("ButtonHeaderSitDup3Button", Expander0D39A3CGroup);
                    fButtonHeaderSitDup3Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonHeaderSitDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                    fButtonHeaderSitDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonHeaderSitDup3Button;
            }
        }

        /// <summary>
        /// Gets Reference to TestforLDAPRetrGroup
        /// </summary>
        public Group TestforLDAPRetrGroup
        {
            get
            {
                if (null == fTestforLDAPRetrGroup)
                {
                    fTestforLDAPRetrGroup = new Group("TestforLDAPRetrGroup", LDAPReplicationGroup);
                    fTestforLDAPRetrGroup.UIMap.Scope = UIASeachScope.Children;
                    fTestforLDAPRetrGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mTestLDAPRetrievalGroupBox");
                    fTestforLDAPRetrGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test for LDAP Retrieval(Step 4)");
                    fTestforLDAPRetrGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fTestforLDAPRetrGroup;
            }
        }

        /// <summary>
        /// Gets Reference to TestforLDAPRetrText
        /// </summary>
        public Text TestforLDAPRetrText
        {
            get
            {
                if (null == fTestforLDAPRetrText)
                {
                    fTestforLDAPRetrText = new Text("TestforLDAPRetrText", TestforLDAPRetrGroup);
                    fTestforLDAPRetrText.UIMap.Scope = UIASeachScope.Children;
                    fTestforLDAPRetrText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test for LDAP Retrieval(Step 4)");
                    fTestforLDAPRetrText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTestforLDAPRetrText;
            }
        }

        /// <summary>
        /// Gets Reference to TestTextmTestLaText
        /// </summary>
        public Text TestTextmTestLaText
        {
            get
            {
                if (null == fTestTextmTestLaText)
                {
                    fTestTextmTestLaText = new Text("TestTextmTestLaText", TestforLDAPRetrGroup);
                    fTestTextmTestLaText.UIMap.Scope = UIASeachScope.Children;
                    fTestTextmTestLaText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mTestLabel");
                    fTestTextmTestLaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    fTestTextmTestLaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fTestTextmTestLaText;
            }
        }

        /// <summary>
        /// Gets Reference to TestTextBlockDup2Text
        /// </summary>
        public Text TestTextBlockDup2Text
        {
            get
            {
                if (null == fTestTextBlockDup2Text)
                {
                    fTestTextBlockDup2Text = new Text("TestTextBlockDup2Text", TestTextmTestLaText);
                    fTestTextBlockDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fTestTextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    fTestTextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTestTextBlockDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxf206c2f6Edit
        /// </summary>
        public Edit TextBoxf206c2f6Edit
        {
            get
            {
                if (null == fTextBoxf206c2f6Edit)
                {
                    fTextBoxf206c2f6Edit = new Edit("TextBoxf206c2f6Edit", TestforLDAPRetrGroup);
                    fTextBoxf206c2f6Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxf206c2f6Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f206c2f6-8a80-4199-9adb-544294a0699d");
                    fTextBoxf206c2f6Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxf206c2f6Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup13Pane
        /// </summary>
        public Pane ScrollViewerPARDup13Pane
        {
            get
            {
                if (null == fScrollViewerPARDup13Pane)
                {
                    fScrollViewerPARDup13Pane = new Pane("ScrollViewerPARDup13Pane", TextBoxf206c2f6Edit);
                    fScrollViewerPARDup13Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup13Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup13Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup13Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup13ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup13ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup13ScrollBar)
                {
                    fScrollBarVerticDup13ScrollBar = new ScrollBar("ScrollBarVerticDup13ScrollBar", ScrollViewerPARDup13Pane);
                    fScrollBarVerticDup13ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup13ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup13ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup13ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup13ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup13ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup13ScrollBar)
                {
                    fScrollBarHorizoDup13ScrollBar = new ScrollBar("ScrollBarHorizoDup13ScrollBar", ScrollViewerPARDup13Pane);
                    fScrollBarHorizoDup13ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup13ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup13ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup13ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to TestButtone6d54Button
        /// </summary>
        public Button TestButtone6d54Button
        {
            get
            {
                if (null == fTestButtone6d54Button)
                {
                    fTestButtone6d54Button = new Button("TestButtone6d54Button", TestforLDAPRetrGroup);
                    fTestButtone6d54Button.UIMap.Scope = UIASeachScope.Children;
                    fTestButtone6d54Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e6d54317-fa20-4941-b1af-7c31d70663bb");
                    fTestButtone6d54Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    fTestButtone6d54Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fTestButtone6d54Button;
            }
        }

        /// <summary>
        /// Gets Reference to TestTextBlockDup3Text
        /// </summary>
        public Text TestTextBlockDup3Text
        {
            get
            {
                if (null == fTestTextBlockDup3Text)
                {
                    fTestTextBlockDup3Text = new Text("TestTextBlockDup3Text", TestButtone6d54Button);
                    fTestTextBlockDup3Text.UIMap.Scope = UIASeachScope.Children;
                    fTestTextBlockDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    fTestTextBlockDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTestTextBlockDup3Text;
            }
        }

        /// <summary>
        /// Gets Reference to Expander5DC4D6AGroup
        /// </summary>
        public Group Expander5DC4D6AGroup
        {
            get
            {
                if (null == fExpander5DC4D6AGroup)
                {
                    fExpander5DC4D6AGroup = new Group("Expander5DC4D6AGroup", LDAPReplicationGroup);
                    fExpander5DC4D6AGroup.UIMap.Scope = UIASeachScope.Children;
                    fExpander5DC4D6AGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5DC4D6A6-7B07-4911-859F-70566AF3C7B4");
                    fExpander5DC4D6AGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                }

                return fExpander5DC4D6AGroup;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonHeaderSitDup4Button
        /// </summary>
        public Button ButtonHeaderSitDup4Button
        {
            get
            {
                if (null == fButtonHeaderSitDup4Button)
                {
                    fButtonHeaderSitDup4Button = new Button("ButtonHeaderSitDup4Button", Expander5DC4D6AGroup);
                    fButtonHeaderSitDup4Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonHeaderSitDup4Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                    fButtonHeaderSitDup4Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonHeaderSitDup4Button;
            }
        }

        /// <summary>
        /// Gets Reference to SyncScheduleSteGroup
        /// </summary>
        public Group SyncScheduleSteGroup
        {
            get
            {
                if (null == fSyncScheduleSteGroup)
                {
                    fSyncScheduleSteGroup = new Group("SyncScheduleSteGroup", LDAPReplicationGroup);
                    fSyncScheduleSteGroup.UIMap.Scope = UIASeachScope.Children;
                    fSyncScheduleSteGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"fa9b3876-67dc-436a-8dc9-2660331e162a");
                    fSyncScheduleSteGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Schedule (Step 5)");
                    fSyncScheduleSteGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fSyncScheduleSteGroup;
            }
        }

        /// <summary>
        /// Gets Reference to SyncScheduleSteText
        /// </summary>
        public Text SyncScheduleSteText
        {
            get
            {
                if (null == fSyncScheduleSteText)
                {
                    fSyncScheduleSteText = new Text("SyncScheduleSteText", SyncScheduleSteGroup);
                    fSyncScheduleSteText.UIMap.Scope = UIASeachScope.Children;
                    fSyncScheduleSteText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Schedule (Step 5)");
                    fSyncScheduleSteText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSyncScheduleSteText;
            }
        }

        /// <summary>
        /// Gets Reference to SyncText
        /// </summary>
        public Text SyncText
        {
            get
            {
                if (null == fSyncText)
                {
                    fSyncText = new Text("SyncText", SyncScheduleSteGroup);
                    fSyncText.UIMap.Scope = UIASeachScope.Children;
                    fSyncText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync");
                    fSyncText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fSyncText;
            }
        }

        /// <summary>
        /// Gets Reference to SyncTextBlockText
        /// </summary>
        public Text SyncTextBlockText
        {
            get
            {
                if (null == fSyncTextBlockText)
                {
                    fSyncTextBlockText = new Text("SyncTextBlockText", SyncText);
                    fSyncTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fSyncTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync");
                    fSyncTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSyncTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBox1138dacComboBox
        /// </summary>
        public ComboBox ComboBox1138dacComboBox
        {
            get
            {
                if (null == fComboBox1138dacComboBox)
                {
                    fComboBox1138dacComboBox = new ComboBox("ComboBox1138dacComboBox", SyncScheduleSteGroup);
                    fComboBox1138dacComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox1138dacComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1138dac4-8bb2-4887-b0e8-95433a89ea1c");
                    fComboBox1138dacComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                }

                return fComboBox1138dacComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SyncTimeText
        /// </summary>
        public Text SyncTimeText
        {
            get
            {
                if (null == fSyncTimeText)
                {
                    fSyncTimeText = new Text("SyncTimeText", SyncScheduleSteGroup);
                    fSyncTimeText.UIMap.Scope = UIASeachScope.Children;
                    fSyncTimeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Time");
                    fSyncTimeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fSyncTimeText;
            }
        }

        /// <summary>
        /// Gets Reference to SyncTimeTextBloText
        /// </summary>
        public Text SyncTimeTextBloText
        {
            get
            {
                if (null == fSyncTimeTextBloText)
                {
                    fSyncTimeTextBloText = new Text("SyncTimeTextBloText", SyncTimeText);
                    fSyncTimeTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fSyncTimeTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Time");
                    fSyncTimeTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSyncTimeTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to WindowsFormsHosDup0Pane
        /// </summary>
        public Pane WindowsFormsHosDup0Pane
        {
            get
            {
                if (null == fWindowsFormsHosDup0Pane)
                {
                    fWindowsFormsHosDup0Pane = new Pane("WindowsFormsHosDup0Pane", SyncScheduleSteGroup);
                    fWindowsFormsHosDup0Pane.UIMap.Scope = UIASeachScope.Children;
                    fWindowsFormsHosDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"198A4208-3F36-4e41-B168-4E62D5EC4D4B");
                    fWindowsFormsHosDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WindowsFormsHost");
                }

                return fWindowsFormsHosDup0Pane;
            }
        }

        /// <summary>
        /// Gets Reference to A24HourCheckBoxCheckBox
        /// </summary>
        public CheckBox A24HourCheckBoxCheckBox
        {
            get
            {
                if (null == fA24HourCheckBoxCheckBox)
                {
                    fA24HourCheckBoxCheckBox = new CheckBox("A24HourCheckBoxCheckBox", SyncScheduleSteGroup);
                    fA24HourCheckBoxCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fA24HourCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FE2BA56A-C03F-4A3D-8C14-2FB318C8B484");
                    fA24HourCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"24 Hour");
                    fA24HourCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                }

                return fA24HourCheckBoxCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to A24HourTextBlocText
        /// </summary>
        public Text A24HourTextBlocText
        {
            get
            {
                if (null == fA24HourTextBlocText)
                {
                    fA24HourTextBlocText = new Text("A24HourTextBlocText", A24HourCheckBoxCheckBox);
                    fA24HourTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fA24HourTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"24 Hour");
                    fA24HourTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fA24HourTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to OnlysyncMondayFCheckBox
        /// </summary>
        public CheckBox OnlysyncMondayFCheckBox
        {
            get
            {
                if (null == fOnlysyncMondayFCheckBox)
                {
                    fOnlysyncMondayFCheckBox = new CheckBox("OnlysyncMondayFCheckBox", SyncScheduleSteGroup);
                    fOnlysyncMondayFCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fOnlysyncMondayFCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"03f7a8b7-4768-490b-a21f-a01b9de28e15");
                    fOnlysyncMondayFCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Only sync Monday-Friday");
                    fOnlysyncMondayFCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                }

                return fOnlysyncMondayFCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to SundayCheckBox2CheckBox
        /// </summary>
        public CheckBox SundayCheckBox2CheckBox
        {
            get
            {
                if (null == fSundayCheckBox2CheckBox)
                {
                    fSundayCheckBox2CheckBox = new CheckBox("SundayCheckBox2CheckBox", SyncScheduleSteGroup);
                    fSundayCheckBox2CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fSundayCheckBox2CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"21015E67-271D-411A-B583-D32A3EA90A84");
                    fSundayCheckBox2CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sunday");
                    fSundayCheckBox2CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                }

                return fSundayCheckBox2CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to MondayCheckBoxCCheckBox
        /// </summary>
        public CheckBox MondayCheckBoxCCheckBox
        {
            get
            {
                if (null == fMondayCheckBoxCCheckBox)
                {
                    fMondayCheckBoxCCheckBox = new CheckBox("MondayCheckBoxCCheckBox", SyncScheduleSteGroup);
                    fMondayCheckBoxCCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fMondayCheckBoxCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CD525CFE-A786-466E-A2BE-7E74FF43F7D1");
                    fMondayCheckBoxCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Monday");
                    fMondayCheckBoxCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                }

                return fMondayCheckBoxCCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to TuesdayCheckBoxCheckBox
        /// </summary>
        public CheckBox TuesdayCheckBoxCheckBox
        {
            get
            {
                if (null == fTuesdayCheckBoxCheckBox)
                {
                    fTuesdayCheckBoxCheckBox = new CheckBox("TuesdayCheckBoxCheckBox", SyncScheduleSteGroup);
                    fTuesdayCheckBoxCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fTuesdayCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C4BCB1F5-10E3-4CFD-9931-4815038EC189");
                    fTuesdayCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Tuesday");
                    fTuesdayCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                }

                return fTuesdayCheckBoxCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to WednesdayCheckBCheckBox
        /// </summary>
        public CheckBox WednesdayCheckBCheckBox
        {
            get
            {
                if (null == fWednesdayCheckBCheckBox)
                {
                    fWednesdayCheckBCheckBox = new CheckBox("WednesdayCheckBCheckBox", SyncScheduleSteGroup);
                    fWednesdayCheckBCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fWednesdayCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"40923D30-4F6C-4459-9162-D8BCBAD792DF");
                    fWednesdayCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Wednesday");
                    fWednesdayCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                }

                return fWednesdayCheckBCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ThursdayCheckBoCheckBox
        /// </summary>
        public CheckBox ThursdayCheckBoCheckBox
        {
            get
            {
                if (null == fThursdayCheckBoCheckBox)
                {
                    fThursdayCheckBoCheckBox = new CheckBox("ThursdayCheckBoCheckBox", SyncScheduleSteGroup);
                    fThursdayCheckBoCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fThursdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4CE33CD9-3FCB-495D-A085-7B85D34BAE85");
                    fThursdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Thursday");
                    fThursdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                }

                return fThursdayCheckBoCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to FridayCheckBoxDCheckBox
        /// </summary>
        public CheckBox FridayCheckBoxDCheckBox
        {
            get
            {
                if (null == fFridayCheckBoxDCheckBox)
                {
                    fFridayCheckBoxDCheckBox = new CheckBox("FridayCheckBoxDCheckBox", SyncScheduleSteGroup);
                    fFridayCheckBoxDCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fFridayCheckBoxDCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DDE646C4-B289-483A-BF8C-7344D6E9324C");
                    fFridayCheckBoxDCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Friday");
                    fFridayCheckBoxDCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                }

                return fFridayCheckBoxDCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to SaturdayCheckBoCheckBox
        /// </summary>
        public CheckBox SaturdayCheckBoCheckBox
        {
            get
            {
                if (null == fSaturdayCheckBoCheckBox)
                {
                    fSaturdayCheckBoCheckBox = new CheckBox("SaturdayCheckBoCheckBox", SyncScheduleSteGroup);
                    fSaturdayCheckBoCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fSaturdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B73EA9F8-BACB-4E76-A2B9-15DEE3FF0C7F");
                    fSaturdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Saturday");
                    fSaturdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                }

                return fSaturdayCheckBoCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to LastDayoftheMonRadioButton
        /// </summary>
        public RadioButton LastDayoftheMonRadioButton
        {
            get
            {
                if (null == fLastDayoftheMonRadioButton)
                {
                    fLastDayoftheMonRadioButton = new RadioButton("LastDayoftheMonRadioButton", SyncScheduleSteGroup);
                    fLastDayoftheMonRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fLastDayoftheMonRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2DBEB691-CBFB-4DB7-BE7A-B5D774820296");
                    fLastDayoftheMonRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Last Day of the Month");
                    fLastDayoftheMonRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                }

                return fLastDayoftheMonRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to DayRadioButton3RadioButton
        /// </summary>
        public RadioButton DayRadioButton3RadioButton
        {
            get
            {
                if (null == fDayRadioButton3RadioButton)
                {
                    fDayRadioButton3RadioButton = new RadioButton("DayRadioButton3RadioButton", SyncScheduleSteGroup);
                    fDayRadioButton3RadioButton.UIMap.Scope = UIASeachScope.Children;
                    fDayRadioButton3RadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"392FC707-C93A-4607-A32D-0D08B25A4BEE");
                    fDayRadioButton3RadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Day");
                    fDayRadioButton3RadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                }

                return fDayRadioButton3RadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to WindowsFormsHosDup1Pane
        /// </summary>
        public Pane WindowsFormsHosDup1Pane
        {
            get
            {
                if (null == fWindowsFormsHosDup1Pane)
                {
                    fWindowsFormsHosDup1Pane = new Pane("WindowsFormsHosDup1Pane", SyncScheduleSteGroup);
                    fWindowsFormsHosDup1Pane.UIMap.Scope = UIASeachScope.Children;
                    fWindowsFormsHosDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1A95AA54-314C-4A5D-B34C-60863C3C700C");
                    fWindowsFormsHosDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WindowsFormsHost");
                }

                return fWindowsFormsHosDup1Pane;
            }
        }

        /// <summary>
        /// Gets Reference to LastReplicationDup0Text
        /// </summary>
        public Text LastReplicationDup0Text
        {
            get
            {
                if (null == fLastReplicationDup0Text)
                {
                    fLastReplicationDup0Text = new Text("LastReplicationDup0Text", SyncScheduleSteGroup);
                    fLastReplicationDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fLastReplicationDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Last Replication");
                    fLastReplicationDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fLastReplicationDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to LastReplicationDup1Text
        /// </summary>
        public Text LastReplicationDup1Text
        {
            get
            {
                if (null == fLastReplicationDup1Text)
                {
                    fLastReplicationDup1Text = new Text("LastReplicationDup1Text", LastReplicationDup0Text);
                    fLastReplicationDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fLastReplicationDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Last Replication");
                    fLastReplicationDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fLastReplicationDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxcc133df7Edit
        /// </summary>
        public Edit TextBoxcc133df7Edit
        {
            get
            {
                if (null == fTextBoxcc133df7Edit)
                {
                    fTextBoxcc133df7Edit = new Edit("TextBoxcc133df7Edit", SyncScheduleSteGroup);
                    fTextBoxcc133df7Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxcc133df7Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"cc133df7-b7fc-4b42-9b31-ea397127b095");
                    fTextBoxcc133df7Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxcc133df7Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup14Pane
        /// </summary>
        public Pane ScrollViewerPARDup14Pane
        {
            get
            {
                if (null == fScrollViewerPARDup14Pane)
                {
                    fScrollViewerPARDup14Pane = new Pane("ScrollViewerPARDup14Pane", TextBoxcc133df7Edit);
                    fScrollViewerPARDup14Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup14Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup14Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup14Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup14ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup14ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup14ScrollBar)
                {
                    fScrollBarVerticDup14ScrollBar = new ScrollBar("ScrollBarVerticDup14ScrollBar", ScrollViewerPARDup14Pane);
                    fScrollBarVerticDup14ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup14ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup14ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup14ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup14ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup14ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup14ScrollBar)
                {
                    fScrollBarHorizoDup14ScrollBar = new ScrollBar("ScrollBarHorizoDup14ScrollBar", ScrollViewerPARDup14Pane);
                    fScrollBarHorizoDup14ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup14ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup14ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup14ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to SyncNowButtonb7Button
        /// </summary>
        public Button SyncNowButtonb7Button
        {
            get
            {
                if (null == fSyncNowButtonb7Button)
                {
                    fSyncNowButtonb7Button = new Button("SyncNowButtonb7Button", SyncScheduleSteGroup);
                    fSyncNowButtonb7Button.UIMap.Scope = UIASeachScope.Children;
                    fSyncNowButtonb7Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b75e5b82-6ed8-4ebb-b777-4b9258b91890");
                    fSyncNowButtonb7Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Now");
                    fSyncNowButtonb7Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fSyncNowButtonb7Button;
            }
        }

        /// <summary>
        /// Gets Reference to SyncNowTextBlocText
        /// </summary>
        public Text SyncNowTextBlocText
        {
            get
            {
                if (null == fSyncNowTextBlocText)
                {
                    fSyncNowTextBlocText = new Text("SyncNowTextBlocText", SyncNowButtonb7Button);
                    fSyncNowTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fSyncNowTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Now");
                    fSyncNowTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSyncNowTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to ClearLDAPCacheBButton
        /// </summary>
        public Button ClearLDAPCacheBButton
        {
            get
            {
                if (null == fClearLDAPCacheBButton)
                {
                    fClearLDAPCacheBButton = new Button("ClearLDAPCacheBButton", LDAPReplicationGroup);
                    fClearLDAPCacheBButton.UIMap.Scope = UIASeachScope.Children;
                    fClearLDAPCacheBButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9E2814A0-D532-4b13-B05A-60EEFA520123");
                    fClearLDAPCacheBButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear LDAP Cache");
                    fClearLDAPCacheBButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fClearLDAPCacheBButton;
            }
        }

        /// <summary>
        /// Gets Reference to ClearLDAPCacheTText
        /// </summary>
        public Text ClearLDAPCacheTText
        {
            get
            {
                if (null == fClearLDAPCacheTText)
                {
                    fClearLDAPCacheTText = new Text("ClearLDAPCacheTText", ClearLDAPCacheBButton);
                    fClearLDAPCacheTText.UIMap.Scope = UIASeachScope.Children;
                    fClearLDAPCacheTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear LDAP Cache");
                    fClearLDAPCacheTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fClearLDAPCacheTText;
            }
        }

        /// <summary>
        /// Gets Reference to AddressBookManaGroup
        /// </summary>
        public Group AddressBookManaGroup
        {
            get
            {
                if (null == fAddressBookManaGroup)
                {
                    fAddressBookManaGroup = new Group("AddressBookManaGroup", ScrollViewerPane);
                    fAddressBookManaGroup.UIMap.Scope = UIASeachScope.Children;
                    fAddressBookManaGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                    fAddressBookManaGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fAddressBookManaGroup;
            }
        }

        /// <summary>
        /// Gets Reference to AddressBookManaDup0Text
        /// </summary>
        public Text AddressBookManaDup0Text
        {
            get
            {
                if (null == fAddressBookManaDup0Text)
                {
                    fAddressBookManaDup0Text = new Text("AddressBookManaDup0Text", AddressBookManaGroup);
                    fAddressBookManaDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAddressBookManaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                    fAddressBookManaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAddressBookManaDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to AddressBookManaButton
        /// </summary>
        public Button AddressBookManaButton
        {
            get
            {
                if (null == fAddressBookManaButton)
                {
                    fAddressBookManaButton = new Button("AddressBookManaButton", AddressBookManaGroup);
                    fAddressBookManaButton.UIMap.Scope = UIASeachScope.Children;
                    fAddressBookManaButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"174F3D3D-4D21-4cef-956A-CD3D7E08CF4B");
                    fAddressBookManaButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                    fAddressBookManaButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fAddressBookManaButton;
            }
        }

        /// <summary>
        /// Gets Reference to AddressBookManaDup1Text
        /// </summary>
        public Text AddressBookManaDup1Text
        {
            get
            {
                if (null == fAddressBookManaDup1Text)
                {
                    fAddressBookManaDup1Text = new Text("AddressBookManaDup1Text", AddressBookManaButton);
                    fAddressBookManaDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAddressBookManaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                    fAddressBookManaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAddressBookManaDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup15ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup15ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup15ScrollBar)
                {
                    fScrollBarVerticDup15ScrollBar = new ScrollBar("ScrollBarVerticDup15ScrollBar", ScrollViewerPane);
                    fScrollBarVerticDup15ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup15ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup15ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup15ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonLinDup0Button
        /// </summary>
        public Button RepeatButtonLinDup0Button
        {
            get
            {
                if (null == fRepeatButtonLinDup0Button)
                {
                    fRepeatButtonLinDup0Button = new Button("RepeatButtonLinDup0Button", ScrollBarVerticDup15ScrollBar);
                    fRepeatButtonLinDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonLinDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LineUp");
                    fRepeatButtonLinDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                }

                return fRepeatButtonLinDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonPagDup0Button
        /// </summary>
        public Button RepeatButtonPagDup0Button
        {
            get
            {
                if (null == fRepeatButtonPagDup0Button)
                {
                    fRepeatButtonPagDup0Button = new Button("RepeatButtonPagDup0Button", ScrollBarVerticDup15ScrollBar);
                    fRepeatButtonPagDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageUp");
                    fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                }

                return fRepeatButtonPagDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonPagDup1Button
        /// </summary>
        public Button RepeatButtonPagDup1Button
        {
            get
            {
                if (null == fRepeatButtonPagDup1Button)
                {
                    fRepeatButtonPagDup1Button = new Button("RepeatButtonPagDup1Button", ScrollBarVerticDup15ScrollBar);
                    fRepeatButtonPagDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageDown");
                    fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                }

                return fRepeatButtonPagDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbThumb
        /// </summary>
        public Thumb ThumbThumb
        {
            get
            {
                if (null == fThumbThumb)
                {
                    fThumbThumb = new Thumb("ThumbThumb", ScrollBarVerticDup15ScrollBar);
                    fThumbThumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbThumb;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonLinDup1Button
        /// </summary>
        public Button RepeatButtonLinDup1Button
        {
            get
            {
                if (null == fRepeatButtonLinDup1Button)
                {
                    fRepeatButtonLinDup1Button = new Button("RepeatButtonLinDup1Button", ScrollBarVerticDup15ScrollBar);
                    fRepeatButtonLinDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonLinDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LineDown");
                    fRepeatButtonLinDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                }

                return fRepeatButtonLinDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup15ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup15ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup15ScrollBar)
                {
                    fScrollBarHorizoDup15ScrollBar = new ScrollBar("ScrollBarHorizoDup15ScrollBar", ScrollViewerPane);
                    fScrollBarHorizoDup15ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup15ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup15ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup15ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceConfiguraTabItem
        /// </summary>
        public TabItem DeviceConfiguraTabItem
        {
            get
            {
                if (null == fDeviceConfiguraTabItem)
                {
                    fDeviceConfiguraTabItem = new TabItem("DeviceConfiguraTabItem", TabControlec0fdTab);
                    fDeviceConfiguraTabItem.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6DF1E016-517F-40e4-A63E-CD48D560192F");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fDeviceConfiguraTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceConfiguraText
        /// </summary>
        public Text DeviceConfiguraText
        {
            get
            {
                if (null == fDeviceConfiguraText)
                {
                    fDeviceConfiguraText = new Text("DeviceConfiguraText", DeviceConfiguraTabItem);
                    fDeviceConfiguraText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fDeviceConfiguraText;
            }
        }

        /// <summary>
        /// Gets Reference to TemplateConfiguTabItem
        /// </summary>
        public TabItem TemplateConfiguTabItem
        {
            get
            {
                if (null == fTemplateConfiguTabItem)
                {
                    fTemplateConfiguTabItem = new TabItem("TemplateConfiguTabItem", TabControlec0fdTab);
                    fTemplateConfiguTabItem.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AC05F9B9-A7D8-4b34-80E7-910FB9870D47");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fTemplateConfiguTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to TemplateConfiguText
        /// </summary>
        public Text TemplateConfiguText
        {
            get
            {
                if (null == fTemplateConfiguText)
                {
                    fTemplateConfiguText = new Text("TemplateConfiguText", TemplateConfiguTabItem);
                    fTemplateConfiguText.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTemplateConfiguText;
            }
        }

        /// <summary>
        /// Gets Reference to LogTabItem9b4f3TabItem
        /// </summary>
        public TabItem LogTabItem9b4f3TabItem
        {
            get
            {
                if (null == fLogTabItem9b4f3TabItem)
                {
                    fLogTabItem9b4f3TabItem = new TabItem("LogTabItem9b4f3TabItem", TabControlec0fdTab);
                    fLogTabItem9b4f3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9b4f34bb-d75a-4080-9be3-1c50ec31c5b6");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fLogTabItem9b4f3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to LogTextBlockText
        /// </summary>
        public Text LogTextBlockText
        {
            get
            {
                if (null == fLogTextBlockText)
                {
                    fLogTextBlockText = new Text("LogTextBlockText", LogTabItem9b4f3TabItem);
                    fLogTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                    fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fLogTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup7TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup7TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup7TabItem)
                {
                    fSystemWindowsCoDup7TabItem = new TabItem("SystemWindowsCoDup7TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup7TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3AC8D4A8-3B06-421A-911B-E8CA248A9ED4");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup7TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SecurityTextmSeText
        /// </summary>
        public Text SecurityTextmSeText
        {
            get
            {
                if (null == fSecurityTextmSeText)
                {
                    fSecurityTextmSeText = new Text("SecurityTextmSeText", SystemWindowsCoDup7TabItem);
                    fSecurityTextmSeText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mSecurityTabLabel");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fSecurityTextmSeText;
            }
        }

        /// <summary>
        /// Gets Reference to SecurityTextBloText
        /// </summary>
        public Text SecurityTextBloText
        {
            get
            {
                if (null == fSecurityTextBloText)
                {
                    fSecurityTextBloText = new Text("SecurityTextBloText", SecurityTextmSeText);
                    fSecurityTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSecurityTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to Text8A7A84DB894Text
        /// </summary>
        public Text Text8A7A84DB894Text
        {
            get
            {
                if (null == fText8A7A84DB894Text)
                {
                    fText8A7A84DB894Text = new Text("Text8A7A84DB894Text", SystemWindowsCoDup7TabItem);
                    fText8A7A84DB894Text.UIMap.Scope = UIASeachScope.Children;
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8A7A84DB-8945-40E1-A0F9-C40DDD129739");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText8A7A84DB894Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text16F78FB18FFText
        /// </summary>
        public Text Text16F78FB18FFText
        {
            get
            {
                if (null == fText16F78FB18FFText)
                {
                    fText16F78FB18FFText = new Text("Text16F78FB18FFText", SystemWindowsCoDup7TabItem);
                    fText16F78FB18FFText.UIMap.Scope = UIASeachScope.Children;
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16F78FB1-8FF9-4B0D-8251-FB09F520EA73");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText16F78FB18FFText;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup8TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup8TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup8TabItem)
                {
                    fSystemWindowsCoDup8TabItem = new TabItem("SystemWindowsCoDup8TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup8TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1678607C-20BF-4137-8238-C9D46EA8FF70");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup8TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AnalyticsTextmAText
        /// </summary>
        public Text AnalyticsTextmAText
        {
            get
            {
                if (null == fAnalyticsTextmAText)
                {
                    fAnalyticsTextmAText = new Text("AnalyticsTextmAText", SystemWindowsCoDup8TabItem);
                    fAnalyticsTextmAText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAnalyticsTabLabel");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fAnalyticsTextmAText;
            }
        }

        /// <summary>
        /// Gets Reference to AnalyticsTextBlText
        /// </summary>
        public Text AnalyticsTextBlText
        {
            get
            {
                if (null == fAnalyticsTextBlText)
                {
                    fAnalyticsTextBlText = new Text("AnalyticsTextBlText", AnalyticsTextmAText);
                    fAnalyticsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAnalyticsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to AboutTabItemf45TabItem
        /// </summary>
        public TabItem AboutTabItemf45TabItem
        {
            get
            {
                if (null == fAboutTabItemf45TabItem)
                {
                    fAboutTabItemf45TabItem = new TabItem("AboutTabItemf45TabItem", TabControlec0fdTab);
                    fAboutTabItemf45TabItem.UIMap.Scope = UIASeachScope.Children;
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f45c22d9-f77a-481a-95bc-09cdff03e131");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fAboutTabItemf45TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AboutTextBlockText
        /// </summary>
        public Text AboutTextBlockText
        {
            get
            {
                if (null == fAboutTextBlockText)
                {
                    fAboutTextBlockText = new Text("AboutTextBlockText", AboutTabItemf45TabItem);
                    fAboutTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAboutTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to OKButtonAE4B0C6Button
        /// </summary>
        public Button OKButtonAE4B0C6Button
        {
            get
            {
                if (null == fOKButtonAE4B0C6Button)
                {
                    fOKButtonAE4B0C6Button = new Button("OKButtonAE4B0C6Button", HPDigitalSendinDup1Window);
                    fOKButtonAE4B0C6Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButtonAE4B0C6Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKButtonAE4B0C6Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButtonAE4B0C6Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AE4B0C61-2DEE-4974-B517-4A1388A3F4CC");
                }

                return fOKButtonAE4B0C6Button;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPEntriesWindWindow
        /// </summary>
        public Window LDAPEntriesWindWindow
        {
            get
            {
                if (null == fLDAPEntriesWindWindow)
                {
                    fLDAPEntriesWindWindow = new Window("LDAPEntriesWindWindow", HPDigitalSendinWindow);
                    fLDAPEntriesWindWindow.UIMap.Scope = UIASeachScope.Children;
                    fLDAPEntriesWindWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fLDAPEntriesWindWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Entries");
                    fLDAPEntriesWindWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"BFFC8FFD-8CA1-4c8d-97F1-92D023A9B240");
                }

                return fLDAPEntriesWindWindow;
            }
        }

        /// <summary>
        /// Gets Reference to OKButton4F49CDFButton
        /// </summary>
        public Button OKButton4F49CDFButton
        {
            get
            {
                if (null == fOKButton4F49CDFButton)
                {
                    fOKButton4F49CDFButton = new Button("OKButton4F49CDFButton", LDAPEntriesWindWindow);
                    fOKButton4F49CDFButton.UIMap.Scope = UIASeachScope.Children;
                    fOKButton4F49CDFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButton4F49CDFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKButton4F49CDFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4F49CDF1-4515-4802-98F5-1C49F78B2D83");
                }

                return fOKButton4F49CDFButton;
            }
        }

        /// <summary>
        /// Gets Reference to ExchangeContactWindow
        /// </summary>
        public Window ExchangeContactWindow
        {
            get
            {
                if (null == fExchangeContactWindow)
                {
                    fExchangeContactWindow = new Window("ExchangeContactWindow", HPDigitalSendinWindow);
                    fExchangeContactWindow.UIMap.Scope = UIASeachScope.Children;
                    fExchangeContactWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Exchange Contact Entries");
                    fExchangeContactWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"BFFC8FFD-8CA1-4c8d-97F1-92D023A9B240");
                    fExchangeContactWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                }

                return fExchangeContactWindow;
            }
        }

        /// <summary>
        /// Gets Reference to OKButton4F49CDFButton
        /// </summary>
        public Button OkButtonPersonalContactButtonButton
        {
            get
            {
                if (null == fOKButton4F49CDFButton)
                {
                    fOKButton4F49CDFButton = new Button("OkButtonPersonalContactButtonButton", ExchangeContactWindow);
                    fOKButton4F49CDFButton.UIMap.Scope = UIASeachScope.Children;
                    fOKButton4F49CDFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKButton4F49CDFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4F49CDF1-4515-4802-98F5-1C49F78B2D83");
                    fOKButton4F49CDFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fOKButton4F49CDFButton;
            }
        }



        /// <summary>
        /// Gets Reference to TheoperationfaiPane
        /// </summary>
        public Pane TheoperationfaiPane
        {
            get
            {
                if (null == fTheoperationfaiPane)
                {
                    fTheoperationfaiPane = new Pane("TheoperationfaiPane", HPDigitalSendinDup1Window);
                    fTheoperationfaiPane.UIMap.Scope = UIASeachScope.Children;
                    fTheoperationfaiPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"The operation failed. Please verify your configuration and try again. (LDAP error ServerDown occurred.)");
                    fTheoperationfaiPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fTheoperationfaiPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mMessageScrollViewer");
                }

                return fTheoperationfaiPane;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox85726F33Edit
        /// </summary>
        public Edit TextBox85726F33Edit
        {
            get
            {
                if (null == fTextBox85726F33Edit)
                {
                    fTextBox85726F33Edit = new Edit("TextBox85726F33Edit", TheoperationfaiPane);
                    fTextBox85726F33Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox85726F33Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"85726F33-6F14-468f-BE13-FE6BFDDBC9C4");
                    fTextBox85726F33Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox85726F33Edit;
            }
        }
    }
}

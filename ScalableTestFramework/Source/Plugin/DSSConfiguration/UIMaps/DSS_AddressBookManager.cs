//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------

namespace HP.ScalableTest.Plugin.DSSConfiguration.UIMaps
{
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class DSS_AddressBookManager
    {
        /// <summary>
        /// Backing field for HPDigitalSendinWindow property
        /// </summary>
        private Window fHPDigitalSendinWindow;

        /// <summary>
        /// Backing field for AddressBookManaWindow property
        /// </summary>
        private Window fAddressBookManaWindow;

        /// <summary>
        /// Backing field for AddressBookManaTitleBar property
        /// </summary>
        private TitleBar fAddressBookManaTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyDup0MenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyDup0MenuBar;

        /// <summary>
        /// Backing field for SystemItem1Dup0MenuItem property
        /// </summary>
        private MenuItem fSystemItem1Dup0MenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizDup0Button property
        /// </summary>
        private Button fMinimizeMinimizDup0Button;

        /// <summary>
        /// Backing field for MaximizeMaximizDup0Button property
        /// </summary>
        private Button fMaximizeMaximizDup0Button;

        /// <summary>
        /// Backing field for CloseCloseDup0Button property
        /// </summary>
        private Button fCloseCloseDup0Button;

        /// <summary>
        /// Backing field for DSSAddressBooksDup0Text property
        /// </summary>
        private Text fDSSAddressBooksDup0Text;

        /// <summary>
        /// Backing field for DSSAddressBooksDup1Text property
        /// </summary>
        private Text fDSSAddressBooksDup1Text;

        /// <summary>
        /// Backing field for TreeView87DDA4CTree property
        /// </summary>
        private Tree fTreeView87DDA4CTree;

        /// <summary>
        /// Backing field for PublicTreeViewITreeItem property
        /// </summary>
        private TreeItem fPublicTreeViewITreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup0Button property
        /// </summary>
        private Button fButtonExpanderDup0Button;

        /// <summary>
        /// Backing field for PublicTextBlockText property
        /// </summary>
        private Text fPublicTextBlockText;

        /// <summary>
        /// Backing field for PrivateAddressBTreeItem property
        /// </summary>
        private TreeItem fPrivateAddressBTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup1Button property
        /// </summary>
        private Button fButtonExpanderDup1Button;

        /// <summary>
        /// Backing field for PrivateAddressBText property
        /// </summary>
        private Text fPrivateAddressBText;

        /// <summary>
        /// Backing field for ExportButtonA1CButton property
        /// </summary>
        private Button fExportButtonA1CButton;

        /// <summary>
        /// Backing field for ExportTextBlockText property
        /// </summary>
        private Text fExportTextBlockText;

        /// <summary>
        /// Backing field for DeleteButton1B6Button property
        /// </summary>
        private Button fDeleteButton1B6Button;

        /// <summary>
        /// Backing field for DeleteTextBlockDup0Text property
        /// </summary>
        private Text fDeleteTextBlockDup0Text;

        /// <summary>
        /// Backing field for ImportAddressBoButton property
        /// </summary>
        private Button fImportAddressBoButton;

        /// <summary>
        /// Backing field for ImportAddressBoText property
        /// </summary>
        private Text fImportAddressBoText;

        /// <summary>
        /// Backing field for GridSplitterThumb property
        /// </summary>
        private Thumb fGridSplitterThumb;

        /// <summary>
        /// Backing field for AddressBookContDup0Text property
        /// </summary>
        private Text fAddressBookContDup0Text;

        /// <summary>
        /// Backing field for AddressBookContDup1Text property
        /// </summary>
        private Text fAddressBookContDup1Text;

        /// <summary>
        /// Backing field for RefreshButton81Button property
        /// </summary>
        private Button fRefreshButton81Button;

        /// <summary>
        /// Backing field for RefreshTextBlocText property
        /// </summary>
        private Text fRefreshTextBlocText;

        /// <summary>
        /// Backing field for SearchForText property
        /// </summary>
        private Text fSearchForText;

        /// <summary>
        /// Backing field for SearchForTextBlText property
        /// </summary>
        private Text fSearchForTextBlText;

        /// <summary>
        /// Backing field for ComboBoxA5F891AComboBox property
        /// </summary>
        private ComboBox fComboBoxA5F891AComboBox;

        /// <summary>
        /// Backing field for TextBoxA7B3B6CFEdit property
        /// </summary>
        private Edit fTextBoxA7B3B6CFEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup0Pane property
        /// </summary>
        private Pane fScrollViewerPARDup0Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup0ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup0ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup0ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup0ScrollBar;

        /// <summary>
        /// Backing field for FilterButtonEB0Button property
        /// </summary>
        private Button fFilterButtonEB0Button;

        /// <summary>
        /// Backing field for FilterTextBlockText property
        /// </summary>
        private Text fFilterTextBlockText;

        /// <summary>
        /// Backing field for ClearButtonEC9FButton property
        /// </summary>
        private Button fClearButtonEC9FButton;

        /// <summary>
        /// Backing field for ClearTextBlockText property
        /// </summary>
        private Text fClearTextBlockText;

        /// <summary>
        /// Backing field for ListViewbb668d9DataGrid property
        /// </summary>
        private DataGrid fListViewbb668d9DataGrid;

        /// <summary>
        /// Backing field for GridViewHeaderRHeader property
        /// </summary>
        private Header fGridViewHeaderRHeader;

        /// <summary>
        /// Backing field for ContactNameGridHeaderItem property
        /// </summary>
        private HeaderItem fContactNameGridHeaderItem;

        /// <summary>
        /// Backing field for ContactNameTextText property
        /// </summary>
        private Text fContactNameTextText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup0Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup0Thumb;

        /// <summary>
        /// Backing field for EmailAddressGriHeaderItem property
        /// </summary>
        private HeaderItem fEmailAddressGriHeaderItem;

        /// <summary>
        /// Backing field for EmailAddressTexText property
        /// </summary>
        private Text fEmailAddressTexText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup1Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup1Thumb;

        /// <summary>
        /// Backing field for FaxNumberGridViHeaderItem property
        /// </summary>
        private HeaderItem fFaxNumberGridViHeaderItem;

        /// <summary>
        /// Backing field for FaxNumberTextBlText property
        /// </summary>
        private Text fFaxNumberTextBlText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup2Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup2Thumb;

        /// <summary>
        /// Backing field for LDAPcontactsareText property
        /// </summary>
        private Text fLDAPcontactsareText;

        /// <summary>
        /// Backing field for DeleteButton41BButton property
        /// </summary>
        private Button fDeleteButton41BButton;

        /// <summary>
        /// Backing field for DeleteTextBlockDup1Text property
        /// </summary>
        private Text fDeleteTextBlockDup1Text;

        /// <summary>
        /// Backing field for EditButton548EBButton property
        /// </summary>
        private Button fEditButton548EBButton;

        /// <summary>
        /// Backing field for EditTextBlockText property
        /// </summary>
        private Text fEditTextBlockText;

        /// <summary>
        /// Backing field for AddGroupButton7Button property
        /// </summary>
        private Button fAddGroupButton7Button;

        /// <summary>
        /// Backing field for AddGroupTextBloText property
        /// </summary>
        private Text fAddGroupTextBloText;

        /// <summary>
        /// Backing field for AddContactButtoButton property
        /// </summary>
        private Button fAddContactButtoButton;

        /// <summary>
        /// Backing field for AddContactTextBText property
        /// </summary>
        private Text fAddContactTextBText;

        /// <summary>
        /// Backing field for OKButtonFA1AC0AButton property
        /// </summary>
        private Button fOKButtonFA1AC0AButton;

        /// <summary>
        /// Backing field for OKTextBlockDup0Text property
        /// </summary>
        private Text fOKTextBlockDup0Text;

        /// <summary>
        /// Backing field for HPDigitalSendinTitleBar property
        /// </summary>
        private TitleBar fHPDigitalSendinTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyDup1MenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyDup1MenuBar;

        /// <summary>
        /// Backing field for SystemItem1Dup1MenuItem property
        /// </summary>
        private MenuItem fSystemItem1Dup1MenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizDup1Button property
        /// </summary>
        private Button fMinimizeMinimizDup1Button;

        /// <summary>
        /// Backing field for MaximizeMaximizDup1Button property
        /// </summary>
        private Button fMaximizeMaximizDup1Button;

        /// <summary>
        /// Backing field for CloseCloseDup1Button property
        /// </summary>
        private Button fCloseCloseDup1Button;

        /// <summary>
        /// Backing field for HelpButtonCB8CFButton property
        /// </summary>
        private Button fHelpButtonCB8CFButton;

        /// <summary>
        /// Backing field for HelpTextBlockText property
        /// </summary>
        private Text fHelpTextBlockText;

        /// <summary>
        /// Backing field for ApplyButton61E2Button property
        /// </summary>
        private Button fApplyButton61E2Button;

        /// <summary>
        /// Backing field for ApplyTextBlockText property
        /// </summary>
        private Text fApplyTextBlockText;

        /// <summary>
        /// Backing field for CancelButton65CButton property
        /// </summary>
        private Button fCancelButton65CButton;

        /// <summary>
        /// Backing field for CancelTextBlockText property
        /// </summary>
        private Text fCancelTextBlockText;

        /// <summary>
        /// Backing field for OKButtonCC2EF49Button property
        /// </summary>
        private Button fOKButtonCC2EF49Button;

        /// <summary>
        /// Backing field for OKTextBlockDup1Text property
        /// </summary>
        private Text fOKTextBlockDup1Text;

        /// <summary>
        /// Backing field for TabControlec0fdTab property
        /// </summary>
        private Tab fTabControlec0fdTab;

        /// <summary>
        /// Backing field for SystemWindowsCoDup0TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup0TabItem;

        /// <summary>
        /// Backing field for GeneralTextmGenText property
        /// </summary>
        private Text fGeneralTextmGenText;

        /// <summary>
        /// Backing field for GeneralTextBlocText property
        /// </summary>
        private Text fGeneralTextBlocText;

        /// <summary>
        /// Backing field for Text933345b04e3Text property
        /// </summary>
        private Text fText933345b04e3Text;

        /// <summary>
        /// Backing field for Text786caf67344Text property
        /// </summary>
        private Text fText786caf67344Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup1TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup1TabItem;

        /// <summary>
        /// Backing field for AuthenticationTDup0Text property
        /// </summary>
        private Text fAuthenticationTDup0Text;

        /// <summary>
        /// Backing field for AuthenticationTDup1Text property
        /// </summary>
        private Text fAuthenticationTDup1Text;

        /// <summary>
        /// Backing field for Text31EC91730B9Text property
        /// </summary>
        private Text fText31EC91730B9Text;

        /// <summary>
        /// Backing field for TextA479C271445Text property
        /// </summary>
        private Text fTextA479C271445Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup2TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup2TabItem;

        /// <summary>
        /// Backing field for EmailTextmEmailText property
        /// </summary>
        private Text fEmailTextmEmailText;

        /// <summary>
        /// Backing field for EmailTextBlockText property
        /// </summary>
        private Text fEmailTextBlockText;

        /// <summary>
        /// Backing field for Text32de714a8bdText property
        /// </summary>
        private Text fText32de714a8bdText;

        /// <summary>
        /// Backing field for Text3b2a8761f4fText property
        /// </summary>
        private Text fText3b2a8761f4fText;

        /// <summary>
        /// Backing field for TextBlockText property
        /// </summary>
        private Text fTextBlockText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup3TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup3TabItem;

        /// <summary>
        /// Backing field for FaxTextmFaxTabLText property
        /// </summary>
        private Text fFaxTextmFaxTabLText;

        /// <summary>
        /// Backing field for FaxTextBlockText property
        /// </summary>
        private Text fFaxTextBlockText;

        /// <summary>
        /// Backing field for TextD1ED4F16F38Text property
        /// </summary>
        private Text fTextD1ED4F16F38Text;

        /// <summary>
        /// Backing field for Text7DDE04FD251Text property
        /// </summary>
        private Text fText7DDE04FD251Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup4TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup4TabItem;

        /// <summary>
        /// Backing field for SendtoFolderTexDup0Text property
        /// </summary>
        private Text fSendtoFolderTexDup0Text;

        /// <summary>
        /// Backing field for SendtoFolderTexDup1Text property
        /// </summary>
        private Text fSendtoFolderTexDup1Text;

        /// <summary>
        /// Backing field for Text7a57f43ecb1Text property
        /// </summary>
        private Text fText7a57f43ecb1Text;

        /// <summary>
        /// Backing field for Text654b650dd19Text property
        /// </summary>
        private Text fText654b650dd19Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup5TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup5TabItem;

        /// <summary>
        /// Backing field for WorkflowsTextmWText property
        /// </summary>
        private Text fWorkflowsTextmWText;

        /// <summary>
        /// Backing field for WorkflowsTextBlText property
        /// </summary>
        private Text fWorkflowsTextBlText;

        /// <summary>
        /// Backing field for Text22D9C34E84CText property
        /// </summary>
        private Text fText22D9C34E84CText;

        /// <summary>
        /// Backing field for TextC8D15BD39C8Text property
        /// </summary>
        private Text fTextC8D15BD39C8Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup6TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup6TabItem;

        /// <summary>
        /// Backing field for AddressingTextmText property
        /// </summary>
        private Text fAddressingTextmText;

        /// <summary>
        /// Backing field for AddressingTextBText property
        /// </summary>
        private Text fAddressingTextBText;

        /// <summary>
        /// Backing field for Text47EB5CBA4D1Text property
        /// </summary>
        private Text fText47EB5CBA4D1Text;

        /// <summary>
        /// Backing field for Text0757E148179Text property
        /// </summary>
        private Text fText0757E148179Text;

        /// <summary>
        /// Backing field for ScrollViewerPane property
        /// </summary>
        private Pane fScrollViewerPane;

        /// <summary>
        /// Backing field for AddressingNetwoCustom property
        /// </summary>
        private Custom fAddressingNetwoCustom;

        /// <summary>
        /// Backing field for ErrorConflictUsCustom property
        /// </summary>
        private Custom fErrorConflictUsCustom;

        /// <summary>
        /// Backing field for SearchMethodGroGroup property
        /// </summary>
        private Group fSearchMethodGroGroup;

        /// <summary>
        /// Backing field for SearchMethodTexText property
        /// </summary>
        private Text fSearchMethodTexText;

        /// <summary>
        /// Backing field for QuickSearchFindRadioButton property
        /// </summary>
        private RadioButton fQuickSearchFindRadioButton;

        /// <summary>
        /// Backing field for QuickSearchFindText property
        /// </summary>
        private Text fQuickSearchFindText;

        /// <summary>
        /// Backing field for DetailedSearchFRadioButton property
        /// </summary>
        private RadioButton fDetailedSearchFRadioButton;

        /// <summary>
        /// Backing field for DetailedSearchFText property
        /// </summary>
        private Text fDetailedSearchFText;

        /// <summary>
        /// Backing field for PersonalContactGroup property
        /// </summary>
        private Group fPersonalContactGroup;

        /// <summary>
        /// Backing field for PersonalContactText property
        /// </summary>
        private Text fPersonalContactText;

        /// <summary>
        /// Backing field for ThepersonalcontText property
        /// </summary>
        private Text fThepersonalcontText;

        /// <summary>
        /// Backing field for EnablePersonalCCheckBox property
        /// </summary>
        private CheckBox fEnablePersonalCCheckBox;

        /// <summary>
        /// Backing field for EnablePersonalCText property
        /// </summary>
        private Text fEnablePersonalCText;

        /// <summary>
        /// Backing field for TestExchangeSerGroup property
        /// </summary>
        private Group fTestExchangeSerGroup;

        /// <summary>
        /// Backing field for TestExchangeSerText property
        /// </summary>
        private Text fTestExchangeSerText;

        /// <summary>
        /// Backing field for WindowsDomainDup0Text property
        /// </summary>
        private Text fWindowsDomainDup0Text;

        /// <summary>
        /// Backing field for WindowsDomainTeText property
        /// </summary>
        private Text fWindowsDomainTeText;

        /// <summary>
        /// Backing field for TextBox0857B9D0Edit property
        /// </summary>
        private Edit fTextBox0857B9D0Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup1Pane property
        /// </summary>
        private Pane fScrollViewerPARDup1Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup1ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup1ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup1ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup1ScrollBar;

        /// <summary>
        /// Backing field for UsernameDup0Text property
        /// </summary>
        private Text fUsernameDup0Text;

        /// <summary>
        /// Backing field for UsernameTextBloDup0Text property
        /// </summary>
        private Text fUsernameTextBloDup0Text;

        /// <summary>
        /// Backing field for TextBox9B0DA4ABEdit property
        /// </summary>
        private Edit fTextBox9B0DA4ABEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup2Pane property
        /// </summary>
        private Pane fScrollViewerPARDup2Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup2ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup2ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup2ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup2ScrollBar;

        /// <summary>
        /// Backing field for PasswordDup0Text property
        /// </summary>
        private Text fPasswordDup0Text;

        /// <summary>
        /// Backing field for PasswordTextBloDup0Text property
        /// </summary>
        private Text fPasswordTextBloDup0Text;

        /// <summary>
        /// Backing field for PasswordBox6B3CEdit property
        /// </summary>
        private Edit fPasswordBox6B3CEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup3Pane property
        /// </summary>
        private Pane fScrollViewerPARDup3Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup3ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup3ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup3ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup3ScrollBar;

        /// <summary>
        /// Backing field for TestText property
        /// </summary>
        private Text fTestText;

        /// <summary>
        /// Backing field for TestTextBlockDup0Text property
        /// </summary>
        private Text fTestTextBlockDup0Text;

        /// <summary>
        /// Backing field for TextBoxDE0C2350Edit property
        /// </summary>
        private Edit fTextBoxDE0C2350Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup4Pane property
        /// </summary>
        private Pane fScrollViewerPARDup4Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup4ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup4ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup4ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup4ScrollBar;

        /// <summary>
        /// Backing field for TestButtonA90BEButton property
        /// </summary>
        private Button fTestButtonA90BEButton;

        /// <summary>
        /// Backing field for TestTextBlockDup1Text property
        /// </summary>
        private Text fTestTextBlockDup1Text;

        /// <summary>
        /// Backing field for LDAPReplicationGroup property
        /// </summary>
        private Group fLDAPReplicationGroup;

        /// <summary>
        /// Backing field for LDAPReplicationText property
        /// </summary>
        private Text fLDAPReplicationText;

        /// <summary>
        /// Backing field for EnableNetworkCoCheckBox property
        /// </summary>
        private CheckBox fEnableNetworkCoCheckBox;

        /// <summary>
        /// Backing field for EnableNetworkCoText property
        /// </summary>
        private Text fEnableNetworkCoText;

        /// <summary>
        /// Backing field for ExpanderFD3555EGroup property
        /// </summary>
        private Group fExpanderFD3555EGroup;

        /// <summary>
        /// Backing field for ButtonHeaderSitDup0Button property
        /// </summary>
        private Button fButtonHeaderSitDup0Button;

        /// <summary>
        /// Backing field for NetworkDirectorGroup property
        /// </summary>
        private Group fNetworkDirectorGroup;

        /// <summary>
        /// Backing field for NetworkDirectorText property
        /// </summary>
        private Text fNetworkDirectorText;

        /// <summary>
        /// Backing field for LDAPServerAddreDup0Text property
        /// </summary>
        private Text fLDAPServerAddreDup0Text;

        /// <summary>
        /// Backing field for LDAPServerAddreDup1Text property
        /// </summary>
        private Text fLDAPServerAddreDup1Text;

        /// <summary>
        /// Backing field for TextBox858933a3Edit property
        /// </summary>
        private Edit fTextBox858933a3Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup5Pane property
        /// </summary>
        private Pane fScrollViewerPARDup5Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup5ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup5ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup5ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup5ScrollBar;

        /// <summary>
        /// Backing field for AutoFindButton3Button property
        /// </summary>
        private Button fAutoFindButton3Button;

        /// <summary>
        /// Backing field for AutoFindTextBloText property
        /// </summary>
        private Text fAutoFindTextBloText;

        /// <summary>
        /// Backing field for HostnameorIPaddDup0Text property
        /// </summary>
        private Text fHostnameorIPaddDup0Text;

        /// <summary>
        /// Backing field for HostnameorIPaddDup1Text property
        /// </summary>
        private Text fHostnameorIPaddDup1Text;

        /// <summary>
        /// Backing field for PortText property
        /// </summary>
        private Text fPortText;

        /// <summary>
        /// Backing field for PortTextBlockText property
        /// </summary>
        private Text fPortTextBlockText;

        /// <summary>
        /// Backing field for UseasecureconneCheckBox property
        /// </summary>
        private CheckBox fUseasecureconneCheckBox;

        /// <summary>
        /// Backing field for UseasecureconneText property
        /// </summary>
        private Text fUseasecureconneText;

        /// <summary>
        /// Backing field for TextBox79f22c3aEdit property
        /// </summary>
        private Edit fTextBox79f22c3aEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup6Pane property
        /// </summary>
        private Pane fScrollViewerPARDup6Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup6ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup6ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup6ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup6ScrollBar;

        /// <summary>
        /// Backing field for Port636isthedefDup0Text property
        /// </summary>
        private Text fPort636isthedefDup0Text;

        /// <summary>
        /// Backing field for Port636isthedefDup1Text property
        /// </summary>
        private Text fPort636isthedefDup1Text;

        /// <summary>
        /// Backing field for ExpanderDD1518FGroup property
        /// </summary>
        private Group fExpanderDD1518FGroup;

        /// <summary>
        /// Backing field for ButtonHeaderSitDup1Button property
        /// </summary>
        private Button fButtonHeaderSitDup1Button;

        /// <summary>
        /// Backing field for ServerAuthenticGroup property
        /// </summary>
        private Group fServerAuthenticGroup;

        /// <summary>
        /// Backing field for ServerAuthenticText property
        /// </summary>
        private Text fServerAuthenticText;

        /// <summary>
        /// Backing field for ServerdoesnotreRadioButton property
        /// </summary>
        private RadioButton fServerdoesnotreRadioButton;

        /// <summary>
        /// Backing field for ServerdoesnotreText property
        /// </summary>
        private Text fServerdoesnotreText;

        /// <summary>
        /// Backing field for ServerrequiresaRadioButton property
        /// </summary>
        private RadioButton fServerrequiresaRadioButton;

        /// <summary>
        /// Backing field for ServerrequiresaText property
        /// </summary>
        private Text fServerrequiresaText;

        /// <summary>
        /// Backing field for ComboBox5cd52d1ComboBox property
        /// </summary>
        private ComboBox fComboBox5cd52d1ComboBox;

        /// <summary>
        /// Backing field for WindowsorLDAPsiText property
        /// </summary>
        private Text fWindowsorLDAPsiText;

        /// <summary>
        /// Backing field for UsernameDup1Text property
        /// </summary>
        private Text fUsernameDup1Text;

        /// <summary>
        /// Backing field for UsernameTextBloDup1Text property
        /// </summary>
        private Text fUsernameTextBloDup1Text;

        /// <summary>
        /// Backing field for TextBoxb54cac9eEdit property
        /// </summary>
        private Edit fTextBoxb54cac9eEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup7Pane property
        /// </summary>
        private Pane fScrollViewerPARDup7Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup7ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup7ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup7ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup7ScrollBar;

        /// <summary>
        /// Backing field for PasswordDup1Text property
        /// </summary>
        private Text fPasswordDup1Text;

        /// <summary>
        /// Backing field for PasswordTextBloDup1Text property
        /// </summary>
        private Text fPasswordTextBloDup1Text;

        /// <summary>
        /// Backing field for PasswordBox8ed9Edit property
        /// </summary>
        private Edit fPasswordBox8ed9Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup8Pane property
        /// </summary>
        private Pane fScrollViewerPARDup8Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup8ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup8ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup8ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup8ScrollBar;

        /// <summary>
        /// Backing field for WindowsDomainDup1Text property
        /// </summary>
        private Text fWindowsDomainDup1Text;

        /// <summary>
        /// Backing field for TextBox1cce79f4Edit property
        /// </summary>
        private Edit fTextBox1cce79f4Edit;

        /// <summary>
        /// Backing field for KerberosDefaultText property
        /// </summary>
        private Text fKerberosDefaultText;

        /// <summary>
        /// Backing field for TextBox757e1b31Edit property
        /// </summary>
        private Edit fTextBox757e1b31Edit;

        /// <summary>
        /// Backing field for KerberosServerHText property
        /// </summary>
        private Text fKerberosServerHText;

        /// <summary>
        /// Backing field for TextBoxe5cfa172Edit property
        /// </summary>
        private Edit fTextBoxe5cfa172Edit;

        /// <summary>
        /// Backing field for KerberosServerPText property
        /// </summary>
        private Text fKerberosServerPText;

        /// <summary>
        /// Backing field for TextBoxf986abfaEdit property
        /// </summary>
        private Edit fTextBoxf986abfaEdit;

        /// <summary>
        /// Backing field for ExpanderB7151C3Group property
        /// </summary>
        private Group fExpanderB7151C3Group;

        /// <summary>
        /// Backing field for ButtonHeaderSitDup2Button property
        /// </summary>
        private Button fButtonHeaderSitDup2Button;

        /// <summary>
        /// Backing field for LDAPDatabaseSeaGroup property
        /// </summary>
        private Group fLDAPDatabaseSeaGroup;

        /// <summary>
        /// Backing field for LDAPDatabaseSeaText property
        /// </summary>
        private Text fLDAPDatabaseSeaText;

        /// <summary>
        /// Backing field for PathtostartsearText property
        /// </summary>
        private Text fPathtostartsearText;

        /// <summary>
        /// Backing field for TextBox2e2cfbd5Edit property
        /// </summary>
        private Edit fTextBox2e2cfbd5Edit;

        /// <summary>
        /// Backing field for AutoFindButton4Button property
        /// </summary>
        private Button fAutoFindButton4Button;

        /// <summary>
        /// Backing field for SourceforAttribText property
        /// </summary>
        private Text fSourceforAttribText;

        /// <summary>
        /// Backing field for UseActiveDirectRadioButton property
        /// </summary>
        private RadioButton fUseActiveDirectRadioButton;

        /// <summary>
        /// Backing field for UseExchange55DeRadioButton property
        /// </summary>
        private RadioButton fUseExchange55DeRadioButton;

        /// <summary>
        /// Backing field for UseCustomAttribRadioButton property
        /// </summary>
        private RadioButton fUseCustomAttribRadioButton;

        /// <summary>
        /// Backing field for AutoFindButton8Button property
        /// </summary>
        private Button fAutoFindButton8Button;

        /// <summary>
        /// Backing field for MatchtheRecipieText property
        /// </summary>
        private Text fMatchtheRecipieText;

        /// <summary>
        /// Backing field for TextBox0fd71265Edit property
        /// </summary>
        private Edit fTextBox0fd71265Edit;

        /// <summary>
        /// Backing field for AttributeNamefoDup0Text property
        /// </summary>
        private Text fAttributeNamefoDup0Text;

        /// <summary>
        /// Backing field for TextBoxc34b5023Edit property
        /// </summary>
        private Edit fTextBoxc34b5023Edit;

        /// <summary>
        /// Backing field for AttributeNamefoDup1Text property
        /// </summary>
        private Text fAttributeNamefoDup1Text;

        /// <summary>
        /// Backing field for TextBox3a6d11c5Edit property
        /// </summary>
        private Edit fTextBox3a6d11c5Edit;

        /// <summary>
        /// Backing field for AdvancedSearchOGroup property
        /// </summary>
        private Group fAdvancedSearchOGroup;

        /// <summary>
        /// Backing field for Expander0D39A3CGroup property
        /// </summary>
        private Group fExpander0D39A3CGroup;

        /// <summary>
        /// Backing field for ButtonHeaderSitDup3Button property
        /// </summary>
        private Button fButtonHeaderSitDup3Button;

        /// <summary>
        /// Backing field for TestforLDAPRetrGroup property
        /// </summary>
        private Group fTestforLDAPRetrGroup;

        /// <summary>
        /// Backing field for TestforLDAPRetrText property
        /// </summary>
        private Text fTestforLDAPRetrText;

        /// <summary>
        /// Backing field for TestTextmTestLaText property
        /// </summary>
        private Text fTestTextmTestLaText;

        /// <summary>
        /// Backing field for TextBoxf206c2f6Edit property
        /// </summary>
        private Edit fTextBoxf206c2f6Edit;

        /// <summary>
        /// Backing field for TestButtone6d54Button property
        /// </summary>
        private Button fTestButtone6d54Button;

        /// <summary>
        /// Backing field for Expander5DC4D6AGroup property
        /// </summary>
        private Group fExpander5DC4D6AGroup;

        /// <summary>
        /// Backing field for ButtonHeaderSitDup4Button property
        /// </summary>
        private Button fButtonHeaderSitDup4Button;

        /// <summary>
        /// Backing field for SyncScheduleSteGroup property
        /// </summary>
        private Group fSyncScheduleSteGroup;

        /// <summary>
        /// Backing field for SyncScheduleSteText property
        /// </summary>
        private Text fSyncScheduleSteText;

        /// <summary>
        /// Backing field for SyncText property
        /// </summary>
        private Text fSyncText;

        /// <summary>
        /// Backing field for ComboBox1138dacComboBox property
        /// </summary>
        private ComboBox fComboBox1138dacComboBox;

        /// <summary>
        /// Backing field for SyncTimeText property
        /// </summary>
        private Text fSyncTimeText;

        /// <summary>
        /// Backing field for WindowsFormsHosDup0Pane property
        /// </summary>
        private Pane fWindowsFormsHosDup0Pane;

        /// <summary>
        /// Backing field for A24HourCheckBoxCheckBox property
        /// </summary>
        private CheckBox fA24HourCheckBoxCheckBox;

        /// <summary>
        /// Backing field for OnlysyncMondayFCheckBox property
        /// </summary>
        private CheckBox fOnlysyncMondayFCheckBox;

        /// <summary>
        /// Backing field for SundayCheckBox2CheckBox property
        /// </summary>
        private CheckBox fSundayCheckBox2CheckBox;

        /// <summary>
        /// Backing field for MondayCheckBoxCCheckBox property
        /// </summary>
        private CheckBox fMondayCheckBoxCCheckBox;

        /// <summary>
        /// Backing field for TuesdayCheckBoxCheckBox property
        /// </summary>
        private CheckBox fTuesdayCheckBoxCheckBox;

        /// <summary>
        /// Backing field for WednesdayCheckBCheckBox property
        /// </summary>
        private CheckBox fWednesdayCheckBCheckBox;

        /// <summary>
        /// Backing field for ThursdayCheckBoCheckBox property
        /// </summary>
        private CheckBox fThursdayCheckBoCheckBox;

        /// <summary>
        /// Backing field for FridayCheckBoxDCheckBox property
        /// </summary>
        private CheckBox fFridayCheckBoxDCheckBox;

        /// <summary>
        /// Backing field for SaturdayCheckBoCheckBox property
        /// </summary>
        private CheckBox fSaturdayCheckBoCheckBox;

        /// <summary>
        /// Backing field for LastDayoftheMonRadioButton property
        /// </summary>
        private RadioButton fLastDayoftheMonRadioButton;

        /// <summary>
        /// Backing field for DayRadioButton3RadioButton property
        /// </summary>
        private RadioButton fDayRadioButton3RadioButton;

        /// <summary>
        /// Backing field for WindowsFormsHosDup1Pane property
        /// </summary>
        private Pane fWindowsFormsHosDup1Pane;

        /// <summary>
        /// Backing field for LastReplicationText property
        /// </summary>
        private Text fLastReplicationText;

        /// <summary>
        /// Backing field for TextBoxcc133df7Edit property
        /// </summary>
        private Edit fTextBoxcc133df7Edit;

        /// <summary>
        /// Backing field for SyncNowButtonb7Button property
        /// </summary>
        private Button fSyncNowButtonb7Button;

        /// <summary>
        /// Backing field for ClearLDAPCacheBButton property
        /// </summary>
        private Button fClearLDAPCacheBButton;

        /// <summary>
        /// Backing field for ClearLDAPCacheTText property
        /// </summary>
        private Text fClearLDAPCacheTText;

        /// <summary>
        /// Backing field for AddressBookManaGroup property
        /// </summary>
        private Group fAddressBookManaGroup;

        /// <summary>
        /// Backing field for AddressBookManaDup0Text property
        /// </summary>
        private Text fAddressBookManaDup0Text;

        /// <summary>
        /// Backing field for AddressBookManaButton property
        /// </summary>
        private Button fAddressBookManaButton;

        /// <summary>
        /// Backing field for AddressBookManaDup1Text property
        /// </summary>
        private Text fAddressBookManaDup1Text;

        /// <summary>
        /// Backing field for ScrollBarVerticDup9ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup9ScrollBar;

        /// <summary>
        /// Backing field for RepeatButtonPARDup0Button property
        /// </summary>
        private Button fRepeatButtonPARDup0Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup0Button property
        /// </summary>
        private Button fRepeatButtonPagDup0Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup1Button property
        /// </summary>
        private Button fRepeatButtonPagDup1Button;

        /// <summary>
        /// Backing field for ThumbThumb property
        /// </summary>
        private Thumb fThumbThumb;

        /// <summary>
        /// Backing field for RepeatButtonPARDup1Button property
        /// </summary>
        private Button fRepeatButtonPARDup1Button;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup9ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup9ScrollBar;

        /// <summary>
        /// Backing field for DeviceConfiguraTabItem property
        /// </summary>
        private TabItem fDeviceConfiguraTabItem;

        /// <summary>
        /// Backing field for DeviceConfiguraText property
        /// </summary>
        private Text fDeviceConfiguraText;

        /// <summary>
        /// Backing field for TemplateConfiguTabItem property
        /// </summary>
        private TabItem fTemplateConfiguTabItem;

        /// <summary>
        /// Backing field for TemplateConfiguText property
        /// </summary>
        private Text fTemplateConfiguText;

        /// <summary>
        /// Backing field for LogTabItem9b4f3TabItem property
        /// </summary>
        private TabItem fLogTabItem9b4f3TabItem;

        /// <summary>
        /// Backing field for LogTextBlockText property
        /// </summary>
        private Text fLogTextBlockText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup7TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup7TabItem;

        /// <summary>
        /// Backing field for SecurityTextmSeText property
        /// </summary>
        private Text fSecurityTextmSeText;

        /// <summary>
        /// Backing field for SecurityTextBloText property
        /// </summary>
        private Text fSecurityTextBloText;

        /// <summary>
        /// Backing field for Text8A7A84DB894Text property
        /// </summary>
        private Text fText8A7A84DB894Text;

        /// <summary>
        /// Backing field for Text16F78FB18FFText property
        /// </summary>
        private Text fText16F78FB18FFText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup8TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup8TabItem;

        /// <summary>
        /// Backing field for AnalyticsTextmAText property
        /// </summary>
        private Text fAnalyticsTextmAText;

        /// <summary>
        /// Backing field for AnalyticsTextBlText property
        /// </summary>
        private Text fAnalyticsTextBlText;

        /// <summary>
        /// Backing field for AboutTabItemf45TabItem property
        /// </summary>
        private TabItem fAboutTabItemf45TabItem;

        /// <summary>
        /// Backing field for AboutTextBlockText property
        /// </summary>
        private Text fAboutTextBlockText;

        /// <summary>
        /// The Ip Address
        /// </summary>
        private string _ipaddress;

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_AddressBookManager"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public DSS_AddressBookManager(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_AddressBookManager"/> class using the default UIAFramework.
        /// </summary>
        public DSS_AddressBookManager()
        {
            Desktop = new Desktop();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_AddressBookManager"/> class using the default UIAFramework.
        /// </summary>        
        /// <param name="address">
        /// The IP address.
        /// </param>
        public DSS_AddressBookManager(string address)
        {
            Desktop = new Desktop();
            _ipaddress = address;
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        /// <summary>
        /// Gets Reference to HPDigitalSendinWindow
        /// </summary>
        public Window HPDigitalSendinWindow
        {
            get
            {
                if (null == fHPDigitalSendinWindow)
                {
                    fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                    fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_ipaddress})");
                }

                return fHPDigitalSendinWindow;
            }
        }

        /// <summary>
        /// Gets Reference to AddressBookManaWindow
        /// </summary>
        public Window AddressBookManaWindow
        {
            get
            {
                if (null == fAddressBookManaWindow)
                {
                    fAddressBookManaWindow = new Window("AddressBookManaWindow", HPDigitalSendinWindow);
                    fAddressBookManaWindow.UIMap.Scope = UIASeachScope.Children;
                    fAddressBookManaWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"391E55DE-0CF0-4955-829E-6334ED7FFCE7");
                    fAddressBookManaWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fAddressBookManaWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                }

                return fAddressBookManaWindow;
            }
        }

        /// <summary>
        /// Gets Reference to AddressBookManaTitleBar
        /// </summary>
        public TitleBar AddressBookManaTitleBar
        {
            get
            {
                if (null == fAddressBookManaTitleBar)
                {
                    fAddressBookManaTitleBar = new TitleBar("AddressBookManaTitleBar", AddressBookManaWindow);
                    fAddressBookManaTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fAddressBookManaTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    fAddressBookManaTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                }

                return fAddressBookManaTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemMenuBarSyDup0MenuBar
        /// </summary>
        public MenuBar SystemMenuBarSyDup0MenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyDup0MenuBar)
                {
                    fSystemMenuBarSyDup0MenuBar = new MenuBar("SystemMenuBarSyDup0MenuBar", AddressBookManaTitleBar);
                    fSystemMenuBarSyDup0MenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                }

                return fSystemMenuBarSyDup0MenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemItem1Dup0MenuItem
        /// </summary>
        public MenuItem SystemItem1Dup0MenuItem
        {
            get
            {
                if (null == fSystemItem1Dup0MenuItem)
                {
                    fSystemItem1Dup0MenuItem = new MenuItem("SystemItem1Dup0MenuItem", SystemMenuBarSyDup0MenuBar);
                    fSystemItem1Dup0MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                }

                return fSystemItem1Dup0MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to MinimizeMinimizDup0Button
        /// </summary>
        public Button MinimizeMinimizDup0Button
        {
            get
            {
                if (null == fMinimizeMinimizDup0Button)
                {
                    fMinimizeMinimizDup0Button = new Button("MinimizeMinimizDup0Button", AddressBookManaTitleBar);
                    fMinimizeMinimizDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                    fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                }

                return fMinimizeMinimizDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to MaximizeMaximizDup0Button
        /// </summary>
        public Button MaximizeMaximizDup0Button
        {
            get
            {
                if (null == fMaximizeMaximizDup0Button)
                {
                    fMaximizeMaximizDup0Button = new Button("MaximizeMaximizDup0Button", AddressBookManaTitleBar);
                    fMaximizeMaximizDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                    fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                }

                return fMaximizeMaximizDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to CloseCloseDup0Button
        /// </summary>
        public Button CloseCloseDup0Button
        {
            get
            {
                if (null == fCloseCloseDup0Button)
                {
                    fCloseCloseDup0Button = new Button("CloseCloseDup0Button", AddressBookManaTitleBar);
                    fCloseCloseDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                }

                return fCloseCloseDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to DSSAddressBooksDup0Text
        /// </summary>
        public Text DSSAddressBooksDup0Text
        {
            get
            {
                if (null == fDSSAddressBooksDup0Text)
                {
                    fDSSAddressBooksDup0Text = new Text("DSSAddressBooksDup0Text", AddressBookManaWindow);
                    fDSSAddressBooksDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDSSAddressBooksDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDSSAddressBooksDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"DSS Address Books");
                }

                return fDSSAddressBooksDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to DSSAddressBooksDup1Text
        /// </summary>
        public Text DSSAddressBooksDup1Text
        {
            get
            {
                if (null == fDSSAddressBooksDup1Text)
                {
                    fDSSAddressBooksDup1Text = new Text("DSSAddressBooksDup1Text", DSSAddressBooksDup0Text);
                    fDSSAddressBooksDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDSSAddressBooksDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDSSAddressBooksDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"DSS Address Books");
                }

                return fDSSAddressBooksDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TreeView87DDA4CTree
        /// </summary>
        public Tree TreeView87DDA4CTree
        {
            get
            {
                if (null == fTreeView87DDA4CTree)
                {
                    fTreeView87DDA4CTree = new Tree("TreeView87DDA4CTree", AddressBookManaWindow);
                    fTreeView87DDA4CTree.UIMap.Scope = UIASeachScope.Children;
                    fTreeView87DDA4CTree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"87DDA4CA-8AA3-4101-B507-205367EF1C65");
                    fTreeView87DDA4CTree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeView");
                }

                return fTreeView87DDA4CTree;
            }
        }

        /// <summary>
        /// Gets Reference to PublicTreeViewITreeItem
        /// </summary>
        public TreeItem PublicTreeViewITreeItem
        {
            get
            {
                if (null == fPublicTreeViewITreeItem)
                {
                    fPublicTreeViewITreeItem = new TreeItem("PublicTreeViewITreeItem", TreeView87DDA4CTree);
                    fPublicTreeViewITreeItem.UIMap.Scope = UIASeachScope.Children;
                    fPublicTreeViewITreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fPublicTreeViewITreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Public");
                }

                return fPublicTreeViewITreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup0Button
        /// </summary>
        public Button ButtonExpanderDup0Button
        {
            get
            {
                if (null == fButtonExpanderDup0Button)
                {
                    fButtonExpanderDup0Button = new Button("ButtonExpanderDup0Button", PublicTreeViewITreeItem);
                    fButtonExpanderDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                    fButtonExpanderDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonExpanderDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to PublicTextBlockText
        /// </summary>
        public Text PublicTextBlockText
        {
            get
            {
                if (null == fPublicTextBlockText)
                {
                    fPublicTextBlockText = new Text("PublicTextBlockText", PublicTreeViewITreeItem);
                    fPublicTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fPublicTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPublicTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Public");
                }

                return fPublicTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to PrivateAddressBTreeItem
        /// </summary>
        public TreeItem PrivateAddressBTreeItem
        {
            get
            {
                if (null == fPrivateAddressBTreeItem)
                {
                    fPrivateAddressBTreeItem = new TreeItem("PrivateAddressBTreeItem", TreeView87DDA4CTree);
                    fPrivateAddressBTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fPrivateAddressBTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fPrivateAddressBTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Private Address Books");
                }

                return fPrivateAddressBTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup1Button
        /// </summary>
        public Button ButtonExpanderDup1Button
        {
            get
            {
                if (null == fButtonExpanderDup1Button)
                {
                    fButtonExpanderDup1Button = new Button("ButtonExpanderDup1Button", PrivateAddressBTreeItem);
                    fButtonExpanderDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                    fButtonExpanderDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonExpanderDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to PrivateAddressBText
        /// </summary>
        public Text PrivateAddressBText
        {
            get
            {
                if (null == fPrivateAddressBText)
                {
                    fPrivateAddressBText = new Text("PrivateAddressBText", PrivateAddressBTreeItem);
                    fPrivateAddressBText.UIMap.Scope = UIASeachScope.Children;
                    fPrivateAddressBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPrivateAddressBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Private Address Books");
                }

                return fPrivateAddressBText;
            }
        }

        /// <summary>
        /// Gets Reference to ExportButtonA1CButton
        /// </summary>
        public Button ExportButtonA1CButton
        {
            get
            {
                if (null == fExportButtonA1CButton)
                {
                    fExportButtonA1CButton = new Button("ExportButtonA1CButton", AddressBookManaWindow);
                    fExportButtonA1CButton.UIMap.Scope = UIASeachScope.Children;
                    fExportButtonA1CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A1CCB21F-FF18-45c0-9508-205AB68DF6FA");
                    fExportButtonA1CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fExportButtonA1CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                }

                return fExportButtonA1CButton;
            }
        }

        /// <summary>
        /// Gets Reference to ExportTextBlockText
        /// </summary>
        public Text ExportTextBlockText
        {
            get
            {
                if (null == fExportTextBlockText)
                {
                    fExportTextBlockText = new Text("ExportTextBlockText", ExportButtonA1CButton);
                    fExportTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                }

                return fExportTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to DeleteButton1B6Button
        /// </summary>
        public Button DeleteButton1B6Button
        {
            get
            {
                if (null == fDeleteButton1B6Button)
                {
                    fDeleteButton1B6Button = new Button("DeleteButton1B6Button", AddressBookManaWindow);
                    fDeleteButton1B6Button.UIMap.Scope = UIASeachScope.Children;
                    fDeleteButton1B6Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1B69E89F-D211-4da8-B934-C5619A2C5295");
                    fDeleteButton1B6Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fDeleteButton1B6Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                }

                return fDeleteButton1B6Button;
            }
        }

        /// <summary>
        /// Gets Reference to DeleteTextBlockDup0Text
        /// </summary>
        public Text DeleteTextBlockDup0Text
        {
            get
            {
                if (null == fDeleteTextBlockDup0Text)
                {
                    fDeleteTextBlockDup0Text = new Text("DeleteTextBlockDup0Text", DeleteButton1B6Button);
                    fDeleteTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDeleteTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeleteTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                }

                return fDeleteTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to ImportAddressBoButton
        /// </summary>
        public Button ImportAddressBoButton
        {
            get
            {
                if (null == fImportAddressBoButton)
                {
                    fImportAddressBoButton = new Button("ImportAddressBoButton", AddressBookManaWindow);
                    fImportAddressBoButton.UIMap.Scope = UIASeachScope.Children;
                    fImportAddressBoButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2822A2FE-4E84-44ce-B27A-B204BD728AA6");
                    fImportAddressBoButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fImportAddressBoButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import Address Book");
                }

                return fImportAddressBoButton;
            }
        }

        /// <summary>
        /// Gets Reference to ImportAddressBoText
        /// </summary>
        public Text ImportAddressBoText
        {
            get
            {
                if (null == fImportAddressBoText)
                {
                    fImportAddressBoText = new Text("ImportAddressBoText", ImportAddressBoButton);
                    fImportAddressBoText.UIMap.Scope = UIASeachScope.Children;
                    fImportAddressBoText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fImportAddressBoText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import Address Book");
                }

                return fImportAddressBoText;
            }
        }

        /// <summary>
        /// Gets Reference to GridSplitterThumb
        /// </summary>
        public Thumb GridSplitterThumb
        {
            get
            {
                if (null == fGridSplitterThumb)
                {
                    fGridSplitterThumb = new Thumb("GridSplitterThumb", AddressBookManaWindow);
                    fGridSplitterThumb.UIMap.Scope = UIASeachScope.Children;
                    fGridSplitterThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridSplitter");
                }

                return fGridSplitterThumb;
            }
        }

        /// <summary>
        /// Gets Reference to AddressBookContDup0Text
        /// </summary>
        public Text AddressBookContDup0Text
        {
            get
            {
                if (null == fAddressBookContDup0Text)
                {
                    fAddressBookContDup0Text = new Text("AddressBookContDup0Text", AddressBookManaWindow);
                    fAddressBookContDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAddressBookContDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAddressBookContDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Contacts");
                }

                return fAddressBookContDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to AddressBookContDup1Text
        /// </summary>
        public Text AddressBookContDup1Text
        {
            get
            {
                if (null == fAddressBookContDup1Text)
                {
                    fAddressBookContDup1Text = new Text("AddressBookContDup1Text", AddressBookContDup0Text);
                    fAddressBookContDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAddressBookContDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddressBookContDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Contacts");
                }

                return fAddressBookContDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to RefreshButton81Button
        /// </summary>
        public Button RefreshButton81Button
        {
            get
            {
                if (null == fRefreshButton81Button)
                {
                    fRefreshButton81Button = new Button("RefreshButton81Button", AddressBookManaWindow);
                    fRefreshButton81Button.UIMap.Scope = UIASeachScope.Children;
                    fRefreshButton81Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8136A442-0D15-4415-920C-CA43DED3D002");
                    fRefreshButton81Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRefreshButton81Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Refresh");
                }

                return fRefreshButton81Button;
            }
        }

        /// <summary>
        /// Gets Reference to RefreshTextBlocText
        /// </summary>
        public Text RefreshTextBlocText
        {
            get
            {
                if (null == fRefreshTextBlocText)
                {
                    fRefreshTextBlocText = new Text("RefreshTextBlocText", RefreshButton81Button);
                    fRefreshTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fRefreshTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRefreshTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Refresh");
                }

                return fRefreshTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to SearchForText
        /// </summary>
        public Text SearchForText
        {
            get
            {
                if (null == fSearchForText)
                {
                    fSearchForText = new Text("SearchForText", AddressBookManaWindow);
                    fSearchForText.UIMap.Scope = UIASeachScope.Children;
                    fSearchForText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSearchForText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search For");
                }

                return fSearchForText;
            }
        }

        /// <summary>
        /// Gets Reference to SearchForTextBlText
        /// </summary>
        public Text SearchForTextBlText
        {
            get
            {
                if (null == fSearchForTextBlText)
                {
                    fSearchForTextBlText = new Text("SearchForTextBlText", SearchForText);
                    fSearchForTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fSearchForTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSearchForTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search For");
                }

                return fSearchForTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxA5F891AComboBox
        /// </summary>
        public ComboBox ComboBoxA5F891AComboBox
        {
            get
            {
                if (null == fComboBoxA5F891AComboBox)
                {
                    fComboBoxA5F891AComboBox = new ComboBox("ComboBoxA5F891AComboBox", AddressBookManaWindow);
                    fComboBoxA5F891AComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxA5F891AComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A5F891A4-D564-4D03-A3CF-020D3DFEABFE");
                    fComboBoxA5F891AComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                }

                return fComboBoxA5F891AComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxA7B3B6CFEdit
        /// </summary>
        public Edit TextBoxA7B3B6CFEdit
        {
            get
            {
                if (null == fTextBoxA7B3B6CFEdit)
                {
                    fTextBoxA7B3B6CFEdit = new Edit("TextBoxA7B3B6CFEdit", AddressBookManaWindow);
                    fTextBoxA7B3B6CFEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxA7B3B6CFEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A7B3B6CF-CA57-4C41-B012-E680FF33571A");
                    fTextBoxA7B3B6CFEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxA7B3B6CFEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup0Pane
        /// </summary>
        public Pane ScrollViewerPARDup0Pane
        {
            get
            {
                if (null == fScrollViewerPARDup0Pane)
                {
                    fScrollViewerPARDup0Pane = new Pane("ScrollViewerPARDup0Pane", TextBoxA7B3B6CFEdit);
                    fScrollViewerPARDup0Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup0Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup0ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup0ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup0ScrollBar)
                {
                    fScrollBarVerticDup0ScrollBar = new ScrollBar("ScrollBarVerticDup0ScrollBar", ScrollViewerPARDup0Pane);
                    fScrollBarVerticDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup0ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup0ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup0ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup0ScrollBar)
                {
                    fScrollBarHorizoDup0ScrollBar = new ScrollBar("ScrollBarHorizoDup0ScrollBar", ScrollViewerPARDup0Pane);
                    fScrollBarHorizoDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup0ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to FilterButtonEB0Button
        /// </summary>
        public Button FilterButtonEB0Button
        {
            get
            {
                if (null == fFilterButtonEB0Button)
                {
                    fFilterButtonEB0Button = new Button("FilterButtonEB0Button", AddressBookManaWindow);
                    fFilterButtonEB0Button.UIMap.Scope = UIASeachScope.Children;
                    fFilterButtonEB0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"EB01B2A2-BF39-42A0-AE00-B0FC20AD66B5");
                    fFilterButtonEB0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fFilterButtonEB0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Filter");
                }

                return fFilterButtonEB0Button;
            }
        }

        /// <summary>
        /// Gets Reference to FilterTextBlockText
        /// </summary>
        public Text FilterTextBlockText
        {
            get
            {
                if (null == fFilterTextBlockText)
                {
                    fFilterTextBlockText = new Text("FilterTextBlockText", FilterButtonEB0Button);
                    fFilterTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fFilterTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFilterTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Filter");
                }

                return fFilterTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ClearButtonEC9FButton
        /// </summary>
        public Button ClearButtonEC9FButton
        {
            get
            {
                if (null == fClearButtonEC9FButton)
                {
                    fClearButtonEC9FButton = new Button("ClearButtonEC9FButton", AddressBookManaWindow);
                    fClearButtonEC9FButton.UIMap.Scope = UIASeachScope.Children;
                    fClearButtonEC9FButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"EC9F1512-82D9-47DF-835E-F1257E37CDC4");
                    fClearButtonEC9FButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fClearButtonEC9FButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear");
                }

                return fClearButtonEC9FButton;
            }
        }

        /// <summary>
        /// Gets Reference to ClearTextBlockText
        /// </summary>
        public Text ClearTextBlockText
        {
            get
            {
                if (null == fClearTextBlockText)
                {
                    fClearTextBlockText = new Text("ClearTextBlockText", ClearButtonEC9FButton);
                    fClearTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fClearTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fClearTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear");
                }

                return fClearTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ListViewbb668d9DataGrid
        /// </summary>
        public DataGrid ListViewbb668d9DataGrid
        {
            get
            {
                if (null == fListViewbb668d9DataGrid)
                {
                    fListViewbb668d9DataGrid = new DataGrid("ListViewbb668d9DataGrid", AddressBookManaWindow);
                    fListViewbb668d9DataGrid.UIMap.Scope = UIASeachScope.Children;
                    fListViewbb668d9DataGrid.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"bb668d97-1a07-4f0e-bad1-f6fcbfbf7c99");
                    fListViewbb668d9DataGrid.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListView");
                }

                return fListViewbb668d9DataGrid;
            }
        }

        /// <summary>
        /// Gets Reference to GridViewHeaderRHeader
        /// </summary>
        public Header GridViewHeaderRHeader
        {
            get
            {
                if (null == fGridViewHeaderRHeader)
                {
                    fGridViewHeaderRHeader = new Header("GridViewHeaderRHeader", ListViewbb668d9DataGrid);
                    fGridViewHeaderRHeader.UIMap.Scope = UIASeachScope.Children;
                    fGridViewHeaderRHeader.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewHeaderRowPresenter");
                }

                return fGridViewHeaderRHeader;
            }
        }

        /// <summary>
        /// Gets Reference to ContactNameGridHeaderItem
        /// </summary>
        public HeaderItem ContactNameGridHeaderItem
        {
            get
            {
                if (null == fContactNameGridHeaderItem)
                {
                    fContactNameGridHeaderItem = new HeaderItem("ContactNameGridHeaderItem", GridViewHeaderRHeader);
                    fContactNameGridHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fContactNameGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fContactNameGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Contact Name");
                }

                return fContactNameGridHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to ContactNameTextText
        /// </summary>
        public Text ContactNameTextText
        {
            get
            {
                if (null == fContactNameTextText)
                {
                    fContactNameTextText = new Text("ContactNameTextText", ContactNameGridHeaderItem);
                    fContactNameTextText.UIMap.Scope = UIASeachScope.Children;
                    fContactNameTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fContactNameTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Contact Name");
                }

                return fContactNameTextText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup0Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup0Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup0Thumb)
                {
                    fThumbPARTHeadeDup0Thumb = new Thumb("ThumbPARTHeadeDup0Thumb", ContactNameGridHeaderItem);
                    fThumbPARTHeadeDup0Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup0Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to EmailAddressGriHeaderItem
        /// </summary>
        public HeaderItem EmailAddressGriHeaderItem
        {
            get
            {
                if (null == fEmailAddressGriHeaderItem)
                {
                    fEmailAddressGriHeaderItem = new HeaderItem("EmailAddressGriHeaderItem", GridViewHeaderRHeader);
                    fEmailAddressGriHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fEmailAddressGriHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fEmailAddressGriHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail Address");
                }

                return fEmailAddressGriHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to EmailAddressTexText
        /// </summary>
        public Text EmailAddressTexText
        {
            get
            {
                if (null == fEmailAddressTexText)
                {
                    fEmailAddressTexText = new Text("EmailAddressTexText", EmailAddressGriHeaderItem);
                    fEmailAddressTexText.UIMap.Scope = UIASeachScope.Children;
                    fEmailAddressTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEmailAddressTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail Address");
                }

                return fEmailAddressTexText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup1Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup1Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup1Thumb)
                {
                    fThumbPARTHeadeDup1Thumb = new Thumb("ThumbPARTHeadeDup1Thumb", EmailAddressGriHeaderItem);
                    fThumbPARTHeadeDup1Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup1Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to FaxNumberGridViHeaderItem
        /// </summary>
        public HeaderItem FaxNumberGridViHeaderItem
        {
            get
            {
                if (null == fFaxNumberGridViHeaderItem)
                {
                    fFaxNumberGridViHeaderItem = new HeaderItem("FaxNumberGridViHeaderItem", GridViewHeaderRHeader);
                    fFaxNumberGridViHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fFaxNumberGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fFaxNumberGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax Number");
                }

                return fFaxNumberGridViHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to FaxNumberTextBlText
        /// </summary>
        public Text FaxNumberTextBlText
        {
            get
            {
                if (null == fFaxNumberTextBlText)
                {
                    fFaxNumberTextBlText = new Text("FaxNumberTextBlText", FaxNumberGridViHeaderItem);
                    fFaxNumberTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fFaxNumberTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFaxNumberTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax Number");
                }

                return fFaxNumberTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup2Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup2Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup2Thumb)
                {
                    fThumbPARTHeadeDup2Thumb = new Thumb("ThumbPARTHeadeDup2Thumb", FaxNumberGridViHeaderItem);
                    fThumbPARTHeadeDup2Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup2Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPcontactsareText
        /// </summary>
        public Text LDAPcontactsareText
        {
            get
            {
                if (null == fLDAPcontactsareText)
                {
                    fLDAPcontactsareText = new Text("LDAPcontactsareText", AddressBookManaWindow);
                    fLDAPcontactsareText.UIMap.Scope = UIASeachScope.Children;
                    fLDAPcontactsareText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AA1B018A-76A3-4D20-8E79-E621B97E6BA0");
                    fLDAPcontactsareText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLDAPcontactsareText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP contacts are not managed or editable in the Address Book Manager. 11 LDAP replicated addresses in the database.");
                }

                return fLDAPcontactsareText;
            }
        }

        /// <summary>
        /// Gets Reference to DeleteButton41BButton
        /// </summary>
        public Button DeleteButton41BButton
        {
            get
            {
                if (null == fDeleteButton41BButton)
                {
                    fDeleteButton41BButton = new Button("DeleteButton41BButton", AddressBookManaWindow);
                    fDeleteButton41BButton.UIMap.Scope = UIASeachScope.Children;
                    fDeleteButton41BButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"41B96573-563B-4253-90EB-9F3492FA5BCB");
                    fDeleteButton41BButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fDeleteButton41BButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                }

                return fDeleteButton41BButton;
            }
        }

        /// <summary>
        /// Gets Reference to DeleteTextBlockDup1Text
        /// </summary>
        public Text DeleteTextBlockDup1Text
        {
            get
            {
                if (null == fDeleteTextBlockDup1Text)
                {
                    fDeleteTextBlockDup1Text = new Text("DeleteTextBlockDup1Text", DeleteButton41BButton);
                    fDeleteTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDeleteTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeleteTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                }

                return fDeleteTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to EditButton548EBButton
        /// </summary>
        public Button EditButton548EBButton
        {
            get
            {
                if (null == fEditButton548EBButton)
                {
                    fEditButton548EBButton = new Button("EditButton548EBButton", AddressBookManaWindow);
                    fEditButton548EBButton.UIMap.Scope = UIASeachScope.Children;
                    fEditButton548EBButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"548EB117-4E78-4199-9C93-6D5BA80C353F");
                    fEditButton548EBButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fEditButton548EBButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit");
                }

                return fEditButton548EBButton;
            }
        }

        /// <summary>
        /// Gets Reference to EditTextBlockText
        /// </summary>
        public Text EditTextBlockText
        {
            get
            {
                if (null == fEditTextBlockText)
                {
                    fEditTextBlockText = new Text("EditTextBlockText", EditButton548EBButton);
                    fEditTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fEditTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEditTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit");
                }

                return fEditTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to AddGroupButton7Button
        /// </summary>
        public Button AddGroupButton7Button
        {
            get
            {
                if (null == fAddGroupButton7Button)
                {
                    fAddGroupButton7Button = new Button("AddGroupButton7Button", AddressBookManaWindow);
                    fAddGroupButton7Button.UIMap.Scope = UIASeachScope.Children;
                    fAddGroupButton7Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7EE85ED2-2E3A-4700-9C01-52D668AEB8F2");
                    fAddGroupButton7Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddGroupButton7Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group");
                }

                return fAddGroupButton7Button;
            }
        }

        /// <summary>
        /// Gets Reference to AddGroupTextBloText
        /// </summary>
        public Text AddGroupTextBloText
        {
            get
            {
                if (null == fAddGroupTextBloText)
                {
                    fAddGroupTextBloText = new Text("AddGroupTextBloText", AddGroupButton7Button);
                    fAddGroupTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group");
                }

                return fAddGroupTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to AddContactButtoButton
        /// </summary>
        public Button AddContactButtoButton
        {
            get
            {
                if (null == fAddContactButtoButton)
                {
                    fAddContactButtoButton = new Button("AddContactButtoButton", AddressBookManaWindow);
                    fAddContactButtoButton.UIMap.Scope = UIASeachScope.Children;
                    fAddContactButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"F80F266E-41DB-42b4-A289-A9F4B0869F9F");
                    fAddContactButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddContactButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Contact");
                }

                return fAddContactButtoButton;
            }
        }

        /// <summary>
        /// Gets Reference to AddContactTextBText
        /// </summary>
        public Text AddContactTextBText
        {
            get
            {
                if (null == fAddContactTextBText)
                {
                    fAddContactTextBText = new Text("AddContactTextBText", AddContactButtoButton);
                    fAddContactTextBText.UIMap.Scope = UIASeachScope.Children;
                    fAddContactTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddContactTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Contact");
                }

                return fAddContactTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to OKButtonFA1AC0AButton
        /// </summary>
        public Button OKButtonFA1AC0AButton
        {
            get
            {
                if (null == fOKButtonFA1AC0AButton)
                {
                    fOKButtonFA1AC0AButton = new Button("OKButtonFA1AC0AButton", AddressBookManaWindow);
                    fOKButtonFA1AC0AButton.UIMap.Scope = UIASeachScope.Children;
                    fOKButtonFA1AC0AButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FA1AC0AD-9D58-4cb9-A4B3-6E89E4E5BE0D");
                    fOKButtonFA1AC0AButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButtonFA1AC0AButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKButtonFA1AC0AButton;
            }
        }

        /// <summary>
        /// Gets Reference to OKTextBlockDup0Text
        /// </summary>
        public Text OKTextBlockDup0Text
        {
            get
            {
                if (null == fOKTextBlockDup0Text)
                {
                    fOKTextBlockDup0Text = new Text("OKTextBlockDup0Text", OKButtonFA1AC0AButton);
                    fOKTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to HPDigitalSendinTitleBar
        /// </summary>
        public TitleBar HPDigitalSendinTitleBar
        {
            get
            {
                if (null == fHPDigitalSendinTitleBar)
                {
                    fHPDigitalSendinTitleBar = new TitleBar("HPDigitalSendinTitleBar", HPDigitalSendinWindow);
                    fHPDigitalSendinTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Digital Sending Software Configuration (Server IP Address: 15.75.49.181)");
                }

                return fHPDigitalSendinTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemMenuBarSyDup1MenuBar
        /// </summary>
        public MenuBar SystemMenuBarSyDup1MenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyDup1MenuBar)
                {
                    fSystemMenuBarSyDup1MenuBar = new MenuBar("SystemMenuBarSyDup1MenuBar", HPDigitalSendinTitleBar);
                    fSystemMenuBarSyDup1MenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                }

                return fSystemMenuBarSyDup1MenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemItem1Dup1MenuItem
        /// </summary>
        public MenuItem SystemItem1Dup1MenuItem
        {
            get
            {
                if (null == fSystemItem1Dup1MenuItem)
                {
                    fSystemItem1Dup1MenuItem = new MenuItem("SystemItem1Dup1MenuItem", SystemMenuBarSyDup1MenuBar);
                    fSystemItem1Dup1MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                }

                return fSystemItem1Dup1MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to MinimizeMinimizDup1Button
        /// </summary>
        public Button MinimizeMinimizDup1Button
        {
            get
            {
                if (null == fMinimizeMinimizDup1Button)
                {
                    fMinimizeMinimizDup1Button = new Button("MinimizeMinimizDup1Button", HPDigitalSendinTitleBar);
                    fMinimizeMinimizDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                    fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                }

                return fMinimizeMinimizDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to MaximizeMaximizDup1Button
        /// </summary>
        public Button MaximizeMaximizDup1Button
        {
            get
            {
                if (null == fMaximizeMaximizDup1Button)
                {
                    fMaximizeMaximizDup1Button = new Button("MaximizeMaximizDup1Button", HPDigitalSendinTitleBar);
                    fMaximizeMaximizDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                    fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                }

                return fMaximizeMaximizDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to CloseCloseDup1Button
        /// </summary>
        public Button CloseCloseDup1Button
        {
            get
            {
                if (null == fCloseCloseDup1Button)
                {
                    fCloseCloseDup1Button = new Button("CloseCloseDup1Button", HPDigitalSendinTitleBar);
                    fCloseCloseDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                }

                return fCloseCloseDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to HelpButtonCB8CFButton
        /// </summary>
        public Button HelpButtonCB8CFButton
        {
            get
            {
                if (null == fHelpButtonCB8CFButton)
                {
                    fHelpButtonCB8CFButton = new Button("HelpButtonCB8CFButton", HPDigitalSendinWindow);
                    fHelpButtonCB8CFButton.UIMap.Scope = UIASeachScope.Children;
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CB8CF0C3-DFBE-49b8-B09B-03A34F5D4186");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpButtonCB8CFButton;
            }
        }

        /// <summary>
        /// Gets Reference to HelpTextBlockText
        /// </summary>
        public Text HelpTextBlockText
        {
            get
            {
                if (null == fHelpTextBlockText)
                {
                    fHelpTextBlockText = new Text("HelpTextBlockText", HelpButtonCB8CFButton);
                    fHelpTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ApplyButton61E2Button
        /// </summary>
        public Button ApplyButton61E2Button
        {
            get
            {
                if (null == fApplyButton61E2Button)
                {
                    fApplyButton61E2Button = new Button("ApplyButton61E2Button", HPDigitalSendinWindow);
                    fApplyButton61E2Button.UIMap.Scope = UIASeachScope.Children;
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"61E2369B-F53B-4662-A361-B3034C4EFF67");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyButton61E2Button;
            }
        }

        /// <summary>
        /// Gets Reference to ApplyTextBlockText
        /// </summary>
        public Text ApplyTextBlockText
        {
            get
            {
                if (null == fApplyTextBlockText)
                {
                    fApplyTextBlockText = new Text("ApplyTextBlockText", ApplyButton61E2Button);
                    fApplyTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to CancelButton65CButton
        /// </summary>
        public Button CancelButton65CButton
        {
            get
            {
                if (null == fCancelButton65CButton)
                {
                    fCancelButton65CButton = new Button("CancelButton65CButton", HPDigitalSendinWindow);
                    fCancelButton65CButton.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"65C76204-7AB5-4681-B7FD-2D8F02DA6D4B");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelButton65CButton;
            }
        }

        /// <summary>
        /// Gets Reference to CancelTextBlockText
        /// </summary>
        public Text CancelTextBlockText
        {
            get
            {
                if (null == fCancelTextBlockText)
                {
                    fCancelTextBlockText = new Text("CancelTextBlockText", CancelButton65CButton);
                    fCancelTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fCancelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCancelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to OKButtonCC2EF49Button
        /// </summary>
        public Button OKButtonCC2EF49Button
        {
            get
            {
                if (null == fOKButtonCC2EF49Button)
                {
                    fOKButtonCC2EF49Button = new Button("OKButtonCC2EF49Button", HPDigitalSendinWindow);
                    fOKButtonCC2EF49Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CC2EF491-0BD1-4ac5-9D00-AA61A9D6BA0C");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKButtonCC2EF49Button;
            }
        }

        /// <summary>
        /// Gets Reference to OKTextBlockDup1Text
        /// </summary>
        public Text OKTextBlockDup1Text
        {
            get
            {
                if (null == fOKTextBlockDup1Text)
                {
                    fOKTextBlockDup1Text = new Text("OKTextBlockDup1Text", OKButtonCC2EF49Button);
                    fOKTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TabControlec0fdTab
        /// </summary>
        public Tab TabControlec0fdTab
        {
            get
            {
                if (null == fTabControlec0fdTab)
                {
                    fTabControlec0fdTab = new Tab("TabControlec0fdTab", HPDigitalSendinWindow);
                    fTabControlec0fdTab.UIMap.Scope = UIASeachScope.Children;
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ec0fd6cd-2ab8-482f-96a5-d1fa158f38d1");
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                }

                return fTabControlec0fdTab;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup0TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup0TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup0TabItem)
                {
                    fSystemWindowsCoDup0TabItem = new TabItem("SystemWindowsCoDup0TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup0TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1e2be878-0c03-4404-988c-54d0df925f0f");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup0TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralTextmGenText
        /// </summary>
        public Text GeneralTextmGenText
        {
            get
            {
                if (null == fGeneralTextmGenText)
                {
                    fGeneralTextmGenText = new Text("GeneralTextmGenText", SystemWindowsCoDup0TabItem);
                    fGeneralTextmGenText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextmGenText;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralTextBlocText
        /// </summary>
        public Text GeneralTextBlocText
        {
            get
            {
                if (null == fGeneralTextBlocText)
                {
                    fGeneralTextBlocText = new Text("GeneralTextBlocText", GeneralTextmGenText);
                    fGeneralTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to Text933345b04e3Text
        /// </summary>
        public Text Text933345b04e3Text
        {
            get
            {
                if (null == fText933345b04e3Text)
                {
                    fText933345b04e3Text = new Text("Text933345b04e3Text", SystemWindowsCoDup0TabItem);
                    fText933345b04e3Text.UIMap.Scope = UIASeachScope.Children;
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"933345b0-4e39-44d3-a511-0077f3176ca4");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText933345b04e3Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text786caf67344Text
        /// </summary>
        public Text Text786caf67344Text
        {
            get
            {
                if (null == fText786caf67344Text)
                {
                    fText786caf67344Text = new Text("Text786caf67344Text", SystemWindowsCoDup0TabItem);
                    fText786caf67344Text.UIMap.Scope = UIASeachScope.Children;
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"786caf67-344f-4ddc-83a5-b9431fb36731");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText786caf67344Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup1TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup1TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup1TabItem)
                {
                    fSystemWindowsCoDup1TabItem = new TabItem("SystemWindowsCoDup1TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup1TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4e90d18a-f33c-43c0-8505-08f4a17169b5");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup1TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationTDup0Text
        /// </summary>
        public Text AuthenticationTDup0Text
        {
            get
            {
                if (null == fAuthenticationTDup0Text)
                {
                    fAuthenticationTDup0Text = new Text("AuthenticationTDup0Text", SystemWindowsCoDup1TabItem);
                    fAuthenticationTDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationTDup1Text
        /// </summary>
        public Text AuthenticationTDup1Text
        {
            get
            {
                if (null == fAuthenticationTDup1Text)
                {
                    fAuthenticationTDup1Text = new Text("AuthenticationTDup1Text", AuthenticationTDup0Text);
                    fAuthenticationTDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text31EC91730B9Text
        /// </summary>
        public Text Text31EC91730B9Text
        {
            get
            {
                if (null == fText31EC91730B9Text)
                {
                    fText31EC91730B9Text = new Text("Text31EC91730B9Text", SystemWindowsCoDup1TabItem);
                    fText31EC91730B9Text.UIMap.Scope = UIASeachScope.Children;
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"31EC9173-0B98-4d46-BC99-7DF8EA2BE02F");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText31EC91730B9Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextA479C271445Text
        /// </summary>
        public Text TextA479C271445Text
        {
            get
            {
                if (null == fTextA479C271445Text)
                {
                    fTextA479C271445Text = new Text("TextA479C271445Text", SystemWindowsCoDup1TabItem);
                    fTextA479C271445Text.UIMap.Scope = UIASeachScope.Children;
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A479C271-445D-43f1-864D-7503428703E4");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextA479C271445Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup2TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup2TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup2TabItem)
                {
                    fSystemWindowsCoDup2TabItem = new TabItem("SystemWindowsCoDup2TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup2TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33A07ED3-E1EE-411e-B583-7D0A3374100F");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup2TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to EmailTextmEmailText
        /// </summary>
        public Text EmailTextmEmailText
        {
            get
            {
                if (null == fEmailTextmEmailText)
                {
                    fEmailTextmEmailText = new Text("EmailTextmEmailText", SystemWindowsCoDup2TabItem);
                    fEmailTextmEmailText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                }

                return fEmailTextmEmailText;
            }
        }

        /// <summary>
        /// Gets Reference to EmailTextBlockText
        /// </summary>
        public Text EmailTextBlockText
        {
            get
            {
                if (null == fEmailTextBlockText)
                {
                    fEmailTextBlockText = new Text("EmailTextBlockText", EmailTextmEmailText);
                    fEmailTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                }

                return fEmailTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to Text32de714a8bdText
        /// </summary>
        public Text Text32de714a8bdText
        {
            get
            {
                if (null == fText32de714a8bdText)
                {
                    fText32de714a8bdText = new Text("Text32de714a8bdText", SystemWindowsCoDup2TabItem);
                    fText32de714a8bdText.UIMap.Scope = UIASeachScope.Children;
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"32de714a-8bda-4f11-bf20-b9a56b5f18bc");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText32de714a8bdText;
            }
        }

        /// <summary>
        /// Gets Reference to Text3b2a8761f4fText
        /// </summary>
        public Text Text3b2a8761f4fText
        {
            get
            {
                if (null == fText3b2a8761f4fText)
                {
                    fText3b2a8761f4fText = new Text("Text3b2a8761f4fText", SystemWindowsCoDup2TabItem);
                    fText3b2a8761f4fText.UIMap.Scope = UIASeachScope.Children;
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3b2a8761-f4f6-41b1-b08c-9c33744bdc43");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText3b2a8761f4fText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockText
        /// </summary>
        public Text TextBlockText
        {
            get
            {
                if (null == fTextBlockText)
                {
                    fTextBlockText = new Text("TextBlockText", Text3b2a8761f4fText);
                    fTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup3TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup3TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup3TabItem)
                {
                    fSystemWindowsCoDup3TabItem = new TabItem("SystemWindowsCoDup3TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4f116988-2b22-473f-bca3-094589a44954");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to FaxTextmFaxTabLText
        /// </summary>
        public Text FaxTextmFaxTabLText
        {
            get
            {
                if (null == fFaxTextmFaxTabLText)
                {
                    fFaxTextmFaxTabLText = new Text("FaxTextmFaxTabLText", SystemWindowsCoDup3TabItem);
                    fFaxTextmFaxTabLText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextmFaxTabLText;
            }
        }

        /// <summary>
        /// Gets Reference to FaxTextBlockText
        /// </summary>
        public Text FaxTextBlockText
        {
            get
            {
                if (null == fFaxTextBlockText)
                {
                    fFaxTextBlockText = new Text("FaxTextBlockText", FaxTextmFaxTabLText);
                    fFaxTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to TextD1ED4F16F38Text
        /// </summary>
        public Text TextD1ED4F16F38Text
        {
            get
            {
                if (null == fTextD1ED4F16F38Text)
                {
                    fTextD1ED4F16F38Text = new Text("TextD1ED4F16F38Text", SystemWindowsCoDup3TabItem);
                    fTextD1ED4F16F38Text.UIMap.Scope = UIASeachScope.Children;
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D1ED4F16-F389-4dfd-A884-D258EDB48C11");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTextD1ED4F16F38Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text7DDE04FD251Text
        /// </summary>
        public Text Text7DDE04FD251Text
        {
            get
            {
                if (null == fText7DDE04FD251Text)
                {
                    fText7DDE04FD251Text = new Text("Text7DDE04FD251Text", SystemWindowsCoDup3TabItem);
                    fText7DDE04FD251Text.UIMap.Scope = UIASeachScope.Children;
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7DDE04FD-2519-44c2-A212-67B0838E1C91");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText7DDE04FD251Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup4TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup4TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup4TabItem)
                {
                    fSystemWindowsCoDup4TabItem = new TabItem("SystemWindowsCoDup4TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup4TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ff96a045-6e12-4ce3-ba85-b65d16c39ffb");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup4TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoFolderTexDup0Text
        /// </summary>
        public Text SendtoFolderTexDup0Text
        {
            get
            {
                if (null == fSendtoFolderTexDup0Text)
                {
                    fSendtoFolderTexDup0Text = new Text("SendtoFolderTexDup0Text", SystemWindowsCoDup4TabItem);
                    fSendtoFolderTexDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoFolderTexDup1Text
        /// </summary>
        public Text SendtoFolderTexDup1Text
        {
            get
            {
                if (null == fSendtoFolderTexDup1Text)
                {
                    fSendtoFolderTexDup1Text = new Text("SendtoFolderTexDup1Text", SendtoFolderTexDup0Text);
                    fSendtoFolderTexDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text7a57f43ecb1Text
        /// </summary>
        public Text Text7a57f43ecb1Text
        {
            get
            {
                if (null == fText7a57f43ecb1Text)
                {
                    fText7a57f43ecb1Text = new Text("Text7a57f43ecb1Text", SystemWindowsCoDup4TabItem);
                    fText7a57f43ecb1Text.UIMap.Scope = UIASeachScope.Children;
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText7a57f43ecb1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text654b650dd19Text
        /// </summary>
        public Text Text654b650dd19Text
        {
            get
            {
                if (null == fText654b650dd19Text)
                {
                    fText654b650dd19Text = new Text("Text654b650dd19Text", SystemWindowsCoDup4TabItem);
                    fText654b650dd19Text.UIMap.Scope = UIASeachScope.Children;
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText654b650dd19Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup5TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup5TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup5TabItem)
                {
                    fSystemWindowsCoDup5TabItem = new TabItem("SystemWindowsCoDup5TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup5TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"38feb495-2893-4d8b-8961-31ebc2a3bd56");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup5TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to WorkflowsTextmWText
        /// </summary>
        public Text WorkflowsTextmWText
        {
            get
            {
                if (null == fWorkflowsTextmWText)
                {
                    fWorkflowsTextmWText = new Text("WorkflowsTextmWText", SystemWindowsCoDup5TabItem);
                    fWorkflowsTextmWText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                }

                return fWorkflowsTextmWText;
            }
        }

        /// <summary>
        /// Gets Reference to WorkflowsTextBlText
        /// </summary>
        public Text WorkflowsTextBlText
        {
            get
            {
                if (null == fWorkflowsTextBlText)
                {
                    fWorkflowsTextBlText = new Text("WorkflowsTextBlText", WorkflowsTextmWText);
                    fWorkflowsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                }

                return fWorkflowsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to Text22D9C34E84CText
        /// </summary>
        public Text Text22D9C34E84CText
        {
            get
            {
                if (null == fText22D9C34E84CText)
                {
                    fText22D9C34E84CText = new Text("Text22D9C34E84CText", SystemWindowsCoDup5TabItem);
                    fText22D9C34E84CText.UIMap.Scope = UIASeachScope.Children;
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22D9C34E-84C8-4995-AC9E-5B46F8284284");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText22D9C34E84CText;
            }
        }

        /// <summary>
        /// Gets Reference to TextC8D15BD39C8Text
        /// </summary>
        public Text TextC8D15BD39C8Text
        {
            get
            {
                if (null == fTextC8D15BD39C8Text)
                {
                    fTextC8D15BD39C8Text = new Text("TextC8D15BD39C8Text", SystemWindowsCoDup5TabItem);
                    fTextC8D15BD39C8Text.UIMap.Scope = UIASeachScope.Children;
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C8D15BD3-9C8D-484c-A5E2-309CA8AA6C56");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextC8D15BD39C8Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup6TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup6TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup6TabItem)
                {
                    fSystemWindowsCoDup6TabItem = new TabItem("SystemWindowsCoDup6TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup6TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b8c06323-208e-4239-a523-a025661e0eab");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup6TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingTextmText
        /// </summary>
        public Text AddressingTextmText
        {
            get
            {
                if (null == fAddressingTextmText)
                {
                    fAddressingTextmText = new Text("AddressingTextmText", SystemWindowsCoDup6TabItem);
                    fAddressingTextmText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextmText;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingTextBText
        /// </summary>
        public Text AddressingTextBText
        {
            get
            {
                if (null == fAddressingTextBText)
                {
                    fAddressingTextBText = new Text("AddressingTextBText", AddressingTextmText);
                    fAddressingTextBText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to Text47EB5CBA4D1Text
        /// </summary>
        public Text Text47EB5CBA4D1Text
        {
            get
            {
                if (null == fText47EB5CBA4D1Text)
                {
                    fText47EB5CBA4D1Text = new Text("Text47EB5CBA4D1Text", SystemWindowsCoDup6TabItem);
                    fText47EB5CBA4D1Text.UIMap.Scope = UIASeachScope.Children;
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"47EB5CBA-4D1C-4eee-AD64-E26BDA31A3AC");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText47EB5CBA4D1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text0757E148179Text
        /// </summary>
        public Text Text0757E148179Text
        {
            get
            {
                if (null == fText0757E148179Text)
                {
                    fText0757E148179Text = new Text("Text0757E148179Text", SystemWindowsCoDup6TabItem);
                    fText0757E148179Text.UIMap.Scope = UIASeachScope.Children;
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0757E148-1794-4a5d-B378-6BE8049F65E1");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText0757E148179Text;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPane
        /// </summary>
        public Pane ScrollViewerPane
        {
            get
            {
                if (null == fScrollViewerPane)
                {
                    fScrollViewerPane = new Pane("ScrollViewerPane", SystemWindowsCoDup6TabItem);
                    fScrollViewerPane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPane;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingNetwoCustom
        /// </summary>
        public Custom AddressingNetwoCustom
        {
            get
            {
                if (null == fAddressingNetwoCustom)
                {
                    fAddressingNetwoCustom = new Custom("AddressingNetwoCustom", ScrollViewerPane);
                    fAddressingNetwoCustom.UIMap.Scope = UIASeachScope.Children;
                    fAddressingNetwoCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingNetworkContactsUserControl");
                    fAddressingNetwoCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AddressingNetworkContactsUserControl");
                }

                return fAddressingNetwoCustom;
            }
        }

        /// <summary>
        /// Gets Reference to ErrorConflictUsCustom
        /// </summary>
        public Custom ErrorConflictUsCustom
        {
            get
            {
                if (null == fErrorConflictUsCustom)
                {
                    fErrorConflictUsCustom = new Custom("ErrorConflictUsCustom", AddressingNetwoCustom);
                    fErrorConflictUsCustom.UIMap.Scope = UIASeachScope.Children;
                    fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mErrorConflictUserControl");
                    fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ErrorConflictUserControl");
                }

                return fErrorConflictUsCustom;
            }
        }

        /// <summary>
        /// Gets Reference to SearchMethodGroGroup
        /// </summary>
        public Group SearchMethodGroGroup
        {
            get
            {
                if (null == fSearchMethodGroGroup)
                {
                    fSearchMethodGroGroup = new Group("SearchMethodGroGroup", AddressingNetwoCustom);
                    fSearchMethodGroGroup.UIMap.Scope = UIASeachScope.Children;
                    fSearchMethodGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddrSearchMethodGroupBox");
                    fSearchMethodGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fSearchMethodGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search Method");
                }

                return fSearchMethodGroGroup;
            }
        }

        /// <summary>
        /// Gets Reference to SearchMethodTexText
        /// </summary>
        public Text SearchMethodTexText
        {
            get
            {
                if (null == fSearchMethodTexText)
                {
                    fSearchMethodTexText = new Text("SearchMethodTexText", SearchMethodGroGroup);
                    fSearchMethodTexText.UIMap.Scope = UIASeachScope.Children;
                    fSearchMethodTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSearchMethodTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search Method");
                }

                return fSearchMethodTexText;
            }
        }

        /// <summary>
        /// Gets Reference to QuickSearchFindRadioButton
        /// </summary>
        public RadioButton QuickSearchFindRadioButton
        {
            get
            {
                if (null == fQuickSearchFindRadioButton)
                {
                    fQuickSearchFindRadioButton = new RadioButton("QuickSearchFindRadioButton", SearchMethodGroGroup);
                    fQuickSearchFindRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fQuickSearchFindRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a4cd062e-2a81-441c-b0f4-212efcecacf7");
                    fQuickSearchFindRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    fQuickSearchFindRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Search (Find matches beginning with the search string.)");
                }

                return fQuickSearchFindRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to QuickSearchFindText
        /// </summary>
        public Text QuickSearchFindText
        {
            get
            {
                if (null == fQuickSearchFindText)
                {
                    fQuickSearchFindText = new Text("QuickSearchFindText", QuickSearchFindRadioButton);
                    fQuickSearchFindText.UIMap.Scope = UIASeachScope.Children;
                    fQuickSearchFindText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fQuickSearchFindText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Search (Find matches beginning with the search string.)");
                }

                return fQuickSearchFindText;
            }
        }

        /// <summary>
        /// Gets Reference to DetailedSearchFRadioButton
        /// </summary>
        public RadioButton DetailedSearchFRadioButton
        {
            get
            {
                if (null == fDetailedSearchFRadioButton)
                {
                    fDetailedSearchFRadioButton = new RadioButton("DetailedSearchFRadioButton", SearchMethodGroGroup);
                    fDetailedSearchFRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fDetailedSearchFRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84bc451d-eca7-4d72-adee-f6d05739d60e");
                    fDetailedSearchFRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    fDetailedSearchFRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Detailed Search (Find matches containing the search string.)");
                }

                return fDetailedSearchFRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to DetailedSearchFText
        /// </summary>
        public Text DetailedSearchFText
        {
            get
            {
                if (null == fDetailedSearchFText)
                {
                    fDetailedSearchFText = new Text("DetailedSearchFText", DetailedSearchFRadioButton);
                    fDetailedSearchFText.UIMap.Scope = UIASeachScope.Children;
                    fDetailedSearchFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDetailedSearchFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Detailed Search (Find matches containing the search string.)");
                }

                return fDetailedSearchFText;
            }
        }

        /// <summary>
        /// Gets Reference to PersonalContactGroup
        /// </summary>
        public Group PersonalContactGroup
        {
            get
            {
                if (null == fPersonalContactGroup)
                {
                    fPersonalContactGroup = new Group("PersonalContactGroup", AddressingNetwoCustom);
                    fPersonalContactGroup.UIMap.Scope = UIASeachScope.Children;
                    fPersonalContactGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddrPersonalContactsBox");
                    fPersonalContactGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fPersonalContactGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Personal Contacts");
                }

                return fPersonalContactGroup;
            }
        }

        /// <summary>
        /// Gets Reference to PersonalContactText
        /// </summary>
        public Text PersonalContactText
        {
            get
            {
                if (null == fPersonalContactText)
                {
                    fPersonalContactText = new Text("PersonalContactText", PersonalContactGroup);
                    fPersonalContactText.UIMap.Scope = UIASeachScope.Children;
                    fPersonalContactText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPersonalContactText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Personal Contacts");
                }

                return fPersonalContactText;
            }
        }

        /// <summary>
        /// Gets Reference to ThepersonalcontText
        /// </summary>
        public Text ThepersonalcontText
        {
            get
            {
                if (null == fThepersonalcontText)
                {
                    fThepersonalcontText = new Text("ThepersonalcontText", PersonalContactGroup);
                    fThepersonalcontText.UIMap.Scope = UIASeachScope.Children;
                    fThepersonalcontText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fThepersonalcontText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"The personal contacts for a user can be retrieved from a Microsoft Exchange Server if the user has a Personal Address Book (PAB) associated with his or her user account.");
                }

                return fThepersonalcontText;
            }
        }

        /// <summary>
        /// Gets Reference to EnablePersonalCCheckBox
        /// </summary>
        public CheckBox EnablePersonalCCheckBox
        {
            get
            {
                if (null == fEnablePersonalCCheckBox)
                {
                    fEnablePersonalCCheckBox = new CheckBox("EnablePersonalCCheckBox", PersonalContactGroup);
                    fEnablePersonalCCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEnablePersonalCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3edca417-7e14-47e9-8731-cf88146e55c7");
                    fEnablePersonalCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fEnablePersonalCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Personal Contacts (when users sign in to Windows at the device)");
                }

                return fEnablePersonalCCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to EnablePersonalCText
        /// </summary>
        public Text EnablePersonalCText
        {
            get
            {
                if (null == fEnablePersonalCText)
                {
                    fEnablePersonalCText = new Text("EnablePersonalCText", EnablePersonalCCheckBox);
                    fEnablePersonalCText.UIMap.Scope = UIASeachScope.Children;
                    fEnablePersonalCText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEnablePersonalCText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Personal Contacts (when users sign in to Windows at the device)");
                }

                return fEnablePersonalCText;
            }
        }

        /// <summary>
        /// Gets Reference to TestExchangeSerGroup
        /// </summary>
        public Group TestExchangeSerGroup
        {
            get
            {
                if (null == fTestExchangeSerGroup)
                {
                    fTestExchangeSerGroup = new Group("TestExchangeSerGroup", PersonalContactGroup);
                    fTestExchangeSerGroup.UIMap.Scope = UIASeachScope.Children;
                    fTestExchangeSerGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mTestPersonalContactsServerGroupBox");
                    fTestExchangeSerGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fTestExchangeSerGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test Exchange Server");
                }

                return fTestExchangeSerGroup;
            }
        }

        /// <summary>
        /// Gets Reference to TestExchangeSerText
        /// </summary>
        public Text TestExchangeSerText
        {
            get
            {
                if (null == fTestExchangeSerText)
                {
                    fTestExchangeSerText = new Text("TestExchangeSerText", TestExchangeSerGroup);
                    fTestExchangeSerText.UIMap.Scope = UIASeachScope.Children;
                    fTestExchangeSerText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTestExchangeSerText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test Exchange Server");
                }

                return fTestExchangeSerText;
            }
        }

        /// <summary>
        /// Gets Reference to WindowsDomainDup0Text
        /// </summary>
        public Text WindowsDomainDup0Text
        {
            get
            {
                if (null == fWindowsDomainDup0Text)
                {
                    fWindowsDomainDup0Text = new Text("WindowsDomainDup0Text", TestExchangeSerGroup);
                    fWindowsDomainDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fWindowsDomainDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fWindowsDomainDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Domain");
                }

                return fWindowsDomainDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to WindowsDomainTeText
        /// </summary>
        public Text WindowsDomainTeText
        {
            get
            {
                if (null == fWindowsDomainTeText)
                {
                    fWindowsDomainTeText = new Text("WindowsDomainTeText", WindowsDomainDup0Text);
                    fWindowsDomainTeText.UIMap.Scope = UIASeachScope.Children;
                    fWindowsDomainTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fWindowsDomainTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Domain");
                }

                return fWindowsDomainTeText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox0857B9D0Edit
        /// </summary>
        public Edit TextBox0857B9D0Edit
        {
            get
            {
                if (null == fTextBox0857B9D0Edit)
                {
                    fTextBox0857B9D0Edit = new Edit("TextBox0857B9D0Edit", TestExchangeSerGroup);
                    fTextBox0857B9D0Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox0857B9D0Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0857B9D0-3168-40aa-8702-9566638D2738");
                    fTextBox0857B9D0Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox0857B9D0Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup1Pane
        /// </summary>
        public Pane ScrollViewerPARDup1Pane
        {
            get
            {
                if (null == fScrollViewerPARDup1Pane)
                {
                    fScrollViewerPARDup1Pane = new Pane("ScrollViewerPARDup1Pane", TextBox0857B9D0Edit);
                    fScrollViewerPARDup1Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup1Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup1ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup1ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup1ScrollBar)
                {
                    fScrollBarVerticDup1ScrollBar = new ScrollBar("ScrollBarVerticDup1ScrollBar", ScrollViewerPARDup1Pane);
                    fScrollBarVerticDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup1ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup1ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup1ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup1ScrollBar)
                {
                    fScrollBarHorizoDup1ScrollBar = new ScrollBar("ScrollBarHorizoDup1ScrollBar", ScrollViewerPARDup1Pane);
                    fScrollBarHorizoDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup1ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameDup0Text
        /// </summary>
        public Text UsernameDup0Text
        {
            get
            {
                if (null == fUsernameDup0Text)
                {
                    fUsernameDup0Text = new Text("UsernameDup0Text", TestExchangeSerGroup);
                    fUsernameDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fUsernameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fUsernameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                }

                return fUsernameDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameTextBloDup0Text
        /// </summary>
        public Text UsernameTextBloDup0Text
        {
            get
            {
                if (null == fUsernameTextBloDup0Text)
                {
                    fUsernameTextBloDup0Text = new Text("UsernameTextBloDup0Text", UsernameDup0Text);
                    fUsernameTextBloDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fUsernameTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUsernameTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                }

                return fUsernameTextBloDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox9B0DA4ABEdit
        /// </summary>
        public Edit TextBox9B0DA4ABEdit
        {
            get
            {
                if (null == fTextBox9B0DA4ABEdit)
                {
                    fTextBox9B0DA4ABEdit = new Edit("TextBox9B0DA4ABEdit", TestExchangeSerGroup);
                    fTextBox9B0DA4ABEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox9B0DA4ABEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9B0DA4AB-57EF-42dc-ADFE-210DEA97A0D7");
                    fTextBox9B0DA4ABEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox9B0DA4ABEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup2Pane
        /// </summary>
        public Pane ScrollViewerPARDup2Pane
        {
            get
            {
                if (null == fScrollViewerPARDup2Pane)
                {
                    fScrollViewerPARDup2Pane = new Pane("ScrollViewerPARDup2Pane", TextBox9B0DA4ABEdit);
                    fScrollViewerPARDup2Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup2Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup2ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup2ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup2ScrollBar)
                {
                    fScrollBarVerticDup2ScrollBar = new ScrollBar("ScrollBarVerticDup2ScrollBar", ScrollViewerPARDup2Pane);
                    fScrollBarVerticDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup2ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup2ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup2ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup2ScrollBar)
                {
                    fScrollBarHorizoDup2ScrollBar = new ScrollBar("ScrollBarHorizoDup2ScrollBar", ScrollViewerPARDup2Pane);
                    fScrollBarHorizoDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup2ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordDup0Text
        /// </summary>
        public Text PasswordDup0Text
        {
            get
            {
                if (null == fPasswordDup0Text)
                {
                    fPasswordDup0Text = new Text("PasswordDup0Text", TestExchangeSerGroup);
                    fPasswordDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fPasswordDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fPasswordDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                }

                return fPasswordDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordTextBloDup0Text
        /// </summary>
        public Text PasswordTextBloDup0Text
        {
            get
            {
                if (null == fPasswordTextBloDup0Text)
                {
                    fPasswordTextBloDup0Text = new Text("PasswordTextBloDup0Text", PasswordDup0Text);
                    fPasswordTextBloDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fPasswordTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPasswordTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                }

                return fPasswordTextBloDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordBox6B3CEdit
        /// </summary>
        public Edit PasswordBox6B3CEdit
        {
            get
            {
                if (null == fPasswordBox6B3CEdit)
                {
                    fPasswordBox6B3CEdit = new Edit("PasswordBox6B3CEdit", TestExchangeSerGroup);
                    fPasswordBox6B3CEdit.UIMap.Scope = UIASeachScope.Children;
                    fPasswordBox6B3CEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6B3C5D9A-9C11-4c17-A2EE-0C3749EE142F");
                    fPasswordBox6B3CEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"PasswordBox");
                }

                return fPasswordBox6B3CEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup3Pane
        /// </summary>
        public Pane ScrollViewerPARDup3Pane
        {
            get
            {
                if (null == fScrollViewerPARDup3Pane)
                {
                    fScrollViewerPARDup3Pane = new Pane("ScrollViewerPARDup3Pane", PasswordBox6B3CEdit);
                    fScrollViewerPARDup3Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup3Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup3ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup3ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup3ScrollBar)
                {
                    fScrollBarVerticDup3ScrollBar = new ScrollBar("ScrollBarVerticDup3ScrollBar", ScrollViewerPARDup3Pane);
                    fScrollBarVerticDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup3ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup3ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup3ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup3ScrollBar)
                {
                    fScrollBarHorizoDup3ScrollBar = new ScrollBar("ScrollBarHorizoDup3ScrollBar", ScrollViewerPARDup3Pane);
                    fScrollBarHorizoDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup3ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to TestText
        /// </summary>
        public Text TestText
        {
            get
            {
                if (null == fTestText)
                {
                    fTestText = new Text("TestText", TestExchangeSerGroup);
                    fTestText.UIMap.Scope = UIASeachScope.Children;
                    fTestText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTestText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                }

                return fTestText;
            }
        }

        /// <summary>
        /// Gets Reference to TestTextBlockDup0Text
        /// </summary>
        public Text TestTextBlockDup0Text
        {
            get
            {
                if (null == fTestTextBlockDup0Text)
                {
                    fTestTextBlockDup0Text = new Text("TestTextBlockDup0Text", TestText);
                    fTestTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fTestTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTestTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                }

                return fTestTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxDE0C2350Edit
        /// </summary>
        public Edit TextBoxDE0C2350Edit
        {
            get
            {
                if (null == fTextBoxDE0C2350Edit)
                {
                    fTextBoxDE0C2350Edit = new Edit("TextBoxDE0C2350Edit", TestExchangeSerGroup);
                    fTextBoxDE0C2350Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxDE0C2350Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DE0C2350-09E4-49dd-91B0-3260FFCC1A6E");
                    fTextBoxDE0C2350Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxDE0C2350Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup4Pane
        /// </summary>
        public Pane ScrollViewerPARDup4Pane
        {
            get
            {
                if (null == fScrollViewerPARDup4Pane)
                {
                    fScrollViewerPARDup4Pane = new Pane("ScrollViewerPARDup4Pane", TextBoxDE0C2350Edit);
                    fScrollViewerPARDup4Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup4Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup4ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup4ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup4ScrollBar)
                {
                    fScrollBarVerticDup4ScrollBar = new ScrollBar("ScrollBarVerticDup4ScrollBar", ScrollViewerPARDup4Pane);
                    fScrollBarVerticDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup4ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup4ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup4ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup4ScrollBar)
                {
                    fScrollBarHorizoDup4ScrollBar = new ScrollBar("ScrollBarHorizoDup4ScrollBar", ScrollViewerPARDup4Pane);
                    fScrollBarHorizoDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup4ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to TestButtonA90BEButton
        /// </summary>
        public Button TestButtonA90BEButton
        {
            get
            {
                if (null == fTestButtonA90BEButton)
                {
                    fTestButtonA90BEButton = new Button("TestButtonA90BEButton", TestExchangeSerGroup);
                    fTestButtonA90BEButton.UIMap.Scope = UIASeachScope.Children;
                    fTestButtonA90BEButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A90BEE9C-966C-4bb4-9413-182793C513C6");
                    fTestButtonA90BEButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fTestButtonA90BEButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                }

                return fTestButtonA90BEButton;
            }
        }

        /// <summary>
        /// Gets Reference to TestTextBlockDup1Text
        /// </summary>
        public Text TestTextBlockDup1Text
        {
            get
            {
                if (null == fTestTextBlockDup1Text)
                {
                    fTestTextBlockDup1Text = new Text("TestTextBlockDup1Text", TestButtonA90BEButton);
                    fTestTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fTestTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTestTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                }

                return fTestTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPReplicationGroup
        /// </summary>
        public Group LDAPReplicationGroup
        {
            get
            {
                if (null == fLDAPReplicationGroup)
                {
                    fLDAPReplicationGroup = new Group("LDAPReplicationGroup", AddressingNetwoCustom);
                    fLDAPReplicationGroup.UIMap.Scope = UIASeachScope.Children;
                    fLDAPReplicationGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mNetworkContactsGroupBox");
                    fLDAPReplicationGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fLDAPReplicationGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Replication");
                }

                return fLDAPReplicationGroup;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPReplicationText
        /// </summary>
        public Text LDAPReplicationText
        {
            get
            {
                if (null == fLDAPReplicationText)
                {
                    fLDAPReplicationText = new Text("LDAPReplicationText", LDAPReplicationGroup);
                    fLDAPReplicationText.UIMap.Scope = UIASeachScope.Children;
                    fLDAPReplicationText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLDAPReplicationText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Replication");
                }

                return fLDAPReplicationText;
            }
        }

        /// <summary>
        /// Gets Reference to EnableNetworkCoCheckBox
        /// </summary>
        public CheckBox EnableNetworkCoCheckBox
        {
            get
            {
                if (null == fEnableNetworkCoCheckBox)
                {
                    fEnableNetworkCoCheckBox = new CheckBox("EnableNetworkCoCheckBox", LDAPReplicationGroup);
                    fEnableNetworkCoCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEnableNetworkCoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c771301b-e211-4fb2-809d-b4cb3bcd2067");
                    fEnableNetworkCoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fEnableNetworkCoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Network Contacts (use LDAP server)");
                }

                return fEnableNetworkCoCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to EnableNetworkCoText
        /// </summary>
        public Text EnableNetworkCoText
        {
            get
            {
                if (null == fEnableNetworkCoText)
                {
                    fEnableNetworkCoText = new Text("EnableNetworkCoText", EnableNetworkCoCheckBox);
                    fEnableNetworkCoText.UIMap.Scope = UIASeachScope.Children;
                    fEnableNetworkCoText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEnableNetworkCoText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Network Contacts (use LDAP server)");
                }

                return fEnableNetworkCoText;
            }
        }

        /// <summary>
        /// Gets Reference to ExpanderFD3555EGroup
        /// </summary>
        public Group ExpanderFD3555EGroup
        {
            get
            {
                if (null == fExpanderFD3555EGroup)
                {
                    fExpanderFD3555EGroup = new Group("ExpanderFD3555EGroup", LDAPReplicationGroup);
                    fExpanderFD3555EGroup.UIMap.Scope = UIASeachScope.Children;
                    fExpanderFD3555EGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FD3555EA-5DD8-4e8c-8013-4FBB6F98067E");
                    fExpanderFD3555EGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                }

                return fExpanderFD3555EGroup;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonHeaderSitDup0Button
        /// </summary>
        public Button ButtonHeaderSitDup0Button
        {
            get
            {
                if (null == fButtonHeaderSitDup0Button)
                {
                    fButtonHeaderSitDup0Button = new Button("ButtonHeaderSitDup0Button", ExpanderFD3555EGroup);
                    fButtonHeaderSitDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonHeaderSitDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                    fButtonHeaderSitDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonHeaderSitDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to NetworkDirectorGroup
        /// </summary>
        public Group NetworkDirectorGroup
        {
            get
            {
                if (null == fNetworkDirectorGroup)
                {
                    fNetworkDirectorGroup = new Group("NetworkDirectorGroup", LDAPReplicationGroup);
                    fNetworkDirectorGroup.UIMap.Scope = UIASeachScope.Children;
                    fNetworkDirectorGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mNetworkDirectoryServerGroupBox");
                    fNetworkDirectorGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fNetworkDirectorGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network Directory Server (LDAP)(Step 1)");
                }

                return fNetworkDirectorGroup;
            }
        }

        /// <summary>
        /// Gets Reference to NetworkDirectorText
        /// </summary>
        public Text NetworkDirectorText
        {
            get
            {
                if (null == fNetworkDirectorText)
                {
                    fNetworkDirectorText = new Text("NetworkDirectorText", NetworkDirectorGroup);
                    fNetworkDirectorText.UIMap.Scope = UIASeachScope.Children;
                    fNetworkDirectorText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNetworkDirectorText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network Directory Server (LDAP)(Step 1)");
                }

                return fNetworkDirectorText;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPServerAddreDup0Text
        /// </summary>
        public Text LDAPServerAddreDup0Text
        {
            get
            {
                if (null == fLDAPServerAddreDup0Text)
                {
                    fLDAPServerAddreDup0Text = new Text("LDAPServerAddreDup0Text", NetworkDirectorGroup);
                    fLDAPServerAddreDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fLDAPServerAddreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fLDAPServerAddreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Server Address");
                }

                return fLDAPServerAddreDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPServerAddreDup1Text
        /// </summary>
        public Text LDAPServerAddreDup1Text
        {
            get
            {
                if (null == fLDAPServerAddreDup1Text)
                {
                    fLDAPServerAddreDup1Text = new Text("LDAPServerAddreDup1Text", LDAPServerAddreDup0Text);
                    fLDAPServerAddreDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fLDAPServerAddreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLDAPServerAddreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Server Address");
                }

                return fLDAPServerAddreDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox858933a3Edit
        /// </summary>
        public Edit TextBox858933a3Edit
        {
            get
            {
                if (null == fTextBox858933a3Edit)
                {
                    fTextBox858933a3Edit = new Edit("TextBox858933a3Edit", NetworkDirectorGroup);
                    fTextBox858933a3Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox858933a3Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"858933a3-105f-40aa-8176-87a5d24120fa");
                    fTextBox858933a3Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox858933a3Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup5Pane
        /// </summary>
        public Pane ScrollViewerPARDup5Pane
        {
            get
            {
                if (null == fScrollViewerPARDup5Pane)
                {
                    fScrollViewerPARDup5Pane = new Pane("ScrollViewerPARDup5Pane", TextBox858933a3Edit);
                    fScrollViewerPARDup5Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup5Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup5ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup5ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup5ScrollBar)
                {
                    fScrollBarVerticDup5ScrollBar = new ScrollBar("ScrollBarVerticDup5ScrollBar", ScrollViewerPARDup5Pane);
                    fScrollBarVerticDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup5ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup5ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup5ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup5ScrollBar)
                {
                    fScrollBarHorizoDup5ScrollBar = new ScrollBar("ScrollBarHorizoDup5ScrollBar", ScrollViewerPARDup5Pane);
                    fScrollBarHorizoDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup5ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to AutoFindButton3Button
        /// </summary>
        public Button AutoFindButton3Button
        {
            get
            {
                if (null == fAutoFindButton3Button)
                {
                    fAutoFindButton3Button = new Button("AutoFindButton3Button", NetworkDirectorGroup);
                    fAutoFindButton3Button.UIMap.Scope = UIASeachScope.Children;
                    fAutoFindButton3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"319d911c-7b59-45c9-9d29-e1b648578eab");
                    fAutoFindButton3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAutoFindButton3Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                }

                return fAutoFindButton3Button;
            }
        }

        /// <summary>
        /// Gets Reference to AutoFindTextBloText
        /// </summary>
        public Text AutoFindTextBloText
        {
            get
            {
                if (null == fAutoFindTextBloText)
                {
                    fAutoFindTextBloText = new Text("AutoFindTextBloText", AutoFindButton3Button);
                    fAutoFindTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fAutoFindTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAutoFindTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                }

                return fAutoFindTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to HostnameorIPaddDup0Text
        /// </summary>
        public Text HostnameorIPaddDup0Text
        {
            get
            {
                if (null == fHostnameorIPaddDup0Text)
                {
                    fHostnameorIPaddDup0Text = new Text("HostnameorIPaddDup0Text", NetworkDirectorGroup);
                    fHostnameorIPaddDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fHostnameorIPaddDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fHostnameorIPaddDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname or IP address");
                }

                return fHostnameorIPaddDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to HostnameorIPaddDup1Text
        /// </summary>
        public Text HostnameorIPaddDup1Text
        {
            get
            {
                if (null == fHostnameorIPaddDup1Text)
                {
                    fHostnameorIPaddDup1Text = new Text("HostnameorIPaddDup1Text", HostnameorIPaddDup0Text);
                    fHostnameorIPaddDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fHostnameorIPaddDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHostnameorIPaddDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname or IP address");
                }

                return fHostnameorIPaddDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to PortText
        /// </summary>
        public Text PortText
        {
            get
            {
                if (null == fPortText)
                {
                    fPortText = new Text("PortText", NetworkDirectorGroup);
                    fPortText.UIMap.Scope = UIASeachScope.Children;
                    fPortText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fPortText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port");
                }

                return fPortText;
            }
        }

        /// <summary>
        /// Gets Reference to PortTextBlockText
        /// </summary>
        public Text PortTextBlockText
        {
            get
            {
                if (null == fPortTextBlockText)
                {
                    fPortTextBlockText = new Text("PortTextBlockText", PortText);
                    fPortTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fPortTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPortTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port");
                }

                return fPortTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to UseasecureconneCheckBox
        /// </summary>
        public CheckBox UseasecureconneCheckBox
        {
            get
            {
                if (null == fUseasecureconneCheckBox)
                {
                    fUseasecureconneCheckBox = new CheckBox("UseasecureconneCheckBox", NetworkDirectorGroup);
                    fUseasecureconneCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUseasecureconneCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f664dd2f-3a25-449d-adce-75616a828eef");
                    fUseasecureconneCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fUseasecureconneCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use a secure connection (SSL)");
                }

                return fUseasecureconneCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to UseasecureconneText
        /// </summary>
        public Text UseasecureconneText
        {
            get
            {
                if (null == fUseasecureconneText)
                {
                    fUseasecureconneText = new Text("UseasecureconneText", UseasecureconneCheckBox);
                    fUseasecureconneText.UIMap.Scope = UIASeachScope.Children;
                    fUseasecureconneText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUseasecureconneText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use a secure connection (SSL)");
                }

                return fUseasecureconneText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox79f22c3aEdit
        /// </summary>
        public Edit TextBox79f22c3aEdit
        {
            get
            {
                if (null == fTextBox79f22c3aEdit)
                {
                    fTextBox79f22c3aEdit = new Edit("TextBox79f22c3aEdit", NetworkDirectorGroup);
                    fTextBox79f22c3aEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox79f22c3aEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"79f22c3a-7b6e-4c21-96ce-aefbf8ca36aa");
                    fTextBox79f22c3aEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox79f22c3aEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup6Pane
        /// </summary>
        public Pane ScrollViewerPARDup6Pane
        {
            get
            {
                if (null == fScrollViewerPARDup6Pane)
                {
                    fScrollViewerPARDup6Pane = new Pane("ScrollViewerPARDup6Pane", TextBox79f22c3aEdit);
                    fScrollViewerPARDup6Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup6Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup6ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup6ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup6ScrollBar)
                {
                    fScrollBarVerticDup6ScrollBar = new ScrollBar("ScrollBarVerticDup6ScrollBar", ScrollViewerPARDup6Pane);
                    fScrollBarVerticDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup6ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup6ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup6ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup6ScrollBar)
                {
                    fScrollBarHorizoDup6ScrollBar = new ScrollBar("ScrollBarHorizoDup6ScrollBar", ScrollViewerPARDup6Pane);
                    fScrollBarHorizoDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup6ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to Port636isthedefDup0Text
        /// </summary>
        public Text Port636isthedefDup0Text
        {
            get
            {
                if (null == fPort636isthedefDup0Text)
                {
                    fPort636isthedefDup0Text = new Text("Port636isthedefDup0Text", NetworkDirectorGroup);
                    fPort636isthedefDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fPort636isthedefDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fPort636isthedefDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port 636 is the default for TLS or SSL");
                }

                return fPort636isthedefDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to Port636isthedefDup1Text
        /// </summary>
        public Text Port636isthedefDup1Text
        {
            get
            {
                if (null == fPort636isthedefDup1Text)
                {
                    fPort636isthedefDup1Text = new Text("Port636isthedefDup1Text", Port636isthedefDup0Text);
                    fPort636isthedefDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fPort636isthedefDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPort636isthedefDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port 636 is the default for TLS or SSL");
                }

                return fPort636isthedefDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ExpanderDD1518FGroup
        /// </summary>
        public Group ExpanderDD1518FGroup
        {
            get
            {
                if (null == fExpanderDD1518FGroup)
                {
                    fExpanderDD1518FGroup = new Group("ExpanderDD1518FGroup", LDAPReplicationGroup);
                    fExpanderDD1518FGroup.UIMap.Scope = UIASeachScope.Children;
                    fExpanderDD1518FGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DD1518F6-229D-4794-BC45-4911B62A8276");
                    fExpanderDD1518FGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                }

                return fExpanderDD1518FGroup;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonHeaderSitDup1Button
        /// </summary>
        public Button ButtonHeaderSitDup1Button
        {
            get
            {
                if (null == fButtonHeaderSitDup1Button)
                {
                    fButtonHeaderSitDup1Button = new Button("ButtonHeaderSitDup1Button", ExpanderDD1518FGroup);
                    fButtonHeaderSitDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonHeaderSitDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                    fButtonHeaderSitDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonHeaderSitDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to ServerAuthenticGroup
        /// </summary>
        public Group ServerAuthenticGroup
        {
            get
            {
                if (null == fServerAuthenticGroup)
                {
                    fServerAuthenticGroup = new Group("ServerAuthenticGroup", LDAPReplicationGroup);
                    fServerAuthenticGroup.UIMap.Scope = UIASeachScope.Children;
                    fServerAuthenticGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mServerAuthRequirementsGroupBox");
                    fServerAuthenticGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fServerAuthenticGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server Authentication Requirements(Step 2)");
                }

                return fServerAuthenticGroup;
            }
        }

        /// <summary>
        /// Gets Reference to ServerAuthenticText
        /// </summary>
        public Text ServerAuthenticText
        {
            get
            {
                if (null == fServerAuthenticText)
                {
                    fServerAuthenticText = new Text("ServerAuthenticText", ServerAuthenticGroup);
                    fServerAuthenticText.UIMap.Scope = UIASeachScope.Children;
                    fServerAuthenticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fServerAuthenticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server Authentication Requirements(Step 2)");
                }

                return fServerAuthenticText;
            }
        }

        /// <summary>
        /// Gets Reference to ServerdoesnotreRadioButton
        /// </summary>
        public RadioButton ServerdoesnotreRadioButton
        {
            get
            {
                if (null == fServerdoesnotreRadioButton)
                {
                    fServerdoesnotreRadioButton = new RadioButton("ServerdoesnotreRadioButton", ServerAuthenticGroup);
                    fServerdoesnotreRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fServerdoesnotreRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"836ec313-c8b4-46ce-ac74-630bc6e0753a");
                    fServerdoesnotreRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    fServerdoesnotreRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server does not require authentication");
                }

                return fServerdoesnotreRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to ServerdoesnotreText
        /// </summary>
        public Text ServerdoesnotreText
        {
            get
            {
                if (null == fServerdoesnotreText)
                {
                    fServerdoesnotreText = new Text("ServerdoesnotreText", ServerdoesnotreRadioButton);
                    fServerdoesnotreText.UIMap.Scope = UIASeachScope.Children;
                    fServerdoesnotreText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fServerdoesnotreText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server does not require authentication");
                }

                return fServerdoesnotreText;
            }
        }

        /// <summary>
        /// Gets Reference to ServerrequiresaRadioButton
        /// </summary>
        public RadioButton ServerrequiresaRadioButton
        {
            get
            {
                if (null == fServerrequiresaRadioButton)
                {
                    fServerrequiresaRadioButton = new RadioButton("ServerrequiresaRadioButton", ServerAuthenticGroup);
                    fServerrequiresaRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fServerrequiresaRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"58374bee-32a1-40ba-9456-9722d6064b3f");
                    fServerrequiresaRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    fServerrequiresaRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server requires authentication");
                }

                return fServerrequiresaRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to ServerrequiresaText
        /// </summary>
        public Text ServerrequiresaText
        {
            get
            {
                if (null == fServerrequiresaText)
                {
                    fServerrequiresaText = new Text("ServerrequiresaText", ServerrequiresaRadioButton);
                    fServerrequiresaText.UIMap.Scope = UIASeachScope.Children;
                    fServerrequiresaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fServerrequiresaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server requires authentication");
                }

                return fServerrequiresaText;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBox5cd52d1ComboBox
        /// </summary>
        public ComboBox ComboBox5cd52d1ComboBox
        {
            get
            {
                if (null == fComboBox5cd52d1ComboBox)
                {
                    fComboBox5cd52d1ComboBox = new ComboBox("ComboBox5cd52d1ComboBox", ServerAuthenticGroup);
                    fComboBox5cd52d1ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox5cd52d1ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5cd52d18-4bd7-4996-8fe1-acb2c3f2ff84");
                    fComboBox5cd52d1ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                }

                return fComboBox5cd52d1ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to WindowsorLDAPsiText
        /// </summary>
        public Text WindowsorLDAPsiText
        {
            get
            {
                if (null == fWindowsorLDAPsiText)
                {
                    fWindowsorLDAPsiText = new Text("WindowsorLDAPsiText", ServerAuthenticGroup);
                    fWindowsorLDAPsiText.UIMap.Scope = UIASeachScope.Children;
                    fWindowsorLDAPsiText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33ad2d95-602a-471f-b536-fbc90d4fa5c0");
                    fWindowsorLDAPsiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fWindowsorLDAPsiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows or LDAP sign in should be required for using the E-mail and Fax functions at the device to successfully query the LDAP server.");
                }

                return fWindowsorLDAPsiText;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameDup1Text
        /// </summary>
        public Text UsernameDup1Text
        {
            get
            {
                if (null == fUsernameDup1Text)
                {
                    fUsernameDup1Text = new Text("UsernameDup1Text", ServerAuthenticGroup);
                    fUsernameDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fUsernameDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fUsernameDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                }

                return fUsernameDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameTextBloDup1Text
        /// </summary>
        public Text UsernameTextBloDup1Text
        {
            get
            {
                if (null == fUsernameTextBloDup1Text)
                {
                    fUsernameTextBloDup1Text = new Text("UsernameTextBloDup1Text", UsernameDup1Text);
                    fUsernameTextBloDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fUsernameTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUsernameTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                }

                return fUsernameTextBloDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxb54cac9eEdit
        /// </summary>
        public Edit TextBoxb54cac9eEdit
        {
            get
            {
                if (null == fTextBoxb54cac9eEdit)
                {
                    fTextBoxb54cac9eEdit = new Edit("TextBoxb54cac9eEdit", ServerAuthenticGroup);
                    fTextBoxb54cac9eEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxb54cac9eEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b54cac9e-8c97-45bc-9e83-a304dfd477fb");
                    fTextBoxb54cac9eEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxb54cac9eEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup7Pane
        /// </summary>
        public Pane ScrollViewerPARDup7Pane
        {
            get
            {
                if (null == fScrollViewerPARDup7Pane)
                {
                    fScrollViewerPARDup7Pane = new Pane("ScrollViewerPARDup7Pane", TextBoxb54cac9eEdit);
                    fScrollViewerPARDup7Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup7Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup7Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup7Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup7ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup7ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup7ScrollBar)
                {
                    fScrollBarVerticDup7ScrollBar = new ScrollBar("ScrollBarVerticDup7ScrollBar", ScrollViewerPARDup7Pane);
                    fScrollBarVerticDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup7ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup7ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup7ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup7ScrollBar)
                {
                    fScrollBarHorizoDup7ScrollBar = new ScrollBar("ScrollBarHorizoDup7ScrollBar", ScrollViewerPARDup7Pane);
                    fScrollBarHorizoDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup7ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordDup1Text
        /// </summary>
        public Text PasswordDup1Text
        {
            get
            {
                if (null == fPasswordDup1Text)
                {
                    fPasswordDup1Text = new Text("PasswordDup1Text", ServerAuthenticGroup);
                    fPasswordDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fPasswordDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fPasswordDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                }

                return fPasswordDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordTextBloDup1Text
        /// </summary>
        public Text PasswordTextBloDup1Text
        {
            get
            {
                if (null == fPasswordTextBloDup1Text)
                {
                    fPasswordTextBloDup1Text = new Text("PasswordTextBloDup1Text", PasswordDup1Text);
                    fPasswordTextBloDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fPasswordTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPasswordTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                }

                return fPasswordTextBloDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordBox8ed9Edit
        /// </summary>
        public Edit PasswordBox8ed9Edit
        {
            get
            {
                if (null == fPasswordBox8ed9Edit)
                {
                    fPasswordBox8ed9Edit = new Edit("PasswordBox8ed9Edit", ServerAuthenticGroup);
                    fPasswordBox8ed9Edit.UIMap.Scope = UIASeachScope.Children;
                    fPasswordBox8ed9Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8ed98c8c-05d8-4392-be81-d6165bab46cd");
                    fPasswordBox8ed9Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"PasswordBox");
                }

                return fPasswordBox8ed9Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup8Pane
        /// </summary>
        public Pane ScrollViewerPARDup8Pane
        {
            get
            {
                if (null == fScrollViewerPARDup8Pane)
                {
                    fScrollViewerPARDup8Pane = new Pane("ScrollViewerPARDup8Pane", PasswordBox8ed9Edit);
                    fScrollViewerPARDup8Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup8Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup8Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup8Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup8ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup8ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup8ScrollBar)
                {
                    fScrollBarVerticDup8ScrollBar = new ScrollBar("ScrollBarVerticDup8ScrollBar", ScrollViewerPARDup8Pane);
                    fScrollBarVerticDup8ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup8ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup8ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup8ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup8ScrollBar)
                {
                    fScrollBarHorizoDup8ScrollBar = new ScrollBar("ScrollBarHorizoDup8ScrollBar", ScrollViewerPARDup8Pane);
                    fScrollBarHorizoDup8ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup8ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to WindowsDomainDup1Text
        /// </summary>
        public Text WindowsDomainDup1Text
        {
            get
            {
                if (null == fWindowsDomainDup1Text)
                {
                    fWindowsDomainDup1Text = new Text("WindowsDomainDup1Text", ServerAuthenticGroup);
                    fWindowsDomainDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fWindowsDomainDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fWindowsDomainDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Domain");
                }

                return fWindowsDomainDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox1cce79f4Edit
        /// </summary>
        public Edit TextBox1cce79f4Edit
        {
            get
            {
                if (null == fTextBox1cce79f4Edit)
                {
                    fTextBox1cce79f4Edit = new Edit("TextBox1cce79f4Edit", ServerAuthenticGroup);
                    fTextBox1cce79f4Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox1cce79f4Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1cce79f4-4405-454b-8b93-73914a8c1e45");
                    fTextBox1cce79f4Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox1cce79f4Edit;
            }
        }

        /// <summary>
        /// Gets Reference to KerberosDefaultText
        /// </summary>
        public Text KerberosDefaultText
        {
            get
            {
                if (null == fKerberosDefaultText)
                {
                    fKerberosDefaultText = new Text("KerberosDefaultText", ServerAuthenticGroup);
                    fKerberosDefaultText.UIMap.Scope = UIASeachScope.Children;
                    fKerberosDefaultText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fKerberosDefaultText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Kerberos Default Realm");
                }

                return fKerberosDefaultText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox757e1b31Edit
        /// </summary>
        public Edit TextBox757e1b31Edit
        {
            get
            {
                if (null == fTextBox757e1b31Edit)
                {
                    fTextBox757e1b31Edit = new Edit("TextBox757e1b31Edit", ServerAuthenticGroup);
                    fTextBox757e1b31Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox757e1b31Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"757e1b31-908c-481f-8d51-53d856ee65e8");
                    fTextBox757e1b31Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox757e1b31Edit;
            }
        }

        /// <summary>
        /// Gets Reference to KerberosServerHText
        /// </summary>
        public Text KerberosServerHText
        {
            get
            {
                if (null == fKerberosServerHText)
                {
                    fKerberosServerHText = new Text("KerberosServerHText", ServerAuthenticGroup);
                    fKerberosServerHText.UIMap.Scope = UIASeachScope.Children;
                    fKerberosServerHText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fKerberosServerHText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Kerberos Server Hostname");
                }

                return fKerberosServerHText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxe5cfa172Edit
        /// </summary>
        public Edit TextBoxe5cfa172Edit
        {
            get
            {
                if (null == fTextBoxe5cfa172Edit)
                {
                    fTextBoxe5cfa172Edit = new Edit("TextBoxe5cfa172Edit", ServerAuthenticGroup);
                    fTextBoxe5cfa172Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxe5cfa172Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e5cfa172-a41a-4d1f-9605-5bb415448a80");
                    fTextBoxe5cfa172Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxe5cfa172Edit;
            }
        }

        /// <summary>
        /// Gets Reference to KerberosServerPText
        /// </summary>
        public Text KerberosServerPText
        {
            get
            {
                if (null == fKerberosServerPText)
                {
                    fKerberosServerPText = new Text("KerberosServerPText", ServerAuthenticGroup);
                    fKerberosServerPText.UIMap.Scope = UIASeachScope.Children;
                    fKerberosServerPText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fKerberosServerPText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Kerberos Server Port");
                }

                return fKerberosServerPText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxf986abfaEdit
        /// </summary>
        public Edit TextBoxf986abfaEdit
        {
            get
            {
                if (null == fTextBoxf986abfaEdit)
                {
                    fTextBoxf986abfaEdit = new Edit("TextBoxf986abfaEdit", ServerAuthenticGroup);
                    fTextBoxf986abfaEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxf986abfaEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f986abfa-5563-459f-a15c-cd0c9ba2ffdf");
                    fTextBoxf986abfaEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxf986abfaEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ExpanderB7151C3Group
        /// </summary>
        public Group ExpanderB7151C3Group
        {
            get
            {
                if (null == fExpanderB7151C3Group)
                {
                    fExpanderB7151C3Group = new Group("ExpanderB7151C3Group", LDAPReplicationGroup);
                    fExpanderB7151C3Group.UIMap.Scope = UIASeachScope.Children;
                    fExpanderB7151C3Group.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B7151C32-813E-49fe-A052-F101BABC03F7");
                    fExpanderB7151C3Group.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                }

                return fExpanderB7151C3Group;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonHeaderSitDup2Button
        /// </summary>
        public Button ButtonHeaderSitDup2Button
        {
            get
            {
                if (null == fButtonHeaderSitDup2Button)
                {
                    fButtonHeaderSitDup2Button = new Button("ButtonHeaderSitDup2Button", ExpanderB7151C3Group);
                    fButtonHeaderSitDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonHeaderSitDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                    fButtonHeaderSitDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonHeaderSitDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPDatabaseSeaGroup
        /// </summary>
        public Group LDAPDatabaseSeaGroup
        {
            get
            {
                if (null == fLDAPDatabaseSeaGroup)
                {
                    fLDAPDatabaseSeaGroup = new Group("LDAPDatabaseSeaGroup", LDAPReplicationGroup);
                    fLDAPDatabaseSeaGroup.UIMap.Scope = UIASeachScope.Children;
                    fLDAPDatabaseSeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mLDAPDbSearchSettingsGroupBox");
                    fLDAPDatabaseSeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fLDAPDatabaseSeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Database Search Settings(Step 3)");
                }

                return fLDAPDatabaseSeaGroup;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPDatabaseSeaText
        /// </summary>
        public Text LDAPDatabaseSeaText
        {
            get
            {
                if (null == fLDAPDatabaseSeaText)
                {
                    fLDAPDatabaseSeaText = new Text("LDAPDatabaseSeaText", LDAPDatabaseSeaGroup);
                    fLDAPDatabaseSeaText.UIMap.Scope = UIASeachScope.Children;
                    fLDAPDatabaseSeaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLDAPDatabaseSeaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Database Search Settings(Step 3)");
                }

                return fLDAPDatabaseSeaText;
            }
        }

        /// <summary>
        /// Gets Reference to PathtostartsearText
        /// </summary>
        public Text PathtostartsearText
        {
            get
            {
                if (null == fPathtostartsearText)
                {
                    fPathtostartsearText = new Text("PathtostartsearText", LDAPDatabaseSeaGroup);
                    fPathtostartsearText.UIMap.Scope = UIASeachScope.Children;
                    fPathtostartsearText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fPathtostartsearText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Path to start search (BaseDN, Search Root):");
                }

                return fPathtostartsearText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox2e2cfbd5Edit
        /// </summary>
        public Edit TextBox2e2cfbd5Edit
        {
            get
            {
                if (null == fTextBox2e2cfbd5Edit)
                {
                    fTextBox2e2cfbd5Edit = new Edit("TextBox2e2cfbd5Edit", LDAPDatabaseSeaGroup);
                    fTextBox2e2cfbd5Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox2e2cfbd5Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2e2cfbd5-5072-4c10-b4a7-bb6d3e1e7c34");
                    fTextBox2e2cfbd5Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox2e2cfbd5Edit;
            }
        }

        /// <summary>
        /// Gets Reference to AutoFindButton4Button
        /// </summary>
        public Button AutoFindButton4Button
        {
            get
            {
                if (null == fAutoFindButton4Button)
                {
                    fAutoFindButton4Button = new Button("AutoFindButton4Button", LDAPDatabaseSeaGroup);
                    fAutoFindButton4Button.UIMap.Scope = UIASeachScope.Children;
                    fAutoFindButton4Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"44a89ec4-7799-4c0c-a4b7-c5d8fd9a005d");
                    fAutoFindButton4Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAutoFindButton4Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                }

                return fAutoFindButton4Button;
            }
        }

        /// <summary>
        /// Gets Reference to SourceforAttribText
        /// </summary>
        public Text SourceforAttribText
        {
            get
            {
                if (null == fSourceforAttribText)
                {
                    fSourceforAttribText = new Text("SourceforAttribText", LDAPDatabaseSeaGroup);
                    fSourceforAttribText.UIMap.Scope = UIASeachScope.Children;
                    fSourceforAttribText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSourceforAttribText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Source for Attribute Names:");
                }

                return fSourceforAttribText;
            }
        }

        /// <summary>
        /// Gets Reference to UseActiveDirectRadioButton
        /// </summary>
        public RadioButton UseActiveDirectRadioButton
        {
            get
            {
                if (null == fUseActiveDirectRadioButton)
                {
                    fUseActiveDirectRadioButton = new RadioButton("UseActiveDirectRadioButton", LDAPDatabaseSeaGroup);
                    fUseActiveDirectRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fUseActiveDirectRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6b6281c0-c178-4b4c-ba63-1a672886cb81");
                    fUseActiveDirectRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    fUseActiveDirectRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use Active Directory Default");
                }

                return fUseActiveDirectRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to UseExchange55DeRadioButton
        /// </summary>
        public RadioButton UseExchange55DeRadioButton
        {
            get
            {
                if (null == fUseExchange55DeRadioButton)
                {
                    fUseExchange55DeRadioButton = new RadioButton("UseExchange55DeRadioButton", LDAPDatabaseSeaGroup);
                    fUseExchange55DeRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fUseExchange55DeRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a1ce7515-9374-451a-81b9-fdb7f597eeff");
                    fUseExchange55DeRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    fUseExchange55DeRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use Exchange 5.5 Default");
                }

                return fUseExchange55DeRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to UseCustomAttribRadioButton
        /// </summary>
        public RadioButton UseCustomAttribRadioButton
        {
            get
            {
                if (null == fUseCustomAttribRadioButton)
                {
                    fUseCustomAttribRadioButton = new RadioButton("UseCustomAttribRadioButton", LDAPDatabaseSeaGroup);
                    fUseCustomAttribRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fUseCustomAttribRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"dc1b3180-3ab6-48b5-9c29-d9ecc10e5cbf");
                    fUseCustomAttribRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    fUseCustomAttribRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use Custom Attributes");
                }

                return fUseCustomAttribRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to AutoFindButton8Button
        /// </summary>
        public Button AutoFindButton8Button
        {
            get
            {
                if (null == fAutoFindButton8Button)
                {
                    fAutoFindButton8Button = new Button("AutoFindButton8Button", LDAPDatabaseSeaGroup);
                    fAutoFindButton8Button.UIMap.Scope = UIASeachScope.Children;
                    fAutoFindButton8Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8ac869f3-a8e9-4be1-ad80-67cf52953b0f");
                    fAutoFindButton8Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAutoFindButton8Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                }

                return fAutoFindButton8Button;
            }
        }

        /// <summary>
        /// Gets Reference to MatchtheRecipieText
        /// </summary>
        public Text MatchtheRecipieText
        {
            get
            {
                if (null == fMatchtheRecipieText)
                {
                    fMatchtheRecipieText = new Text("MatchtheRecipieText", LDAPDatabaseSeaGroup);
                    fMatchtheRecipieText.UIMap.Scope = UIASeachScope.Children;
                    fMatchtheRecipieText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fMatchtheRecipieText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Match the Recipient's Name with this attribute:");
                }

                return fMatchtheRecipieText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox0fd71265Edit
        /// </summary>
        public Edit TextBox0fd71265Edit
        {
            get
            {
                if (null == fTextBox0fd71265Edit)
                {
                    fTextBox0fd71265Edit = new Edit("TextBox0fd71265Edit", LDAPDatabaseSeaGroup);
                    fTextBox0fd71265Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox0fd71265Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0fd71265-6291-4b7b-871a-a52479d12671");
                    fTextBox0fd71265Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox0fd71265Edit;
            }
        }

        /// <summary>
        /// Gets Reference to AttributeNamefoDup0Text
        /// </summary>
        public Text AttributeNamefoDup0Text
        {
            get
            {
                if (null == fAttributeNamefoDup0Text)
                {
                    fAttributeNamefoDup0Text = new Text("AttributeNamefoDup0Text", LDAPDatabaseSeaGroup);
                    fAttributeNamefoDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAttributeNamefoDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAttributeNamefoDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Attribute Name for Recipient's E-mail Address:");
                }

                return fAttributeNamefoDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxc34b5023Edit
        /// </summary>
        public Edit TextBoxc34b5023Edit
        {
            get
            {
                if (null == fTextBoxc34b5023Edit)
                {
                    fTextBoxc34b5023Edit = new Edit("TextBoxc34b5023Edit", LDAPDatabaseSeaGroup);
                    fTextBoxc34b5023Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxc34b5023Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c34b5023-914c-4e04-825f-d3beb507eaea");
                    fTextBoxc34b5023Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxc34b5023Edit;
            }
        }

        /// <summary>
        /// Gets Reference to AttributeNamefoDup1Text
        /// </summary>
        public Text AttributeNamefoDup1Text
        {
            get
            {
                if (null == fAttributeNamefoDup1Text)
                {
                    fAttributeNamefoDup1Text = new Text("AttributeNamefoDup1Text", LDAPDatabaseSeaGroup);
                    fAttributeNamefoDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAttributeNamefoDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAttributeNamefoDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Attribute Name for Recipient's Fax Number:");
                }

                return fAttributeNamefoDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox3a6d11c5Edit
        /// </summary>
        public Edit TextBox3a6d11c5Edit
        {
            get
            {
                if (null == fTextBox3a6d11c5Edit)
                {
                    fTextBox3a6d11c5Edit = new Edit("TextBox3a6d11c5Edit", LDAPDatabaseSeaGroup);
                    fTextBox3a6d11c5Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox3a6d11c5Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3a6d11c5-2db5-478b-841b-4cff1eec20ce");
                    fTextBox3a6d11c5Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox3a6d11c5Edit;
            }
        }

        /// <summary>
        /// Gets Reference to AdvancedSearchOGroup
        /// </summary>
        public Group AdvancedSearchOGroup
        {
            get
            {
                if (null == fAdvancedSearchOGroup)
                {
                    fAdvancedSearchOGroup = new Group("AdvancedSearchOGroup", LDAPDatabaseSeaGroup);
                    fAdvancedSearchOGroup.UIMap.Scope = UIASeachScope.Children;
                    fAdvancedSearchOGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAdvancedSearchOptionsGroupBox");
                    fAdvancedSearchOGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fAdvancedSearchOGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Advanced Search Options");
                }

                return fAdvancedSearchOGroup;
            }
        }

        /// <summary>
        /// Gets Reference to Expander0D39A3CGroup
        /// </summary>
        public Group Expander0D39A3CGroup
        {
            get
            {
                if (null == fExpander0D39A3CGroup)
                {
                    fExpander0D39A3CGroup = new Group("Expander0D39A3CGroup", LDAPReplicationGroup);
                    fExpander0D39A3CGroup.UIMap.Scope = UIASeachScope.Children;
                    fExpander0D39A3CGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0D39A3C1-0FEF-4c04-A306-85CAC8347DF0");
                    fExpander0D39A3CGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                }

                return fExpander0D39A3CGroup;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonHeaderSitDup3Button
        /// </summary>
        public Button ButtonHeaderSitDup3Button
        {
            get
            {
                if (null == fButtonHeaderSitDup3Button)
                {
                    fButtonHeaderSitDup3Button = new Button("ButtonHeaderSitDup3Button", Expander0D39A3CGroup);
                    fButtonHeaderSitDup3Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonHeaderSitDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                    fButtonHeaderSitDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonHeaderSitDup3Button;
            }
        }

        /// <summary>
        /// Gets Reference to TestforLDAPRetrGroup
        /// </summary>
        public Group TestforLDAPRetrGroup
        {
            get
            {
                if (null == fTestforLDAPRetrGroup)
                {
                    fTestforLDAPRetrGroup = new Group("TestforLDAPRetrGroup", LDAPReplicationGroup);
                    fTestforLDAPRetrGroup.UIMap.Scope = UIASeachScope.Children;
                    fTestforLDAPRetrGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mTestLDAPRetrievalGroupBox");
                    fTestforLDAPRetrGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fTestforLDAPRetrGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test for LDAP Retrieval(Step 4)");
                }

                return fTestforLDAPRetrGroup;
            }
        }

        /// <summary>
        /// Gets Reference to TestforLDAPRetrText
        /// </summary>
        public Text TestforLDAPRetrText
        {
            get
            {
                if (null == fTestforLDAPRetrText)
                {
                    fTestforLDAPRetrText = new Text("TestforLDAPRetrText", TestforLDAPRetrGroup);
                    fTestforLDAPRetrText.UIMap.Scope = UIASeachScope.Children;
                    fTestforLDAPRetrText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTestforLDAPRetrText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test for LDAP Retrieval(Step 4)");
                }

                return fTestforLDAPRetrText;
            }
        }

        /// <summary>
        /// Gets Reference to TestTextmTestLaText
        /// </summary>
        public Text TestTextmTestLaText
        {
            get
            {
                if (null == fTestTextmTestLaText)
                {
                    fTestTextmTestLaText = new Text("TestTextmTestLaText", TestforLDAPRetrGroup);
                    fTestTextmTestLaText.UIMap.Scope = UIASeachScope.Children;
                    fTestTextmTestLaText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mTestLabel");
                    fTestTextmTestLaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTestTextmTestLaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                }

                return fTestTextmTestLaText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxf206c2f6Edit
        /// </summary>
        public Edit TextBoxf206c2f6Edit
        {
            get
            {
                if (null == fTextBoxf206c2f6Edit)
                {
                    fTextBoxf206c2f6Edit = new Edit("TextBoxf206c2f6Edit", TestforLDAPRetrGroup);
                    fTextBoxf206c2f6Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxf206c2f6Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f206c2f6-8a80-4199-9adb-544294a0699d");
                    fTextBoxf206c2f6Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxf206c2f6Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TestButtone6d54Button
        /// </summary>
        public Button TestButtone6d54Button
        {
            get
            {
                if (null == fTestButtone6d54Button)
                {
                    fTestButtone6d54Button = new Button("TestButtone6d54Button", TestforLDAPRetrGroup);
                    fTestButtone6d54Button.UIMap.Scope = UIASeachScope.Children;
                    fTestButtone6d54Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e6d54317-fa20-4941-b1af-7c31d70663bb");
                    fTestButtone6d54Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fTestButtone6d54Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                }

                return fTestButtone6d54Button;
            }
        }

        /// <summary>
        /// Gets Reference to Expander5DC4D6AGroup
        /// </summary>
        public Group Expander5DC4D6AGroup
        {
            get
            {
                if (null == fExpander5DC4D6AGroup)
                {
                    fExpander5DC4D6AGroup = new Group("Expander5DC4D6AGroup", LDAPReplicationGroup);
                    fExpander5DC4D6AGroup.UIMap.Scope = UIASeachScope.Children;
                    fExpander5DC4D6AGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5DC4D6A6-7B07-4911-859F-70566AF3C7B4");
                    fExpander5DC4D6AGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                }

                return fExpander5DC4D6AGroup;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonHeaderSitDup4Button
        /// </summary>
        public Button ButtonHeaderSitDup4Button
        {
            get
            {
                if (null == fButtonHeaderSitDup4Button)
                {
                    fButtonHeaderSitDup4Button = new Button("ButtonHeaderSitDup4Button", Expander5DC4D6AGroup);
                    fButtonHeaderSitDup4Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonHeaderSitDup4Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                    fButtonHeaderSitDup4Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonHeaderSitDup4Button;
            }
        }

        /// <summary>
        /// Gets Reference to SyncScheduleSteGroup
        /// </summary>
        public Group SyncScheduleSteGroup
        {
            get
            {
                if (null == fSyncScheduleSteGroup)
                {
                    fSyncScheduleSteGroup = new Group("SyncScheduleSteGroup", LDAPReplicationGroup);
                    fSyncScheduleSteGroup.UIMap.Scope = UIASeachScope.Children;
                    fSyncScheduleSteGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"fa9b3876-67dc-436a-8dc9-2660331e162a");
                    fSyncScheduleSteGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fSyncScheduleSteGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Schedule (Step 5)");
                }

                return fSyncScheduleSteGroup;
            }
        }

        /// <summary>
        /// Gets Reference to SyncScheduleSteText
        /// </summary>
        public Text SyncScheduleSteText
        {
            get
            {
                if (null == fSyncScheduleSteText)
                {
                    fSyncScheduleSteText = new Text("SyncScheduleSteText", SyncScheduleSteGroup);
                    fSyncScheduleSteText.UIMap.Scope = UIASeachScope.Children;
                    fSyncScheduleSteText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSyncScheduleSteText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Schedule (Step 5)");
                }

                return fSyncScheduleSteText;
            }
        }

        /// <summary>
        /// Gets Reference to SyncText
        /// </summary>
        public Text SyncText
        {
            get
            {
                if (null == fSyncText)
                {
                    fSyncText = new Text("SyncText", SyncScheduleSteGroup);
                    fSyncText.UIMap.Scope = UIASeachScope.Children;
                    fSyncText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSyncText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync");
                }

                return fSyncText;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBox1138dacComboBox
        /// </summary>
        public ComboBox ComboBox1138dacComboBox
        {
            get
            {
                if (null == fComboBox1138dacComboBox)
                {
                    fComboBox1138dacComboBox = new ComboBox("ComboBox1138dacComboBox", SyncScheduleSteGroup);
                    fComboBox1138dacComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox1138dacComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1138dac4-8bb2-4887-b0e8-95433a89ea1c");
                    fComboBox1138dacComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                }

                return fComboBox1138dacComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SyncTimeText
        /// </summary>
        public Text SyncTimeText
        {
            get
            {
                if (null == fSyncTimeText)
                {
                    fSyncTimeText = new Text("SyncTimeText", SyncScheduleSteGroup);
                    fSyncTimeText.UIMap.Scope = UIASeachScope.Children;
                    fSyncTimeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSyncTimeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Time");
                }

                return fSyncTimeText;
            }
        }

        /// <summary>
        /// Gets Reference to WindowsFormsHosDup0Pane
        /// </summary>
        public Pane WindowsFormsHosDup0Pane
        {
            get
            {
                if (null == fWindowsFormsHosDup0Pane)
                {
                    fWindowsFormsHosDup0Pane = new Pane("WindowsFormsHosDup0Pane", SyncScheduleSteGroup);
                    fWindowsFormsHosDup0Pane.UIMap.Scope = UIASeachScope.Children;
                    fWindowsFormsHosDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"198A4208-3F36-4e41-B168-4E62D5EC4D4B");
                    fWindowsFormsHosDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WindowsFormsHost");
                }

                return fWindowsFormsHosDup0Pane;
            }
        }

        /// <summary>
        /// Gets Reference to A24HourCheckBoxCheckBox
        /// </summary>
        public CheckBox A24HourCheckBoxCheckBox
        {
            get
            {
                if (null == fA24HourCheckBoxCheckBox)
                {
                    fA24HourCheckBoxCheckBox = new CheckBox("A24HourCheckBoxCheckBox", SyncScheduleSteGroup);
                    fA24HourCheckBoxCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fA24HourCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FE2BA56A-C03F-4A3D-8C14-2FB318C8B484");
                    fA24HourCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fA24HourCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"24 Hour");
                }

                return fA24HourCheckBoxCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to OnlysyncMondayFCheckBox
        /// </summary>
        public CheckBox OnlysyncMondayFCheckBox
        {
            get
            {
                if (null == fOnlysyncMondayFCheckBox)
                {
                    fOnlysyncMondayFCheckBox = new CheckBox("OnlysyncMondayFCheckBox", SyncScheduleSteGroup);
                    fOnlysyncMondayFCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fOnlysyncMondayFCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"03f7a8b7-4768-490b-a21f-a01b9de28e15");
                    fOnlysyncMondayFCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fOnlysyncMondayFCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Only sync Monday-Friday");
                }

                return fOnlysyncMondayFCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to SundayCheckBox2CheckBox
        /// </summary>
        public CheckBox SundayCheckBox2CheckBox
        {
            get
            {
                if (null == fSundayCheckBox2CheckBox)
                {
                    fSundayCheckBox2CheckBox = new CheckBox("SundayCheckBox2CheckBox", SyncScheduleSteGroup);
                    fSundayCheckBox2CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fSundayCheckBox2CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"21015E67-271D-411A-B583-D32A3EA90A84");
                    fSundayCheckBox2CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fSundayCheckBox2CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sunday");
                }

                return fSundayCheckBox2CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to MondayCheckBoxCCheckBox
        /// </summary>
        public CheckBox MondayCheckBoxCCheckBox
        {
            get
            {
                if (null == fMondayCheckBoxCCheckBox)
                {
                    fMondayCheckBoxCCheckBox = new CheckBox("MondayCheckBoxCCheckBox", SyncScheduleSteGroup);
                    fMondayCheckBoxCCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fMondayCheckBoxCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CD525CFE-A786-466E-A2BE-7E74FF43F7D1");
                    fMondayCheckBoxCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fMondayCheckBoxCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Monday");
                }

                return fMondayCheckBoxCCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to TuesdayCheckBoxCheckBox
        /// </summary>
        public CheckBox TuesdayCheckBoxCheckBox
        {
            get
            {
                if (null == fTuesdayCheckBoxCheckBox)
                {
                    fTuesdayCheckBoxCheckBox = new CheckBox("TuesdayCheckBoxCheckBox", SyncScheduleSteGroup);
                    fTuesdayCheckBoxCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fTuesdayCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C4BCB1F5-10E3-4CFD-9931-4815038EC189");
                    fTuesdayCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fTuesdayCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Tuesday");
                }

                return fTuesdayCheckBoxCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to WednesdayCheckBCheckBox
        /// </summary>
        public CheckBox WednesdayCheckBCheckBox
        {
            get
            {
                if (null == fWednesdayCheckBCheckBox)
                {
                    fWednesdayCheckBCheckBox = new CheckBox("WednesdayCheckBCheckBox", SyncScheduleSteGroup);
                    fWednesdayCheckBCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fWednesdayCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"40923D30-4F6C-4459-9162-D8BCBAD792DF");
                    fWednesdayCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fWednesdayCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Wednesday");
                }

                return fWednesdayCheckBCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ThursdayCheckBoCheckBox
        /// </summary>
        public CheckBox ThursdayCheckBoCheckBox
        {
            get
            {
                if (null == fThursdayCheckBoCheckBox)
                {
                    fThursdayCheckBoCheckBox = new CheckBox("ThursdayCheckBoCheckBox", SyncScheduleSteGroup);
                    fThursdayCheckBoCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fThursdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4CE33CD9-3FCB-495D-A085-7B85D34BAE85");
                    fThursdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fThursdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Thursday");
                }

                return fThursdayCheckBoCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to FridayCheckBoxDCheckBox
        /// </summary>
        public CheckBox FridayCheckBoxDCheckBox
        {
            get
            {
                if (null == fFridayCheckBoxDCheckBox)
                {
                    fFridayCheckBoxDCheckBox = new CheckBox("FridayCheckBoxDCheckBox", SyncScheduleSteGroup);
                    fFridayCheckBoxDCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fFridayCheckBoxDCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DDE646C4-B289-483A-BF8C-7344D6E9324C");
                    fFridayCheckBoxDCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fFridayCheckBoxDCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Friday");
                }

                return fFridayCheckBoxDCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to SaturdayCheckBoCheckBox
        /// </summary>
        public CheckBox SaturdayCheckBoCheckBox
        {
            get
            {
                if (null == fSaturdayCheckBoCheckBox)
                {
                    fSaturdayCheckBoCheckBox = new CheckBox("SaturdayCheckBoCheckBox", SyncScheduleSteGroup);
                    fSaturdayCheckBoCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fSaturdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B73EA9F8-BACB-4E76-A2B9-15DEE3FF0C7F");
                    fSaturdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fSaturdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Saturday");
                }

                return fSaturdayCheckBoCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to LastDayoftheMonRadioButton
        /// </summary>
        public RadioButton LastDayoftheMonRadioButton
        {
            get
            {
                if (null == fLastDayoftheMonRadioButton)
                {
                    fLastDayoftheMonRadioButton = new RadioButton("LastDayoftheMonRadioButton", SyncScheduleSteGroup);
                    fLastDayoftheMonRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fLastDayoftheMonRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2DBEB691-CBFB-4DB7-BE7A-B5D774820296");
                    fLastDayoftheMonRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    fLastDayoftheMonRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Last Day of the Month");
                }

                return fLastDayoftheMonRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to DayRadioButton3RadioButton
        /// </summary>
        public RadioButton DayRadioButton3RadioButton
        {
            get
            {
                if (null == fDayRadioButton3RadioButton)
                {
                    fDayRadioButton3RadioButton = new RadioButton("DayRadioButton3RadioButton", SyncScheduleSteGroup);
                    fDayRadioButton3RadioButton.UIMap.Scope = UIASeachScope.Children;
                    fDayRadioButton3RadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"392FC707-C93A-4607-A32D-0D08B25A4BEE");
                    fDayRadioButton3RadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    fDayRadioButton3RadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Day");
                }

                return fDayRadioButton3RadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to WindowsFormsHosDup1Pane
        /// </summary>
        public Pane WindowsFormsHosDup1Pane
        {
            get
            {
                if (null == fWindowsFormsHosDup1Pane)
                {
                    fWindowsFormsHosDup1Pane = new Pane("WindowsFormsHosDup1Pane", SyncScheduleSteGroup);
                    fWindowsFormsHosDup1Pane.UIMap.Scope = UIASeachScope.Children;
                    fWindowsFormsHosDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1A95AA54-314C-4A5D-B34C-60863C3C700C");
                    fWindowsFormsHosDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WindowsFormsHost");
                }

                return fWindowsFormsHosDup1Pane;
            }
        }

        /// <summary>
        /// Gets Reference to LastReplicationText
        /// </summary>
        public Text LastReplicationText
        {
            get
            {
                if (null == fLastReplicationText)
                {
                    fLastReplicationText = new Text("LastReplicationText", SyncScheduleSteGroup);
                    fLastReplicationText.UIMap.Scope = UIASeachScope.Children;
                    fLastReplicationText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fLastReplicationText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Last Replication");
                }

                return fLastReplicationText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxcc133df7Edit
        /// </summary>
        public Edit TextBoxcc133df7Edit
        {
            get
            {
                if (null == fTextBoxcc133df7Edit)
                {
                    fTextBoxcc133df7Edit = new Edit("TextBoxcc133df7Edit", SyncScheduleSteGroup);
                    fTextBoxcc133df7Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxcc133df7Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"cc133df7-b7fc-4b42-9b31-ea397127b095");
                    fTextBoxcc133df7Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxcc133df7Edit;
            }
        }

        /// <summary>
        /// Gets Reference to SyncNowButtonb7Button
        /// </summary>
        public Button SyncNowButtonb7Button
        {
            get
            {
                if (null == fSyncNowButtonb7Button)
                {
                    fSyncNowButtonb7Button = new Button("SyncNowButtonb7Button", SyncScheduleSteGroup);
                    fSyncNowButtonb7Button.UIMap.Scope = UIASeachScope.Children;
                    fSyncNowButtonb7Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b75e5b82-6ed8-4ebb-b777-4b9258b91890");
                    fSyncNowButtonb7Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fSyncNowButtonb7Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Now");
                }

                return fSyncNowButtonb7Button;
            }
        }

        /// <summary>
        /// Gets Reference to ClearLDAPCacheBButton
        /// </summary>
        public Button ClearLDAPCacheBButton
        {
            get
            {
                if (null == fClearLDAPCacheBButton)
                {
                    fClearLDAPCacheBButton = new Button("ClearLDAPCacheBButton", LDAPReplicationGroup);
                    fClearLDAPCacheBButton.UIMap.Scope = UIASeachScope.Children;
                    fClearLDAPCacheBButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9E2814A0-D532-4b13-B05A-60EEFA520123");
                    fClearLDAPCacheBButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fClearLDAPCacheBButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear LDAP Cache");
                }

                return fClearLDAPCacheBButton;
            }
        }

        /// <summary>
        /// Gets Reference to ClearLDAPCacheTText
        /// </summary>
        public Text ClearLDAPCacheTText
        {
            get
            {
                if (null == fClearLDAPCacheTText)
                {
                    fClearLDAPCacheTText = new Text("ClearLDAPCacheTText", ClearLDAPCacheBButton);
                    fClearLDAPCacheTText.UIMap.Scope = UIASeachScope.Children;
                    fClearLDAPCacheTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fClearLDAPCacheTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear LDAP Cache");
                }

                return fClearLDAPCacheTText;
            }
        }

        /// <summary>
        /// Gets Reference to AddressBookManaGroup
        /// </summary>
        public Group AddressBookManaGroup
        {
            get
            {
                if (null == fAddressBookManaGroup)
                {
                    fAddressBookManaGroup = new Group("AddressBookManaGroup", ScrollViewerPane);
                    fAddressBookManaGroup.UIMap.Scope = UIASeachScope.Children;
                    fAddressBookManaGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fAddressBookManaGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                }

                return fAddressBookManaGroup;
            }
        }

        /// <summary>
        /// Gets Reference to AddressBookManaDup0Text
        /// </summary>
        public Text AddressBookManaDup0Text
        {
            get
            {
                if (null == fAddressBookManaDup0Text)
                {
                    fAddressBookManaDup0Text = new Text("AddressBookManaDup0Text", AddressBookManaGroup);
                    fAddressBookManaDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAddressBookManaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddressBookManaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                }

                return fAddressBookManaDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to AddressBookManaButton
        /// </summary>
        public Button AddressBookManaButton
        {
            get
            {
                if (null == fAddressBookManaButton)
                {
                    fAddressBookManaButton = new Button("AddressBookManaButton", AddressBookManaGroup);
                    fAddressBookManaButton.UIMap.Scope = UIASeachScope.Children;
                    fAddressBookManaButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"174F3D3D-4D21-4cef-956A-CD3D7E08CF4B");
                    fAddressBookManaButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddressBookManaButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                }

                return fAddressBookManaButton;
            }
        }

        /// <summary>
        /// Gets Reference to AddressBookManaDup1Text
        /// </summary>
        public Text AddressBookManaDup1Text
        {
            get
            {
                if (null == fAddressBookManaDup1Text)
                {
                    fAddressBookManaDup1Text = new Text("AddressBookManaDup1Text", AddressBookManaButton);
                    fAddressBookManaDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAddressBookManaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddressBookManaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                }

                return fAddressBookManaDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup9ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup9ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup9ScrollBar)
                {
                    fScrollBarVerticDup9ScrollBar = new ScrollBar("ScrollBarVerticDup9ScrollBar", ScrollViewerPane);
                    fScrollBarVerticDup9ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup9ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonPARDup0Button
        /// </summary>
        public Button RepeatButtonPARDup0Button
        {
            get
            {
                if (null == fRepeatButtonPARDup0Button)
                {
                    fRepeatButtonPARDup0Button = new Button("RepeatButtonPARDup0Button", ScrollBarVerticDup9ScrollBar);
                    fRepeatButtonPARDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPARDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_LineUpButton");
                    fRepeatButtonPARDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                }

                return fRepeatButtonPARDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonPagDup0Button
        /// </summary>
        public Button RepeatButtonPagDup0Button
        {
            get
            {
                if (null == fRepeatButtonPagDup0Button)
                {
                    fRepeatButtonPagDup0Button = new Button("RepeatButtonPagDup0Button", ScrollBarVerticDup9ScrollBar);
                    fRepeatButtonPagDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageUp");
                    fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                }

                return fRepeatButtonPagDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonPagDup1Button
        /// </summary>
        public Button RepeatButtonPagDup1Button
        {
            get
            {
                if (null == fRepeatButtonPagDup1Button)
                {
                    fRepeatButtonPagDup1Button = new Button("RepeatButtonPagDup1Button", ScrollBarVerticDup9ScrollBar);
                    fRepeatButtonPagDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageDown");
                    fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                }

                return fRepeatButtonPagDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbThumb
        /// </summary>
        public Thumb ThumbThumb
        {
            get
            {
                if (null == fThumbThumb)
                {
                    fThumbThumb = new Thumb("ThumbThumb", ScrollBarVerticDup9ScrollBar);
                    fThumbThumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbThumb;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonPARDup1Button
        /// </summary>
        public Button RepeatButtonPARDup1Button
        {
            get
            {
                if (null == fRepeatButtonPARDup1Button)
                {
                    fRepeatButtonPARDup1Button = new Button("RepeatButtonPARDup1Button", ScrollBarVerticDup9ScrollBar);
                    fRepeatButtonPARDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPARDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_LineDownButton");
                    fRepeatButtonPARDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                }

                return fRepeatButtonPARDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup9ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup9ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup9ScrollBar)
                {
                    fScrollBarHorizoDup9ScrollBar = new ScrollBar("ScrollBarHorizoDup9ScrollBar", ScrollViewerPane);
                    fScrollBarHorizoDup9ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup9ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceConfiguraTabItem
        /// </summary>
        public TabItem DeviceConfiguraTabItem
        {
            get
            {
                if (null == fDeviceConfiguraTabItem)
                {
                    fDeviceConfiguraTabItem = new TabItem("DeviceConfiguraTabItem", TabControlec0fdTab);
                    fDeviceConfiguraTabItem.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6DF1E016-517F-40e4-A63E-CD48D560192F");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                }

                return fDeviceConfiguraTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceConfiguraText
        /// </summary>
        public Text DeviceConfiguraText
        {
            get
            {
                if (null == fDeviceConfiguraText)
                {
                    fDeviceConfiguraText = new Text("DeviceConfiguraText", DeviceConfiguraTabItem);
                    fDeviceConfiguraText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                }

                return fDeviceConfiguraText;
            }
        }

        /// <summary>
        /// Gets Reference to TemplateConfiguTabItem
        /// </summary>
        public TabItem TemplateConfiguTabItem
        {
            get
            {
                if (null == fTemplateConfiguTabItem)
                {
                    fTemplateConfiguTabItem = new TabItem("TemplateConfiguTabItem", TabControlec0fdTab);
                    fTemplateConfiguTabItem.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AC05F9B9-A7D8-4b34-80E7-910FB9870D47");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                }

                return fTemplateConfiguTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to TemplateConfiguText
        /// </summary>
        public Text TemplateConfiguText
        {
            get
            {
                if (null == fTemplateConfiguText)
                {
                    fTemplateConfiguText = new Text("TemplateConfiguText", TemplateConfiguTabItem);
                    fTemplateConfiguText.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                }

                return fTemplateConfiguText;
            }
        }

        /// <summary>
        /// Gets Reference to LogTabItem9b4f3TabItem
        /// </summary>
        public TabItem LogTabItem9b4f3TabItem
        {
            get
            {
                if (null == fLogTabItem9b4f3TabItem)
                {
                    fLogTabItem9b4f3TabItem = new TabItem("LogTabItem9b4f3TabItem", TabControlec0fdTab);
                    fLogTabItem9b4f3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9b4f34bb-d75a-4080-9be3-1c50ec31c5b6");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTabItem9b4f3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to LogTextBlockText
        /// </summary>
        public Text LogTextBlockText
        {
            get
            {
                if (null == fLogTextBlockText)
                {
                    fLogTextBlockText = new Text("LogTextBlockText", LogTabItem9b4f3TabItem);
                    fLogTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup7TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup7TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup7TabItem)
                {
                    fSystemWindowsCoDup7TabItem = new TabItem("SystemWindowsCoDup7TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup7TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3AC8D4A8-3B06-421A-911B-E8CA248A9ED4");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup7TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SecurityTextmSeText
        /// </summary>
        public Text SecurityTextmSeText
        {
            get
            {
                if (null == fSecurityTextmSeText)
                {
                    fSecurityTextmSeText = new Text("SecurityTextmSeText", SystemWindowsCoDup7TabItem);
                    fSecurityTextmSeText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mSecurityTabLabel");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                }

                return fSecurityTextmSeText;
            }
        }

        /// <summary>
        /// Gets Reference to SecurityTextBloText
        /// </summary>
        public Text SecurityTextBloText
        {
            get
            {
                if (null == fSecurityTextBloText)
                {
                    fSecurityTextBloText = new Text("SecurityTextBloText", SecurityTextmSeText);
                    fSecurityTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                }

                return fSecurityTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to Text8A7A84DB894Text
        /// </summary>
        public Text Text8A7A84DB894Text
        {
            get
            {
                if (null == fText8A7A84DB894Text)
                {
                    fText8A7A84DB894Text = new Text("Text8A7A84DB894Text", SystemWindowsCoDup7TabItem);
                    fText8A7A84DB894Text.UIMap.Scope = UIASeachScope.Children;
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8A7A84DB-8945-40E1-A0F9-C40DDD129739");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText8A7A84DB894Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text16F78FB18FFText
        /// </summary>
        public Text Text16F78FB18FFText
        {
            get
            {
                if (null == fText16F78FB18FFText)
                {
                    fText16F78FB18FFText = new Text("Text16F78FB18FFText", SystemWindowsCoDup7TabItem);
                    fText16F78FB18FFText.UIMap.Scope = UIASeachScope.Children;
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16F78FB1-8FF9-4B0D-8251-FB09F520EA73");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText16F78FB18FFText;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup8TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup8TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup8TabItem)
                {
                    fSystemWindowsCoDup8TabItem = new TabItem("SystemWindowsCoDup8TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup8TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1678607C-20BF-4137-8238-C9D46EA8FF70");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup8TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AnalyticsTextmAText
        /// </summary>
        public Text AnalyticsTextmAText
        {
            get
            {
                if (null == fAnalyticsTextmAText)
                {
                    fAnalyticsTextmAText = new Text("AnalyticsTextmAText", SystemWindowsCoDup8TabItem);
                    fAnalyticsTextmAText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAnalyticsTabLabel");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                }

                return fAnalyticsTextmAText;
            }
        }

        /// <summary>
        /// Gets Reference to AnalyticsTextBlText
        /// </summary>
        public Text AnalyticsTextBlText
        {
            get
            {
                if (null == fAnalyticsTextBlText)
                {
                    fAnalyticsTextBlText = new Text("AnalyticsTextBlText", AnalyticsTextmAText);
                    fAnalyticsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                }

                return fAnalyticsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to AboutTabItemf45TabItem
        /// </summary>
        public TabItem AboutTabItemf45TabItem
        {
            get
            {
                if (null == fAboutTabItemf45TabItem)
                {
                    fAboutTabItemf45TabItem = new TabItem("AboutTabItemf45TabItem", TabControlec0fdTab);
                    fAboutTabItemf45TabItem.UIMap.Scope = UIASeachScope.Children;
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f45c22d9-f77a-481a-95bc-09cdff03e131");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                }

                return fAboutTabItemf45TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AboutTextBlockText
        /// </summary>
        public Text AboutTextBlockText
        {
            get
            {
                if (null == fAboutTextBlockText)
                {
                    fAboutTextBlockText = new Text("AboutTextBlockText", AboutTabItemf45TabItem);
                    fAboutTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                }

                return fAboutTextBlockText;
            }
        }

        /// <summary>
        /// Application which exercises the TopCat Coded C# test API.
        /// </summary>
        public class DSS_AddressBookManagerExport
        {
            /// <summary>
            /// Backing field for HPDigitalSendinDup0Window property
            /// </summary>
            private Window fHPDigitalSendinDup0Window;

            /// <summary>
            /// Backing field for HPDigitalSendinDup1Window property
            /// </summary>
            private Window fHPDigitalSendinDup1Window;

            /// <summary>
            /// Backing field for HPDigitalSendinDup0TitleBar property
            /// </summary>
            private TitleBar fHPDigitalSendinDup0TitleBar;

            /// <summary>
            /// Backing field for SystemMenuBarSyDup0MenuBar property
            /// </summary>
            private MenuBar fSystemMenuBarSyDup0MenuBar;

            /// <summary>
            /// Backing field for SystemItem1Dup0MenuItem property
            /// </summary>
            private MenuItem fSystemItem1Dup0MenuItem;

            /// <summary>
            /// Backing field for MinimizeMinimizDup0Button property
            /// </summary>
            private Button fMinimizeMinimizDup0Button;

            /// <summary>
            /// Backing field for MaximizeMaximizDup0Button property
            /// </summary>
            private Button fMaximizeMaximizDup0Button;

            /// <summary>
            /// Backing field for CloseCloseDup0Button property
            /// </summary>
            private Button fCloseCloseDup0Button;

            /// <summary>
            /// Backing field for ExporttheselectText property
            /// </summary>
            private Text fExporttheselectText;

            /// <summary>
            /// Backing field for SelectedButton6Button property
            /// </summary>
            private Button fSelectedButton6Button;

            /// <summary>
            /// Backing field for SelectedTextBloText property
            /// </summary>
            private Text fSelectedTextBloText;

            /// <summary>
            /// Backing field for AllButton08AB07Button property
            /// </summary>
            private Button fAllButton08AB07Button;

            /// <summary>
            /// Backing field for AllTextBlockText property
            /// </summary>
            private Text fAllTextBlockText;

            /// <summary>
            /// Backing field for CancelButton087Button property
            /// </summary>
            private Button fCancelButton087Button;

            /// <summary>
            /// Backing field for CancelTextBlockDup0Text property
            /// </summary>
            private Text fCancelTextBlockDup0Text;

            /// <summary>
            /// Backing field for AddressBookManaWindow property
            /// </summary>
            private Window fAddressBookManaWindow;

            /// <summary>
            /// Backing field for HPDigitalSendinWindow property
            /// </summary>
            private Window fHPDigitalSendinWindow;

            /// <summary>
            /// Backing field for AddressBookManaTitleBar property
            /// </summary>
            private TitleBar fAddressBookManaTitleBar;

            /// <summary>
            /// Backing field for SystemMenuBarSyDup1MenuBar property
            /// </summary>
            private MenuBar fSystemMenuBarSyDup1MenuBar;

            /// <summary>
            /// Backing field for SystemItem1Dup1MenuItem property
            /// </summary>
            private MenuItem fSystemItem1Dup1MenuItem;

            /// <summary>
            /// Backing field for MinimizeMinimizDup1Button property
            /// </summary>
            private Button fMinimizeMinimizDup1Button;

            /// <summary>
            /// Backing field for MaximizeMaximizDup1Button property
            /// </summary>
            private Button fMaximizeMaximizDup1Button;

            /// <summary>
            /// Backing field for CloseCloseDup1Button property
            /// </summary>
            private Button fCloseCloseDup1Button;

            /// <summary>
            /// Backing field for DSSAddressBooksDup0Text property
            /// </summary>
            private Text fDSSAddressBooksDup0Text;

            /// <summary>
            /// Backing field for DSSAddressBooksDup1Text property
            /// </summary>
            private Text fDSSAddressBooksDup1Text;

            /// <summary>
            /// Backing field for TreeView87DDA4CTree property
            /// </summary>
            private Tree fTreeView87DDA4CTree;

            /// <summary>
            /// Backing field for PublicTreeViewITreeItem property
            /// </summary>
            private TreeItem fPublicTreeViewITreeItem;

            /// <summary>
            /// Backing field for ButtonExpanderDup0Button property
            /// </summary>
            private Button fButtonExpanderDup0Button;

            /// <summary>
            /// Backing field for PublicTextBlockText property
            /// </summary>
            private Text fPublicTextBlockText;

            /// <summary>
            /// Backing field for PrivateAddressBTreeItem property
            /// </summary>
            private TreeItem fPrivateAddressBTreeItem;

            /// <summary>
            /// Backing field for ButtonExpanderDup1Button property
            /// </summary>
            private Button fButtonExpanderDup1Button;

            /// <summary>
            /// Backing field for PrivateAddressBText property
            /// </summary>
            private Text fPrivateAddressBText;

            /// <summary>
            /// Backing field for ExportButtonA1CButton property
            /// </summary>
            private Button fExportButtonA1CButton;

            /// <summary>
            /// Backing field for ExportTextBlockText property
            /// </summary>
            private Text fExportTextBlockText;

            /// <summary>
            /// Backing field for DeleteButton1B6Button property
            /// </summary>
            private Button fDeleteButton1B6Button;

            /// <summary>
            /// Backing field for DeleteTextBlockDup0Text property
            /// </summary>
            private Text fDeleteTextBlockDup0Text;

            /// <summary>
            /// Backing field for ImportAddressBoButton property
            /// </summary>
            private Button fImportAddressBoButton;

            /// <summary>
            /// Backing field for ImportAddressBoText property
            /// </summary>
            private Text fImportAddressBoText;

            /// <summary>
            /// Backing field for GridSplitterThumb property
            /// </summary>
            private Thumb fGridSplitterThumb;

            /// <summary>
            /// Backing field for AddressBookContDup0Text property
            /// </summary>
            private Text fAddressBookContDup0Text;

            /// <summary>
            /// Backing field for AddressBookContDup1Text property
            /// </summary>
            private Text fAddressBookContDup1Text;

            /// <summary>
            /// Backing field for RefreshButton81Button property
            /// </summary>
            private Button fRefreshButton81Button;

            /// <summary>
            /// Backing field for RefreshTextBlocText property
            /// </summary>
            private Text fRefreshTextBlocText;

            /// <summary>
            /// Backing field for SearchForText property
            /// </summary>
            private Text fSearchForText;

            /// <summary>
            /// Backing field for SearchForTextBlText property
            /// </summary>
            private Text fSearchForTextBlText;

            /// <summary>
            /// Backing field for ComboBoxA5F891AComboBox property
            /// </summary>
            private ComboBox fComboBoxA5F891AComboBox;

            /// <summary>
            /// Backing field for TextBoxA7B3B6CFEdit property
            /// </summary>
            private Edit fTextBoxA7B3B6CFEdit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup0Pane property
            /// </summary>
            private Pane fScrollViewerPARDup0Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup0ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup0ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup0ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup0ScrollBar;

            /// <summary>
            /// Backing field for FilterButtonEB0Button property
            /// </summary>
            private Button fFilterButtonEB0Button;

            /// <summary>
            /// Backing field for FilterTextBlockText property
            /// </summary>
            private Text fFilterTextBlockText;

            /// <summary>
            /// Backing field for ClearButtonEC9FButton property
            /// </summary>
            private Button fClearButtonEC9FButton;

            /// <summary>
            /// Backing field for ClearTextBlockText property
            /// </summary>
            private Text fClearTextBlockText;

            /// <summary>
            /// Backing field for ListViewbb668d9DataGrid property
            /// </summary>
            private DataGrid fListViewbb668d9DataGrid;

            /// <summary>
            /// Backing field for GridViewHeaderRHeader property
            /// </summary>
            private Header fGridViewHeaderRHeader;

            /// <summary>
            /// Backing field for ContactNameGridHeaderItem property
            /// </summary>
            private HeaderItem fContactNameGridHeaderItem;

            /// <summary>
            /// Backing field for ContactNameTextText property
            /// </summary>
            private Text fContactNameTextText;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup0Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup0Thumb;

            /// <summary>
            /// Backing field for EmailAddressGriHeaderItem property
            /// </summary>
            private HeaderItem fEmailAddressGriHeaderItem;

            /// <summary>
            /// Backing field for EmailAddressTexText property
            /// </summary>
            private Text fEmailAddressTexText;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup1Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup1Thumb;

            /// <summary>
            /// Backing field for FaxNumberGridViHeaderItem property
            /// </summary>
            private HeaderItem fFaxNumberGridViHeaderItem;

            /// <summary>
            /// Backing field for FaxNumberTextBlText property
            /// </summary>
            private Text fFaxNumberTextBlText;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup2Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup2Thumb;

            /// <summary>
            /// Backing field for HPMfpAppServiceDataItem property
            /// </summary>
            private DataItem fHPMfpAppServiceDataItem;

            /// <summary>
            /// Backing field for fgTextBlockText property
            /// </summary>
            private Text ffgTextBlockText;

            /// <summary>
            /// Backing field for wscomTextBlockText property
            /// </summary>
            private Text fwscomTextBlockText;

            /// <summary>
            /// Backing field for A656565TextBlocText property
            /// </summary>
            private Text fA656565TextBlocText;

            /// <summary>
            /// Backing field for LDAPcontactsareText property
            /// </summary>
            private Text fLDAPcontactsareText;

            /// <summary>
            /// Backing field for DeleteButton41BButton property
            /// </summary>
            private Button fDeleteButton41BButton;

            /// <summary>
            /// Backing field for DeleteTextBlockDup1Text property
            /// </summary>
            private Text fDeleteTextBlockDup1Text;

            /// <summary>
            /// Backing field for EditButton548EBButton property
            /// </summary>
            private Button fEditButton548EBButton;

            /// <summary>
            /// Backing field for EditTextBlockText property
            /// </summary>
            private Text fEditTextBlockText;

            /// <summary>
            /// Backing field for AddGroupButton7Button property
            /// </summary>
            private Button fAddGroupButton7Button;

            /// <summary>
            /// Backing field for AddGroupTextBloText property
            /// </summary>
            private Text fAddGroupTextBloText;

            /// <summary>
            /// Backing field for AddContactButtoButton property
            /// </summary>
            private Button fAddContactButtoButton;

            /// <summary>
            /// Backing field for AddContactTextBText property
            /// </summary>
            private Text fAddContactTextBText;

            /// <summary>
            /// Backing field for OKButtonFA1AC0AButton property
            /// </summary>
            private Button fOKButtonFA1AC0AButton;

            /// <summary>
            /// Backing field for OKTextBlockDup0Text property
            /// </summary>
            private Text fOKTextBlockDup0Text;

            /// <summary>
            /// Backing field for HPDigitalSendinDup1TitleBar property
            /// </summary>
            private TitleBar fHPDigitalSendinDup1TitleBar;

            /// <summary>
            /// Backing field for SystemMenuBarSyDup2MenuBar property
            /// </summary>
            private MenuBar fSystemMenuBarSyDup2MenuBar;

            /// <summary>
            /// Backing field for SystemItem1Dup2MenuItem property
            /// </summary>
            private MenuItem fSystemItem1Dup2MenuItem;

            /// <summary>
            /// Backing field for MinimizeMinimizDup2Button property
            /// </summary>
            private Button fMinimizeMinimizDup2Button;

            /// <summary>
            /// Backing field for MaximizeMaximizDup2Button property
            /// </summary>
            private Button fMaximizeMaximizDup2Button;

            /// <summary>
            /// Backing field for CloseCloseDup2Button property
            /// </summary>
            private Button fCloseCloseDup2Button;

            /// <summary>
            /// Backing field for HelpButtonCB8CFButton property
            /// </summary>
            private Button fHelpButtonCB8CFButton;

            /// <summary>
            /// Backing field for HelpTextBlockText property
            /// </summary>
            private Text fHelpTextBlockText;

            /// <summary>
            /// Backing field for ApplyButton61E2Button property
            /// </summary>
            private Button fApplyButton61E2Button;

            /// <summary>
            /// Backing field for ApplyTextBlockText property
            /// </summary>
            private Text fApplyTextBlockText;

            /// <summary>
            /// Backing field for CancelButton65CButton property
            /// </summary>
            private Button fCancelButton65CButton;

            /// <summary>
            /// Backing field for CancelTextBlockDup1Text property
            /// </summary>
            private Text fCancelTextBlockDup1Text;

            /// <summary>
            /// Backing field for OKButtonCC2EF49Button property
            /// </summary>
            private Button fOKButtonCC2EF49Button;

            /// <summary>
            /// Backing field for OKTextBlockDup1Text property
            /// </summary>
            private Text fOKTextBlockDup1Text;

            /// <summary>
            /// Backing field for TabControlec0fdTab property
            /// </summary>
            private Tab fTabControlec0fdTab;

            /// <summary>
            /// Backing field for SystemWindowsCoDup0TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup0TabItem;

            /// <summary>
            /// Backing field for GeneralTextmGenText property
            /// </summary>
            private Text fGeneralTextmGenText;

            /// <summary>
            /// Backing field for GeneralTextBlocText property
            /// </summary>
            private Text fGeneralTextBlocText;

            /// <summary>
            /// Backing field for Text933345b04e3Text property
            /// </summary>
            private Text fText933345b04e3Text;

            /// <summary>
            /// Backing field for Text786caf67344Text property
            /// </summary>
            private Text fText786caf67344Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup1TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup1TabItem;

            /// <summary>
            /// Backing field for AuthenticationTDup0Text property
            /// </summary>
            private Text fAuthenticationTDup0Text;

            /// <summary>
            /// Backing field for AuthenticationTDup1Text property
            /// </summary>
            private Text fAuthenticationTDup1Text;

            /// <summary>
            /// Backing field for Text31EC91730B9Text property
            /// </summary>
            private Text fText31EC91730B9Text;

            /// <summary>
            /// Backing field for TextA479C271445Text property
            /// </summary>
            private Text fTextA479C271445Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup2TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup2TabItem;

            /// <summary>
            /// Backing field for EmailTextmEmailText property
            /// </summary>
            private Text fEmailTextmEmailText;

            /// <summary>
            /// Backing field for EmailTextBlockText property
            /// </summary>
            private Text fEmailTextBlockText;

            /// <summary>
            /// Backing field for Text32de714a8bdText property
            /// </summary>
            private Text fText32de714a8bdText;

            /// <summary>
            /// Backing field for Text3b2a8761f4fText property
            /// </summary>
            private Text fText3b2a8761f4fText;

            /// <summary>
            /// Backing field for TextBlockText property
            /// </summary>
            private Text fTextBlockText;

            /// <summary>
            /// Backing field for SystemWindowsCoDup3TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup3TabItem;

            /// <summary>
            /// Backing field for FaxTextmFaxTabLText property
            /// </summary>
            private Text fFaxTextmFaxTabLText;

            /// <summary>
            /// Backing field for FaxTextBlockText property
            /// </summary>
            private Text fFaxTextBlockText;

            /// <summary>
            /// Backing field for TextD1ED4F16F38Text property
            /// </summary>
            private Text fTextD1ED4F16F38Text;

            /// <summary>
            /// Backing field for Text7DDE04FD251Text property
            /// </summary>
            private Text fText7DDE04FD251Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup4TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup4TabItem;

            /// <summary>
            /// Backing field for SendtoFolderTexDup0Text property
            /// </summary>
            private Text fSendtoFolderTexDup0Text;

            /// <summary>
            /// Backing field for SendtoFolderTexDup1Text property
            /// </summary>
            private Text fSendtoFolderTexDup1Text;

            /// <summary>
            /// Backing field for Text7a57f43ecb1Text property
            /// </summary>
            private Text fText7a57f43ecb1Text;

            /// <summary>
            /// Backing field for Text654b650dd19Text property
            /// </summary>
            private Text fText654b650dd19Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup5TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup5TabItem;

            /// <summary>
            /// Backing field for WorkflowsTextmWText property
            /// </summary>
            private Text fWorkflowsTextmWText;

            /// <summary>
            /// Backing field for WorkflowsTextBlText property
            /// </summary>
            private Text fWorkflowsTextBlText;

            /// <summary>
            /// Backing field for Text22D9C34E84CText property
            /// </summary>
            private Text fText22D9C34E84CText;

            /// <summary>
            /// Backing field for TextC8D15BD39C8Text property
            /// </summary>
            private Text fTextC8D15BD39C8Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup6TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup6TabItem;

            /// <summary>
            /// Backing field for AddressingTextmText property
            /// </summary>
            private Text fAddressingTextmText;

            /// <summary>
            /// Backing field for AddressingTextBText property
            /// </summary>
            private Text fAddressingTextBText;

            /// <summary>
            /// Backing field for Text47EB5CBA4D1Text property
            /// </summary>
            private Text fText47EB5CBA4D1Text;

            /// <summary>
            /// Backing field for Text0757E148179Text property
            /// </summary>
            private Text fText0757E148179Text;

            /// <summary>
            /// Backing field for ScrollViewerPane property
            /// </summary>
            private Pane fScrollViewerPane;

            /// <summary>
            /// Backing field for AddressingNetwoCustom property
            /// </summary>
            private Custom fAddressingNetwoCustom;

            /// <summary>
            /// Backing field for ErrorConflictUsCustom property
            /// </summary>
            private Custom fErrorConflictUsCustom;

            /// <summary>
            /// Backing field for SearchMethodGroGroup property
            /// </summary>
            private Group fSearchMethodGroGroup;

            /// <summary>
            /// Backing field for SearchMethodTexText property
            /// </summary>
            private Text fSearchMethodTexText;

            /// <summary>
            /// Backing field for QuickSearchFindRadioButton property
            /// </summary>
            private RadioButton fQuickSearchFindRadioButton;

            /// <summary>
            /// Backing field for QuickSearchFindText property
            /// </summary>
            private Text fQuickSearchFindText;

            /// <summary>
            /// Backing field for DetailedSearchFRadioButton property
            /// </summary>
            private RadioButton fDetailedSearchFRadioButton;

            /// <summary>
            /// Backing field for DetailedSearchFText property
            /// </summary>
            private Text fDetailedSearchFText;

            /// <summary>
            /// Backing field for PersonalContactGroup property
            /// </summary>
            private Group fPersonalContactGroup;

            /// <summary>
            /// Backing field for PersonalContactText property
            /// </summary>
            private Text fPersonalContactText;

            /// <summary>
            /// Backing field for ThepersonalcontText property
            /// </summary>
            private Text fThepersonalcontText;

            /// <summary>
            /// Backing field for EnablePersonalCCheckBox property
            /// </summary>
            private CheckBox fEnablePersonalCCheckBox;

            /// <summary>
            /// Backing field for EnablePersonalCText property
            /// </summary>
            private Text fEnablePersonalCText;

            /// <summary>
            /// Backing field for TestExchangeSerGroup property
            /// </summary>
            private Group fTestExchangeSerGroup;

            /// <summary>
            /// Backing field for TestExchangeSerText property
            /// </summary>
            private Text fTestExchangeSerText;

            /// <summary>
            /// Backing field for WindowsDomainDup0Text property
            /// </summary>
            private Text fWindowsDomainDup0Text;

            /// <summary>
            /// Backing field for WindowsDomainTeText property
            /// </summary>
            private Text fWindowsDomainTeText;

            /// <summary>
            /// Backing field for TextBox0857B9D0Edit property
            /// </summary>
            private Edit fTextBox0857B9D0Edit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup1Pane property
            /// </summary>
            private Pane fScrollViewerPARDup1Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup1ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup1ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup1ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup1ScrollBar;

            /// <summary>
            /// Backing field for UsernameDup0Text property
            /// </summary>
            private Text fUsernameDup0Text;

            /// <summary>
            /// Backing field for UsernameTextBloDup0Text property
            /// </summary>
            private Text fUsernameTextBloDup0Text;

            /// <summary>
            /// Backing field for TextBox9B0DA4ABEdit property
            /// </summary>
            private Edit fTextBox9B0DA4ABEdit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup2Pane property
            /// </summary>
            private Pane fScrollViewerPARDup2Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup2ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup2ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup2ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup2ScrollBar;

            /// <summary>
            /// Backing field for PasswordDup0Text property
            /// </summary>
            private Text fPasswordDup0Text;

            /// <summary>
            /// Backing field for PasswordTextBloDup0Text property
            /// </summary>
            private Text fPasswordTextBloDup0Text;

            /// <summary>
            /// Backing field for PasswordBox6B3CEdit property
            /// </summary>
            private Edit fPasswordBox6B3CEdit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup3Pane property
            /// </summary>
            private Pane fScrollViewerPARDup3Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup3ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup3ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup3ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup3ScrollBar;

            /// <summary>
            /// Backing field for TestText property
            /// </summary>
            private Text fTestText;

            /// <summary>
            /// Backing field for TestTextBlockDup0Text property
            /// </summary>
            private Text fTestTextBlockDup0Text;

            /// <summary>
            /// Backing field for TextBoxDE0C2350Edit property
            /// </summary>
            private Edit fTextBoxDE0C2350Edit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup4Pane property
            /// </summary>
            private Pane fScrollViewerPARDup4Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup4ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup4ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup4ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup4ScrollBar;

            /// <summary>
            /// Backing field for TestButtonA90BEButton property
            /// </summary>
            private Button fTestButtonA90BEButton;

            /// <summary>
            /// Backing field for TestTextBlockDup1Text property
            /// </summary>
            private Text fTestTextBlockDup1Text;

            /// <summary>
            /// Backing field for LDAPReplicationGroup property
            /// </summary>
            private Group fLDAPReplicationGroup;

            /// <summary>
            /// Backing field for LDAPReplicationText property
            /// </summary>
            private Text fLDAPReplicationText;

            /// <summary>
            /// Backing field for EnableNetworkCoCheckBox property
            /// </summary>
            private CheckBox fEnableNetworkCoCheckBox;

            /// <summary>
            /// Backing field for EnableNetworkCoText property
            /// </summary>
            private Text fEnableNetworkCoText;

            /// <summary>
            /// Backing field for ExpanderFD3555EGroup property
            /// </summary>
            private Group fExpanderFD3555EGroup;

            /// <summary>
            /// Backing field for ButtonHeaderSitDup0Button property
            /// </summary>
            private Button fButtonHeaderSitDup0Button;

            /// <summary>
            /// Backing field for NetworkDirectorGroup property
            /// </summary>
            private Group fNetworkDirectorGroup;

            /// <summary>
            /// Backing field for NetworkDirectorText property
            /// </summary>
            private Text fNetworkDirectorText;

            /// <summary>
            /// Backing field for LDAPServerAddreDup0Text property
            /// </summary>
            private Text fLDAPServerAddreDup0Text;

            /// <summary>
            /// Backing field for LDAPServerAddreDup1Text property
            /// </summary>
            private Text fLDAPServerAddreDup1Text;

            /// <summary>
            /// Backing field for TextBox858933a3Edit property
            /// </summary>
            private Edit fTextBox858933a3Edit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup5Pane property
            /// </summary>
            private Pane fScrollViewerPARDup5Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup5ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup5ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup5ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup5ScrollBar;

            /// <summary>
            /// Backing field for AutoFindButton3Button property
            /// </summary>
            private Button fAutoFindButton3Button;

            /// <summary>
            /// Backing field for AutoFindTextBloText property
            /// </summary>
            private Text fAutoFindTextBloText;

            /// <summary>
            /// Backing field for HostnameorIPaddDup0Text property
            /// </summary>
            private Text fHostnameorIPaddDup0Text;

            /// <summary>
            /// Backing field for HostnameorIPaddDup1Text property
            /// </summary>
            private Text fHostnameorIPaddDup1Text;

            /// <summary>
            /// Backing field for PortText property
            /// </summary>
            private Text fPortText;

            /// <summary>
            /// Backing field for PortTextBlockText property
            /// </summary>
            private Text fPortTextBlockText;

            /// <summary>
            /// Backing field for UseasecureconneCheckBox property
            /// </summary>
            private CheckBox fUseasecureconneCheckBox;

            /// <summary>
            /// Backing field for UseasecureconneText property
            /// </summary>
            private Text fUseasecureconneText;

            /// <summary>
            /// Backing field for TextBox79f22c3aEdit property
            /// </summary>
            private Edit fTextBox79f22c3aEdit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup6Pane property
            /// </summary>
            private Pane fScrollViewerPARDup6Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup6ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup6ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup6ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup6ScrollBar;

            /// <summary>
            /// Backing field for Port636isthedefDup0Text property
            /// </summary>
            private Text fPort636isthedefDup0Text;

            /// <summary>
            /// Backing field for Port636isthedefDup1Text property
            /// </summary>
            private Text fPort636isthedefDup1Text;

            /// <summary>
            /// Backing field for ExpanderDD1518FGroup property
            /// </summary>
            private Group fExpanderDD1518FGroup;

            /// <summary>
            /// Backing field for ButtonHeaderSitDup1Button property
            /// </summary>
            private Button fButtonHeaderSitDup1Button;

            /// <summary>
            /// Backing field for ServerAuthenticGroup property
            /// </summary>
            private Group fServerAuthenticGroup;

            /// <summary>
            /// Backing field for ServerAuthenticText property
            /// </summary>
            private Text fServerAuthenticText;

            /// <summary>
            /// Backing field for ServerdoesnotreRadioButton property
            /// </summary>
            private RadioButton fServerdoesnotreRadioButton;

            /// <summary>
            /// Backing field for ServerdoesnotreText property
            /// </summary>
            private Text fServerdoesnotreText;

            /// <summary>
            /// Backing field for ServerrequiresaRadioButton property
            /// </summary>
            private RadioButton fServerrequiresaRadioButton;

            /// <summary>
            /// Backing field for ServerrequiresaText property
            /// </summary>
            private Text fServerrequiresaText;

            /// <summary>
            /// Backing field for ComboBox5cd52d1ComboBox property
            /// </summary>
            private ComboBox fComboBox5cd52d1ComboBox;

            /// <summary>
            /// Backing field for WindowsorLDAPsiText property
            /// </summary>
            private Text fWindowsorLDAPsiText;

            /// <summary>
            /// Backing field for UsernameDup1Text property
            /// </summary>
            private Text fUsernameDup1Text;

            /// <summary>
            /// Backing field for UsernameTextBloDup1Text property
            /// </summary>
            private Text fUsernameTextBloDup1Text;

            /// <summary>
            /// Backing field for TextBoxb54cac9eEdit property
            /// </summary>
            private Edit fTextBoxb54cac9eEdit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup7Pane property
            /// </summary>
            private Pane fScrollViewerPARDup7Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup7ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup7ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup7ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup7ScrollBar;

            /// <summary>
            /// Backing field for PasswordDup1Text property
            /// </summary>
            private Text fPasswordDup1Text;

            /// <summary>
            /// Backing field for PasswordTextBloDup1Text property
            /// </summary>
            private Text fPasswordTextBloDup1Text;

            /// <summary>
            /// Backing field for PasswordBox8ed9Edit property
            /// </summary>
            private Edit fPasswordBox8ed9Edit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup8Pane property
            /// </summary>
            private Pane fScrollViewerPARDup8Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup8ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup8ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup8ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup8ScrollBar;

            /// <summary>
            /// Backing field for WindowsDomainDup1Text property
            /// </summary>
            private Text fWindowsDomainDup1Text;

            /// <summary>
            /// Backing field for TextBox1cce79f4Edit property
            /// </summary>
            private Edit fTextBox1cce79f4Edit;

            /// <summary>
            /// Backing field for KerberosDefaultText property
            /// </summary>
            private Text fKerberosDefaultText;

            /// <summary>
            /// Backing field for TextBox757e1b31Edit property
            /// </summary>
            private Edit fTextBox757e1b31Edit;

            /// <summary>
            /// Backing field for KerberosServerHText property
            /// </summary>
            private Text fKerberosServerHText;

            /// <summary>
            /// Backing field for TextBoxe5cfa172Edit property
            /// </summary>
            private Edit fTextBoxe5cfa172Edit;

            /// <summary>
            /// Backing field for KerberosServerPText property
            /// </summary>
            private Text fKerberosServerPText;

            /// <summary>
            /// Backing field for TextBoxf986abfaEdit property
            /// </summary>
            private Edit fTextBoxf986abfaEdit;

            /// <summary>
            /// Backing field for ExpanderB7151C3Group property
            /// </summary>
            private Group fExpanderB7151C3Group;

            /// <summary>
            /// Backing field for ButtonHeaderSitDup2Button property
            /// </summary>
            private Button fButtonHeaderSitDup2Button;

            /// <summary>
            /// Backing field for LDAPDatabaseSeaGroup property
            /// </summary>
            private Group fLDAPDatabaseSeaGroup;

            /// <summary>
            /// Backing field for LDAPDatabaseSeaText property
            /// </summary>
            private Text fLDAPDatabaseSeaText;

            /// <summary>
            /// Backing field for PathtostartsearText property
            /// </summary>
            private Text fPathtostartsearText;

            /// <summary>
            /// Backing field for TextBox2e2cfbd5Edit property
            /// </summary>
            private Edit fTextBox2e2cfbd5Edit;

            /// <summary>
            /// Backing field for AutoFindButton4Button property
            /// </summary>
            private Button fAutoFindButton4Button;

            /// <summary>
            /// Backing field for SourceforAttribText property
            /// </summary>
            private Text fSourceforAttribText;

            /// <summary>
            /// Backing field for UseActiveDirectRadioButton property
            /// </summary>
            private RadioButton fUseActiveDirectRadioButton;

            /// <summary>
            /// Backing field for UseExchange55DeRadioButton property
            /// </summary>
            private RadioButton fUseExchange55DeRadioButton;

            /// <summary>
            /// Backing field for UseCustomAttribRadioButton property
            /// </summary>
            private RadioButton fUseCustomAttribRadioButton;

            /// <summary>
            /// Backing field for AutoFindButton8Button property
            /// </summary>
            private Button fAutoFindButton8Button;

            /// <summary>
            /// Backing field for MatchtheRecipieText property
            /// </summary>
            private Text fMatchtheRecipieText;

            /// <summary>
            /// Backing field for TextBox0fd71265Edit property
            /// </summary>
            private Edit fTextBox0fd71265Edit;

            /// <summary>
            /// Backing field for AttributeNamefoDup0Text property
            /// </summary>
            private Text fAttributeNamefoDup0Text;

            /// <summary>
            /// Backing field for TextBoxc34b5023Edit property
            /// </summary>
            private Edit fTextBoxc34b5023Edit;

            /// <summary>
            /// Backing field for AttributeNamefoDup1Text property
            /// </summary>
            private Text fAttributeNamefoDup1Text;

            /// <summary>
            /// Backing field for TextBox3a6d11c5Edit property
            /// </summary>
            private Edit fTextBox3a6d11c5Edit;

            /// <summary>
            /// Backing field for AdvancedSearchOGroup property
            /// </summary>
            private Group fAdvancedSearchOGroup;

            /// <summary>
            /// Backing field for Expander0D39A3CGroup property
            /// </summary>
            private Group fExpander0D39A3CGroup;

            /// <summary>
            /// Backing field for ButtonHeaderSitDup3Button property
            /// </summary>
            private Button fButtonHeaderSitDup3Button;

            /// <summary>
            /// Backing field for TestforLDAPRetrGroup property
            /// </summary>
            private Group fTestforLDAPRetrGroup;

            /// <summary>
            /// Backing field for TestforLDAPRetrText property
            /// </summary>
            private Text fTestforLDAPRetrText;

            /// <summary>
            /// Backing field for TestTextmTestLaText property
            /// </summary>
            private Text fTestTextmTestLaText;

            /// <summary>
            /// Backing field for TextBoxf206c2f6Edit property
            /// </summary>
            private Edit fTextBoxf206c2f6Edit;

            /// <summary>
            /// Backing field for TestButtone6d54Button property
            /// </summary>
            private Button fTestButtone6d54Button;

            /// <summary>
            /// Backing field for Expander5DC4D6AGroup property
            /// </summary>
            private Group fExpander5DC4D6AGroup;

            /// <summary>
            /// Backing field for ButtonHeaderSitDup4Button property
            /// </summary>
            private Button fButtonHeaderSitDup4Button;

            /// <summary>
            /// Backing field for SyncScheduleSteGroup property
            /// </summary>
            private Group fSyncScheduleSteGroup;

            /// <summary>
            /// Backing field for SyncScheduleSteText property
            /// </summary>
            private Text fSyncScheduleSteText;

            /// <summary>
            /// Backing field for SyncText property
            /// </summary>
            private Text fSyncText;

            /// <summary>
            /// Backing field for ComboBox1138dacComboBox property
            /// </summary>
            private ComboBox fComboBox1138dacComboBox;

            /// <summary>
            /// Backing field for SyncTimeText property
            /// </summary>
            private Text fSyncTimeText;

            /// <summary>
            /// Backing field for WindowsFormsHosDup0Pane property
            /// </summary>
            private Pane fWindowsFormsHosDup0Pane;

            /// <summary>
            /// Backing field for A24HourCheckBoxCheckBox property
            /// </summary>
            private CheckBox fA24HourCheckBoxCheckBox;

            /// <summary>
            /// Backing field for OnlysyncMondayFCheckBox property
            /// </summary>
            private CheckBox fOnlysyncMondayFCheckBox;

            /// <summary>
            /// Backing field for SundayCheckBox2CheckBox property
            /// </summary>
            private CheckBox fSundayCheckBox2CheckBox;

            /// <summary>
            /// Backing field for MondayCheckBoxCCheckBox property
            /// </summary>
            private CheckBox fMondayCheckBoxCCheckBox;

            /// <summary>
            /// Backing field for TuesdayCheckBoxCheckBox property
            /// </summary>
            private CheckBox fTuesdayCheckBoxCheckBox;

            /// <summary>
            /// Backing field for WednesdayCheckBCheckBox property
            /// </summary>
            private CheckBox fWednesdayCheckBCheckBox;

            /// <summary>
            /// Backing field for ThursdayCheckBoCheckBox property
            /// </summary>
            private CheckBox fThursdayCheckBoCheckBox;

            /// <summary>
            /// Backing field for FridayCheckBoxDCheckBox property
            /// </summary>
            private CheckBox fFridayCheckBoxDCheckBox;

            /// <summary>
            /// Backing field for SaturdayCheckBoCheckBox property
            /// </summary>
            private CheckBox fSaturdayCheckBoCheckBox;

            /// <summary>
            /// Backing field for LastDayoftheMonRadioButton property
            /// </summary>
            private RadioButton fLastDayoftheMonRadioButton;

            /// <summary>
            /// Backing field for DayRadioButton3RadioButton property
            /// </summary>
            private RadioButton fDayRadioButton3RadioButton;

            /// <summary>
            /// Backing field for WindowsFormsHosDup1Pane property
            /// </summary>
            private Pane fWindowsFormsHosDup1Pane;

            /// <summary>
            /// Backing field for LastReplicationText property
            /// </summary>
            private Text fLastReplicationText;

            /// <summary>
            /// Backing field for TextBoxcc133df7Edit property
            /// </summary>
            private Edit fTextBoxcc133df7Edit;

            /// <summary>
            /// Backing field for SyncNowButtonb7Button property
            /// </summary>
            private Button fSyncNowButtonb7Button;

            /// <summary>
            /// Backing field for ClearLDAPCacheBButton property
            /// </summary>
            private Button fClearLDAPCacheBButton;

            /// <summary>
            /// Backing field for ClearLDAPCacheTText property
            /// </summary>
            private Text fClearLDAPCacheTText;

            /// <summary>
            /// Backing field for AddressBookManaGroup property
            /// </summary>
            private Group fAddressBookManaGroup;

            /// <summary>
            /// Backing field for AddressBookManaDup0Text property
            /// </summary>
            private Text fAddressBookManaDup0Text;

            /// <summary>
            /// Backing field for AddressBookManaButton property
            /// </summary>
            private Button fAddressBookManaButton;

            /// <summary>
            /// Backing field for AddressBookManaDup1Text property
            /// </summary>
            private Text fAddressBookManaDup1Text;

            /// <summary>
            /// Backing field for ScrollBarVerticDup9ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup9ScrollBar;

            /// <summary>
            /// Backing field for RepeatButtonPARDup0Button property
            /// </summary>
            private Button fRepeatButtonPARDup0Button;

            /// <summary>
            /// Backing field for RepeatButtonPagDup0Button property
            /// </summary>
            private Button fRepeatButtonPagDup0Button;

            /// <summary>
            /// Backing field for RepeatButtonPagDup1Button property
            /// </summary>
            private Button fRepeatButtonPagDup1Button;

            /// <summary>
            /// Backing field for ThumbThumb property
            /// </summary>
            private Thumb fThumbThumb;

            /// <summary>
            /// Backing field for RepeatButtonPARDup1Button property
            /// </summary>
            private Button fRepeatButtonPARDup1Button;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup9ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup9ScrollBar;

            /// <summary>
            /// Backing field for DeviceConfiguraTabItem property
            /// </summary>
            private TabItem fDeviceConfiguraTabItem;

            /// <summary>
            /// Backing field for DeviceConfiguraText property
            /// </summary>
            private Text fDeviceConfiguraText;

            /// <summary>
            /// Backing field for TemplateConfiguTabItem property
            /// </summary>
            private TabItem fTemplateConfiguTabItem;

            /// <summary>
            /// Backing field for TemplateConfiguText property
            /// </summary>
            private Text fTemplateConfiguText;

            /// <summary>
            /// Backing field for LogTabItem9b4f3TabItem property
            /// </summary>
            private TabItem fLogTabItem9b4f3TabItem;

            /// <summary>
            /// Backing field for LogTextBlockText property
            /// </summary>
            private Text fLogTextBlockText;

            /// <summary>
            /// Backing field for SystemWindowsCoDup7TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup7TabItem;

            /// <summary>
            /// Backing field for SecurityTextmSeText property
            /// </summary>
            private Text fSecurityTextmSeText;

            /// <summary>
            /// Backing field for SecurityTextBloText property
            /// </summary>
            private Text fSecurityTextBloText;

            /// <summary>
            /// Backing field for Text8A7A84DB894Text property
            /// </summary>
            private Text fText8A7A84DB894Text;

            /// <summary>
            /// Backing field for Text16F78FB18FFText property
            /// </summary>
            private Text fText16F78FB18FFText;

            /// <summary>
            /// Backing field for SystemWindowsCoDup8TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup8TabItem;

            /// <summary>
            /// Backing field for AnalyticsTextmAText property
            /// </summary>
            private Text fAnalyticsTextmAText;

            /// <summary>
            /// Backing field for AnalyticsTextBlText property
            /// </summary>
            private Text fAnalyticsTextBlText;

            /// <summary>
            /// Backing field for AboutTabItemf45TabItem property
            /// </summary>
            private TabItem fAboutTabItemf45TabItem;

            /// <summary>
            /// Backing field for AboutTextBlockText property
            /// </summary>
            private Text fAboutTextBlockText;

            /// <summary>
            /// Backing field for FilenameAppContComboBox property
            /// </summary>
            private ComboBox fFilenameAppContComboBox;

            /// <summary>
            /// Backing field for FolderLayoutPanPane property
            /// </summary>
            private Pane fFolderLayoutPanPane;

            /// <summary>
            /// Backing field for DUIViewWndClassPane property
            /// </summary>
            private Pane fDUIViewWndClassPane;

            /// <summary>
            /// Backing field for SaveAsTitleBar property
            /// </summary>
            private TitleBar fSaveAsTitleBar;

            /// <summary>
            /// Backing field for SaveButton1Button property
            /// </summary>
            private Button fSaveButton1Button;

            /// <summary>
            /// Backing field for SaveAs32770Window property
            /// </summary>
            private Window fSaveAs32770Window;

            /// <summary>
            /// Backing field for ExplorerPaneHWNPane property
            /// </summary>
            private Pane fExplorerPaneHWNPane;

            /// <summary>
            /// Backing field for DetailsPanePrevPane property
            /// </summary>
            private Pane fDetailsPanePrevPane;

            /// <summary>
            /// Backing field for FilenameEdit100Edit property
            /// </summary>
            private Edit fFilenameEdit100Edit;

            /// <summary>
            /// Backing field for OKButtonAE4B0C6Button property
            /// </summary>
            private Button fOKButtonAE4B0C6Button;

            /// <summary>
            /// The Ip Address
            /// </summary>
            private string _ipaddress;

            /// <summary>
            /// Initializes a new instance of the <see cref="DSS_AddressBookManagerExport"/> class.
            /// </summary>
            /// <param name="framework">
            /// The framework.
            /// </param>
            public DSS_AddressBookManagerExport(UIAFramework framework)
            {
                Desktop = new Desktop(framework);
            }

            /// <summary>
            /// Initializes a new instance of the <see cref="DSS_AddressBookManagerExport"/> class using the default UIAFramework.
            /// </summary>
            public DSS_AddressBookManagerExport()
            {
                Desktop = new Desktop();
            }

            /// <summary>
            /// Initializes a new instance of the <see cref="DSS_AddressBookManagerExport"/> class using the default UIAFramework.
            /// </summary>
            /// /// <param name="address">
            /// The IP address.
            /// </param>
            public DSS_AddressBookManagerExport(string address)
            {
                Desktop = new Desktop();
                _ipaddress = address;
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Desktop Desktop { get; private set; }

            /// <summary>
            /// Gets Reference to HPDigitalSendinDup0Window
            /// </summary>
            public Window HPDigitalSendinDup0Window
            {
                get
                {
                    if (null == fHPDigitalSendinDup0Window)
                    {
                        fHPDigitalSendinDup0Window = new Window("HPDigitalSendinDup0Window", Desktop);
                        fHPDigitalSendinDup0Window.UIMap.Scope = UIASeachScope.Children;
                        fHPDigitalSendinDup0Window.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_ipaddress})");
                        fHPDigitalSendinDup0Window.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                        fHPDigitalSendinDup0Window.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    }

                    return fHPDigitalSendinDup0Window;
                }
            }

            /// <summary>
            /// Gets Reference to HPDigitalSendinDup1Window
            /// </summary>
            public Window HPDigitalSendinDup1Window
            {
                get
                {
                    if (null == fHPDigitalSendinDup1Window)
                    {
                        fHPDigitalSendinDup1Window = new Window("HPDigitalSendinDup1Window", HPDigitalSendinDup0Window);
                        fHPDigitalSendinDup1Window.UIMap.Scope = UIASeachScope.Children;
                        fHPDigitalSendinDup1Window.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Digital Sending Software");
                        fHPDigitalSendinDup1Window.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6BFE80C0-65C9-4392-8CC2-3ECEFB0FE570");
                        fHPDigitalSendinDup1Window.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    }

                    return fHPDigitalSendinDup1Window;
                }
            }

            /// <summary>
            /// Gets Reference to HPDigitalSendinDup0TitleBar
            /// </summary>
            public TitleBar HPDigitalSendinDup0TitleBar
            {
                get
                {
                    if (null == fHPDigitalSendinDup0TitleBar)
                    {
                        fHPDigitalSendinDup0TitleBar = new TitleBar("HPDigitalSendinDup0TitleBar", HPDigitalSendinDup1Window);
                        fHPDigitalSendinDup0TitleBar.UIMap.Scope = UIASeachScope.Children;
                        fHPDigitalSendinDup0TitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Digital Sending Software");
                        fHPDigitalSendinDup0TitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    }

                    return fHPDigitalSendinDup0TitleBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemMenuBarSyDup0MenuBar
            /// </summary>
            public MenuBar SystemMenuBarSyDup0MenuBar
            {
                get
                {
                    if (null == fSystemMenuBarSyDup0MenuBar)
                    {
                        fSystemMenuBarSyDup0MenuBar = new MenuBar("SystemMenuBarSyDup0MenuBar", HPDigitalSendinDup0TitleBar);
                        fSystemMenuBarSyDup0MenuBar.UIMap.Scope = UIASeachScope.Children;
                        fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                        fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    }

                    return fSystemMenuBarSyDup0MenuBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemItem1Dup0MenuItem
            /// </summary>
            public MenuItem SystemItem1Dup0MenuItem
            {
                get
                {
                    if (null == fSystemItem1Dup0MenuItem)
                    {
                        fSystemItem1Dup0MenuItem = new MenuItem("SystemItem1Dup0MenuItem", SystemMenuBarSyDup0MenuBar);
                        fSystemItem1Dup0MenuItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                        fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    }

                    return fSystemItem1Dup0MenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to MinimizeMinimizDup0Button
            /// </summary>
            public Button MinimizeMinimizDup0Button
            {
                get
                {
                    if (null == fMinimizeMinimizDup0Button)
                    {
                        fMinimizeMinimizDup0Button = new Button("MinimizeMinimizDup0Button", HPDigitalSendinDup0TitleBar);
                        fMinimizeMinimizDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                        fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                    }

                    return fMinimizeMinimizDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to MaximizeMaximizDup0Button
            /// </summary>
            public Button MaximizeMaximizDup0Button
            {
                get
                {
                    if (null == fMaximizeMaximizDup0Button)
                    {
                        fMaximizeMaximizDup0Button = new Button("MaximizeMaximizDup0Button", HPDigitalSendinDup0TitleBar);
                        fMaximizeMaximizDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                        fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                    }

                    return fMaximizeMaximizDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to CloseCloseDup0Button
            /// </summary>
            public Button CloseCloseDup0Button
            {
                get
                {
                    if (null == fCloseCloseDup0Button)
                    {
                        fCloseCloseDup0Button = new Button("CloseCloseDup0Button", HPDigitalSendinDup0TitleBar);
                        fCloseCloseDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                        fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    }

                    return fCloseCloseDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to ExporttheselectText
            /// </summary>
            public Text ExporttheselectText
            {
                get
                {
                    if (null == fExporttheselectText)
                    {
                        fExporttheselectText = new Text("ExporttheselectText", HPDigitalSendinDup1Window);
                        fExporttheselectText.UIMap.Scope = UIASeachScope.Children;
                        fExporttheselectText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export the selected address book or all address books?");
                        fExporttheselectText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A4BB9BC7-5827-4842-9386-2B22836AF6A4");
                        fExporttheselectText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fExporttheselectText;
                }
            }

            /// <summary>
            /// Gets Reference to SelectedButton6Button
            /// </summary>
            public Button SelectedButton6Button
            {
                get
                {
                    if (null == fSelectedButton6Button)
                    {
                        fSelectedButton6Button = new Button("SelectedButton6Button", HPDigitalSendinDup1Window);
                        fSelectedButton6Button.UIMap.Scope = UIASeachScope.Children;
                        fSelectedButton6Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Selected");
                        fSelectedButton6Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6986631D-1055-44ae-8522-4F00A6E9B9C0");
                        fSelectedButton6Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fSelectedButton6Button;
                }
            }

            /// <summary>
            /// Gets Reference to SelectedTextBloText
            /// </summary>
            public Text SelectedTextBloText
            {
                get
                {
                    if (null == fSelectedTextBloText)
                    {
                        fSelectedTextBloText = new Text("SelectedTextBloText", SelectedButton6Button);
                        fSelectedTextBloText.UIMap.Scope = UIASeachScope.Children;
                        fSelectedTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Selected");
                        fSelectedTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fSelectedTextBloText;
                }
            }

            /// <summary>
            /// Gets Reference to AllButton08AB07Button
            /// </summary>
            public Button AllButton08AB07Button
            {
                get
                {
                    if (null == fAllButton08AB07Button)
                    {
                        fAllButton08AB07Button = new Button("AllButton08AB07Button", HPDigitalSendinDup1Window);
                        fAllButton08AB07Button.UIMap.Scope = UIASeachScope.Children;
                        fAllButton08AB07Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"All");
                        fAllButton08AB07Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"08AB077B-E0E9-4bb5-9878-772CB6227E54");
                        fAllButton08AB07Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fAllButton08AB07Button;
                }
            }

            /// <summary>
            /// Gets Reference to AllTextBlockText
            /// </summary>
            public Text AllTextBlockText
            {
                get
                {
                    if (null == fAllTextBlockText)
                    {
                        fAllTextBlockText = new Text("AllTextBlockText", AllButton08AB07Button);
                        fAllTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fAllTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"All");
                        fAllTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAllTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to CancelButton087Button
            /// </summary>
            public Button CancelButton087Button
            {
                get
                {
                    if (null == fCancelButton087Button)
                    {
                        fCancelButton087Button = new Button("CancelButton087Button", HPDigitalSendinDup1Window);
                        fCancelButton087Button.UIMap.Scope = UIASeachScope.Children;
                        fCancelButton087Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                        fCancelButton087Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"087EE2E8-FBC0-4682-8B3D-77B88F19D844");
                        fCancelButton087Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fCancelButton087Button;
                }
            }

            /// <summary>
            /// Gets Reference to CancelTextBlockDup0Text
            /// </summary>
            public Text CancelTextBlockDup0Text
            {
                get
                {
                    if (null == fCancelTextBlockDup0Text)
                    {
                        fCancelTextBlockDup0Text = new Text("CancelTextBlockDup0Text", CancelButton087Button);
                        fCancelTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fCancelTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                        fCancelTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fCancelTextBlockDup0Text;
                }
            }


            /// <summary>
            /// Gets Reference to AddressBookManaTitleBar
            /// </summary>
            public TitleBar AddressBookManaTitleBar
            {
                get
                {
                    if (null == fAddressBookManaTitleBar)
                    {
                        fAddressBookManaTitleBar = new TitleBar("AddressBookManaTitleBar", AddressBookManaWindow);
                        fAddressBookManaTitleBar.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                        fAddressBookManaTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    }

                    return fAddressBookManaTitleBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemMenuBarSyDup1MenuBar
            /// </summary>
            public MenuBar SystemMenuBarSyDup1MenuBar
            {
                get
                {
                    if (null == fSystemMenuBarSyDup1MenuBar)
                    {
                        fSystemMenuBarSyDup1MenuBar = new MenuBar("SystemMenuBarSyDup1MenuBar", AddressBookManaTitleBar);
                        fSystemMenuBarSyDup1MenuBar.UIMap.Scope = UIASeachScope.Children;
                        fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                        fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    }

                    return fSystemMenuBarSyDup1MenuBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemItem1Dup1MenuItem
            /// </summary>
            public MenuItem SystemItem1Dup1MenuItem
            {
                get
                {
                    if (null == fSystemItem1Dup1MenuItem)
                    {
                        fSystemItem1Dup1MenuItem = new MenuItem("SystemItem1Dup1MenuItem", SystemMenuBarSyDup1MenuBar);
                        fSystemItem1Dup1MenuItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                        fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    }

                    return fSystemItem1Dup1MenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to MinimizeMinimizDup1Button
            /// </summary>
            public Button MinimizeMinimizDup1Button
            {
                get
                {
                    if (null == fMinimizeMinimizDup1Button)
                    {
                        fMinimizeMinimizDup1Button = new Button("MinimizeMinimizDup1Button", AddressBookManaTitleBar);
                        fMinimizeMinimizDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                        fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                    }

                    return fMinimizeMinimizDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to MaximizeMaximizDup1Button
            /// </summary>
            public Button MaximizeMaximizDup1Button
            {
                get
                {
                    if (null == fMaximizeMaximizDup1Button)
                    {
                        fMaximizeMaximizDup1Button = new Button("MaximizeMaximizDup1Button", AddressBookManaTitleBar);
                        fMaximizeMaximizDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                        fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                    }

                    return fMaximizeMaximizDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to CloseCloseDup1Button
            /// </summary>
            public Button CloseCloseDup1Button
            {
                get
                {
                    if (null == fCloseCloseDup1Button)
                    {
                        fCloseCloseDup1Button = new Button("CloseCloseDup1Button", AddressBookManaTitleBar);
                        fCloseCloseDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                        fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    }

                    return fCloseCloseDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to DSSAddressBooksDup0Text
            /// </summary>
            public Text DSSAddressBooksDup0Text
            {
                get
                {
                    if (null == fDSSAddressBooksDup0Text)
                    {
                        fDSSAddressBooksDup0Text = new Text("DSSAddressBooksDup0Text", AddressBookManaWindow);
                        fDSSAddressBooksDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fDSSAddressBooksDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"DSS Address Books");
                        fDSSAddressBooksDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fDSSAddressBooksDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to DSSAddressBooksDup1Text
            /// </summary>
            public Text DSSAddressBooksDup1Text
            {
                get
                {
                    if (null == fDSSAddressBooksDup1Text)
                    {
                        fDSSAddressBooksDup1Text = new Text("DSSAddressBooksDup1Text", DSSAddressBooksDup0Text);
                        fDSSAddressBooksDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fDSSAddressBooksDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"DSS Address Books");
                        fDSSAddressBooksDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fDSSAddressBooksDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to TreeView87DDA4CTree
            /// </summary>
            public Tree TreeView87DDA4CTree
            {
                get
                {
                    if (null == fTreeView87DDA4CTree)
                    {
                        fTreeView87DDA4CTree = new Tree("TreeView87DDA4CTree", AddressBookManaWindow);
                        fTreeView87DDA4CTree.UIMap.Scope = UIASeachScope.Children;
                        fTreeView87DDA4CTree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"87DDA4CA-8AA3-4101-B507-205367EF1C65");
                        fTreeView87DDA4CTree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeView");
                    }

                    return fTreeView87DDA4CTree;
                }
            }

            /// <summary>
            /// Gets Reference to PublicTreeViewITreeItem
            /// </summary>
            public TreeItem PublicTreeViewITreeItem
            {
                get
                {
                    if (null == fPublicTreeViewITreeItem)
                    {
                        fPublicTreeViewITreeItem = new TreeItem("PublicTreeViewITreeItem", TreeView87DDA4CTree);
                        fPublicTreeViewITreeItem.UIMap.Scope = UIASeachScope.Children;
                        fPublicTreeViewITreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Public");
                        fPublicTreeViewITreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    }

                    return fPublicTreeViewITreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to ButtonExpanderDup0Button
            /// </summary>
            public Button ButtonExpanderDup0Button
            {
                get
                {
                    if (null == fButtonExpanderDup0Button)
                    {
                        fButtonExpanderDup0Button = new Button("ButtonExpanderDup0Button", PublicTreeViewITreeItem);
                        fButtonExpanderDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fButtonExpanderDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                        fButtonExpanderDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fButtonExpanderDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to PublicTextBlockText
            /// </summary>
            public Text PublicTextBlockText
            {
                get
                {
                    if (null == fPublicTextBlockText)
                    {
                        fPublicTextBlockText = new Text("PublicTextBlockText", PublicTreeViewITreeItem);
                        fPublicTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fPublicTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Public");
                        fPublicTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fPublicTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to PrivateAddressBTreeItem
            /// </summary>
            public TreeItem PrivateAddressBTreeItem
            {
                get
                {
                    if (null == fPrivateAddressBTreeItem)
                    {
                        fPrivateAddressBTreeItem = new TreeItem("PrivateAddressBTreeItem", TreeView87DDA4CTree);
                        fPrivateAddressBTreeItem.UIMap.Scope = UIASeachScope.Children;
                        fPrivateAddressBTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Private Address Books");
                        fPrivateAddressBTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    }

                    return fPrivateAddressBTreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to ButtonExpanderDup1Button
            /// </summary>
            public Button ButtonExpanderDup1Button
            {
                get
                {
                    if (null == fButtonExpanderDup1Button)
                    {
                        fButtonExpanderDup1Button = new Button("ButtonExpanderDup1Button", PrivateAddressBTreeItem);
                        fButtonExpanderDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fButtonExpanderDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                        fButtonExpanderDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fButtonExpanderDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to PrivateAddressBText
            /// </summary>
            public Text PrivateAddressBText
            {
                get
                {
                    if (null == fPrivateAddressBText)
                    {
                        fPrivateAddressBText = new Text("PrivateAddressBText", PrivateAddressBTreeItem);
                        fPrivateAddressBText.UIMap.Scope = UIASeachScope.Children;
                        fPrivateAddressBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Private Address Books");
                        fPrivateAddressBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fPrivateAddressBText;
                }
            }

            /// <summary>
            /// Gets Reference to ExportButtonA1CButton
            /// </summary>
            public Button ExportButtonA1CButton
            {
                get
                {
                    if (null == fExportButtonA1CButton)
                    {
                        fExportButtonA1CButton = new Button("ExportButtonA1CButton", AddressBookManaWindow);
                        fExportButtonA1CButton.UIMap.Scope = UIASeachScope.Children;
                        fExportButtonA1CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                        fExportButtonA1CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A1CCB21F-FF18-45c0-9508-205AB68DF6FA");
                        fExportButtonA1CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fExportButtonA1CButton;
                }
            }

            /// <summary>
            /// Gets Reference to ExportTextBlockText
            /// </summary>
            public Text ExportTextBlockText
            {
                get
                {
                    if (null == fExportTextBlockText)
                    {
                        fExportTextBlockText = new Text("ExportTextBlockText", ExportButtonA1CButton);
                        fExportTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                        fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fExportTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to DeleteButton1B6Button
            /// </summary>
            public Button DeleteButton1B6Button
            {
                get
                {
                    if (null == fDeleteButton1B6Button)
                    {
                        fDeleteButton1B6Button = new Button("DeleteButton1B6Button", AddressBookManaWindow);
                        fDeleteButton1B6Button.UIMap.Scope = UIASeachScope.Children;
                        fDeleteButton1B6Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                        fDeleteButton1B6Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1B69E89F-D211-4da8-B934-C5619A2C5295");
                        fDeleteButton1B6Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fDeleteButton1B6Button;
                }
            }

            /// <summary>
            /// Gets Reference to DeleteTextBlockDup0Text
            /// </summary>
            public Text DeleteTextBlockDup0Text
            {
                get
                {
                    if (null == fDeleteTextBlockDup0Text)
                    {
                        fDeleteTextBlockDup0Text = new Text("DeleteTextBlockDup0Text", DeleteButton1B6Button);
                        fDeleteTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fDeleteTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                        fDeleteTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fDeleteTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to ImportAddressBoButton
            /// </summary>
            public Button ImportAddressBoButton
            {
                get
                {
                    if (null == fImportAddressBoButton)
                    {
                        fImportAddressBoButton = new Button("ImportAddressBoButton", AddressBookManaWindow);
                        fImportAddressBoButton.UIMap.Scope = UIASeachScope.Children;
                        fImportAddressBoButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import Address Book");
                        fImportAddressBoButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2822A2FE-4E84-44ce-B27A-B204BD728AA6");
                        fImportAddressBoButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fImportAddressBoButton;
                }
            }

            /// <summary>
            /// Gets Reference to ImportAddressBoText
            /// </summary>
            public Text ImportAddressBoText
            {
                get
                {
                    if (null == fImportAddressBoText)
                    {
                        fImportAddressBoText = new Text("ImportAddressBoText", ImportAddressBoButton);
                        fImportAddressBoText.UIMap.Scope = UIASeachScope.Children;
                        fImportAddressBoText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import Address Book");
                        fImportAddressBoText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fImportAddressBoText;
                }
            }

            /// <summary>
            /// Gets Reference to GridSplitterThumb
            /// </summary>
            public Thumb GridSplitterThumb
            {
                get
                {
                    if (null == fGridSplitterThumb)
                    {
                        fGridSplitterThumb = new Thumb("GridSplitterThumb", AddressBookManaWindow);
                        fGridSplitterThumb.UIMap.Scope = UIASeachScope.Children;
                        fGridSplitterThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridSplitter");
                    }

                    return fGridSplitterThumb;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookContDup0Text
            /// </summary>
            public Text AddressBookContDup0Text
            {
                get
                {
                    if (null == fAddressBookContDup0Text)
                    {
                        fAddressBookContDup0Text = new Text("AddressBookContDup0Text", AddressBookManaWindow);
                        fAddressBookContDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookContDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Contacts");
                        fAddressBookContDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fAddressBookContDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookContDup1Text
            /// </summary>
            public Text AddressBookContDup1Text
            {
                get
                {
                    if (null == fAddressBookContDup1Text)
                    {
                        fAddressBookContDup1Text = new Text("AddressBookContDup1Text", AddressBookContDup0Text);
                        fAddressBookContDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookContDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Contacts");
                        fAddressBookContDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAddressBookContDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to RefreshButton81Button
            /// </summary>
            public Button RefreshButton81Button
            {
                get
                {
                    if (null == fRefreshButton81Button)
                    {
                        fRefreshButton81Button = new Button("RefreshButton81Button", AddressBookManaWindow);
                        fRefreshButton81Button.UIMap.Scope = UIASeachScope.Children;
                        fRefreshButton81Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Refresh");
                        fRefreshButton81Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8136A442-0D15-4415-920C-CA43DED3D002");
                        fRefreshButton81Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fRefreshButton81Button;
                }
            }

            /// <summary>
            /// Gets Reference to RefreshTextBlocText
            /// </summary>
            public Text RefreshTextBlocText
            {
                get
                {
                    if (null == fRefreshTextBlocText)
                    {
                        fRefreshTextBlocText = new Text("RefreshTextBlocText", RefreshButton81Button);
                        fRefreshTextBlocText.UIMap.Scope = UIASeachScope.Children;
                        fRefreshTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Refresh");
                        fRefreshTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fRefreshTextBlocText;
                }
            }

            /// <summary>
            /// Gets Reference to SearchForText
            /// </summary>
            public Text SearchForText
            {
                get
                {
                    if (null == fSearchForText)
                    {
                        fSearchForText = new Text("SearchForText", AddressBookManaWindow);
                        fSearchForText.UIMap.Scope = UIASeachScope.Children;
                        fSearchForText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search For");
                        fSearchForText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fSearchForText;
                }
            }

            /// <summary>
            /// Gets Reference to SearchForTextBlText
            /// </summary>
            public Text SearchForTextBlText
            {
                get
                {
                    if (null == fSearchForTextBlText)
                    {
                        fSearchForTextBlText = new Text("SearchForTextBlText", SearchForText);
                        fSearchForTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fSearchForTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search For");
                        fSearchForTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fSearchForTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to ComboBoxA5F891AComboBox
            /// </summary>
            public ComboBox ComboBoxA5F891AComboBox
            {
                get
                {
                    if (null == fComboBoxA5F891AComboBox)
                    {
                        fComboBoxA5F891AComboBox = new ComboBox("ComboBoxA5F891AComboBox", AddressBookManaWindow);
                        fComboBoxA5F891AComboBox.UIMap.Scope = UIASeachScope.Children;
                        fComboBoxA5F891AComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A5F891A4-D564-4D03-A3CF-020D3DFEABFE");
                        fComboBoxA5F891AComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    }

                    return fComboBoxA5F891AComboBox;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxA7B3B6CFEdit
            /// </summary>
            public Edit TextBoxA7B3B6CFEdit
            {
                get
                {
                    if (null == fTextBoxA7B3B6CFEdit)
                    {
                        fTextBoxA7B3B6CFEdit = new Edit("TextBoxA7B3B6CFEdit", AddressBookManaWindow);
                        fTextBoxA7B3B6CFEdit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxA7B3B6CFEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A7B3B6CF-CA57-4C41-B012-E680FF33571A");
                        fTextBoxA7B3B6CFEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBoxA7B3B6CFEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup0Pane
            /// </summary>
            public Pane ScrollViewerPARDup0Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup0Pane)
                    {
                        fScrollViewerPARDup0Pane = new Pane("ScrollViewerPARDup0Pane", TextBoxA7B3B6CFEdit);
                        fScrollViewerPARDup0Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup0Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup0ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup0ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup0ScrollBar)
                    {
                        fScrollBarVerticDup0ScrollBar = new ScrollBar("ScrollBarVerticDup0ScrollBar", ScrollViewerPARDup0Pane);
                        fScrollBarVerticDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup0ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup0ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup0ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup0ScrollBar)
                    {
                        fScrollBarHorizoDup0ScrollBar = new ScrollBar("ScrollBarHorizoDup0ScrollBar", ScrollViewerPARDup0Pane);
                        fScrollBarHorizoDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup0ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to FilterButtonEB0Button
            /// </summary>
            public Button FilterButtonEB0Button
            {
                get
                {
                    if (null == fFilterButtonEB0Button)
                    {
                        fFilterButtonEB0Button = new Button("FilterButtonEB0Button", AddressBookManaWindow);
                        fFilterButtonEB0Button.UIMap.Scope = UIASeachScope.Children;
                        fFilterButtonEB0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Filter");
                        fFilterButtonEB0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"EB01B2A2-BF39-42A0-AE00-B0FC20AD66B5");
                        fFilterButtonEB0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fFilterButtonEB0Button;
                }
            }

            /// <summary>
            /// Gets Reference to FilterTextBlockText
            /// </summary>
            public Text FilterTextBlockText
            {
                get
                {
                    if (null == fFilterTextBlockText)
                    {
                        fFilterTextBlockText = new Text("FilterTextBlockText", FilterButtonEB0Button);
                        fFilterTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fFilterTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Filter");
                        fFilterTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fFilterTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to ClearButtonEC9FButton
            /// </summary>
            public Button ClearButtonEC9FButton
            {
                get
                {
                    if (null == fClearButtonEC9FButton)
                    {
                        fClearButtonEC9FButton = new Button("ClearButtonEC9FButton", AddressBookManaWindow);
                        fClearButtonEC9FButton.UIMap.Scope = UIASeachScope.Children;
                        fClearButtonEC9FButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear");
                        fClearButtonEC9FButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"EC9F1512-82D9-47DF-835E-F1257E37CDC4");
                        fClearButtonEC9FButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fClearButtonEC9FButton;
                }
            }

            /// <summary>
            /// Gets Reference to ClearTextBlockText
            /// </summary>
            public Text ClearTextBlockText
            {
                get
                {
                    if (null == fClearTextBlockText)
                    {
                        fClearTextBlockText = new Text("ClearTextBlockText", ClearButtonEC9FButton);
                        fClearTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fClearTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear");
                        fClearTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fClearTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to ListViewbb668d9DataGrid
            /// </summary>
            public DataGrid ListViewbb668d9DataGrid
            {
                get
                {
                    if (null == fListViewbb668d9DataGrid)
                    {
                        fListViewbb668d9DataGrid = new DataGrid("ListViewbb668d9DataGrid", AddressBookManaWindow);
                        fListViewbb668d9DataGrid.UIMap.Scope = UIASeachScope.Children;
                        fListViewbb668d9DataGrid.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"bb668d97-1a07-4f0e-bad1-f6fcbfbf7c99");
                        fListViewbb668d9DataGrid.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListView");
                    }

                    return fListViewbb668d9DataGrid;
                }
            }

            /// <summary>
            /// Gets Reference to GridViewHeaderRHeader
            /// </summary>
            public Header GridViewHeaderRHeader
            {
                get
                {
                    if (null == fGridViewHeaderRHeader)
                    {
                        fGridViewHeaderRHeader = new Header("GridViewHeaderRHeader", ListViewbb668d9DataGrid);
                        fGridViewHeaderRHeader.UIMap.Scope = UIASeachScope.Children;
                        fGridViewHeaderRHeader.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewHeaderRowPresenter");
                    }

                    return fGridViewHeaderRHeader;
                }
            }

            /// <summary>
            /// Gets Reference to ContactNameGridHeaderItem
            /// </summary>
            public HeaderItem ContactNameGridHeaderItem
            {
                get
                {
                    if (null == fContactNameGridHeaderItem)
                    {
                        fContactNameGridHeaderItem = new HeaderItem("ContactNameGridHeaderItem", GridViewHeaderRHeader);
                        fContactNameGridHeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fContactNameGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Contact Name");
                        fContactNameGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    }

                    return fContactNameGridHeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to ContactNameTextText
            /// </summary>
            public Text ContactNameTextText
            {
                get
                {
                    if (null == fContactNameTextText)
                    {
                        fContactNameTextText = new Text("ContactNameTextText", ContactNameGridHeaderItem);
                        fContactNameTextText.UIMap.Scope = UIASeachScope.Children;
                        fContactNameTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Contact Name");
                        fContactNameTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fContactNameTextText;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup0Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup0Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup0Thumb)
                    {
                        fThumbPARTHeadeDup0Thumb = new Thumb("ThumbPARTHeadeDup0Thumb", ContactNameGridHeaderItem);
                        fThumbPARTHeadeDup0Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup0Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to EmailAddressGriHeaderItem
            /// </summary>
            public HeaderItem EmailAddressGriHeaderItem
            {
                get
                {
                    if (null == fEmailAddressGriHeaderItem)
                    {
                        fEmailAddressGriHeaderItem = new HeaderItem("EmailAddressGriHeaderItem", GridViewHeaderRHeader);
                        fEmailAddressGriHeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fEmailAddressGriHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail Address");
                        fEmailAddressGriHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    }

                    return fEmailAddressGriHeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to EmailAddressTexText
            /// </summary>
            public Text EmailAddressTexText
            {
                get
                {
                    if (null == fEmailAddressTexText)
                    {
                        fEmailAddressTexText = new Text("EmailAddressTexText", EmailAddressGriHeaderItem);
                        fEmailAddressTexText.UIMap.Scope = UIASeachScope.Children;
                        fEmailAddressTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail Address");
                        fEmailAddressTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fEmailAddressTexText;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup1Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup1Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup1Thumb)
                    {
                        fThumbPARTHeadeDup1Thumb = new Thumb("ThumbPARTHeadeDup1Thumb", EmailAddressGriHeaderItem);
                        fThumbPARTHeadeDup1Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup1Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to FaxNumberGridViHeaderItem
            /// </summary>
            public HeaderItem FaxNumberGridViHeaderItem
            {
                get
                {
                    if (null == fFaxNumberGridViHeaderItem)
                    {
                        fFaxNumberGridViHeaderItem = new HeaderItem("FaxNumberGridViHeaderItem", GridViewHeaderRHeader);
                        fFaxNumberGridViHeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fFaxNumberGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax Number");
                        fFaxNumberGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    }

                    return fFaxNumberGridViHeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to FaxNumberTextBlText
            /// </summary>
            public Text FaxNumberTextBlText
            {
                get
                {
                    if (null == fFaxNumberTextBlText)
                    {
                        fFaxNumberTextBlText = new Text("FaxNumberTextBlText", FaxNumberGridViHeaderItem);
                        fFaxNumberTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fFaxNumberTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax Number");
                        fFaxNumberTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fFaxNumberTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup2Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup2Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup2Thumb)
                    {
                        fThumbPARTHeadeDup2Thumb = new Thumb("ThumbPARTHeadeDup2Thumb", FaxNumberGridViHeaderItem);
                        fThumbPARTHeadeDup2Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup2Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to HPMfpAppServiceDataItem
            /// </summary>
            public DataItem HPMfpAppServiceDataItem
            {
                get
                {
                    if (null == fHPMfpAppServiceDataItem)
                    {
                        fHPMfpAppServiceDataItem = new DataItem("HPMfpAppServiceDataItem", ListViewbb668d9DataGrid);
                        fHPMfpAppServiceDataItem.UIMap.Scope = UIASeachScope.Children;
                        fHPMfpAppServiceDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP.Mfp.App.Services.AddressBook.EmailFaxMergeRecord");
                        fHPMfpAppServiceDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                    }

                    return fHPMfpAppServiceDataItem;
                }
            }

            /// <summary>
            /// Gets Reference to fgTextBlockText
            /// </summary>
            public Text fgTextBlockText
            {
                get
                {
                    if (null == ffgTextBlockText)
                    {
                        ffgTextBlockText = new Text("fgTextBlockText", HPMfpAppServiceDataItem);
                        ffgTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        ffgTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"fg");
                        ffgTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return ffgTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to wscomTextBlockText
            /// </summary>
            public Text wscomTextBlockText
            {
                get
                {
                    if (null == fwscomTextBlockText)
                    {
                        fwscomTextBlockText = new Text("wscomTextBlockText", HPMfpAppServiceDataItem);
                        fwscomTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fwscomTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"w@s.com");
                        fwscomTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fwscomTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to A656565TextBlocText
            /// </summary>
            public Text A656565TextBlocText
            {
                get
                {
                    if (null == fA656565TextBlocText)
                    {
                        fA656565TextBlocText = new Text("A656565TextBlocText", HPMfpAppServiceDataItem);
                        fA656565TextBlocText.UIMap.Scope = UIASeachScope.Children;
                        fA656565TextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"656565");
                        fA656565TextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fA656565TextBlocText;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPcontactsareText
            /// </summary>
            public Text LDAPcontactsareText
            {
                get
                {
                    if (null == fLDAPcontactsareText)
                    {
                        fLDAPcontactsareText = new Text("LDAPcontactsareText", AddressBookManaWindow);
                        fLDAPcontactsareText.UIMap.Scope = UIASeachScope.Children;
                        fLDAPcontactsareText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP contacts are not managed or editable in the Address Book Manager. 11 LDAP replicated addresses in the database.");
                        fLDAPcontactsareText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AA1B018A-76A3-4D20-8E79-E621B97E6BA0");
                        fLDAPcontactsareText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fLDAPcontactsareText;
                }
            }

            /// <summary>
            /// Gets Reference to DeleteButton41BButton
            /// </summary>
            public Button DeleteButton41BButton
            {
                get
                {
                    if (null == fDeleteButton41BButton)
                    {
                        fDeleteButton41BButton = new Button("DeleteButton41BButton", AddressBookManaWindow);
                        fDeleteButton41BButton.UIMap.Scope = UIASeachScope.Children;
                        fDeleteButton41BButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                        fDeleteButton41BButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"41B96573-563B-4253-90EB-9F3492FA5BCB");
                        fDeleteButton41BButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fDeleteButton41BButton;
                }
            }

            /// <summary>
            /// Gets Reference to DeleteTextBlockDup1Text
            /// </summary>
            public Text DeleteTextBlockDup1Text
            {
                get
                {
                    if (null == fDeleteTextBlockDup1Text)
                    {
                        fDeleteTextBlockDup1Text = new Text("DeleteTextBlockDup1Text", DeleteButton41BButton);
                        fDeleteTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fDeleteTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                        fDeleteTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fDeleteTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to EditButton548EBButton
            /// </summary>
            public Button EditButton548EBButton
            {
                get
                {
                    if (null == fEditButton548EBButton)
                    {
                        fEditButton548EBButton = new Button("EditButton548EBButton", AddressBookManaWindow);
                        fEditButton548EBButton.UIMap.Scope = UIASeachScope.Children;
                        fEditButton548EBButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit");
                        fEditButton548EBButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"548EB117-4E78-4199-9C93-6D5BA80C353F");
                        fEditButton548EBButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fEditButton548EBButton;
                }
            }

            /// <summary>
            /// Gets Reference to EditTextBlockText
            /// </summary>
            public Text EditTextBlockText
            {
                get
                {
                    if (null == fEditTextBlockText)
                    {
                        fEditTextBlockText = new Text("EditTextBlockText", EditButton548EBButton);
                        fEditTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fEditTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit");
                        fEditTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fEditTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to AddGroupButton7Button
            /// </summary>
            public Button AddGroupButton7Button
            {
                get
                {
                    if (null == fAddGroupButton7Button)
                    {
                        fAddGroupButton7Button = new Button("AddGroupButton7Button", AddressBookManaWindow);
                        fAddGroupButton7Button.UIMap.Scope = UIASeachScope.Children;
                        fAddGroupButton7Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group");
                        fAddGroupButton7Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7EE85ED2-2E3A-4700-9C01-52D668AEB8F2");
                        fAddGroupButton7Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fAddGroupButton7Button;
                }
            }

            /// <summary>
            /// Gets Reference to AddGroupTextBloText
            /// </summary>
            public Text AddGroupTextBloText
            {
                get
                {
                    if (null == fAddGroupTextBloText)
                    {
                        fAddGroupTextBloText = new Text("AddGroupTextBloText", AddGroupButton7Button);
                        fAddGroupTextBloText.UIMap.Scope = UIASeachScope.Children;
                        fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group");
                        fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAddGroupTextBloText;
                }
            }

            /// <summary>
            /// Gets Reference to AddContactButtoButton
            /// </summary>
            public Button AddContactButtoButton
            {
                get
                {
                    if (null == fAddContactButtoButton)
                    {
                        fAddContactButtoButton = new Button("AddContactButtoButton", AddressBookManaWindow);
                        fAddContactButtoButton.UIMap.Scope = UIASeachScope.Children;
                        fAddContactButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Contact");
                        fAddContactButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"F80F266E-41DB-42b4-A289-A9F4B0869F9F");
                        fAddContactButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fAddContactButtoButton;
                }
            }

            /// <summary>
            /// Gets Reference to AddContactTextBText
            /// </summary>
            public Text AddContactTextBText
            {
                get
                {
                    if (null == fAddContactTextBText)
                    {
                        fAddContactTextBText = new Text("AddContactTextBText", AddContactButtoButton);
                        fAddContactTextBText.UIMap.Scope = UIASeachScope.Children;
                        fAddContactTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Contact");
                        fAddContactTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAddContactTextBText;
                }
            }

            /// <summary>
            /// Gets Reference to OKButtonFA1AC0AButton
            /// </summary>
            public Button OKButtonFA1AC0AButton
            {
                get
                {
                    if (null == fOKButtonFA1AC0AButton)
                    {
                        fOKButtonFA1AC0AButton = new Button("OKButtonFA1AC0AButton", AddressBookManaWindow);
                        fOKButtonFA1AC0AButton.UIMap.Scope = UIASeachScope.Children;
                        fOKButtonFA1AC0AButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                        fOKButtonFA1AC0AButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FA1AC0AD-9D58-4cb9-A4B3-6E89E4E5BE0D");
                        fOKButtonFA1AC0AButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fOKButtonFA1AC0AButton;
                }
            }

            /// <summary>
            /// Gets Reference to OKTextBlockDup0Text
            /// </summary>
            public Text OKTextBlockDup0Text
            {
                get
                {
                    if (null == fOKTextBlockDup0Text)
                    {
                        fOKTextBlockDup0Text = new Text("OKTextBlockDup0Text", OKButtonFA1AC0AButton);
                        fOKTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                        fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fOKTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to HPDigitalSendinDup1TitleBar
            /// </summary>
            public TitleBar HPDigitalSendinDup1TitleBar
            {
                get
                {
                    if (null == fHPDigitalSendinDup1TitleBar)
                    {
                        fHPDigitalSendinDup1TitleBar = new TitleBar("HPDigitalSendinDup1TitleBar", HPDigitalSendinDup0Window);
                        fHPDigitalSendinDup1TitleBar.UIMap.Scope = UIASeachScope.Children;
                        fHPDigitalSendinDup1TitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Digital Sending Software Configuration (Server IP Address: 15.75.49.181)");
                        fHPDigitalSendinDup1TitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    }

                    return fHPDigitalSendinDup1TitleBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemMenuBarSyDup2MenuBar
            /// </summary>
            public MenuBar SystemMenuBarSyDup2MenuBar
            {
                get
                {
                    if (null == fSystemMenuBarSyDup2MenuBar)
                    {
                        fSystemMenuBarSyDup2MenuBar = new MenuBar("SystemMenuBarSyDup2MenuBar", HPDigitalSendinDup1TitleBar);
                        fSystemMenuBarSyDup2MenuBar.UIMap.Scope = UIASeachScope.Children;
                        fSystemMenuBarSyDup2MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                        fSystemMenuBarSyDup2MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    }

                    return fSystemMenuBarSyDup2MenuBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemItem1Dup2MenuItem
            /// </summary>
            public MenuItem SystemItem1Dup2MenuItem
            {
                get
                {
                    if (null == fSystemItem1Dup2MenuItem)
                    {
                        fSystemItem1Dup2MenuItem = new MenuItem("SystemItem1Dup2MenuItem", SystemMenuBarSyDup2MenuBar);
                        fSystemItem1Dup2MenuItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemItem1Dup2MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                        fSystemItem1Dup2MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    }

                    return fSystemItem1Dup2MenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to MinimizeMinimizDup2Button
            /// </summary>
            public Button MinimizeMinimizDup2Button
            {
                get
                {
                    if (null == fMinimizeMinimizDup2Button)
                    {
                        fMinimizeMinimizDup2Button = new Button("MinimizeMinimizDup2Button", HPDigitalSendinDup1TitleBar);
                        fMinimizeMinimizDup2Button.UIMap.Scope = UIASeachScope.Children;
                        fMinimizeMinimizDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                        fMinimizeMinimizDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                    }

                    return fMinimizeMinimizDup2Button;
                }
            }

            /// <summary>
            /// Gets Reference to MaximizeMaximizDup2Button
            /// </summary>
            public Button MaximizeMaximizDup2Button
            {
                get
                {
                    if (null == fMaximizeMaximizDup2Button)
                    {
                        fMaximizeMaximizDup2Button = new Button("MaximizeMaximizDup2Button", HPDigitalSendinDup1TitleBar);
                        fMaximizeMaximizDup2Button.UIMap.Scope = UIASeachScope.Children;
                        fMaximizeMaximizDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                        fMaximizeMaximizDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                    }

                    return fMaximizeMaximizDup2Button;
                }
            }

            /// <summary>
            /// Gets Reference to CloseCloseDup2Button
            /// </summary>
            public Button CloseCloseDup2Button
            {
                get
                {
                    if (null == fCloseCloseDup2Button)
                    {
                        fCloseCloseDup2Button = new Button("CloseCloseDup2Button", HPDigitalSendinDup1TitleBar);
                        fCloseCloseDup2Button.UIMap.Scope = UIASeachScope.Children;
                        fCloseCloseDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                        fCloseCloseDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    }

                    return fCloseCloseDup2Button;
                }
            }

            /// <summary>
            /// Gets Reference to HelpButtonCB8CFButton
            /// </summary>
            public Button HelpButtonCB8CFButton
            {
                get
                {
                    if (null == fHelpButtonCB8CFButton)
                    {
                        fHelpButtonCB8CFButton = new Button("HelpButtonCB8CFButton", HPDigitalSendinDup0Window);
                        fHelpButtonCB8CFButton.UIMap.Scope = UIASeachScope.Children;
                        fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                        fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CB8CF0C3-DFBE-49b8-B09B-03A34F5D4186");
                        fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fHelpButtonCB8CFButton;
                }
            }

            /// <summary>
            /// Gets Reference to HelpTextBlockText
            /// </summary>
            public Text HelpTextBlockText
            {
                get
                {
                    if (null == fHelpTextBlockText)
                    {
                        fHelpTextBlockText = new Text("HelpTextBlockText", HelpButtonCB8CFButton);
                        fHelpTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                        fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fHelpTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to ApplyButton61E2Button
            /// </summary>
            public Button ApplyButton61E2Button
            {
                get
                {
                    if (null == fApplyButton61E2Button)
                    {
                        fApplyButton61E2Button = new Button("ApplyButton61E2Button", HPDigitalSendinDup0Window);
                        fApplyButton61E2Button.UIMap.Scope = UIASeachScope.Children;
                        fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                        fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"61E2369B-F53B-4662-A361-B3034C4EFF67");
                        fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fApplyButton61E2Button;
                }
            }

            /// <summary>
            /// Gets Reference to ApplyTextBlockText
            /// </summary>
            public Text ApplyTextBlockText
            {
                get
                {
                    if (null == fApplyTextBlockText)
                    {
                        fApplyTextBlockText = new Text("ApplyTextBlockText", ApplyButton61E2Button);
                        fApplyTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                        fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fApplyTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to CancelButton65CButton
            /// </summary>
            public Button CancelButton65CButton
            {
                get
                {
                    if (null == fCancelButton65CButton)
                    {
                        fCancelButton65CButton = new Button("CancelButton65CButton", HPDigitalSendinDup0Window);
                        fCancelButton65CButton.UIMap.Scope = UIASeachScope.Children;
                        fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                        fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"65C76204-7AB5-4681-B7FD-2D8F02DA6D4B");
                        fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fCancelButton65CButton;
                }
            }

            /// <summary>
            /// Gets Reference to CancelTextBlockDup1Text
            /// </summary>
            public Text CancelTextBlockDup1Text
            {
                get
                {
                    if (null == fCancelTextBlockDup1Text)
                    {
                        fCancelTextBlockDup1Text = new Text("CancelTextBlockDup1Text", CancelButton65CButton);
                        fCancelTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fCancelTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                        fCancelTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fCancelTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to OKButtonCC2EF49Button
            /// </summary>
            public Button OKButtonCC2EF49Button
            {
                get
                {
                    if (null == fOKButtonCC2EF49Button)
                    {
                        fOKButtonCC2EF49Button = new Button("OKButtonCC2EF49Button", HPDigitalSendinDup0Window);
                        fOKButtonCC2EF49Button.UIMap.Scope = UIASeachScope.Children;
                        fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                        fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CC2EF491-0BD1-4ac5-9D00-AA61A9D6BA0C");
                        fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fOKButtonCC2EF49Button;
                }
            }

            /// <summary>
            /// Gets Reference to OKTextBlockDup1Text
            /// </summary>
            public Text OKTextBlockDup1Text
            {
                get
                {
                    if (null == fOKTextBlockDup1Text)
                    {
                        fOKTextBlockDup1Text = new Text("OKTextBlockDup1Text", OKButtonCC2EF49Button);
                        fOKTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                        fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fOKTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to TabControlec0fdTab
            /// </summary>
            public Tab TabControlec0fdTab
            {
                get
                {
                    if (null == fTabControlec0fdTab)
                    {
                        fTabControlec0fdTab = new Tab("TabControlec0fdTab", HPDigitalSendinDup0Window);
                        fTabControlec0fdTab.UIMap.Scope = UIASeachScope.Children;
                        fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ec0fd6cd-2ab8-482f-96a5-d1fa158f38d1");
                        fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                    }

                    return fTabControlec0fdTab;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup0TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup0TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup0TabItem)
                    {
                        fSystemWindowsCoDup0TabItem = new TabItem("SystemWindowsCoDup0TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup0TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1e2be878-0c03-4404-988c-54d0df925f0f");
                        fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup0TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to GeneralTextmGenText
            /// </summary>
            public Text GeneralTextmGenText
            {
                get
                {
                    if (null == fGeneralTextmGenText)
                    {
                        fGeneralTextmGenText = new Text("GeneralTextmGenText", SystemWindowsCoDup0TabItem);
                        fGeneralTextmGenText.UIMap.Scope = UIASeachScope.Children;
                        fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                        fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                        fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fGeneralTextmGenText;
                }
            }

            /// <summary>
            /// Gets Reference to GeneralTextBlocText
            /// </summary>
            public Text GeneralTextBlocText
            {
                get
                {
                    if (null == fGeneralTextBlocText)
                    {
                        fGeneralTextBlocText = new Text("GeneralTextBlocText", GeneralTextmGenText);
                        fGeneralTextBlocText.UIMap.Scope = UIASeachScope.Children;
                        fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                        fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fGeneralTextBlocText;
                }
            }

            /// <summary>
            /// Gets Reference to Text933345b04e3Text
            /// </summary>
            public Text Text933345b04e3Text
            {
                get
                {
                    if (null == fText933345b04e3Text)
                    {
                        fText933345b04e3Text = new Text("Text933345b04e3Text", SystemWindowsCoDup0TabItem);
                        fText933345b04e3Text.UIMap.Scope = UIASeachScope.Children;
                        fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                        fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"933345b0-4e39-44d3-a511-0077f3176ca4");
                        fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText933345b04e3Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text786caf67344Text
            /// </summary>
            public Text Text786caf67344Text
            {
                get
                {
                    if (null == fText786caf67344Text)
                    {
                        fText786caf67344Text = new Text("Text786caf67344Text", SystemWindowsCoDup0TabItem);
                        fText786caf67344Text.UIMap.Scope = UIASeachScope.Children;
                        fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"786caf67-344f-4ddc-83a5-b9431fb36731");
                        fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText786caf67344Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup1TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup1TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup1TabItem)
                    {
                        fSystemWindowsCoDup1TabItem = new TabItem("SystemWindowsCoDup1TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup1TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4e90d18a-f33c-43c0-8505-08f4a17169b5");
                        fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup1TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to AuthenticationTDup0Text
            /// </summary>
            public Text AuthenticationTDup0Text
            {
                get
                {
                    if (null == fAuthenticationTDup0Text)
                    {
                        fAuthenticationTDup0Text = new Text("AuthenticationTDup0Text", SystemWindowsCoDup1TabItem);
                        fAuthenticationTDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                        fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                        fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fAuthenticationTDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to AuthenticationTDup1Text
            /// </summary>
            public Text AuthenticationTDup1Text
            {
                get
                {
                    if (null == fAuthenticationTDup1Text)
                    {
                        fAuthenticationTDup1Text = new Text("AuthenticationTDup1Text", AuthenticationTDup0Text);
                        fAuthenticationTDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                        fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAuthenticationTDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text31EC91730B9Text
            /// </summary>
            public Text Text31EC91730B9Text
            {
                get
                {
                    if (null == fText31EC91730B9Text)
                    {
                        fText31EC91730B9Text = new Text("Text31EC91730B9Text", SystemWindowsCoDup1TabItem);
                        fText31EC91730B9Text.UIMap.Scope = UIASeachScope.Children;
                        fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                        fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"31EC9173-0B98-4d46-BC99-7DF8EA2BE02F");
                        fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText31EC91730B9Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextA479C271445Text
            /// </summary>
            public Text TextA479C271445Text
            {
                get
                {
                    if (null == fTextA479C271445Text)
                    {
                        fTextA479C271445Text = new Text("TextA479C271445Text", SystemWindowsCoDup1TabItem);
                        fTextA479C271445Text.UIMap.Scope = UIASeachScope.Children;
                        fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A479C271-445D-43f1-864D-7503428703E4");
                        fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fTextA479C271445Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup2TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup2TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup2TabItem)
                    {
                        fSystemWindowsCoDup2TabItem = new TabItem("SystemWindowsCoDup2TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup2TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33A07ED3-E1EE-411e-B583-7D0A3374100F");
                        fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup2TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to EmailTextmEmailText
            /// </summary>
            public Text EmailTextmEmailText
            {
                get
                {
                    if (null == fEmailTextmEmailText)
                    {
                        fEmailTextmEmailText = new Text("EmailTextmEmailText", SystemWindowsCoDup2TabItem);
                        fEmailTextmEmailText.UIMap.Scope = UIASeachScope.Children;
                        fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                        fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                        fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fEmailTextmEmailText;
                }
            }

            /// <summary>
            /// Gets Reference to EmailTextBlockText
            /// </summary>
            public Text EmailTextBlockText
            {
                get
                {
                    if (null == fEmailTextBlockText)
                    {
                        fEmailTextBlockText = new Text("EmailTextBlockText", EmailTextmEmailText);
                        fEmailTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                        fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fEmailTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to Text32de714a8bdText
            /// </summary>
            public Text Text32de714a8bdText
            {
                get
                {
                    if (null == fText32de714a8bdText)
                    {
                        fText32de714a8bdText = new Text("Text32de714a8bdText", SystemWindowsCoDup2TabItem);
                        fText32de714a8bdText.UIMap.Scope = UIASeachScope.Children;
                        fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                        fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"32de714a-8bda-4f11-bf20-b9a56b5f18bc");
                        fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText32de714a8bdText;
                }
            }

            /// <summary>
            /// Gets Reference to Text3b2a8761f4fText
            /// </summary>
            public Text Text3b2a8761f4fText
            {
                get
                {
                    if (null == fText3b2a8761f4fText)
                    {
                        fText3b2a8761f4fText = new Text("Text3b2a8761f4fText", SystemWindowsCoDup2TabItem);
                        fText3b2a8761f4fText.UIMap.Scope = UIASeachScope.Children;
                        fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3b2a8761-f4f6-41b1-b08c-9c33744bdc43");
                        fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText3b2a8761f4fText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBlockText
            /// </summary>
            public Text TextBlockText
            {
                get
                {
                    if (null == fTextBlockText)
                    {
                        fTextBlockText = new Text("TextBlockText", Text3b2a8761f4fText);
                        fTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup3TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup3TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup3TabItem)
                    {
                        fSystemWindowsCoDup3TabItem = new TabItem("SystemWindowsCoDup3TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup3TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4f116988-2b22-473f-bca3-094589a44954");
                        fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup3TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to FaxTextmFaxTabLText
            /// </summary>
            public Text FaxTextmFaxTabLText
            {
                get
                {
                    if (null == fFaxTextmFaxTabLText)
                    {
                        fFaxTextmFaxTabLText = new Text("FaxTextmFaxTabLText", SystemWindowsCoDup3TabItem);
                        fFaxTextmFaxTabLText.UIMap.Scope = UIASeachScope.Children;
                        fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                        fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                        fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fFaxTextmFaxTabLText;
                }
            }

            /// <summary>
            /// Gets Reference to FaxTextBlockText
            /// </summary>
            public Text FaxTextBlockText
            {
                get
                {
                    if (null == fFaxTextBlockText)
                    {
                        fFaxTextBlockText = new Text("FaxTextBlockText", FaxTextmFaxTabLText);
                        fFaxTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                        fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fFaxTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to TextD1ED4F16F38Text
            /// </summary>
            public Text TextD1ED4F16F38Text
            {
                get
                {
                    if (null == fTextD1ED4F16F38Text)
                    {
                        fTextD1ED4F16F38Text = new Text("TextD1ED4F16F38Text", SystemWindowsCoDup3TabItem);
                        fTextD1ED4F16F38Text.UIMap.Scope = UIASeachScope.Children;
                        fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                        fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D1ED4F16-F389-4dfd-A884-D258EDB48C11");
                        fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fTextD1ED4F16F38Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text7DDE04FD251Text
            /// </summary>
            public Text Text7DDE04FD251Text
            {
                get
                {
                    if (null == fText7DDE04FD251Text)
                    {
                        fText7DDE04FD251Text = new Text("Text7DDE04FD251Text", SystemWindowsCoDup3TabItem);
                        fText7DDE04FD251Text.UIMap.Scope = UIASeachScope.Children;
                        fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7DDE04FD-2519-44c2-A212-67B0838E1C91");
                        fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText7DDE04FD251Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup4TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup4TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup4TabItem)
                    {
                        fSystemWindowsCoDup4TabItem = new TabItem("SystemWindowsCoDup4TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup4TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ff96a045-6e12-4ce3-ba85-b65d16c39ffb");
                        fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup4TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to SendtoFolderTexDup0Text
            /// </summary>
            public Text SendtoFolderTexDup0Text
            {
                get
                {
                    if (null == fSendtoFolderTexDup0Text)
                    {
                        fSendtoFolderTexDup0Text = new Text("SendtoFolderTexDup0Text", SystemWindowsCoDup4TabItem);
                        fSendtoFolderTexDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                        fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                        fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fSendtoFolderTexDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to SendtoFolderTexDup1Text
            /// </summary>
            public Text SendtoFolderTexDup1Text
            {
                get
                {
                    if (null == fSendtoFolderTexDup1Text)
                    {
                        fSendtoFolderTexDup1Text = new Text("SendtoFolderTexDup1Text", SendtoFolderTexDup0Text);
                        fSendtoFolderTexDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                        fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fSendtoFolderTexDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text7a57f43ecb1Text
            /// </summary>
            public Text Text7a57f43ecb1Text
            {
                get
                {
                    if (null == fText7a57f43ecb1Text)
                    {
                        fText7a57f43ecb1Text = new Text("Text7a57f43ecb1Text", SystemWindowsCoDup4TabItem);
                        fText7a57f43ecb1Text.UIMap.Scope = UIASeachScope.Children;
                        fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                        fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                        fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText7a57f43ecb1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text654b650dd19Text
            /// </summary>
            public Text Text654b650dd19Text
            {
                get
                {
                    if (null == fText654b650dd19Text)
                    {
                        fText654b650dd19Text = new Text("Text654b650dd19Text", SystemWindowsCoDup4TabItem);
                        fText654b650dd19Text.UIMap.Scope = UIASeachScope.Children;
                        fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                        fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText654b650dd19Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup5TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup5TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup5TabItem)
                    {
                        fSystemWindowsCoDup5TabItem = new TabItem("SystemWindowsCoDup5TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup5TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"38feb495-2893-4d8b-8961-31ebc2a3bd56");
                        fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup5TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to WorkflowsTextmWText
            /// </summary>
            public Text WorkflowsTextmWText
            {
                get
                {
                    if (null == fWorkflowsTextmWText)
                    {
                        fWorkflowsTextmWText = new Text("WorkflowsTextmWText", SystemWindowsCoDup5TabItem);
                        fWorkflowsTextmWText.UIMap.Scope = UIASeachScope.Children;
                        fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                        fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                        fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fWorkflowsTextmWText;
                }
            }

            /// <summary>
            /// Gets Reference to WorkflowsTextBlText
            /// </summary>
            public Text WorkflowsTextBlText
            {
                get
                {
                    if (null == fWorkflowsTextBlText)
                    {
                        fWorkflowsTextBlText = new Text("WorkflowsTextBlText", WorkflowsTextmWText);
                        fWorkflowsTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                        fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fWorkflowsTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to Text22D9C34E84CText
            /// </summary>
            public Text Text22D9C34E84CText
            {
                get
                {
                    if (null == fText22D9C34E84CText)
                    {
                        fText22D9C34E84CText = new Text("Text22D9C34E84CText", SystemWindowsCoDup5TabItem);
                        fText22D9C34E84CText.UIMap.Scope = UIASeachScope.Children;
                        fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                        fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22D9C34E-84C8-4995-AC9E-5B46F8284284");
                        fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText22D9C34E84CText;
                }
            }

            /// <summary>
            /// Gets Reference to TextC8D15BD39C8Text
            /// </summary>
            public Text TextC8D15BD39C8Text
            {
                get
                {
                    if (null == fTextC8D15BD39C8Text)
                    {
                        fTextC8D15BD39C8Text = new Text("TextC8D15BD39C8Text", SystemWindowsCoDup5TabItem);
                        fTextC8D15BD39C8Text.UIMap.Scope = UIASeachScope.Children;
                        fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C8D15BD3-9C8D-484c-A5E2-309CA8AA6C56");
                        fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fTextC8D15BD39C8Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup6TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup6TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup6TabItem)
                    {
                        fSystemWindowsCoDup6TabItem = new TabItem("SystemWindowsCoDup6TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup6TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b8c06323-208e-4239-a523-a025661e0eab");
                        fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup6TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to AddressingTextmText
            /// </summary>
            public Text AddressingTextmText
            {
                get
                {
                    if (null == fAddressingTextmText)
                    {
                        fAddressingTextmText = new Text("AddressingTextmText", SystemWindowsCoDup6TabItem);
                        fAddressingTextmText.UIMap.Scope = UIASeachScope.Children;
                        fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                        fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                        fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fAddressingTextmText;
                }
            }

            /// <summary>
            /// Gets Reference to AddressingTextBText
            /// </summary>
            public Text AddressingTextBText
            {
                get
                {
                    if (null == fAddressingTextBText)
                    {
                        fAddressingTextBText = new Text("AddressingTextBText", AddressingTextmText);
                        fAddressingTextBText.UIMap.Scope = UIASeachScope.Children;
                        fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                        fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAddressingTextBText;
                }
            }

            /// <summary>
            /// Gets Reference to Text47EB5CBA4D1Text
            /// </summary>
            public Text Text47EB5CBA4D1Text
            {
                get
                {
                    if (null == fText47EB5CBA4D1Text)
                    {
                        fText47EB5CBA4D1Text = new Text("Text47EB5CBA4D1Text", SystemWindowsCoDup6TabItem);
                        fText47EB5CBA4D1Text.UIMap.Scope = UIASeachScope.Children;
                        fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                        fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"47EB5CBA-4D1C-4eee-AD64-E26BDA31A3AC");
                        fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText47EB5CBA4D1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text0757E148179Text
            /// </summary>
            public Text Text0757E148179Text
            {
                get
                {
                    if (null == fText0757E148179Text)
                    {
                        fText0757E148179Text = new Text("Text0757E148179Text", SystemWindowsCoDup6TabItem);
                        fText0757E148179Text.UIMap.Scope = UIASeachScope.Children;
                        fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0757E148-1794-4a5d-B378-6BE8049F65E1");
                        fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText0757E148179Text;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPane
            /// </summary>
            public Pane ScrollViewerPane
            {
                get
                {
                    if (null == fScrollViewerPane)
                    {
                        fScrollViewerPane = new Pane("ScrollViewerPane", SystemWindowsCoDup6TabItem);
                        fScrollViewerPane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPane;
                }
            }

            /// <summary>
            /// Gets Reference to AddressingNetwoCustom
            /// </summary>
            public Custom AddressingNetwoCustom
            {
                get
                {
                    if (null == fAddressingNetwoCustom)
                    {
                        fAddressingNetwoCustom = new Custom("AddressingNetwoCustom", ScrollViewerPane);
                        fAddressingNetwoCustom.UIMap.Scope = UIASeachScope.Children;
                        fAddressingNetwoCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingNetworkContactsUserControl");
                        fAddressingNetwoCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AddressingNetworkContactsUserControl");
                    }

                    return fAddressingNetwoCustom;
                }
            }

            /// <summary>
            /// Gets Reference to ErrorConflictUsCustom
            /// </summary>
            public Custom ErrorConflictUsCustom
            {
                get
                {
                    if (null == fErrorConflictUsCustom)
                    {
                        fErrorConflictUsCustom = new Custom("ErrorConflictUsCustom", AddressingNetwoCustom);
                        fErrorConflictUsCustom.UIMap.Scope = UIASeachScope.Children;
                        fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mErrorConflictUserControl");
                        fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ErrorConflictUserControl");
                    }

                    return fErrorConflictUsCustom;
                }
            }

            /// <summary>
            /// Gets Reference to SearchMethodGroGroup
            /// </summary>
            public Group SearchMethodGroGroup
            {
                get
                {
                    if (null == fSearchMethodGroGroup)
                    {
                        fSearchMethodGroGroup = new Group("SearchMethodGroGroup", AddressingNetwoCustom);
                        fSearchMethodGroGroup.UIMap.Scope = UIASeachScope.Children;
                        fSearchMethodGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search Method");
                        fSearchMethodGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddrSearchMethodGroupBox");
                        fSearchMethodGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    }

                    return fSearchMethodGroGroup;
                }
            }

            /// <summary>
            /// Gets Reference to SearchMethodTexText
            /// </summary>
            public Text SearchMethodTexText
            {
                get
                {
                    if (null == fSearchMethodTexText)
                    {
                        fSearchMethodTexText = new Text("SearchMethodTexText", SearchMethodGroGroup);
                        fSearchMethodTexText.UIMap.Scope = UIASeachScope.Children;
                        fSearchMethodTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search Method");
                        fSearchMethodTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fSearchMethodTexText;
                }
            }

            /// <summary>
            /// Gets Reference to QuickSearchFindRadioButton
            /// </summary>
            public RadioButton QuickSearchFindRadioButton
            {
                get
                {
                    if (null == fQuickSearchFindRadioButton)
                    {
                        fQuickSearchFindRadioButton = new RadioButton("QuickSearchFindRadioButton", SearchMethodGroGroup);
                        fQuickSearchFindRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fQuickSearchFindRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Search (Find matches beginning with the search string.)");
                        fQuickSearchFindRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a4cd062e-2a81-441c-b0f4-212efcecacf7");
                        fQuickSearchFindRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    }

                    return fQuickSearchFindRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to QuickSearchFindText
            /// </summary>
            public Text QuickSearchFindText
            {
                get
                {
                    if (null == fQuickSearchFindText)
                    {
                        fQuickSearchFindText = new Text("QuickSearchFindText", QuickSearchFindRadioButton);
                        fQuickSearchFindText.UIMap.Scope = UIASeachScope.Children;
                        fQuickSearchFindText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Search (Find matches beginning with the search string.)");
                        fQuickSearchFindText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fQuickSearchFindText;
                }
            }

            /// <summary>
            /// Gets Reference to DetailedSearchFRadioButton
            /// </summary>
            public RadioButton DetailedSearchFRadioButton
            {
                get
                {
                    if (null == fDetailedSearchFRadioButton)
                    {
                        fDetailedSearchFRadioButton = new RadioButton("DetailedSearchFRadioButton", SearchMethodGroGroup);
                        fDetailedSearchFRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fDetailedSearchFRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Detailed Search (Find matches containing the search string.)");
                        fDetailedSearchFRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84bc451d-eca7-4d72-adee-f6d05739d60e");
                        fDetailedSearchFRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    }

                    return fDetailedSearchFRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to DetailedSearchFText
            /// </summary>
            public Text DetailedSearchFText
            {
                get
                {
                    if (null == fDetailedSearchFText)
                    {
                        fDetailedSearchFText = new Text("DetailedSearchFText", DetailedSearchFRadioButton);
                        fDetailedSearchFText.UIMap.Scope = UIASeachScope.Children;
                        fDetailedSearchFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Detailed Search (Find matches containing the search string.)");
                        fDetailedSearchFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fDetailedSearchFText;
                }
            }

            /// <summary>
            /// Gets Reference to PersonalContactGroup
            /// </summary>
            public Group PersonalContactGroup
            {
                get
                {
                    if (null == fPersonalContactGroup)
                    {
                        fPersonalContactGroup = new Group("PersonalContactGroup", AddressingNetwoCustom);
                        fPersonalContactGroup.UIMap.Scope = UIASeachScope.Children;
                        fPersonalContactGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Personal Contacts");
                        fPersonalContactGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddrPersonalContactsBox");
                        fPersonalContactGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    }

                    return fPersonalContactGroup;
                }
            }

            /// <summary>
            /// Gets Reference to PersonalContactText
            /// </summary>
            public Text PersonalContactText
            {
                get
                {
                    if (null == fPersonalContactText)
                    {
                        fPersonalContactText = new Text("PersonalContactText", PersonalContactGroup);
                        fPersonalContactText.UIMap.Scope = UIASeachScope.Children;
                        fPersonalContactText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Personal Contacts");
                        fPersonalContactText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fPersonalContactText;
                }
            }

            /// <summary>
            /// Gets Reference to ThepersonalcontText
            /// </summary>
            public Text ThepersonalcontText
            {
                get
                {
                    if (null == fThepersonalcontText)
                    {
                        fThepersonalcontText = new Text("ThepersonalcontText", PersonalContactGroup);
                        fThepersonalcontText.UIMap.Scope = UIASeachScope.Children;
                        fThepersonalcontText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"The personal contacts for a user can be retrieved from a Microsoft Exchange Server if the user has a Personal Address Book (PAB) associated with his or her user account.");
                        fThepersonalcontText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fThepersonalcontText;
                }
            }

            /// <summary>
            /// Gets Reference to EnablePersonalCCheckBox
            /// </summary>
            public CheckBox EnablePersonalCCheckBox
            {
                get
                {
                    if (null == fEnablePersonalCCheckBox)
                    {
                        fEnablePersonalCCheckBox = new CheckBox("EnablePersonalCCheckBox", PersonalContactGroup);
                        fEnablePersonalCCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fEnablePersonalCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Personal Contacts (when users sign in to Windows at the device)");
                        fEnablePersonalCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3edca417-7e14-47e9-8731-cf88146e55c7");
                        fEnablePersonalCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fEnablePersonalCCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to EnablePersonalCText
            /// </summary>
            public Text EnablePersonalCText
            {
                get
                {
                    if (null == fEnablePersonalCText)
                    {
                        fEnablePersonalCText = new Text("EnablePersonalCText", EnablePersonalCCheckBox);
                        fEnablePersonalCText.UIMap.Scope = UIASeachScope.Children;
                        fEnablePersonalCText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Personal Contacts (when users sign in to Windows at the device)");
                        fEnablePersonalCText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fEnablePersonalCText;
                }
            }

            /// <summary>
            /// Gets Reference to TestExchangeSerGroup
            /// </summary>
            public Group TestExchangeSerGroup
            {
                get
                {
                    if (null == fTestExchangeSerGroup)
                    {
                        fTestExchangeSerGroup = new Group("TestExchangeSerGroup", PersonalContactGroup);
                        fTestExchangeSerGroup.UIMap.Scope = UIASeachScope.Children;
                        fTestExchangeSerGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test Exchange Server");
                        fTestExchangeSerGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mTestPersonalContactsServerGroupBox");
                        fTestExchangeSerGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    }

                    return fTestExchangeSerGroup;
                }
            }

            /// <summary>
            /// Gets Reference to TestExchangeSerText
            /// </summary>
            public Text TestExchangeSerText
            {
                get
                {
                    if (null == fTestExchangeSerText)
                    {
                        fTestExchangeSerText = new Text("TestExchangeSerText", TestExchangeSerGroup);
                        fTestExchangeSerText.UIMap.Scope = UIASeachScope.Children;
                        fTestExchangeSerText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test Exchange Server");
                        fTestExchangeSerText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fTestExchangeSerText;
                }
            }

            /// <summary>
            /// Gets Reference to WindowsDomainDup0Text
            /// </summary>
            public Text WindowsDomainDup0Text
            {
                get
                {
                    if (null == fWindowsDomainDup0Text)
                    {
                        fWindowsDomainDup0Text = new Text("WindowsDomainDup0Text", TestExchangeSerGroup);
                        fWindowsDomainDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fWindowsDomainDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Domain");
                        fWindowsDomainDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fWindowsDomainDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to WindowsDomainTeText
            /// </summary>
            public Text WindowsDomainTeText
            {
                get
                {
                    if (null == fWindowsDomainTeText)
                    {
                        fWindowsDomainTeText = new Text("WindowsDomainTeText", WindowsDomainDup0Text);
                        fWindowsDomainTeText.UIMap.Scope = UIASeachScope.Children;
                        fWindowsDomainTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Domain");
                        fWindowsDomainTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fWindowsDomainTeText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox0857B9D0Edit
            /// </summary>
            public Edit TextBox0857B9D0Edit
            {
                get
                {
                    if (null == fTextBox0857B9D0Edit)
                    {
                        fTextBox0857B9D0Edit = new Edit("TextBox0857B9D0Edit", TestExchangeSerGroup);
                        fTextBox0857B9D0Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox0857B9D0Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0857B9D0-3168-40aa-8702-9566638D2738");
                        fTextBox0857B9D0Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox0857B9D0Edit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup1Pane
            /// </summary>
            public Pane ScrollViewerPARDup1Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup1Pane)
                    {
                        fScrollViewerPARDup1Pane = new Pane("ScrollViewerPARDup1Pane", TextBox0857B9D0Edit);
                        fScrollViewerPARDup1Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup1Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup1ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup1ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup1ScrollBar)
                    {
                        fScrollBarVerticDup1ScrollBar = new ScrollBar("ScrollBarVerticDup1ScrollBar", ScrollViewerPARDup1Pane);
                        fScrollBarVerticDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup1ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup1ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup1ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup1ScrollBar)
                    {
                        fScrollBarHorizoDup1ScrollBar = new ScrollBar("ScrollBarHorizoDup1ScrollBar", ScrollViewerPARDup1Pane);
                        fScrollBarHorizoDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup1ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to UsernameDup0Text
            /// </summary>
            public Text UsernameDup0Text
            {
                get
                {
                    if (null == fUsernameDup0Text)
                    {
                        fUsernameDup0Text = new Text("UsernameDup0Text", TestExchangeSerGroup);
                        fUsernameDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fUsernameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                        fUsernameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fUsernameDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to UsernameTextBloDup0Text
            /// </summary>
            public Text UsernameTextBloDup0Text
            {
                get
                {
                    if (null == fUsernameTextBloDup0Text)
                    {
                        fUsernameTextBloDup0Text = new Text("UsernameTextBloDup0Text", UsernameDup0Text);
                        fUsernameTextBloDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fUsernameTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                        fUsernameTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fUsernameTextBloDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox9B0DA4ABEdit
            /// </summary>
            public Edit TextBox9B0DA4ABEdit
            {
                get
                {
                    if (null == fTextBox9B0DA4ABEdit)
                    {
                        fTextBox9B0DA4ABEdit = new Edit("TextBox9B0DA4ABEdit", TestExchangeSerGroup);
                        fTextBox9B0DA4ABEdit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox9B0DA4ABEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9B0DA4AB-57EF-42dc-ADFE-210DEA97A0D7");
                        fTextBox9B0DA4ABEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox9B0DA4ABEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup2Pane
            /// </summary>
            public Pane ScrollViewerPARDup2Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup2Pane)
                    {
                        fScrollViewerPARDup2Pane = new Pane("ScrollViewerPARDup2Pane", TextBox9B0DA4ABEdit);
                        fScrollViewerPARDup2Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup2Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup2ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup2ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup2ScrollBar)
                    {
                        fScrollBarVerticDup2ScrollBar = new ScrollBar("ScrollBarVerticDup2ScrollBar", ScrollViewerPARDup2Pane);
                        fScrollBarVerticDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup2ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup2ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup2ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup2ScrollBar)
                    {
                        fScrollBarHorizoDup2ScrollBar = new ScrollBar("ScrollBarHorizoDup2ScrollBar", ScrollViewerPARDup2Pane);
                        fScrollBarHorizoDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup2ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to PasswordDup0Text
            /// </summary>
            public Text PasswordDup0Text
            {
                get
                {
                    if (null == fPasswordDup0Text)
                    {
                        fPasswordDup0Text = new Text("PasswordDup0Text", TestExchangeSerGroup);
                        fPasswordDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fPasswordDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                        fPasswordDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fPasswordDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to PasswordTextBloDup0Text
            /// </summary>
            public Text PasswordTextBloDup0Text
            {
                get
                {
                    if (null == fPasswordTextBloDup0Text)
                    {
                        fPasswordTextBloDup0Text = new Text("PasswordTextBloDup0Text", PasswordDup0Text);
                        fPasswordTextBloDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fPasswordTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                        fPasswordTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fPasswordTextBloDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to PasswordBox6B3CEdit
            /// </summary>
            public Edit PasswordBox6B3CEdit
            {
                get
                {
                    if (null == fPasswordBox6B3CEdit)
                    {
                        fPasswordBox6B3CEdit = new Edit("PasswordBox6B3CEdit", TestExchangeSerGroup);
                        fPasswordBox6B3CEdit.UIMap.Scope = UIASeachScope.Children;
                        fPasswordBox6B3CEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6B3C5D9A-9C11-4c17-A2EE-0C3749EE142F");
                        fPasswordBox6B3CEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"PasswordBox");
                    }

                    return fPasswordBox6B3CEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup3Pane
            /// </summary>
            public Pane ScrollViewerPARDup3Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup3Pane)
                    {
                        fScrollViewerPARDup3Pane = new Pane("ScrollViewerPARDup3Pane", PasswordBox6B3CEdit);
                        fScrollViewerPARDup3Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup3Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup3ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup3ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup3ScrollBar)
                    {
                        fScrollBarVerticDup3ScrollBar = new ScrollBar("ScrollBarVerticDup3ScrollBar", ScrollViewerPARDup3Pane);
                        fScrollBarVerticDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup3ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup3ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup3ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup3ScrollBar)
                    {
                        fScrollBarHorizoDup3ScrollBar = new ScrollBar("ScrollBarHorizoDup3ScrollBar", ScrollViewerPARDup3Pane);
                        fScrollBarHorizoDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup3ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to TestText
            /// </summary>
            public Text TestText
            {
                get
                {
                    if (null == fTestText)
                    {
                        fTestText = new Text("TestText", TestExchangeSerGroup);
                        fTestText.UIMap.Scope = UIASeachScope.Children;
                        fTestText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                        fTestText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fTestText;
                }
            }

            /// <summary>
            /// Gets Reference to TestTextBlockDup0Text
            /// </summary>
            public Text TestTextBlockDup0Text
            {
                get
                {
                    if (null == fTestTextBlockDup0Text)
                    {
                        fTestTextBlockDup0Text = new Text("TestTextBlockDup0Text", TestText);
                        fTestTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fTestTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                        fTestTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fTestTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxDE0C2350Edit
            /// </summary>
            public Edit TextBoxDE0C2350Edit
            {
                get
                {
                    if (null == fTextBoxDE0C2350Edit)
                    {
                        fTextBoxDE0C2350Edit = new Edit("TextBoxDE0C2350Edit", TestExchangeSerGroup);
                        fTextBoxDE0C2350Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxDE0C2350Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DE0C2350-09E4-49dd-91B0-3260FFCC1A6E");
                        fTextBoxDE0C2350Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBoxDE0C2350Edit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup4Pane
            /// </summary>
            public Pane ScrollViewerPARDup4Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup4Pane)
                    {
                        fScrollViewerPARDup4Pane = new Pane("ScrollViewerPARDup4Pane", TextBoxDE0C2350Edit);
                        fScrollViewerPARDup4Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup4Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup4ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup4ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup4ScrollBar)
                    {
                        fScrollBarVerticDup4ScrollBar = new ScrollBar("ScrollBarVerticDup4ScrollBar", ScrollViewerPARDup4Pane);
                        fScrollBarVerticDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup4ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup4ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup4ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup4ScrollBar)
                    {
                        fScrollBarHorizoDup4ScrollBar = new ScrollBar("ScrollBarHorizoDup4ScrollBar", ScrollViewerPARDup4Pane);
                        fScrollBarHorizoDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup4ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to TestButtonA90BEButton
            /// </summary>
            public Button TestButtonA90BEButton
            {
                get
                {
                    if (null == fTestButtonA90BEButton)
                    {
                        fTestButtonA90BEButton = new Button("TestButtonA90BEButton", TestExchangeSerGroup);
                        fTestButtonA90BEButton.UIMap.Scope = UIASeachScope.Children;
                        fTestButtonA90BEButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                        fTestButtonA90BEButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A90BEE9C-966C-4bb4-9413-182793C513C6");
                        fTestButtonA90BEButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fTestButtonA90BEButton;
                }
            }

            /// <summary>
            /// Gets Reference to TestTextBlockDup1Text
            /// </summary>
            public Text TestTextBlockDup1Text
            {
                get
                {
                    if (null == fTestTextBlockDup1Text)
                    {
                        fTestTextBlockDup1Text = new Text("TestTextBlockDup1Text", TestButtonA90BEButton);
                        fTestTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fTestTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                        fTestTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fTestTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPReplicationGroup
            /// </summary>
            public Group LDAPReplicationGroup
            {
                get
                {
                    if (null == fLDAPReplicationGroup)
                    {
                        fLDAPReplicationGroup = new Group("LDAPReplicationGroup", AddressingNetwoCustom);
                        fLDAPReplicationGroup.UIMap.Scope = UIASeachScope.Children;
                        fLDAPReplicationGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Replication");
                        fLDAPReplicationGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mNetworkContactsGroupBox");
                        fLDAPReplicationGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    }

                    return fLDAPReplicationGroup;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPReplicationText
            /// </summary>
            public Text LDAPReplicationText
            {
                get
                {
                    if (null == fLDAPReplicationText)
                    {
                        fLDAPReplicationText = new Text("LDAPReplicationText", LDAPReplicationGroup);
                        fLDAPReplicationText.UIMap.Scope = UIASeachScope.Children;
                        fLDAPReplicationText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Replication");
                        fLDAPReplicationText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fLDAPReplicationText;
                }
            }

            /// <summary>
            /// Gets Reference to EnableNetworkCoCheckBox
            /// </summary>
            public CheckBox EnableNetworkCoCheckBox
            {
                get
                {
                    if (null == fEnableNetworkCoCheckBox)
                    {
                        fEnableNetworkCoCheckBox = new CheckBox("EnableNetworkCoCheckBox", LDAPReplicationGroup);
                        fEnableNetworkCoCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fEnableNetworkCoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Network Contacts (use LDAP server)");
                        fEnableNetworkCoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c771301b-e211-4fb2-809d-b4cb3bcd2067");
                        fEnableNetworkCoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fEnableNetworkCoCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to EnableNetworkCoText
            /// </summary>
            public Text EnableNetworkCoText
            {
                get
                {
                    if (null == fEnableNetworkCoText)
                    {
                        fEnableNetworkCoText = new Text("EnableNetworkCoText", EnableNetworkCoCheckBox);
                        fEnableNetworkCoText.UIMap.Scope = UIASeachScope.Children;
                        fEnableNetworkCoText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Network Contacts (use LDAP server)");
                        fEnableNetworkCoText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fEnableNetworkCoText;
                }
            }

            /// <summary>
            /// Gets Reference to ExpanderFD3555EGroup
            /// </summary>
            public Group ExpanderFD3555EGroup
            {
                get
                {
                    if (null == fExpanderFD3555EGroup)
                    {
                        fExpanderFD3555EGroup = new Group("ExpanderFD3555EGroup", LDAPReplicationGroup);
                        fExpanderFD3555EGroup.UIMap.Scope = UIASeachScope.Children;
                        fExpanderFD3555EGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FD3555EA-5DD8-4e8c-8013-4FBB6F98067E");
                        fExpanderFD3555EGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                    }

                    return fExpanderFD3555EGroup;
                }
            }

            /// <summary>
            /// Gets Reference to ButtonHeaderSitDup0Button
            /// </summary>
            public Button ButtonHeaderSitDup0Button
            {
                get
                {
                    if (null == fButtonHeaderSitDup0Button)
                    {
                        fButtonHeaderSitDup0Button = new Button("ButtonHeaderSitDup0Button", ExpanderFD3555EGroup);
                        fButtonHeaderSitDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fButtonHeaderSitDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                        fButtonHeaderSitDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fButtonHeaderSitDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to NetworkDirectorGroup
            /// </summary>
            public Group NetworkDirectorGroup
            {
                get
                {
                    if (null == fNetworkDirectorGroup)
                    {
                        fNetworkDirectorGroup = new Group("NetworkDirectorGroup", LDAPReplicationGroup);
                        fNetworkDirectorGroup.UIMap.Scope = UIASeachScope.Children;
                        fNetworkDirectorGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network Directory Server (LDAP)(Step 1)");
                        fNetworkDirectorGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mNetworkDirectoryServerGroupBox");
                        fNetworkDirectorGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    }

                    return fNetworkDirectorGroup;
                }
            }

            /// <summary>
            /// Gets Reference to NetworkDirectorText
            /// </summary>
            public Text NetworkDirectorText
            {
                get
                {
                    if (null == fNetworkDirectorText)
                    {
                        fNetworkDirectorText = new Text("NetworkDirectorText", NetworkDirectorGroup);
                        fNetworkDirectorText.UIMap.Scope = UIASeachScope.Children;
                        fNetworkDirectorText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network Directory Server (LDAP)(Step 1)");
                        fNetworkDirectorText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fNetworkDirectorText;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPServerAddreDup0Text
            /// </summary>
            public Text LDAPServerAddreDup0Text
            {
                get
                {
                    if (null == fLDAPServerAddreDup0Text)
                    {
                        fLDAPServerAddreDup0Text = new Text("LDAPServerAddreDup0Text", NetworkDirectorGroup);
                        fLDAPServerAddreDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fLDAPServerAddreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Server Address");
                        fLDAPServerAddreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fLDAPServerAddreDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPServerAddreDup1Text
            /// </summary>
            public Text LDAPServerAddreDup1Text
            {
                get
                {
                    if (null == fLDAPServerAddreDup1Text)
                    {
                        fLDAPServerAddreDup1Text = new Text("LDAPServerAddreDup1Text", LDAPServerAddreDup0Text);
                        fLDAPServerAddreDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fLDAPServerAddreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Server Address");
                        fLDAPServerAddreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fLDAPServerAddreDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox858933a3Edit
            /// </summary>
            public Edit TextBox858933a3Edit
            {
                get
                {
                    if (null == fTextBox858933a3Edit)
                    {
                        fTextBox858933a3Edit = new Edit("TextBox858933a3Edit", NetworkDirectorGroup);
                        fTextBox858933a3Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox858933a3Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"858933a3-105f-40aa-8176-87a5d24120fa");
                        fTextBox858933a3Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox858933a3Edit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup5Pane
            /// </summary>
            public Pane ScrollViewerPARDup5Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup5Pane)
                    {
                        fScrollViewerPARDup5Pane = new Pane("ScrollViewerPARDup5Pane", TextBox858933a3Edit);
                        fScrollViewerPARDup5Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup5Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup5ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup5ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup5ScrollBar)
                    {
                        fScrollBarVerticDup5ScrollBar = new ScrollBar("ScrollBarVerticDup5ScrollBar", ScrollViewerPARDup5Pane);
                        fScrollBarVerticDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup5ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup5ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup5ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup5ScrollBar)
                    {
                        fScrollBarHorizoDup5ScrollBar = new ScrollBar("ScrollBarHorizoDup5ScrollBar", ScrollViewerPARDup5Pane);
                        fScrollBarHorizoDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup5ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to AutoFindButton3Button
            /// </summary>
            public Button AutoFindButton3Button
            {
                get
                {
                    if (null == fAutoFindButton3Button)
                    {
                        fAutoFindButton3Button = new Button("AutoFindButton3Button", NetworkDirectorGroup);
                        fAutoFindButton3Button.UIMap.Scope = UIASeachScope.Children;
                        fAutoFindButton3Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                        fAutoFindButton3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"319d911c-7b59-45c9-9d29-e1b648578eab");
                        fAutoFindButton3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fAutoFindButton3Button;
                }
            }

            /// <summary>
            /// Gets Reference to AutoFindTextBloText
            /// </summary>
            public Text AutoFindTextBloText
            {
                get
                {
                    if (null == fAutoFindTextBloText)
                    {
                        fAutoFindTextBloText = new Text("AutoFindTextBloText", AutoFindButton3Button);
                        fAutoFindTextBloText.UIMap.Scope = UIASeachScope.Children;
                        fAutoFindTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                        fAutoFindTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAutoFindTextBloText;
                }
            }

            /// <summary>
            /// Gets Reference to HostnameorIPaddDup0Text
            /// </summary>
            public Text HostnameorIPaddDup0Text
            {
                get
                {
                    if (null == fHostnameorIPaddDup0Text)
                    {
                        fHostnameorIPaddDup0Text = new Text("HostnameorIPaddDup0Text", NetworkDirectorGroup);
                        fHostnameorIPaddDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fHostnameorIPaddDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname or IP address");
                        fHostnameorIPaddDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fHostnameorIPaddDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to HostnameorIPaddDup1Text
            /// </summary>
            public Text HostnameorIPaddDup1Text
            {
                get
                {
                    if (null == fHostnameorIPaddDup1Text)
                    {
                        fHostnameorIPaddDup1Text = new Text("HostnameorIPaddDup1Text", HostnameorIPaddDup0Text);
                        fHostnameorIPaddDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fHostnameorIPaddDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname or IP address");
                        fHostnameorIPaddDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fHostnameorIPaddDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to PortText
            /// </summary>
            public Text PortText
            {
                get
                {
                    if (null == fPortText)
                    {
                        fPortText = new Text("PortText", NetworkDirectorGroup);
                        fPortText.UIMap.Scope = UIASeachScope.Children;
                        fPortText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port");
                        fPortText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fPortText;
                }
            }

            /// <summary>
            /// Gets Reference to PortTextBlockText
            /// </summary>
            public Text PortTextBlockText
            {
                get
                {
                    if (null == fPortTextBlockText)
                    {
                        fPortTextBlockText = new Text("PortTextBlockText", PortText);
                        fPortTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fPortTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port");
                        fPortTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fPortTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to UseasecureconneCheckBox
            /// </summary>
            public CheckBox UseasecureconneCheckBox
            {
                get
                {
                    if (null == fUseasecureconneCheckBox)
                    {
                        fUseasecureconneCheckBox = new CheckBox("UseasecureconneCheckBox", NetworkDirectorGroup);
                        fUseasecureconneCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fUseasecureconneCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use a secure connection (SSL)");
                        fUseasecureconneCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f664dd2f-3a25-449d-adce-75616a828eef");
                        fUseasecureconneCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fUseasecureconneCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to UseasecureconneText
            /// </summary>
            public Text UseasecureconneText
            {
                get
                {
                    if (null == fUseasecureconneText)
                    {
                        fUseasecureconneText = new Text("UseasecureconneText", UseasecureconneCheckBox);
                        fUseasecureconneText.UIMap.Scope = UIASeachScope.Children;
                        fUseasecureconneText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use a secure connection (SSL)");
                        fUseasecureconneText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fUseasecureconneText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox79f22c3aEdit
            /// </summary>
            public Edit TextBox79f22c3aEdit
            {
                get
                {
                    if (null == fTextBox79f22c3aEdit)
                    {
                        fTextBox79f22c3aEdit = new Edit("TextBox79f22c3aEdit", NetworkDirectorGroup);
                        fTextBox79f22c3aEdit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox79f22c3aEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"79f22c3a-7b6e-4c21-96ce-aefbf8ca36aa");
                        fTextBox79f22c3aEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox79f22c3aEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup6Pane
            /// </summary>
            public Pane ScrollViewerPARDup6Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup6Pane)
                    {
                        fScrollViewerPARDup6Pane = new Pane("ScrollViewerPARDup6Pane", TextBox79f22c3aEdit);
                        fScrollViewerPARDup6Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup6Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup6ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup6ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup6ScrollBar)
                    {
                        fScrollBarVerticDup6ScrollBar = new ScrollBar("ScrollBarVerticDup6ScrollBar", ScrollViewerPARDup6Pane);
                        fScrollBarVerticDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup6ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup6ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup6ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup6ScrollBar)
                    {
                        fScrollBarHorizoDup6ScrollBar = new ScrollBar("ScrollBarHorizoDup6ScrollBar", ScrollViewerPARDup6Pane);
                        fScrollBarHorizoDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup6ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to Port636isthedefDup0Text
            /// </summary>
            public Text Port636isthedefDup0Text
            {
                get
                {
                    if (null == fPort636isthedefDup0Text)
                    {
                        fPort636isthedefDup0Text = new Text("Port636isthedefDup0Text", NetworkDirectorGroup);
                        fPort636isthedefDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fPort636isthedefDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port 636 is the default for TLS or SSL");
                        fPort636isthedefDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fPort636isthedefDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to Port636isthedefDup1Text
            /// </summary>
            public Text Port636isthedefDup1Text
            {
                get
                {
                    if (null == fPort636isthedefDup1Text)
                    {
                        fPort636isthedefDup1Text = new Text("Port636isthedefDup1Text", Port636isthedefDup0Text);
                        fPort636isthedefDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fPort636isthedefDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port 636 is the default for TLS or SSL");
                        fPort636isthedefDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fPort636isthedefDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to ExpanderDD1518FGroup
            /// </summary>
            public Group ExpanderDD1518FGroup
            {
                get
                {
                    if (null == fExpanderDD1518FGroup)
                    {
                        fExpanderDD1518FGroup = new Group("ExpanderDD1518FGroup", LDAPReplicationGroup);
                        fExpanderDD1518FGroup.UIMap.Scope = UIASeachScope.Children;
                        fExpanderDD1518FGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DD1518F6-229D-4794-BC45-4911B62A8276");
                        fExpanderDD1518FGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                    }

                    return fExpanderDD1518FGroup;
                }
            }

            /// <summary>
            /// Gets Reference to ButtonHeaderSitDup1Button
            /// </summary>
            public Button ButtonHeaderSitDup1Button
            {
                get
                {
                    if (null == fButtonHeaderSitDup1Button)
                    {
                        fButtonHeaderSitDup1Button = new Button("ButtonHeaderSitDup1Button", ExpanderDD1518FGroup);
                        fButtonHeaderSitDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fButtonHeaderSitDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                        fButtonHeaderSitDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fButtonHeaderSitDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to ServerAuthenticGroup
            /// </summary>
            public Group ServerAuthenticGroup
            {
                get
                {
                    if (null == fServerAuthenticGroup)
                    {
                        fServerAuthenticGroup = new Group("ServerAuthenticGroup", LDAPReplicationGroup);
                        fServerAuthenticGroup.UIMap.Scope = UIASeachScope.Children;
                        fServerAuthenticGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server Authentication Requirements(Step 2)");
                        fServerAuthenticGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mServerAuthRequirementsGroupBox");
                        fServerAuthenticGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    }

                    return fServerAuthenticGroup;
                }
            }

            /// <summary>
            /// Gets Reference to ServerAuthenticText
            /// </summary>
            public Text ServerAuthenticText
            {
                get
                {
                    if (null == fServerAuthenticText)
                    {
                        fServerAuthenticText = new Text("ServerAuthenticText", ServerAuthenticGroup);
                        fServerAuthenticText.UIMap.Scope = UIASeachScope.Children;
                        fServerAuthenticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server Authentication Requirements(Step 2)");
                        fServerAuthenticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fServerAuthenticText;
                }
            }

            /// <summary>
            /// Gets Reference to ServerdoesnotreRadioButton
            /// </summary>
            public RadioButton ServerdoesnotreRadioButton
            {
                get
                {
                    if (null == fServerdoesnotreRadioButton)
                    {
                        fServerdoesnotreRadioButton = new RadioButton("ServerdoesnotreRadioButton", ServerAuthenticGroup);
                        fServerdoesnotreRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fServerdoesnotreRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server does not require authentication");
                        fServerdoesnotreRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"836ec313-c8b4-46ce-ac74-630bc6e0753a");
                        fServerdoesnotreRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    }

                    return fServerdoesnotreRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to ServerdoesnotreText
            /// </summary>
            public Text ServerdoesnotreText
            {
                get
                {
                    if (null == fServerdoesnotreText)
                    {
                        fServerdoesnotreText = new Text("ServerdoesnotreText", ServerdoesnotreRadioButton);
                        fServerdoesnotreText.UIMap.Scope = UIASeachScope.Children;
                        fServerdoesnotreText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server does not require authentication");
                        fServerdoesnotreText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fServerdoesnotreText;
                }
            }

            /// <summary>
            /// Gets Reference to ServerrequiresaRadioButton
            /// </summary>
            public RadioButton ServerrequiresaRadioButton
            {
                get
                {
                    if (null == fServerrequiresaRadioButton)
                    {
                        fServerrequiresaRadioButton = new RadioButton("ServerrequiresaRadioButton", ServerAuthenticGroup);
                        fServerrequiresaRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fServerrequiresaRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server requires authentication");
                        fServerrequiresaRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"58374bee-32a1-40ba-9456-9722d6064b3f");
                        fServerrequiresaRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    }

                    return fServerrequiresaRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to ServerrequiresaText
            /// </summary>
            public Text ServerrequiresaText
            {
                get
                {
                    if (null == fServerrequiresaText)
                    {
                        fServerrequiresaText = new Text("ServerrequiresaText", ServerrequiresaRadioButton);
                        fServerrequiresaText.UIMap.Scope = UIASeachScope.Children;
                        fServerrequiresaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server requires authentication");
                        fServerrequiresaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fServerrequiresaText;
                }
            }

            /// <summary>
            /// Gets Reference to ComboBox5cd52d1ComboBox
            /// </summary>
            public ComboBox ComboBox5cd52d1ComboBox
            {
                get
                {
                    if (null == fComboBox5cd52d1ComboBox)
                    {
                        fComboBox5cd52d1ComboBox = new ComboBox("ComboBox5cd52d1ComboBox", ServerAuthenticGroup);
                        fComboBox5cd52d1ComboBox.UIMap.Scope = UIASeachScope.Children;
                        fComboBox5cd52d1ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5cd52d18-4bd7-4996-8fe1-acb2c3f2ff84");
                        fComboBox5cd52d1ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    }

                    return fComboBox5cd52d1ComboBox;
                }
            }

            /// <summary>
            /// Gets Reference to WindowsorLDAPsiText
            /// </summary>
            public Text WindowsorLDAPsiText
            {
                get
                {
                    if (null == fWindowsorLDAPsiText)
                    {
                        fWindowsorLDAPsiText = new Text("WindowsorLDAPsiText", ServerAuthenticGroup);
                        fWindowsorLDAPsiText.UIMap.Scope = UIASeachScope.Children;
                        fWindowsorLDAPsiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows or LDAP sign in should be required for using the E-mail and Fax functions at the device to successfully query the LDAP server.");
                        fWindowsorLDAPsiText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33ad2d95-602a-471f-b536-fbc90d4fa5c0");
                        fWindowsorLDAPsiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fWindowsorLDAPsiText;
                }
            }

            /// <summary>
            /// Gets Reference to UsernameDup1Text
            /// </summary>
            public Text UsernameDup1Text
            {
                get
                {
                    if (null == fUsernameDup1Text)
                    {
                        fUsernameDup1Text = new Text("UsernameDup1Text", ServerAuthenticGroup);
                        fUsernameDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fUsernameDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                        fUsernameDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fUsernameDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to UsernameTextBloDup1Text
            /// </summary>
            public Text UsernameTextBloDup1Text
            {
                get
                {
                    if (null == fUsernameTextBloDup1Text)
                    {
                        fUsernameTextBloDup1Text = new Text("UsernameTextBloDup1Text", UsernameDup1Text);
                        fUsernameTextBloDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fUsernameTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                        fUsernameTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fUsernameTextBloDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxb54cac9eEdit
            /// </summary>
            public Edit TextBoxb54cac9eEdit
            {
                get
                {
                    if (null == fTextBoxb54cac9eEdit)
                    {
                        fTextBoxb54cac9eEdit = new Edit("TextBoxb54cac9eEdit", ServerAuthenticGroup);
                        fTextBoxb54cac9eEdit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxb54cac9eEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b54cac9e-8c97-45bc-9e83-a304dfd477fb");
                        fTextBoxb54cac9eEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBoxb54cac9eEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup7Pane
            /// </summary>
            public Pane ScrollViewerPARDup7Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup7Pane)
                    {
                        fScrollViewerPARDup7Pane = new Pane("ScrollViewerPARDup7Pane", TextBoxb54cac9eEdit);
                        fScrollViewerPARDup7Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup7Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup7Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup7Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup7ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup7ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup7ScrollBar)
                    {
                        fScrollBarVerticDup7ScrollBar = new ScrollBar("ScrollBarVerticDup7ScrollBar", ScrollViewerPARDup7Pane);
                        fScrollBarVerticDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup7ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup7ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup7ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup7ScrollBar)
                    {
                        fScrollBarHorizoDup7ScrollBar = new ScrollBar("ScrollBarHorizoDup7ScrollBar", ScrollViewerPARDup7Pane);
                        fScrollBarHorizoDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup7ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to PasswordDup1Text
            /// </summary>
            public Text PasswordDup1Text
            {
                get
                {
                    if (null == fPasswordDup1Text)
                    {
                        fPasswordDup1Text = new Text("PasswordDup1Text", ServerAuthenticGroup);
                        fPasswordDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fPasswordDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                        fPasswordDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fPasswordDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to PasswordTextBloDup1Text
            /// </summary>
            public Text PasswordTextBloDup1Text
            {
                get
                {
                    if (null == fPasswordTextBloDup1Text)
                    {
                        fPasswordTextBloDup1Text = new Text("PasswordTextBloDup1Text", PasswordDup1Text);
                        fPasswordTextBloDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fPasswordTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                        fPasswordTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fPasswordTextBloDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to PasswordBox8ed9Edit
            /// </summary>
            public Edit PasswordBox8ed9Edit
            {
                get
                {
                    if (null == fPasswordBox8ed9Edit)
                    {
                        fPasswordBox8ed9Edit = new Edit("PasswordBox8ed9Edit", ServerAuthenticGroup);
                        fPasswordBox8ed9Edit.UIMap.Scope = UIASeachScope.Children;
                        fPasswordBox8ed9Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8ed98c8c-05d8-4392-be81-d6165bab46cd");
                        fPasswordBox8ed9Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"PasswordBox");
                    }

                    return fPasswordBox8ed9Edit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup8Pane
            /// </summary>
            public Pane ScrollViewerPARDup8Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup8Pane)
                    {
                        fScrollViewerPARDup8Pane = new Pane("ScrollViewerPARDup8Pane", PasswordBox8ed9Edit);
                        fScrollViewerPARDup8Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup8Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup8Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup8Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup8ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup8ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup8ScrollBar)
                    {
                        fScrollBarVerticDup8ScrollBar = new ScrollBar("ScrollBarVerticDup8ScrollBar", ScrollViewerPARDup8Pane);
                        fScrollBarVerticDup8ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup8ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup8ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup8ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup8ScrollBar)
                    {
                        fScrollBarHorizoDup8ScrollBar = new ScrollBar("ScrollBarHorizoDup8ScrollBar", ScrollViewerPARDup8Pane);
                        fScrollBarHorizoDup8ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup8ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to WindowsDomainDup1Text
            /// </summary>
            public Text WindowsDomainDup1Text
            {
                get
                {
                    if (null == fWindowsDomainDup1Text)
                    {
                        fWindowsDomainDup1Text = new Text("WindowsDomainDup1Text", ServerAuthenticGroup);
                        fWindowsDomainDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fWindowsDomainDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Domain");
                        fWindowsDomainDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fWindowsDomainDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox1cce79f4Edit
            /// </summary>
            public Edit TextBox1cce79f4Edit
            {
                get
                {
                    if (null == fTextBox1cce79f4Edit)
                    {
                        fTextBox1cce79f4Edit = new Edit("TextBox1cce79f4Edit", ServerAuthenticGroup);
                        fTextBox1cce79f4Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox1cce79f4Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1cce79f4-4405-454b-8b93-73914a8c1e45");
                        fTextBox1cce79f4Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox1cce79f4Edit;
                }
            }

            /// <summary>
            /// Gets Reference to KerberosDefaultText
            /// </summary>
            public Text KerberosDefaultText
            {
                get
                {
                    if (null == fKerberosDefaultText)
                    {
                        fKerberosDefaultText = new Text("KerberosDefaultText", ServerAuthenticGroup);
                        fKerberosDefaultText.UIMap.Scope = UIASeachScope.Children;
                        fKerberosDefaultText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Kerberos Default Realm");
                        fKerberosDefaultText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fKerberosDefaultText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox757e1b31Edit
            /// </summary>
            public Edit TextBox757e1b31Edit
            {
                get
                {
                    if (null == fTextBox757e1b31Edit)
                    {
                        fTextBox757e1b31Edit = new Edit("TextBox757e1b31Edit", ServerAuthenticGroup);
                        fTextBox757e1b31Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox757e1b31Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"757e1b31-908c-481f-8d51-53d856ee65e8");
                        fTextBox757e1b31Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox757e1b31Edit;
                }
            }

            /// <summary>
            /// Gets Reference to KerberosServerHText
            /// </summary>
            public Text KerberosServerHText
            {
                get
                {
                    if (null == fKerberosServerHText)
                    {
                        fKerberosServerHText = new Text("KerberosServerHText", ServerAuthenticGroup);
                        fKerberosServerHText.UIMap.Scope = UIASeachScope.Children;
                        fKerberosServerHText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Kerberos Server Hostname");
                        fKerberosServerHText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fKerberosServerHText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxe5cfa172Edit
            /// </summary>
            public Edit TextBoxe5cfa172Edit
            {
                get
                {
                    if (null == fTextBoxe5cfa172Edit)
                    {
                        fTextBoxe5cfa172Edit = new Edit("TextBoxe5cfa172Edit", ServerAuthenticGroup);
                        fTextBoxe5cfa172Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxe5cfa172Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e5cfa172-a41a-4d1f-9605-5bb415448a80");
                        fTextBoxe5cfa172Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBoxe5cfa172Edit;
                }
            }

            /// <summary>
            /// Gets Reference to KerberosServerPText
            /// </summary>
            public Text KerberosServerPText
            {
                get
                {
                    if (null == fKerberosServerPText)
                    {
                        fKerberosServerPText = new Text("KerberosServerPText", ServerAuthenticGroup);
                        fKerberosServerPText.UIMap.Scope = UIASeachScope.Children;
                        fKerberosServerPText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Kerberos Server Port");
                        fKerberosServerPText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fKerberosServerPText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxf986abfaEdit
            /// </summary>
            public Edit TextBoxf986abfaEdit
            {
                get
                {
                    if (null == fTextBoxf986abfaEdit)
                    {
                        fTextBoxf986abfaEdit = new Edit("TextBoxf986abfaEdit", ServerAuthenticGroup);
                        fTextBoxf986abfaEdit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxf986abfaEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f986abfa-5563-459f-a15c-cd0c9ba2ffdf");
                        fTextBoxf986abfaEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBoxf986abfaEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ExpanderB7151C3Group
            /// </summary>
            public Group ExpanderB7151C3Group
            {
                get
                {
                    if (null == fExpanderB7151C3Group)
                    {
                        fExpanderB7151C3Group = new Group("ExpanderB7151C3Group", LDAPReplicationGroup);
                        fExpanderB7151C3Group.UIMap.Scope = UIASeachScope.Children;
                        fExpanderB7151C3Group.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B7151C32-813E-49fe-A052-F101BABC03F7");
                        fExpanderB7151C3Group.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                    }

                    return fExpanderB7151C3Group;
                }
            }

            /// <summary>
            /// Gets Reference to ButtonHeaderSitDup2Button
            /// </summary>
            public Button ButtonHeaderSitDup2Button
            {
                get
                {
                    if (null == fButtonHeaderSitDup2Button)
                    {
                        fButtonHeaderSitDup2Button = new Button("ButtonHeaderSitDup2Button", ExpanderB7151C3Group);
                        fButtonHeaderSitDup2Button.UIMap.Scope = UIASeachScope.Children;
                        fButtonHeaderSitDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                        fButtonHeaderSitDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fButtonHeaderSitDup2Button;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPDatabaseSeaGroup
            /// </summary>
            public Group LDAPDatabaseSeaGroup
            {
                get
                {
                    if (null == fLDAPDatabaseSeaGroup)
                    {
                        fLDAPDatabaseSeaGroup = new Group("LDAPDatabaseSeaGroup", LDAPReplicationGroup);
                        fLDAPDatabaseSeaGroup.UIMap.Scope = UIASeachScope.Children;
                        fLDAPDatabaseSeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Database Search Settings(Step 3)");
                        fLDAPDatabaseSeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mLDAPDbSearchSettingsGroupBox");
                        fLDAPDatabaseSeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    }

                    return fLDAPDatabaseSeaGroup;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPDatabaseSeaText
            /// </summary>
            public Text LDAPDatabaseSeaText
            {
                get
                {
                    if (null == fLDAPDatabaseSeaText)
                    {
                        fLDAPDatabaseSeaText = new Text("LDAPDatabaseSeaText", LDAPDatabaseSeaGroup);
                        fLDAPDatabaseSeaText.UIMap.Scope = UIASeachScope.Children;
                        fLDAPDatabaseSeaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Database Search Settings(Step 3)");
                        fLDAPDatabaseSeaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fLDAPDatabaseSeaText;
                }
            }

            /// <summary>
            /// Gets Reference to PathtostartsearText
            /// </summary>
            public Text PathtostartsearText
            {
                get
                {
                    if (null == fPathtostartsearText)
                    {
                        fPathtostartsearText = new Text("PathtostartsearText", LDAPDatabaseSeaGroup);
                        fPathtostartsearText.UIMap.Scope = UIASeachScope.Children;
                        fPathtostartsearText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Path to start search (BaseDN, Search Root):");
                        fPathtostartsearText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fPathtostartsearText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox2e2cfbd5Edit
            /// </summary>
            public Edit TextBox2e2cfbd5Edit
            {
                get
                {
                    if (null == fTextBox2e2cfbd5Edit)
                    {
                        fTextBox2e2cfbd5Edit = new Edit("TextBox2e2cfbd5Edit", LDAPDatabaseSeaGroup);
                        fTextBox2e2cfbd5Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox2e2cfbd5Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2e2cfbd5-5072-4c10-b4a7-bb6d3e1e7c34");
                        fTextBox2e2cfbd5Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox2e2cfbd5Edit;
                }
            }

            /// <summary>
            /// Gets Reference to AutoFindButton4Button
            /// </summary>
            public Button AutoFindButton4Button
            {
                get
                {
                    if (null == fAutoFindButton4Button)
                    {
                        fAutoFindButton4Button = new Button("AutoFindButton4Button", LDAPDatabaseSeaGroup);
                        fAutoFindButton4Button.UIMap.Scope = UIASeachScope.Children;
                        fAutoFindButton4Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                        fAutoFindButton4Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"44a89ec4-7799-4c0c-a4b7-c5d8fd9a005d");
                        fAutoFindButton4Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fAutoFindButton4Button;
                }
            }

            /// <summary>
            /// Gets Reference to SourceforAttribText
            /// </summary>
            public Text SourceforAttribText
            {
                get
                {
                    if (null == fSourceforAttribText)
                    {
                        fSourceforAttribText = new Text("SourceforAttribText", LDAPDatabaseSeaGroup);
                        fSourceforAttribText.UIMap.Scope = UIASeachScope.Children;
                        fSourceforAttribText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Source for Attribute Names:");
                        fSourceforAttribText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fSourceforAttribText;
                }
            }

            /// <summary>
            /// Gets Reference to UseActiveDirectRadioButton
            /// </summary>
            public RadioButton UseActiveDirectRadioButton
            {
                get
                {
                    if (null == fUseActiveDirectRadioButton)
                    {
                        fUseActiveDirectRadioButton = new RadioButton("UseActiveDirectRadioButton", LDAPDatabaseSeaGroup);
                        fUseActiveDirectRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fUseActiveDirectRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use Active Directory Default");
                        fUseActiveDirectRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6b6281c0-c178-4b4c-ba63-1a672886cb81");
                        fUseActiveDirectRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    }

                    return fUseActiveDirectRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to UseExchange55DeRadioButton
            /// </summary>
            public RadioButton UseExchange55DeRadioButton
            {
                get
                {
                    if (null == fUseExchange55DeRadioButton)
                    {
                        fUseExchange55DeRadioButton = new RadioButton("UseExchange55DeRadioButton", LDAPDatabaseSeaGroup);
                        fUseExchange55DeRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fUseExchange55DeRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use Exchange 5.5 Default");
                        fUseExchange55DeRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a1ce7515-9374-451a-81b9-fdb7f597eeff");
                        fUseExchange55DeRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    }

                    return fUseExchange55DeRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to UseCustomAttribRadioButton
            /// </summary>
            public RadioButton UseCustomAttribRadioButton
            {
                get
                {
                    if (null == fUseCustomAttribRadioButton)
                    {
                        fUseCustomAttribRadioButton = new RadioButton("UseCustomAttribRadioButton", LDAPDatabaseSeaGroup);
                        fUseCustomAttribRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fUseCustomAttribRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use Custom Attributes");
                        fUseCustomAttribRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"dc1b3180-3ab6-48b5-9c29-d9ecc10e5cbf");
                        fUseCustomAttribRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    }

                    return fUseCustomAttribRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to AutoFindButton8Button
            /// </summary>
            public Button AutoFindButton8Button
            {
                get
                {
                    if (null == fAutoFindButton8Button)
                    {
                        fAutoFindButton8Button = new Button("AutoFindButton8Button", LDAPDatabaseSeaGroup);
                        fAutoFindButton8Button.UIMap.Scope = UIASeachScope.Children;
                        fAutoFindButton8Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                        fAutoFindButton8Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8ac869f3-a8e9-4be1-ad80-67cf52953b0f");
                        fAutoFindButton8Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fAutoFindButton8Button;
                }
            }

            /// <summary>
            /// Gets Reference to MatchtheRecipieText
            /// </summary>
            public Text MatchtheRecipieText
            {
                get
                {
                    if (null == fMatchtheRecipieText)
                    {
                        fMatchtheRecipieText = new Text("MatchtheRecipieText", LDAPDatabaseSeaGroup);
                        fMatchtheRecipieText.UIMap.Scope = UIASeachScope.Children;
                        fMatchtheRecipieText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Match the Recipient's Name with this attribute:");
                        fMatchtheRecipieText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fMatchtheRecipieText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox0fd71265Edit
            /// </summary>
            public Edit TextBox0fd71265Edit
            {
                get
                {
                    if (null == fTextBox0fd71265Edit)
                    {
                        fTextBox0fd71265Edit = new Edit("TextBox0fd71265Edit", LDAPDatabaseSeaGroup);
                        fTextBox0fd71265Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox0fd71265Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0fd71265-6291-4b7b-871a-a52479d12671");
                        fTextBox0fd71265Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox0fd71265Edit;
                }
            }

            /// <summary>
            /// Gets Reference to AttributeNamefoDup0Text
            /// </summary>
            public Text AttributeNamefoDup0Text
            {
                get
                {
                    if (null == fAttributeNamefoDup0Text)
                    {
                        fAttributeNamefoDup0Text = new Text("AttributeNamefoDup0Text", LDAPDatabaseSeaGroup);
                        fAttributeNamefoDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fAttributeNamefoDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Attribute Name for Recipient's E-mail Address:");
                        fAttributeNamefoDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fAttributeNamefoDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxc34b5023Edit
            /// </summary>
            public Edit TextBoxc34b5023Edit
            {
                get
                {
                    if (null == fTextBoxc34b5023Edit)
                    {
                        fTextBoxc34b5023Edit = new Edit("TextBoxc34b5023Edit", LDAPDatabaseSeaGroup);
                        fTextBoxc34b5023Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxc34b5023Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c34b5023-914c-4e04-825f-d3beb507eaea");
                        fTextBoxc34b5023Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBoxc34b5023Edit;
                }
            }

            /// <summary>
            /// Gets Reference to AttributeNamefoDup1Text
            /// </summary>
            public Text AttributeNamefoDup1Text
            {
                get
                {
                    if (null == fAttributeNamefoDup1Text)
                    {
                        fAttributeNamefoDup1Text = new Text("AttributeNamefoDup1Text", LDAPDatabaseSeaGroup);
                        fAttributeNamefoDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fAttributeNamefoDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Attribute Name for Recipient's Fax Number:");
                        fAttributeNamefoDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fAttributeNamefoDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox3a6d11c5Edit
            /// </summary>
            public Edit TextBox3a6d11c5Edit
            {
                get
                {
                    if (null == fTextBox3a6d11c5Edit)
                    {
                        fTextBox3a6d11c5Edit = new Edit("TextBox3a6d11c5Edit", LDAPDatabaseSeaGroup);
                        fTextBox3a6d11c5Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox3a6d11c5Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3a6d11c5-2db5-478b-841b-4cff1eec20ce");
                        fTextBox3a6d11c5Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox3a6d11c5Edit;
                }
            }

            /// <summary>
            /// Gets Reference to AdvancedSearchOGroup
            /// </summary>
            public Group AdvancedSearchOGroup
            {
                get
                {
                    if (null == fAdvancedSearchOGroup)
                    {
                        fAdvancedSearchOGroup = new Group("AdvancedSearchOGroup", LDAPDatabaseSeaGroup);
                        fAdvancedSearchOGroup.UIMap.Scope = UIASeachScope.Children;
                        fAdvancedSearchOGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Advanced Search Options");
                        fAdvancedSearchOGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAdvancedSearchOptionsGroupBox");
                        fAdvancedSearchOGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    }

                    return fAdvancedSearchOGroup;
                }
            }

            /// <summary>
            /// Gets Reference to Expander0D39A3CGroup
            /// </summary>
            public Group Expander0D39A3CGroup
            {
                get
                {
                    if (null == fExpander0D39A3CGroup)
                    {
                        fExpander0D39A3CGroup = new Group("Expander0D39A3CGroup", LDAPReplicationGroup);
                        fExpander0D39A3CGroup.UIMap.Scope = UIASeachScope.Children;
                        fExpander0D39A3CGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0D39A3C1-0FEF-4c04-A306-85CAC8347DF0");
                        fExpander0D39A3CGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                    }

                    return fExpander0D39A3CGroup;
                }
            }

            /// <summary>
            /// Gets Reference to ButtonHeaderSitDup3Button
            /// </summary>
            public Button ButtonHeaderSitDup3Button
            {
                get
                {
                    if (null == fButtonHeaderSitDup3Button)
                    {
                        fButtonHeaderSitDup3Button = new Button("ButtonHeaderSitDup3Button", Expander0D39A3CGroup);
                        fButtonHeaderSitDup3Button.UIMap.Scope = UIASeachScope.Children;
                        fButtonHeaderSitDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                        fButtonHeaderSitDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fButtonHeaderSitDup3Button;
                }
            }

            /// <summary>
            /// Gets Reference to TestforLDAPRetrGroup
            /// </summary>
            public Group TestforLDAPRetrGroup
            {
                get
                {
                    if (null == fTestforLDAPRetrGroup)
                    {
                        fTestforLDAPRetrGroup = new Group("TestforLDAPRetrGroup", LDAPReplicationGroup);
                        fTestforLDAPRetrGroup.UIMap.Scope = UIASeachScope.Children;
                        fTestforLDAPRetrGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test for LDAP Retrieval(Step 4)");
                        fTestforLDAPRetrGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mTestLDAPRetrievalGroupBox");
                        fTestforLDAPRetrGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    }

                    return fTestforLDAPRetrGroup;
                }
            }

            /// <summary>
            /// Gets Reference to TestforLDAPRetrText
            /// </summary>
            public Text TestforLDAPRetrText
            {
                get
                {
                    if (null == fTestforLDAPRetrText)
                    {
                        fTestforLDAPRetrText = new Text("TestforLDAPRetrText", TestforLDAPRetrGroup);
                        fTestforLDAPRetrText.UIMap.Scope = UIASeachScope.Children;
                        fTestforLDAPRetrText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test for LDAP Retrieval(Step 4)");
                        fTestforLDAPRetrText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fTestforLDAPRetrText;
                }
            }

            /// <summary>
            /// Gets Reference to TestTextmTestLaText
            /// </summary>
            public Text TestTextmTestLaText
            {
                get
                {
                    if (null == fTestTextmTestLaText)
                    {
                        fTestTextmTestLaText = new Text("TestTextmTestLaText", TestforLDAPRetrGroup);
                        fTestTextmTestLaText.UIMap.Scope = UIASeachScope.Children;
                        fTestTextmTestLaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                        fTestTextmTestLaText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mTestLabel");
                        fTestTextmTestLaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fTestTextmTestLaText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxf206c2f6Edit
            /// </summary>
            public Edit TextBoxf206c2f6Edit
            {
                get
                {
                    if (null == fTextBoxf206c2f6Edit)
                    {
                        fTextBoxf206c2f6Edit = new Edit("TextBoxf206c2f6Edit", TestforLDAPRetrGroup);
                        fTextBoxf206c2f6Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxf206c2f6Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f206c2f6-8a80-4199-9adb-544294a0699d");
                        fTextBoxf206c2f6Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBoxf206c2f6Edit;
                }
            }

            /// <summary>
            /// Gets Reference to TestButtone6d54Button
            /// </summary>
            public Button TestButtone6d54Button
            {
                get
                {
                    if (null == fTestButtone6d54Button)
                    {
                        fTestButtone6d54Button = new Button("TestButtone6d54Button", TestforLDAPRetrGroup);
                        fTestButtone6d54Button.UIMap.Scope = UIASeachScope.Children;
                        fTestButtone6d54Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                        fTestButtone6d54Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e6d54317-fa20-4941-b1af-7c31d70663bb");
                        fTestButtone6d54Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fTestButtone6d54Button;
                }
            }

            /// <summary>
            /// Gets Reference to Expander5DC4D6AGroup
            /// </summary>
            public Group Expander5DC4D6AGroup
            {
                get
                {
                    if (null == fExpander5DC4D6AGroup)
                    {
                        fExpander5DC4D6AGroup = new Group("Expander5DC4D6AGroup", LDAPReplicationGroup);
                        fExpander5DC4D6AGroup.UIMap.Scope = UIASeachScope.Children;
                        fExpander5DC4D6AGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5DC4D6A6-7B07-4911-859F-70566AF3C7B4");
                        fExpander5DC4D6AGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                    }

                    return fExpander5DC4D6AGroup;
                }
            }

            /// <summary>
            /// Gets Reference to ButtonHeaderSitDup4Button
            /// </summary>
            public Button ButtonHeaderSitDup4Button
            {
                get
                {
                    if (null == fButtonHeaderSitDup4Button)
                    {
                        fButtonHeaderSitDup4Button = new Button("ButtonHeaderSitDup4Button", Expander5DC4D6AGroup);
                        fButtonHeaderSitDup4Button.UIMap.Scope = UIASeachScope.Children;
                        fButtonHeaderSitDup4Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                        fButtonHeaderSitDup4Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fButtonHeaderSitDup4Button;
                }
            }

            /// <summary>
            /// Gets Reference to SyncScheduleSteGroup
            /// </summary>
            public Group SyncScheduleSteGroup
            {
                get
                {
                    if (null == fSyncScheduleSteGroup)
                    {
                        fSyncScheduleSteGroup = new Group("SyncScheduleSteGroup", LDAPReplicationGroup);
                        fSyncScheduleSteGroup.UIMap.Scope = UIASeachScope.Children;
                        fSyncScheduleSteGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Schedule (Step 5)");
                        fSyncScheduleSteGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"fa9b3876-67dc-436a-8dc9-2660331e162a");
                        fSyncScheduleSteGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    }

                    return fSyncScheduleSteGroup;
                }
            }

            /// <summary>
            /// Gets Reference to SyncScheduleSteText
            /// </summary>
            public Text SyncScheduleSteText
            {
                get
                {
                    if (null == fSyncScheduleSteText)
                    {
                        fSyncScheduleSteText = new Text("SyncScheduleSteText", SyncScheduleSteGroup);
                        fSyncScheduleSteText.UIMap.Scope = UIASeachScope.Children;
                        fSyncScheduleSteText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Schedule (Step 5)");
                        fSyncScheduleSteText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fSyncScheduleSteText;
                }
            }

            /// <summary>
            /// Gets Reference to SyncText
            /// </summary>
            public Text SyncText
            {
                get
                {
                    if (null == fSyncText)
                    {
                        fSyncText = new Text("SyncText", SyncScheduleSteGroup);
                        fSyncText.UIMap.Scope = UIASeachScope.Children;
                        fSyncText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync");
                        fSyncText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fSyncText;
                }
            }

            /// <summary>
            /// Gets Reference to ComboBox1138dacComboBox
            /// </summary>
            public ComboBox ComboBox1138dacComboBox
            {
                get
                {
                    if (null == fComboBox1138dacComboBox)
                    {
                        fComboBox1138dacComboBox = new ComboBox("ComboBox1138dacComboBox", SyncScheduleSteGroup);
                        fComboBox1138dacComboBox.UIMap.Scope = UIASeachScope.Children;
                        fComboBox1138dacComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1138dac4-8bb2-4887-b0e8-95433a89ea1c");
                        fComboBox1138dacComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    }

                    return fComboBox1138dacComboBox;
                }
            }

            /// <summary>
            /// Gets Reference to SyncTimeText
            /// </summary>
            public Text SyncTimeText
            {
                get
                {
                    if (null == fSyncTimeText)
                    {
                        fSyncTimeText = new Text("SyncTimeText", SyncScheduleSteGroup);
                        fSyncTimeText.UIMap.Scope = UIASeachScope.Children;
                        fSyncTimeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Time");
                        fSyncTimeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fSyncTimeText;
                }
            }

            /// <summary>
            /// Gets Reference to WindowsFormsHosDup0Pane
            /// </summary>
            public Pane WindowsFormsHosDup0Pane
            {
                get
                {
                    if (null == fWindowsFormsHosDup0Pane)
                    {
                        fWindowsFormsHosDup0Pane = new Pane("WindowsFormsHosDup0Pane", SyncScheduleSteGroup);
                        fWindowsFormsHosDup0Pane.UIMap.Scope = UIASeachScope.Children;
                        fWindowsFormsHosDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"198A4208-3F36-4e41-B168-4E62D5EC4D4B");
                        fWindowsFormsHosDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WindowsFormsHost");
                    }

                    return fWindowsFormsHosDup0Pane;
                }
            }

            /// <summary>
            /// Gets Reference to A24HourCheckBoxCheckBox
            /// </summary>
            public CheckBox A24HourCheckBoxCheckBox
            {
                get
                {
                    if (null == fA24HourCheckBoxCheckBox)
                    {
                        fA24HourCheckBoxCheckBox = new CheckBox("A24HourCheckBoxCheckBox", SyncScheduleSteGroup);
                        fA24HourCheckBoxCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fA24HourCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"24 Hour");
                        fA24HourCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FE2BA56A-C03F-4A3D-8C14-2FB318C8B484");
                        fA24HourCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fA24HourCheckBoxCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to OnlysyncMondayFCheckBox
            /// </summary>
            public CheckBox OnlysyncMondayFCheckBox
            {
                get
                {
                    if (null == fOnlysyncMondayFCheckBox)
                    {
                        fOnlysyncMondayFCheckBox = new CheckBox("OnlysyncMondayFCheckBox", SyncScheduleSteGroup);
                        fOnlysyncMondayFCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fOnlysyncMondayFCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Only sync Monday-Friday");
                        fOnlysyncMondayFCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"03f7a8b7-4768-490b-a21f-a01b9de28e15");
                        fOnlysyncMondayFCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fOnlysyncMondayFCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to SundayCheckBox2CheckBox
            /// </summary>
            public CheckBox SundayCheckBox2CheckBox
            {
                get
                {
                    if (null == fSundayCheckBox2CheckBox)
                    {
                        fSundayCheckBox2CheckBox = new CheckBox("SundayCheckBox2CheckBox", SyncScheduleSteGroup);
                        fSundayCheckBox2CheckBox.UIMap.Scope = UIASeachScope.Children;
                        fSundayCheckBox2CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sunday");
                        fSundayCheckBox2CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"21015E67-271D-411A-B583-D32A3EA90A84");
                        fSundayCheckBox2CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fSundayCheckBox2CheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to MondayCheckBoxCCheckBox
            /// </summary>
            public CheckBox MondayCheckBoxCCheckBox
            {
                get
                {
                    if (null == fMondayCheckBoxCCheckBox)
                    {
                        fMondayCheckBoxCCheckBox = new CheckBox("MondayCheckBoxCCheckBox", SyncScheduleSteGroup);
                        fMondayCheckBoxCCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fMondayCheckBoxCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Monday");
                        fMondayCheckBoxCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CD525CFE-A786-466E-A2BE-7E74FF43F7D1");
                        fMondayCheckBoxCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fMondayCheckBoxCCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to TuesdayCheckBoxCheckBox
            /// </summary>
            public CheckBox TuesdayCheckBoxCheckBox
            {
                get
                {
                    if (null == fTuesdayCheckBoxCheckBox)
                    {
                        fTuesdayCheckBoxCheckBox = new CheckBox("TuesdayCheckBoxCheckBox", SyncScheduleSteGroup);
                        fTuesdayCheckBoxCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fTuesdayCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Tuesday");
                        fTuesdayCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C4BCB1F5-10E3-4CFD-9931-4815038EC189");
                        fTuesdayCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fTuesdayCheckBoxCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to WednesdayCheckBCheckBox
            /// </summary>
            public CheckBox WednesdayCheckBCheckBox
            {
                get
                {
                    if (null == fWednesdayCheckBCheckBox)
                    {
                        fWednesdayCheckBCheckBox = new CheckBox("WednesdayCheckBCheckBox", SyncScheduleSteGroup);
                        fWednesdayCheckBCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fWednesdayCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Wednesday");
                        fWednesdayCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"40923D30-4F6C-4459-9162-D8BCBAD792DF");
                        fWednesdayCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fWednesdayCheckBCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to ThursdayCheckBoCheckBox
            /// </summary>
            public CheckBox ThursdayCheckBoCheckBox
            {
                get
                {
                    if (null == fThursdayCheckBoCheckBox)
                    {
                        fThursdayCheckBoCheckBox = new CheckBox("ThursdayCheckBoCheckBox", SyncScheduleSteGroup);
                        fThursdayCheckBoCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fThursdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Thursday");
                        fThursdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4CE33CD9-3FCB-495D-A085-7B85D34BAE85");
                        fThursdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fThursdayCheckBoCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to FridayCheckBoxDCheckBox
            /// </summary>
            public CheckBox FridayCheckBoxDCheckBox
            {
                get
                {
                    if (null == fFridayCheckBoxDCheckBox)
                    {
                        fFridayCheckBoxDCheckBox = new CheckBox("FridayCheckBoxDCheckBox", SyncScheduleSteGroup);
                        fFridayCheckBoxDCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fFridayCheckBoxDCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Friday");
                        fFridayCheckBoxDCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DDE646C4-B289-483A-BF8C-7344D6E9324C");
                        fFridayCheckBoxDCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fFridayCheckBoxDCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to SaturdayCheckBoCheckBox
            /// </summary>
            public CheckBox SaturdayCheckBoCheckBox
            {
                get
                {
                    if (null == fSaturdayCheckBoCheckBox)
                    {
                        fSaturdayCheckBoCheckBox = new CheckBox("SaturdayCheckBoCheckBox", SyncScheduleSteGroup);
                        fSaturdayCheckBoCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fSaturdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Saturday");
                        fSaturdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B73EA9F8-BACB-4E76-A2B9-15DEE3FF0C7F");
                        fSaturdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    }

                    return fSaturdayCheckBoCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to LastDayoftheMonRadioButton
            /// </summary>
            public RadioButton LastDayoftheMonRadioButton
            {
                get
                {
                    if (null == fLastDayoftheMonRadioButton)
                    {
                        fLastDayoftheMonRadioButton = new RadioButton("LastDayoftheMonRadioButton", SyncScheduleSteGroup);
                        fLastDayoftheMonRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fLastDayoftheMonRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Last Day of the Month");
                        fLastDayoftheMonRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2DBEB691-CBFB-4DB7-BE7A-B5D774820296");
                        fLastDayoftheMonRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    }

                    return fLastDayoftheMonRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to DayRadioButton3RadioButton
            /// </summary>
            public RadioButton DayRadioButton3RadioButton
            {
                get
                {
                    if (null == fDayRadioButton3RadioButton)
                    {
                        fDayRadioButton3RadioButton = new RadioButton("DayRadioButton3RadioButton", SyncScheduleSteGroup);
                        fDayRadioButton3RadioButton.UIMap.Scope = UIASeachScope.Children;
                        fDayRadioButton3RadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Day");
                        fDayRadioButton3RadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"392FC707-C93A-4607-A32D-0D08B25A4BEE");
                        fDayRadioButton3RadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    }

                    return fDayRadioButton3RadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to WindowsFormsHosDup1Pane
            /// </summary>
            public Pane WindowsFormsHosDup1Pane
            {
                get
                {
                    if (null == fWindowsFormsHosDup1Pane)
                    {
                        fWindowsFormsHosDup1Pane = new Pane("WindowsFormsHosDup1Pane", SyncScheduleSteGroup);
                        fWindowsFormsHosDup1Pane.UIMap.Scope = UIASeachScope.Children;
                        fWindowsFormsHosDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1A95AA54-314C-4A5D-B34C-60863C3C700C");
                        fWindowsFormsHosDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WindowsFormsHost");
                    }

                    return fWindowsFormsHosDup1Pane;
                }
            }

            /// <summary>
            /// Gets Reference to LastReplicationText
            /// </summary>
            public Text LastReplicationText
            {
                get
                {
                    if (null == fLastReplicationText)
                    {
                        fLastReplicationText = new Text("LastReplicationText", SyncScheduleSteGroup);
                        fLastReplicationText.UIMap.Scope = UIASeachScope.Children;
                        fLastReplicationText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Last Replication");
                        fLastReplicationText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fLastReplicationText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxcc133df7Edit
            /// </summary>
            public Edit TextBoxcc133df7Edit
            {
                get
                {
                    if (null == fTextBoxcc133df7Edit)
                    {
                        fTextBoxcc133df7Edit = new Edit("TextBoxcc133df7Edit", SyncScheduleSteGroup);
                        fTextBoxcc133df7Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxcc133df7Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"cc133df7-b7fc-4b42-9b31-ea397127b095");
                        fTextBoxcc133df7Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBoxcc133df7Edit;
                }
            }

            /// <summary>
            /// Gets Reference to SyncNowButtonb7Button
            /// </summary>
            public Button SyncNowButtonb7Button
            {
                get
                {
                    if (null == fSyncNowButtonb7Button)
                    {
                        fSyncNowButtonb7Button = new Button("SyncNowButtonb7Button", SyncScheduleSteGroup);
                        fSyncNowButtonb7Button.UIMap.Scope = UIASeachScope.Children;
                        fSyncNowButtonb7Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Now");
                        fSyncNowButtonb7Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b75e5b82-6ed8-4ebb-b777-4b9258b91890");
                        fSyncNowButtonb7Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fSyncNowButtonb7Button;
                }
            }

            /// <summary>
            /// Gets Reference to ClearLDAPCacheBButton
            /// </summary>
            public Button ClearLDAPCacheBButton
            {
                get
                {
                    if (null == fClearLDAPCacheBButton)
                    {
                        fClearLDAPCacheBButton = new Button("ClearLDAPCacheBButton", LDAPReplicationGroup);
                        fClearLDAPCacheBButton.UIMap.Scope = UIASeachScope.Children;
                        fClearLDAPCacheBButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear LDAP Cache");
                        fClearLDAPCacheBButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9E2814A0-D532-4b13-B05A-60EEFA520123");
                        fClearLDAPCacheBButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fClearLDAPCacheBButton;
                }
            }

            /// <summary>
            /// Gets Reference to ClearLDAPCacheTText
            /// </summary>
            public Text ClearLDAPCacheTText
            {
                get
                {
                    if (null == fClearLDAPCacheTText)
                    {
                        fClearLDAPCacheTText = new Text("ClearLDAPCacheTText", ClearLDAPCacheBButton);
                        fClearLDAPCacheTText.UIMap.Scope = UIASeachScope.Children;
                        fClearLDAPCacheTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear LDAP Cache");
                        fClearLDAPCacheTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fClearLDAPCacheTText;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookManaGroup
            /// </summary>
            public Group AddressBookManaGroup
            {
                get
                {
                    if (null == fAddressBookManaGroup)
                    {
                        fAddressBookManaGroup = new Group("AddressBookManaGroup", ScrollViewerPane);
                        fAddressBookManaGroup.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                        fAddressBookManaGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    }

                    return fAddressBookManaGroup;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookManaDup0Text
            /// </summary>
            public Text AddressBookManaDup0Text
            {
                get
                {
                    if (null == fAddressBookManaDup0Text)
                    {
                        fAddressBookManaDup0Text = new Text("AddressBookManaDup0Text", AddressBookManaGroup);
                        fAddressBookManaDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                        fAddressBookManaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAddressBookManaDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookManaButton
            /// </summary>
            public Button AddressBookManaButton
            {
                get
                {
                    if (null == fAddressBookManaButton)
                    {
                        fAddressBookManaButton = new Button("AddressBookManaButton", AddressBookManaGroup);
                        fAddressBookManaButton.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                        fAddressBookManaButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"174F3D3D-4D21-4cef-956A-CD3D7E08CF4B");
                        fAddressBookManaButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fAddressBookManaButton;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookManaDup1Text
            /// </summary>
            public Text AddressBookManaDup1Text
            {
                get
                {
                    if (null == fAddressBookManaDup1Text)
                    {
                        fAddressBookManaDup1Text = new Text("AddressBookManaDup1Text", AddressBookManaButton);
                        fAddressBookManaDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                        fAddressBookManaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAddressBookManaDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup9ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup9ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup9ScrollBar)
                    {
                        fScrollBarVerticDup9ScrollBar = new ScrollBar("ScrollBarVerticDup9ScrollBar", ScrollViewerPane);
                        fScrollBarVerticDup9ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup9ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to RepeatButtonPARDup0Button
            /// </summary>
            public Button RepeatButtonPARDup0Button
            {
                get
                {
                    if (null == fRepeatButtonPARDup0Button)
                    {
                        fRepeatButtonPARDup0Button = new Button("RepeatButtonPARDup0Button", ScrollBarVerticDup9ScrollBar);
                        fRepeatButtonPARDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fRepeatButtonPARDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_LineUpButton");
                        fRepeatButtonPARDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    }

                    return fRepeatButtonPARDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to RepeatButtonPagDup0Button
            /// </summary>
            public Button RepeatButtonPagDup0Button
            {
                get
                {
                    if (null == fRepeatButtonPagDup0Button)
                    {
                        fRepeatButtonPagDup0Button = new Button("RepeatButtonPagDup0Button", ScrollBarVerticDup9ScrollBar);
                        fRepeatButtonPagDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageUp");
                        fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    }

                    return fRepeatButtonPagDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to RepeatButtonPagDup1Button
            /// </summary>
            public Button RepeatButtonPagDup1Button
            {
                get
                {
                    if (null == fRepeatButtonPagDup1Button)
                    {
                        fRepeatButtonPagDup1Button = new Button("RepeatButtonPagDup1Button", ScrollBarVerticDup9ScrollBar);
                        fRepeatButtonPagDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageDown");
                        fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    }

                    return fRepeatButtonPagDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbThumb
            /// </summary>
            public Thumb ThumbThumb
            {
                get
                {
                    if (null == fThumbThumb)
                    {
                        fThumbThumb = new Thumb("ThumbThumb", ScrollBarVerticDup9ScrollBar);
                        fThumbThumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbThumb;
                }
            }

            /// <summary>
            /// Gets Reference to RepeatButtonPARDup1Button
            /// </summary>
            public Button RepeatButtonPARDup1Button
            {
                get
                {
                    if (null == fRepeatButtonPARDup1Button)
                    {
                        fRepeatButtonPARDup1Button = new Button("RepeatButtonPARDup1Button", ScrollBarVerticDup9ScrollBar);
                        fRepeatButtonPARDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fRepeatButtonPARDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_LineDownButton");
                        fRepeatButtonPARDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    }

                    return fRepeatButtonPARDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup9ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup9ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup9ScrollBar)
                    {
                        fScrollBarHorizoDup9ScrollBar = new ScrollBar("ScrollBarHorizoDup9ScrollBar", ScrollViewerPane);
                        fScrollBarHorizoDup9ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup9ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to DeviceConfiguraTabItem
            /// </summary>
            public TabItem DeviceConfiguraTabItem
            {
                get
                {
                    if (null == fDeviceConfiguraTabItem)
                    {
                        fDeviceConfiguraTabItem = new TabItem("DeviceConfiguraTabItem", TabControlec0fdTab);
                        fDeviceConfiguraTabItem.UIMap.Scope = UIASeachScope.Children;
                        fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                        fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6DF1E016-517F-40e4-A63E-CD48D560192F");
                        fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fDeviceConfiguraTabItem;
                }
            }

            /// <summary>
            /// Gets Reference to DeviceConfiguraText
            /// </summary>
            public Text DeviceConfiguraText
            {
                get
                {
                    if (null == fDeviceConfiguraText)
                    {
                        fDeviceConfiguraText = new Text("DeviceConfiguraText", DeviceConfiguraTabItem);
                        fDeviceConfiguraText.UIMap.Scope = UIASeachScope.Children;
                        fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                        fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fDeviceConfiguraText;
                }
            }

            /// <summary>
            /// Gets Reference to TemplateConfiguTabItem
            /// </summary>
            public TabItem TemplateConfiguTabItem
            {
                get
                {
                    if (null == fTemplateConfiguTabItem)
                    {
                        fTemplateConfiguTabItem = new TabItem("TemplateConfiguTabItem", TabControlec0fdTab);
                        fTemplateConfiguTabItem.UIMap.Scope = UIASeachScope.Children;
                        fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                        fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AC05F9B9-A7D8-4b34-80E7-910FB9870D47");
                        fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fTemplateConfiguTabItem;
                }
            }

            /// <summary>
            /// Gets Reference to TemplateConfiguText
            /// </summary>
            public Text TemplateConfiguText
            {
                get
                {
                    if (null == fTemplateConfiguText)
                    {
                        fTemplateConfiguText = new Text("TemplateConfiguText", TemplateConfiguTabItem);
                        fTemplateConfiguText.UIMap.Scope = UIASeachScope.Children;
                        fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                        fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fTemplateConfiguText;
                }
            }

            /// <summary>
            /// Gets Reference to LogTabItem9b4f3TabItem
            /// </summary>
            public TabItem LogTabItem9b4f3TabItem
            {
                get
                {
                    if (null == fLogTabItem9b4f3TabItem)
                    {
                        fLogTabItem9b4f3TabItem = new TabItem("LogTabItem9b4f3TabItem", TabControlec0fdTab);
                        fLogTabItem9b4f3TabItem.UIMap.Scope = UIASeachScope.Children;
                        fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                        fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9b4f34bb-d75a-4080-9be3-1c50ec31c5b6");
                        fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fLogTabItem9b4f3TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to LogTextBlockText
            /// </summary>
            public Text LogTextBlockText
            {
                get
                {
                    if (null == fLogTextBlockText)
                    {
                        fLogTextBlockText = new Text("LogTextBlockText", LogTabItem9b4f3TabItem);
                        fLogTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                        fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fLogTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup7TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup7TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup7TabItem)
                    {
                        fSystemWindowsCoDup7TabItem = new TabItem("SystemWindowsCoDup7TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup7TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3AC8D4A8-3B06-421A-911B-E8CA248A9ED4");
                        fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup7TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to SecurityTextmSeText
            /// </summary>
            public Text SecurityTextmSeText
            {
                get
                {
                    if (null == fSecurityTextmSeText)
                    {
                        fSecurityTextmSeText = new Text("SecurityTextmSeText", SystemWindowsCoDup7TabItem);
                        fSecurityTextmSeText.UIMap.Scope = UIASeachScope.Children;
                        fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                        fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mSecurityTabLabel");
                        fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fSecurityTextmSeText;
                }
            }

            /// <summary>
            /// Gets Reference to SecurityTextBloText
            /// </summary>
            public Text SecurityTextBloText
            {
                get
                {
                    if (null == fSecurityTextBloText)
                    {
                        fSecurityTextBloText = new Text("SecurityTextBloText", SecurityTextmSeText);
                        fSecurityTextBloText.UIMap.Scope = UIASeachScope.Children;
                        fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                        fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fSecurityTextBloText;
                }
            }

            /// <summary>
            /// Gets Reference to Text8A7A84DB894Text
            /// </summary>
            public Text Text8A7A84DB894Text
            {
                get
                {
                    if (null == fText8A7A84DB894Text)
                    {
                        fText8A7A84DB894Text = new Text("Text8A7A84DB894Text", SystemWindowsCoDup7TabItem);
                        fText8A7A84DB894Text.UIMap.Scope = UIASeachScope.Children;
                        fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                        fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8A7A84DB-8945-40E1-A0F9-C40DDD129739");
                        fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText8A7A84DB894Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text16F78FB18FFText
            /// </summary>
            public Text Text16F78FB18FFText
            {
                get
                {
                    if (null == fText16F78FB18FFText)
                    {
                        fText16F78FB18FFText = new Text("Text16F78FB18FFText", SystemWindowsCoDup7TabItem);
                        fText16F78FB18FFText.UIMap.Scope = UIASeachScope.Children;
                        fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                        fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16F78FB1-8FF9-4B0D-8251-FB09F520EA73");
                        fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fText16F78FB18FFText;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup8TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup8TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup8TabItem)
                    {
                        fSystemWindowsCoDup8TabItem = new TabItem("SystemWindowsCoDup8TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup8TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                        fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1678607C-20BF-4137-8238-C9D46EA8FF70");
                        fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fSystemWindowsCoDup8TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to AnalyticsTextmAText
            /// </summary>
            public Text AnalyticsTextmAText
            {
                get
                {
                    if (null == fAnalyticsTextmAText)
                    {
                        fAnalyticsTextmAText = new Text("AnalyticsTextmAText", SystemWindowsCoDup8TabItem);
                        fAnalyticsTextmAText.UIMap.Scope = UIASeachScope.Children;
                        fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                        fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAnalyticsTabLabel");
                        fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    }

                    return fAnalyticsTextmAText;
                }
            }

            /// <summary>
            /// Gets Reference to AnalyticsTextBlText
            /// </summary>
            public Text AnalyticsTextBlText
            {
                get
                {
                    if (null == fAnalyticsTextBlText)
                    {
                        fAnalyticsTextBlText = new Text("AnalyticsTextBlText", AnalyticsTextmAText);
                        fAnalyticsTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                        fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAnalyticsTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to AboutTabItemf45TabItem
            /// </summary>
            public TabItem AboutTabItemf45TabItem
            {
                get
                {
                    if (null == fAboutTabItemf45TabItem)
                    {
                        fAboutTabItemf45TabItem = new TabItem("AboutTabItemf45TabItem", TabControlec0fdTab);
                        fAboutTabItemf45TabItem.UIMap.Scope = UIASeachScope.Children;
                        fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                        fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f45c22d9-f77a-481a-95bc-09cdff03e131");
                        fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    }

                    return fAboutTabItemf45TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to AboutTextBlockText
            /// </summary>
            public Text AboutTextBlockText
            {
                get
                {
                    if (null == fAboutTextBlockText)
                    {
                        fAboutTextBlockText = new Text("AboutTextBlockText", AboutTabItemf45TabItem);
                        fAboutTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                        fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    }

                    return fAboutTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to HPDigitalSendinWindow
            /// </summary>
            public Window HPDigitalSendinWindow
            {
                get
                {
                    if (null == fHPDigitalSendinWindow)
                    {
                        fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                        fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_ipaddress})");
                    }

                    return fHPDigitalSendinWindow;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookManaWindow
            /// </summary>
            public Window AddressBookManaWindow
            {
                get
                {
                    if (null == fAddressBookManaWindow)
                    {
                        fAddressBookManaWindow = new Window("AddressBookManaWindow", HPDigitalSendinWindow);
                        fAddressBookManaWindow.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"391E55DE-0CF0-4955-829E-6334ED7FFCE7");
                        fAddressBookManaWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                        fAddressBookManaWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                    }

                    return fAddressBookManaWindow;
                }
            }

            /// <summary>
            /// Gets Reference to SaveAs32770Window
            /// </summary>
            public Window SaveAs32770Window
            {
                get
                {
                    if (null == fSaveAs32770Window)
                    {
                        fSaveAs32770Window = new Window("SaveAs32770Window", AddressBookManaWindow);
                        fSaveAs32770Window.UIMap.Scope = UIASeachScope.Children;
                        fSaveAs32770Window.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                        fSaveAs32770Window.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save As");
                    }

                    return fSaveAs32770Window;
                }
            }

            /// <summary>
            /// Gets Reference to SaveButton1Button
            /// </summary>
            public Button SaveButton1Button
            {
                get
                {
                    if (null == fSaveButton1Button)
                    {
                        fSaveButton1Button = new Button("SaveButton1Button", SaveAs32770Window);
                        fSaveButton1Button.UIMap.Scope = UIASeachScope.Children;
                        fSaveButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1");
                        fSaveButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fSaveButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save");
                    }

                    return fSaveButton1Button;
                }
            }

            /// <summary>
            /// Gets Reference to SaveAsTitleBar
            /// </summary>
            public TitleBar SaveAsTitleBar
            {
                get
                {
                    if (null == fSaveAsTitleBar)
                    {
                        fSaveAsTitleBar = new TitleBar("SaveAsTitleBar", SaveAs32770Window);
                        fSaveAsTitleBar.UIMap.Scope = UIASeachScope.Children;
                        fSaveAsTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                        fSaveAsTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save As");
                    }

                    return fSaveAsTitleBar;
                }
            }

            /// <summary>
            /// Gets Reference to DUIViewWndClassPane
            /// </summary>
            public Pane DUIViewWndClassPane
            {
                get
                {
                    if (null == fDUIViewWndClassPane)
                    {
                        fDUIViewWndClassPane = new Pane("DUIViewWndClassPane", SaveAs32770Window);
                        fDUIViewWndClassPane.UIMap.Scope = UIASeachScope.Children;
                        fDUIViewWndClassPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"DUIViewWndClassName");
                    }

                    return fDUIViewWndClassPane;
                }
            }

            /// <summary>
            /// Gets Reference to ExplorerPaneHWNPane
            /// </summary>
            public Pane ExplorerPaneHWNPane
            {
                get
                {
                    if (null == fExplorerPaneHWNPane)
                    {
                        fExplorerPaneHWNPane = new Pane("ExplorerPaneHWNPane", DUIViewWndClassPane);
                        fExplorerPaneHWNPane.UIMap.Scope = UIASeachScope.Children;
                        fExplorerPaneHWNPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"main");
                        fExplorerPaneHWNPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"HWNDView");
                        fExplorerPaneHWNPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Explorer Pane");
                    }

                    return fExplorerPaneHWNPane;
                }
            }

            /// <summary>
            /// Gets Reference to FolderLayoutPanPane
            /// </summary>
            public Pane FolderLayoutPanPane
            {
                get
                {
                    if (null == fFolderLayoutPanPane)
                    {
                        fFolderLayoutPanPane = new Pane("FolderLayoutPanPane", ExplorerPaneHWNPane);
                        fFolderLayoutPanPane.UIMap.Scope = UIASeachScope.Children;
                        fFolderLayoutPanPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FolderLayoutContainer");
                        fFolderLayoutPanPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Element");
                        fFolderLayoutPanPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Folder Layout Pane");
                    }

                    return fFolderLayoutPanPane;
                }
            }

            /// <summary>
            /// Gets Reference to DetailsPanePrevPane
            /// </summary>
            public Pane DetailsPanePrevPane
            {
                get
                {
                    if (null == fDetailsPanePrevPane)
                    {
                        fDetailsPanePrevPane = new Pane("DetailsPanePrevPane", FolderLayoutPanPane);
                        fDetailsPanePrevPane.UIMap.Scope = UIASeachScope.Children;
                        fDetailsPanePrevPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"BackgroundClear");
                        fDetailsPanePrevPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"PreviewBackground");
                        fDetailsPanePrevPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Details Pane");
                    }

                    return fDetailsPanePrevPane;
                }
            }

            /// <summary>
            /// Gets Reference to FilenameAppContComboBox
            /// </summary>
            public ComboBox FilenameAppContComboBox
            {
                get
                {
                    if (null == fFilenameAppContComboBox)
                    {
                        fFilenameAppContComboBox = new ComboBox("FilenameAppContComboBox", DetailsPanePrevPane);
                        fFilenameAppContComboBox.UIMap.Scope = UIASeachScope.Children;
                        fFilenameAppContComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FileNameControlHost");
                        fFilenameAppContComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AppControlHost");
                        fFilenameAppContComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File name:");
                    }

                    return fFilenameAppContComboBox;
                }
            }

            /// <summary>
            /// Gets Reference to FilenameEdit100Edit
            /// </summary>
            public Edit FilenameEdit100Edit
            {
                get
                {
                    if (null == fFilenameEdit100Edit)
                    {
                        fFilenameEdit100Edit = new Edit("FilenameEdit100Edit", FilenameAppContComboBox);
                        fFilenameEdit100Edit.UIMap.Scope = UIASeachScope.Children;
                        fFilenameEdit100Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1001");
                        fFilenameEdit100Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Edit");
                        fFilenameEdit100Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File name:");
                    }

                    return fFilenameEdit100Edit;
                }
            }

            /// <summary>
            /// Gets Reference to OKButtonAE4B0C6Button
            /// </summary>
            public Button OKButtonAE4B0C6Button
            {
                get
                {
                    if (null == fOKButtonAE4B0C6Button)
                    {
                        fOKButtonAE4B0C6Button = new Button("OKButtonAE4B0C6Button", HPDigitalSendinDup1Window);
                        fOKButtonAE4B0C6Button.UIMap.Scope = UIASeachScope.Children;
                        fOKButtonAE4B0C6Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fOKButtonAE4B0C6Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AE4B0C61-2DEE-4974-B517-4A1388A3F4CC");
                        fOKButtonAE4B0C6Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    }

                    return fOKButtonAE4B0C6Button;
                }
            }


        }

        /// <summary>
        /// Application which exercises the TopCat Coded C# test API.
        /// </summary>
        public class DSS_AddressBookManagerImport
        {
            /// <summary>
            /// Backing field for UIDup7Image property
            /// </summary>
            private Image fUIDup7Image;

            /// <summary>
            /// Backing field for HPDigitalSendinWindow property
            /// </summary>
            private Window fHPDigitalSendinWindow;

            /// <summary>
            /// Backing field for AddressBookManaWindow property
            /// </summary>
            private Window fAddressBookManaWindow;

            /// <summary>
            /// Backing field for Open32770Window property
            /// </summary>
            private Window fOpen32770Window;

            /// <summary>
            /// Backing field for DUIViewWndClassPane property
            /// </summary>
            private Pane fDUIViewWndClassPane;

            /// <summary>
            /// Backing field for ExplorerPaneHWNPane property
            /// </summary>
            private Pane fExplorerPaneHWNPane;

            /// <summary>
            /// Backing field for CtrlNotifySinkDup0I0XPane property
            /// </summary>
            private Pane fCtrlNotifySinkDup0I0XPane;

            /// <summary>
            /// Backing field for CtrlNotifySinkDup1I1XPane property
            /// </summary>
            private Pane fCtrlNotifySinkDup1I1XPane;

            /// <summary>
            /// Backing field for CommandModuleFoToolBar property
            /// </summary>
            private ToolBar fCommandModuleFoToolBar;

            /// <summary>
            /// Backing field for HelpButton3dHelButton property
            /// </summary>
            private Button fHelpButton3dHelButton;

            /// <summary>
            /// Backing field for PreviewpaneButtCheckBox property
            /// </summary>
            private CheckBox fPreviewpaneButtCheckBox;

            /// <summary>
            /// Backing field for ViewsViewControSplitButton property
            /// </summary>
            private SplitButton fViewsViewControSplitButton;

            /// <summary>
            /// Backing field for ViewSliderButtoButton property
            /// </summary>
            private Button fViewSliderButtoButton;

            /// <summary>
            /// Backing field for OrganizeAJOSpliButton property
            /// </summary>
            private Button fOrganizeAJOSpliButton;

            /// <summary>
            /// Backing field for NewfolderAJOSplButton property
            /// </summary>
            private Button fNewfolderAJOSplButton;

            /// <summary>
            /// Backing field for FolderLayoutPanPane property
            /// </summary>
            private Pane fFolderLayoutPanPane;

            /// <summary>
            /// Backing field for ControlHostPropPane property
            /// </summary>
            private Pane fControlHostPropPane;

            /// <summary>
            /// Backing field for NamespaceTreeCoTree property
            /// </summary>
            private Tree fNamespaceTreeCoTree;

            /// <summary>
            /// Backing field for QuickaccessTreeItem property
            /// </summary>
            private TreeItem fQuickaccessTreeItem;

            /// <summary>
            /// Backing field for DesktopDup0TreeItem property
            /// </summary>
            private TreeItem fDesktopDup0TreeItem;

            /// <summary>
            /// Backing field for OneDriveTreeItem property
            /// </summary>
            private TreeItem fOneDriveTreeItem;

            /// <summary>
            /// Backing field for ThisPCTreeItem property
            /// </summary>
            private TreeItem fThisPCTreeItem;

            /// <summary>
            /// Backing field for DesktopDup1TreeItem property
            /// </summary>
            private TreeItem fDesktopDup1TreeItem;

            /// <summary>
            /// Backing field for DocumentsTreeItem property
            /// </summary>
            private TreeItem fDocumentsTreeItem;

            /// <summary>
            /// Backing field for DownloadsTreeItem property
            /// </summary>
            private TreeItem fDownloadsTreeItem;

            /// <summary>
            /// Backing field for MusicTreeItem property
            /// </summary>
            private TreeItem fMusicTreeItem;

            /// <summary>
            /// Backing field for PicturesTreeItem property
            /// </summary>
            private TreeItem fPicturesTreeItem;

            /// <summary>
            /// Backing field for VideosTreeItem property
            /// </summary>
            private TreeItem fVideosTreeItem;

            /// <summary>
            /// Backing field for LocalDiskCTreeItem property
            /// </summary>
            private TreeItem fLocalDiskCTreeItem;

            /// <summary>
            /// Backing field for LocalDiskDTreeItem property
            /// </summary>
            private TreeItem fLocalDiskDTreeItem;

            /// <summary>
            /// Backing field for NetworkTreeItem property
            /// </summary>
            private TreeItem fNetworkTreeItem;

            /// <summary>
            /// Backing field for ShellFolderViewPane property
            /// </summary>
            private Pane fShellFolderViewPane;

            /// <summary>
            /// Backing field for ItemsViewUIItemList property
            /// </summary>
            private List fItemsViewUIItemList;

            /// <summary>
            /// Backing field for HeaderUIViewHeader property
            /// </summary>
            private Header fHeaderUIViewHeader;

            /// <summary>
            /// Backing field for NameUIColumnHeaSplitButton property
            /// </summary>
            private SplitButton fNameUIColumnHeaSplitButton;

            /// <summary>
            /// Backing field for FilterdropdownBDup0Button property
            /// </summary>
            private Button fFilterdropdownBDup0Button;

            /// <summary>
            /// Backing field for DatemodifiedUICSplitButton property
            /// </summary>
            private SplitButton fDatemodifiedUICSplitButton;

            /// <summary>
            /// Backing field for FilterdropdownBDup1Button property
            /// </summary>
            private Button fFilterdropdownBDup1Button;

            /// <summary>
            /// Backing field for TypeUIColumnHeaSplitButton property
            /// </summary>
            private SplitButton fTypeUIColumnHeaSplitButton;

            /// <summary>
            /// Backing field for FilterdropdownBDup2Button property
            /// </summary>
            private Button fFilterdropdownBDup2Button;

            /// <summary>
            /// Backing field for SizeUIColumnHeaSplitButton property
            /// </summary>
            private SplitButton fSizeUIColumnHeaSplitButton;

            /// <summary>
            /// Backing field for FilterdropdownBDup3Button property
            /// </summary>
            private Button fFilterdropdownBDup3Button;

            /// <summary>
            /// Backing field for CRUIItem0ListItem property
            /// </summary>
            private ListItem fCRUIItem0ListItem;

            /// <summary>
            /// Backing field for UIDup0Image property
            /// </summary>
            private Image fUIDup0Image;

            /// <summary>
            /// Backing field for NameUIPropertySDup0Edit property
            /// </summary>
            private Edit fNameUIPropertySDup0Edit;

            /// <summary>
            /// Backing field for DatemodifiedUIPDup0Edit property
            /// </summary>
            private Edit fDatemodifiedUIPDup0Edit;

            /// <summary>
            /// Backing field for TypeUIPropertySDup0Edit property
            /// </summary>
            private Edit fTypeUIPropertySDup0Edit;

            /// <summary>
            /// Backing field for SizeUIPropertySDup0Edit property
            /// </summary>
            private Edit fSizeUIPropertySDup0Edit;

            /// <summary>
            /// Backing field for EnhancementUIItListItem property
            /// </summary>
            private ListItem fEnhancementUIItListItem;

            /// <summary>
            /// Backing field for UIDup1Image property
            /// </summary>
            private Image fUIDup1Image;

            /// <summary>
            /// Backing field for NameUIPropertySDup1Edit property
            /// </summary>
            private Edit fNameUIPropertySDup1Edit;

            /// <summary>
            /// Backing field for DatemodifiedUIPDup1Edit property
            /// </summary>
            private Edit fDatemodifiedUIPDup1Edit;

            /// <summary>
            /// Backing field for TypeUIPropertySDup1Edit property
            /// </summary>
            private Edit fTypeUIPropertySDup1Edit;

            /// <summary>
            /// Backing field for SizeUIPropertySDup1Edit property
            /// </summary>
            private Edit fSizeUIPropertySDup1Edit;

            /// <summary>
            /// Backing field for JediSpyLiteUIItListItem property
            /// </summary>
            private ListItem fJediSpyLiteUIItListItem;

            /// <summary>
            /// Backing field for UIDup2Image property
            /// </summary>
            private Image fUIDup2Image;

            /// <summary>
            /// Backing field for NameUIPropertySDup2Edit property
            /// </summary>
            private Edit fNameUIPropertySDup2Edit;

            /// <summary>
            /// Backing field for DatemodifiedUIPDup2Edit property
            /// </summary>
            private Edit fDatemodifiedUIPDup2Edit;

            /// <summary>
            /// Backing field for TypeUIPropertySDup2Edit property
            /// </summary>
            private Edit fTypeUIPropertySDup2Edit;

            /// <summary>
            /// Backing field for SizeUIPropertySDup2Edit property
            /// </summary>
            private Edit fSizeUIPropertySDup2Edit;

            /// <summary>
            /// Backing field for NewfolderUIItemListItem property
            /// </summary>
            private ListItem fNewfolderUIItemListItem;

            /// <summary>
            /// Backing field for UIDup3Image property
            /// </summary>
            private Image fUIDup3Image;

            /// <summary>
            /// Backing field for NameUIPropertySDup3Edit property
            /// </summary>
            private Edit fNameUIPropertySDup3Edit;

            /// <summary>
            /// Backing field for DatemodifiedUIPDup3Edit property
            /// </summary>
            private Edit fDatemodifiedUIPDup3Edit;

            /// <summary>
            /// Backing field for TypeUIPropertySDup3Edit property
            /// </summary>
            private Edit fTypeUIPropertySDup3Edit;

            /// <summary>
            /// Backing field for SizeUIPropertySDup3Edit property
            /// </summary>
            private Edit fSizeUIPropertySDup3Edit;

            /// <summary>
            /// Backing field for Newfolder2UIIteListItem property
            /// </summary>
            private ListItem fNewfolder2UIIteListItem;

            /// <summary>
            /// Backing field for UIDup4Image property
            /// </summary>
            private Image fUIDup4Image;

            /// <summary>
            /// Backing field for NameUIPropertySDup4Edit property
            /// </summary>
            private Edit fNameUIPropertySDup4Edit;

            /// <summary>
            /// Backing field for DatemodifiedUIPDup4Edit property
            /// </summary>
            private Edit fDatemodifiedUIPDup4Edit;

            /// <summary>
            /// Backing field for TypeUIPropertySDup4Edit property
            /// </summary>
            private Edit fTypeUIPropertySDup4Edit;

            /// <summary>
            /// Backing field for SizeUIPropertySDup4Edit property
            /// </summary>
            private Edit fSizeUIPropertySDup4Edit;

            /// <summary>
            /// Backing field for PRUIItem5ListItem property
            /// </summary>
            private ListItem fPRUIItem5ListItem;

            /// <summary>
            /// Backing field for UIDup5Image property
            /// </summary>
            private Image fUIDup5Image;

            /// <summary>
            /// Backing field for NameUIPropertySDup5Edit property
            /// </summary>
            private Edit fNameUIPropertySDup5Edit;

            /// <summary>
            /// Backing field for DatemodifiedUIPDup5Edit property
            /// </summary>
            private Edit fDatemodifiedUIPDup5Edit;

            /// <summary>
            /// Backing field for TypeUIPropertySDup5Edit property
            /// </summary>
            private Edit fTypeUIPropertySDup5Edit;

            /// <summary>
            /// Backing field for SizeUIPropertySDup5Edit property
            /// </summary>
            private Edit fSizeUIPropertySDup5Edit;

            /// <summary>
            /// Backing field for VisorUIItem6ListItem property
            /// </summary>
            private ListItem fVisorUIItem6ListItem;

            /// <summary>
            /// Backing field for UIDup6Image property
            /// </summary>
            private Image fUIDup6Image;

            /// <summary>
            /// Backing field for NameUIPropertySDup6Edit property
            /// </summary>
            private Edit fNameUIPropertySDup6Edit;

            /// <summary>
            /// Backing field for DatemodifiedUIPDup6Edit property
            /// </summary>
            private Edit fDatemodifiedUIPDup6Edit;

            /// <summary>
            /// Backing field for TypeUIPropertySDup6Edit property
            /// </summary>
            private Edit fTypeUIPropertySDup6Edit;

            /// <summary>
            /// Backing field for SizeUIPropertySDup6Edit property
            /// </summary>
            private Edit fSizeUIPropertySDup6Edit;

            /// <summary>
            /// Backing field for AllAddressBooksListItem property
            /// </summary>
            private ListItem fAllAddressBooksListItem;

            /// <summary>
            /// </summary>
            private Edit fNameUIPropertySDup7Edit;

            /// <summary>
            /// Backing field for DatemodifiedUIPDup7Edit property
            /// </summary>
            private Edit fDatemodifiedUIPDup7Edit;

            /// <summary>
            /// Backing field for TypeUIPropertySDup7Edit property
            /// </summary>
            private Edit fTypeUIPropertySDup7Edit;

            /// <summary>
            /// Backing field for SizeUIPropertySDup7Edit property
            /// </summary>
            private Edit fSizeUIPropertySDup7Edit;

            /// <summary>
            /// Backing field for ApplicationContTree property
            /// </summary>
            private Tree fApplicationContTree;

            /// <summary>
            /// Backing field for FilenameStatic1Text property
            /// </summary>
            private Text fFilenameStatic1Text;

            /// <summary>
            /// Backing field for FilenameComboBoPane property
            /// </summary>
            private Pane fFilenameComboBoPane;

            /// <summary>
            /// Backing field for FilenameComboBoComboBox property
            /// </summary>
            private ComboBox fFilenameComboBoComboBox;

            /// <summary>
            /// Backing field for FilenameEdit114Edit property
            /// </summary>
            private Edit fFilenameEdit114Edit;

            /// <summary>
            /// Backing field for FilenameComboLBList property
            /// </summary>
            private List fFilenameComboLBList;

            /// <summary>
            /// Backing field for DropDownButtonDDup0Button property
            /// </summary>
            private Button fDropDownButtonDDup0Button;

            /// <summary>
            /// Backing field for FilesoftypeCombComboBox property
            /// </summary>
            private ComboBox fFilesoftypeCombComboBox;

            /// <summary>
            /// Backing field for FilesoftypeCombList property
            /// </summary>
            private List fFilesoftypeCombList;

            /// <summary>
            /// Backing field for CSVCommadelimitListItem property
            /// </summary>
            private ListItem fCSVCommadelimitListItem;

            /// <summary>
            /// Backing field for DropDownButtonDDup1Button property
            /// </summary>
            private Button fDropDownButtonDDup1Button;

            /// <summary>
            /// Backing field for OpenButton1Button property
            /// </summary>
            private Button fOpenButton1Button;

            /// <summary>
            /// Backing field for CancelButton2Button property
            /// </summary>
            private Button fCancelButton2Button;

            /// <summary>
            /// Backing field for ScrollBarPane property
            /// </summary>
            private Pane fScrollBarPane;

            /// <summary>
            /// Backing field for WorkerWPane property
            /// </summary>
            private Pane fWorkerWPane;

            /// <summary>
            /// Backing field for ReBarWindow3240Pane property
            /// </summary>
            private Pane fReBarWindow3240Pane;

            /// <summary>
            /// Backing field for RebarBandDup0I0XCustom property
            /// </summary>
            private Custom fRebarBandDup0I0XCustom;

            /// <summary>
            /// Backing field for TravelBandPane property
            /// </summary>
            private Pane fTravelBandPane;

            /// <summary>
            /// Backing field for NavigationbuttoToolBar property
            /// </summary>
            private ToolBar fNavigationbuttoToolBar;

            /// <summary>
            /// Backing field for BackAltLeftArroButton property
            /// </summary>
            private Button fBackAltLeftArroButton;

            /// <summary>
            /// Backing field for ForwardAltRightButton property
            /// </summary>
            private Button fForwardAltRightButton;

            /// <summary>
            /// Backing field for RecentlocationsButton property
            /// </summary>
            private Button fRecentlocationsButton;

            /// <summary>
            /// Backing field for RebarBandDup1I1XCustom property
            /// </summary>
            private Custom fRebarBandDup1I1XCustom;

            /// <summary>
            /// Backing field for UpBandPane property
            /// </summary>
            private Pane fUpBandPane;

            /// <summary>
            /// Backing field for UpbandtoolbarToToolBar property
            /// </summary>
            private ToolBar fUpbandtoolbarToToolBar;

            /// <summary>
            /// Backing field for RebarBandDup2I2XCustom property
            /// </summary>
            private Custom fRebarBandDup2I2XCustom;

            /// <summary>
            /// Backing field for AddressBandRootPane property
            /// </summary>
            private Pane fAddressBandRootPane;

            /// <summary>
            /// Backing field for msctlsprogressProgressBar property
            /// </summary>
            private ProgressBar fmsctlsprogressProgressBar;

            /// <summary>
            /// Backing field for BreadcrumbParenPane property
            /// </summary>
            private Pane fBreadcrumbParenPane;

            /// <summary>
            /// Backing field for AddressDesktopTToolBar property
            /// </summary>
            private ToolBar fAddressDesktopTToolBar;

            /// <summary>
            /// Backing field for AlllocationsIteSplitButton property
            /// </summary>
            private SplitButton fAlllocationsIteSplitButton;

            /// <summary>
            /// Backing field for ThisPCItem1281SplitButton property
            /// </summary>
            private SplitButton fThisPCItem1281SplitButton;

            /// <summary>
            /// Backing field for DesktopItem1282MenuItem property
            /// </summary>
            private MenuItem fDesktopItem1282MenuItem;

            /// <summary>
            /// Backing field for AddressbandtoolToolBar property
            /// </summary>
            private ToolBar fAddressbandtoolToolBar;

            /// <summary>
            /// Backing field for PreviousLocatioButton property
            /// </summary>
            private Button fPreviousLocatioButton;

            /// <summary>
            /// Backing field for RebarBandDup3I3XCustom property
            /// </summary>
            private Custom fRebarBandDup3I3XCustom;

            /// <summary>
            /// Backing field for SeparatorBandDup0Pane property
            /// </summary>
            private Pane fSeparatorBandDup0Pane;

            /// <summary>
            /// Backing field for RebarBandDup4I4XCustom property
            /// </summary>
            private Custom fRebarBandDup4I4XCustom;

            /// <summary>
            /// Backing field for UniversalSearchPane property
            /// </summary>
            private Pane fUniversalSearchPane;

            /// <summary>
            /// Backing field for SearchBoxPane property
            /// </summary>
            private Pane fSearchBoxPane;

            /// <summary>
            /// Backing field for SearchEditBoxWrPane property
            /// </summary>
            private Pane fSearchEditBoxWrPane;

            /// <summary>
            /// Backing field for SearchDesktopSePane property
            /// </summary>
            private Pane fSearchDesktopSePane;

            /// <summary>
            /// Backing field for SearchBoxSearchEdit property
            /// </summary>
            private Edit fSearchBoxSearchEdit;

            /// <summary>
            /// Backing field for SearchButtonSeaButton property
            /// </summary>
            private Button fSearchButtonSeaButton;

            /// <summary>
            /// Backing field for RebarBandDup5I5XCustom property
            /// </summary>
            private Custom fRebarBandDup5I5XCustom;

            /// <summary>
            /// Backing field for SeparatorBandDup1Pane property
            /// </summary>
            private Pane fSeparatorBandDup1Pane;

            /// <summary>
            /// Backing field for OpenTitleBar property
            /// </summary>
            private TitleBar fOpenTitleBar;

            /// <summary>
            /// Backing field for SystemMenuBarSyDup0MenuBar property
            /// </summary>
            private MenuBar fSystemMenuBarSyDup0MenuBar;

            /// <summary>
            /// Backing field for SystemItem1Dup0MenuItem property
            /// </summary>
            private MenuItem fSystemItem1Dup0MenuItem;

            /// <summary>
            /// Backing field for CloseCloseDup0Button property
            /// </summary>
            private Button fCloseCloseDup0Button;

            /// <summary>
            /// Backing field for AddressBookManaTitleBar property
            /// </summary>
            private TitleBar fAddressBookManaTitleBar;

            /// <summary>
            /// Backing field for SystemMenuBarSyDup1MenuBar property
            /// </summary>
            private MenuBar fSystemMenuBarSyDup1MenuBar;

            /// <summary>
            /// Backing field for SystemItem1Dup1MenuItem property
            /// </summary>
            private MenuItem fSystemItem1Dup1MenuItem;

            /// <summary>
            /// Backing field for MinimizeMinimizDup0Button property
            /// </summary>
            private Button fMinimizeMinimizDup0Button;

            /// <summary>
            /// Backing field for MaximizeMaximizDup0Button property
            /// </summary>
            private Button fMaximizeMaximizDup0Button;

            /// <summary>
            /// Backing field for CloseCloseDup1Button property
            /// </summary>
            private Button fCloseCloseDup1Button;

            /// <summary>
            /// Backing field for DSSAddressBooksDup0Text property
            /// </summary>
            private Text fDSSAddressBooksDup0Text;

            /// <summary>
            /// Backing field for DSSAddressBooksDup1Text property
            /// </summary>
            private Text fDSSAddressBooksDup1Text;

            /// <summary>
            /// Backing field for TreeView87DDA4CTree property
            /// </summary>
            private Tree fTreeView87DDA4CTree;

            /// <summary>
            /// Backing field for PublicTreeViewITreeItem property
            /// </summary>
            private TreeItem fPublicTreeViewITreeItem;

            /// <summary>
            /// Backing field for ButtonExpanderDup0Button property
            /// </summary>
            private Button fButtonExpanderDup0Button;

            /// <summary>
            /// Backing field for PublicTextBlockText property
            /// </summary>
            private Text fPublicTextBlockText;

            /// <summary>
            /// Backing field for PrivateAddressBTreeItem property
            /// </summary>
            private TreeItem fPrivateAddressBTreeItem;

            /// <summary>
            /// Backing field for ButtonExpanderDup1Button property
            /// </summary>
            private Button fButtonExpanderDup1Button;

            /// <summary>
            /// Backing field for PrivateAddressBText property
            /// </summary>
            private Text fPrivateAddressBText;

            /// <summary>
            /// Backing field for ExportButtonA1CButton property
            /// </summary>
            private Button fExportButtonA1CButton;

            /// <summary>
            /// Backing field for ExportTextBlockText property
            /// </summary>
            private Text fExportTextBlockText;

            /// <summary>
            /// Backing field for DeleteButton1B6Button property
            /// </summary>
            private Button fDeleteButton1B6Button;

            /// <summary>
            /// Backing field for DeleteTextBlockDup0Text property
            /// </summary>
            private Text fDeleteTextBlockDup0Text;

            /// <summary>
            /// Backing field for ImportAddressBoButton property
            /// </summary>
            private Button fImportAddressBoButton;

            /// <summary>
            /// Backing field for ImportAddressBoText property
            /// </summary>
            private Text fImportAddressBoText;

            /// <summary>
            /// Backing field for GridSplitterThumb property
            /// </summary>
            private Thumb fGridSplitterThumb;

            /// <summary>
            /// Backing field for AddressBookContDup0Text property
            /// </summary>
            private Text fAddressBookContDup0Text;

            /// <summary>
            /// Backing field for AddressBookContDup1Text property
            /// </summary>
            private Text fAddressBookContDup1Text;

            /// <summary>
            /// Backing field for RefreshButton81Button property
            /// </summary>
            private Button fRefreshButton81Button;

            /// <summary>
            /// Backing field for RefreshTextBlocText property
            /// </summary>
            private Text fRefreshTextBlocText;

            /// <summary>
            /// Backing field for SearchForText property
            /// </summary>
            private Text fSearchForText;

            /// <summary>
            /// Backing field for SearchForTextBlText property
            /// </summary>
            private Text fSearchForTextBlText;

            /// <summary>
            /// Backing field for ComboBoxA5F891AComboBox property
            /// </summary>
            private ComboBox fComboBoxA5F891AComboBox;

            /// <summary>
            /// Backing field for TextBoxA7B3B6CFEdit property
            /// </summary>
            private Edit fTextBoxA7B3B6CFEdit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup0Pane property
            /// </summary>
            private Pane fScrollViewerPARDup0Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup0ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup0ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup0ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup0ScrollBar;

            /// <summary>
            /// Backing field for FilterButtonEB0Button property
            /// </summary>
            private Button fFilterButtonEB0Button;

            /// <summary>
            /// Backing field for FilterTextBlockText property
            /// </summary>
            private Text fFilterTextBlockText;

            /// <summary>
            /// Backing field for ClearButtonEC9FButton property
            /// </summary>
            private Button fClearButtonEC9FButton;

            /// <summary>
            /// Backing field for ClearTextBlockText property
            /// </summary>
            private Text fClearTextBlockText;

            /// <summary>
            /// Backing field for ListViewbb668d9DataGrid property
            /// </summary>
            private DataGrid fListViewbb668d9DataGrid;

            /// <summary>
            /// Backing field for GridViewHeaderRHeader property
            /// </summary>
            private Header fGridViewHeaderRHeader;

            /// <summary>
            /// Backing field for ContactNameGridHeaderItem property
            /// </summary>
            private HeaderItem fContactNameGridHeaderItem;

            /// <summary>
            /// Backing field for ContactNameTextText property
            /// </summary>
            private Text fContactNameTextText;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup0Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup0Thumb;

            /// <summary>
            /// Backing field for EmailAddressGriHeaderItem property
            /// </summary>
            private HeaderItem fEmailAddressGriHeaderItem;

            /// <summary>
            /// Backing field for EmailAddressTexText property
            /// </summary>
            private Text fEmailAddressTexText;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup1Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup1Thumb;

            /// <summary>
            /// Backing field for FaxNumberGridViHeaderItem property
            /// </summary>
            private HeaderItem fFaxNumberGridViHeaderItem;

            /// <summary>
            /// Backing field for FaxNumberTextBlText property
            /// </summary>
            private Text fFaxNumberTextBlText;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup2Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup2Thumb;

            /// <summary>
            /// Backing field for HPMfpAppServiceDataItem property
            /// </summary>
            private DataItem fHPMfpAppServiceDataItem;

            /// <summary>
            /// Backing field for fgTextBlockText property
            /// </summary>
            private Text ffgTextBlockText;

            /// <summary>
            /// Backing field for wscomTextBlockText property
            /// </summary>
            private Text fwscomTextBlockText;

            /// <summary>
            /// Backing field for A656565TextBlocText property
            /// </summary>
            private Text fA656565TextBlocText;

            /// <summary>
            /// Backing field for LDAPcontactsareText property
            /// </summary>
            private Text fLDAPcontactsareText;

            /// <summary>
            /// Backing field for DeleteButton41BButton property
            /// </summary>
            private Button fDeleteButton41BButton;

            /// <summary>
            /// Backing field for DeleteTextBlockDup1Text property
            /// </summary>
            private Text fDeleteTextBlockDup1Text;

            /// <summary>
            /// Backing field for EditButton548EBButton property
            /// </summary>
            private Button fEditButton548EBButton;

            /// <summary>
            /// Backing field for EditTextBlockText property
            /// </summary>
            private Text fEditTextBlockText;

            /// <summary>
            /// Backing field for AddGroupButton7Button property
            /// </summary>
            private Button fAddGroupButton7Button;

            /// <summary>
            /// Backing field for AddGroupTextBloText property
            /// </summary>
            private Text fAddGroupTextBloText;

            /// <summary>
            /// Backing field for AddContactButtoButton property
            /// </summary>
            private Button fAddContactButtoButton;

            /// <summary>
            /// Backing field for AddContactTextBText property
            /// </summary>
            private Text fAddContactTextBText;

            /// <summary>
            /// Backing field for OKButtonFA1AC0AButton property
            /// </summary>
            private Button fOKButtonFA1AC0AButton;

            /// <summary>
            /// Backing field for OKTextBlockDup0Text property
            /// </summary>
            private Text fOKTextBlockDup0Text;

            /// <summary>
            /// Backing field for HPDigitalSendinTitleBar property
            /// </summary>
            private TitleBar fHPDigitalSendinTitleBar;

            /// <summary>
            /// Backing field for SystemMenuBarSyDup2MenuBar property
            /// </summary>
            private MenuBar fSystemMenuBarSyDup2MenuBar;

            /// <summary>
            /// Backing field for SystemItem1Dup2MenuItem property
            /// </summary>
            private MenuItem fSystemItem1Dup2MenuItem;

            /// <summary>
            /// Backing field for MinimizeMinimizDup1Button property
            /// </summary>
            private Button fMinimizeMinimizDup1Button;

            /// <summary>
            /// Backing field for MaximizeMaximizDup1Button property
            /// </summary>
            private Button fMaximizeMaximizDup1Button;

            /// <summary>
            /// Backing field for CloseCloseDup2Button property
            /// </summary>
            private Button fCloseCloseDup2Button;

            /// <summary>
            /// Backing field for HelpButtonCB8CFButton property
            /// </summary>
            private Button fHelpButtonCB8CFButton;

            /// <summary>
            /// Backing field for HelpTextBlockText property
            /// </summary>
            private Text fHelpTextBlockText;

            /// <summary>
            /// Backing field for ApplyButton61E2Button property
            /// </summary>
            private Button fApplyButton61E2Button;

            /// <summary>
            /// Backing field for ApplyTextBlockText property
            /// </summary>
            private Text fApplyTextBlockText;

            /// <summary>
            /// Backing field for CancelButton65CButton property
            /// </summary>
            private Button fCancelButton65CButton;

            /// <summary>
            /// Backing field for CancelTextBlockText property
            /// </summary>
            private Text fCancelTextBlockText;

            /// <summary>
            /// Backing field for OKButtonCC2EF49Button property
            /// </summary>
            private Button fOKButtonCC2EF49Button;

            /// <summary>
            /// Backing field for OKTextBlockDup1Text property
            /// </summary>
            private Text fOKTextBlockDup1Text;

            /// <summary>
            /// Backing field for TabControlec0fdTab property
            /// </summary>
            private Tab fTabControlec0fdTab;

            /// <summary>
            /// Backing field for SystemWindowsCoDup0TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup0TabItem;

            /// <summary>
            /// Backing field for GeneralTextmGenText property
            /// </summary>
            private Text fGeneralTextmGenText;

            /// <summary>
            /// Backing field for GeneralTextBlocText property
            /// </summary>
            private Text fGeneralTextBlocText;

            /// <summary>
            /// Backing field for Text933345b04e3Text property
            /// </summary>
            private Text fText933345b04e3Text;

            /// <summary>
            /// Backing field for Text786caf67344Text property
            /// </summary>
            private Text fText786caf67344Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup1TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup1TabItem;

            /// <summary>
            /// Backing field for AuthenticationTDup0Text property
            /// </summary>
            private Text fAuthenticationTDup0Text;

            /// <summary>
            /// Backing field for AuthenticationTDup1Text property
            /// </summary>
            private Text fAuthenticationTDup1Text;

            /// <summary>
            /// Backing field for Text31EC91730B9Text property
            /// </summary>
            private Text fText31EC91730B9Text;

            /// <summary>
            /// Backing field for TextA479C271445Text property
            /// </summary>
            private Text fTextA479C271445Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup2TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup2TabItem;

            /// <summary>
            /// Backing field for EmailTextmEmailText property
            /// </summary>
            private Text fEmailTextmEmailText;

            /// <summary>
            /// Backing field for EmailTextBlockText property
            /// </summary>
            private Text fEmailTextBlockText;

            /// <summary>
            /// Backing field for Text32de714a8bdText property
            /// </summary>
            private Text fText32de714a8bdText;

            /// <summary>
            /// Backing field for Text3b2a8761f4fText property
            /// </summary>
            private Text fText3b2a8761f4fText;

            /// <summary>
            /// Backing field for TextBlockText property
            /// </summary>
            private Text fTextBlockText;

            /// <summary>
            /// Backing field for SystemWindowsCoDup3TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup3TabItem;

            /// <summary>
            /// Backing field for FaxTextmFaxTabLText property
            /// </summary>
            private Text fFaxTextmFaxTabLText;

            /// <summary>
            /// Backing field for FaxTextBlockText property
            /// </summary>
            private Text fFaxTextBlockText;

            /// <summary>
            /// Backing field for TextD1ED4F16F38Text property
            /// </summary>
            private Text fTextD1ED4F16F38Text;

            /// <summary>
            /// Backing field for Text7DDE04FD251Text property
            /// </summary>
            private Text fText7DDE04FD251Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup4TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup4TabItem;

            /// <summary>
            /// Backing field for SendtoFolderTexDup0Text property
            /// </summary>
            private Text fSendtoFolderTexDup0Text;

            /// <summary>
            /// Backing field for SendtoFolderTexDup1Text property
            /// </summary>
            private Text fSendtoFolderTexDup1Text;

            /// <summary>
            /// Backing field for Text7a57f43ecb1Text property
            /// </summary>
            private Text fText7a57f43ecb1Text;

            /// <summary>
            /// Backing field for Text654b650dd19Text property
            /// </summary>
            private Text fText654b650dd19Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup5TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup5TabItem;

            /// <summary>
            /// Backing field for WorkflowsTextmWText property
            /// </summary>
            private Text fWorkflowsTextmWText;

            /// <summary>
            /// Backing field for WorkflowsTextBlText property
            /// </summary>
            private Text fWorkflowsTextBlText;

            /// <summary>
            /// Backing field for Text22D9C34E84CText property
            /// </summary>
            private Text fText22D9C34E84CText;

            /// <summary>
            /// Backing field for TextC8D15BD39C8Text property
            /// </summary>
            private Text fTextC8D15BD39C8Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup6TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup6TabItem;

            /// <summary>
            /// Backing field for AddressingTextmText property
            /// </summary>
            private Text fAddressingTextmText;

            /// <summary>
            /// Backing field for AddressingTextBText property
            /// </summary>
            private Text fAddressingTextBText;

            /// <summary>
            /// Backing field for Text47EB5CBA4D1Text property
            /// </summary>
            private Text fText47EB5CBA4D1Text;

            /// <summary>
            /// Backing field for Text0757E148179Text property
            /// </summary>
            private Text fText0757E148179Text;

            /// <summary>
            /// Backing field for ScrollViewerPane property
            /// </summary>
            private Pane fScrollViewerPane;

            /// <summary>
            /// Backing field for AddressingNetwoCustom property
            /// </summary>
            private Custom fAddressingNetwoCustom;

            /// <summary>
            /// Backing field for ErrorConflictUsCustom property
            /// </summary>
            private Custom fErrorConflictUsCustom;

            /// <summary>
            /// Backing field for SearchMethodGroGroup property
            /// </summary>
            private Group fSearchMethodGroGroup;

            /// <summary>
            /// Backing field for SearchMethodTexText property
            /// </summary>
            private Text fSearchMethodTexText;

            /// <summary>
            /// Backing field for QuickSearchFindRadioButton property
            /// </summary>
            private RadioButton fQuickSearchFindRadioButton;

            /// <summary>
            /// Backing field for QuickSearchFindText property
            /// </summary>
            private Text fQuickSearchFindText;

            /// <summary>
            /// Backing field for DetailedSearchFRadioButton property
            /// </summary>
            private RadioButton fDetailedSearchFRadioButton;

            /// <summary>
            /// Backing field for DetailedSearchFText property
            /// </summary>
            private Text fDetailedSearchFText;

            /// <summary>
            /// Backing field for PersonalContactGroup property
            /// </summary>
            private Group fPersonalContactGroup;

            /// <summary>
            /// Backing field for PersonalContactText property
            /// </summary>
            private Text fPersonalContactText;

            /// <summary>
            /// Backing field for ThepersonalcontText property
            /// </summary>
            private Text fThepersonalcontText;

            /// <summary>
            /// Backing field for EnablePersonalCCheckBox property
            /// </summary>
            private CheckBox fEnablePersonalCCheckBox;

            /// <summary>
            /// Backing field for EnablePersonalCText property
            /// </summary>
            private Text fEnablePersonalCText;

            /// <summary>
            /// Backing field for TestExchangeSerGroup property
            /// </summary>
            private Group fTestExchangeSerGroup;

            /// <summary>
            /// Backing field for TestExchangeSerText property
            /// </summary>
            private Text fTestExchangeSerText;

            /// <summary>
            /// Backing field for WindowsDomainDup0Text property
            /// </summary>
            private Text fWindowsDomainDup0Text;

            /// <summary>
            /// Backing field for WindowsDomainTeText property
            /// </summary>
            private Text fWindowsDomainTeText;

            /// <summary>
            /// Backing field for TextBox0857B9D0Edit property
            /// </summary>
            private Edit fTextBox0857B9D0Edit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup1Pane property
            /// </summary>
            private Pane fScrollViewerPARDup1Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup1ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup1ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup1ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup1ScrollBar;

            /// <summary>
            /// Backing field for UsernameDup0Text property
            /// </summary>
            private Text fUsernameDup0Text;

            /// <summary>
            /// Backing field for UsernameTextBloDup0Text property
            /// </summary>
            private Text fUsernameTextBloDup0Text;

            /// <summary>
            /// Backing field for TextBox9B0DA4ABEdit property
            /// </summary>
            private Edit fTextBox9B0DA4ABEdit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup2Pane property
            /// </summary>
            private Pane fScrollViewerPARDup2Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup2ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup2ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup2ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup2ScrollBar;

            /// <summary>
            /// Backing field for PasswordDup0Text property
            /// </summary>
            private Text fPasswordDup0Text;

            /// <summary>
            /// Backing field for PasswordTextBloDup0Text property
            /// </summary>
            private Text fPasswordTextBloDup0Text;

            /// <summary>
            /// Backing field for PasswordBox6B3CEdit property
            /// </summary>
            private Edit fPasswordBox6B3CEdit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup3Pane property
            /// </summary>
            private Pane fScrollViewerPARDup3Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup3ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup3ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup3ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup3ScrollBar;

            /// <summary>
            /// Backing field for TestText property
            /// </summary>
            private Text fTestText;

            /// <summary>
            /// Backing field for TestTextBlockDup0Text property
            /// </summary>
            private Text fTestTextBlockDup0Text;

            /// <summary>
            /// Backing field for TextBoxDE0C2350Edit property
            /// </summary>
            private Edit fTextBoxDE0C2350Edit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup4Pane property
            /// </summary>
            private Pane fScrollViewerPARDup4Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup4ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup4ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup4ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup4ScrollBar;

            /// <summary>
            /// Backing field for TestButtonA90BEButton property
            /// </summary>
            private Button fTestButtonA90BEButton;

            /// <summary>
            /// Backing field for TestTextBlockDup1Text property
            /// </summary>
            private Text fTestTextBlockDup1Text;

            /// <summary>
            /// Backing field for LDAPReplicationGroup property
            /// </summary>
            private Group fLDAPReplicationGroup;

            /// <summary>
            /// Backing field for LDAPReplicationText property
            /// </summary>
            private Text fLDAPReplicationText;

            /// <summary>
            /// Backing field for EnableNetworkCoCheckBox property
            /// </summary>
            private CheckBox fEnableNetworkCoCheckBox;

            /// <summary>
            /// Backing field for EnableNetworkCoText property
            /// </summary>
            private Text fEnableNetworkCoText;

            /// <summary>
            /// Backing field for ExpanderFD3555EGroup property
            /// </summary>
            private Group fExpanderFD3555EGroup;

            /// <summary>
            /// Backing field for ButtonHeaderSitDup0Button property
            /// </summary>
            private Button fButtonHeaderSitDup0Button;

            /// <summary>
            /// Backing field for NetworkDirectorGroup property
            /// </summary>
            private Group fNetworkDirectorGroup;

            /// <summary>
            /// Backing field for NetworkDirectorText property
            /// </summary>
            private Text fNetworkDirectorText;

            /// <summary>
            /// Backing field for LDAPServerAddreDup0Text property
            /// </summary>
            private Text fLDAPServerAddreDup0Text;

            /// <summary>
            /// Backing field for LDAPServerAddreDup1Text property
            /// </summary>
            private Text fLDAPServerAddreDup1Text;

            /// <summary>
            /// Backing field for TextBox858933a3Edit property
            /// </summary>
            private Edit fTextBox858933a3Edit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup5Pane property
            /// </summary>
            private Pane fScrollViewerPARDup5Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup5ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup5ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup5ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup5ScrollBar;

            /// <summary>
            /// Backing field for AutoFindButton3Button property
            /// </summary>
            private Button fAutoFindButton3Button;

            /// <summary>
            /// Backing field for AutoFindTextBloText property
            /// </summary>
            private Text fAutoFindTextBloText;

            /// <summary>
            /// Backing field for HostnameorIPaddDup0Text property
            /// </summary>
            private Text fHostnameorIPaddDup0Text;

            /// <summary>
            /// Backing field for HostnameorIPaddDup1Text property
            /// </summary>
            private Text fHostnameorIPaddDup1Text;

            /// <summary>
            /// Backing field for PortText property
            /// </summary>
            private Text fPortText;

            /// <summary>
            /// Backing field for PortTextBlockText property
            /// </summary>
            private Text fPortTextBlockText;

            /// <summary>
            /// Backing field for UseasecureconneCheckBox property
            /// </summary>
            private CheckBox fUseasecureconneCheckBox;

            /// <summary>
            /// Backing field for UseasecureconneText property
            /// </summary>
            private Text fUseasecureconneText;

            /// <summary>
            /// Backing field for TextBox79f22c3aEdit property
            /// </summary>
            private Edit fTextBox79f22c3aEdit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup6Pane property
            /// </summary>
            private Pane fScrollViewerPARDup6Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup6ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup6ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup6ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup6ScrollBar;

            /// <summary>
            /// Backing field for Port636isthedefDup0Text property
            /// </summary>
            private Text fPort636isthedefDup0Text;

            /// <summary>
            /// Backing field for Port636isthedefDup1Text property
            /// </summary>
            private Text fPort636isthedefDup1Text;

            /// <summary>
            /// Backing field for ExpanderDD1518FGroup property
            /// </summary>
            private Group fExpanderDD1518FGroup;

            /// <summary>
            /// Backing field for ButtonHeaderSitDup1Button property
            /// </summary>
            private Button fButtonHeaderSitDup1Button;

            /// <summary>
            /// Backing field for ServerAuthenticGroup property
            /// </summary>
            private Group fServerAuthenticGroup;

            /// <summary>
            /// Backing field for ServerAuthenticText property
            /// </summary>
            private Text fServerAuthenticText;

            /// <summary>
            /// Backing field for ServerdoesnotreRadioButton property
            /// </summary>
            private RadioButton fServerdoesnotreRadioButton;

            /// <summary>
            /// Backing field for ServerdoesnotreText property
            /// </summary>
            private Text fServerdoesnotreText;

            /// <summary>
            /// Backing field for ServerrequiresaRadioButton property
            /// </summary>
            private RadioButton fServerrequiresaRadioButton;

            /// <summary>
            /// Backing field for ServerrequiresaText property
            /// </summary>
            private Text fServerrequiresaText;

            /// <summary>
            /// Backing field for ComboBox5cd52d1ComboBox property
            /// </summary>
            private ComboBox fComboBox5cd52d1ComboBox;

            /// <summary>
            /// Backing field for WindowsorLDAPsiText property
            /// </summary>
            private Text fWindowsorLDAPsiText;

            /// <summary>
            /// Backing field for UsernameDup1Text property
            /// </summary>
            private Text fUsernameDup1Text;

            /// <summary>
            /// Backing field for UsernameTextBloDup1Text property
            /// </summary>
            private Text fUsernameTextBloDup1Text;

            /// <summary>
            /// Backing field for TextBoxb54cac9eEdit property
            /// </summary>
            private Edit fTextBoxb54cac9eEdit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup7Pane property
            /// </summary>
            private Pane fScrollViewerPARDup7Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup7ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup7ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup7ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup7ScrollBar;

            /// <summary>
            /// Backing field for PasswordDup1Text property
            /// </summary>
            private Text fPasswordDup1Text;

            /// <summary>
            /// Backing field for PasswordTextBloDup1Text property
            /// </summary>
            private Text fPasswordTextBloDup1Text;

            /// <summary>
            /// Backing field for PasswordBox8ed9Edit property
            /// </summary>
            private Edit fPasswordBox8ed9Edit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup8Pane property
            /// </summary>
            private Pane fScrollViewerPARDup8Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup8ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup8ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup8ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup8ScrollBar;

            /// <summary>
            /// Backing field for WindowsDomainDup1Text property
            /// </summary>
            private Text fWindowsDomainDup1Text;

            /// <summary>
            /// Backing field for TextBox1cce79f4Edit property
            /// </summary>
            private Edit fTextBox1cce79f4Edit;

            /// <summary>
            /// Backing field for KerberosDefaultText property
            /// </summary>
            private Text fKerberosDefaultText;

            /// <summary>
            /// Backing field for TextBox757e1b31Edit property
            /// </summary>
            private Edit fTextBox757e1b31Edit;

            /// <summary>
            /// Backing field for KerberosServerHText property
            /// </summary>
            private Text fKerberosServerHText;

            /// <summary>
            /// Backing field for TextBoxe5cfa172Edit property
            /// </summary>
            private Edit fTextBoxe5cfa172Edit;

            /// <summary>
            /// Backing field for KerberosServerPText property
            /// </summary>
            private Text fKerberosServerPText;

            /// <summary>
            /// Backing field for TextBoxf986abfaEdit property
            /// </summary>
            private Edit fTextBoxf986abfaEdit;

            /// <summary>
            /// Backing field for ExpanderB7151C3Group property
            /// </summary>
            private Group fExpanderB7151C3Group;

            /// <summary>
            /// Backing field for ButtonHeaderSitDup2Button property
            /// </summary>
            private Button fButtonHeaderSitDup2Button;

            /// <summary>
            /// Backing field for LDAPDatabaseSeaGroup property
            /// </summary>
            private Group fLDAPDatabaseSeaGroup;

            /// <summary>
            /// Backing field for LDAPDatabaseSeaText property
            /// </summary>
            private Text fLDAPDatabaseSeaText;

            /// <summary>
            /// Backing field for PathtostartsearText property
            /// </summary>
            private Text fPathtostartsearText;

            /// <summary>
            /// Backing field for TextBox2e2cfbd5Edit property
            /// </summary>
            private Edit fTextBox2e2cfbd5Edit;

            /// <summary>
            /// Backing field for AutoFindButton4Button property
            /// </summary>
            private Button fAutoFindButton4Button;

            /// <summary>
            /// Backing field for SourceforAttribText property
            /// </summary>
            private Text fSourceforAttribText;

            /// <summary>
            /// Backing field for UseActiveDirectRadioButton property
            /// </summary>
            private RadioButton fUseActiveDirectRadioButton;

            /// <summary>
            /// Backing field for UseExchange55DeRadioButton property
            /// </summary>
            private RadioButton fUseExchange55DeRadioButton;

            /// <summary>
            /// Backing field for UseCustomAttribRadioButton property
            /// </summary>
            private RadioButton fUseCustomAttribRadioButton;

            /// <summary>
            /// Backing field for AutoFindButton8Button property
            /// </summary>
            private Button fAutoFindButton8Button;

            /// <summary>
            /// Backing field for MatchtheRecipieText property
            /// </summary>
            private Text fMatchtheRecipieText;

            /// <summary>
            /// Backing field for TextBox0fd71265Edit property
            /// </summary>
            private Edit fTextBox0fd71265Edit;

            /// <summary>
            /// Backing field for AttributeNamefoDup0Text property
            /// </summary>
            private Text fAttributeNamefoDup0Text;

            /// <summary>
            /// Backing field for TextBoxc34b5023Edit property
            /// </summary>
            private Edit fTextBoxc34b5023Edit;

            /// <summary>
            /// Backing field for AttributeNamefoDup1Text property
            /// </summary>
            private Text fAttributeNamefoDup1Text;

            /// <summary>
            /// Backing field for TextBox3a6d11c5Edit property
            /// </summary>
            private Edit fTextBox3a6d11c5Edit;

            /// <summary>
            /// Backing field for AdvancedSearchOGroup property
            /// </summary>
            private Group fAdvancedSearchOGroup;

            /// <summary>
            /// Backing field for Expander0D39A3CGroup property
            /// </summary>
            private Group fExpander0D39A3CGroup;

            /// <summary>
            /// Backing field for ButtonHeaderSitDup3Button property
            /// </summary>
            private Button fButtonHeaderSitDup3Button;

            /// <summary>
            /// Backing field for TestforLDAPRetrGroup property
            /// </summary>
            private Group fTestforLDAPRetrGroup;

            /// <summary>
            /// Backing field for TestforLDAPRetrText property
            /// </summary>
            private Text fTestforLDAPRetrText;

            /// <summary>
            /// Backing field for TestTextmTestLaText property
            /// </summary>
            private Text fTestTextmTestLaText;

            /// <summary>
            /// Backing field for TextBoxf206c2f6Edit property
            /// </summary>
            private Edit fTextBoxf206c2f6Edit;

            /// <summary>
            /// Backing field for TestButtone6d54Button property
            /// </summary>
            private Button fTestButtone6d54Button;

            /// <summary>
            /// Backing field for Expander5DC4D6AGroup property
            /// </summary>
            private Group fExpander5DC4D6AGroup;

            /// <summary>
            /// Backing field for ButtonHeaderSitDup4Button property
            /// </summary>
            private Button fButtonHeaderSitDup4Button;

            /// <summary>
            /// Backing field for SyncScheduleSteGroup property
            /// </summary>
            private Group fSyncScheduleSteGroup;

            /// <summary>
            /// Backing field for SyncScheduleSteText property
            /// </summary>
            private Text fSyncScheduleSteText;

            /// <summary>
            /// Backing field for SyncText property
            /// </summary>
            private Text fSyncText;

            /// <summary>
            /// Backing field for ComboBox1138dacComboBox property
            /// </summary>
            private ComboBox fComboBox1138dacComboBox;

            /// <summary>
            /// Backing field for SyncTimeText property
            /// </summary>
            private Text fSyncTimeText;

            /// <summary>
            /// Backing field for WindowsFormsHosDup0Pane property
            /// </summary>
            private Pane fWindowsFormsHosDup0Pane;

            /// <summary>
            /// Backing field for A24HourCheckBoxCheckBox property
            /// </summary>
            private CheckBox fA24HourCheckBoxCheckBox;

            /// <summary>
            /// Backing field for OnlysyncMondayFCheckBox property
            /// </summary>
            private CheckBox fOnlysyncMondayFCheckBox;

            /// <summary>
            /// Backing field for SundayCheckBox2CheckBox property
            /// </summary>
            private CheckBox fSundayCheckBox2CheckBox;

            /// <summary>
            /// Backing field for MondayCheckBoxCCheckBox property
            /// </summary>
            private CheckBox fMondayCheckBoxCCheckBox;

            /// <summary>
            /// Backing field for TuesdayCheckBoxCheckBox property
            /// </summary>
            private CheckBox fTuesdayCheckBoxCheckBox;

            /// <summary>
            /// Backing field for WednesdayCheckBCheckBox property
            /// </summary>
            private CheckBox fWednesdayCheckBCheckBox;

            /// <summary>
            /// Backing field for ThursdayCheckBoCheckBox property
            /// </summary>
            private CheckBox fThursdayCheckBoCheckBox;

            /// <summary>
            /// Backing field for FridayCheckBoxDCheckBox property
            /// </summary>
            private CheckBox fFridayCheckBoxDCheckBox;

            /// <summary>
            /// Backing field for SaturdayCheckBoCheckBox property
            /// </summary>
            private CheckBox fSaturdayCheckBoCheckBox;

            /// <summary>
            /// Backing field for LastDayoftheMonRadioButton property
            /// </summary>
            private RadioButton fLastDayoftheMonRadioButton;

            /// <summary>
            /// Backing field for DayRadioButton3RadioButton property
            /// </summary>
            private RadioButton fDayRadioButton3RadioButton;

            /// <summary>
            /// Backing field for WindowsFormsHosDup1Pane property
            /// </summary>
            private Pane fWindowsFormsHosDup1Pane;

            /// <summary>
            /// Backing field for LastReplicationText property
            /// </summary>
            private Text fLastReplicationText;

            /// <summary>
            /// Backing field for TextBoxcc133df7Edit property
            /// </summary>
            private Edit fTextBoxcc133df7Edit;

            /// <summary>
            /// Backing field for SyncNowButtonb7Button property
            /// </summary>
            private Button fSyncNowButtonb7Button;

            /// <summary>
            /// Backing field for ClearLDAPCacheBButton property
            /// </summary>
            private Button fClearLDAPCacheBButton;

            /// <summary>
            /// Backing field for ClearLDAPCacheTText property
            /// </summary>
            private Text fClearLDAPCacheTText;

            /// <summary>
            /// Backing field for AddressBookManaGroup property
            /// </summary>
            private Group fAddressBookManaGroup;

            /// <summary>
            /// Backing field for AddressBookManaDup0Text property
            /// </summary>
            private Text fAddressBookManaDup0Text;

            /// <summary>
            /// Backing field for AddressBookManaButton property
            /// </summary>
            private Button fAddressBookManaButton;

            /// <summary>
            /// Backing field for AddressBookManaDup1Text property
            /// </summary>
            private Text fAddressBookManaDup1Text;

            /// <summary>
            /// Backing field for ScrollBarVerticDup9ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup9ScrollBar;

            /// <summary>
            /// Backing field for RepeatButtonPARDup0Button property
            /// </summary>
            private Button fRepeatButtonPARDup0Button;

            /// <summary>
            /// Backing field for RepeatButtonPagDup0Button property
            /// </summary>
            private Button fRepeatButtonPagDup0Button;

            /// <summary>
            /// Backing field for RepeatButtonPagDup1Button property
            /// </summary>
            private Button fRepeatButtonPagDup1Button;

            /// <summary>
            /// Backing field for ThumbThumb property
            /// </summary>
            private Thumb fThumbThumb;

            /// <summary>
            /// Backing field for RepeatButtonPARDup1Button property
            /// </summary>
            private Button fRepeatButtonPARDup1Button;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup9ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup9ScrollBar;

            /// <summary>
            /// Backing field for DeviceConfiguraTabItem property
            /// </summary>
            private TabItem fDeviceConfiguraTabItem;

            /// <summary>
            /// Backing field for DeviceConfiguraText property
            /// </summary>
            private Text fDeviceConfiguraText;

            /// <summary>
            /// Backing field for TemplateConfiguTabItem property
            /// </summary>
            private TabItem fTemplateConfiguTabItem;

            /// <summary>
            /// Backing field for TemplateConfiguText property
            /// </summary>
            private Text fTemplateConfiguText;

            /// <summary>
            /// Backing field for LogTabItem9b4f3TabItem property
            /// </summary>
            private TabItem fLogTabItem9b4f3TabItem;

            /// <summary>
            /// Backing field for LogTextBlockText property
            /// </summary>
            private Text fLogTextBlockText;

            /// <summary>
            /// Backing field for SystemWindowsCoDup7TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup7TabItem;

            /// <summary>
            /// Backing field for SecurityTextmSeText property
            /// </summary>
            private Text fSecurityTextmSeText;

            /// <summary>
            /// Backing field for SecurityTextBloText property
            /// </summary>
            private Text fSecurityTextBloText;

            /// <summary>
            /// Backing field for Text8A7A84DB894Text property
            /// </summary>
            private Text fText8A7A84DB894Text;

            /// <summary>
            /// Backing field for Text16F78FB18FFText property
            /// </summary>
            private Text fText16F78FB18FFText;

            /// <summary>
            /// Backing field for SystemWindowsCoDup8TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup8TabItem;

            /// <summary>
            /// Backing field for AnalyticsTextmAText property
            /// </summary>
            private Text fAnalyticsTextmAText;

            /// <summary>
            /// Backing field for AnalyticsTextBlText property
            /// </summary>
            private Text fAnalyticsTextBlText;

            /// <summary>
            /// Backing field for AboutTabItemf45TabItem property
            /// </summary>
            private TabItem fAboutTabItemf45TabItem;

            /// <summary>
            /// Backing field for AboutTextBlockText property
            /// </summary>
            private Text fAboutTextBlockText;

            /// <summary>
            /// The Ip Address
            /// </summary>
            private string _ipaddress;

            /// <summary>
            /// Initializes a new instance of the <see cref="DSS_AddressBookManagerImport"/> class.
            /// </summary>
            /// <param name="framework">
            /// The framework.
            /// </param>
            public DSS_AddressBookManagerImport(UIAFramework framework)
            {
                Desktop = new Desktop(framework);
            }

            /// <summary>
            /// Initializes a new instance of the <see cref="DSS_AddressBookManagerImport"/> class using the default UIAFramework.
            /// </summary>
            public DSS_AddressBookManagerImport()
            {
                Desktop = new Desktop();
            }

            /// <summary>
            /// Initializes a new instance of the <see cref="DSS_AddressBookManagerImport"/> class using the default UIAFramework.
            /// </summary>
            public DSS_AddressBookManagerImport(string address)
            {
                Desktop = new Desktop();
                _ipaddress = address;
            }



            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Desktop Desktop { get; private set; }

            /// <summary>
            /// Gets Reference to HPDigitalSendinWindow
            /// </summary>
            public Window HPDigitalSendinWindow
            {
                get
                {
                    if (null == fHPDigitalSendinWindow)
                    {
                        fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                        fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_ipaddress})");
                    }

                    return fHPDigitalSendinWindow;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookManaWindow
            /// </summary>
            public Window AddressBookManaWindow
            {
                get
                {
                    if (null == fAddressBookManaWindow)
                    {
                        fAddressBookManaWindow = new Window("AddressBookManaWindow", HPDigitalSendinWindow);
                        fAddressBookManaWindow.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"391E55DE-0CF0-4955-829E-6334ED7FFCE7");
                        fAddressBookManaWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                        fAddressBookManaWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                    }

                    return fAddressBookManaWindow;
                }
            }

            /// <summary>
            /// Gets Reference to Open32770Window
            /// </summary>
            public Window Open32770Window
            {
                get
                {
                    if (null == fOpen32770Window)
                    {
                        fOpen32770Window = new Window("Open32770Window", AddressBookManaWindow);
                        fOpen32770Window.UIMap.Scope = UIASeachScope.Children;
                        fOpen32770Window.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                        fOpen32770Window.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Open");
                    }

                    return fOpen32770Window;
                }
            }

            /// <summary>
            /// Gets Reference to DUIViewWndClassPane
            /// </summary>
            public Pane DUIViewWndClassPane
            {
                get
                {
                    if (null == fDUIViewWndClassPane)
                    {
                        fDUIViewWndClassPane = new Pane("DUIViewWndClassPane", Open32770Window);
                        fDUIViewWndClassPane.UIMap.Scope = UIASeachScope.Children;
                        fDUIViewWndClassPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"DUIViewWndClassName");
                    }

                    return fDUIViewWndClassPane;
                }
            }

            /// <summary>
            /// Gets Reference to ExplorerPaneHWNPane
            /// </summary>
            public Pane ExplorerPaneHWNPane
            {
                get
                {
                    if (null == fExplorerPaneHWNPane)
                    {
                        fExplorerPaneHWNPane = new Pane("ExplorerPaneHWNPane", DUIViewWndClassPane);
                        fExplorerPaneHWNPane.UIMap.Scope = UIASeachScope.Children;
                        fExplorerPaneHWNPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"main");
                        fExplorerPaneHWNPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"HWNDView");
                        fExplorerPaneHWNPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Explorer Pane");
                    }

                    return fExplorerPaneHWNPane;
                }
            }

            /// <summary>
            /// Gets Reference to CtrlNotifySinkDup0I0XPane
            /// </summary>
            public Pane CtrlNotifySinkDup0I0XPane
            {
                get
                {
                    if (null == fCtrlNotifySinkDup0I0XPane)
                    {
                        fCtrlNotifySinkDup0I0XPane = new Pane("CtrlNotifySinkDup0I0XPane", ExplorerPaneHWNPane);
                        fCtrlNotifySinkDup0I0XPane.UIMap.Scope = UIASeachScope.Children;
                        fCtrlNotifySinkDup0I0XPane.UIMap.Index = 0;
                        fCtrlNotifySinkDup0I0XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CtrlNotifySink");
                    }

                    return fCtrlNotifySinkDup0I0XPane;
                }
            }

            /// <summary>
            /// Gets Reference to CtrlNotifySinkDup1I1XPane
            /// </summary>
            public Pane CtrlNotifySinkDup1I1XPane
            {
                get
                {
                    if (null == fCtrlNotifySinkDup1I1XPane)
                    {
                        fCtrlNotifySinkDup1I1XPane = new Pane("CtrlNotifySinkDup1I1XPane", ExplorerPaneHWNPane);
                        fCtrlNotifySinkDup1I1XPane.UIMap.Scope = UIASeachScope.Children;
                        fCtrlNotifySinkDup1I1XPane.UIMap.Index = 1;
                        fCtrlNotifySinkDup1I1XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CtrlNotifySink");
                    }

                    return fCtrlNotifySinkDup1I1XPane;
                }
            }

            /// <summary>
            /// Gets Reference to CommandModuleFoToolBar
            /// </summary>
            public ToolBar CommandModuleFoToolBar
            {
                get
                {
                    if (null == fCommandModuleFoToolBar)
                    {
                        fCommandModuleFoToolBar = new ToolBar("CommandModuleFoToolBar", ExplorerPaneHWNPane);
                        fCommandModuleFoToolBar.UIMap.Scope = UIASeachScope.Children;
                        fCommandModuleFoToolBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FolderBandModuleInner");
                        fCommandModuleFoToolBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"FolderBandModuleInner");
                        fCommandModuleFoToolBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Command Module");
                    }

                    return fCommandModuleFoToolBar;
                }
            }

            /// <summary>
            /// Gets Reference to HelpButton3dHelButton
            /// </summary>
            public Button HelpButton3dHelButton
            {
                get
                {
                    if (null == fHelpButton3dHelButton)
                    {
                        fHelpButton3dHelButton = new Button("HelpButton3dHelButton", CommandModuleFoToolBar);
                        fHelpButton3dHelButton.UIMap.Scope = UIASeachScope.Children;
                        fHelpButton3dHelButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HelpButton");
                        fHelpButton3dHelButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button3d");
                        fHelpButton3dHelButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"&Help");
                    }

                    return fHelpButton3dHelButton;
                }
            }

            /// <summary>
            /// Gets Reference to PreviewpaneButtCheckBox
            /// </summary>
            public CheckBox PreviewpaneButtCheckBox
            {
                get
                {
                    if (null == fPreviewpaneButtCheckBox)
                    {
                        fPreviewpaneButtCheckBox = new CheckBox("PreviewpaneButtCheckBox", CommandModuleFoToolBar);
                        fPreviewpaneButtCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fPreviewpaneButtCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PreviewButton");
                        fPreviewpaneButtCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button3d");
                        fPreviewpaneButtCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Preview pane");
                    }

                    return fPreviewpaneButtCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to ViewsViewControSplitButton
            /// </summary>
            public SplitButton ViewsViewControSplitButton
            {
                get
                {
                    if (null == fViewsViewControSplitButton)
                    {
                        fViewsViewControSplitButton = new SplitButton("ViewsViewControSplitButton", CommandModuleFoToolBar);
                        fViewsViewControSplitButton.UIMap.Scope = UIASeachScope.Children;
                        fViewsViewControSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ViewControl");
                        fViewsViewControSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ViewControl");
                        fViewsViewControSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Views");
                    }

                    return fViewsViewControSplitButton;
                }
            }

            /// <summary>
            /// Gets Reference to ViewSliderButtoButton
            /// </summary>
            public Button ViewSliderButtoButton
            {
                get
                {
                    if (null == fViewSliderButtoButton)
                    {
                        fViewSliderButtoButton = new Button("ViewSliderButtoButton", ViewsViewControSplitButton);
                        fViewSliderButtoButton.UIMap.Scope = UIASeachScope.Children;
                        fViewSliderButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SplitMenuButton");
                        fViewSliderButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button3d");
                        fViewSliderButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"View Slider");
                    }

                    return fViewSliderButtoButton;
                }
            }

            /// <summary>
            /// Gets Reference to OrganizeAJOSpliButton
            /// </summary>
            public Button OrganizeAJOSpliButton
            {
                get
                {
                    if (null == fOrganizeAJOSpliButton)
                    {
                        fOrganizeAJOSpliButton = new Button("OrganizeAJOSpliButton", CommandModuleFoToolBar);
                        fOrganizeAJOSpliButton.UIMap.Scope = UIASeachScope.Children;
                        fOrganizeAJOSpliButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"{7DDC1264-7E4D-4F74-BBC0-D191987C8D0F}");
                        fOrganizeAJOSpliButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AJOSplitButton");
                        fOrganizeAJOSpliButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Organize");
                    }

                    return fOrganizeAJOSpliButton;
                }
            }

            /// <summary>
            /// Gets Reference to NewfolderAJOSplButton
            /// </summary>
            public Button NewfolderAJOSplButton
            {
                get
                {
                    if (null == fNewfolderAJOSplButton)
                    {
                        fNewfolderAJOSplButton = new Button("NewfolderAJOSplButton", CommandModuleFoToolBar);
                        fNewfolderAJOSplButton.UIMap.Scope = UIASeachScope.Children;
                        fNewfolderAJOSplButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"{E44616AD-6DF1-4B94-85A4-E465AE8A19DB}");
                        fNewfolderAJOSplButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AJOSplitButton");
                        fNewfolderAJOSplButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"New folder");
                    }

                    return fNewfolderAJOSplButton;
                }
            }

            /// <summary>
            /// Gets Reference to FolderLayoutPanPane
            /// </summary>
            public Pane FolderLayoutPanPane
            {
                get
                {
                    if (null == fFolderLayoutPanPane)
                    {
                        fFolderLayoutPanPane = new Pane("FolderLayoutPanPane", ExplorerPaneHWNPane);
                        fFolderLayoutPanPane.UIMap.Scope = UIASeachScope.Children;
                        fFolderLayoutPanPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FolderLayoutContainer");
                        fFolderLayoutPanPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Element");
                        fFolderLayoutPanPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Folder Layout Pane");
                    }

                    return fFolderLayoutPanPane;
                }
            }

            /// <summary>
            /// Gets Reference to ControlHostPropPane
            /// </summary>
            public Pane ControlHostPropPane
            {
                get
                {
                    if (null == fControlHostPropPane)
                    {
                        fControlHostPropPane = new Pane("ControlHostPropPane", FolderLayoutPanPane);
                        fControlHostPropPane.UIMap.Scope = UIASeachScope.Children;
                        fControlHostPropPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ProperTreeHost");
                        fControlHostPropPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProperTreeHost");
                        fControlHostPropPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Control Host");
                    }

                    return fControlHostPropPane;
                }
            }

            /// <summary>
            /// Gets Reference to NamespaceTreeCoTree
            /// </summary>
            public Tree NamespaceTreeCoTree
            {
                get
                {
                    if (null == fNamespaceTreeCoTree)
                    {
                        fNamespaceTreeCoTree = new Tree("NamespaceTreeCoTree", ControlHostPropPane);
                        fNamespaceTreeCoTree.UIMap.Scope = UIASeachScope.Children;
                        fNamespaceTreeCoTree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"100");
                        fNamespaceTreeCoTree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"SysTreeView32");
                        fNamespaceTreeCoTree.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Namespace Tree Control");
                    }

                    return fNamespaceTreeCoTree;
                }
            }

            /// <summary>
            /// Gets Reference to QuickaccessTreeItem
            /// </summary>
            public TreeItem QuickaccessTreeItem
            {
                get
                {
                    if (null == fQuickaccessTreeItem)
                    {
                        fQuickaccessTreeItem = new TreeItem("QuickaccessTreeItem", NamespaceTreeCoTree);
                        fQuickaccessTreeItem.UIMap.Scope = UIASeachScope.Children;
                        fQuickaccessTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick access");
                    }

                    return fQuickaccessTreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to DesktopDup0TreeItem
            /// </summary>
            public TreeItem DesktopDup0TreeItem
            {
                get
                {
                    if (null == fDesktopDup0TreeItem)
                    {
                        fDesktopDup0TreeItem = new TreeItem("DesktopDup0TreeItem", NamespaceTreeCoTree);
                        fDesktopDup0TreeItem.UIMap.Scope = UIASeachScope.Children;
                        fDesktopDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Desktop");
                    }

                    return fDesktopDup0TreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to OneDriveTreeItem
            /// </summary>
            public TreeItem OneDriveTreeItem
            {
                get
                {
                    if (null == fOneDriveTreeItem)
                    {
                        fOneDriveTreeItem = new TreeItem("OneDriveTreeItem", DesktopDup0TreeItem);
                        fOneDriveTreeItem.UIMap.Scope = UIASeachScope.Children;
                        fOneDriveTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OneDrive");
                    }

                    return fOneDriveTreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to ThisPCTreeItem
            /// </summary>
            public TreeItem ThisPCTreeItem
            {
                get
                {
                    if (null == fThisPCTreeItem)
                    {
                        fThisPCTreeItem = new TreeItem("ThisPCTreeItem", DesktopDup0TreeItem);
                        fThisPCTreeItem.UIMap.Scope = UIASeachScope.Children;
                        fThisPCTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"This PC");
                    }

                    return fThisPCTreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to DesktopDup1TreeItem
            /// </summary>
            public TreeItem DesktopDup1TreeItem
            {
                get
                {
                    if (null == fDesktopDup1TreeItem)
                    {
                        fDesktopDup1TreeItem = new TreeItem("DesktopDup1TreeItem", ThisPCTreeItem);
                        fDesktopDup1TreeItem.UIMap.Scope = UIASeachScope.Children;
                        fDesktopDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Desktop");
                    }

                    return fDesktopDup1TreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to DocumentsTreeItem
            /// </summary>
            public TreeItem DocumentsTreeItem
            {
                get
                {
                    if (null == fDocumentsTreeItem)
                    {
                        fDocumentsTreeItem = new TreeItem("DocumentsTreeItem", ThisPCTreeItem);
                        fDocumentsTreeItem.UIMap.Scope = UIASeachScope.Children;
                        fDocumentsTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Documents");
                    }

                    return fDocumentsTreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to DownloadsTreeItem
            /// </summary>
            public TreeItem DownloadsTreeItem
            {
                get
                {
                    if (null == fDownloadsTreeItem)
                    {
                        fDownloadsTreeItem = new TreeItem("DownloadsTreeItem", ThisPCTreeItem);
                        fDownloadsTreeItem.UIMap.Scope = UIASeachScope.Children;
                        fDownloadsTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Downloads");
                    }

                    return fDownloadsTreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to MusicTreeItem
            /// </summary>
            public TreeItem MusicTreeItem
            {
                get
                {
                    if (null == fMusicTreeItem)
                    {
                        fMusicTreeItem = new TreeItem("MusicTreeItem", ThisPCTreeItem);
                        fMusicTreeItem.UIMap.Scope = UIASeachScope.Children;
                        fMusicTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Music");
                    }

                    return fMusicTreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to PicturesTreeItem
            /// </summary>
            public TreeItem PicturesTreeItem
            {
                get
                {
                    if (null == fPicturesTreeItem)
                    {
                        fPicturesTreeItem = new TreeItem("PicturesTreeItem", ThisPCTreeItem);
                        fPicturesTreeItem.UIMap.Scope = UIASeachScope.Children;
                        fPicturesTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Pictures");
                    }

                    return fPicturesTreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to VideosTreeItem
            /// </summary>
            public TreeItem VideosTreeItem
            {
                get
                {
                    if (null == fVideosTreeItem)
                    {
                        fVideosTreeItem = new TreeItem("VideosTreeItem", ThisPCTreeItem);
                        fVideosTreeItem.UIMap.Scope = UIASeachScope.Children;
                        fVideosTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Videos");
                    }

                    return fVideosTreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to LocalDiskCTreeItem
            /// </summary>
            public TreeItem LocalDiskCTreeItem
            {
                get
                {
                    if (null == fLocalDiskCTreeItem)
                    {
                        fLocalDiskCTreeItem = new TreeItem("LocalDiskCTreeItem", ThisPCTreeItem);
                        fLocalDiskCTreeItem.UIMap.Scope = UIASeachScope.Children;
                        fLocalDiskCTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Local Disk (C:)");
                    }

                    return fLocalDiskCTreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to LocalDiskDTreeItem
            /// </summary>
            public TreeItem LocalDiskDTreeItem
            {
                get
                {
                    if (null == fLocalDiskDTreeItem)
                    {
                        fLocalDiskDTreeItem = new TreeItem("LocalDiskDTreeItem", ThisPCTreeItem);
                        fLocalDiskDTreeItem.UIMap.Scope = UIASeachScope.Children;
                        fLocalDiskDTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Local Disk (D:)");
                    }

                    return fLocalDiskDTreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to NetworkTreeItem
            /// </summary>
            public TreeItem NetworkTreeItem
            {
                get
                {
                    if (null == fNetworkTreeItem)
                    {
                        fNetworkTreeItem = new TreeItem("NetworkTreeItem", DesktopDup0TreeItem);
                        fNetworkTreeItem.UIMap.Scope = UIASeachScope.Children;
                        fNetworkTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network");
                    }

                    return fNetworkTreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to ShellFolderViewPane
            /// </summary>
            public Pane ShellFolderViewPane
            {
                get
                {
                    if (null == fShellFolderViewPane)
                    {
                        fShellFolderViewPane = new Pane("ShellFolderViewPane", FolderLayoutPanPane);
                        fShellFolderViewPane.UIMap.Scope = UIASeachScope.Children;
                        fShellFolderViewPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"listview");
                        fShellFolderViewPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"DUIListView");
                        fShellFolderViewPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Shell Folder View");
                    }

                    return fShellFolderViewPane;
                }
            }

            /// <summary>
            /// Gets Reference to ItemsViewUIItemList
            /// </summary>
            public List ItemsViewUIItemList
            {
                get
                {
                    if (null == fItemsViewUIItemList)
                    {
                        fItemsViewUIItemList = new List("ItemsViewUIItemList", ShellFolderViewPane);
                        fItemsViewUIItemList.UIMap.Scope = UIASeachScope.Children;
                        fItemsViewUIItemList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItemsView");
                        fItemsViewUIItemList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Items View");
                    }

                    return fItemsViewUIItemList;
                }
            }

            /// <summary>
            /// Gets Reference to HeaderUIViewHeader
            /// </summary>
            public Header HeaderUIViewHeader
            {
                get
                {
                    if (null == fHeaderUIViewHeader)
                    {
                        fHeaderUIViewHeader = new Header("HeaderUIViewHeader", ItemsViewUIItemList);
                        fHeaderUIViewHeader.UIMap.Scope = UIASeachScope.Children;
                        fHeaderUIViewHeader.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIViewHeader");
                        fHeaderUIViewHeader.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Header");
                    }

                    return fHeaderUIViewHeader;
                }
            }

            /// <summary>
            /// Gets Reference to NameUIColumnHeaSplitButton
            /// </summary>
            public SplitButton NameUIColumnHeaSplitButton
            {
                get
                {
                    if (null == fNameUIColumnHeaSplitButton)
                    {
                        fNameUIColumnHeaSplitButton = new SplitButton("NameUIColumnHeaSplitButton", HeaderUIViewHeader);
                        fNameUIColumnHeaSplitButton.UIMap.Scope = UIASeachScope.Children;
                        fNameUIColumnHeaSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                        fNameUIColumnHeaSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIColumnHeader");
                        fNameUIColumnHeaSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                    }

                    return fNameUIColumnHeaSplitButton;
                }
            }

            /// <summary>
            /// Gets Reference to FilterdropdownBDup0Button
            /// </summary>
            public Button FilterdropdownBDup0Button
            {
                get
                {
                    if (null == fFilterdropdownBDup0Button)
                    {
                        fFilterdropdownBDup0Button = new Button("FilterdropdownBDup0Button", NameUIColumnHeaSplitButton);
                        fFilterdropdownBDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fFilterdropdownBDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                        fFilterdropdownBDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fFilterdropdownBDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Filter dropdown");
                    }

                    return fFilterdropdownBDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to DatemodifiedUICSplitButton
            /// </summary>
            public SplitButton DatemodifiedUICSplitButton
            {
                get
                {
                    if (null == fDatemodifiedUICSplitButton)
                    {
                        fDatemodifiedUICSplitButton = new SplitButton("DatemodifiedUICSplitButton", HeaderUIViewHeader);
                        fDatemodifiedUICSplitButton.UIMap.Scope = UIASeachScope.Children;
                        fDatemodifiedUICSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.DateModified");
                        fDatemodifiedUICSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIColumnHeader");
                        fDatemodifiedUICSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Date modified");
                    }

                    return fDatemodifiedUICSplitButton;
                }
            }

            /// <summary>
            /// Gets Reference to FilterdropdownBDup1Button
            /// </summary>
            public Button FilterdropdownBDup1Button
            {
                get
                {
                    if (null == fFilterdropdownBDup1Button)
                    {
                        fFilterdropdownBDup1Button = new Button("FilterdropdownBDup1Button", DatemodifiedUICSplitButton);
                        fFilterdropdownBDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fFilterdropdownBDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                        fFilterdropdownBDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fFilterdropdownBDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Filter dropdown");
                    }

                    return fFilterdropdownBDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to TypeUIColumnHeaSplitButton
            /// </summary>
            public SplitButton TypeUIColumnHeaSplitButton
            {
                get
                {
                    if (null == fTypeUIColumnHeaSplitButton)
                    {
                        fTypeUIColumnHeaSplitButton = new SplitButton("TypeUIColumnHeaSplitButton", HeaderUIViewHeader);
                        fTypeUIColumnHeaSplitButton.UIMap.Scope = UIASeachScope.Children;
                        fTypeUIColumnHeaSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                        fTypeUIColumnHeaSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIColumnHeader");
                        fTypeUIColumnHeaSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                    }

                    return fTypeUIColumnHeaSplitButton;
                }
            }

            /// <summary>
            /// Gets Reference to FilterdropdownBDup2Button
            /// </summary>
            public Button FilterdropdownBDup2Button
            {
                get
                {
                    if (null == fFilterdropdownBDup2Button)
                    {
                        fFilterdropdownBDup2Button = new Button("FilterdropdownBDup2Button", TypeUIColumnHeaSplitButton);
                        fFilterdropdownBDup2Button.UIMap.Scope = UIASeachScope.Children;
                        fFilterdropdownBDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                        fFilterdropdownBDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fFilterdropdownBDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Filter dropdown");
                    }

                    return fFilterdropdownBDup2Button;
                }
            }

            /// <summary>
            /// Gets Reference to SizeUIColumnHeaSplitButton
            /// </summary>
            public SplitButton SizeUIColumnHeaSplitButton
            {
                get
                {
                    if (null == fSizeUIColumnHeaSplitButton)
                    {
                        fSizeUIColumnHeaSplitButton = new SplitButton("SizeUIColumnHeaSplitButton", HeaderUIViewHeader);
                        fSizeUIColumnHeaSplitButton.UIMap.Scope = UIASeachScope.Children;
                        fSizeUIColumnHeaSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.Size");
                        fSizeUIColumnHeaSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIColumnHeader");
                        fSizeUIColumnHeaSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Size");
                    }

                    return fSizeUIColumnHeaSplitButton;
                }
            }

            /// <summary>
            /// Gets Reference to FilterdropdownBDup3Button
            /// </summary>
            public Button FilterdropdownBDup3Button
            {
                get
                {
                    if (null == fFilterdropdownBDup3Button)
                    {
                        fFilterdropdownBDup3Button = new Button("FilterdropdownBDup3Button", SizeUIColumnHeaSplitButton);
                        fFilterdropdownBDup3Button.UIMap.Scope = UIASeachScope.Children;
                        fFilterdropdownBDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                        fFilterdropdownBDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fFilterdropdownBDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Filter dropdown");
                    }

                    return fFilterdropdownBDup3Button;
                }
            }

            /// <summary>
            /// Gets Reference to CRUIItem0ListItem
            /// </summary>
            public ListItem CRUIItem0ListItem
            {
                get
                {
                    if (null == fCRUIItem0ListItem)
                    {
                        fCRUIItem0ListItem = new ListItem("CRUIItem0ListItem", ItemsViewUIItemList);
                        fCRUIItem0ListItem.UIMap.Scope = UIASeachScope.Children;
                        fCRUIItem0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0");
                        fCRUIItem0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                        fCRUIItem0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"CR");
                    }

                    return fCRUIItem0ListItem;
                }
            }

            /// <summary>
            /// Gets Reference to UIDup0Image
            /// </summary>
            public Image UIDup0Image
            {
                get
                {
                    if (null == fUIDup0Image)
                    {
                        fUIDup0Image = new Image("UIDup0Image", CRUIItem0ListItem);
                        fUIDup0Image.UIMap.Scope = UIASeachScope.Children;
                        fUIDup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                    }

                    return fUIDup0Image;
                }
            }

            /// <summary>
            /// Gets Reference to NameUIPropertySDup0Edit
            /// </summary>
            public Edit NameUIPropertySDup0Edit
            {
                get
                {
                    if (null == fNameUIPropertySDup0Edit)
                    {
                        fNameUIPropertySDup0Edit = new Edit("NameUIPropertySDup0Edit", CRUIItem0ListItem);
                        fNameUIPropertySDup0Edit.UIMap.Scope = UIASeachScope.Children;
                        fNameUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                        fNameUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fNameUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                    }

                    return fNameUIPropertySDup0Edit;
                }
            }

            /// <summary>
            /// Gets Reference to DatemodifiedUIPDup0Edit
            /// </summary>
            public Edit DatemodifiedUIPDup0Edit
            {
                get
                {
                    if (null == fDatemodifiedUIPDup0Edit)
                    {
                        fDatemodifiedUIPDup0Edit = new Edit("DatemodifiedUIPDup0Edit", CRUIItem0ListItem);
                        fDatemodifiedUIPDup0Edit.UIMap.Scope = UIASeachScope.Children;
                        fDatemodifiedUIPDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.DateModified");
                        fDatemodifiedUIPDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fDatemodifiedUIPDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Date modified");
                    }

                    return fDatemodifiedUIPDup0Edit;
                }
            }

            /// <summary>
            /// Gets Reference to TypeUIPropertySDup0Edit
            /// </summary>
            public Edit TypeUIPropertySDup0Edit
            {
                get
                {
                    if (null == fTypeUIPropertySDup0Edit)
                    {
                        fTypeUIPropertySDup0Edit = new Edit("TypeUIPropertySDup0Edit", CRUIItem0ListItem);
                        fTypeUIPropertySDup0Edit.UIMap.Scope = UIASeachScope.Children;
                        fTypeUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                        fTypeUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fTypeUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                    }

                    return fTypeUIPropertySDup0Edit;
                }
            }

            /// <summary>
            /// Gets Reference to SizeUIPropertySDup0Edit
            /// </summary>
            public Edit SizeUIPropertySDup0Edit
            {
                get
                {
                    if (null == fSizeUIPropertySDup0Edit)
                    {
                        fSizeUIPropertySDup0Edit = new Edit("SizeUIPropertySDup0Edit", CRUIItem0ListItem);
                        fSizeUIPropertySDup0Edit.UIMap.Scope = UIASeachScope.Children;
                        fSizeUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.Size");
                        fSizeUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fSizeUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Size");
                    }

                    return fSizeUIPropertySDup0Edit;
                }
            }

            /// <summary>
            /// Gets Reference to EnhancementUIItListItem
            /// </summary>
            public ListItem EnhancementUIItListItem
            {
                get
                {
                    if (null == fEnhancementUIItListItem)
                    {
                        fEnhancementUIItListItem = new ListItem("EnhancementUIItListItem", ItemsViewUIItemList);
                        fEnhancementUIItListItem.UIMap.Scope = UIASeachScope.Children;
                        fEnhancementUIItListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1");
                        fEnhancementUIItListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                        fEnhancementUIItListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enhancement");
                    }

                    return fEnhancementUIItListItem;
                }
            }

            /// <summary>
            /// Gets Reference to UIDup1Image
            /// </summary>
            public Image UIDup1Image
            {
                get
                {
                    if (null == fUIDup1Image)
                    {
                        fUIDup1Image = new Image("UIDup1Image", EnhancementUIItListItem);
                        fUIDup1Image.UIMap.Scope = UIASeachScope.Children;
                        fUIDup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                    }

                    return fUIDup1Image;
                }
            }

            /// <summary>
            /// Gets Reference to NameUIPropertySDup1Edit
            /// </summary>
            public Edit NameUIPropertySDup1Edit
            {
                get
                {
                    if (null == fNameUIPropertySDup1Edit)
                    {
                        fNameUIPropertySDup1Edit = new Edit("NameUIPropertySDup1Edit", EnhancementUIItListItem);
                        fNameUIPropertySDup1Edit.UIMap.Scope = UIASeachScope.Children;
                        fNameUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                        fNameUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fNameUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                    }

                    return fNameUIPropertySDup1Edit;
                }
            }

            /// <summary>
            /// Gets Reference to DatemodifiedUIPDup1Edit
            /// </summary>
            public Edit DatemodifiedUIPDup1Edit
            {
                get
                {
                    if (null == fDatemodifiedUIPDup1Edit)
                    {
                        fDatemodifiedUIPDup1Edit = new Edit("DatemodifiedUIPDup1Edit", EnhancementUIItListItem);
                        fDatemodifiedUIPDup1Edit.UIMap.Scope = UIASeachScope.Children;
                        fDatemodifiedUIPDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.DateModified");
                        fDatemodifiedUIPDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fDatemodifiedUIPDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Date modified");
                    }

                    return fDatemodifiedUIPDup1Edit;
                }
            }

            /// <summary>
            /// Gets Reference to TypeUIPropertySDup1Edit
            /// </summary>
            public Edit TypeUIPropertySDup1Edit
            {
                get
                {
                    if (null == fTypeUIPropertySDup1Edit)
                    {
                        fTypeUIPropertySDup1Edit = new Edit("TypeUIPropertySDup1Edit", EnhancementUIItListItem);
                        fTypeUIPropertySDup1Edit.UIMap.Scope = UIASeachScope.Children;
                        fTypeUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                        fTypeUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fTypeUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                    }

                    return fTypeUIPropertySDup1Edit;
                }
            }

            /// <summary>
            /// Gets Reference to SizeUIPropertySDup1Edit
            /// </summary>
            public Edit SizeUIPropertySDup1Edit
            {
                get
                {
                    if (null == fSizeUIPropertySDup1Edit)
                    {
                        fSizeUIPropertySDup1Edit = new Edit("SizeUIPropertySDup1Edit", EnhancementUIItListItem);
                        fSizeUIPropertySDup1Edit.UIMap.Scope = UIASeachScope.Children;
                        fSizeUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.Size");
                        fSizeUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fSizeUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Size");
                    }

                    return fSizeUIPropertySDup1Edit;
                }
            }

            /// <summary>
            /// Gets Reference to JediSpyLiteUIItListItem
            /// </summary>
            public ListItem JediSpyLiteUIItListItem
            {
                get
                {
                    if (null == fJediSpyLiteUIItListItem)
                    {
                        fJediSpyLiteUIItListItem = new ListItem("JediSpyLiteUIItListItem", ItemsViewUIItemList);
                        fJediSpyLiteUIItListItem.UIMap.Scope = UIASeachScope.Children;
                        fJediSpyLiteUIItListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2");
                        fJediSpyLiteUIItListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                        fJediSpyLiteUIItListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"JediSpy Lite");
                    }

                    return fJediSpyLiteUIItListItem;
                }
            }

            /// <summary>
            /// Gets Reference to UIDup2Image
            /// </summary>
            public Image UIDup2Image
            {
                get
                {
                    if (null == fUIDup2Image)
                    {
                        fUIDup2Image = new Image("UIDup2Image", JediSpyLiteUIItListItem);
                        fUIDup2Image.UIMap.Scope = UIASeachScope.Children;
                        fUIDup2Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                    }

                    return fUIDup2Image;
                }
            }

            /// <summary>
            /// Gets Reference to NameUIPropertySDup2Edit
            /// </summary>
            public Edit NameUIPropertySDup2Edit
            {
                get
                {
                    if (null == fNameUIPropertySDup2Edit)
                    {
                        fNameUIPropertySDup2Edit = new Edit("NameUIPropertySDup2Edit", JediSpyLiteUIItListItem);
                        fNameUIPropertySDup2Edit.UIMap.Scope = UIASeachScope.Children;
                        fNameUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                        fNameUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fNameUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                    }

                    return fNameUIPropertySDup2Edit;
                }
            }

            /// <summary>
            /// Gets Reference to DatemodifiedUIPDup2Edit
            /// </summary>
            public Edit DatemodifiedUIPDup2Edit
            {
                get
                {
                    if (null == fDatemodifiedUIPDup2Edit)
                    {
                        fDatemodifiedUIPDup2Edit = new Edit("DatemodifiedUIPDup2Edit", JediSpyLiteUIItListItem);
                        fDatemodifiedUIPDup2Edit.UIMap.Scope = UIASeachScope.Children;
                        fDatemodifiedUIPDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.DateModified");
                        fDatemodifiedUIPDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fDatemodifiedUIPDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Date modified");
                    }

                    return fDatemodifiedUIPDup2Edit;
                }
            }

            /// <summary>
            /// Gets Reference to TypeUIPropertySDup2Edit
            /// </summary>
            public Edit TypeUIPropertySDup2Edit
            {
                get
                {
                    if (null == fTypeUIPropertySDup2Edit)
                    {
                        fTypeUIPropertySDup2Edit = new Edit("TypeUIPropertySDup2Edit", JediSpyLiteUIItListItem);
                        fTypeUIPropertySDup2Edit.UIMap.Scope = UIASeachScope.Children;
                        fTypeUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                        fTypeUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fTypeUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                    }

                    return fTypeUIPropertySDup2Edit;
                }
            }

            /// <summary>
            /// Gets Reference to SizeUIPropertySDup2Edit
            /// </summary>
            public Edit SizeUIPropertySDup2Edit
            {
                get
                {
                    if (null == fSizeUIPropertySDup2Edit)
                    {
                        fSizeUIPropertySDup2Edit = new Edit("SizeUIPropertySDup2Edit", JediSpyLiteUIItListItem);
                        fSizeUIPropertySDup2Edit.UIMap.Scope = UIASeachScope.Children;
                        fSizeUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.Size");
                        fSizeUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fSizeUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Size");
                    }

                    return fSizeUIPropertySDup2Edit;
                }
            }

            /// <summary>
            /// Gets Reference to NewfolderUIItemListItem
            /// </summary>
            public ListItem NewfolderUIItemListItem
            {
                get
                {
                    if (null == fNewfolderUIItemListItem)
                    {
                        fNewfolderUIItemListItem = new ListItem("NewfolderUIItemListItem", ItemsViewUIItemList);
                        fNewfolderUIItemListItem.UIMap.Scope = UIASeachScope.Children;
                        fNewfolderUIItemListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3");
                        fNewfolderUIItemListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                        fNewfolderUIItemListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"New folder");
                    }

                    return fNewfolderUIItemListItem;
                }
            }

            /// <summary>
            /// Gets Reference to UIDup3Image
            /// </summary>
            public Image UIDup3Image
            {
                get
                {
                    if (null == fUIDup3Image)
                    {
                        fUIDup3Image = new Image("UIDup3Image", NewfolderUIItemListItem);
                        fUIDup3Image.UIMap.Scope = UIASeachScope.Children;
                        fUIDup3Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                    }

                    return fUIDup3Image;
                }
            }

            /// <summary>
            /// Gets Reference to NameUIPropertySDup3Edit
            /// </summary>
            public Edit NameUIPropertySDup3Edit
            {
                get
                {
                    if (null == fNameUIPropertySDup3Edit)
                    {
                        fNameUIPropertySDup3Edit = new Edit("NameUIPropertySDup3Edit", NewfolderUIItemListItem);
                        fNameUIPropertySDup3Edit.UIMap.Scope = UIASeachScope.Children;
                        fNameUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                        fNameUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fNameUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                    }

                    return fNameUIPropertySDup3Edit;
                }
            }

            /// <summary>
            /// Gets Reference to DatemodifiedUIPDup3Edit
            /// </summary>
            public Edit DatemodifiedUIPDup3Edit
            {
                get
                {
                    if (null == fDatemodifiedUIPDup3Edit)
                    {
                        fDatemodifiedUIPDup3Edit = new Edit("DatemodifiedUIPDup3Edit", NewfolderUIItemListItem);
                        fDatemodifiedUIPDup3Edit.UIMap.Scope = UIASeachScope.Children;
                        fDatemodifiedUIPDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.DateModified");
                        fDatemodifiedUIPDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fDatemodifiedUIPDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Date modified");
                    }

                    return fDatemodifiedUIPDup3Edit;
                }
            }

            /// <summary>
            /// Gets Reference to TypeUIPropertySDup3Edit
            /// </summary>
            public Edit TypeUIPropertySDup3Edit
            {
                get
                {
                    if (null == fTypeUIPropertySDup3Edit)
                    {
                        fTypeUIPropertySDup3Edit = new Edit("TypeUIPropertySDup3Edit", NewfolderUIItemListItem);
                        fTypeUIPropertySDup3Edit.UIMap.Scope = UIASeachScope.Children;
                        fTypeUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                        fTypeUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fTypeUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                    }

                    return fTypeUIPropertySDup3Edit;
                }
            }

            /// <summary>
            /// Gets Reference to SizeUIPropertySDup3Edit
            /// </summary>
            public Edit SizeUIPropertySDup3Edit
            {
                get
                {
                    if (null == fSizeUIPropertySDup3Edit)
                    {
                        fSizeUIPropertySDup3Edit = new Edit("SizeUIPropertySDup3Edit", NewfolderUIItemListItem);
                        fSizeUIPropertySDup3Edit.UIMap.Scope = UIASeachScope.Children;
                        fSizeUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.Size");
                        fSizeUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fSizeUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Size");
                    }

                    return fSizeUIPropertySDup3Edit;
                }
            }

            /// <summary>
            /// Gets Reference to Newfolder2UIIteListItem
            /// </summary>
            public ListItem Newfolder2UIIteListItem
            {
                get
                {
                    if (null == fNewfolder2UIIteListItem)
                    {
                        fNewfolder2UIIteListItem = new ListItem("Newfolder2UIIteListItem", ItemsViewUIItemList);
                        fNewfolder2UIIteListItem.UIMap.Scope = UIASeachScope.Children;
                        fNewfolder2UIIteListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4");
                        fNewfolder2UIIteListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                        fNewfolder2UIIteListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"New folder (2)");
                    }

                    return fNewfolder2UIIteListItem;
                }
            }

            /// <summary>
            /// Gets Reference to UIDup4Image
            /// </summary>
            public Image UIDup4Image
            {
                get
                {
                    if (null == fUIDup4Image)
                    {
                        fUIDup4Image = new Image("UIDup4Image", Newfolder2UIIteListItem);
                        fUIDup4Image.UIMap.Scope = UIASeachScope.Children;
                        fUIDup4Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                    }

                    return fUIDup4Image;
                }
            }

            /// <summary>
            /// Gets Reference to NameUIPropertySDup4Edit
            /// </summary>
            public Edit NameUIPropertySDup4Edit
            {
                get
                {
                    if (null == fNameUIPropertySDup4Edit)
                    {
                        fNameUIPropertySDup4Edit = new Edit("NameUIPropertySDup4Edit", Newfolder2UIIteListItem);
                        fNameUIPropertySDup4Edit.UIMap.Scope = UIASeachScope.Children;
                        fNameUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                        fNameUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fNameUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                    }

                    return fNameUIPropertySDup4Edit;
                }
            }

            /// <summary>
            /// Gets Reference to DatemodifiedUIPDup4Edit
            /// </summary>
            public Edit DatemodifiedUIPDup4Edit
            {
                get
                {
                    if (null == fDatemodifiedUIPDup4Edit)
                    {
                        fDatemodifiedUIPDup4Edit = new Edit("DatemodifiedUIPDup4Edit", Newfolder2UIIteListItem);
                        fDatemodifiedUIPDup4Edit.UIMap.Scope = UIASeachScope.Children;
                        fDatemodifiedUIPDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.DateModified");
                        fDatemodifiedUIPDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fDatemodifiedUIPDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Date modified");
                    }

                    return fDatemodifiedUIPDup4Edit;
                }
            }

            /// <summary>
            /// Gets Reference to TypeUIPropertySDup4Edit
            /// </summary>
            public Edit TypeUIPropertySDup4Edit
            {
                get
                {
                    if (null == fTypeUIPropertySDup4Edit)
                    {
                        fTypeUIPropertySDup4Edit = new Edit("TypeUIPropertySDup4Edit", Newfolder2UIIteListItem);
                        fTypeUIPropertySDup4Edit.UIMap.Scope = UIASeachScope.Children;
                        fTypeUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                        fTypeUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fTypeUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                    }

                    return fTypeUIPropertySDup4Edit;
                }
            }

            /// <summary>
            /// Gets Reference to SizeUIPropertySDup4Edit
            /// </summary>
            public Edit SizeUIPropertySDup4Edit
            {
                get
                {
                    if (null == fSizeUIPropertySDup4Edit)
                    {
                        fSizeUIPropertySDup4Edit = new Edit("SizeUIPropertySDup4Edit", Newfolder2UIIteListItem);
                        fSizeUIPropertySDup4Edit.UIMap.Scope = UIASeachScope.Children;
                        fSizeUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.Size");
                        fSizeUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fSizeUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Size");
                    }

                    return fSizeUIPropertySDup4Edit;
                }
            }

            /// <summary>
            /// Gets Reference to PRUIItem5ListItem
            /// </summary>
            public ListItem PRUIItem5ListItem
            {
                get
                {
                    if (null == fPRUIItem5ListItem)
                    {
                        fPRUIItem5ListItem = new ListItem("PRUIItem5ListItem", ItemsViewUIItemList);
                        fPRUIItem5ListItem.UIMap.Scope = UIASeachScope.Children;
                        fPRUIItem5ListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5");
                        fPRUIItem5ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                        fPRUIItem5ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"PR");
                    }

                    return fPRUIItem5ListItem;
                }
            }

            /// <summary>
            /// Gets Reference to UIDup5Image
            /// </summary>
            public Image UIDup5Image
            {
                get
                {
                    if (null == fUIDup5Image)
                    {
                        fUIDup5Image = new Image("UIDup5Image", PRUIItem5ListItem);
                        fUIDup5Image.UIMap.Scope = UIASeachScope.Children;
                        fUIDup5Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                    }

                    return fUIDup5Image;
                }
            }

            /// <summary>
            /// Gets Reference to NameUIPropertySDup5Edit
            /// </summary>
            public Edit NameUIPropertySDup5Edit
            {
                get
                {
                    if (null == fNameUIPropertySDup5Edit)
                    {
                        fNameUIPropertySDup5Edit = new Edit("NameUIPropertySDup5Edit", PRUIItem5ListItem);
                        fNameUIPropertySDup5Edit.UIMap.Scope = UIASeachScope.Children;
                        fNameUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                        fNameUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fNameUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                    }

                    return fNameUIPropertySDup5Edit;
                }
            }

            /// <summary>
            /// Gets Reference to DatemodifiedUIPDup5Edit
            /// </summary>
            public Edit DatemodifiedUIPDup5Edit
            {
                get
                {
                    if (null == fDatemodifiedUIPDup5Edit)
                    {
                        fDatemodifiedUIPDup5Edit = new Edit("DatemodifiedUIPDup5Edit", PRUIItem5ListItem);
                        fDatemodifiedUIPDup5Edit.UIMap.Scope = UIASeachScope.Children;
                        fDatemodifiedUIPDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.DateModified");
                        fDatemodifiedUIPDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fDatemodifiedUIPDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Date modified");
                    }

                    return fDatemodifiedUIPDup5Edit;
                }
            }

            /// <summary>
            /// Gets Reference to TypeUIPropertySDup5Edit
            /// </summary>
            public Edit TypeUIPropertySDup5Edit
            {
                get
                {
                    if (null == fTypeUIPropertySDup5Edit)
                    {
                        fTypeUIPropertySDup5Edit = new Edit("TypeUIPropertySDup5Edit", PRUIItem5ListItem);
                        fTypeUIPropertySDup5Edit.UIMap.Scope = UIASeachScope.Children;
                        fTypeUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                        fTypeUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fTypeUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                    }

                    return fTypeUIPropertySDup5Edit;
                }
            }

            /// <summary>
            /// Gets Reference to SizeUIPropertySDup5Edit
            /// </summary>
            public Edit SizeUIPropertySDup5Edit
            {
                get
                {
                    if (null == fSizeUIPropertySDup5Edit)
                    {
                        fSizeUIPropertySDup5Edit = new Edit("SizeUIPropertySDup5Edit", PRUIItem5ListItem);
                        fSizeUIPropertySDup5Edit.UIMap.Scope = UIASeachScope.Children;
                        fSizeUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.Size");
                        fSizeUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fSizeUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Size");
                    }

                    return fSizeUIPropertySDup5Edit;
                }
            }

            /// <summary>
            /// Gets Reference to VisorUIItem6ListItem
            /// </summary>
            public ListItem VisorUIItem6ListItem
            {
                get
                {
                    if (null == fVisorUIItem6ListItem)
                    {
                        fVisorUIItem6ListItem = new ListItem("VisorUIItem6ListItem", ItemsViewUIItemList);
                        fVisorUIItem6ListItem.UIMap.Scope = UIASeachScope.Children;
                        fVisorUIItem6ListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6");
                        fVisorUIItem6ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                        fVisorUIItem6ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Visor");
                    }

                    return fVisorUIItem6ListItem;
                }
            }

            /// <summary>
            /// Gets Reference to UIDup6Image
            /// </summary>
            public Image UIDup6Image
            {
                get
                {
                    if (null == fUIDup6Image)
                    {
                        fUIDup6Image = new Image("UIDup6Image", VisorUIItem6ListItem);
                        fUIDup6Image.UIMap.Scope = UIASeachScope.Children;
                        fUIDup6Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                    }

                    return fUIDup6Image;
                }
            }

            /// <summary>
            /// Gets Reference to NameUIPropertySDup6Edit
            /// </summary>
            public Edit NameUIPropertySDup6Edit
            {
                get
                {
                    if (null == fNameUIPropertySDup6Edit)
                    {
                        fNameUIPropertySDup6Edit = new Edit("NameUIPropertySDup6Edit", VisorUIItem6ListItem);
                        fNameUIPropertySDup6Edit.UIMap.Scope = UIASeachScope.Children;
                        fNameUIPropertySDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                        fNameUIPropertySDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fNameUIPropertySDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                    }

                    return fNameUIPropertySDup6Edit;
                }
            }

            /// <summary>
            /// Gets Reference to DatemodifiedUIPDup6Edit
            /// </summary>
            public Edit DatemodifiedUIPDup6Edit
            {
                get
                {
                    if (null == fDatemodifiedUIPDup6Edit)
                    {
                        fDatemodifiedUIPDup6Edit = new Edit("DatemodifiedUIPDup6Edit", VisorUIItem6ListItem);
                        fDatemodifiedUIPDup6Edit.UIMap.Scope = UIASeachScope.Children;
                        fDatemodifiedUIPDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.DateModified");
                        fDatemodifiedUIPDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fDatemodifiedUIPDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Date modified");
                    }

                    return fDatemodifiedUIPDup6Edit;
                }
            }

            /// <summary>
            /// Gets Reference to TypeUIPropertySDup6Edit
            /// </summary>
            public Edit TypeUIPropertySDup6Edit
            {
                get
                {
                    if (null == fTypeUIPropertySDup6Edit)
                    {
                        fTypeUIPropertySDup6Edit = new Edit("TypeUIPropertySDup6Edit", VisorUIItem6ListItem);
                        fTypeUIPropertySDup6Edit.UIMap.Scope = UIASeachScope.Children;
                        fTypeUIPropertySDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                        fTypeUIPropertySDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fTypeUIPropertySDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                    }

                    return fTypeUIPropertySDup6Edit;
                }
            }

            /// <summary>
            /// Gets Reference to SizeUIPropertySDup6Edit
            /// </summary>
            public Edit SizeUIPropertySDup6Edit
            {
                get
                {
                    if (null == fSizeUIPropertySDup6Edit)
                    {
                        fSizeUIPropertySDup6Edit = new Edit("SizeUIPropertySDup6Edit", VisorUIItem6ListItem);
                        fSizeUIPropertySDup6Edit.UIMap.Scope = UIASeachScope.Children;
                        fSizeUIPropertySDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.Size");
                        fSizeUIPropertySDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fSizeUIPropertySDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Size");
                    }

                    return fSizeUIPropertySDup6Edit;
                }
            }

            /// <summary>
            /// Gets Reference to AllAddressBooksListItem
            /// </summary>
            public ListItem AllAddressBooksListItem
            {
                get
                {
                    if (null == fAllAddressBooksListItem)
                    {
                        fAllAddressBooksListItem = new ListItem("AllAddressBooksListItem", ItemsViewUIItemList);
                        fAllAddressBooksListItem.UIMap.Scope = UIASeachScope.Children;
                        fAllAddressBooksListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7");
                        fAllAddressBooksListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                        fAllAddressBooksListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"AllAddressBooks");
                    }

                    return fAllAddressBooksListItem;
                }
            }

            /// <summary>
            /// Gets Reference to UIDup7Image
            /// </summary>
            public Image UIDup7Image
            {
                get
                {
                    if (null == fUIDup7Image)
                    {
                        fUIDup7Image = new Image("UIDup7Image", AllAddressBooksListItem);
                        fUIDup7Image.UIMap.Scope = UIASeachScope.Children;
                        fUIDup7Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                    }

                    return fUIDup7Image;
                }
            }

            /// <summary>
            /// Gets Reference to NameUIPropertySDup7Edit
            /// </summary>
            public Edit NameUIPropertySDup7Edit
            {
                get
                {
                    if (null == fNameUIPropertySDup7Edit)
                    {
                        fNameUIPropertySDup7Edit = new Edit("NameUIPropertySDup7Edit", AllAddressBooksListItem);
                        fNameUIPropertySDup7Edit.UIMap.Scope = UIASeachScope.Children;
                        fNameUIPropertySDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                        fNameUIPropertySDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fNameUIPropertySDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                    }

                    return fNameUIPropertySDup7Edit;
                }
            }

            /// <summary>
            /// Gets Reference to DatemodifiedUIPDup7Edit
            /// </summary>
            public Edit DatemodifiedUIPDup7Edit
            {
                get
                {
                    if (null == fDatemodifiedUIPDup7Edit)
                    {
                        fDatemodifiedUIPDup7Edit = new Edit("DatemodifiedUIPDup7Edit", AllAddressBooksListItem);
                        fDatemodifiedUIPDup7Edit.UIMap.Scope = UIASeachScope.Children;
                        fDatemodifiedUIPDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.DateModified");
                        fDatemodifiedUIPDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fDatemodifiedUIPDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Date modified");
                    }

                    return fDatemodifiedUIPDup7Edit;
                }
            }

            /// <summary>
            /// Gets Reference to TypeUIPropertySDup7Edit
            /// </summary>
            public Edit TypeUIPropertySDup7Edit
            {
                get
                {
                    if (null == fTypeUIPropertySDup7Edit)
                    {
                        fTypeUIPropertySDup7Edit = new Edit("TypeUIPropertySDup7Edit", AllAddressBooksListItem);
                        fTypeUIPropertySDup7Edit.UIMap.Scope = UIASeachScope.Children;
                        fTypeUIPropertySDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                        fTypeUIPropertySDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fTypeUIPropertySDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                    }

                    return fTypeUIPropertySDup7Edit;
                }
            }

            /// <summary>
            /// Gets Reference to SizeUIPropertySDup7Edit
            /// </summary>
            public Edit SizeUIPropertySDup7Edit
            {
                get
                {
                    if (null == fSizeUIPropertySDup7Edit)
                    {
                        fSizeUIPropertySDup7Edit = new Edit("SizeUIPropertySDup7Edit", AllAddressBooksListItem);
                        fSizeUIPropertySDup7Edit.UIMap.Scope = UIASeachScope.Children;
                        fSizeUIPropertySDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.Size");
                        fSizeUIPropertySDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                        fSizeUIPropertySDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Size");
                    }

                    return fSizeUIPropertySDup7Edit;
                }
            }

            /// <summary>
            /// Gets Reference to ApplicationContTree
            /// </summary>
            public Tree ApplicationContTree
            {
                get
                {
                    if (null == fApplicationContTree)
                    {
                        fApplicationContTree = new Tree("ApplicationContTree", FolderLayoutPanPane);
                        fApplicationContTree.UIMap.Scope = UIASeachScope.Children;
                        fApplicationContTree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AppControlsModuleInner");
                        fApplicationContTree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AppControlsModuleInner");
                        fApplicationContTree.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Application Controls");
                    }

                    return fApplicationContTree;
                }
            }

            /// <summary>
            /// Gets Reference to FilenameStatic1Text
            /// </summary>
            public Text FilenameStatic1Text
            {
                get
                {
                    if (null == fFilenameStatic1Text)
                    {
                        fFilenameStatic1Text = new Text("FilenameStatic1Text", Open32770Window);
                        fFilenameStatic1Text.UIMap.Scope = UIASeachScope.Children;
                        fFilenameStatic1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1090");
                        fFilenameStatic1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                        fFilenameStatic1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File name:");
                    }

                    return fFilenameStatic1Text;
                }
            }

            /// <summary>
            /// Gets Reference to FilenameComboBoPane
            /// </summary>
            public Pane FilenameComboBoPane
            {
                get
                {
                    if (null == fFilenameComboBoPane)
                    {
                        fFilenameComboBoPane = new Pane("FilenameComboBoPane", Open32770Window);
                        fFilenameComboBoPane.UIMap.Scope = UIASeachScope.Children;
                        fFilenameComboBoPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1148");
                        fFilenameComboBoPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBoxEx32");
                        fFilenameComboBoPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File name:");
                    }

                    return fFilenameComboBoPane;
                }
            }

            /// <summary>
            /// Gets Reference to FilenameComboBoComboBox
            /// </summary>
            public ComboBox FilenameComboBoComboBox
            {
                get
                {
                    if (null == fFilenameComboBoComboBox)
                    {
                        fFilenameComboBoComboBox = new ComboBox("FilenameComboBoComboBox", FilenameComboBoPane);
                        fFilenameComboBoComboBox.UIMap.Scope = UIASeachScope.Children;
                        fFilenameComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1148");
                        fFilenameComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                        fFilenameComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File name:");
                    }

                    return fFilenameComboBoComboBox;
                }
            }

            /// <summary>
            /// Gets Reference to FilenameEdit114Edit
            /// </summary>
            public Edit FilenameEdit114Edit
            {
                get
                {
                    if (null == fFilenameEdit114Edit)
                    {
                        fFilenameEdit114Edit = new Edit("FilenameEdit114Edit", FilenameComboBoComboBox);
                        fFilenameEdit114Edit.UIMap.Scope = UIASeachScope.Children;
                        fFilenameEdit114Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1148");
                        fFilenameEdit114Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Edit");
                        fFilenameEdit114Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File name:");
                    }

                    return fFilenameEdit114Edit;
                }
            }

            /// <summary>
            /// Gets Reference to FilenameComboLBList
            /// </summary>
            public List FilenameComboLBList
            {
                get
                {
                    if (null == fFilenameComboLBList)
                    {
                        fFilenameComboLBList = new List("FilenameComboLBList", FilenameComboBoComboBox);
                        fFilenameComboLBList.UIMap.Scope = UIASeachScope.Children;
                        fFilenameComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                        fFilenameComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                        fFilenameComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File name:");
                    }

                    return fFilenameComboLBList;
                }
            }

            /// <summary>
            /// Gets Reference to DropDownButtonDDup0Button
            /// </summary>
            public Button DropDownButtonDDup0Button
            {
                get
                {
                    if (null == fDropDownButtonDDup0Button)
                    {
                        fDropDownButtonDDup0Button = new Button("DropDownButtonDDup0Button", FilenameComboBoComboBox);
                        fDropDownButtonDDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fDropDownButtonDDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                        fDropDownButtonDDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                    }

                    return fDropDownButtonDDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to FilesoftypeCombComboBox
            /// </summary>
            public ComboBox FilesoftypeCombComboBox
            {
                get
                {
                    if (null == fFilesoftypeCombComboBox)
                    {
                        fFilesoftypeCombComboBox = new ComboBox("FilesoftypeCombComboBox", Open32770Window);
                        fFilesoftypeCombComboBox.UIMap.Scope = UIASeachScope.Children;
                        fFilesoftypeCombComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1136");
                        fFilesoftypeCombComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                        fFilesoftypeCombComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Files of type:");
                    }

                    return fFilesoftypeCombComboBox;
                }
            }

            /// <summary>
            /// Gets Reference to FilesoftypeCombList
            /// </summary>
            public List FilesoftypeCombList
            {
                get
                {
                    if (null == fFilesoftypeCombList)
                    {
                        fFilesoftypeCombList = new List("FilesoftypeCombList", FilesoftypeCombComboBox);
                        fFilesoftypeCombList.UIMap.Scope = UIASeachScope.Children;
                        fFilesoftypeCombList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                        fFilesoftypeCombList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                        fFilesoftypeCombList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Files of type:");
                    }

                    return fFilesoftypeCombList;
                }
            }

            /// <summary>
            /// Gets Reference to CSVCommadelimitListItem
            /// </summary>
            public ListItem CSVCommadelimitListItem
            {
                get
                {
                    if (null == fCSVCommadelimitListItem)
                    {
                        fCSVCommadelimitListItem = new ListItem("CSVCommadelimitListItem", FilesoftypeCombList);
                        fCSVCommadelimitListItem.UIMap.Scope = UIASeachScope.Children;
                        fCSVCommadelimitListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"CSV (Comma delimited) (*.csv)");
                    }

                    return fCSVCommadelimitListItem;
                }
            }

            /// <summary>
            /// Gets Reference to DropDownButtonDDup1Button
            /// </summary>
            public Button DropDownButtonDDup1Button
            {
                get
                {
                    if (null == fDropDownButtonDDup1Button)
                    {
                        fDropDownButtonDDup1Button = new Button("DropDownButtonDDup1Button", FilesoftypeCombComboBox);
                        fDropDownButtonDDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fDropDownButtonDDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                        fDropDownButtonDDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                    }

                    return fDropDownButtonDDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to OpenButton1Button
            /// </summary>
            public Button OpenButton1Button
            {
                get
                {
                    if (null == fOpenButton1Button)
                    {
                        fOpenButton1Button = new Button("OpenButton1Button", Open32770Window);
                        fOpenButton1Button.UIMap.Scope = UIASeachScope.Children;
                        fOpenButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1");
                        fOpenButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fOpenButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Open");
                    }

                    return fOpenButton1Button;
                }
            }

            /// <summary>
            /// Gets Reference to CancelButton2Button
            /// </summary>
            public Button CancelButton2Button
            {
                get
                {
                    if (null == fCancelButton2Button)
                    {
                        fCancelButton2Button = new Button("CancelButton2Button", Open32770Window);
                        fCancelButton2Button.UIMap.Scope = UIASeachScope.Children;
                        fCancelButton2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2");
                        fCancelButton2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fCancelButton2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    }

                    return fCancelButton2Button;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarPane
            /// </summary>
            public Pane ScrollBarPane
            {
                get
                {
                    if (null == fScrollBarPane)
                    {
                        fScrollBarPane = new Pane("ScrollBarPane", Open32770Window);
                        fScrollBarPane.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarPane;
                }
            }

            /// <summary>
            /// Gets Reference to WorkerWPane
            /// </summary>
            public Pane WorkerWPane
            {
                get
                {
                    if (null == fWorkerWPane)
                    {
                        fWorkerWPane = new Pane("WorkerWPane", Open32770Window);
                        fWorkerWPane.UIMap.Scope = UIASeachScope.Children;
                        fWorkerWPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WorkerW");
                    }

                    return fWorkerWPane;
                }
            }

            /// <summary>
            /// Gets Reference to ReBarWindow3240Pane
            /// </summary>
            public Pane ReBarWindow3240Pane
            {
                get
                {
                    if (null == fReBarWindow3240Pane)
                    {
                        fReBarWindow3240Pane = new Pane("ReBarWindow3240Pane", WorkerWPane);
                        fReBarWindow3240Pane.UIMap.Scope = UIASeachScope.Children;
                        fReBarWindow3240Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"40965");
                        fReBarWindow3240Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ReBarWindow32");
                    }

                    return fReBarWindow3240Pane;
                }
            }

            /// <summary>
            /// Gets Reference to RebarBandDup0I0XCustom
            /// </summary>
            public Custom RebarBandDup0I0XCustom
            {
                get
                {
                    if (null == fRebarBandDup0I0XCustom)
                    {
                        fRebarBandDup0I0XCustom = new Custom("RebarBandDup0I0XCustom", ReBarWindow3240Pane);
                        fRebarBandDup0I0XCustom.UIMap.Scope = UIASeachScope.Children;
                        fRebarBandDup0I0XCustom.UIMap.Index = 0;
                        fRebarBandDup0I0XCustom.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rebar Band");
                    }

                    return fRebarBandDup0I0XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to TravelBandPane
            /// </summary>
            public Pane TravelBandPane
            {
                get
                {
                    if (null == fTravelBandPane)
                    {
                        fTravelBandPane = new Pane("TravelBandPane", RebarBandDup0I0XCustom);
                        fTravelBandPane.UIMap.Scope = UIASeachScope.Children;
                        fTravelBandPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TravelBand");
                    }

                    return fTravelBandPane;
                }
            }

            /// <summary>
            /// Gets Reference to NavigationbuttoToolBar
            /// </summary>
            public ToolBar NavigationbuttoToolBar
            {
                get
                {
                    if (null == fNavigationbuttoToolBar)
                    {
                        fNavigationbuttoToolBar = new ToolBar("NavigationbuttoToolBar", TravelBandPane);
                        fNavigationbuttoToolBar.UIMap.Scope = UIASeachScope.Children;
                        fNavigationbuttoToolBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ToolbarWindow32");
                        fNavigationbuttoToolBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Navigation buttons");
                    }

                    return fNavigationbuttoToolBar;
                }
            }

            /// <summary>
            /// Gets Reference to BackAltLeftArroButton
            /// </summary>
            public Button BackAltLeftArroButton
            {
                get
                {
                    if (null == fBackAltLeftArroButton)
                    {
                        fBackAltLeftArroButton = new Button("BackAltLeftArroButton", NavigationbuttoToolBar);
                        fBackAltLeftArroButton.UIMap.Scope = UIASeachScope.Children;
                        fBackAltLeftArroButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 256");
                        fBackAltLeftArroButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back (Alt + Left Arrow)");
                    }

                    return fBackAltLeftArroButton;
                }
            }

            /// <summary>
            /// Gets Reference to ForwardAltRightButton
            /// </summary>
            public Button ForwardAltRightButton
            {
                get
                {
                    if (null == fForwardAltRightButton)
                    {
                        fForwardAltRightButton = new Button("ForwardAltRightButton", NavigationbuttoToolBar);
                        fForwardAltRightButton.UIMap.Scope = UIASeachScope.Children;
                        fForwardAltRightButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 257");
                        fForwardAltRightButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward (Alt + Right Arrow)");
                    }

                    return fForwardAltRightButton;
                }
            }

            /// <summary>
            /// Gets Reference to RecentlocationsButton
            /// </summary>
            public Button RecentlocationsButton
            {
                get
                {
                    if (null == fRecentlocationsButton)
                    {
                        fRecentlocationsButton = new Button("RecentlocationsButton", NavigationbuttoToolBar);
                        fRecentlocationsButton.UIMap.Scope = UIASeachScope.Children;
                        fRecentlocationsButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 258");
                        fRecentlocationsButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Recent locations");
                    }

                    return fRecentlocationsButton;
                }
            }

            /// <summary>
            /// Gets Reference to RebarBandDup1I1XCustom
            /// </summary>
            public Custom RebarBandDup1I1XCustom
            {
                get
                {
                    if (null == fRebarBandDup1I1XCustom)
                    {
                        fRebarBandDup1I1XCustom = new Custom("RebarBandDup1I1XCustom", ReBarWindow3240Pane);
                        fRebarBandDup1I1XCustom.UIMap.Scope = UIASeachScope.Children;
                        fRebarBandDup1I1XCustom.UIMap.Index = 1;
                        fRebarBandDup1I1XCustom.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rebar Band");
                    }

                    return fRebarBandDup1I1XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to UpBandPane
            /// </summary>
            public Pane UpBandPane
            {
                get
                {
                    if (null == fUpBandPane)
                    {
                        fUpBandPane = new Pane("UpBandPane", RebarBandDup1I1XCustom);
                        fUpBandPane.UIMap.Scope = UIASeachScope.Children;
                        fUpBandPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UpBand");
                    }

                    return fUpBandPane;
                }
            }

            /// <summary>
            /// Gets Reference to UpbandtoolbarToToolBar
            /// </summary>
            public ToolBar UpbandtoolbarToToolBar
            {
                get
                {
                    if (null == fUpbandtoolbarToToolBar)
                    {
                        fUpbandtoolbarToToolBar = new ToolBar("UpbandtoolbarToToolBar", UpBandPane);
                        fUpbandtoolbarToToolBar.UIMap.Scope = UIASeachScope.Children;
                        fUpbandtoolbarToToolBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ToolbarWindow32");
                        fUpbandtoolbarToToolBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Up band toolbar");
                    }

                    return fUpbandtoolbarToToolBar;
                }
            }

            /// <summary>
            /// Gets Reference to RebarBandDup2I2XCustom
            /// </summary>
            public Custom RebarBandDup2I2XCustom
            {
                get
                {
                    if (null == fRebarBandDup2I2XCustom)
                    {
                        fRebarBandDup2I2XCustom = new Custom("RebarBandDup2I2XCustom", ReBarWindow3240Pane);
                        fRebarBandDup2I2XCustom.UIMap.Scope = UIASeachScope.Children;
                        fRebarBandDup2I2XCustom.UIMap.Index = 2;
                        fRebarBandDup2I2XCustom.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rebar Band");
                    }

                    return fRebarBandDup2I2XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBandRootPane
            /// </summary>
            public Pane AddressBandRootPane
            {
                get
                {
                    if (null == fAddressBandRootPane)
                    {
                        fAddressBandRootPane = new Pane("AddressBandRootPane", RebarBandDup2I2XCustom);
                        fAddressBandRootPane.UIMap.Scope = UIASeachScope.Children;
                        fAddressBandRootPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"41477");
                        fAddressBandRootPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Address Band Root");
                    }

                    return fAddressBandRootPane;
                }
            }

            /// <summary>
            /// Gets Reference to msctlsprogressProgressBar
            /// </summary>
            public ProgressBar msctlsprogressProgressBar
            {
                get
                {
                    if (null == fmsctlsprogressProgressBar)
                    {
                        fmsctlsprogressProgressBar = new ProgressBar("msctlsprogressProgressBar", AddressBandRootPane);
                        fmsctlsprogressProgressBar.UIMap.Scope = UIASeachScope.Children;
                        fmsctlsprogressProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"msctls_progress32");
                    }

                    return fmsctlsprogressProgressBar;
                }
            }

            /// <summary>
            /// Gets Reference to BreadcrumbParenPane
            /// </summary>
            public Pane BreadcrumbParenPane
            {
                get
                {
                    if (null == fBreadcrumbParenPane)
                    {
                        fBreadcrumbParenPane = new Pane("BreadcrumbParenPane", msctlsprogressProgressBar);
                        fBreadcrumbParenPane.UIMap.Scope = UIASeachScope.Children;
                        fBreadcrumbParenPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Breadcrumb Parent");
                    }

                    return fBreadcrumbParenPane;
                }
            }

            /// <summary>
            /// Gets Reference to AddressDesktopTToolBar
            /// </summary>
            public ToolBar AddressDesktopTToolBar
            {
                get
                {
                    if (null == fAddressDesktopTToolBar)
                    {
                        fAddressDesktopTToolBar = new ToolBar("AddressDesktopTToolBar", BreadcrumbParenPane);
                        fAddressDesktopTToolBar.UIMap.Scope = UIASeachScope.Children;
                        fAddressDesktopTToolBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1001");
                        fAddressDesktopTToolBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ToolbarWindow32");
                        fAddressDesktopTToolBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address: Desktop");
                    }

                    return fAddressDesktopTToolBar;
                }
            }

            /// <summary>
            /// Gets Reference to AlllocationsIteSplitButton
            /// </summary>
            public SplitButton AlllocationsIteSplitButton
            {
                get
                {
                    if (null == fAlllocationsIteSplitButton)
                    {
                        fAlllocationsIteSplitButton = new SplitButton("AlllocationsIteSplitButton", AddressDesktopTToolBar);
                        fAlllocationsIteSplitButton.UIMap.Scope = UIASeachScope.Children;
                        fAlllocationsIteSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1280");
                        fAlllocationsIteSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"All locations");
                    }

                    return fAlllocationsIteSplitButton;
                }
            }

            /// <summary>
            /// Gets Reference to ThisPCItem1281SplitButton
            /// </summary>
            public SplitButton ThisPCItem1281SplitButton
            {
                get
                {
                    if (null == fThisPCItem1281SplitButton)
                    {
                        fThisPCItem1281SplitButton = new SplitButton("ThisPCItem1281SplitButton", AddressDesktopTToolBar);
                        fThisPCItem1281SplitButton.UIMap.Scope = UIASeachScope.Children;
                        fThisPCItem1281SplitButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1281");
                        fThisPCItem1281SplitButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"This PC");
                    }

                    return fThisPCItem1281SplitButton;
                }
            }

            /// <summary>
            /// Gets Reference to DesktopItem1282MenuItem
            /// </summary>
            public MenuItem DesktopItem1282MenuItem
            {
                get
                {
                    if (null == fDesktopItem1282MenuItem)
                    {
                        fDesktopItem1282MenuItem = new MenuItem("DesktopItem1282MenuItem", AddressDesktopTToolBar);
                        fDesktopItem1282MenuItem.UIMap.Scope = UIASeachScope.Children;
                        fDesktopItem1282MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1282");
                        fDesktopItem1282MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Desktop");
                    }

                    return fDesktopItem1282MenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to AddressbandtoolToolBar
            /// </summary>
            public ToolBar AddressbandtoolToolBar
            {
                get
                {
                    if (null == fAddressbandtoolToolBar)
                    {
                        fAddressbandtoolToolBar = new ToolBar("AddressbandtoolToolBar", msctlsprogressProgressBar);
                        fAddressbandtoolToolBar.UIMap.Scope = UIASeachScope.Children;
                        fAddressbandtoolToolBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ToolbarWindow32");
                        fAddressbandtoolToolBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address band toolbar");
                    }

                    return fAddressbandtoolToolBar;
                }
            }

            /// <summary>
            /// Gets Reference to PreviousLocatioButton
            /// </summary>
            public Button PreviousLocatioButton
            {
                get
                {
                    if (null == fPreviousLocatioButton)
                    {
                        fPreviousLocatioButton = new Button("PreviousLocatioButton", AddressbandtoolToolBar);
                        fPreviousLocatioButton.UIMap.Scope = UIASeachScope.Children;
                        fPreviousLocatioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 202");
                        fPreviousLocatioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Previous Locations");
                    }

                    return fPreviousLocatioButton;
                }
            }

            /// <summary>
            /// Gets Reference to RebarBandDup3I3XCustom
            /// </summary>
            public Custom RebarBandDup3I3XCustom
            {
                get
                {
                    if (null == fRebarBandDup3I3XCustom)
                    {
                        fRebarBandDup3I3XCustom = new Custom("RebarBandDup3I3XCustom", ReBarWindow3240Pane);
                        fRebarBandDup3I3XCustom.UIMap.Scope = UIASeachScope.Children;
                        fRebarBandDup3I3XCustom.UIMap.Index = 3;
                        fRebarBandDup3I3XCustom.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rebar Band");
                    }

                    return fRebarBandDup3I3XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to SeparatorBandDup0Pane
            /// </summary>
            public Pane SeparatorBandDup0Pane
            {
                get
                {
                    if (null == fSeparatorBandDup0Pane)
                    {
                        fSeparatorBandDup0Pane = new Pane("SeparatorBandDup0Pane", RebarBandDup3I3XCustom);
                        fSeparatorBandDup0Pane.UIMap.Scope = UIASeachScope.Children;
                        fSeparatorBandDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"SeparatorBand");
                    }

                    return fSeparatorBandDup0Pane;
                }
            }

            /// <summary>
            /// Gets Reference to RebarBandDup4I4XCustom
            /// </summary>
            public Custom RebarBandDup4I4XCustom
            {
                get
                {
                    if (null == fRebarBandDup4I4XCustom)
                    {
                        fRebarBandDup4I4XCustom = new Custom("RebarBandDup4I4XCustom", ReBarWindow3240Pane);
                        fRebarBandDup4I4XCustom.UIMap.Scope = UIASeachScope.Children;
                        fRebarBandDup4I4XCustom.UIMap.Index = 4;
                        fRebarBandDup4I4XCustom.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rebar Band");
                    }

                    return fRebarBandDup4I4XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to UniversalSearchPane
            /// </summary>
            public Pane UniversalSearchPane
            {
                get
                {
                    if (null == fUniversalSearchPane)
                    {
                        fUniversalSearchPane = new Pane("UniversalSearchPane", RebarBandDup4I4XCustom);
                        fUniversalSearchPane.UIMap.Scope = UIASeachScope.Children;
                        fUniversalSearchPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UniversalSearchBand");
                    }

                    return fUniversalSearchPane;
                }
            }

            /// <summary>
            /// Gets Reference to SearchBoxPane
            /// </summary>
            public Pane SearchBoxPane
            {
                get
                {
                    if (null == fSearchBoxPane)
                    {
                        fSearchBoxPane = new Pane("SearchBoxPane", UniversalSearchPane);
                        fSearchBoxPane.UIMap.Scope = UIASeachScope.Children;
                        fSearchBoxPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Search Box");
                    }

                    return fSearchBoxPane;
                }
            }

            /// <summary>
            /// Gets Reference to SearchEditBoxWrPane
            /// </summary>
            public Pane SearchEditBoxWrPane
            {
                get
                {
                    if (null == fSearchEditBoxWrPane)
                    {
                        fSearchEditBoxWrPane = new Pane("SearchEditBoxWrPane", SearchBoxPane);
                        fSearchEditBoxWrPane.UIMap.Scope = UIASeachScope.Children;
                        fSearchEditBoxWrPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"SearchEditBoxWrapperClass");
                    }

                    return fSearchEditBoxWrPane;
                }
            }

            /// <summary>
            /// Gets Reference to SearchDesktopSePane
            /// </summary>
            public Pane SearchDesktopSePane
            {
                get
                {
                    if (null == fSearchDesktopSePane)
                    {
                        fSearchDesktopSePane = new Pane("SearchDesktopSePane", SearchEditBoxWrPane);
                        fSearchDesktopSePane.UIMap.Scope = UIASeachScope.Children;
                        fSearchDesktopSePane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"SearchBox");
                        fSearchDesktopSePane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @" Search Desktop");
                    }

                    return fSearchDesktopSePane;
                }
            }

            /// <summary>
            /// Gets Reference to SearchBoxSearchEdit
            /// </summary>
            public Edit SearchBoxSearchEdit
            {
                get
                {
                    if (null == fSearchBoxSearchEdit)
                    {
                        fSearchBoxSearchEdit = new Edit("SearchBoxSearchEdit", SearchDesktopSePane);
                        fSearchBoxSearchEdit.UIMap.Scope = UIASeachScope.Children;
                        fSearchBoxSearchEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SearchEditBox");
                        fSearchBoxSearchEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"SearchEditBox");
                        fSearchBoxSearchEdit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search Box");
                    }

                    return fSearchBoxSearchEdit;
                }
            }

            /// <summary>
            /// Gets Reference to SearchButtonSeaButton
            /// </summary>
            public Button SearchButtonSeaButton
            {
                get
                {
                    if (null == fSearchButtonSeaButton)
                    {
                        fSearchButtonSeaButton = new Button("SearchButtonSeaButton", SearchDesktopSePane);
                        fSearchButtonSeaButton.UIMap.Scope = UIASeachScope.Children;
                        fSearchButtonSeaButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SearchBoxSearchButton");
                        fSearchButtonSeaButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fSearchButtonSeaButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search");
                    }

                    return fSearchButtonSeaButton;
                }
            }

            /// <summary>
            /// Gets Reference to RebarBandDup5I5XCustom
            /// </summary>
            public Custom RebarBandDup5I5XCustom
            {
                get
                {
                    if (null == fRebarBandDup5I5XCustom)
                    {
                        fRebarBandDup5I5XCustom = new Custom("RebarBandDup5I5XCustom", ReBarWindow3240Pane);
                        fRebarBandDup5I5XCustom.UIMap.Scope = UIASeachScope.Children;
                        fRebarBandDup5I5XCustom.UIMap.Index = 5;
                        fRebarBandDup5I5XCustom.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rebar Band");
                    }

                    return fRebarBandDup5I5XCustom;
                }
            }

            /// <summary>
            /// Gets Reference to SeparatorBandDup1Pane
            /// </summary>
            public Pane SeparatorBandDup1Pane
            {
                get
                {
                    if (null == fSeparatorBandDup1Pane)
                    {
                        fSeparatorBandDup1Pane = new Pane("SeparatorBandDup1Pane", RebarBandDup5I5XCustom);
                        fSeparatorBandDup1Pane.UIMap.Scope = UIASeachScope.Children;
                        fSeparatorBandDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"SeparatorBand");
                    }

                    return fSeparatorBandDup1Pane;
                }
            }

            /// <summary>
            /// Gets Reference to OpenTitleBar
            /// </summary>
            public TitleBar OpenTitleBar
            {
                get
                {
                    if (null == fOpenTitleBar)
                    {
                        fOpenTitleBar = new TitleBar("OpenTitleBar", Open32770Window);
                        fOpenTitleBar.UIMap.Scope = UIASeachScope.Children;
                        fOpenTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                        fOpenTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Open");
                    }

                    return fOpenTitleBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemMenuBarSyDup0MenuBar
            /// </summary>
            public MenuBar SystemMenuBarSyDup0MenuBar
            {
                get
                {
                    if (null == fSystemMenuBarSyDup0MenuBar)
                    {
                        fSystemMenuBarSyDup0MenuBar = new MenuBar("SystemMenuBarSyDup0MenuBar", OpenTitleBar);
                        fSystemMenuBarSyDup0MenuBar.UIMap.Scope = UIASeachScope.Children;
                        fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                        fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                    }

                    return fSystemMenuBarSyDup0MenuBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemItem1Dup0MenuItem
            /// </summary>
            public MenuItem SystemItem1Dup0MenuItem
            {
                get
                {
                    if (null == fSystemItem1Dup0MenuItem)
                    {
                        fSystemItem1Dup0MenuItem = new MenuItem("SystemItem1Dup0MenuItem", SystemMenuBarSyDup0MenuBar);
                        fSystemItem1Dup0MenuItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                        fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                    }

                    return fSystemItem1Dup0MenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to CloseCloseDup0Button
            /// </summary>
            public Button CloseCloseDup0Button
            {
                get
                {
                    if (null == fCloseCloseDup0Button)
                    {
                        fCloseCloseDup0Button = new Button("CloseCloseDup0Button", OpenTitleBar);
                        fCloseCloseDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                        fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                    }

                    return fCloseCloseDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookManaTitleBar
            /// </summary>
            public TitleBar AddressBookManaTitleBar
            {
                get
                {
                    if (null == fAddressBookManaTitleBar)
                    {
                        fAddressBookManaTitleBar = new TitleBar("AddressBookManaTitleBar", AddressBookManaWindow);
                        fAddressBookManaTitleBar.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                        fAddressBookManaTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                    }

                    return fAddressBookManaTitleBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemMenuBarSyDup1MenuBar
            /// </summary>
            public MenuBar SystemMenuBarSyDup1MenuBar
            {
                get
                {
                    if (null == fSystemMenuBarSyDup1MenuBar)
                    {
                        fSystemMenuBarSyDup1MenuBar = new MenuBar("SystemMenuBarSyDup1MenuBar", AddressBookManaTitleBar);
                        fSystemMenuBarSyDup1MenuBar.UIMap.Scope = UIASeachScope.Children;
                        fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                        fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                    }

                    return fSystemMenuBarSyDup1MenuBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemItem1Dup1MenuItem
            /// </summary>
            public MenuItem SystemItem1Dup1MenuItem
            {
                get
                {
                    if (null == fSystemItem1Dup1MenuItem)
                    {
                        fSystemItem1Dup1MenuItem = new MenuItem("SystemItem1Dup1MenuItem", SystemMenuBarSyDup1MenuBar);
                        fSystemItem1Dup1MenuItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                        fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                    }

                    return fSystemItem1Dup1MenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to MinimizeMinimizDup0Button
            /// </summary>
            public Button MinimizeMinimizDup0Button
            {
                get
                {
                    if (null == fMinimizeMinimizDup0Button)
                    {
                        fMinimizeMinimizDup0Button = new Button("MinimizeMinimizDup0Button", AddressBookManaTitleBar);
                        fMinimizeMinimizDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                        fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                    }

                    return fMinimizeMinimizDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to MaximizeMaximizDup0Button
            /// </summary>
            public Button MaximizeMaximizDup0Button
            {
                get
                {
                    if (null == fMaximizeMaximizDup0Button)
                    {
                        fMaximizeMaximizDup0Button = new Button("MaximizeMaximizDup0Button", AddressBookManaTitleBar);
                        fMaximizeMaximizDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                        fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                    }

                    return fMaximizeMaximizDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to CloseCloseDup1Button
            /// </summary>
            public Button CloseCloseDup1Button
            {
                get
                {
                    if (null == fCloseCloseDup1Button)
                    {
                        fCloseCloseDup1Button = new Button("CloseCloseDup1Button", AddressBookManaTitleBar);
                        fCloseCloseDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                        fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                    }

                    return fCloseCloseDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to DSSAddressBooksDup0Text
            /// </summary>
            public Text DSSAddressBooksDup0Text
            {
                get
                {
                    if (null == fDSSAddressBooksDup0Text)
                    {
                        fDSSAddressBooksDup0Text = new Text("DSSAddressBooksDup0Text", AddressBookManaWindow);
                        fDSSAddressBooksDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fDSSAddressBooksDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fDSSAddressBooksDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"DSS Address Books");
                    }

                    return fDSSAddressBooksDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to DSSAddressBooksDup1Text
            /// </summary>
            public Text DSSAddressBooksDup1Text
            {
                get
                {
                    if (null == fDSSAddressBooksDup1Text)
                    {
                        fDSSAddressBooksDup1Text = new Text("DSSAddressBooksDup1Text", DSSAddressBooksDup0Text);
                        fDSSAddressBooksDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fDSSAddressBooksDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fDSSAddressBooksDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"DSS Address Books");
                    }

                    return fDSSAddressBooksDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to TreeView87DDA4CTree
            /// </summary>
            public Tree TreeView87DDA4CTree
            {
                get
                {
                    if (null == fTreeView87DDA4CTree)
                    {
                        fTreeView87DDA4CTree = new Tree("TreeView87DDA4CTree", AddressBookManaWindow);
                        fTreeView87DDA4CTree.UIMap.Scope = UIASeachScope.Children;
                        fTreeView87DDA4CTree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"87DDA4CA-8AA3-4101-B507-205367EF1C65");
                        fTreeView87DDA4CTree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeView");
                    }

                    return fTreeView87DDA4CTree;
                }
            }

            /// <summary>
            /// Gets Reference to PublicTreeViewITreeItem
            /// </summary>
            public TreeItem PublicTreeViewITreeItem
            {
                get
                {
                    if (null == fPublicTreeViewITreeItem)
                    {
                        fPublicTreeViewITreeItem = new TreeItem("PublicTreeViewITreeItem", TreeView87DDA4CTree);
                        fPublicTreeViewITreeItem.UIMap.Scope = UIASeachScope.Children;
                        fPublicTreeViewITreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                        fPublicTreeViewITreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Public");
                    }

                    return fPublicTreeViewITreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to ButtonExpanderDup0Button
            /// </summary>
            public Button ButtonExpanderDup0Button
            {
                get
                {
                    if (null == fButtonExpanderDup0Button)
                    {
                        fButtonExpanderDup0Button = new Button("ButtonExpanderDup0Button", PublicTreeViewITreeItem);
                        fButtonExpanderDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fButtonExpanderDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                        fButtonExpanderDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fButtonExpanderDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to PublicTextBlockText
            /// </summary>
            public Text PublicTextBlockText
            {
                get
                {
                    if (null == fPublicTextBlockText)
                    {
                        fPublicTextBlockText = new Text("PublicTextBlockText", PublicTreeViewITreeItem);
                        fPublicTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fPublicTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fPublicTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Public");
                    }

                    return fPublicTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to PrivateAddressBTreeItem
            /// </summary>
            public TreeItem PrivateAddressBTreeItem
            {
                get
                {
                    if (null == fPrivateAddressBTreeItem)
                    {
                        fPrivateAddressBTreeItem = new TreeItem("PrivateAddressBTreeItem", TreeView87DDA4CTree);
                        fPrivateAddressBTreeItem.UIMap.Scope = UIASeachScope.Children;
                        fPrivateAddressBTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                        fPrivateAddressBTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Private Address Books");
                    }

                    return fPrivateAddressBTreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to ButtonExpanderDup1Button
            /// </summary>
            public Button ButtonExpanderDup1Button
            {
                get
                {
                    if (null == fButtonExpanderDup1Button)
                    {
                        fButtonExpanderDup1Button = new Button("ButtonExpanderDup1Button", PrivateAddressBTreeItem);
                        fButtonExpanderDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fButtonExpanderDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                        fButtonExpanderDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fButtonExpanderDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to PrivateAddressBText
            /// </summary>
            public Text PrivateAddressBText
            {
                get
                {
                    if (null == fPrivateAddressBText)
                    {
                        fPrivateAddressBText = new Text("PrivateAddressBText", PrivateAddressBTreeItem);
                        fPrivateAddressBText.UIMap.Scope = UIASeachScope.Children;
                        fPrivateAddressBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fPrivateAddressBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Private Address Books");
                    }

                    return fPrivateAddressBText;
                }
            }

            /// <summary>
            /// Gets Reference to ExportButtonA1CButton
            /// </summary>
            public Button ExportButtonA1CButton
            {
                get
                {
                    if (null == fExportButtonA1CButton)
                    {
                        fExportButtonA1CButton = new Button("ExportButtonA1CButton", AddressBookManaWindow);
                        fExportButtonA1CButton.UIMap.Scope = UIASeachScope.Children;
                        fExportButtonA1CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A1CCB21F-FF18-45c0-9508-205AB68DF6FA");
                        fExportButtonA1CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fExportButtonA1CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                    }

                    return fExportButtonA1CButton;
                }
            }

            /// <summary>
            /// Gets Reference to ExportTextBlockText
            /// </summary>
            public Text ExportTextBlockText
            {
                get
                {
                    if (null == fExportTextBlockText)
                    {
                        fExportTextBlockText = new Text("ExportTextBlockText", ExportButtonA1CButton);
                        fExportTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                    }

                    return fExportTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to DeleteButton1B6Button
            /// </summary>
            public Button DeleteButton1B6Button
            {
                get
                {
                    if (null == fDeleteButton1B6Button)
                    {
                        fDeleteButton1B6Button = new Button("DeleteButton1B6Button", AddressBookManaWindow);
                        fDeleteButton1B6Button.UIMap.Scope = UIASeachScope.Children;
                        fDeleteButton1B6Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1B69E89F-D211-4da8-B934-C5619A2C5295");
                        fDeleteButton1B6Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fDeleteButton1B6Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                    }

                    return fDeleteButton1B6Button;
                }
            }

            /// <summary>
            /// Gets Reference to DeleteTextBlockDup0Text
            /// </summary>
            public Text DeleteTextBlockDup0Text
            {
                get
                {
                    if (null == fDeleteTextBlockDup0Text)
                    {
                        fDeleteTextBlockDup0Text = new Text("DeleteTextBlockDup0Text", DeleteButton1B6Button);
                        fDeleteTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fDeleteTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fDeleteTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                    }

                    return fDeleteTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to ImportAddressBoButton
            /// </summary>
            public Button ImportAddressBoButton
            {
                get
                {
                    if (null == fImportAddressBoButton)
                    {
                        fImportAddressBoButton = new Button("ImportAddressBoButton", AddressBookManaWindow);
                        fImportAddressBoButton.UIMap.Scope = UIASeachScope.Children;
                        fImportAddressBoButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2822A2FE-4E84-44ce-B27A-B204BD728AA6");
                        fImportAddressBoButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fImportAddressBoButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import Address Book");
                    }

                    return fImportAddressBoButton;
                }
            }

            /// <summary>
            /// Gets Reference to ImportAddressBoText
            /// </summary>
            public Text ImportAddressBoText
            {
                get
                {
                    if (null == fImportAddressBoText)
                    {
                        fImportAddressBoText = new Text("ImportAddressBoText", ImportAddressBoButton);
                        fImportAddressBoText.UIMap.Scope = UIASeachScope.Children;
                        fImportAddressBoText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fImportAddressBoText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import Address Book");
                    }

                    return fImportAddressBoText;
                }
            }

            /// <summary>
            /// Gets Reference to GridSplitterThumb
            /// </summary>
            public Thumb GridSplitterThumb
            {
                get
                {
                    if (null == fGridSplitterThumb)
                    {
                        fGridSplitterThumb = new Thumb("GridSplitterThumb", AddressBookManaWindow);
                        fGridSplitterThumb.UIMap.Scope = UIASeachScope.Children;
                        fGridSplitterThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridSplitter");
                    }

                    return fGridSplitterThumb;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookContDup0Text
            /// </summary>
            public Text AddressBookContDup0Text
            {
                get
                {
                    if (null == fAddressBookContDup0Text)
                    {
                        fAddressBookContDup0Text = new Text("AddressBookContDup0Text", AddressBookManaWindow);
                        fAddressBookContDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookContDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fAddressBookContDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Contacts");
                    }

                    return fAddressBookContDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookContDup1Text
            /// </summary>
            public Text AddressBookContDup1Text
            {
                get
                {
                    if (null == fAddressBookContDup1Text)
                    {
                        fAddressBookContDup1Text = new Text("AddressBookContDup1Text", AddressBookContDup0Text);
                        fAddressBookContDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookContDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAddressBookContDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Contacts");
                    }

                    return fAddressBookContDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to RefreshButton81Button
            /// </summary>
            public Button RefreshButton81Button
            {
                get
                {
                    if (null == fRefreshButton81Button)
                    {
                        fRefreshButton81Button = new Button("RefreshButton81Button", AddressBookManaWindow);
                        fRefreshButton81Button.UIMap.Scope = UIASeachScope.Children;
                        fRefreshButton81Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8136A442-0D15-4415-920C-CA43DED3D002");
                        fRefreshButton81Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fRefreshButton81Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Refresh");
                    }

                    return fRefreshButton81Button;
                }
            }

            /// <summary>
            /// Gets Reference to RefreshTextBlocText
            /// </summary>
            public Text RefreshTextBlocText
            {
                get
                {
                    if (null == fRefreshTextBlocText)
                    {
                        fRefreshTextBlocText = new Text("RefreshTextBlocText", RefreshButton81Button);
                        fRefreshTextBlocText.UIMap.Scope = UIASeachScope.Children;
                        fRefreshTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fRefreshTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Refresh");
                    }

                    return fRefreshTextBlocText;
                }
            }

            /// <summary>
            /// Gets Reference to SearchForText
            /// </summary>
            public Text SearchForText
            {
                get
                {
                    if (null == fSearchForText)
                    {
                        fSearchForText = new Text("SearchForText", AddressBookManaWindow);
                        fSearchForText.UIMap.Scope = UIASeachScope.Children;
                        fSearchForText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fSearchForText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search For");
                    }

                    return fSearchForText;
                }
            }

            /// <summary>
            /// Gets Reference to SearchForTextBlText
            /// </summary>
            public Text SearchForTextBlText
            {
                get
                {
                    if (null == fSearchForTextBlText)
                    {
                        fSearchForTextBlText = new Text("SearchForTextBlText", SearchForText);
                        fSearchForTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fSearchForTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fSearchForTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search For");
                    }

                    return fSearchForTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to ComboBoxA5F891AComboBox
            /// </summary>
            public ComboBox ComboBoxA5F891AComboBox
            {
                get
                {
                    if (null == fComboBoxA5F891AComboBox)
                    {
                        fComboBoxA5F891AComboBox = new ComboBox("ComboBoxA5F891AComboBox", AddressBookManaWindow);
                        fComboBoxA5F891AComboBox.UIMap.Scope = UIASeachScope.Children;
                        fComboBoxA5F891AComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A5F891A4-D564-4D03-A3CF-020D3DFEABFE");
                        fComboBoxA5F891AComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    }

                    return fComboBoxA5F891AComboBox;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxA7B3B6CFEdit
            /// </summary>
            public Edit TextBoxA7B3B6CFEdit
            {
                get
                {
                    if (null == fTextBoxA7B3B6CFEdit)
                    {
                        fTextBoxA7B3B6CFEdit = new Edit("TextBoxA7B3B6CFEdit", AddressBookManaWindow);
                        fTextBoxA7B3B6CFEdit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxA7B3B6CFEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A7B3B6CF-CA57-4C41-B012-E680FF33571A");
                        fTextBoxA7B3B6CFEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBoxA7B3B6CFEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup0Pane
            /// </summary>
            public Pane ScrollViewerPARDup0Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup0Pane)
                    {
                        fScrollViewerPARDup0Pane = new Pane("ScrollViewerPARDup0Pane", TextBoxA7B3B6CFEdit);
                        fScrollViewerPARDup0Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup0Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup0ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup0ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup0ScrollBar)
                    {
                        fScrollBarVerticDup0ScrollBar = new ScrollBar("ScrollBarVerticDup0ScrollBar", ScrollViewerPARDup0Pane);
                        fScrollBarVerticDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup0ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup0ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup0ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup0ScrollBar)
                    {
                        fScrollBarHorizoDup0ScrollBar = new ScrollBar("ScrollBarHorizoDup0ScrollBar", ScrollViewerPARDup0Pane);
                        fScrollBarHorizoDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup0ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to FilterButtonEB0Button
            /// </summary>
            public Button FilterButtonEB0Button
            {
                get
                {
                    if (null == fFilterButtonEB0Button)
                    {
                        fFilterButtonEB0Button = new Button("FilterButtonEB0Button", AddressBookManaWindow);
                        fFilterButtonEB0Button.UIMap.Scope = UIASeachScope.Children;
                        fFilterButtonEB0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"EB01B2A2-BF39-42A0-AE00-B0FC20AD66B5");
                        fFilterButtonEB0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fFilterButtonEB0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Filter");
                    }

                    return fFilterButtonEB0Button;
                }
            }

            /// <summary>
            /// Gets Reference to FilterTextBlockText
            /// </summary>
            public Text FilterTextBlockText
            {
                get
                {
                    if (null == fFilterTextBlockText)
                    {
                        fFilterTextBlockText = new Text("FilterTextBlockText", FilterButtonEB0Button);
                        fFilterTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fFilterTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fFilterTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Filter");
                    }

                    return fFilterTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to ClearButtonEC9FButton
            /// </summary>
            public Button ClearButtonEC9FButton
            {
                get
                {
                    if (null == fClearButtonEC9FButton)
                    {
                        fClearButtonEC9FButton = new Button("ClearButtonEC9FButton", AddressBookManaWindow);
                        fClearButtonEC9FButton.UIMap.Scope = UIASeachScope.Children;
                        fClearButtonEC9FButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"EC9F1512-82D9-47DF-835E-F1257E37CDC4");
                        fClearButtonEC9FButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fClearButtonEC9FButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear");
                    }

                    return fClearButtonEC9FButton;
                }
            }

            /// <summary>
            /// Gets Reference to ClearTextBlockText
            /// </summary>
            public Text ClearTextBlockText
            {
                get
                {
                    if (null == fClearTextBlockText)
                    {
                        fClearTextBlockText = new Text("ClearTextBlockText", ClearButtonEC9FButton);
                        fClearTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fClearTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fClearTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear");
                    }

                    return fClearTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to ListViewbb668d9DataGrid
            /// </summary>
            public DataGrid ListViewbb668d9DataGrid
            {
                get
                {
                    if (null == fListViewbb668d9DataGrid)
                    {
                        fListViewbb668d9DataGrid = new DataGrid("ListViewbb668d9DataGrid", AddressBookManaWindow);
                        fListViewbb668d9DataGrid.UIMap.Scope = UIASeachScope.Children;
                        fListViewbb668d9DataGrid.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"bb668d97-1a07-4f0e-bad1-f6fcbfbf7c99");
                        fListViewbb668d9DataGrid.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListView");
                    }

                    return fListViewbb668d9DataGrid;
                }
            }

            /// <summary>
            /// Gets Reference to GridViewHeaderRHeader
            /// </summary>
            public Header GridViewHeaderRHeader
            {
                get
                {
                    if (null == fGridViewHeaderRHeader)
                    {
                        fGridViewHeaderRHeader = new Header("GridViewHeaderRHeader", ListViewbb668d9DataGrid);
                        fGridViewHeaderRHeader.UIMap.Scope = UIASeachScope.Children;
                        fGridViewHeaderRHeader.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewHeaderRowPresenter");
                    }

                    return fGridViewHeaderRHeader;
                }
            }

            /// <summary>
            /// Gets Reference to ContactNameGridHeaderItem
            /// </summary>
            public HeaderItem ContactNameGridHeaderItem
            {
                get
                {
                    if (null == fContactNameGridHeaderItem)
                    {
                        fContactNameGridHeaderItem = new HeaderItem("ContactNameGridHeaderItem", GridViewHeaderRHeader);
                        fContactNameGridHeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fContactNameGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                        fContactNameGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Contact Name");
                    }

                    return fContactNameGridHeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to ContactNameTextText
            /// </summary>
            public Text ContactNameTextText
            {
                get
                {
                    if (null == fContactNameTextText)
                    {
                        fContactNameTextText = new Text("ContactNameTextText", ContactNameGridHeaderItem);
                        fContactNameTextText.UIMap.Scope = UIASeachScope.Children;
                        fContactNameTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fContactNameTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Contact Name");
                    }

                    return fContactNameTextText;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup0Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup0Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup0Thumb)
                    {
                        fThumbPARTHeadeDup0Thumb = new Thumb("ThumbPARTHeadeDup0Thumb", ContactNameGridHeaderItem);
                        fThumbPARTHeadeDup0Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup0Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to EmailAddressGriHeaderItem
            /// </summary>
            public HeaderItem EmailAddressGriHeaderItem
            {
                get
                {
                    if (null == fEmailAddressGriHeaderItem)
                    {
                        fEmailAddressGriHeaderItem = new HeaderItem("EmailAddressGriHeaderItem", GridViewHeaderRHeader);
                        fEmailAddressGriHeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fEmailAddressGriHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                        fEmailAddressGriHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail Address");
                    }

                    return fEmailAddressGriHeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to EmailAddressTexText
            /// </summary>
            public Text EmailAddressTexText
            {
                get
                {
                    if (null == fEmailAddressTexText)
                    {
                        fEmailAddressTexText = new Text("EmailAddressTexText", EmailAddressGriHeaderItem);
                        fEmailAddressTexText.UIMap.Scope = UIASeachScope.Children;
                        fEmailAddressTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fEmailAddressTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail Address");
                    }

                    return fEmailAddressTexText;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup1Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup1Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup1Thumb)
                    {
                        fThumbPARTHeadeDup1Thumb = new Thumb("ThumbPARTHeadeDup1Thumb", EmailAddressGriHeaderItem);
                        fThumbPARTHeadeDup1Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup1Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to FaxNumberGridViHeaderItem
            /// </summary>
            public HeaderItem FaxNumberGridViHeaderItem
            {
                get
                {
                    if (null == fFaxNumberGridViHeaderItem)
                    {
                        fFaxNumberGridViHeaderItem = new HeaderItem("FaxNumberGridViHeaderItem", GridViewHeaderRHeader);
                        fFaxNumberGridViHeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fFaxNumberGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                        fFaxNumberGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax Number");
                    }

                    return fFaxNumberGridViHeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to FaxNumberTextBlText
            /// </summary>
            public Text FaxNumberTextBlText
            {
                get
                {
                    if (null == fFaxNumberTextBlText)
                    {
                        fFaxNumberTextBlText = new Text("FaxNumberTextBlText", FaxNumberGridViHeaderItem);
                        fFaxNumberTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fFaxNumberTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fFaxNumberTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax Number");
                    }

                    return fFaxNumberTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup2Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup2Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup2Thumb)
                    {
                        fThumbPARTHeadeDup2Thumb = new Thumb("ThumbPARTHeadeDup2Thumb", FaxNumberGridViHeaderItem);
                        fThumbPARTHeadeDup2Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                        fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbPARTHeadeDup2Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to HPMfpAppServiceDataItem
            /// </summary>
            public DataItem HPMfpAppServiceDataItem
            {
                get
                {
                    if (null == fHPMfpAppServiceDataItem)
                    {
                        fHPMfpAppServiceDataItem = new DataItem("HPMfpAppServiceDataItem", ListViewbb668d9DataGrid);
                        fHPMfpAppServiceDataItem.UIMap.Scope = UIASeachScope.Children;
                        fHPMfpAppServiceDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                        fHPMfpAppServiceDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP.Mfp.App.Services.AddressBook.EmailFaxMergeRecord");
                    }

                    return fHPMfpAppServiceDataItem;
                }
            }

            /// <summary>
            /// Gets Reference to fgTextBlockText
            /// </summary>
            public Text fgTextBlockText
            {
                get
                {
                    if (null == ffgTextBlockText)
                    {
                        ffgTextBlockText = new Text("fgTextBlockText", HPMfpAppServiceDataItem);
                        ffgTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        ffgTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        ffgTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"fg");
                    }

                    return ffgTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to wscomTextBlockText
            /// </summary>
            public Text wscomTextBlockText
            {
                get
                {
                    if (null == fwscomTextBlockText)
                    {
                        fwscomTextBlockText = new Text("wscomTextBlockText", HPMfpAppServiceDataItem);
                        fwscomTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fwscomTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fwscomTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"w@s.com");
                    }

                    return fwscomTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to A656565TextBlocText
            /// </summary>
            public Text A656565TextBlocText
            {
                get
                {
                    if (null == fA656565TextBlocText)
                    {
                        fA656565TextBlocText = new Text("A656565TextBlocText", HPMfpAppServiceDataItem);
                        fA656565TextBlocText.UIMap.Scope = UIASeachScope.Children;
                        fA656565TextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fA656565TextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"656565");
                    }

                    return fA656565TextBlocText;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPcontactsareText
            /// </summary>
            public Text LDAPcontactsareText
            {
                get
                {
                    if (null == fLDAPcontactsareText)
                    {
                        fLDAPcontactsareText = new Text("LDAPcontactsareText", AddressBookManaWindow);
                        fLDAPcontactsareText.UIMap.Scope = UIASeachScope.Children;
                        fLDAPcontactsareText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AA1B018A-76A3-4D20-8E79-E621B97E6BA0");
                        fLDAPcontactsareText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fLDAPcontactsareText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP contacts are not managed or editable in the Address Book Manager. 11 LDAP replicated addresses in the database.");
                    }

                    return fLDAPcontactsareText;
                }
            }

            /// <summary>
            /// Gets Reference to DeleteButton41BButton
            /// </summary>
            public Button DeleteButton41BButton
            {
                get
                {
                    if (null == fDeleteButton41BButton)
                    {
                        fDeleteButton41BButton = new Button("DeleteButton41BButton", AddressBookManaWindow);
                        fDeleteButton41BButton.UIMap.Scope = UIASeachScope.Children;
                        fDeleteButton41BButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"41B96573-563B-4253-90EB-9F3492FA5BCB");
                        fDeleteButton41BButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fDeleteButton41BButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                    }

                    return fDeleteButton41BButton;
                }
            }

            /// <summary>
            /// Gets Reference to DeleteTextBlockDup1Text
            /// </summary>
            public Text DeleteTextBlockDup1Text
            {
                get
                {
                    if (null == fDeleteTextBlockDup1Text)
                    {
                        fDeleteTextBlockDup1Text = new Text("DeleteTextBlockDup1Text", DeleteButton41BButton);
                        fDeleteTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fDeleteTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fDeleteTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                    }

                    return fDeleteTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to EditButton548EBButton
            /// </summary>
            public Button EditButton548EBButton
            {
                get
                {
                    if (null == fEditButton548EBButton)
                    {
                        fEditButton548EBButton = new Button("EditButton548EBButton", AddressBookManaWindow);
                        fEditButton548EBButton.UIMap.Scope = UIASeachScope.Children;
                        fEditButton548EBButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"548EB117-4E78-4199-9C93-6D5BA80C353F");
                        fEditButton548EBButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fEditButton548EBButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit");
                    }

                    return fEditButton548EBButton;
                }
            }

            /// <summary>
            /// Gets Reference to EditTextBlockText
            /// </summary>
            public Text EditTextBlockText
            {
                get
                {
                    if (null == fEditTextBlockText)
                    {
                        fEditTextBlockText = new Text("EditTextBlockText", EditButton548EBButton);
                        fEditTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fEditTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fEditTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit");
                    }

                    return fEditTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to AddGroupButton7Button
            /// </summary>
            public Button AddGroupButton7Button
            {
                get
                {
                    if (null == fAddGroupButton7Button)
                    {
                        fAddGroupButton7Button = new Button("AddGroupButton7Button", AddressBookManaWindow);
                        fAddGroupButton7Button.UIMap.Scope = UIASeachScope.Children;
                        fAddGroupButton7Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7EE85ED2-2E3A-4700-9C01-52D668AEB8F2");
                        fAddGroupButton7Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fAddGroupButton7Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group");
                    }

                    return fAddGroupButton7Button;
                }
            }

            /// <summary>
            /// Gets Reference to AddGroupTextBloText
            /// </summary>
            public Text AddGroupTextBloText
            {
                get
                {
                    if (null == fAddGroupTextBloText)
                    {
                        fAddGroupTextBloText = new Text("AddGroupTextBloText", AddGroupButton7Button);
                        fAddGroupTextBloText.UIMap.Scope = UIASeachScope.Children;
                        fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group");
                    }

                    return fAddGroupTextBloText;
                }
            }

            /// <summary>
            /// Gets Reference to AddContactButtoButton
            /// </summary>
            public Button AddContactButtoButton
            {
                get
                {
                    if (null == fAddContactButtoButton)
                    {
                        fAddContactButtoButton = new Button("AddContactButtoButton", AddressBookManaWindow);
                        fAddContactButtoButton.UIMap.Scope = UIASeachScope.Children;
                        fAddContactButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"F80F266E-41DB-42b4-A289-A9F4B0869F9F");
                        fAddContactButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fAddContactButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Contact");
                    }

                    return fAddContactButtoButton;
                }
            }

            /// <summary>
            /// Gets Reference to AddContactTextBText
            /// </summary>
            public Text AddContactTextBText
            {
                get
                {
                    if (null == fAddContactTextBText)
                    {
                        fAddContactTextBText = new Text("AddContactTextBText", AddContactButtoButton);
                        fAddContactTextBText.UIMap.Scope = UIASeachScope.Children;
                        fAddContactTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAddContactTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Contact");
                    }

                    return fAddContactTextBText;
                }
            }

            /// <summary>
            /// Gets Reference to OKButtonFA1AC0AButton
            /// </summary>
            public Button OKButtonFA1AC0AButton
            {
                get
                {
                    if (null == fOKButtonFA1AC0AButton)
                    {
                        fOKButtonFA1AC0AButton = new Button("OKButtonFA1AC0AButton", AddressBookManaWindow);
                        fOKButtonFA1AC0AButton.UIMap.Scope = UIASeachScope.Children;
                        fOKButtonFA1AC0AButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FA1AC0AD-9D58-4cb9-A4B3-6E89E4E5BE0D");
                        fOKButtonFA1AC0AButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fOKButtonFA1AC0AButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    }

                    return fOKButtonFA1AC0AButton;
                }
            }

            /// <summary>
            /// Gets Reference to OKTextBlockDup0Text
            /// </summary>
            public Text OKTextBlockDup0Text
            {
                get
                {
                    if (null == fOKTextBlockDup0Text)
                    {
                        fOKTextBlockDup0Text = new Text("OKTextBlockDup0Text", OKButtonFA1AC0AButton);
                        fOKTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    }

                    return fOKTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to HPDigitalSendinTitleBar
            /// </summary>
            public TitleBar HPDigitalSendinTitleBar
            {
                get
                {
                    if (null == fHPDigitalSendinTitleBar)
                    {
                        fHPDigitalSendinTitleBar = new TitleBar("HPDigitalSendinTitleBar", HPDigitalSendinWindow);
                        fHPDigitalSendinTitleBar.UIMap.Scope = UIASeachScope.Children;
                        fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                        fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Digital Sending Software Configuration (Server IP Address: 15.75.49.181)");
                    }

                    return fHPDigitalSendinTitleBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemMenuBarSyDup2MenuBar
            /// </summary>
            public MenuBar SystemMenuBarSyDup2MenuBar
            {
                get
                {
                    if (null == fSystemMenuBarSyDup2MenuBar)
                    {
                        fSystemMenuBarSyDup2MenuBar = new MenuBar("SystemMenuBarSyDup2MenuBar", HPDigitalSendinTitleBar);
                        fSystemMenuBarSyDup2MenuBar.UIMap.Scope = UIASeachScope.Children;
                        fSystemMenuBarSyDup2MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                        fSystemMenuBarSyDup2MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                    }

                    return fSystemMenuBarSyDup2MenuBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemItem1Dup2MenuItem
            /// </summary>
            public MenuItem SystemItem1Dup2MenuItem
            {
                get
                {
                    if (null == fSystemItem1Dup2MenuItem)
                    {
                        fSystemItem1Dup2MenuItem = new MenuItem("SystemItem1Dup2MenuItem", SystemMenuBarSyDup2MenuBar);
                        fSystemItem1Dup2MenuItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemItem1Dup2MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                        fSystemItem1Dup2MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                    }

                    return fSystemItem1Dup2MenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to MinimizeMinimizDup1Button
            /// </summary>
            public Button MinimizeMinimizDup1Button
            {
                get
                {
                    if (null == fMinimizeMinimizDup1Button)
                    {
                        fMinimizeMinimizDup1Button = new Button("MinimizeMinimizDup1Button", HPDigitalSendinTitleBar);
                        fMinimizeMinimizDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                        fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                    }

                    return fMinimizeMinimizDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to MaximizeMaximizDup1Button
            /// </summary>
            public Button MaximizeMaximizDup1Button
            {
                get
                {
                    if (null == fMaximizeMaximizDup1Button)
                    {
                        fMaximizeMaximizDup1Button = new Button("MaximizeMaximizDup1Button", HPDigitalSendinTitleBar);
                        fMaximizeMaximizDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                        fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                    }

                    return fMaximizeMaximizDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to CloseCloseDup2Button
            /// </summary>
            public Button CloseCloseDup2Button
            {
                get
                {
                    if (null == fCloseCloseDup2Button)
                    {
                        fCloseCloseDup2Button = new Button("CloseCloseDup2Button", HPDigitalSendinTitleBar);
                        fCloseCloseDup2Button.UIMap.Scope = UIASeachScope.Children;
                        fCloseCloseDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                        fCloseCloseDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                    }

                    return fCloseCloseDup2Button;
                }
            }

            /// <summary>
            /// Gets Reference to HelpButtonCB8CFButton
            /// </summary>
            public Button HelpButtonCB8CFButton
            {
                get
                {
                    if (null == fHelpButtonCB8CFButton)
                    {
                        fHelpButtonCB8CFButton = new Button("HelpButtonCB8CFButton", HPDigitalSendinWindow);
                        fHelpButtonCB8CFButton.UIMap.Scope = UIASeachScope.Children;
                        fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CB8CF0C3-DFBE-49b8-B09B-03A34F5D4186");
                        fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                    }

                    return fHelpButtonCB8CFButton;
                }
            }

            /// <summary>
            /// Gets Reference to HelpTextBlockText
            /// </summary>
            public Text HelpTextBlockText
            {
                get
                {
                    if (null == fHelpTextBlockText)
                    {
                        fHelpTextBlockText = new Text("HelpTextBlockText", HelpButtonCB8CFButton);
                        fHelpTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                    }

                    return fHelpTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to ApplyButton61E2Button
            /// </summary>
            public Button ApplyButton61E2Button
            {
                get
                {
                    if (null == fApplyButton61E2Button)
                    {
                        fApplyButton61E2Button = new Button("ApplyButton61E2Button", HPDigitalSendinWindow);
                        fApplyButton61E2Button.UIMap.Scope = UIASeachScope.Children;
                        fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"61E2369B-F53B-4662-A361-B3034C4EFF67");
                        fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                    }

                    return fApplyButton61E2Button;
                }
            }

            /// <summary>
            /// Gets Reference to ApplyTextBlockText
            /// </summary>
            public Text ApplyTextBlockText
            {
                get
                {
                    if (null == fApplyTextBlockText)
                    {
                        fApplyTextBlockText = new Text("ApplyTextBlockText", ApplyButton61E2Button);
                        fApplyTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                    }

                    return fApplyTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to CancelButton65CButton
            /// </summary>
            public Button CancelButton65CButton
            {
                get
                {
                    if (null == fCancelButton65CButton)
                    {
                        fCancelButton65CButton = new Button("CancelButton65CButton", HPDigitalSendinWindow);
                        fCancelButton65CButton.UIMap.Scope = UIASeachScope.Children;
                        fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"65C76204-7AB5-4681-B7FD-2D8F02DA6D4B");
                        fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    }

                    return fCancelButton65CButton;
                }
            }

            /// <summary>
            /// Gets Reference to CancelTextBlockText
            /// </summary>
            public Text CancelTextBlockText
            {
                get
                {
                    if (null == fCancelTextBlockText)
                    {
                        fCancelTextBlockText = new Text("CancelTextBlockText", CancelButton65CButton);
                        fCancelTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fCancelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fCancelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    }

                    return fCancelTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to OKButtonCC2EF49Button
            /// </summary>
            public Button OKButtonCC2EF49Button
            {
                get
                {
                    if (null == fOKButtonCC2EF49Button)
                    {
                        fOKButtonCC2EF49Button = new Button("OKButtonCC2EF49Button", HPDigitalSendinWindow);
                        fOKButtonCC2EF49Button.UIMap.Scope = UIASeachScope.Children;
                        fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CC2EF491-0BD1-4ac5-9D00-AA61A9D6BA0C");
                        fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    }

                    return fOKButtonCC2EF49Button;
                }
            }

            /// <summary>
            /// Gets Reference to OKTextBlockDup1Text
            /// </summary>
            public Text OKTextBlockDup1Text
            {
                get
                {
                    if (null == fOKTextBlockDup1Text)
                    {
                        fOKTextBlockDup1Text = new Text("OKTextBlockDup1Text", OKButtonCC2EF49Button);
                        fOKTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    }

                    return fOKTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to TabControlec0fdTab
            /// </summary>
            public Tab TabControlec0fdTab
            {
                get
                {
                    if (null == fTabControlec0fdTab)
                    {
                        fTabControlec0fdTab = new Tab("TabControlec0fdTab", HPDigitalSendinWindow);
                        fTabControlec0fdTab.UIMap.Scope = UIASeachScope.Children;
                        fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ec0fd6cd-2ab8-482f-96a5-d1fa158f38d1");
                        fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                    }

                    return fTabControlec0fdTab;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup0TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup0TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup0TabItem)
                    {
                        fSystemWindowsCoDup0TabItem = new TabItem("SystemWindowsCoDup0TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup0TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1e2be878-0c03-4404-988c-54d0df925f0f");
                        fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup0TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to GeneralTextmGenText
            /// </summary>
            public Text GeneralTextmGenText
            {
                get
                {
                    if (null == fGeneralTextmGenText)
                    {
                        fGeneralTextmGenText = new Text("GeneralTextmGenText", SystemWindowsCoDup0TabItem);
                        fGeneralTextmGenText.UIMap.Scope = UIASeachScope.Children;
                        fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                        fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                    }

                    return fGeneralTextmGenText;
                }
            }

            /// <summary>
            /// Gets Reference to GeneralTextBlocText
            /// </summary>
            public Text GeneralTextBlocText
            {
                get
                {
                    if (null == fGeneralTextBlocText)
                    {
                        fGeneralTextBlocText = new Text("GeneralTextBlocText", GeneralTextmGenText);
                        fGeneralTextBlocText.UIMap.Scope = UIASeachScope.Children;
                        fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                    }

                    return fGeneralTextBlocText;
                }
            }

            /// <summary>
            /// Gets Reference to Text933345b04e3Text
            /// </summary>
            public Text Text933345b04e3Text
            {
                get
                {
                    if (null == fText933345b04e3Text)
                    {
                        fText933345b04e3Text = new Text("Text933345b04e3Text", SystemWindowsCoDup0TabItem);
                        fText933345b04e3Text.UIMap.Scope = UIASeachScope.Children;
                        fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"933345b0-4e39-44d3-a511-0077f3176ca4");
                        fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    }

                    return fText933345b04e3Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text786caf67344Text
            /// </summary>
            public Text Text786caf67344Text
            {
                get
                {
                    if (null == fText786caf67344Text)
                    {
                        fText786caf67344Text = new Text("Text786caf67344Text", SystemWindowsCoDup0TabItem);
                        fText786caf67344Text.UIMap.Scope = UIASeachScope.Children;
                        fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"786caf67-344f-4ddc-83a5-b9431fb36731");
                        fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fText786caf67344Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup1TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup1TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup1TabItem)
                    {
                        fSystemWindowsCoDup1TabItem = new TabItem("SystemWindowsCoDup1TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup1TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4e90d18a-f33c-43c0-8505-08f4a17169b5");
                        fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup1TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to AuthenticationTDup0Text
            /// </summary>
            public Text AuthenticationTDup0Text
            {
                get
                {
                    if (null == fAuthenticationTDup0Text)
                    {
                        fAuthenticationTDup0Text = new Text("AuthenticationTDup0Text", SystemWindowsCoDup1TabItem);
                        fAuthenticationTDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                        fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                    }

                    return fAuthenticationTDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to AuthenticationTDup1Text
            /// </summary>
            public Text AuthenticationTDup1Text
            {
                get
                {
                    if (null == fAuthenticationTDup1Text)
                    {
                        fAuthenticationTDup1Text = new Text("AuthenticationTDup1Text", AuthenticationTDup0Text);
                        fAuthenticationTDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                    }

                    return fAuthenticationTDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text31EC91730B9Text
            /// </summary>
            public Text Text31EC91730B9Text
            {
                get
                {
                    if (null == fText31EC91730B9Text)
                    {
                        fText31EC91730B9Text = new Text("Text31EC91730B9Text", SystemWindowsCoDup1TabItem);
                        fText31EC91730B9Text.UIMap.Scope = UIASeachScope.Children;
                        fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"31EC9173-0B98-4d46-BC99-7DF8EA2BE02F");
                        fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    }

                    return fText31EC91730B9Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextA479C271445Text
            /// </summary>
            public Text TextA479C271445Text
            {
                get
                {
                    if (null == fTextA479C271445Text)
                    {
                        fTextA479C271445Text = new Text("TextA479C271445Text", SystemWindowsCoDup1TabItem);
                        fTextA479C271445Text.UIMap.Scope = UIASeachScope.Children;
                        fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A479C271-445D-43f1-864D-7503428703E4");
                        fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fTextA479C271445Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup2TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup2TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup2TabItem)
                    {
                        fSystemWindowsCoDup2TabItem = new TabItem("SystemWindowsCoDup2TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup2TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33A07ED3-E1EE-411e-B583-7D0A3374100F");
                        fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup2TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to EmailTextmEmailText
            /// </summary>
            public Text EmailTextmEmailText
            {
                get
                {
                    if (null == fEmailTextmEmailText)
                    {
                        fEmailTextmEmailText = new Text("EmailTextmEmailText", SystemWindowsCoDup2TabItem);
                        fEmailTextmEmailText.UIMap.Scope = UIASeachScope.Children;
                        fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                        fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                    }

                    return fEmailTextmEmailText;
                }
            }

            /// <summary>
            /// Gets Reference to EmailTextBlockText
            /// </summary>
            public Text EmailTextBlockText
            {
                get
                {
                    if (null == fEmailTextBlockText)
                    {
                        fEmailTextBlockText = new Text("EmailTextBlockText", EmailTextmEmailText);
                        fEmailTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                    }

                    return fEmailTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to Text32de714a8bdText
            /// </summary>
            public Text Text32de714a8bdText
            {
                get
                {
                    if (null == fText32de714a8bdText)
                    {
                        fText32de714a8bdText = new Text("Text32de714a8bdText", SystemWindowsCoDup2TabItem);
                        fText32de714a8bdText.UIMap.Scope = UIASeachScope.Children;
                        fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"32de714a-8bda-4f11-bf20-b9a56b5f18bc");
                        fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    }

                    return fText32de714a8bdText;
                }
            }

            /// <summary>
            /// Gets Reference to Text3b2a8761f4fText
            /// </summary>
            public Text Text3b2a8761f4fText
            {
                get
                {
                    if (null == fText3b2a8761f4fText)
                    {
                        fText3b2a8761f4fText = new Text("Text3b2a8761f4fText", SystemWindowsCoDup2TabItem);
                        fText3b2a8761f4fText.UIMap.Scope = UIASeachScope.Children;
                        fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3b2a8761-f4f6-41b1-b08c-9c33744bdc43");
                        fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fText3b2a8761f4fText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBlockText
            /// </summary>
            public Text TextBlockText
            {
                get
                {
                    if (null == fTextBlockText)
                    {
                        fTextBlockText = new Text("TextBlockText", Text3b2a8761f4fText);
                        fTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup3TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup3TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup3TabItem)
                    {
                        fSystemWindowsCoDup3TabItem = new TabItem("SystemWindowsCoDup3TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup3TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4f116988-2b22-473f-bca3-094589a44954");
                        fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup3TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to FaxTextmFaxTabLText
            /// </summary>
            public Text FaxTextmFaxTabLText
            {
                get
                {
                    if (null == fFaxTextmFaxTabLText)
                    {
                        fFaxTextmFaxTabLText = new Text("FaxTextmFaxTabLText", SystemWindowsCoDup3TabItem);
                        fFaxTextmFaxTabLText.UIMap.Scope = UIASeachScope.Children;
                        fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                        fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                    }

                    return fFaxTextmFaxTabLText;
                }
            }

            /// <summary>
            /// Gets Reference to FaxTextBlockText
            /// </summary>
            public Text FaxTextBlockText
            {
                get
                {
                    if (null == fFaxTextBlockText)
                    {
                        fFaxTextBlockText = new Text("FaxTextBlockText", FaxTextmFaxTabLText);
                        fFaxTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                    }

                    return fFaxTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to TextD1ED4F16F38Text
            /// </summary>
            public Text TextD1ED4F16F38Text
            {
                get
                {
                    if (null == fTextD1ED4F16F38Text)
                    {
                        fTextD1ED4F16F38Text = new Text("TextD1ED4F16F38Text", SystemWindowsCoDup3TabItem);
                        fTextD1ED4F16F38Text.UIMap.Scope = UIASeachScope.Children;
                        fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D1ED4F16-F389-4dfd-A884-D258EDB48C11");
                        fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    }

                    return fTextD1ED4F16F38Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text7DDE04FD251Text
            /// </summary>
            public Text Text7DDE04FD251Text
            {
                get
                {
                    if (null == fText7DDE04FD251Text)
                    {
                        fText7DDE04FD251Text = new Text("Text7DDE04FD251Text", SystemWindowsCoDup3TabItem);
                        fText7DDE04FD251Text.UIMap.Scope = UIASeachScope.Children;
                        fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7DDE04FD-2519-44c2-A212-67B0838E1C91");
                        fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fText7DDE04FD251Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup4TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup4TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup4TabItem)
                    {
                        fSystemWindowsCoDup4TabItem = new TabItem("SystemWindowsCoDup4TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup4TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ff96a045-6e12-4ce3-ba85-b65d16c39ffb");
                        fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup4TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to SendtoFolderTexDup0Text
            /// </summary>
            public Text SendtoFolderTexDup0Text
            {
                get
                {
                    if (null == fSendtoFolderTexDup0Text)
                    {
                        fSendtoFolderTexDup0Text = new Text("SendtoFolderTexDup0Text", SystemWindowsCoDup4TabItem);
                        fSendtoFolderTexDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                        fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                    }

                    return fSendtoFolderTexDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to SendtoFolderTexDup1Text
            /// </summary>
            public Text SendtoFolderTexDup1Text
            {
                get
                {
                    if (null == fSendtoFolderTexDup1Text)
                    {
                        fSendtoFolderTexDup1Text = new Text("SendtoFolderTexDup1Text", SendtoFolderTexDup0Text);
                        fSendtoFolderTexDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                    }

                    return fSendtoFolderTexDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text7a57f43ecb1Text
            /// </summary>
            public Text Text7a57f43ecb1Text
            {
                get
                {
                    if (null == fText7a57f43ecb1Text)
                    {
                        fText7a57f43ecb1Text = new Text("Text7a57f43ecb1Text", SystemWindowsCoDup4TabItem);
                        fText7a57f43ecb1Text.UIMap.Scope = UIASeachScope.Children;
                        fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                        fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    }

                    return fText7a57f43ecb1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text654b650dd19Text
            /// </summary>
            public Text Text654b650dd19Text
            {
                get
                {
                    if (null == fText654b650dd19Text)
                    {
                        fText654b650dd19Text = new Text("Text654b650dd19Text", SystemWindowsCoDup4TabItem);
                        fText654b650dd19Text.UIMap.Scope = UIASeachScope.Children;
                        fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                        fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fText654b650dd19Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup5TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup5TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup5TabItem)
                    {
                        fSystemWindowsCoDup5TabItem = new TabItem("SystemWindowsCoDup5TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup5TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"38feb495-2893-4d8b-8961-31ebc2a3bd56");
                        fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup5TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to WorkflowsTextmWText
            /// </summary>
            public Text WorkflowsTextmWText
            {
                get
                {
                    if (null == fWorkflowsTextmWText)
                    {
                        fWorkflowsTextmWText = new Text("WorkflowsTextmWText", SystemWindowsCoDup5TabItem);
                        fWorkflowsTextmWText.UIMap.Scope = UIASeachScope.Children;
                        fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                        fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                    }

                    return fWorkflowsTextmWText;
                }
            }

            /// <summary>
            /// Gets Reference to WorkflowsTextBlText
            /// </summary>
            public Text WorkflowsTextBlText
            {
                get
                {
                    if (null == fWorkflowsTextBlText)
                    {
                        fWorkflowsTextBlText = new Text("WorkflowsTextBlText", WorkflowsTextmWText);
                        fWorkflowsTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                    }

                    return fWorkflowsTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to Text22D9C34E84CText
            /// </summary>
            public Text Text22D9C34E84CText
            {
                get
                {
                    if (null == fText22D9C34E84CText)
                    {
                        fText22D9C34E84CText = new Text("Text22D9C34E84CText", SystemWindowsCoDup5TabItem);
                        fText22D9C34E84CText.UIMap.Scope = UIASeachScope.Children;
                        fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22D9C34E-84C8-4995-AC9E-5B46F8284284");
                        fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    }

                    return fText22D9C34E84CText;
                }
            }

            /// <summary>
            /// Gets Reference to TextC8D15BD39C8Text
            /// </summary>
            public Text TextC8D15BD39C8Text
            {
                get
                {
                    if (null == fTextC8D15BD39C8Text)
                    {
                        fTextC8D15BD39C8Text = new Text("TextC8D15BD39C8Text", SystemWindowsCoDup5TabItem);
                        fTextC8D15BD39C8Text.UIMap.Scope = UIASeachScope.Children;
                        fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C8D15BD3-9C8D-484c-A5E2-309CA8AA6C56");
                        fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fTextC8D15BD39C8Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup6TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup6TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup6TabItem)
                    {
                        fSystemWindowsCoDup6TabItem = new TabItem("SystemWindowsCoDup6TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup6TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b8c06323-208e-4239-a523-a025661e0eab");
                        fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup6TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to AddressingTextmText
            /// </summary>
            public Text AddressingTextmText
            {
                get
                {
                    if (null == fAddressingTextmText)
                    {
                        fAddressingTextmText = new Text("AddressingTextmText", SystemWindowsCoDup6TabItem);
                        fAddressingTextmText.UIMap.Scope = UIASeachScope.Children;
                        fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                        fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                    }

                    return fAddressingTextmText;
                }
            }

            /// <summary>
            /// Gets Reference to AddressingTextBText
            /// </summary>
            public Text AddressingTextBText
            {
                get
                {
                    if (null == fAddressingTextBText)
                    {
                        fAddressingTextBText = new Text("AddressingTextBText", AddressingTextmText);
                        fAddressingTextBText.UIMap.Scope = UIASeachScope.Children;
                        fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                    }

                    return fAddressingTextBText;
                }
            }

            /// <summary>
            /// Gets Reference to Text47EB5CBA4D1Text
            /// </summary>
            public Text Text47EB5CBA4D1Text
            {
                get
                {
                    if (null == fText47EB5CBA4D1Text)
                    {
                        fText47EB5CBA4D1Text = new Text("Text47EB5CBA4D1Text", SystemWindowsCoDup6TabItem);
                        fText47EB5CBA4D1Text.UIMap.Scope = UIASeachScope.Children;
                        fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"47EB5CBA-4D1C-4eee-AD64-E26BDA31A3AC");
                        fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    }

                    return fText47EB5CBA4D1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text0757E148179Text
            /// </summary>
            public Text Text0757E148179Text
            {
                get
                {
                    if (null == fText0757E148179Text)
                    {
                        fText0757E148179Text = new Text("Text0757E148179Text", SystemWindowsCoDup6TabItem);
                        fText0757E148179Text.UIMap.Scope = UIASeachScope.Children;
                        fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0757E148-1794-4a5d-B378-6BE8049F65E1");
                        fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fText0757E148179Text;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPane
            /// </summary>
            public Pane ScrollViewerPane
            {
                get
                {
                    if (null == fScrollViewerPane)
                    {
                        fScrollViewerPane = new Pane("ScrollViewerPane", SystemWindowsCoDup6TabItem);
                        fScrollViewerPane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPane;
                }
            }

            /// <summary>
            /// Gets Reference to AddressingNetwoCustom
            /// </summary>
            public Custom AddressingNetwoCustom
            {
                get
                {
                    if (null == fAddressingNetwoCustom)
                    {
                        fAddressingNetwoCustom = new Custom("AddressingNetwoCustom", ScrollViewerPane);
                        fAddressingNetwoCustom.UIMap.Scope = UIASeachScope.Children;
                        fAddressingNetwoCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingNetworkContactsUserControl");
                        fAddressingNetwoCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AddressingNetworkContactsUserControl");
                    }

                    return fAddressingNetwoCustom;
                }
            }

            /// <summary>
            /// Gets Reference to ErrorConflictUsCustom
            /// </summary>
            public Custom ErrorConflictUsCustom
            {
                get
                {
                    if (null == fErrorConflictUsCustom)
                    {
                        fErrorConflictUsCustom = new Custom("ErrorConflictUsCustom", AddressingNetwoCustom);
                        fErrorConflictUsCustom.UIMap.Scope = UIASeachScope.Children;
                        fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mErrorConflictUserControl");
                        fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ErrorConflictUserControl");
                    }

                    return fErrorConflictUsCustom;
                }
            }

            /// <summary>
            /// Gets Reference to SearchMethodGroGroup
            /// </summary>
            public Group SearchMethodGroGroup
            {
                get
                {
                    if (null == fSearchMethodGroGroup)
                    {
                        fSearchMethodGroGroup = new Group("SearchMethodGroGroup", AddressingNetwoCustom);
                        fSearchMethodGroGroup.UIMap.Scope = UIASeachScope.Children;
                        fSearchMethodGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddrSearchMethodGroupBox");
                        fSearchMethodGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fSearchMethodGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search Method");
                    }

                    return fSearchMethodGroGroup;
                }
            }

            /// <summary>
            /// Gets Reference to SearchMethodTexText
            /// </summary>
            public Text SearchMethodTexText
            {
                get
                {
                    if (null == fSearchMethodTexText)
                    {
                        fSearchMethodTexText = new Text("SearchMethodTexText", SearchMethodGroGroup);
                        fSearchMethodTexText.UIMap.Scope = UIASeachScope.Children;
                        fSearchMethodTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fSearchMethodTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search Method");
                    }

                    return fSearchMethodTexText;
                }
            }

            /// <summary>
            /// Gets Reference to QuickSearchFindRadioButton
            /// </summary>
            public RadioButton QuickSearchFindRadioButton
            {
                get
                {
                    if (null == fQuickSearchFindRadioButton)
                    {
                        fQuickSearchFindRadioButton = new RadioButton("QuickSearchFindRadioButton", SearchMethodGroGroup);
                        fQuickSearchFindRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fQuickSearchFindRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a4cd062e-2a81-441c-b0f4-212efcecacf7");
                        fQuickSearchFindRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                        fQuickSearchFindRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Search (Find matches beginning with the search string.)");
                    }

                    return fQuickSearchFindRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to QuickSearchFindText
            /// </summary>
            public Text QuickSearchFindText
            {
                get
                {
                    if (null == fQuickSearchFindText)
                    {
                        fQuickSearchFindText = new Text("QuickSearchFindText", QuickSearchFindRadioButton);
                        fQuickSearchFindText.UIMap.Scope = UIASeachScope.Children;
                        fQuickSearchFindText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fQuickSearchFindText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Search (Find matches beginning with the search string.)");
                    }

                    return fQuickSearchFindText;
                }
            }

            /// <summary>
            /// Gets Reference to DetailedSearchFRadioButton
            /// </summary>
            public RadioButton DetailedSearchFRadioButton
            {
                get
                {
                    if (null == fDetailedSearchFRadioButton)
                    {
                        fDetailedSearchFRadioButton = new RadioButton("DetailedSearchFRadioButton", SearchMethodGroGroup);
                        fDetailedSearchFRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fDetailedSearchFRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84bc451d-eca7-4d72-adee-f6d05739d60e");
                        fDetailedSearchFRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                        fDetailedSearchFRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Detailed Search (Find matches containing the search string.)");
                    }

                    return fDetailedSearchFRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to DetailedSearchFText
            /// </summary>
            public Text DetailedSearchFText
            {
                get
                {
                    if (null == fDetailedSearchFText)
                    {
                        fDetailedSearchFText = new Text("DetailedSearchFText", DetailedSearchFRadioButton);
                        fDetailedSearchFText.UIMap.Scope = UIASeachScope.Children;
                        fDetailedSearchFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fDetailedSearchFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Detailed Search (Find matches containing the search string.)");
                    }

                    return fDetailedSearchFText;
                }
            }

            /// <summary>
            /// Gets Reference to PersonalContactGroup
            /// </summary>
            public Group PersonalContactGroup
            {
                get
                {
                    if (null == fPersonalContactGroup)
                    {
                        fPersonalContactGroup = new Group("PersonalContactGroup", AddressingNetwoCustom);
                        fPersonalContactGroup.UIMap.Scope = UIASeachScope.Children;
                        fPersonalContactGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddrPersonalContactsBox");
                        fPersonalContactGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fPersonalContactGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Personal Contacts");
                    }

                    return fPersonalContactGroup;
                }
            }

            /// <summary>
            /// Gets Reference to PersonalContactText
            /// </summary>
            public Text PersonalContactText
            {
                get
                {
                    if (null == fPersonalContactText)
                    {
                        fPersonalContactText = new Text("PersonalContactText", PersonalContactGroup);
                        fPersonalContactText.UIMap.Scope = UIASeachScope.Children;
                        fPersonalContactText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fPersonalContactText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Personal Contacts");
                    }

                    return fPersonalContactText;
                }
            }

            /// <summary>
            /// Gets Reference to ThepersonalcontText
            /// </summary>
            public Text ThepersonalcontText
            {
                get
                {
                    if (null == fThepersonalcontText)
                    {
                        fThepersonalcontText = new Text("ThepersonalcontText", PersonalContactGroup);
                        fThepersonalcontText.UIMap.Scope = UIASeachScope.Children;
                        fThepersonalcontText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fThepersonalcontText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"The personal contacts for a user can be retrieved from a Microsoft Exchange Server if the user has a Personal Address Book (PAB) associated with his or her user account.");
                    }

                    return fThepersonalcontText;
                }
            }

            /// <summary>
            /// Gets Reference to EnablePersonalCCheckBox
            /// </summary>
            public CheckBox EnablePersonalCCheckBox
            {
                get
                {
                    if (null == fEnablePersonalCCheckBox)
                    {
                        fEnablePersonalCCheckBox = new CheckBox("EnablePersonalCCheckBox", PersonalContactGroup);
                        fEnablePersonalCCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fEnablePersonalCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3edca417-7e14-47e9-8731-cf88146e55c7");
                        fEnablePersonalCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                        fEnablePersonalCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Personal Contacts (when users sign in to Windows at the device)");
                    }

                    return fEnablePersonalCCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to EnablePersonalCText
            /// </summary>
            public Text EnablePersonalCText
            {
                get
                {
                    if (null == fEnablePersonalCText)
                    {
                        fEnablePersonalCText = new Text("EnablePersonalCText", EnablePersonalCCheckBox);
                        fEnablePersonalCText.UIMap.Scope = UIASeachScope.Children;
                        fEnablePersonalCText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fEnablePersonalCText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Personal Contacts (when users sign in to Windows at the device)");
                    }

                    return fEnablePersonalCText;
                }
            }

            /// <summary>
            /// Gets Reference to TestExchangeSerGroup
            /// </summary>
            public Group TestExchangeSerGroup
            {
                get
                {
                    if (null == fTestExchangeSerGroup)
                    {
                        fTestExchangeSerGroup = new Group("TestExchangeSerGroup", PersonalContactGroup);
                        fTestExchangeSerGroup.UIMap.Scope = UIASeachScope.Children;
                        fTestExchangeSerGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mTestPersonalContactsServerGroupBox");
                        fTestExchangeSerGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fTestExchangeSerGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test Exchange Server");
                    }

                    return fTestExchangeSerGroup;
                }
            }

            /// <summary>
            /// Gets Reference to TestExchangeSerText
            /// </summary>
            public Text TestExchangeSerText
            {
                get
                {
                    if (null == fTestExchangeSerText)
                    {
                        fTestExchangeSerText = new Text("TestExchangeSerText", TestExchangeSerGroup);
                        fTestExchangeSerText.UIMap.Scope = UIASeachScope.Children;
                        fTestExchangeSerText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTestExchangeSerText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test Exchange Server");
                    }

                    return fTestExchangeSerText;
                }
            }

            /// <summary>
            /// Gets Reference to WindowsDomainDup0Text
            /// </summary>
            public Text WindowsDomainDup0Text
            {
                get
                {
                    if (null == fWindowsDomainDup0Text)
                    {
                        fWindowsDomainDup0Text = new Text("WindowsDomainDup0Text", TestExchangeSerGroup);
                        fWindowsDomainDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fWindowsDomainDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fWindowsDomainDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Domain");
                    }

                    return fWindowsDomainDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to WindowsDomainTeText
            /// </summary>
            public Text WindowsDomainTeText
            {
                get
                {
                    if (null == fWindowsDomainTeText)
                    {
                        fWindowsDomainTeText = new Text("WindowsDomainTeText", WindowsDomainDup0Text);
                        fWindowsDomainTeText.UIMap.Scope = UIASeachScope.Children;
                        fWindowsDomainTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fWindowsDomainTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Domain");
                    }

                    return fWindowsDomainTeText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox0857B9D0Edit
            /// </summary>
            public Edit TextBox0857B9D0Edit
            {
                get
                {
                    if (null == fTextBox0857B9D0Edit)
                    {
                        fTextBox0857B9D0Edit = new Edit("TextBox0857B9D0Edit", TestExchangeSerGroup);
                        fTextBox0857B9D0Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox0857B9D0Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0857B9D0-3168-40aa-8702-9566638D2738");
                        fTextBox0857B9D0Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox0857B9D0Edit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup1Pane
            /// </summary>
            public Pane ScrollViewerPARDup1Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup1Pane)
                    {
                        fScrollViewerPARDup1Pane = new Pane("ScrollViewerPARDup1Pane", TextBox0857B9D0Edit);
                        fScrollViewerPARDup1Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup1Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup1ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup1ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup1ScrollBar)
                    {
                        fScrollBarVerticDup1ScrollBar = new ScrollBar("ScrollBarVerticDup1ScrollBar", ScrollViewerPARDup1Pane);
                        fScrollBarVerticDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup1ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup1ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup1ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup1ScrollBar)
                    {
                        fScrollBarHorizoDup1ScrollBar = new ScrollBar("ScrollBarHorizoDup1ScrollBar", ScrollViewerPARDup1Pane);
                        fScrollBarHorizoDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup1ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to UsernameDup0Text
            /// </summary>
            public Text UsernameDup0Text
            {
                get
                {
                    if (null == fUsernameDup0Text)
                    {
                        fUsernameDup0Text = new Text("UsernameDup0Text", TestExchangeSerGroup);
                        fUsernameDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fUsernameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fUsernameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                    }

                    return fUsernameDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to UsernameTextBloDup0Text
            /// </summary>
            public Text UsernameTextBloDup0Text
            {
                get
                {
                    if (null == fUsernameTextBloDup0Text)
                    {
                        fUsernameTextBloDup0Text = new Text("UsernameTextBloDup0Text", UsernameDup0Text);
                        fUsernameTextBloDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fUsernameTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fUsernameTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                    }

                    return fUsernameTextBloDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox9B0DA4ABEdit
            /// </summary>
            public Edit TextBox9B0DA4ABEdit
            {
                get
                {
                    if (null == fTextBox9B0DA4ABEdit)
                    {
                        fTextBox9B0DA4ABEdit = new Edit("TextBox9B0DA4ABEdit", TestExchangeSerGroup);
                        fTextBox9B0DA4ABEdit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox9B0DA4ABEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9B0DA4AB-57EF-42dc-ADFE-210DEA97A0D7");
                        fTextBox9B0DA4ABEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox9B0DA4ABEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup2Pane
            /// </summary>
            public Pane ScrollViewerPARDup2Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup2Pane)
                    {
                        fScrollViewerPARDup2Pane = new Pane("ScrollViewerPARDup2Pane", TextBox9B0DA4ABEdit);
                        fScrollViewerPARDup2Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup2Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup2ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup2ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup2ScrollBar)
                    {
                        fScrollBarVerticDup2ScrollBar = new ScrollBar("ScrollBarVerticDup2ScrollBar", ScrollViewerPARDup2Pane);
                        fScrollBarVerticDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup2ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup2ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup2ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup2ScrollBar)
                    {
                        fScrollBarHorizoDup2ScrollBar = new ScrollBar("ScrollBarHorizoDup2ScrollBar", ScrollViewerPARDup2Pane);
                        fScrollBarHorizoDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup2ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to PasswordDup0Text
            /// </summary>
            public Text PasswordDup0Text
            {
                get
                {
                    if (null == fPasswordDup0Text)
                    {
                        fPasswordDup0Text = new Text("PasswordDup0Text", TestExchangeSerGroup);
                        fPasswordDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fPasswordDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fPasswordDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                    }

                    return fPasswordDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to PasswordTextBloDup0Text
            /// </summary>
            public Text PasswordTextBloDup0Text
            {
                get
                {
                    if (null == fPasswordTextBloDup0Text)
                    {
                        fPasswordTextBloDup0Text = new Text("PasswordTextBloDup0Text", PasswordDup0Text);
                        fPasswordTextBloDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fPasswordTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fPasswordTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                    }

                    return fPasswordTextBloDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to PasswordBox6B3CEdit
            /// </summary>
            public Edit PasswordBox6B3CEdit
            {
                get
                {
                    if (null == fPasswordBox6B3CEdit)
                    {
                        fPasswordBox6B3CEdit = new Edit("PasswordBox6B3CEdit", TestExchangeSerGroup);
                        fPasswordBox6B3CEdit.UIMap.Scope = UIASeachScope.Children;
                        fPasswordBox6B3CEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6B3C5D9A-9C11-4c17-A2EE-0C3749EE142F");
                        fPasswordBox6B3CEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"PasswordBox");
                    }

                    return fPasswordBox6B3CEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup3Pane
            /// </summary>
            public Pane ScrollViewerPARDup3Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup3Pane)
                    {
                        fScrollViewerPARDup3Pane = new Pane("ScrollViewerPARDup3Pane", PasswordBox6B3CEdit);
                        fScrollViewerPARDup3Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup3Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup3ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup3ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup3ScrollBar)
                    {
                        fScrollBarVerticDup3ScrollBar = new ScrollBar("ScrollBarVerticDup3ScrollBar", ScrollViewerPARDup3Pane);
                        fScrollBarVerticDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup3ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup3ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup3ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup3ScrollBar)
                    {
                        fScrollBarHorizoDup3ScrollBar = new ScrollBar("ScrollBarHorizoDup3ScrollBar", ScrollViewerPARDup3Pane);
                        fScrollBarHorizoDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup3ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to TestText
            /// </summary>
            public Text TestText
            {
                get
                {
                    if (null == fTestText)
                    {
                        fTestText = new Text("TestText", TestExchangeSerGroup);
                        fTestText.UIMap.Scope = UIASeachScope.Children;
                        fTestText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fTestText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    }

                    return fTestText;
                }
            }

            /// <summary>
            /// Gets Reference to TestTextBlockDup0Text
            /// </summary>
            public Text TestTextBlockDup0Text
            {
                get
                {
                    if (null == fTestTextBlockDup0Text)
                    {
                        fTestTextBlockDup0Text = new Text("TestTextBlockDup0Text", TestText);
                        fTestTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fTestTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTestTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    }

                    return fTestTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxDE0C2350Edit
            /// </summary>
            public Edit TextBoxDE0C2350Edit
            {
                get
                {
                    if (null == fTextBoxDE0C2350Edit)
                    {
                        fTextBoxDE0C2350Edit = new Edit("TextBoxDE0C2350Edit", TestExchangeSerGroup);
                        fTextBoxDE0C2350Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxDE0C2350Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DE0C2350-09E4-49dd-91B0-3260FFCC1A6E");
                        fTextBoxDE0C2350Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBoxDE0C2350Edit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup4Pane
            /// </summary>
            public Pane ScrollViewerPARDup4Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup4Pane)
                    {
                        fScrollViewerPARDup4Pane = new Pane("ScrollViewerPARDup4Pane", TextBoxDE0C2350Edit);
                        fScrollViewerPARDup4Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup4Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup4ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup4ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup4ScrollBar)
                    {
                        fScrollBarVerticDup4ScrollBar = new ScrollBar("ScrollBarVerticDup4ScrollBar", ScrollViewerPARDup4Pane);
                        fScrollBarVerticDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup4ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup4ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup4ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup4ScrollBar)
                    {
                        fScrollBarHorizoDup4ScrollBar = new ScrollBar("ScrollBarHorizoDup4ScrollBar", ScrollViewerPARDup4Pane);
                        fScrollBarHorizoDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup4ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to TestButtonA90BEButton
            /// </summary>
            public Button TestButtonA90BEButton
            {
                get
                {
                    if (null == fTestButtonA90BEButton)
                    {
                        fTestButtonA90BEButton = new Button("TestButtonA90BEButton", TestExchangeSerGroup);
                        fTestButtonA90BEButton.UIMap.Scope = UIASeachScope.Children;
                        fTestButtonA90BEButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A90BEE9C-966C-4bb4-9413-182793C513C6");
                        fTestButtonA90BEButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fTestButtonA90BEButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    }

                    return fTestButtonA90BEButton;
                }
            }

            /// <summary>
            /// Gets Reference to TestTextBlockDup1Text
            /// </summary>
            public Text TestTextBlockDup1Text
            {
                get
                {
                    if (null == fTestTextBlockDup1Text)
                    {
                        fTestTextBlockDup1Text = new Text("TestTextBlockDup1Text", TestButtonA90BEButton);
                        fTestTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fTestTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTestTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    }

                    return fTestTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPReplicationGroup
            /// </summary>
            public Group LDAPReplicationGroup
            {
                get
                {
                    if (null == fLDAPReplicationGroup)
                    {
                        fLDAPReplicationGroup = new Group("LDAPReplicationGroup", AddressingNetwoCustom);
                        fLDAPReplicationGroup.UIMap.Scope = UIASeachScope.Children;
                        fLDAPReplicationGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mNetworkContactsGroupBox");
                        fLDAPReplicationGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fLDAPReplicationGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Replication");
                    }

                    return fLDAPReplicationGroup;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPReplicationText
            /// </summary>
            public Text LDAPReplicationText
            {
                get
                {
                    if (null == fLDAPReplicationText)
                    {
                        fLDAPReplicationText = new Text("LDAPReplicationText", LDAPReplicationGroup);
                        fLDAPReplicationText.UIMap.Scope = UIASeachScope.Children;
                        fLDAPReplicationText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fLDAPReplicationText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Replication");
                    }

                    return fLDAPReplicationText;
                }
            }

            /// <summary>
            /// Gets Reference to EnableNetworkCoCheckBox
            /// </summary>
            public CheckBox EnableNetworkCoCheckBox
            {
                get
                {
                    if (null == fEnableNetworkCoCheckBox)
                    {
                        fEnableNetworkCoCheckBox = new CheckBox("EnableNetworkCoCheckBox", LDAPReplicationGroup);
                        fEnableNetworkCoCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fEnableNetworkCoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c771301b-e211-4fb2-809d-b4cb3bcd2067");
                        fEnableNetworkCoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                        fEnableNetworkCoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Network Contacts (use LDAP server)");
                    }

                    return fEnableNetworkCoCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to EnableNetworkCoText
            /// </summary>
            public Text EnableNetworkCoText
            {
                get
                {
                    if (null == fEnableNetworkCoText)
                    {
                        fEnableNetworkCoText = new Text("EnableNetworkCoText", EnableNetworkCoCheckBox);
                        fEnableNetworkCoText.UIMap.Scope = UIASeachScope.Children;
                        fEnableNetworkCoText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fEnableNetworkCoText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Network Contacts (use LDAP server)");
                    }

                    return fEnableNetworkCoText;
                }
            }

            /// <summary>
            /// Gets Reference to ExpanderFD3555EGroup
            /// </summary>
            public Group ExpanderFD3555EGroup
            {
                get
                {
                    if (null == fExpanderFD3555EGroup)
                    {
                        fExpanderFD3555EGroup = new Group("ExpanderFD3555EGroup", LDAPReplicationGroup);
                        fExpanderFD3555EGroup.UIMap.Scope = UIASeachScope.Children;
                        fExpanderFD3555EGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FD3555EA-5DD8-4e8c-8013-4FBB6F98067E");
                        fExpanderFD3555EGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                    }

                    return fExpanderFD3555EGroup;
                }
            }

            /// <summary>
            /// Gets Reference to ButtonHeaderSitDup0Button
            /// </summary>
            public Button ButtonHeaderSitDup0Button
            {
                get
                {
                    if (null == fButtonHeaderSitDup0Button)
                    {
                        fButtonHeaderSitDup0Button = new Button("ButtonHeaderSitDup0Button", ExpanderFD3555EGroup);
                        fButtonHeaderSitDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fButtonHeaderSitDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                        fButtonHeaderSitDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fButtonHeaderSitDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to NetworkDirectorGroup
            /// </summary>
            public Group NetworkDirectorGroup
            {
                get
                {
                    if (null == fNetworkDirectorGroup)
                    {
                        fNetworkDirectorGroup = new Group("NetworkDirectorGroup", LDAPReplicationGroup);
                        fNetworkDirectorGroup.UIMap.Scope = UIASeachScope.Children;
                        fNetworkDirectorGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mNetworkDirectoryServerGroupBox");
                        fNetworkDirectorGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fNetworkDirectorGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network Directory Server (LDAP)(Step 1)");
                    }

                    return fNetworkDirectorGroup;
                }
            }

            /// <summary>
            /// Gets Reference to NetworkDirectorText
            /// </summary>
            public Text NetworkDirectorText
            {
                get
                {
                    if (null == fNetworkDirectorText)
                    {
                        fNetworkDirectorText = new Text("NetworkDirectorText", NetworkDirectorGroup);
                        fNetworkDirectorText.UIMap.Scope = UIASeachScope.Children;
                        fNetworkDirectorText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fNetworkDirectorText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network Directory Server (LDAP)(Step 1)");
                    }

                    return fNetworkDirectorText;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPServerAddreDup0Text
            /// </summary>
            public Text LDAPServerAddreDup0Text
            {
                get
                {
                    if (null == fLDAPServerAddreDup0Text)
                    {
                        fLDAPServerAddreDup0Text = new Text("LDAPServerAddreDup0Text", NetworkDirectorGroup);
                        fLDAPServerAddreDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fLDAPServerAddreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fLDAPServerAddreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Server Address");
                    }

                    return fLDAPServerAddreDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPServerAddreDup1Text
            /// </summary>
            public Text LDAPServerAddreDup1Text
            {
                get
                {
                    if (null == fLDAPServerAddreDup1Text)
                    {
                        fLDAPServerAddreDup1Text = new Text("LDAPServerAddreDup1Text", LDAPServerAddreDup0Text);
                        fLDAPServerAddreDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fLDAPServerAddreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fLDAPServerAddreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Server Address");
                    }

                    return fLDAPServerAddreDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox858933a3Edit
            /// </summary>
            public Edit TextBox858933a3Edit
            {
                get
                {
                    if (null == fTextBox858933a3Edit)
                    {
                        fTextBox858933a3Edit = new Edit("TextBox858933a3Edit", NetworkDirectorGroup);
                        fTextBox858933a3Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox858933a3Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"858933a3-105f-40aa-8176-87a5d24120fa");
                        fTextBox858933a3Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox858933a3Edit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup5Pane
            /// </summary>
            public Pane ScrollViewerPARDup5Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup5Pane)
                    {
                        fScrollViewerPARDup5Pane = new Pane("ScrollViewerPARDup5Pane", TextBox858933a3Edit);
                        fScrollViewerPARDup5Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup5Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup5ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup5ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup5ScrollBar)
                    {
                        fScrollBarVerticDup5ScrollBar = new ScrollBar("ScrollBarVerticDup5ScrollBar", ScrollViewerPARDup5Pane);
                        fScrollBarVerticDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup5ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup5ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup5ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup5ScrollBar)
                    {
                        fScrollBarHorizoDup5ScrollBar = new ScrollBar("ScrollBarHorizoDup5ScrollBar", ScrollViewerPARDup5Pane);
                        fScrollBarHorizoDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup5ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to AutoFindButton3Button
            /// </summary>
            public Button AutoFindButton3Button
            {
                get
                {
                    if (null == fAutoFindButton3Button)
                    {
                        fAutoFindButton3Button = new Button("AutoFindButton3Button", NetworkDirectorGroup);
                        fAutoFindButton3Button.UIMap.Scope = UIASeachScope.Children;
                        fAutoFindButton3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"319d911c-7b59-45c9-9d29-e1b648578eab");
                        fAutoFindButton3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fAutoFindButton3Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                    }

                    return fAutoFindButton3Button;
                }
            }

            /// <summary>
            /// Gets Reference to AutoFindTextBloText
            /// </summary>
            public Text AutoFindTextBloText
            {
                get
                {
                    if (null == fAutoFindTextBloText)
                    {
                        fAutoFindTextBloText = new Text("AutoFindTextBloText", AutoFindButton3Button);
                        fAutoFindTextBloText.UIMap.Scope = UIASeachScope.Children;
                        fAutoFindTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAutoFindTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                    }

                    return fAutoFindTextBloText;
                }
            }

            /// <summary>
            /// Gets Reference to HostnameorIPaddDup0Text
            /// </summary>
            public Text HostnameorIPaddDup0Text
            {
                get
                {
                    if (null == fHostnameorIPaddDup0Text)
                    {
                        fHostnameorIPaddDup0Text = new Text("HostnameorIPaddDup0Text", NetworkDirectorGroup);
                        fHostnameorIPaddDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fHostnameorIPaddDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fHostnameorIPaddDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname or IP address");
                    }

                    return fHostnameorIPaddDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to HostnameorIPaddDup1Text
            /// </summary>
            public Text HostnameorIPaddDup1Text
            {
                get
                {
                    if (null == fHostnameorIPaddDup1Text)
                    {
                        fHostnameorIPaddDup1Text = new Text("HostnameorIPaddDup1Text", HostnameorIPaddDup0Text);
                        fHostnameorIPaddDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fHostnameorIPaddDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fHostnameorIPaddDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname or IP address");
                    }

                    return fHostnameorIPaddDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to PortText
            /// </summary>
            public Text PortText
            {
                get
                {
                    if (null == fPortText)
                    {
                        fPortText = new Text("PortText", NetworkDirectorGroup);
                        fPortText.UIMap.Scope = UIASeachScope.Children;
                        fPortText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fPortText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port");
                    }

                    return fPortText;
                }
            }

            /// <summary>
            /// Gets Reference to PortTextBlockText
            /// </summary>
            public Text PortTextBlockText
            {
                get
                {
                    if (null == fPortTextBlockText)
                    {
                        fPortTextBlockText = new Text("PortTextBlockText", PortText);
                        fPortTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fPortTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fPortTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port");
                    }

                    return fPortTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to UseasecureconneCheckBox
            /// </summary>
            public CheckBox UseasecureconneCheckBox
            {
                get
                {
                    if (null == fUseasecureconneCheckBox)
                    {
                        fUseasecureconneCheckBox = new CheckBox("UseasecureconneCheckBox", NetworkDirectorGroup);
                        fUseasecureconneCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fUseasecureconneCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f664dd2f-3a25-449d-adce-75616a828eef");
                        fUseasecureconneCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                        fUseasecureconneCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use a secure connection (SSL)");
                    }

                    return fUseasecureconneCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to UseasecureconneText
            /// </summary>
            public Text UseasecureconneText
            {
                get
                {
                    if (null == fUseasecureconneText)
                    {
                        fUseasecureconneText = new Text("UseasecureconneText", UseasecureconneCheckBox);
                        fUseasecureconneText.UIMap.Scope = UIASeachScope.Children;
                        fUseasecureconneText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fUseasecureconneText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use a secure connection (SSL)");
                    }

                    return fUseasecureconneText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox79f22c3aEdit
            /// </summary>
            public Edit TextBox79f22c3aEdit
            {
                get
                {
                    if (null == fTextBox79f22c3aEdit)
                    {
                        fTextBox79f22c3aEdit = new Edit("TextBox79f22c3aEdit", NetworkDirectorGroup);
                        fTextBox79f22c3aEdit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox79f22c3aEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"79f22c3a-7b6e-4c21-96ce-aefbf8ca36aa");
                        fTextBox79f22c3aEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox79f22c3aEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup6Pane
            /// </summary>
            public Pane ScrollViewerPARDup6Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup6Pane)
                    {
                        fScrollViewerPARDup6Pane = new Pane("ScrollViewerPARDup6Pane", TextBox79f22c3aEdit);
                        fScrollViewerPARDup6Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup6Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup6ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup6ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup6ScrollBar)
                    {
                        fScrollBarVerticDup6ScrollBar = new ScrollBar("ScrollBarVerticDup6ScrollBar", ScrollViewerPARDup6Pane);
                        fScrollBarVerticDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup6ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup6ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup6ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup6ScrollBar)
                    {
                        fScrollBarHorizoDup6ScrollBar = new ScrollBar("ScrollBarHorizoDup6ScrollBar", ScrollViewerPARDup6Pane);
                        fScrollBarHorizoDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup6ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to Port636isthedefDup0Text
            /// </summary>
            public Text Port636isthedefDup0Text
            {
                get
                {
                    if (null == fPort636isthedefDup0Text)
                    {
                        fPort636isthedefDup0Text = new Text("Port636isthedefDup0Text", NetworkDirectorGroup);
                        fPort636isthedefDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fPort636isthedefDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fPort636isthedefDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port 636 is the default for TLS or SSL");
                    }

                    return fPort636isthedefDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to Port636isthedefDup1Text
            /// </summary>
            public Text Port636isthedefDup1Text
            {
                get
                {
                    if (null == fPort636isthedefDup1Text)
                    {
                        fPort636isthedefDup1Text = new Text("Port636isthedefDup1Text", Port636isthedefDup0Text);
                        fPort636isthedefDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fPort636isthedefDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fPort636isthedefDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port 636 is the default for TLS or SSL");
                    }

                    return fPort636isthedefDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to ExpanderDD1518FGroup
            /// </summary>
            public Group ExpanderDD1518FGroup
            {
                get
                {
                    if (null == fExpanderDD1518FGroup)
                    {
                        fExpanderDD1518FGroup = new Group("ExpanderDD1518FGroup", LDAPReplicationGroup);
                        fExpanderDD1518FGroup.UIMap.Scope = UIASeachScope.Children;
                        fExpanderDD1518FGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DD1518F6-229D-4794-BC45-4911B62A8276");
                        fExpanderDD1518FGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                    }

                    return fExpanderDD1518FGroup;
                }
            }

            /// <summary>
            /// Gets Reference to ButtonHeaderSitDup1Button
            /// </summary>
            public Button ButtonHeaderSitDup1Button
            {
                get
                {
                    if (null == fButtonHeaderSitDup1Button)
                    {
                        fButtonHeaderSitDup1Button = new Button("ButtonHeaderSitDup1Button", ExpanderDD1518FGroup);
                        fButtonHeaderSitDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fButtonHeaderSitDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                        fButtonHeaderSitDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fButtonHeaderSitDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to ServerAuthenticGroup
            /// </summary>
            public Group ServerAuthenticGroup
            {
                get
                {
                    if (null == fServerAuthenticGroup)
                    {
                        fServerAuthenticGroup = new Group("ServerAuthenticGroup", LDAPReplicationGroup);
                        fServerAuthenticGroup.UIMap.Scope = UIASeachScope.Children;
                        fServerAuthenticGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mServerAuthRequirementsGroupBox");
                        fServerAuthenticGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fServerAuthenticGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server Authentication Requirements(Step 2)");
                    }

                    return fServerAuthenticGroup;
                }
            }

            /// <summary>
            /// Gets Reference to ServerAuthenticText
            /// </summary>
            public Text ServerAuthenticText
            {
                get
                {
                    if (null == fServerAuthenticText)
                    {
                        fServerAuthenticText = new Text("ServerAuthenticText", ServerAuthenticGroup);
                        fServerAuthenticText.UIMap.Scope = UIASeachScope.Children;
                        fServerAuthenticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fServerAuthenticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server Authentication Requirements(Step 2)");
                    }

                    return fServerAuthenticText;
                }
            }

            /// <summary>
            /// Gets Reference to ServerdoesnotreRadioButton
            /// </summary>
            public RadioButton ServerdoesnotreRadioButton
            {
                get
                {
                    if (null == fServerdoesnotreRadioButton)
                    {
                        fServerdoesnotreRadioButton = new RadioButton("ServerdoesnotreRadioButton", ServerAuthenticGroup);
                        fServerdoesnotreRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fServerdoesnotreRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"836ec313-c8b4-46ce-ac74-630bc6e0753a");
                        fServerdoesnotreRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                        fServerdoesnotreRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server does not require authentication");
                    }

                    return fServerdoesnotreRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to ServerdoesnotreText
            /// </summary>
            public Text ServerdoesnotreText
            {
                get
                {
                    if (null == fServerdoesnotreText)
                    {
                        fServerdoesnotreText = new Text("ServerdoesnotreText", ServerdoesnotreRadioButton);
                        fServerdoesnotreText.UIMap.Scope = UIASeachScope.Children;
                        fServerdoesnotreText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fServerdoesnotreText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server does not require authentication");
                    }

                    return fServerdoesnotreText;
                }
            }

            /// <summary>
            /// Gets Reference to ServerrequiresaRadioButton
            /// </summary>
            public RadioButton ServerrequiresaRadioButton
            {
                get
                {
                    if (null == fServerrequiresaRadioButton)
                    {
                        fServerrequiresaRadioButton = new RadioButton("ServerrequiresaRadioButton", ServerAuthenticGroup);
                        fServerrequiresaRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fServerrequiresaRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"58374bee-32a1-40ba-9456-9722d6064b3f");
                        fServerrequiresaRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                        fServerrequiresaRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server requires authentication");
                    }

                    return fServerrequiresaRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to ServerrequiresaText
            /// </summary>
            public Text ServerrequiresaText
            {
                get
                {
                    if (null == fServerrequiresaText)
                    {
                        fServerrequiresaText = new Text("ServerrequiresaText", ServerrequiresaRadioButton);
                        fServerrequiresaText.UIMap.Scope = UIASeachScope.Children;
                        fServerrequiresaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fServerrequiresaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server requires authentication");
                    }

                    return fServerrequiresaText;
                }
            }

            /// <summary>
            /// Gets Reference to ComboBox5cd52d1ComboBox
            /// </summary>
            public ComboBox ComboBox5cd52d1ComboBox
            {
                get
                {
                    if (null == fComboBox5cd52d1ComboBox)
                    {
                        fComboBox5cd52d1ComboBox = new ComboBox("ComboBox5cd52d1ComboBox", ServerAuthenticGroup);
                        fComboBox5cd52d1ComboBox.UIMap.Scope = UIASeachScope.Children;
                        fComboBox5cd52d1ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5cd52d18-4bd7-4996-8fe1-acb2c3f2ff84");
                        fComboBox5cd52d1ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    }

                    return fComboBox5cd52d1ComboBox;
                }
            }

            /// <summary>
            /// Gets Reference to WindowsorLDAPsiText
            /// </summary>
            public Text WindowsorLDAPsiText
            {
                get
                {
                    if (null == fWindowsorLDAPsiText)
                    {
                        fWindowsorLDAPsiText = new Text("WindowsorLDAPsiText", ServerAuthenticGroup);
                        fWindowsorLDAPsiText.UIMap.Scope = UIASeachScope.Children;
                        fWindowsorLDAPsiText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33ad2d95-602a-471f-b536-fbc90d4fa5c0");
                        fWindowsorLDAPsiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fWindowsorLDAPsiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows or LDAP sign in should be required for using the E-mail and Fax functions at the device to successfully query the LDAP server.");
                    }

                    return fWindowsorLDAPsiText;
                }
            }

            /// <summary>
            /// Gets Reference to UsernameDup1Text
            /// </summary>
            public Text UsernameDup1Text
            {
                get
                {
                    if (null == fUsernameDup1Text)
                    {
                        fUsernameDup1Text = new Text("UsernameDup1Text", ServerAuthenticGroup);
                        fUsernameDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fUsernameDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fUsernameDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                    }

                    return fUsernameDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to UsernameTextBloDup1Text
            /// </summary>
            public Text UsernameTextBloDup1Text
            {
                get
                {
                    if (null == fUsernameTextBloDup1Text)
                    {
                        fUsernameTextBloDup1Text = new Text("UsernameTextBloDup1Text", UsernameDup1Text);
                        fUsernameTextBloDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fUsernameTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fUsernameTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                    }

                    return fUsernameTextBloDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxb54cac9eEdit
            /// </summary>
            public Edit TextBoxb54cac9eEdit
            {
                get
                {
                    if (null == fTextBoxb54cac9eEdit)
                    {
                        fTextBoxb54cac9eEdit = new Edit("TextBoxb54cac9eEdit", ServerAuthenticGroup);
                        fTextBoxb54cac9eEdit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxb54cac9eEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b54cac9e-8c97-45bc-9e83-a304dfd477fb");
                        fTextBoxb54cac9eEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBoxb54cac9eEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup7Pane
            /// </summary>
            public Pane ScrollViewerPARDup7Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup7Pane)
                    {
                        fScrollViewerPARDup7Pane = new Pane("ScrollViewerPARDup7Pane", TextBoxb54cac9eEdit);
                        fScrollViewerPARDup7Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup7Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup7Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup7Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup7ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup7ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup7ScrollBar)
                    {
                        fScrollBarVerticDup7ScrollBar = new ScrollBar("ScrollBarVerticDup7ScrollBar", ScrollViewerPARDup7Pane);
                        fScrollBarVerticDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup7ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup7ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup7ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup7ScrollBar)
                    {
                        fScrollBarHorizoDup7ScrollBar = new ScrollBar("ScrollBarHorizoDup7ScrollBar", ScrollViewerPARDup7Pane);
                        fScrollBarHorizoDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup7ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to PasswordDup1Text
            /// </summary>
            public Text PasswordDup1Text
            {
                get
                {
                    if (null == fPasswordDup1Text)
                    {
                        fPasswordDup1Text = new Text("PasswordDup1Text", ServerAuthenticGroup);
                        fPasswordDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fPasswordDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fPasswordDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                    }

                    return fPasswordDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to PasswordTextBloDup1Text
            /// </summary>
            public Text PasswordTextBloDup1Text
            {
                get
                {
                    if (null == fPasswordTextBloDup1Text)
                    {
                        fPasswordTextBloDup1Text = new Text("PasswordTextBloDup1Text", PasswordDup1Text);
                        fPasswordTextBloDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fPasswordTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fPasswordTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                    }

                    return fPasswordTextBloDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to PasswordBox8ed9Edit
            /// </summary>
            public Edit PasswordBox8ed9Edit
            {
                get
                {
                    if (null == fPasswordBox8ed9Edit)
                    {
                        fPasswordBox8ed9Edit = new Edit("PasswordBox8ed9Edit", ServerAuthenticGroup);
                        fPasswordBox8ed9Edit.UIMap.Scope = UIASeachScope.Children;
                        fPasswordBox8ed9Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8ed98c8c-05d8-4392-be81-d6165bab46cd");
                        fPasswordBox8ed9Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"PasswordBox");
                    }

                    return fPasswordBox8ed9Edit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup8Pane
            /// </summary>
            public Pane ScrollViewerPARDup8Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup8Pane)
                    {
                        fScrollViewerPARDup8Pane = new Pane("ScrollViewerPARDup8Pane", PasswordBox8ed9Edit);
                        fScrollViewerPARDup8Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup8Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                        fScrollViewerPARDup8Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPARDup8Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup8ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup8ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup8ScrollBar)
                    {
                        fScrollBarVerticDup8ScrollBar = new ScrollBar("ScrollBarVerticDup8ScrollBar", ScrollViewerPARDup8Pane);
                        fScrollBarVerticDup8ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup8ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup8ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup8ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup8ScrollBar)
                    {
                        fScrollBarHorizoDup8ScrollBar = new ScrollBar("ScrollBarHorizoDup8ScrollBar", ScrollViewerPARDup8Pane);
                        fScrollBarHorizoDup8ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup8ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to WindowsDomainDup1Text
            /// </summary>
            public Text WindowsDomainDup1Text
            {
                get
                {
                    if (null == fWindowsDomainDup1Text)
                    {
                        fWindowsDomainDup1Text = new Text("WindowsDomainDup1Text", ServerAuthenticGroup);
                        fWindowsDomainDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fWindowsDomainDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fWindowsDomainDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Domain");
                    }

                    return fWindowsDomainDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox1cce79f4Edit
            /// </summary>
            public Edit TextBox1cce79f4Edit
            {
                get
                {
                    if (null == fTextBox1cce79f4Edit)
                    {
                        fTextBox1cce79f4Edit = new Edit("TextBox1cce79f4Edit", ServerAuthenticGroup);
                        fTextBox1cce79f4Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox1cce79f4Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1cce79f4-4405-454b-8b93-73914a8c1e45");
                        fTextBox1cce79f4Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox1cce79f4Edit;
                }
            }

            /// <summary>
            /// Gets Reference to KerberosDefaultText
            /// </summary>
            public Text KerberosDefaultText
            {
                get
                {
                    if (null == fKerberosDefaultText)
                    {
                        fKerberosDefaultText = new Text("KerberosDefaultText", ServerAuthenticGroup);
                        fKerberosDefaultText.UIMap.Scope = UIASeachScope.Children;
                        fKerberosDefaultText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fKerberosDefaultText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Kerberos Default Realm");
                    }

                    return fKerberosDefaultText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox757e1b31Edit
            /// </summary>
            public Edit TextBox757e1b31Edit
            {
                get
                {
                    if (null == fTextBox757e1b31Edit)
                    {
                        fTextBox757e1b31Edit = new Edit("TextBox757e1b31Edit", ServerAuthenticGroup);
                        fTextBox757e1b31Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox757e1b31Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"757e1b31-908c-481f-8d51-53d856ee65e8");
                        fTextBox757e1b31Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox757e1b31Edit;
                }
            }

            /// <summary>
            /// Gets Reference to KerberosServerHText
            /// </summary>
            public Text KerberosServerHText
            {
                get
                {
                    if (null == fKerberosServerHText)
                    {
                        fKerberosServerHText = new Text("KerberosServerHText", ServerAuthenticGroup);
                        fKerberosServerHText.UIMap.Scope = UIASeachScope.Children;
                        fKerberosServerHText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fKerberosServerHText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Kerberos Server Hostname");
                    }

                    return fKerberosServerHText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxe5cfa172Edit
            /// </summary>
            public Edit TextBoxe5cfa172Edit
            {
                get
                {
                    if (null == fTextBoxe5cfa172Edit)
                    {
                        fTextBoxe5cfa172Edit = new Edit("TextBoxe5cfa172Edit", ServerAuthenticGroup);
                        fTextBoxe5cfa172Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxe5cfa172Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e5cfa172-a41a-4d1f-9605-5bb415448a80");
                        fTextBoxe5cfa172Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBoxe5cfa172Edit;
                }
            }

            /// <summary>
            /// Gets Reference to KerberosServerPText
            /// </summary>
            public Text KerberosServerPText
            {
                get
                {
                    if (null == fKerberosServerPText)
                    {
                        fKerberosServerPText = new Text("KerberosServerPText", ServerAuthenticGroup);
                        fKerberosServerPText.UIMap.Scope = UIASeachScope.Children;
                        fKerberosServerPText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fKerberosServerPText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Kerberos Server Port");
                    }

                    return fKerberosServerPText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxf986abfaEdit
            /// </summary>
            public Edit TextBoxf986abfaEdit
            {
                get
                {
                    if (null == fTextBoxf986abfaEdit)
                    {
                        fTextBoxf986abfaEdit = new Edit("TextBoxf986abfaEdit", ServerAuthenticGroup);
                        fTextBoxf986abfaEdit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxf986abfaEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f986abfa-5563-459f-a15c-cd0c9ba2ffdf");
                        fTextBoxf986abfaEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBoxf986abfaEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ExpanderB7151C3Group
            /// </summary>
            public Group ExpanderB7151C3Group
            {
                get
                {
                    if (null == fExpanderB7151C3Group)
                    {
                        fExpanderB7151C3Group = new Group("ExpanderB7151C3Group", LDAPReplicationGroup);
                        fExpanderB7151C3Group.UIMap.Scope = UIASeachScope.Children;
                        fExpanderB7151C3Group.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B7151C32-813E-49fe-A052-F101BABC03F7");
                        fExpanderB7151C3Group.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                    }

                    return fExpanderB7151C3Group;
                }
            }

            /// <summary>
            /// Gets Reference to ButtonHeaderSitDup2Button
            /// </summary>
            public Button ButtonHeaderSitDup2Button
            {
                get
                {
                    if (null == fButtonHeaderSitDup2Button)
                    {
                        fButtonHeaderSitDup2Button = new Button("ButtonHeaderSitDup2Button", ExpanderB7151C3Group);
                        fButtonHeaderSitDup2Button.UIMap.Scope = UIASeachScope.Children;
                        fButtonHeaderSitDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                        fButtonHeaderSitDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fButtonHeaderSitDup2Button;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPDatabaseSeaGroup
            /// </summary>
            public Group LDAPDatabaseSeaGroup
            {
                get
                {
                    if (null == fLDAPDatabaseSeaGroup)
                    {
                        fLDAPDatabaseSeaGroup = new Group("LDAPDatabaseSeaGroup", LDAPReplicationGroup);
                        fLDAPDatabaseSeaGroup.UIMap.Scope = UIASeachScope.Children;
                        fLDAPDatabaseSeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mLDAPDbSearchSettingsGroupBox");
                        fLDAPDatabaseSeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fLDAPDatabaseSeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Database Search Settings(Step 3)");
                    }

                    return fLDAPDatabaseSeaGroup;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPDatabaseSeaText
            /// </summary>
            public Text LDAPDatabaseSeaText
            {
                get
                {
                    if (null == fLDAPDatabaseSeaText)
                    {
                        fLDAPDatabaseSeaText = new Text("LDAPDatabaseSeaText", LDAPDatabaseSeaGroup);
                        fLDAPDatabaseSeaText.UIMap.Scope = UIASeachScope.Children;
                        fLDAPDatabaseSeaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fLDAPDatabaseSeaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Database Search Settings(Step 3)");
                    }

                    return fLDAPDatabaseSeaText;
                }
            }

            /// <summary>
            /// Gets Reference to PathtostartsearText
            /// </summary>
            public Text PathtostartsearText
            {
                get
                {
                    if (null == fPathtostartsearText)
                    {
                        fPathtostartsearText = new Text("PathtostartsearText", LDAPDatabaseSeaGroup);
                        fPathtostartsearText.UIMap.Scope = UIASeachScope.Children;
                        fPathtostartsearText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fPathtostartsearText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Path to start search (BaseDN, Search Root):");
                    }

                    return fPathtostartsearText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox2e2cfbd5Edit
            /// </summary>
            public Edit TextBox2e2cfbd5Edit
            {
                get
                {
                    if (null == fTextBox2e2cfbd5Edit)
                    {
                        fTextBox2e2cfbd5Edit = new Edit("TextBox2e2cfbd5Edit", LDAPDatabaseSeaGroup);
                        fTextBox2e2cfbd5Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox2e2cfbd5Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2e2cfbd5-5072-4c10-b4a7-bb6d3e1e7c34");
                        fTextBox2e2cfbd5Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox2e2cfbd5Edit;
                }
            }

            /// <summary>
            /// Gets Reference to AutoFindButton4Button
            /// </summary>
            public Button AutoFindButton4Button
            {
                get
                {
                    if (null == fAutoFindButton4Button)
                    {
                        fAutoFindButton4Button = new Button("AutoFindButton4Button", LDAPDatabaseSeaGroup);
                        fAutoFindButton4Button.UIMap.Scope = UIASeachScope.Children;
                        fAutoFindButton4Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"44a89ec4-7799-4c0c-a4b7-c5d8fd9a005d");
                        fAutoFindButton4Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fAutoFindButton4Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                    }

                    return fAutoFindButton4Button;
                }
            }

            /// <summary>
            /// Gets Reference to SourceforAttribText
            /// </summary>
            public Text SourceforAttribText
            {
                get
                {
                    if (null == fSourceforAttribText)
                    {
                        fSourceforAttribText = new Text("SourceforAttribText", LDAPDatabaseSeaGroup);
                        fSourceforAttribText.UIMap.Scope = UIASeachScope.Children;
                        fSourceforAttribText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fSourceforAttribText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Source for Attribute Names:");
                    }

                    return fSourceforAttribText;
                }
            }

            /// <summary>
            /// Gets Reference to UseActiveDirectRadioButton
            /// </summary>
            public RadioButton UseActiveDirectRadioButton
            {
                get
                {
                    if (null == fUseActiveDirectRadioButton)
                    {
                        fUseActiveDirectRadioButton = new RadioButton("UseActiveDirectRadioButton", LDAPDatabaseSeaGroup);
                        fUseActiveDirectRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fUseActiveDirectRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6b6281c0-c178-4b4c-ba63-1a672886cb81");
                        fUseActiveDirectRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                        fUseActiveDirectRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use Active Directory Default");
                    }

                    return fUseActiveDirectRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to UseExchange55DeRadioButton
            /// </summary>
            public RadioButton UseExchange55DeRadioButton
            {
                get
                {
                    if (null == fUseExchange55DeRadioButton)
                    {
                        fUseExchange55DeRadioButton = new RadioButton("UseExchange55DeRadioButton", LDAPDatabaseSeaGroup);
                        fUseExchange55DeRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fUseExchange55DeRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a1ce7515-9374-451a-81b9-fdb7f597eeff");
                        fUseExchange55DeRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                        fUseExchange55DeRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use Exchange 5.5 Default");
                    }

                    return fUseExchange55DeRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to UseCustomAttribRadioButton
            /// </summary>
            public RadioButton UseCustomAttribRadioButton
            {
                get
                {
                    if (null == fUseCustomAttribRadioButton)
                    {
                        fUseCustomAttribRadioButton = new RadioButton("UseCustomAttribRadioButton", LDAPDatabaseSeaGroup);
                        fUseCustomAttribRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fUseCustomAttribRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"dc1b3180-3ab6-48b5-9c29-d9ecc10e5cbf");
                        fUseCustomAttribRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                        fUseCustomAttribRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use Custom Attributes");
                    }

                    return fUseCustomAttribRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to AutoFindButton8Button
            /// </summary>
            public Button AutoFindButton8Button
            {
                get
                {
                    if (null == fAutoFindButton8Button)
                    {
                        fAutoFindButton8Button = new Button("AutoFindButton8Button", LDAPDatabaseSeaGroup);
                        fAutoFindButton8Button.UIMap.Scope = UIASeachScope.Children;
                        fAutoFindButton8Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8ac869f3-a8e9-4be1-ad80-67cf52953b0f");
                        fAutoFindButton8Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fAutoFindButton8Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Find...");
                    }

                    return fAutoFindButton8Button;
                }
            }

            /// <summary>
            /// Gets Reference to MatchtheRecipieText
            /// </summary>
            public Text MatchtheRecipieText
            {
                get
                {
                    if (null == fMatchtheRecipieText)
                    {
                        fMatchtheRecipieText = new Text("MatchtheRecipieText", LDAPDatabaseSeaGroup);
                        fMatchtheRecipieText.UIMap.Scope = UIASeachScope.Children;
                        fMatchtheRecipieText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fMatchtheRecipieText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Match the Recipient's Name with this attribute:");
                    }

                    return fMatchtheRecipieText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox0fd71265Edit
            /// </summary>
            public Edit TextBox0fd71265Edit
            {
                get
                {
                    if (null == fTextBox0fd71265Edit)
                    {
                        fTextBox0fd71265Edit = new Edit("TextBox0fd71265Edit", LDAPDatabaseSeaGroup);
                        fTextBox0fd71265Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox0fd71265Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0fd71265-6291-4b7b-871a-a52479d12671");
                        fTextBox0fd71265Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox0fd71265Edit;
                }
            }

            /// <summary>
            /// Gets Reference to AttributeNamefoDup0Text
            /// </summary>
            public Text AttributeNamefoDup0Text
            {
                get
                {
                    if (null == fAttributeNamefoDup0Text)
                    {
                        fAttributeNamefoDup0Text = new Text("AttributeNamefoDup0Text", LDAPDatabaseSeaGroup);
                        fAttributeNamefoDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fAttributeNamefoDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fAttributeNamefoDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Attribute Name for Recipient's E-mail Address:");
                    }

                    return fAttributeNamefoDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxc34b5023Edit
            /// </summary>
            public Edit TextBoxc34b5023Edit
            {
                get
                {
                    if (null == fTextBoxc34b5023Edit)
                    {
                        fTextBoxc34b5023Edit = new Edit("TextBoxc34b5023Edit", LDAPDatabaseSeaGroup);
                        fTextBoxc34b5023Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxc34b5023Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c34b5023-914c-4e04-825f-d3beb507eaea");
                        fTextBoxc34b5023Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBoxc34b5023Edit;
                }
            }

            /// <summary>
            /// Gets Reference to AttributeNamefoDup1Text
            /// </summary>
            public Text AttributeNamefoDup1Text
            {
                get
                {
                    if (null == fAttributeNamefoDup1Text)
                    {
                        fAttributeNamefoDup1Text = new Text("AttributeNamefoDup1Text", LDAPDatabaseSeaGroup);
                        fAttributeNamefoDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fAttributeNamefoDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fAttributeNamefoDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Attribute Name for Recipient's Fax Number:");
                    }

                    return fAttributeNamefoDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox3a6d11c5Edit
            /// </summary>
            public Edit TextBox3a6d11c5Edit
            {
                get
                {
                    if (null == fTextBox3a6d11c5Edit)
                    {
                        fTextBox3a6d11c5Edit = new Edit("TextBox3a6d11c5Edit", LDAPDatabaseSeaGroup);
                        fTextBox3a6d11c5Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox3a6d11c5Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3a6d11c5-2db5-478b-841b-4cff1eec20ce");
                        fTextBox3a6d11c5Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBox3a6d11c5Edit;
                }
            }

            /// <summary>
            /// Gets Reference to AdvancedSearchOGroup
            /// </summary>
            public Group AdvancedSearchOGroup
            {
                get
                {
                    if (null == fAdvancedSearchOGroup)
                    {
                        fAdvancedSearchOGroup = new Group("AdvancedSearchOGroup", LDAPDatabaseSeaGroup);
                        fAdvancedSearchOGroup.UIMap.Scope = UIASeachScope.Children;
                        fAdvancedSearchOGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAdvancedSearchOptionsGroupBox");
                        fAdvancedSearchOGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fAdvancedSearchOGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Advanced Search Options");
                    }

                    return fAdvancedSearchOGroup;
                }
            }

            /// <summary>
            /// Gets Reference to Expander0D39A3CGroup
            /// </summary>
            public Group Expander0D39A3CGroup
            {
                get
                {
                    if (null == fExpander0D39A3CGroup)
                    {
                        fExpander0D39A3CGroup = new Group("Expander0D39A3CGroup", LDAPReplicationGroup);
                        fExpander0D39A3CGroup.UIMap.Scope = UIASeachScope.Children;
                        fExpander0D39A3CGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0D39A3C1-0FEF-4c04-A306-85CAC8347DF0");
                        fExpander0D39A3CGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                    }

                    return fExpander0D39A3CGroup;
                }
            }

            /// <summary>
            /// Gets Reference to ButtonHeaderSitDup3Button
            /// </summary>
            public Button ButtonHeaderSitDup3Button
            {
                get
                {
                    if (null == fButtonHeaderSitDup3Button)
                    {
                        fButtonHeaderSitDup3Button = new Button("ButtonHeaderSitDup3Button", Expander0D39A3CGroup);
                        fButtonHeaderSitDup3Button.UIMap.Scope = UIASeachScope.Children;
                        fButtonHeaderSitDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                        fButtonHeaderSitDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fButtonHeaderSitDup3Button;
                }
            }

            /// <summary>
            /// Gets Reference to TestforLDAPRetrGroup
            /// </summary>
            public Group TestforLDAPRetrGroup
            {
                get
                {
                    if (null == fTestforLDAPRetrGroup)
                    {
                        fTestforLDAPRetrGroup = new Group("TestforLDAPRetrGroup", LDAPReplicationGroup);
                        fTestforLDAPRetrGroup.UIMap.Scope = UIASeachScope.Children;
                        fTestforLDAPRetrGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mTestLDAPRetrievalGroupBox");
                        fTestforLDAPRetrGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fTestforLDAPRetrGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test for LDAP Retrieval(Step 4)");
                    }

                    return fTestforLDAPRetrGroup;
                }
            }

            /// <summary>
            /// Gets Reference to TestforLDAPRetrText
            /// </summary>
            public Text TestforLDAPRetrText
            {
                get
                {
                    if (null == fTestforLDAPRetrText)
                    {
                        fTestforLDAPRetrText = new Text("TestforLDAPRetrText", TestforLDAPRetrGroup);
                        fTestforLDAPRetrText.UIMap.Scope = UIASeachScope.Children;
                        fTestforLDAPRetrText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTestforLDAPRetrText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test for LDAP Retrieval(Step 4)");
                    }

                    return fTestforLDAPRetrText;
                }
            }

            /// <summary>
            /// Gets Reference to TestTextmTestLaText
            /// </summary>
            public Text TestTextmTestLaText
            {
                get
                {
                    if (null == fTestTextmTestLaText)
                    {
                        fTestTextmTestLaText = new Text("TestTextmTestLaText", TestforLDAPRetrGroup);
                        fTestTextmTestLaText.UIMap.Scope = UIASeachScope.Children;
                        fTestTextmTestLaText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mTestLabel");
                        fTestTextmTestLaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fTestTextmTestLaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    }

                    return fTestTextmTestLaText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxf206c2f6Edit
            /// </summary>
            public Edit TextBoxf206c2f6Edit
            {
                get
                {
                    if (null == fTextBoxf206c2f6Edit)
                    {
                        fTextBoxf206c2f6Edit = new Edit("TextBoxf206c2f6Edit", TestforLDAPRetrGroup);
                        fTextBoxf206c2f6Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxf206c2f6Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f206c2f6-8a80-4199-9adb-544294a0699d");
                        fTextBoxf206c2f6Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBoxf206c2f6Edit;
                }
            }

            /// <summary>
            /// Gets Reference to TestButtone6d54Button
            /// </summary>
            public Button TestButtone6d54Button
            {
                get
                {
                    if (null == fTestButtone6d54Button)
                    {
                        fTestButtone6d54Button = new Button("TestButtone6d54Button", TestforLDAPRetrGroup);
                        fTestButtone6d54Button.UIMap.Scope = UIASeachScope.Children;
                        fTestButtone6d54Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e6d54317-fa20-4941-b1af-7c31d70663bb");
                        fTestButtone6d54Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fTestButtone6d54Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    }

                    return fTestButtone6d54Button;
                }
            }

            /// <summary>
            /// Gets Reference to Expander5DC4D6AGroup
            /// </summary>
            public Group Expander5DC4D6AGroup
            {
                get
                {
                    if (null == fExpander5DC4D6AGroup)
                    {
                        fExpander5DC4D6AGroup = new Group("Expander5DC4D6AGroup", LDAPReplicationGroup);
                        fExpander5DC4D6AGroup.UIMap.Scope = UIASeachScope.Children;
                        fExpander5DC4D6AGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5DC4D6A6-7B07-4911-859F-70566AF3C7B4");
                        fExpander5DC4D6AGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                    }

                    return fExpander5DC4D6AGroup;
                }
            }

            /// <summary>
            /// Gets Reference to ButtonHeaderSitDup4Button
            /// </summary>
            public Button ButtonHeaderSitDup4Button
            {
                get
                {
                    if (null == fButtonHeaderSitDup4Button)
                    {
                        fButtonHeaderSitDup4Button = new Button("ButtonHeaderSitDup4Button", Expander5DC4D6AGroup);
                        fButtonHeaderSitDup4Button.UIMap.Scope = UIASeachScope.Children;
                        fButtonHeaderSitDup4Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                        fButtonHeaderSitDup4Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    }

                    return fButtonHeaderSitDup4Button;
                }
            }

            /// <summary>
            /// Gets Reference to SyncScheduleSteGroup
            /// </summary>
            public Group SyncScheduleSteGroup
            {
                get
                {
                    if (null == fSyncScheduleSteGroup)
                    {
                        fSyncScheduleSteGroup = new Group("SyncScheduleSteGroup", LDAPReplicationGroup);
                        fSyncScheduleSteGroup.UIMap.Scope = UIASeachScope.Children;
                        fSyncScheduleSteGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"fa9b3876-67dc-436a-8dc9-2660331e162a");
                        fSyncScheduleSteGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fSyncScheduleSteGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Schedule (Step 5)");
                    }

                    return fSyncScheduleSteGroup;
                }
            }

            /// <summary>
            /// Gets Reference to SyncScheduleSteText
            /// </summary>
            public Text SyncScheduleSteText
            {
                get
                {
                    if (null == fSyncScheduleSteText)
                    {
                        fSyncScheduleSteText = new Text("SyncScheduleSteText", SyncScheduleSteGroup);
                        fSyncScheduleSteText.UIMap.Scope = UIASeachScope.Children;
                        fSyncScheduleSteText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fSyncScheduleSteText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Schedule (Step 5)");
                    }

                    return fSyncScheduleSteText;
                }
            }

            /// <summary>
            /// Gets Reference to SyncText
            /// </summary>
            public Text SyncText
            {
                get
                {
                    if (null == fSyncText)
                    {
                        fSyncText = new Text("SyncText", SyncScheduleSteGroup);
                        fSyncText.UIMap.Scope = UIASeachScope.Children;
                        fSyncText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fSyncText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync");
                    }

                    return fSyncText;
                }
            }

            /// <summary>
            /// Gets Reference to ComboBox1138dacComboBox
            /// </summary>
            public ComboBox ComboBox1138dacComboBox
            {
                get
                {
                    if (null == fComboBox1138dacComboBox)
                    {
                        fComboBox1138dacComboBox = new ComboBox("ComboBox1138dacComboBox", SyncScheduleSteGroup);
                        fComboBox1138dacComboBox.UIMap.Scope = UIASeachScope.Children;
                        fComboBox1138dacComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1138dac4-8bb2-4887-b0e8-95433a89ea1c");
                        fComboBox1138dacComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    }

                    return fComboBox1138dacComboBox;
                }
            }

            /// <summary>
            /// Gets Reference to SyncTimeText
            /// </summary>
            public Text SyncTimeText
            {
                get
                {
                    if (null == fSyncTimeText)
                    {
                        fSyncTimeText = new Text("SyncTimeText", SyncScheduleSteGroup);
                        fSyncTimeText.UIMap.Scope = UIASeachScope.Children;
                        fSyncTimeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fSyncTimeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Time");
                    }

                    return fSyncTimeText;
                }
            }

            /// <summary>
            /// Gets Reference to WindowsFormsHosDup0Pane
            /// </summary>
            public Pane WindowsFormsHosDup0Pane
            {
                get
                {
                    if (null == fWindowsFormsHosDup0Pane)
                    {
                        fWindowsFormsHosDup0Pane = new Pane("WindowsFormsHosDup0Pane", SyncScheduleSteGroup);
                        fWindowsFormsHosDup0Pane.UIMap.Scope = UIASeachScope.Children;
                        fWindowsFormsHosDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"198A4208-3F36-4e41-B168-4E62D5EC4D4B");
                        fWindowsFormsHosDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WindowsFormsHost");
                    }

                    return fWindowsFormsHosDup0Pane;
                }
            }

            /// <summary>
            /// Gets Reference to A24HourCheckBoxCheckBox
            /// </summary>
            public CheckBox A24HourCheckBoxCheckBox
            {
                get
                {
                    if (null == fA24HourCheckBoxCheckBox)
                    {
                        fA24HourCheckBoxCheckBox = new CheckBox("A24HourCheckBoxCheckBox", SyncScheduleSteGroup);
                        fA24HourCheckBoxCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fA24HourCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FE2BA56A-C03F-4A3D-8C14-2FB318C8B484");
                        fA24HourCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                        fA24HourCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"24 Hour");
                    }

                    return fA24HourCheckBoxCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to OnlysyncMondayFCheckBox
            /// </summary>
            public CheckBox OnlysyncMondayFCheckBox
            {
                get
                {
                    if (null == fOnlysyncMondayFCheckBox)
                    {
                        fOnlysyncMondayFCheckBox = new CheckBox("OnlysyncMondayFCheckBox", SyncScheduleSteGroup);
                        fOnlysyncMondayFCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fOnlysyncMondayFCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"03f7a8b7-4768-490b-a21f-a01b9de28e15");
                        fOnlysyncMondayFCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                        fOnlysyncMondayFCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Only sync Monday-Friday");
                    }

                    return fOnlysyncMondayFCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to SundayCheckBox2CheckBox
            /// </summary>
            public CheckBox SundayCheckBox2CheckBox
            {
                get
                {
                    if (null == fSundayCheckBox2CheckBox)
                    {
                        fSundayCheckBox2CheckBox = new CheckBox("SundayCheckBox2CheckBox", SyncScheduleSteGroup);
                        fSundayCheckBox2CheckBox.UIMap.Scope = UIASeachScope.Children;
                        fSundayCheckBox2CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"21015E67-271D-411A-B583-D32A3EA90A84");
                        fSundayCheckBox2CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                        fSundayCheckBox2CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sunday");
                    }

                    return fSundayCheckBox2CheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to MondayCheckBoxCCheckBox
            /// </summary>
            public CheckBox MondayCheckBoxCCheckBox
            {
                get
                {
                    if (null == fMondayCheckBoxCCheckBox)
                    {
                        fMondayCheckBoxCCheckBox = new CheckBox("MondayCheckBoxCCheckBox", SyncScheduleSteGroup);
                        fMondayCheckBoxCCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fMondayCheckBoxCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CD525CFE-A786-466E-A2BE-7E74FF43F7D1");
                        fMondayCheckBoxCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                        fMondayCheckBoxCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Monday");
                    }

                    return fMondayCheckBoxCCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to TuesdayCheckBoxCheckBox
            /// </summary>
            public CheckBox TuesdayCheckBoxCheckBox
            {
                get
                {
                    if (null == fTuesdayCheckBoxCheckBox)
                    {
                        fTuesdayCheckBoxCheckBox = new CheckBox("TuesdayCheckBoxCheckBox", SyncScheduleSteGroup);
                        fTuesdayCheckBoxCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fTuesdayCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C4BCB1F5-10E3-4CFD-9931-4815038EC189");
                        fTuesdayCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                        fTuesdayCheckBoxCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Tuesday");
                    }

                    return fTuesdayCheckBoxCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to WednesdayCheckBCheckBox
            /// </summary>
            public CheckBox WednesdayCheckBCheckBox
            {
                get
                {
                    if (null == fWednesdayCheckBCheckBox)
                    {
                        fWednesdayCheckBCheckBox = new CheckBox("WednesdayCheckBCheckBox", SyncScheduleSteGroup);
                        fWednesdayCheckBCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fWednesdayCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"40923D30-4F6C-4459-9162-D8BCBAD792DF");
                        fWednesdayCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                        fWednesdayCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Wednesday");
                    }

                    return fWednesdayCheckBCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to ThursdayCheckBoCheckBox
            /// </summary>
            public CheckBox ThursdayCheckBoCheckBox
            {
                get
                {
                    if (null == fThursdayCheckBoCheckBox)
                    {
                        fThursdayCheckBoCheckBox = new CheckBox("ThursdayCheckBoCheckBox", SyncScheduleSteGroup);
                        fThursdayCheckBoCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fThursdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4CE33CD9-3FCB-495D-A085-7B85D34BAE85");
                        fThursdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                        fThursdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Thursday");
                    }

                    return fThursdayCheckBoCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to FridayCheckBoxDCheckBox
            /// </summary>
            public CheckBox FridayCheckBoxDCheckBox
            {
                get
                {
                    if (null == fFridayCheckBoxDCheckBox)
                    {
                        fFridayCheckBoxDCheckBox = new CheckBox("FridayCheckBoxDCheckBox", SyncScheduleSteGroup);
                        fFridayCheckBoxDCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fFridayCheckBoxDCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DDE646C4-B289-483A-BF8C-7344D6E9324C");
                        fFridayCheckBoxDCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                        fFridayCheckBoxDCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Friday");
                    }

                    return fFridayCheckBoxDCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to SaturdayCheckBoCheckBox
            /// </summary>
            public CheckBox SaturdayCheckBoCheckBox
            {
                get
                {
                    if (null == fSaturdayCheckBoCheckBox)
                    {
                        fSaturdayCheckBoCheckBox = new CheckBox("SaturdayCheckBoCheckBox", SyncScheduleSteGroup);
                        fSaturdayCheckBoCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fSaturdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B73EA9F8-BACB-4E76-A2B9-15DEE3FF0C7F");
                        fSaturdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                        fSaturdayCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Saturday");
                    }

                    return fSaturdayCheckBoCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to LastDayoftheMonRadioButton
            /// </summary>
            public RadioButton LastDayoftheMonRadioButton
            {
                get
                {
                    if (null == fLastDayoftheMonRadioButton)
                    {
                        fLastDayoftheMonRadioButton = new RadioButton("LastDayoftheMonRadioButton", SyncScheduleSteGroup);
                        fLastDayoftheMonRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fLastDayoftheMonRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2DBEB691-CBFB-4DB7-BE7A-B5D774820296");
                        fLastDayoftheMonRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                        fLastDayoftheMonRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Last Day of the Month");
                    }

                    return fLastDayoftheMonRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to DayRadioButton3RadioButton
            /// </summary>
            public RadioButton DayRadioButton3RadioButton
            {
                get
                {
                    if (null == fDayRadioButton3RadioButton)
                    {
                        fDayRadioButton3RadioButton = new RadioButton("DayRadioButton3RadioButton", SyncScheduleSteGroup);
                        fDayRadioButton3RadioButton.UIMap.Scope = UIASeachScope.Children;
                        fDayRadioButton3RadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"392FC707-C93A-4607-A32D-0D08B25A4BEE");
                        fDayRadioButton3RadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                        fDayRadioButton3RadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Day");
                    }

                    return fDayRadioButton3RadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to WindowsFormsHosDup1Pane
            /// </summary>
            public Pane WindowsFormsHosDup1Pane
            {
                get
                {
                    if (null == fWindowsFormsHosDup1Pane)
                    {
                        fWindowsFormsHosDup1Pane = new Pane("WindowsFormsHosDup1Pane", SyncScheduleSteGroup);
                        fWindowsFormsHosDup1Pane.UIMap.Scope = UIASeachScope.Children;
                        fWindowsFormsHosDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1A95AA54-314C-4A5D-B34C-60863C3C700C");
                        fWindowsFormsHosDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WindowsFormsHost");
                    }

                    return fWindowsFormsHosDup1Pane;
                }
            }

            /// <summary>
            /// Gets Reference to LastReplicationText
            /// </summary>
            public Text LastReplicationText
            {
                get
                {
                    if (null == fLastReplicationText)
                    {
                        fLastReplicationText = new Text("LastReplicationText", SyncScheduleSteGroup);
                        fLastReplicationText.UIMap.Scope = UIASeachScope.Children;
                        fLastReplicationText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fLastReplicationText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Last Replication");
                    }

                    return fLastReplicationText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxcc133df7Edit
            /// </summary>
            public Edit TextBoxcc133df7Edit
            {
                get
                {
                    if (null == fTextBoxcc133df7Edit)
                    {
                        fTextBoxcc133df7Edit = new Edit("TextBoxcc133df7Edit", SyncScheduleSteGroup);
                        fTextBoxcc133df7Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxcc133df7Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"cc133df7-b7fc-4b42-9b31-ea397127b095");
                        fTextBoxcc133df7Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    }

                    return fTextBoxcc133df7Edit;
                }
            }

            /// <summary>
            /// Gets Reference to SyncNowButtonb7Button
            /// </summary>
            public Button SyncNowButtonb7Button
            {
                get
                {
                    if (null == fSyncNowButtonb7Button)
                    {
                        fSyncNowButtonb7Button = new Button("SyncNowButtonb7Button", SyncScheduleSteGroup);
                        fSyncNowButtonb7Button.UIMap.Scope = UIASeachScope.Children;
                        fSyncNowButtonb7Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b75e5b82-6ed8-4ebb-b777-4b9258b91890");
                        fSyncNowButtonb7Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fSyncNowButtonb7Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Now");
                    }

                    return fSyncNowButtonb7Button;
                }
            }

            /// <summary>
            /// Gets Reference to ClearLDAPCacheBButton
            /// </summary>
            public Button ClearLDAPCacheBButton
            {
                get
                {
                    if (null == fClearLDAPCacheBButton)
                    {
                        fClearLDAPCacheBButton = new Button("ClearLDAPCacheBButton", LDAPReplicationGroup);
                        fClearLDAPCacheBButton.UIMap.Scope = UIASeachScope.Children;
                        fClearLDAPCacheBButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9E2814A0-D532-4b13-B05A-60EEFA520123");
                        fClearLDAPCacheBButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fClearLDAPCacheBButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear LDAP Cache");
                    }

                    return fClearLDAPCacheBButton;
                }
            }

            /// <summary>
            /// Gets Reference to ClearLDAPCacheTText
            /// </summary>
            public Text ClearLDAPCacheTText
            {
                get
                {
                    if (null == fClearLDAPCacheTText)
                    {
                        fClearLDAPCacheTText = new Text("ClearLDAPCacheTText", ClearLDAPCacheBButton);
                        fClearLDAPCacheTText.UIMap.Scope = UIASeachScope.Children;
                        fClearLDAPCacheTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fClearLDAPCacheTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear LDAP Cache");
                    }

                    return fClearLDAPCacheTText;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookManaGroup
            /// </summary>
            public Group AddressBookManaGroup
            {
                get
                {
                    if (null == fAddressBookManaGroup)
                    {
                        fAddressBookManaGroup = new Group("AddressBookManaGroup", ScrollViewerPane);
                        fAddressBookManaGroup.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fAddressBookManaGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                    }

                    return fAddressBookManaGroup;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookManaDup0Text
            /// </summary>
            public Text AddressBookManaDup0Text
            {
                get
                {
                    if (null == fAddressBookManaDup0Text)
                    {
                        fAddressBookManaDup0Text = new Text("AddressBookManaDup0Text", AddressBookManaGroup);
                        fAddressBookManaDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAddressBookManaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                    }

                    return fAddressBookManaDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookManaButton
            /// </summary>
            public Button AddressBookManaButton
            {
                get
                {
                    if (null == fAddressBookManaButton)
                    {
                        fAddressBookManaButton = new Button("AddressBookManaButton", AddressBookManaGroup);
                        fAddressBookManaButton.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"174F3D3D-4D21-4cef-956A-CD3D7E08CF4B");
                        fAddressBookManaButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fAddressBookManaButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                    }

                    return fAddressBookManaButton;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookManaDup1Text
            /// </summary>
            public Text AddressBookManaDup1Text
            {
                get
                {
                    if (null == fAddressBookManaDup1Text)
                    {
                        fAddressBookManaDup1Text = new Text("AddressBookManaDup1Text", AddressBookManaButton);
                        fAddressBookManaDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAddressBookManaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                    }

                    return fAddressBookManaDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup9ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup9ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup9ScrollBar)
                    {
                        fScrollBarVerticDup9ScrollBar = new ScrollBar("ScrollBarVerticDup9ScrollBar", ScrollViewerPane);
                        fScrollBarVerticDup9ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                        fScrollBarVerticDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarVerticDup9ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to RepeatButtonPARDup0Button
            /// </summary>
            public Button RepeatButtonPARDup0Button
            {
                get
                {
                    if (null == fRepeatButtonPARDup0Button)
                    {
                        fRepeatButtonPARDup0Button = new Button("RepeatButtonPARDup0Button", ScrollBarVerticDup9ScrollBar);
                        fRepeatButtonPARDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fRepeatButtonPARDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_LineUpButton");
                        fRepeatButtonPARDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    }

                    return fRepeatButtonPARDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to RepeatButtonPagDup0Button
            /// </summary>
            public Button RepeatButtonPagDup0Button
            {
                get
                {
                    if (null == fRepeatButtonPagDup0Button)
                    {
                        fRepeatButtonPagDup0Button = new Button("RepeatButtonPagDup0Button", ScrollBarVerticDup9ScrollBar);
                        fRepeatButtonPagDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageUp");
                        fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    }

                    return fRepeatButtonPagDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to RepeatButtonPagDup1Button
            /// </summary>
            public Button RepeatButtonPagDup1Button
            {
                get
                {
                    if (null == fRepeatButtonPagDup1Button)
                    {
                        fRepeatButtonPagDup1Button = new Button("RepeatButtonPagDup1Button", ScrollBarVerticDup9ScrollBar);
                        fRepeatButtonPagDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageDown");
                        fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    }

                    return fRepeatButtonPagDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbThumb
            /// </summary>
            public Thumb ThumbThumb
            {
                get
                {
                    if (null == fThumbThumb)
                    {
                        fThumbThumb = new Thumb("ThumbThumb", ScrollBarVerticDup9ScrollBar);
                        fThumbThumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    }

                    return fThumbThumb;
                }
            }

            /// <summary>
            /// Gets Reference to RepeatButtonPARDup1Button
            /// </summary>
            public Button RepeatButtonPARDup1Button
            {
                get
                {
                    if (null == fRepeatButtonPARDup1Button)
                    {
                        fRepeatButtonPARDup1Button = new Button("RepeatButtonPARDup1Button", ScrollBarVerticDup9ScrollBar);
                        fRepeatButtonPARDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fRepeatButtonPARDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_LineDownButton");
                        fRepeatButtonPARDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    }

                    return fRepeatButtonPARDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup9ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup9ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup9ScrollBar)
                    {
                        fScrollBarHorizoDup9ScrollBar = new ScrollBar("ScrollBarHorizoDup9ScrollBar", ScrollViewerPane);
                        fScrollBarHorizoDup9ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                        fScrollBarHorizoDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    }

                    return fScrollBarHorizoDup9ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to DeviceConfiguraTabItem
            /// </summary>
            public TabItem DeviceConfiguraTabItem
            {
                get
                {
                    if (null == fDeviceConfiguraTabItem)
                    {
                        fDeviceConfiguraTabItem = new TabItem("DeviceConfiguraTabItem", TabControlec0fdTab);
                        fDeviceConfiguraTabItem.UIMap.Scope = UIASeachScope.Children;
                        fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6DF1E016-517F-40e4-A63E-CD48D560192F");
                        fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                    }

                    return fDeviceConfiguraTabItem;
                }
            }

            /// <summary>
            /// Gets Reference to DeviceConfiguraText
            /// </summary>
            public Text DeviceConfiguraText
            {
                get
                {
                    if (null == fDeviceConfiguraText)
                    {
                        fDeviceConfiguraText = new Text("DeviceConfiguraText", DeviceConfiguraTabItem);
                        fDeviceConfiguraText.UIMap.Scope = UIASeachScope.Children;
                        fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                    }

                    return fDeviceConfiguraText;
                }
            }

            /// <summary>
            /// Gets Reference to TemplateConfiguTabItem
            /// </summary>
            public TabItem TemplateConfiguTabItem
            {
                get
                {
                    if (null == fTemplateConfiguTabItem)
                    {
                        fTemplateConfiguTabItem = new TabItem("TemplateConfiguTabItem", TabControlec0fdTab);
                        fTemplateConfiguTabItem.UIMap.Scope = UIASeachScope.Children;
                        fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AC05F9B9-A7D8-4b34-80E7-910FB9870D47");
                        fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                    }

                    return fTemplateConfiguTabItem;
                }
            }

            /// <summary>
            /// Gets Reference to TemplateConfiguText
            /// </summary>
            public Text TemplateConfiguText
            {
                get
                {
                    if (null == fTemplateConfiguText)
                    {
                        fTemplateConfiguText = new Text("TemplateConfiguText", TemplateConfiguTabItem);
                        fTemplateConfiguText.UIMap.Scope = UIASeachScope.Children;
                        fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                    }

                    return fTemplateConfiguText;
                }
            }

            /// <summary>
            /// Gets Reference to LogTabItem9b4f3TabItem
            /// </summary>
            public TabItem LogTabItem9b4f3TabItem
            {
                get
                {
                    if (null == fLogTabItem9b4f3TabItem)
                    {
                        fLogTabItem9b4f3TabItem = new TabItem("LogTabItem9b4f3TabItem", TabControlec0fdTab);
                        fLogTabItem9b4f3TabItem.UIMap.Scope = UIASeachScope.Children;
                        fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9b4f34bb-d75a-4080-9be3-1c50ec31c5b6");
                        fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                    }

                    return fLogTabItem9b4f3TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to LogTextBlockText
            /// </summary>
            public Text LogTextBlockText
            {
                get
                {
                    if (null == fLogTextBlockText)
                    {
                        fLogTextBlockText = new Text("LogTextBlockText", LogTabItem9b4f3TabItem);
                        fLogTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                    }

                    return fLogTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup7TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup7TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup7TabItem)
                    {
                        fSystemWindowsCoDup7TabItem = new TabItem("SystemWindowsCoDup7TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup7TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3AC8D4A8-3B06-421A-911B-E8CA248A9ED4");
                        fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup7TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to SecurityTextmSeText
            /// </summary>
            public Text SecurityTextmSeText
            {
                get
                {
                    if (null == fSecurityTextmSeText)
                    {
                        fSecurityTextmSeText = new Text("SecurityTextmSeText", SystemWindowsCoDup7TabItem);
                        fSecurityTextmSeText.UIMap.Scope = UIASeachScope.Children;
                        fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mSecurityTabLabel");
                        fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                    }

                    return fSecurityTextmSeText;
                }
            }

            /// <summary>
            /// Gets Reference to SecurityTextBloText
            /// </summary>
            public Text SecurityTextBloText
            {
                get
                {
                    if (null == fSecurityTextBloText)
                    {
                        fSecurityTextBloText = new Text("SecurityTextBloText", SecurityTextmSeText);
                        fSecurityTextBloText.UIMap.Scope = UIASeachScope.Children;
                        fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                    }

                    return fSecurityTextBloText;
                }
            }

            /// <summary>
            /// Gets Reference to Text8A7A84DB894Text
            /// </summary>
            public Text Text8A7A84DB894Text
            {
                get
                {
                    if (null == fText8A7A84DB894Text)
                    {
                        fText8A7A84DB894Text = new Text("Text8A7A84DB894Text", SystemWindowsCoDup7TabItem);
                        fText8A7A84DB894Text.UIMap.Scope = UIASeachScope.Children;
                        fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8A7A84DB-8945-40E1-A0F9-C40DDD129739");
                        fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    }

                    return fText8A7A84DB894Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text16F78FB18FFText
            /// </summary>
            public Text Text16F78FB18FFText
            {
                get
                {
                    if (null == fText16F78FB18FFText)
                    {
                        fText16F78FB18FFText = new Text("Text16F78FB18FFText", SystemWindowsCoDup7TabItem);
                        fText16F78FB18FFText.UIMap.Scope = UIASeachScope.Children;
                        fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16F78FB1-8FF9-4B0D-8251-FB09F520EA73");
                        fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fText16F78FB18FFText;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup8TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup8TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup8TabItem)
                    {
                        fSystemWindowsCoDup8TabItem = new TabItem("SystemWindowsCoDup8TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup8TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1678607C-20BF-4137-8238-C9D46EA8FF70");
                        fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup8TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to AnalyticsTextmAText
            /// </summary>
            public Text AnalyticsTextmAText
            {
                get
                {
                    if (null == fAnalyticsTextmAText)
                    {
                        fAnalyticsTextmAText = new Text("AnalyticsTextmAText", SystemWindowsCoDup8TabItem);
                        fAnalyticsTextmAText.UIMap.Scope = UIASeachScope.Children;
                        fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAnalyticsTabLabel");
                        fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                    }

                    return fAnalyticsTextmAText;
                }
            }

            /// <summary>
            /// Gets Reference to AnalyticsTextBlText
            /// </summary>
            public Text AnalyticsTextBlText
            {
                get
                {
                    if (null == fAnalyticsTextBlText)
                    {
                        fAnalyticsTextBlText = new Text("AnalyticsTextBlText", AnalyticsTextmAText);
                        fAnalyticsTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                    }

                    return fAnalyticsTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to AboutTabItemf45TabItem
            /// </summary>
            public TabItem AboutTabItemf45TabItem
            {
                get
                {
                    if (null == fAboutTabItemf45TabItem)
                    {
                        fAboutTabItemf45TabItem = new TabItem("AboutTabItemf45TabItem", TabControlec0fdTab);
                        fAboutTabItemf45TabItem.UIMap.Scope = UIASeachScope.Children;
                        fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f45c22d9-f77a-481a-95bc-09cdff03e131");
                        fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                    }

                    return fAboutTabItemf45TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to AboutTextBlockText
            /// </summary>
            public Text AboutTextBlockText
            {
                get
                {
                    if (null == fAboutTextBlockText)
                    {
                        fAboutTextBlockText = new Text("AboutTextBlockText", AboutTabItemf45TabItem);
                        fAboutTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                    }

                    return fAboutTextBlockText;
                }
            }
        }

        /// <summary>
        /// Application which exercises the TopCat Coded C# test API.
        /// </summary>
        public class Contacts
        {
            /// <summary>
            /// Backing field for HPDigitalSendinWindow property
            /// </summary>
            private Window fHPDigitalSendinWindow;

            /// <summary>
            /// Backing field for AddContactWindoWindow property
            /// </summary>
            private Window fAddContactWindoWindow;

            /// <summary>
            /// Backing field for AddContactTitleBar property
            /// </summary>
            private TitleBar fAddContactTitleBar;

            /// <summary>
            /// Backing field for SystemMenuBarSyDup0MenuBar property
            /// </summary>
            private MenuBar fSystemMenuBarSyDup0MenuBar;

            /// <summary>
            /// Backing field for SystemItem1Dup0MenuItem property
            /// </summary>
            private MenuItem fSystemItem1Dup0MenuItem;

            /// <summary>
            /// Backing field for MinimizeMinimizDup0Button property
            /// </summary>
            private Button fMinimizeMinimizDup0Button;

            /// <summary>
            /// Backing field for MaximizeMaximizDup0Button property
            /// </summary>
            private Button fMaximizeMaximizDup0Button;

            /// <summary>
            /// Backing field for CloseCloseDup0Button property
            /// </summary>
            private Button fCloseCloseDup0Button;

            /// <summary>
            /// Backing field for SaveButtonC5786Button property
            /// </summary>
            private Button fSaveButtonC5786Button;

            /// <summary>
            /// Backing field for SaveTextBlockText property
            /// </summary>
            private Text fSaveTextBlockText;

            /// <summary>
            /// Backing field for CancelButton609Button property
            /// </summary>
            private Button fCancelButton609Button;

            /// <summary>
            /// Backing field for CancelTextBlockDup0Text property
            /// </summary>
            private Text fCancelTextBlockDup0Text;

            /// <summary>
            /// Backing field for TextBoxA2BAD0DFEdit property
            /// </summary>
            private Edit fTextBoxA2BAD0DFEdit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup0Pane property
            /// </summary>
            private Pane fScrollViewerPARDup0Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup0ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup0ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup0ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup0ScrollBar;

            /// <summary>
            /// Backing field for TextBoxDEED2AE6Edit property
            /// </summary>
            private Edit fTextBoxDEED2AE6Edit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup1Pane property
            /// </summary>
            private Pane fScrollViewerPARDup1Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup1ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup1ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup1ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup1ScrollBar;

            /// <summary>
            /// Backing field for TextBox16A55BEBEdit property
            /// </summary>
            private Edit fTextBox16A55BEBEdit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup2Pane property
            /// </summary>
            private Pane fScrollViewerPARDup2Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup2ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup2ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup2ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup2ScrollBar;

            /// <summary>
            /// Backing field for TextBoxAC47DC0BEdit property
            /// </summary>
            private Edit fTextBoxAC47DC0BEdit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup3Pane property
            /// </summary>
            private Pane fScrollViewerPARDup3Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup3ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup3ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup3ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup3ScrollBar;

            /// <summary>
            /// Backing field for TextBox46D1A38BEdit property
            /// </summary>
            private Edit fTextBox46D1A38BEdit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup4Pane property
            /// </summary>
            private Pane fScrollViewerPARDup4Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup4ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup4ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup4ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup4ScrollBar;

            /// <summary>
            /// Backing field for TextBox1C07E514Edit property
            /// </summary>
            private Edit fTextBox1C07E514Edit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup5Pane property
            /// </summary>
            private Pane fScrollViewerPARDup5Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup5ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup5ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup5ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup5ScrollBar;

            /// <summary>
            /// Backing field for TextBoxB90C0C26Edit property
            /// </summary>
            private Edit fTextBoxB90C0C26Edit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup6Pane property
            /// </summary>
            private Pane fScrollViewerPARDup6Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup6ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup6ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup6ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup6ScrollBar;

            /// <summary>
            /// Backing field for TextBox6DFD1208Edit property
            /// </summary>
            private Edit fTextBox6DFD1208Edit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup7Pane property
            /// </summary>
            private Pane fScrollViewerPARDup7Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup7ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup7ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup7ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup7ScrollBar;

            /// <summary>
            /// Backing field for TextBox739259F1Edit property
            /// </summary>
            private Edit fTextBox739259F1Edit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup8Pane property
            /// </summary>
            private Pane fScrollViewerPARDup8Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup8ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup8ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup8ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup8ScrollBar;

            /// <summary>
            /// Backing field for TextBoxE8E3CCF9Edit property
            /// </summary>
            private Edit fTextBoxE8E3CCF9Edit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup9Pane property
            /// </summary>
            private Pane fScrollViewerPARDup9Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup9ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup9ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup9ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup9ScrollBar;

            /// <summary>
            /// Backing field for ContactNameText property
            /// </summary>
            private Text fContactNameText;

            /// <summary>
            /// Backing field for ContactNameTextDup0Text property
            /// </summary>
            private Text fContactNameTextDup0Text;

            /// <summary>
            /// Backing field for FirstNameText property
            /// </summary>
            private Text fFirstNameText;

            /// <summary>
            /// Backing field for FirstNameTextBlText property
            /// </summary>
            private Text fFirstNameTextBlText;

            /// <summary>
            /// Backing field for LastNameText property
            /// </summary>
            private Text fLastNameText;

            /// <summary>
            /// Backing field for LastNameTextBloText property
            /// </summary>
            private Text fLastNameTextBloText;

            /// <summary>
            /// Backing field for EmailAddressText property
            /// </summary>
            private Text fEmailAddressText;

            /// <summary>
            /// Backing field for EmailAddressTexDup0Text property
            /// </summary>
            private Text fEmailAddressTexDup0Text;

            /// <summary>
            /// Backing field for OrganizationText property
            /// </summary>
            private Text fOrganizationText;

            /// <summary>
            /// Backing field for OrganizationTexText property
            /// </summary>
            private Text fOrganizationTexText;

            /// <summary>
            /// Backing field for CountryRegionText property
            /// </summary>
            private Text fCountryRegionText;

            /// <summary>
            /// Backing field for CountryRegionTeText property
            /// </summary>
            private Text fCountryRegionTeText;

            /// <summary>
            /// Backing field for PhoneNumberText property
            /// </summary>
            private Text fPhoneNumberText;

            /// <summary>
            /// Backing field for PhoneNumberTextText property
            /// </summary>
            private Text fPhoneNumberTextText;

            /// <summary>
            /// Backing field for UnitText property
            /// </summary>
            private Text fUnitText;

            /// <summary>
            /// Backing field for UnitTextBlockText property
            /// </summary>
            private Text fUnitTextBlockText;

            /// <summary>
            /// Backing field for CityText property
            /// </summary>
            private Text fCityText;

            /// <summary>
            /// Backing field for CityTextBlockText property
            /// </summary>
            private Text fCityTextBlockText;

            /// <summary>
            /// Backing field for FaxNumberText property
            /// </summary>
            private Text fFaxNumberText;

            /// <summary>
            /// Backing field for FaxNumberTextBlDup0Text property
            /// </summary>
            private Text fFaxNumberTextBlDup0Text;

            /// <summary>
            /// Backing field for AddressBookManaWindow property
            /// </summary>
            private Window fAddressBookManaWindow;

            /// <summary>
            /// Backing field for AddressBookManaTitleBar property
            /// </summary>
            private TitleBar fAddressBookManaTitleBar;

            /// <summary>
            /// Backing field for SystemMenuBarSyDup1MenuBar property
            /// </summary>
            private MenuBar fSystemMenuBarSyDup1MenuBar;

            /// <summary>
            /// Backing field for SystemItem1Dup1MenuItem property
            /// </summary>
            private MenuItem fSystemItem1Dup1MenuItem;

            /// <summary>
            /// Backing field for MinimizeMinimizDup1Button property
            /// </summary>
            private Button fMinimizeMinimizDup1Button;

            /// <summary>
            /// Backing field for MaximizeMaximizDup1Button property
            /// </summary>
            private Button fMaximizeMaximizDup1Button;

            /// <summary>
            /// Backing field for CloseCloseDup1Button property
            /// </summary>
            private Button fCloseCloseDup1Button;

            /// <summary>
            /// Backing field for DSSAddressBooksDup0Text property
            /// </summary>
            private Text fDSSAddressBooksDup0Text;

            /// <summary>
            /// Backing field for DSSAddressBooksDup1Text property
            /// </summary>
            private Text fDSSAddressBooksDup1Text;

            /// <summary>
            /// Backing field for TreeView87DDA4CTree property
            /// </summary>
            private Tree fTreeView87DDA4CTree;

            /// <summary>
            /// Backing field for PublicTreeViewITreeItem property
            /// </summary>
            private TreeItem fPublicTreeViewITreeItem;

            /// <summary>
            /// Backing field for ButtonExpanderDup0Button property
            /// </summary>
            private Button fButtonExpanderDup0Button;

            /// <summary>
            /// Backing field for PublicTextBlockText property
            /// </summary>
            private Text fPublicTextBlockText;

            /// <summary>
            /// Backing field for PrivateAddressBTreeItem property
            /// </summary>
            private TreeItem fPrivateAddressBTreeItem;

            /// <summary>
            /// Backing field for ButtonExpanderDup1Button property
            /// </summary>
            private Button fButtonExpanderDup1Button;

            /// <summary>
            /// Backing field for PrivateAddressBText property
            /// </summary>
            private Text fPrivateAddressBText;

            /// <summary>
            /// Backing field for ExportButtonA1CButton property
            /// </summary>
            private Button fExportButtonA1CButton;

            /// <summary>
            /// Backing field for ExportTextBlockText property
            /// </summary>
            private Text fExportTextBlockText;

            /// <summary>
            /// Backing field for DeleteButton1B6Button property
            /// </summary>
            private Button fDeleteButton1B6Button;

            /// <summary>
            /// Backing field for DeleteTextBlockDup0Text property
            /// </summary>
            private Text fDeleteTextBlockDup0Text;

            /// <summary>
            /// Backing field for ImportAddressBoButton property
            /// </summary>
            private Button fImportAddressBoButton;

            /// <summary>
            /// Backing field for ImportAddressBoText property
            /// </summary>
            private Text fImportAddressBoText;

            /// <summary>
            /// Backing field for GridSplitterThumb property
            /// </summary>
            private Thumb fGridSplitterThumb;

            /// <summary>
            /// Backing field for AddressBookContDup0Text property
            /// </summary>
            private Text fAddressBookContDup0Text;

            /// <summary>
            /// Backing field for AddressBookContDup1Text property
            /// </summary>
            private Text fAddressBookContDup1Text;

            /// <summary>
            /// Backing field for RefreshButton81Button property
            /// </summary>
            private Button fRefreshButton81Button;

            /// <summary>
            /// Backing field for RefreshTextBlocText property
            /// </summary>
            private Text fRefreshTextBlocText;

            /// <summary>
            /// Backing field for SearchForText property
            /// </summary>
            private Text fSearchForText;

            /// <summary>
            /// Backing field for SearchForTextBlText property
            /// </summary>
            private Text fSearchForTextBlText;

            /// <summary>
            /// Backing field for ComboBoxA5F891AComboBox property
            /// </summary>
            private ComboBox fComboBoxA5F891AComboBox;

            /// <summary>
            /// Backing field for TextBoxA7B3B6CFEdit property
            /// </summary>
            private Edit fTextBoxA7B3B6CFEdit;

            /// <summary>
            /// Backing field for ScrollViewerPARDup10Pane property
            /// </summary>
            private Pane fScrollViewerPARDup10Pane;

            /// <summary>
            /// Backing field for ScrollBarVerticDup10ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup10ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup10ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup10ScrollBar;

            /// <summary>
            /// Backing field for FilterButtonEB0Button property
            /// </summary>
            private Button fFilterButtonEB0Button;

            /// <summary>
            /// Backing field for FilterTextBlockText property
            /// </summary>
            private Text fFilterTextBlockText;

            /// <summary>
            /// Backing field for ClearButtonEC9FButton property
            /// </summary>
            private Button fClearButtonEC9FButton;

            /// <summary>
            /// Backing field for ClearTextBlockText property
            /// </summary>
            private Text fClearTextBlockText;

            /// <summary>
            /// Backing field for ListViewbb668d9DataGrid property
            /// </summary>
            private DataGrid fListViewbb668d9DataGrid;

            /// <summary>
            /// Backing field for GridViewHeaderRHeader property
            /// </summary>
            private Header fGridViewHeaderRHeader;

            /// <summary>
            /// Backing field for ContactNameGridHeaderItem property
            /// </summary>
            private HeaderItem fContactNameGridHeaderItem;

            /// <summary>
            /// Backing field for ContactNameTextDup1Text property
            /// </summary>
            private Text fContactNameTextDup1Text;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup0Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup0Thumb;

            /// <summary>
            /// Backing field for EmailAddressGriHeaderItem property
            /// </summary>
            private HeaderItem fEmailAddressGriHeaderItem;

            /// <summary>
            /// Backing field for EmailAddressTexDup1Text property
            /// </summary>
            private Text fEmailAddressTexDup1Text;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup1Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup1Thumb;

            /// <summary>
            /// Backing field for FaxNumberGridViHeaderItem property
            /// </summary>
            private HeaderItem fFaxNumberGridViHeaderItem;

            /// <summary>
            /// Backing field for FaxNumberTextBlDup1Text property
            /// </summary>
            private Text fFaxNumberTextBlDup1Text;

            /// <summary>
            /// Backing field for ThumbPARTHeadeDup2Thumb property
            /// </summary>
            private Thumb fThumbPARTHeadeDup2Thumb;

            /// <summary>
            /// Backing field for HPMfpAppServiceDup0I0XDataItem property
            /// </summary>
            private DataItem fHPMfpAppServiceDup0I0XDataItem;

            /// <summary>
            /// Backing field for aaTextBlockText property
            /// </summary>
            private Text faaTextBlockText;

            /// <summary>
            /// Backing field for pgcomTextBlockDup0Text property
            /// </summary>
            private Text fpgcomTextBlockDup0Text;

            /// <summary>
            /// Backing field for A122TextBlockDup0Text property
            /// </summary>
            private Text fA122TextBlockDup0Text;

            /// <summary>
            /// Backing field for HPMfpAppServiceDup1I1XDataItem property
            /// </summary>
            private DataItem fHPMfpAppServiceDup1I1XDataItem;

            /// <summary>
            /// Backing field for aaaTextBlockText property
            /// </summary>
            private Text faaaTextBlockText;

            /// <summary>
            /// Backing field for pgcomTextBlockDup1Text property
            /// </summary>
            private Text fpgcomTextBlockDup1Text;

            /// <summary>
            /// Backing field for A122TextBlockDup1Text property
            /// </summary>
            private Text fA122TextBlockDup1Text;

            /// <summary>
            /// Backing field for HPMfpAppServiceDup2I2XDataItem property
            /// </summary>
            private DataItem fHPMfpAppServiceDup2I2XDataItem;

            /// <summary>
            /// Backing field for adsffafsdTextBlText property
            /// </summary>
            private Text fadsffafsdTextBlText;

            /// <summary>
            /// Backing field for pgcomTextBlockDup2Text property
            /// </summary>
            private Text fpgcomTextBlockDup2Text;

            /// <summary>
            /// Backing field for A117TextBlockText property
            /// </summary>
            private Text fA117TextBlockText;

            /// <summary>
            /// Backing field for HPMfpAppServiceDup3I3XDataItem property
            /// </summary>
            private DataItem fHPMfpAppServiceDup3I3XDataItem;

            /// <summary>
            /// Backing field for ccdaTextBlockText property
            /// </summary>
            private Text fccdaTextBlockText;

            /// <summary>
            /// Backing field for pgcomTextBlockDup3Text property
            /// </summary>
            private Text fpgcomTextBlockDup3Text;

            /// <summary>
            /// Backing field for A1TextBlockText property
            /// </summary>
            private Text fA1TextBlockText;

            /// <summary>
            /// Backing field for HPMfpAppServiceDup4I4XDataItem property
            /// </summary>
            private DataItem fHPMfpAppServiceDup4I4XDataItem;

            /// <summary>
            /// Backing field for dddddTextBlockText property
            /// </summary>
            private Text fdddddTextBlockText;

            /// <summary>
            /// Backing field for pgcomTextBlockDup4Text property
            /// </summary>
            private Text fpgcomTextBlockDup4Text;

            /// <summary>
            /// Backing field for A111TextBlockText property
            /// </summary>
            private Text fA111TextBlockText;

            /// <summary>
            /// Backing field for HPMfpAppServiceDup5I5XDataItem property
            /// </summary>
            private DataItem fHPMfpAppServiceDup5I5XDataItem;

            /// <summary>
            /// Backing field for sdgdagTextBlockText property
            /// </summary>
            private Text fsdgdagTextBlockText;

            /// <summary>
            /// Backing field for pgcomTextBlockDup5Text property
            /// </summary>
            private Text fpgcomTextBlockDup5Text;

            /// <summary>
            /// Backing field for A1111TextBlockText property
            /// </summary>
            private Text fA1111TextBlockText;

            /// <summary>
            /// Backing field for HPMfpAppServiceDup6I6XDataItem property
            /// </summary>
            private DataItem fHPMfpAppServiceDup6I6XDataItem;

            /// <summary>
            /// Backing field for ssssssTextBlockText property
            /// </summary>
            private Text fssssssTextBlockText;

            /// <summary>
            /// Backing field for pgcomTextBlockDup6Text property
            /// </summary>
            private Text fpgcomTextBlockDup6Text;

            /// <summary>
            /// Backing field for A1113TextBlockText property
            /// </summary>
            private Text fA1113TextBlockText;

            /// <summary>
            /// Backing field for LDAPcontactsareText property
            /// </summary>
            private Text fLDAPcontactsareText;

            /// <summary>
            /// Backing field for DeleteButton41BButton property
            /// </summary>
            private Button fDeleteButton41BButton;

            /// <summary>
            /// Backing field for DeleteTextBlockDup1Text property
            /// </summary>
            private Text fDeleteTextBlockDup1Text;

            /// <summary>
            /// Backing field for EditButton548EBButton property
            /// </summary>
            private Button fEditButton548EBButton;

            /// <summary>
            /// Backing field for EditTextBlockText property
            /// </summary>
            private Text fEditTextBlockText;

            /// <summary>
            /// Backing field for AddGroupButton7Button property
            /// </summary>
            private Button fAddGroupButton7Button;

            /// <summary>
            /// Backing field for AddGroupTextBloText property
            /// </summary>
            private Text fAddGroupTextBloText;

            /// <summary>
            /// Backing field for AddContactButtoButton property
            /// </summary>
            private Button fAddContactButtoButton;

            /// <summary>
            /// Backing field for AddContactTextBText property
            /// </summary>
            private Text fAddContactTextBText;

            /// <summary>
            /// Backing field for OKButtonFA1AC0AButton property
            /// </summary>
            private Button fOKButtonFA1AC0AButton;

            /// <summary>
            /// Backing field for OKTextBlockDup0Text property
            /// </summary>
            private Text fOKTextBlockDup0Text;

            /// <summary>
            /// Backing field for HPDigitalSendinTitleBar property
            /// </summary>
            private TitleBar fHPDigitalSendinTitleBar;

            /// <summary>
            /// Backing field for SystemMenuBarSyDup2MenuBar property
            /// </summary>
            private MenuBar fSystemMenuBarSyDup2MenuBar;

            /// <summary>
            /// Backing field for SystemItem1Dup2MenuItem property
            /// </summary>
            private MenuItem fSystemItem1Dup2MenuItem;

            /// <summary>
            /// Backing field for MinimizeMinimizDup2Button property
            /// </summary>
            private Button fMinimizeMinimizDup2Button;

            /// <summary>
            /// Backing field for MaximizeMaximizDup2Button property
            /// </summary>
            private Button fMaximizeMaximizDup2Button;

            /// <summary>
            /// Backing field for CloseCloseDup2Button property
            /// </summary>
            private Button fCloseCloseDup2Button;

            /// <summary>
            /// Backing field for HelpButtonCB8CFButton property
            /// </summary>
            private Button fHelpButtonCB8CFButton;

            /// <summary>
            /// Backing field for HelpTextBlockText property
            /// </summary>
            private Text fHelpTextBlockText;

            /// <summary>
            /// Backing field for ApplyButton61E2Button property
            /// </summary>
            private Button fApplyButton61E2Button;

            /// <summary>
            /// Backing field for ApplyTextBlockText property
            /// </summary>
            private Text fApplyTextBlockText;

            /// <summary>
            /// Backing field for CancelButton65CButton property
            /// </summary>
            private Button fCancelButton65CButton;

            /// <summary>
            /// Backing field for CancelTextBlockDup1Text property
            /// </summary>
            private Text fCancelTextBlockDup1Text;

            /// <summary>
            /// Backing field for OKButtonCC2EF49Button property
            /// </summary>
            private Button fOKButtonCC2EF49Button;

            /// <summary>
            /// Backing field for OKTextBlockDup1Text property
            /// </summary>
            private Text fOKTextBlockDup1Text;

            /// <summary>
            /// Backing field for TabControlec0fdTab property
            /// </summary>
            private Tab fTabControlec0fdTab;

            /// <summary>
            /// Backing field for SystemWindowsCoDup0TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup0TabItem;

            /// <summary>
            /// Backing field for GeneralTextmGenText property
            /// </summary>
            private Text fGeneralTextmGenText;

            /// <summary>
            /// Backing field for GeneralTextBlocText property
            /// </summary>
            private Text fGeneralTextBlocText;

            /// <summary>
            /// Backing field for Text933345b04e3Text property
            /// </summary>
            private Text fText933345b04e3Text;

            /// <summary>
            /// Backing field for Text786caf67344Text property
            /// </summary>
            private Text fText786caf67344Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup1TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup1TabItem;

            /// <summary>
            /// Backing field for AuthenticationTDup0Text property
            /// </summary>
            private Text fAuthenticationTDup0Text;

            /// <summary>
            /// Backing field for AuthenticationTDup1Text property
            /// </summary>
            private Text fAuthenticationTDup1Text;

            /// <summary>
            /// Backing field for Text31EC91730B9Text property
            /// </summary>
            private Text fText31EC91730B9Text;

            /// <summary>
            /// Backing field for TextA479C271445Text property
            /// </summary>
            private Text fTextA479C271445Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup2TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup2TabItem;

            /// <summary>
            /// Backing field for EmailTextmEmailText property
            /// </summary>
            private Text fEmailTextmEmailText;

            /// <summary>
            /// Backing field for EmailTextBlockText property
            /// </summary>
            private Text fEmailTextBlockText;

            /// <summary>
            /// Backing field for Text32de714a8bdText property
            /// </summary>
            private Text fText32de714a8bdText;

            /// <summary>
            /// Backing field for Text3b2a8761f4fText property
            /// </summary>
            private Text fText3b2a8761f4fText;

            /// <summary>
            /// Backing field for TextBlockText property
            /// </summary>
            private Text fTextBlockText;

            /// <summary>
            /// Backing field for SystemWindowsCoDup3TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup3TabItem;

            /// <summary>
            /// Backing field for FaxTextmFaxTabLText property
            /// </summary>
            private Text fFaxTextmFaxTabLText;

            /// <summary>
            /// Backing field for FaxTextBlockText property
            /// </summary>
            private Text fFaxTextBlockText;

            /// <summary>
            /// Backing field for TextD1ED4F16F38Text property
            /// </summary>
            private Text fTextD1ED4F16F38Text;

            /// <summary>
            /// Backing field for Text7DDE04FD251Text property
            /// </summary>
            private Text fText7DDE04FD251Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup4TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup4TabItem;

            /// <summary>
            /// Backing field for SendtoFolderTexDup0Text property
            /// </summary>
            private Text fSendtoFolderTexDup0Text;

            /// <summary>
            /// Backing field for SendtoFolderTexDup1Text property
            /// </summary>
            private Text fSendtoFolderTexDup1Text;

            /// <summary>
            /// Backing field for Text7a57f43ecb1Text property
            /// </summary>
            private Text fText7a57f43ecb1Text;

            /// <summary>
            /// Backing field for Text654b650dd19Text property
            /// </summary>
            private Text fText654b650dd19Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup5TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup5TabItem;

            /// <summary>
            /// Backing field for WorkflowsTextmWText property
            /// </summary>
            private Text fWorkflowsTextmWText;

            /// <summary>
            /// Backing field for WorkflowsTextBlText property
            /// </summary>
            private Text fWorkflowsTextBlText;

            /// <summary>
            /// Backing field for Text22D9C34E84CText property
            /// </summary>
            private Text fText22D9C34E84CText;

            /// <summary>
            /// Backing field for TextC8D15BD39C8Text property
            /// </summary>
            private Text fTextC8D15BD39C8Text;

            /// <summary>
            /// Backing field for SystemWindowsCoDup6TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup6TabItem;

            /// <summary>
            /// Backing field for AddressingTextmText property
            /// </summary>
            private Text fAddressingTextmText;

            /// <summary>
            /// Backing field for AddressingTextBText property
            /// </summary>
            private Text fAddressingTextBText;

            /// <summary>
            /// Backing field for Text47EB5CBA4D1Text property
            /// </summary>
            private Text fText47EB5CBA4D1Text;

            /// <summary>
            /// Backing field for Text0757E148179Text property
            /// </summary>
            private Text fText0757E148179Text;

            /// <summary>
            /// Backing field for ScrollViewerPane property
            /// </summary>
            private Pane fScrollViewerPane;

            /// <summary>
            /// Backing field for AddressingNetwoCustom property
            /// </summary>
            private Custom fAddressingNetwoCustom;

            /// <summary>
            /// Backing field for ErrorConflictUsCustom property
            /// </summary>
            private Custom fErrorConflictUsCustom;

            /// <summary>
            /// Backing field for SearchMethodGroGroup property
            /// </summary>
            private Group fSearchMethodGroGroup;

            /// <summary>
            /// Backing field for SearchMethodTexText property
            /// </summary>
            private Text fSearchMethodTexText;

            /// <summary>
            /// Backing field for QuickSearchFindRadioButton property
            /// </summary>
            private RadioButton fQuickSearchFindRadioButton;

            /// <summary>
            /// Backing field for QuickSearchFindText property
            /// </summary>
            private Text fQuickSearchFindText;

            /// <summary>
            /// Backing field for DetailedSearchFRadioButton property
            /// </summary>
            private RadioButton fDetailedSearchFRadioButton;

            /// <summary>
            /// Backing field for DetailedSearchFText property
            /// </summary>
            private Text fDetailedSearchFText;

            /// <summary>
            /// Backing field for PersonalContactGroup property
            /// </summary>
            private Group fPersonalContactGroup;

            /// <summary>
            /// Backing field for PersonalContactText property
            /// </summary>
            private Text fPersonalContactText;

            /// <summary>
            /// Backing field for ThepersonalcontText property
            /// </summary>
            private Text fThepersonalcontText;

            /// <summary>
            /// Backing field for EnablePersonalCCheckBox property
            /// </summary>
            private CheckBox fEnablePersonalCCheckBox;

            /// <summary>
            /// Backing field for EnablePersonalCText property
            /// </summary>
            private Text fEnablePersonalCText;

            /// <summary>
            /// Backing field for TestExchangeSerGroup property
            /// </summary>
            private Group fTestExchangeSerGroup;

            /// <summary>
            /// Backing field for LDAPReplicationGroup property
            /// </summary>
            private Group fLDAPReplicationGroup;

            /// <summary>
            /// Backing field for LDAPReplicationText property
            /// </summary>
            private Text fLDAPReplicationText;

            /// <summary>
            /// Backing field for EnableNetworkCoCheckBox property
            /// </summary>
            private CheckBox fEnableNetworkCoCheckBox;

            /// <summary>
            /// Backing field for EnableNetworkCoText property
            /// </summary>
            private Text fEnableNetworkCoText;

            /// <summary>
            /// Backing field for ExpanderFD3555EGroup property
            /// </summary>
            private Group fExpanderFD3555EGroup;

            /// <summary>
            /// Backing field for NetworkDirectorGroup property
            /// </summary>
            private Group fNetworkDirectorGroup;

            /// <summary>
            /// Backing field for ExpanderDD1518FGroup property
            /// </summary>
            private Group fExpanderDD1518FGroup;

            /// <summary>
            /// Backing field for ServerAuthenticGroup property
            /// </summary>
            private Group fServerAuthenticGroup;

            /// <summary>
            /// Backing field for ExpanderB7151C3Group property
            /// </summary>
            private Group fExpanderB7151C3Group;

            /// <summary>
            /// Backing field for LDAPDatabaseSeaGroup property
            /// </summary>
            private Group fLDAPDatabaseSeaGroup;

            /// <summary>
            /// Backing field for Expander0D39A3CGroup property
            /// </summary>
            private Group fExpander0D39A3CGroup;

            /// <summary>
            /// Backing field for TestforLDAPRetrGroup property
            /// </summary>
            private Group fTestforLDAPRetrGroup;

            /// <summary>
            /// Backing field for Expander5DC4D6AGroup property
            /// </summary>
            private Group fExpander5DC4D6AGroup;

            /// <summary>
            /// Backing field for SyncScheduleSteGroup property
            /// </summary>
            private Group fSyncScheduleSteGroup;

            /// <summary>
            /// Backing field for ClearLDAPCacheBButton property
            /// </summary>
            private Button fClearLDAPCacheBButton;

            /// <summary>
            /// Backing field for ClearLDAPCacheTText property
            /// </summary>
            private Text fClearLDAPCacheTText;

            /// <summary>
            /// Backing field for AddressBookManaGroup property
            /// </summary>
            private Group fAddressBookManaGroup;

            /// <summary>
            /// Backing field for AddressBookManaDup0Text property
            /// </summary>
            private Text fAddressBookManaDup0Text;

            /// <summary>
            /// Backing field for AddressBookManaButton property
            /// </summary>
            private Button fAddressBookManaButton;

            /// <summary>
            /// Backing field for AddressBookManaDup1Text property
            /// </summary>
            private Text fAddressBookManaDup1Text;

            /// <summary>
            /// Backing field for ScrollBarVerticDup11ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarVerticDup11ScrollBar;

            /// <summary>
            /// Backing field for ScrollBarHorizoDup11ScrollBar property
            /// </summary>
            private ScrollBar fScrollBarHorizoDup11ScrollBar;

            /// <summary>
            /// Backing field for DeviceConfiguraTabItem property
            /// </summary>
            private TabItem fDeviceConfiguraTabItem;

            /// <summary>
            /// Backing field for DeviceConfiguraText property
            /// </summary>
            private Text fDeviceConfiguraText;

            /// <summary>
            /// Backing field for TemplateConfiguTabItem property
            /// </summary>
            private TabItem fTemplateConfiguTabItem;

            /// <summary>
            /// Backing field for TemplateConfiguText property
            /// </summary>
            private Text fTemplateConfiguText;

            /// <summary>
            /// Backing field for LogTabItem9b4f3TabItem property
            /// </summary>
            private TabItem fLogTabItem9b4f3TabItem;

            /// <summary>
            /// Backing field for LogTextBlockText property
            /// </summary>
            private Text fLogTextBlockText;

            /// <summary>
            /// Backing field for SystemWindowsCoDup7TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup7TabItem;

            /// <summary>
            /// Backing field for SecurityTextmSeText property
            /// </summary>
            private Text fSecurityTextmSeText;

            /// <summary>
            /// Backing field for SecurityTextBloText property
            /// </summary>
            private Text fSecurityTextBloText;

            /// <summary>
            /// Backing field for Text8A7A84DB894Text property
            /// </summary>
            private Text fText8A7A84DB894Text;

            /// <summary>
            /// Backing field for Text16F78FB18FFText property
            /// </summary>
            private Text fText16F78FB18FFText;

            /// <summary>
            /// Backing field for SystemWindowsCoDup8TabItem property
            /// </summary>
            private TabItem fSystemWindowsCoDup8TabItem;

            /// <summary>
            /// Backing field for AnalyticsTextmAText property
            /// </summary>
            private Text fAnalyticsTextmAText;

            /// <summary>
            /// Backing field for AnalyticsTextBlText property
            /// </summary>
            private Text fAnalyticsTextBlText;

            /// <summary>
            /// Backing field for AboutTabItemf45TabItem property
            /// </summary>
            private TabItem fAboutTabItemf45TabItem;

            /// <summary>
            /// Backing field for AboutTextBlockText property
            /// </summary>
            private Text fAboutTextBlockText;

            /// <summary>
            /// Backing field for DuplicateEntry3Window property
            /// </summary>
            private Window fDuplicateEntry3Window;

            /// <summary>
            /// Backing field for OKButton1Button property
            /// </summary>
            private Button fOKButton1Button;

            /// <summary>
            /// The Ip Address
            /// </summary>
            private string _ipaddress;

            /// <summary>
            /// Initializes a new instance of the <see cref="Contacts"/> class.
            /// </summary>
            /// <param name="framework">
            /// The framework.
            /// </param>
            public Contacts(UIAFramework framework)
            {
                Desktop = new Desktop(framework);
            }

            /// <summary>
            /// Initializes a new instance of the <see cref="Contacts"/> class using the default UIAFramework.
            /// </summary>
            public Contacts()
            {
                Desktop = new Desktop();
            }

            /// <summary>
            /// Initializes a new instance of the <see cref="Contacts"/> class using the default UIAFramework.
            /// </summary>
            /// <param name="address">
            /// The IP address.
            /// </param>
            public Contacts(string address)
            {
                Desktop = new Desktop();
                _ipaddress = address;
            }

            /// <summary>
            /// Gets Reference to desktop
            /// </summary>
            public Desktop Desktop { get; private set; }

            /// <summary>
            /// Gets Reference to HPDigitalSendinWindow
            /// </summary>
            public Window HPDigitalSendinWindow
            {
                get
                {
                    if (null == fHPDigitalSendinWindow)
                    {
                        fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                        fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                        fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_ipaddress})");
                    }

                    return fHPDigitalSendinWindow;
                }
            }

            /// <summary>
            /// Gets Reference to AddContactWindoWindow
            /// </summary>
            public Window AddContactWindoWindow
            {
                get
                {
                    if (null == fAddContactWindoWindow)
                    {
                        fAddContactWindoWindow = new Window("AddContactWindoWindow", HPDigitalSendinWindow);
                        fAddContactWindoWindow.UIMap.Scope = UIASeachScope.Children;
                        fAddContactWindoWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                        fAddContactWindoWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"49CF4389-339E-4319-93B6-4E1B0993ACAC");
                        fAddContactWindoWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Contact");
                    }

                    return fAddContactWindoWindow;
                }
            }

            /// <summary>
            /// Gets Reference to AddContactTitleBar
            /// </summary>
            public TitleBar AddContactTitleBar
            {
                get
                {
                    if (null == fAddContactTitleBar)
                    {
                        fAddContactTitleBar = new TitleBar("AddContactTitleBar", AddContactWindoWindow);
                        fAddContactTitleBar.UIMap.Scope = UIASeachScope.Children;
                        fAddContactTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                        fAddContactTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Contact");
                    }

                    return fAddContactTitleBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemMenuBarSyDup0MenuBar
            /// </summary>
            public MenuBar SystemMenuBarSyDup0MenuBar
            {
                get
                {
                    if (null == fSystemMenuBarSyDup0MenuBar)
                    {
                        fSystemMenuBarSyDup0MenuBar = new MenuBar("SystemMenuBarSyDup0MenuBar", AddContactTitleBar);
                        fSystemMenuBarSyDup0MenuBar.UIMap.Scope = UIASeachScope.Children;
                        fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                        fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                    }

                    return fSystemMenuBarSyDup0MenuBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemItem1Dup0MenuItem
            /// </summary>
            public MenuItem SystemItem1Dup0MenuItem
            {
                get
                {
                    if (null == fSystemItem1Dup0MenuItem)
                    {
                        fSystemItem1Dup0MenuItem = new MenuItem("SystemItem1Dup0MenuItem", SystemMenuBarSyDup0MenuBar);
                        fSystemItem1Dup0MenuItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                        fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                    }

                    return fSystemItem1Dup0MenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to MinimizeMinimizDup0Button
            /// </summary>
            public Button MinimizeMinimizDup0Button
            {
                get
                {
                    if (null == fMinimizeMinimizDup0Button)
                    {
                        fMinimizeMinimizDup0Button = new Button("MinimizeMinimizDup0Button", AddContactTitleBar);
                        fMinimizeMinimizDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                        fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                    }

                    return fMinimizeMinimizDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to MaximizeMaximizDup0Button
            /// </summary>
            public Button MaximizeMaximizDup0Button
            {
                get
                {
                    if (null == fMaximizeMaximizDup0Button)
                    {
                        fMaximizeMaximizDup0Button = new Button("MaximizeMaximizDup0Button", AddContactTitleBar);
                        fMaximizeMaximizDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                        fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                    }

                    return fMaximizeMaximizDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to CloseCloseDup0Button
            /// </summary>
            public Button CloseCloseDup0Button
            {
                get
                {
                    if (null == fCloseCloseDup0Button)
                    {
                        fCloseCloseDup0Button = new Button("CloseCloseDup0Button", AddContactTitleBar);
                        fCloseCloseDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                        fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                    }

                    return fCloseCloseDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to SaveButtonC5786Button
            /// </summary>
            public Button SaveButtonC5786Button
            {
                get
                {
                    if (null == fSaveButtonC5786Button)
                    {
                        fSaveButtonC5786Button = new Button("SaveButtonC5786Button", AddContactWindoWindow);
                        fSaveButtonC5786Button.UIMap.Scope = UIASeachScope.Children;
                        fSaveButtonC5786Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fSaveButtonC5786Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C578604A-795D-4d9e-9A22-F1DADA83D255");
                        fSaveButtonC5786Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save");
                    }

                    return fSaveButtonC5786Button;
                }
            }

            /// <summary>
            /// Gets Reference to SaveTextBlockText
            /// </summary>
            public Text SaveTextBlockText
            {
                get
                {
                    if (null == fSaveTextBlockText)
                    {
                        fSaveTextBlockText = new Text("SaveTextBlockText", SaveButtonC5786Button);
                        fSaveTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fSaveTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fSaveTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save");
                    }

                    return fSaveTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to CancelButton609Button
            /// </summary>
            public Button CancelButton609Button
            {
                get
                {
                    if (null == fCancelButton609Button)
                    {
                        fCancelButton609Button = new Button("CancelButton609Button", AddContactWindoWindow);
                        fCancelButton609Button.UIMap.Scope = UIASeachScope.Children;
                        fCancelButton609Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fCancelButton609Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"609D1DFA-CEBB-4a90-95CA-8D0DD276619A");
                        fCancelButton609Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    }

                    return fCancelButton609Button;
                }
            }

            /// <summary>
            /// Gets Reference to CancelTextBlockDup0Text
            /// </summary>
            public Text CancelTextBlockDup0Text
            {
                get
                {
                    if (null == fCancelTextBlockDup0Text)
                    {
                        fCancelTextBlockDup0Text = new Text("CancelTextBlockDup0Text", CancelButton609Button);
                        fCancelTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fCancelTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fCancelTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    }

                    return fCancelTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxA2BAD0DFEdit
            /// </summary>
            public Edit TextBoxA2BAD0DFEdit
            {
                get
                {
                    if (null == fTextBoxA2BAD0DFEdit)
                    {
                        fTextBoxA2BAD0DFEdit = new Edit("TextBoxA2BAD0DFEdit", AddContactWindoWindow);
                        fTextBoxA2BAD0DFEdit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxA2BAD0DFEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                        fTextBoxA2BAD0DFEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A2BAD0DF-7D4D-4a43-97A3-DDFC9E9E64F3");
                    }

                    return fTextBoxA2BAD0DFEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup0Pane
            /// </summary>
            public Pane ScrollViewerPARDup0Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup0Pane)
                    {
                        fScrollViewerPARDup0Pane = new Pane("ScrollViewerPARDup0Pane", TextBoxA2BAD0DFEdit);
                        fScrollViewerPARDup0Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                        fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    }

                    return fScrollViewerPARDup0Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup0ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup0ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup0ScrollBar)
                    {
                        fScrollBarVerticDup0ScrollBar = new ScrollBar("ScrollBarVerticDup0ScrollBar", ScrollViewerPARDup0Pane);
                        fScrollBarVerticDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    }

                    return fScrollBarVerticDup0ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup0ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup0ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup0ScrollBar)
                    {
                        fScrollBarHorizoDup0ScrollBar = new ScrollBar("ScrollBarHorizoDup0ScrollBar", ScrollViewerPARDup0Pane);
                        fScrollBarHorizoDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    }

                    return fScrollBarHorizoDup0ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxDEED2AE6Edit
            /// </summary>
            public Edit TextBoxDEED2AE6Edit
            {
                get
                {
                    if (null == fTextBoxDEED2AE6Edit)
                    {
                        fTextBoxDEED2AE6Edit = new Edit("TextBoxDEED2AE6Edit", AddContactWindoWindow);
                        fTextBoxDEED2AE6Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxDEED2AE6Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                        fTextBoxDEED2AE6Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DEED2AE6-9280-4f31-97A7-0C2070CD7850");
                    }

                    return fTextBoxDEED2AE6Edit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup1Pane
            /// </summary>
            public Pane ScrollViewerPARDup1Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup1Pane)
                    {
                        fScrollViewerPARDup1Pane = new Pane("ScrollViewerPARDup1Pane", TextBoxDEED2AE6Edit);
                        fScrollViewerPARDup1Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                        fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    }

                    return fScrollViewerPARDup1Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup1ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup1ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup1ScrollBar)
                    {
                        fScrollBarVerticDup1ScrollBar = new ScrollBar("ScrollBarVerticDup1ScrollBar", ScrollViewerPARDup1Pane);
                        fScrollBarVerticDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    }

                    return fScrollBarVerticDup1ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup1ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup1ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup1ScrollBar)
                    {
                        fScrollBarHorizoDup1ScrollBar = new ScrollBar("ScrollBarHorizoDup1ScrollBar", ScrollViewerPARDup1Pane);
                        fScrollBarHorizoDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    }

                    return fScrollBarHorizoDup1ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox16A55BEBEdit
            /// </summary>
            public Edit TextBox16A55BEBEdit
            {
                get
                {
                    if (null == fTextBox16A55BEBEdit)
                    {
                        fTextBox16A55BEBEdit = new Edit("TextBox16A55BEBEdit", AddContactWindoWindow);
                        fTextBox16A55BEBEdit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox16A55BEBEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                        fTextBox16A55BEBEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16A55BEB-602B-497a-98D1-543AE050B203");
                    }

                    return fTextBox16A55BEBEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup2Pane
            /// </summary>
            public Pane ScrollViewerPARDup2Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup2Pane)
                    {
                        fScrollViewerPARDup2Pane = new Pane("ScrollViewerPARDup2Pane", TextBox16A55BEBEdit);
                        fScrollViewerPARDup2Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                        fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    }

                    return fScrollViewerPARDup2Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup2ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup2ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup2ScrollBar)
                    {
                        fScrollBarVerticDup2ScrollBar = new ScrollBar("ScrollBarVerticDup2ScrollBar", ScrollViewerPARDup2Pane);
                        fScrollBarVerticDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    }

                    return fScrollBarVerticDup2ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup2ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup2ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup2ScrollBar)
                    {
                        fScrollBarHorizoDup2ScrollBar = new ScrollBar("ScrollBarHorizoDup2ScrollBar", ScrollViewerPARDup2Pane);
                        fScrollBarHorizoDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    }

                    return fScrollBarHorizoDup2ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxAC47DC0BEdit
            /// </summary>
            public Edit TextBoxAC47DC0BEdit
            {
                get
                {
                    if (null == fTextBoxAC47DC0BEdit)
                    {
                        fTextBoxAC47DC0BEdit = new Edit("TextBoxAC47DC0BEdit", AddContactWindoWindow);
                        fTextBoxAC47DC0BEdit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxAC47DC0BEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                        fTextBoxAC47DC0BEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AC47DC0B-7654-4c50-B5D2-784F625839A1");
                    }

                    return fTextBoxAC47DC0BEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup3Pane
            /// </summary>
            public Pane ScrollViewerPARDup3Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup3Pane)
                    {
                        fScrollViewerPARDup3Pane = new Pane("ScrollViewerPARDup3Pane", TextBoxAC47DC0BEdit);
                        fScrollViewerPARDup3Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                        fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    }

                    return fScrollViewerPARDup3Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup3ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup3ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup3ScrollBar)
                    {
                        fScrollBarVerticDup3ScrollBar = new ScrollBar("ScrollBarVerticDup3ScrollBar", ScrollViewerPARDup3Pane);
                        fScrollBarVerticDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    }

                    return fScrollBarVerticDup3ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup3ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup3ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup3ScrollBar)
                    {
                        fScrollBarHorizoDup3ScrollBar = new ScrollBar("ScrollBarHorizoDup3ScrollBar", ScrollViewerPARDup3Pane);
                        fScrollBarHorizoDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    }

                    return fScrollBarHorizoDup3ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox46D1A38BEdit
            /// </summary>
            public Edit TextBox46D1A38BEdit
            {
                get
                {
                    if (null == fTextBox46D1A38BEdit)
                    {
                        fTextBox46D1A38BEdit = new Edit("TextBox46D1A38BEdit", AddContactWindoWindow);
                        fTextBox46D1A38BEdit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox46D1A38BEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                        fTextBox46D1A38BEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"46D1A38B-CEEE-4b4e-B404-E65DBE3D69A0");
                    }

                    return fTextBox46D1A38BEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup4Pane
            /// </summary>
            public Pane ScrollViewerPARDup4Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup4Pane)
                    {
                        fScrollViewerPARDup4Pane = new Pane("ScrollViewerPARDup4Pane", TextBox46D1A38BEdit);
                        fScrollViewerPARDup4Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                        fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    }

                    return fScrollViewerPARDup4Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup4ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup4ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup4ScrollBar)
                    {
                        fScrollBarVerticDup4ScrollBar = new ScrollBar("ScrollBarVerticDup4ScrollBar", ScrollViewerPARDup4Pane);
                        fScrollBarVerticDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    }

                    return fScrollBarVerticDup4ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup4ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup4ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup4ScrollBar)
                    {
                        fScrollBarHorizoDup4ScrollBar = new ScrollBar("ScrollBarHorizoDup4ScrollBar", ScrollViewerPARDup4Pane);
                        fScrollBarHorizoDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    }

                    return fScrollBarHorizoDup4ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox1C07E514Edit
            /// </summary>
            public Edit TextBox1C07E514Edit
            {
                get
                {
                    if (null == fTextBox1C07E514Edit)
                    {
                        fTextBox1C07E514Edit = new Edit("TextBox1C07E514Edit", AddContactWindoWindow);
                        fTextBox1C07E514Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox1C07E514Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                        fTextBox1C07E514Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1C07E514-879C-47b8-B0E3-1F812A4BE86C");
                    }

                    return fTextBox1C07E514Edit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup5Pane
            /// </summary>
            public Pane ScrollViewerPARDup5Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup5Pane)
                    {
                        fScrollViewerPARDup5Pane = new Pane("ScrollViewerPARDup5Pane", TextBox1C07E514Edit);
                        fScrollViewerPARDup5Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                        fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    }

                    return fScrollViewerPARDup5Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup5ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup5ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup5ScrollBar)
                    {
                        fScrollBarVerticDup5ScrollBar = new ScrollBar("ScrollBarVerticDup5ScrollBar", ScrollViewerPARDup5Pane);
                        fScrollBarVerticDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    }

                    return fScrollBarVerticDup5ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup5ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup5ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup5ScrollBar)
                    {
                        fScrollBarHorizoDup5ScrollBar = new ScrollBar("ScrollBarHorizoDup5ScrollBar", ScrollViewerPARDup5Pane);
                        fScrollBarHorizoDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    }

                    return fScrollBarHorizoDup5ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxB90C0C26Edit
            /// </summary>
            public Edit TextBoxB90C0C26Edit
            {
                get
                {
                    if (null == fTextBoxB90C0C26Edit)
                    {
                        fTextBoxB90C0C26Edit = new Edit("TextBoxB90C0C26Edit", AddContactWindoWindow);
                        fTextBoxB90C0C26Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxB90C0C26Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                        fTextBoxB90C0C26Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B90C0C26-3F65-4a58-ADCC-B0222E6B40EE");
                    }

                    return fTextBoxB90C0C26Edit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup6Pane
            /// </summary>
            public Pane ScrollViewerPARDup6Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup6Pane)
                    {
                        fScrollViewerPARDup6Pane = new Pane("ScrollViewerPARDup6Pane", TextBoxB90C0C26Edit);
                        fScrollViewerPARDup6Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                        fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    }

                    return fScrollViewerPARDup6Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup6ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup6ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup6ScrollBar)
                    {
                        fScrollBarVerticDup6ScrollBar = new ScrollBar("ScrollBarVerticDup6ScrollBar", ScrollViewerPARDup6Pane);
                        fScrollBarVerticDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    }

                    return fScrollBarVerticDup6ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup6ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup6ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup6ScrollBar)
                    {
                        fScrollBarHorizoDup6ScrollBar = new ScrollBar("ScrollBarHorizoDup6ScrollBar", ScrollViewerPARDup6Pane);
                        fScrollBarHorizoDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    }

                    return fScrollBarHorizoDup6ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox6DFD1208Edit
            /// </summary>
            public Edit TextBox6DFD1208Edit
            {
                get
                {
                    if (null == fTextBox6DFD1208Edit)
                    {
                        fTextBox6DFD1208Edit = new Edit("TextBox6DFD1208Edit", AddContactWindoWindow);
                        fTextBox6DFD1208Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox6DFD1208Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                        fTextBox6DFD1208Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6DFD1208-67E3-4b74-96F9-6F88E8764E60");
                    }

                    return fTextBox6DFD1208Edit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup7Pane
            /// </summary>
            public Pane ScrollViewerPARDup7Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup7Pane)
                    {
                        fScrollViewerPARDup7Pane = new Pane("ScrollViewerPARDup7Pane", TextBox6DFD1208Edit);
                        fScrollViewerPARDup7Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup7Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                        fScrollViewerPARDup7Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    }

                    return fScrollViewerPARDup7Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup7ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup7ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup7ScrollBar)
                    {
                        fScrollBarVerticDup7ScrollBar = new ScrollBar("ScrollBarVerticDup7ScrollBar", ScrollViewerPARDup7Pane);
                        fScrollBarVerticDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    }

                    return fScrollBarVerticDup7ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup7ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup7ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup7ScrollBar)
                    {
                        fScrollBarHorizoDup7ScrollBar = new ScrollBar("ScrollBarHorizoDup7ScrollBar", ScrollViewerPARDup7Pane);
                        fScrollBarHorizoDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    }

                    return fScrollBarHorizoDup7ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to TextBox739259F1Edit
            /// </summary>
            public Edit TextBox739259F1Edit
            {
                get
                {
                    if (null == fTextBox739259F1Edit)
                    {
                        fTextBox739259F1Edit = new Edit("TextBox739259F1Edit", AddContactWindoWindow);
                        fTextBox739259F1Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBox739259F1Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                        fTextBox739259F1Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"739259F1-FDC2-4317-BE86-1C7CE7D24AF9");
                    }

                    return fTextBox739259F1Edit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup8Pane
            /// </summary>
            public Pane ScrollViewerPARDup8Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup8Pane)
                    {
                        fScrollViewerPARDup8Pane = new Pane("ScrollViewerPARDup8Pane", TextBox739259F1Edit);
                        fScrollViewerPARDup8Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup8Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                        fScrollViewerPARDup8Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    }

                    return fScrollViewerPARDup8Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup8ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup8ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup8ScrollBar)
                    {
                        fScrollBarVerticDup8ScrollBar = new ScrollBar("ScrollBarVerticDup8ScrollBar", ScrollViewerPARDup8Pane);
                        fScrollBarVerticDup8ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarVerticDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    }

                    return fScrollBarVerticDup8ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup8ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup8ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup8ScrollBar)
                    {
                        fScrollBarHorizoDup8ScrollBar = new ScrollBar("ScrollBarHorizoDup8ScrollBar", ScrollViewerPARDup8Pane);
                        fScrollBarHorizoDup8ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarHorizoDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    }

                    return fScrollBarHorizoDup8ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxE8E3CCF9Edit
            /// </summary>
            public Edit TextBoxE8E3CCF9Edit
            {
                get
                {
                    if (null == fTextBoxE8E3CCF9Edit)
                    {
                        fTextBoxE8E3CCF9Edit = new Edit("TextBoxE8E3CCF9Edit", AddContactWindoWindow);
                        fTextBoxE8E3CCF9Edit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxE8E3CCF9Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                        fTextBoxE8E3CCF9Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"E8E3CCF9-1322-414c-987F-A6D05D2FE05E");
                    }

                    return fTextBoxE8E3CCF9Edit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup9Pane
            /// </summary>
            public Pane ScrollViewerPARDup9Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup9Pane)
                    {
                        fScrollViewerPARDup9Pane = new Pane("ScrollViewerPARDup9Pane", TextBoxE8E3CCF9Edit);
                        fScrollViewerPARDup9Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup9Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                        fScrollViewerPARDup9Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    }

                    return fScrollViewerPARDup9Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup9ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup9ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup9ScrollBar)
                    {
                        fScrollBarVerticDup9ScrollBar = new ScrollBar("ScrollBarVerticDup9ScrollBar", ScrollViewerPARDup9Pane);
                        fScrollBarVerticDup9ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarVerticDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    }

                    return fScrollBarVerticDup9ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup9ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup9ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup9ScrollBar)
                    {
                        fScrollBarHorizoDup9ScrollBar = new ScrollBar("ScrollBarHorizoDup9ScrollBar", ScrollViewerPARDup9Pane);
                        fScrollBarHorizoDup9ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarHorizoDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    }

                    return fScrollBarHorizoDup9ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ContactNameText
            /// </summary>
            public Text ContactNameText
            {
                get
                {
                    if (null == fContactNameText)
                    {
                        fContactNameText = new Text("ContactNameText", AddContactWindoWindow);
                        fContactNameText.UIMap.Scope = UIASeachScope.Children;
                        fContactNameText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fContactNameText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Contact Name");
                    }

                    return fContactNameText;
                }
            }

            /// <summary>
            /// Gets Reference to ContactNameTextDup0Text
            /// </summary>
            public Text ContactNameTextDup0Text
            {
                get
                {
                    if (null == fContactNameTextDup0Text)
                    {
                        fContactNameTextDup0Text = new Text("ContactNameTextDup0Text", ContactNameText);
                        fContactNameTextDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fContactNameTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fContactNameTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Contact Name");
                    }

                    return fContactNameTextDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to FirstNameText
            /// </summary>
            public Text FirstNameText
            {
                get
                {
                    if (null == fFirstNameText)
                    {
                        fFirstNameText = new Text("FirstNameText", AddContactWindoWindow);
                        fFirstNameText.UIMap.Scope = UIASeachScope.Children;
                        fFirstNameText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fFirstNameText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"First Name");
                    }

                    return fFirstNameText;
                }
            }

            /// <summary>
            /// Gets Reference to FirstNameTextBlText
            /// </summary>
            public Text FirstNameTextBlText
            {
                get
                {
                    if (null == fFirstNameTextBlText)
                    {
                        fFirstNameTextBlText = new Text("FirstNameTextBlText", FirstNameText);
                        fFirstNameTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fFirstNameTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fFirstNameTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"First Name");
                    }

                    return fFirstNameTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to LastNameText
            /// </summary>
            public Text LastNameText
            {
                get
                {
                    if (null == fLastNameText)
                    {
                        fLastNameText = new Text("LastNameText", AddContactWindoWindow);
                        fLastNameText.UIMap.Scope = UIASeachScope.Children;
                        fLastNameText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fLastNameText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Last Name");
                    }

                    return fLastNameText;
                }
            }

            /// <summary>
            /// Gets Reference to LastNameTextBloText
            /// </summary>
            public Text LastNameTextBloText
            {
                get
                {
                    if (null == fLastNameTextBloText)
                    {
                        fLastNameTextBloText = new Text("LastNameTextBloText", LastNameText);
                        fLastNameTextBloText.UIMap.Scope = UIASeachScope.Children;
                        fLastNameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fLastNameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Last Name");
                    }

                    return fLastNameTextBloText;
                }
            }

            /// <summary>
            /// Gets Reference to EmailAddressText
            /// </summary>
            public Text EmailAddressText
            {
                get
                {
                    if (null == fEmailAddressText)
                    {
                        fEmailAddressText = new Text("EmailAddressText", AddContactWindoWindow);
                        fEmailAddressText.UIMap.Scope = UIASeachScope.Children;
                        fEmailAddressText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fEmailAddressText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail Address");
                    }

                    return fEmailAddressText;
                }
            }

            /// <summary>
            /// Gets Reference to EmailAddressTexDup0Text
            /// </summary>
            public Text EmailAddressTexDup0Text
            {
                get
                {
                    if (null == fEmailAddressTexDup0Text)
                    {
                        fEmailAddressTexDup0Text = new Text("EmailAddressTexDup0Text", EmailAddressText);
                        fEmailAddressTexDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fEmailAddressTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fEmailAddressTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail Address");
                    }

                    return fEmailAddressTexDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to OrganizationText
            /// </summary>
            public Text OrganizationText
            {
                get
                {
                    if (null == fOrganizationText)
                    {
                        fOrganizationText = new Text("OrganizationText", AddContactWindoWindow);
                        fOrganizationText.UIMap.Scope = UIASeachScope.Children;
                        fOrganizationText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fOrganizationText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Organization");
                    }

                    return fOrganizationText;
                }
            }

            /// <summary>
            /// Gets Reference to OrganizationTexText
            /// </summary>
            public Text OrganizationTexText
            {
                get
                {
                    if (null == fOrganizationTexText)
                    {
                        fOrganizationTexText = new Text("OrganizationTexText", OrganizationText);
                        fOrganizationTexText.UIMap.Scope = UIASeachScope.Children;
                        fOrganizationTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fOrganizationTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Organization");
                    }

                    return fOrganizationTexText;
                }
            }

            /// <summary>
            /// Gets Reference to CountryRegionText
            /// </summary>
            public Text CountryRegionText
            {
                get
                {
                    if (null == fCountryRegionText)
                    {
                        fCountryRegionText = new Text("CountryRegionText", AddContactWindoWindow);
                        fCountryRegionText.UIMap.Scope = UIASeachScope.Children;
                        fCountryRegionText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fCountryRegionText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Country/Region");
                    }

                    return fCountryRegionText;
                }
            }

            /// <summary>
            /// Gets Reference to CountryRegionTeText
            /// </summary>
            public Text CountryRegionTeText
            {
                get
                {
                    if (null == fCountryRegionTeText)
                    {
                        fCountryRegionTeText = new Text("CountryRegionTeText", CountryRegionText);
                        fCountryRegionTeText.UIMap.Scope = UIASeachScope.Children;
                        fCountryRegionTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fCountryRegionTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Country/Region");
                    }

                    return fCountryRegionTeText;
                }
            }

            /// <summary>
            /// Gets Reference to PhoneNumberText
            /// </summary>
            public Text PhoneNumberText
            {
                get
                {
                    if (null == fPhoneNumberText)
                    {
                        fPhoneNumberText = new Text("PhoneNumberText", AddContactWindoWindow);
                        fPhoneNumberText.UIMap.Scope = UIASeachScope.Children;
                        fPhoneNumberText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fPhoneNumberText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Phone Number");
                    }

                    return fPhoneNumberText;
                }
            }

            /// <summary>
            /// Gets Reference to PhoneNumberTextText
            /// </summary>
            public Text PhoneNumberTextText
            {
                get
                {
                    if (null == fPhoneNumberTextText)
                    {
                        fPhoneNumberTextText = new Text("PhoneNumberTextText", PhoneNumberText);
                        fPhoneNumberTextText.UIMap.Scope = UIASeachScope.Children;
                        fPhoneNumberTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fPhoneNumberTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Phone Number");
                    }

                    return fPhoneNumberTextText;
                }
            }

            /// <summary>
            /// Gets Reference to UnitText
            /// </summary>
            public Text UnitText
            {
                get
                {
                    if (null == fUnitText)
                    {
                        fUnitText = new Text("UnitText", AddContactWindoWindow);
                        fUnitText.UIMap.Scope = UIASeachScope.Children;
                        fUnitText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fUnitText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Unit");
                    }

                    return fUnitText;
                }
            }

            /// <summary>
            /// Gets Reference to UnitTextBlockText
            /// </summary>
            public Text UnitTextBlockText
            {
                get
                {
                    if (null == fUnitTextBlockText)
                    {
                        fUnitTextBlockText = new Text("UnitTextBlockText", UnitText);
                        fUnitTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fUnitTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fUnitTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Unit");
                    }

                    return fUnitTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to CityText
            /// </summary>
            public Text CityText
            {
                get
                {
                    if (null == fCityText)
                    {
                        fCityText = new Text("CityText", AddContactWindoWindow);
                        fCityText.UIMap.Scope = UIASeachScope.Children;
                        fCityText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fCityText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"City");
                    }

                    return fCityText;
                }
            }

            /// <summary>
            /// Gets Reference to CityTextBlockText
            /// </summary>
            public Text CityTextBlockText
            {
                get
                {
                    if (null == fCityTextBlockText)
                    {
                        fCityTextBlockText = new Text("CityTextBlockText", CityText);
                        fCityTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fCityTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fCityTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"City");
                    }

                    return fCityTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to FaxNumberText
            /// </summary>
            public Text FaxNumberText
            {
                get
                {
                    if (null == fFaxNumberText)
                    {
                        fFaxNumberText = new Text("FaxNumberText", AddContactWindoWindow);
                        fFaxNumberText.UIMap.Scope = UIASeachScope.Children;
                        fFaxNumberText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fFaxNumberText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax Number");
                    }

                    return fFaxNumberText;
                }
            }

            /// <summary>
            /// Gets Reference to FaxNumberTextBlDup0Text
            /// </summary>
            public Text FaxNumberTextBlDup0Text
            {
                get
                {
                    if (null == fFaxNumberTextBlDup0Text)
                    {
                        fFaxNumberTextBlDup0Text = new Text("FaxNumberTextBlDup0Text", FaxNumberText);
                        fFaxNumberTextBlDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fFaxNumberTextBlDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fFaxNumberTextBlDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax Number");
                    }

                    return fFaxNumberTextBlDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookManaWindow
            /// </summary>
            public Window AddressBookManaWindow
            {
                get
                {
                    if (null == fAddressBookManaWindow)
                    {
                        fAddressBookManaWindow = new Window("AddressBookManaWindow", HPDigitalSendinWindow);
                        fAddressBookManaWindow.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                        fAddressBookManaWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"391E55DE-0CF0-4955-829E-6334ED7FFCE7");
                        fAddressBookManaWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                    }

                    return fAddressBookManaWindow;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookManaTitleBar
            /// </summary>
            public TitleBar AddressBookManaTitleBar
            {
                get
                {
                    if (null == fAddressBookManaTitleBar)
                    {
                        fAddressBookManaTitleBar = new TitleBar("AddressBookManaTitleBar", AddressBookManaWindow);
                        fAddressBookManaTitleBar.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                        fAddressBookManaTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                    }

                    return fAddressBookManaTitleBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemMenuBarSyDup1MenuBar
            /// </summary>
            public MenuBar SystemMenuBarSyDup1MenuBar
            {
                get
                {
                    if (null == fSystemMenuBarSyDup1MenuBar)
                    {
                        fSystemMenuBarSyDup1MenuBar = new MenuBar("SystemMenuBarSyDup1MenuBar", AddressBookManaTitleBar);
                        fSystemMenuBarSyDup1MenuBar.UIMap.Scope = UIASeachScope.Children;
                        fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                        fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                    }

                    return fSystemMenuBarSyDup1MenuBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemItem1Dup1MenuItem
            /// </summary>
            public MenuItem SystemItem1Dup1MenuItem
            {
                get
                {
                    if (null == fSystemItem1Dup1MenuItem)
                    {
                        fSystemItem1Dup1MenuItem = new MenuItem("SystemItem1Dup1MenuItem", SystemMenuBarSyDup1MenuBar);
                        fSystemItem1Dup1MenuItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                        fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                    }

                    return fSystemItem1Dup1MenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to MinimizeMinimizDup1Button
            /// </summary>
            public Button MinimizeMinimizDup1Button
            {
                get
                {
                    if (null == fMinimizeMinimizDup1Button)
                    {
                        fMinimizeMinimizDup1Button = new Button("MinimizeMinimizDup1Button", AddressBookManaTitleBar);
                        fMinimizeMinimizDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                        fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                    }

                    return fMinimizeMinimizDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to MaximizeMaximizDup1Button
            /// </summary>
            public Button MaximizeMaximizDup1Button
            {
                get
                {
                    if (null == fMaximizeMaximizDup1Button)
                    {
                        fMaximizeMaximizDup1Button = new Button("MaximizeMaximizDup1Button", AddressBookManaTitleBar);
                        fMaximizeMaximizDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                        fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                    }

                    return fMaximizeMaximizDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to CloseCloseDup1Button
            /// </summary>
            public Button CloseCloseDup1Button
            {
                get
                {
                    if (null == fCloseCloseDup1Button)
                    {
                        fCloseCloseDup1Button = new Button("CloseCloseDup1Button", AddressBookManaTitleBar);
                        fCloseCloseDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                        fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                    }

                    return fCloseCloseDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to DSSAddressBooksDup0Text
            /// </summary>
            public Text DSSAddressBooksDup0Text
            {
                get
                {
                    if (null == fDSSAddressBooksDup0Text)
                    {
                        fDSSAddressBooksDup0Text = new Text("DSSAddressBooksDup0Text", AddressBookManaWindow);
                        fDSSAddressBooksDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fDSSAddressBooksDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fDSSAddressBooksDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"DSS Address Books");
                    }

                    return fDSSAddressBooksDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to DSSAddressBooksDup1Text
            /// </summary>
            public Text DSSAddressBooksDup1Text
            {
                get
                {
                    if (null == fDSSAddressBooksDup1Text)
                    {
                        fDSSAddressBooksDup1Text = new Text("DSSAddressBooksDup1Text", DSSAddressBooksDup0Text);
                        fDSSAddressBooksDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fDSSAddressBooksDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fDSSAddressBooksDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"DSS Address Books");
                    }

                    return fDSSAddressBooksDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to TreeView87DDA4CTree
            /// </summary>
            public Tree TreeView87DDA4CTree
            {
                get
                {
                    if (null == fTreeView87DDA4CTree)
                    {
                        fTreeView87DDA4CTree = new Tree("TreeView87DDA4CTree", AddressBookManaWindow);
                        fTreeView87DDA4CTree.UIMap.Scope = UIASeachScope.Children;
                        fTreeView87DDA4CTree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeView");
                        fTreeView87DDA4CTree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"87DDA4CA-8AA3-4101-B507-205367EF1C65");
                    }

                    return fTreeView87DDA4CTree;
                }
            }

            /// <summary>
            /// Gets Reference to PublicTreeViewITreeItem
            /// </summary>
            public TreeItem PublicTreeViewITreeItem
            {
                get
                {
                    if (null == fPublicTreeViewITreeItem)
                    {
                        fPublicTreeViewITreeItem = new TreeItem("PublicTreeViewITreeItem", TreeView87DDA4CTree);
                        fPublicTreeViewITreeItem.UIMap.Scope = UIASeachScope.Children;
                        fPublicTreeViewITreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                        fPublicTreeViewITreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Public");
                    }

                    return fPublicTreeViewITreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to ButtonExpanderDup0Button
            /// </summary>
            public Button ButtonExpanderDup0Button
            {
                get
                {
                    if (null == fButtonExpanderDup0Button)
                    {
                        fButtonExpanderDup0Button = new Button("ButtonExpanderDup0Button", PublicTreeViewITreeItem);
                        fButtonExpanderDup0Button.UIMap.Scope = UIASeachScope.Children;
                        fButtonExpanderDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fButtonExpanderDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                    }

                    return fButtonExpanderDup0Button;
                }
            }

            /// <summary>
            /// Gets Reference to PublicTextBlockText
            /// </summary>
            public Text PublicTextBlockText
            {
                get
                {
                    if (null == fPublicTextBlockText)
                    {
                        fPublicTextBlockText = new Text("PublicTextBlockText", PublicTreeViewITreeItem);
                        fPublicTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fPublicTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fPublicTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Public");
                    }

                    return fPublicTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to PrivateAddressBTreeItem
            /// </summary>
            public TreeItem PrivateAddressBTreeItem
            {
                get
                {
                    if (null == fPrivateAddressBTreeItem)
                    {
                        fPrivateAddressBTreeItem = new TreeItem("PrivateAddressBTreeItem", TreeView87DDA4CTree);
                        fPrivateAddressBTreeItem.UIMap.Scope = UIASeachScope.Children;
                        fPrivateAddressBTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                        fPrivateAddressBTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Private Address Books");
                    }

                    return fPrivateAddressBTreeItem;
                }
            }

            /// <summary>
            /// Gets Reference to ButtonExpanderDup1Button
            /// </summary>
            public Button ButtonExpanderDup1Button
            {
                get
                {
                    if (null == fButtonExpanderDup1Button)
                    {
                        fButtonExpanderDup1Button = new Button("ButtonExpanderDup1Button", PrivateAddressBTreeItem);
                        fButtonExpanderDup1Button.UIMap.Scope = UIASeachScope.Children;
                        fButtonExpanderDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fButtonExpanderDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                    }

                    return fButtonExpanderDup1Button;
                }
            }

            /// <summary>
            /// Gets Reference to PrivateAddressBText
            /// </summary>
            public Text PrivateAddressBText
            {
                get
                {
                    if (null == fPrivateAddressBText)
                    {
                        fPrivateAddressBText = new Text("PrivateAddressBText", PrivateAddressBTreeItem);
                        fPrivateAddressBText.UIMap.Scope = UIASeachScope.Children;
                        fPrivateAddressBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fPrivateAddressBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Private Address Books");
                    }

                    return fPrivateAddressBText;
                }
            }

            /// <summary>
            /// Gets Reference to ExportButtonA1CButton
            /// </summary>
            public Button ExportButtonA1CButton
            {
                get
                {
                    if (null == fExportButtonA1CButton)
                    {
                        fExportButtonA1CButton = new Button("ExportButtonA1CButton", AddressBookManaWindow);
                        fExportButtonA1CButton.UIMap.Scope = UIASeachScope.Children;
                        fExportButtonA1CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fExportButtonA1CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A1CCB21F-FF18-45c0-9508-205AB68DF6FA");
                        fExportButtonA1CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                    }

                    return fExportButtonA1CButton;
                }
            }

            /// <summary>
            /// Gets Reference to ExportTextBlockText
            /// </summary>
            public Text ExportTextBlockText
            {
                get
                {
                    if (null == fExportTextBlockText)
                    {
                        fExportTextBlockText = new Text("ExportTextBlockText", ExportButtonA1CButton);
                        fExportTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                    }

                    return fExportTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to DeleteButton1B6Button
            /// </summary>
            public Button DeleteButton1B6Button
            {
                get
                {
                    if (null == fDeleteButton1B6Button)
                    {
                        fDeleteButton1B6Button = new Button("DeleteButton1B6Button", AddressBookManaWindow);
                        fDeleteButton1B6Button.UIMap.Scope = UIASeachScope.Children;
                        fDeleteButton1B6Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fDeleteButton1B6Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1B69E89F-D211-4da8-B934-C5619A2C5295");
                        fDeleteButton1B6Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                    }

                    return fDeleteButton1B6Button;
                }
            }

            /// <summary>
            /// Gets Reference to DeleteTextBlockDup0Text
            /// </summary>
            public Text DeleteTextBlockDup0Text
            {
                get
                {
                    if (null == fDeleteTextBlockDup0Text)
                    {
                        fDeleteTextBlockDup0Text = new Text("DeleteTextBlockDup0Text", DeleteButton1B6Button);
                        fDeleteTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fDeleteTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fDeleteTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                    }

                    return fDeleteTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to ImportAddressBoButton
            /// </summary>
            public Button ImportAddressBoButton
            {
                get
                {
                    if (null == fImportAddressBoButton)
                    {
                        fImportAddressBoButton = new Button("ImportAddressBoButton", AddressBookManaWindow);
                        fImportAddressBoButton.UIMap.Scope = UIASeachScope.Children;
                        fImportAddressBoButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fImportAddressBoButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2822A2FE-4E84-44ce-B27A-B204BD728AA6");
                        fImportAddressBoButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import Address Book");
                    }

                    return fImportAddressBoButton;
                }
            }

            /// <summary>
            /// Gets Reference to ImportAddressBoText
            /// </summary>
            public Text ImportAddressBoText
            {
                get
                {
                    if (null == fImportAddressBoText)
                    {
                        fImportAddressBoText = new Text("ImportAddressBoText", ImportAddressBoButton);
                        fImportAddressBoText.UIMap.Scope = UIASeachScope.Children;
                        fImportAddressBoText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fImportAddressBoText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import Address Book");
                    }

                    return fImportAddressBoText;
                }
            }

            /// <summary>
            /// Gets Reference to GridSplitterThumb
            /// </summary>
            public Thumb GridSplitterThumb
            {
                get
                {
                    if (null == fGridSplitterThumb)
                    {
                        fGridSplitterThumb = new Thumb("GridSplitterThumb", AddressBookManaWindow);
                        fGridSplitterThumb.UIMap.Scope = UIASeachScope.Children;
                        fGridSplitterThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridSplitter");
                    }

                    return fGridSplitterThumb;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookContDup0Text
            /// </summary>
            public Text AddressBookContDup0Text
            {
                get
                {
                    if (null == fAddressBookContDup0Text)
                    {
                        fAddressBookContDup0Text = new Text("AddressBookContDup0Text", AddressBookManaWindow);
                        fAddressBookContDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookContDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fAddressBookContDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Contacts");
                    }

                    return fAddressBookContDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookContDup1Text
            /// </summary>
            public Text AddressBookContDup1Text
            {
                get
                {
                    if (null == fAddressBookContDup1Text)
                    {
                        fAddressBookContDup1Text = new Text("AddressBookContDup1Text", AddressBookContDup0Text);
                        fAddressBookContDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookContDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAddressBookContDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Contacts");
                    }

                    return fAddressBookContDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to RefreshButton81Button
            /// </summary>
            public Button RefreshButton81Button
            {
                get
                {
                    if (null == fRefreshButton81Button)
                    {
                        fRefreshButton81Button = new Button("RefreshButton81Button", AddressBookManaWindow);
                        fRefreshButton81Button.UIMap.Scope = UIASeachScope.Children;
                        fRefreshButton81Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fRefreshButton81Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8136A442-0D15-4415-920C-CA43DED3D002");
                        fRefreshButton81Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Refresh");
                    }

                    return fRefreshButton81Button;
                }
            }

            /// <summary>
            /// Gets Reference to RefreshTextBlocText
            /// </summary>
            public Text RefreshTextBlocText
            {
                get
                {
                    if (null == fRefreshTextBlocText)
                    {
                        fRefreshTextBlocText = new Text("RefreshTextBlocText", RefreshButton81Button);
                        fRefreshTextBlocText.UIMap.Scope = UIASeachScope.Children;
                        fRefreshTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fRefreshTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Refresh");
                    }

                    return fRefreshTextBlocText;
                }
            }

            /// <summary>
            /// Gets Reference to SearchForText
            /// </summary>
            public Text SearchForText
            {
                get
                {
                    if (null == fSearchForText)
                    {
                        fSearchForText = new Text("SearchForText", AddressBookManaWindow);
                        fSearchForText.UIMap.Scope = UIASeachScope.Children;
                        fSearchForText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fSearchForText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search For");
                    }

                    return fSearchForText;
                }
            }

            /// <summary>
            /// Gets Reference to SearchForTextBlText
            /// </summary>
            public Text SearchForTextBlText
            {
                get
                {
                    if (null == fSearchForTextBlText)
                    {
                        fSearchForTextBlText = new Text("SearchForTextBlText", SearchForText);
                        fSearchForTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fSearchForTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fSearchForTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search For");
                    }

                    return fSearchForTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to ComboBoxA5F891AComboBox
            /// </summary>
            public ComboBox ComboBoxA5F891AComboBox
            {
                get
                {
                    if (null == fComboBoxA5F891AComboBox)
                    {
                        fComboBoxA5F891AComboBox = new ComboBox("ComboBoxA5F891AComboBox", AddressBookManaWindow);
                        fComboBoxA5F891AComboBox.UIMap.Scope = UIASeachScope.Children;
                        fComboBoxA5F891AComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                        fComboBoxA5F891AComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A5F891A4-D564-4D03-A3CF-020D3DFEABFE");
                    }

                    return fComboBoxA5F891AComboBox;
                }
            }

            /// <summary>
            /// Gets Reference to TextBoxA7B3B6CFEdit
            /// </summary>
            public Edit TextBoxA7B3B6CFEdit
            {
                get
                {
                    if (null == fTextBoxA7B3B6CFEdit)
                    {
                        fTextBoxA7B3B6CFEdit = new Edit("TextBoxA7B3B6CFEdit", AddressBookManaWindow);
                        fTextBoxA7B3B6CFEdit.UIMap.Scope = UIASeachScope.Children;
                        fTextBoxA7B3B6CFEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                        fTextBoxA7B3B6CFEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A7B3B6CF-CA57-4C41-B012-E680FF33571A");
                    }

                    return fTextBoxA7B3B6CFEdit;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPARDup10Pane
            /// </summary>
            public Pane ScrollViewerPARDup10Pane
            {
                get
                {
                    if (null == fScrollViewerPARDup10Pane)
                    {
                        fScrollViewerPARDup10Pane = new Pane("ScrollViewerPARDup10Pane", TextBoxA7B3B6CFEdit);
                        fScrollViewerPARDup10Pane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPARDup10Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                        fScrollViewerPARDup10Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    }

                    return fScrollViewerPARDup10Pane;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup10ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup10ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup10ScrollBar)
                    {
                        fScrollBarVerticDup10ScrollBar = new ScrollBar("ScrollBarVerticDup10ScrollBar", ScrollViewerPARDup10Pane);
                        fScrollBarVerticDup10ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup10ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarVerticDup10ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    }

                    return fScrollBarVerticDup10ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup10ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup10ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup10ScrollBar)
                    {
                        fScrollBarHorizoDup10ScrollBar = new ScrollBar("ScrollBarHorizoDup10ScrollBar", ScrollViewerPARDup10Pane);
                        fScrollBarHorizoDup10ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup10ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarHorizoDup10ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    }

                    return fScrollBarHorizoDup10ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to FilterButtonEB0Button
            /// </summary>
            public Button FilterButtonEB0Button
            {
                get
                {
                    if (null == fFilterButtonEB0Button)
                    {
                        fFilterButtonEB0Button = new Button("FilterButtonEB0Button", AddressBookManaWindow);
                        fFilterButtonEB0Button.UIMap.Scope = UIASeachScope.Children;
                        fFilterButtonEB0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fFilterButtonEB0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"EB01B2A2-BF39-42A0-AE00-B0FC20AD66B5");
                        fFilterButtonEB0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Filter");
                    }

                    return fFilterButtonEB0Button;
                }
            }

            /// <summary>
            /// Gets Reference to FilterTextBlockText
            /// </summary>
            public Text FilterTextBlockText
            {
                get
                {
                    if (null == fFilterTextBlockText)
                    {
                        fFilterTextBlockText = new Text("FilterTextBlockText", FilterButtonEB0Button);
                        fFilterTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fFilterTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fFilterTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Filter");
                    }

                    return fFilterTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to ClearButtonEC9FButton
            /// </summary>
            public Button ClearButtonEC9FButton
            {
                get
                {
                    if (null == fClearButtonEC9FButton)
                    {
                        fClearButtonEC9FButton = new Button("ClearButtonEC9FButton", AddressBookManaWindow);
                        fClearButtonEC9FButton.UIMap.Scope = UIASeachScope.Children;
                        fClearButtonEC9FButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fClearButtonEC9FButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"EC9F1512-82D9-47DF-835E-F1257E37CDC4");
                        fClearButtonEC9FButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear");
                    }

                    return fClearButtonEC9FButton;
                }
            }

            /// <summary>
            /// Gets Reference to ClearTextBlockText
            /// </summary>
            public Text ClearTextBlockText
            {
                get
                {
                    if (null == fClearTextBlockText)
                    {
                        fClearTextBlockText = new Text("ClearTextBlockText", ClearButtonEC9FButton);
                        fClearTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fClearTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fClearTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear");
                    }

                    return fClearTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to ListViewbb668d9DataGrid
            /// </summary>
            public DataGrid ListViewbb668d9DataGrid
            {
                get
                {
                    if (null == fListViewbb668d9DataGrid)
                    {
                        fListViewbb668d9DataGrid = new DataGrid("ListViewbb668d9DataGrid", AddressBookManaWindow);
                        fListViewbb668d9DataGrid.UIMap.Scope = UIASeachScope.Children;
                        fListViewbb668d9DataGrid.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListView");
                        fListViewbb668d9DataGrid.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"bb668d97-1a07-4f0e-bad1-f6fcbfbf7c99");
                    }

                    return fListViewbb668d9DataGrid;
                }
            }

            /// <summary>
            /// Gets Reference to GridViewHeaderRHeader
            /// </summary>
            public Header GridViewHeaderRHeader
            {
                get
                {
                    if (null == fGridViewHeaderRHeader)
                    {
                        fGridViewHeaderRHeader = new Header("GridViewHeaderRHeader", ListViewbb668d9DataGrid);
                        fGridViewHeaderRHeader.UIMap.Scope = UIASeachScope.Children;
                        fGridViewHeaderRHeader.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewHeaderRowPresenter");
                    }

                    return fGridViewHeaderRHeader;
                }
            }

            /// <summary>
            /// Gets Reference to ContactNameGridHeaderItem
            /// </summary>
            public HeaderItem ContactNameGridHeaderItem
            {
                get
                {
                    if (null == fContactNameGridHeaderItem)
                    {
                        fContactNameGridHeaderItem = new HeaderItem("ContactNameGridHeaderItem", GridViewHeaderRHeader);
                        fContactNameGridHeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fContactNameGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                        fContactNameGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Contact Name");
                    }

                    return fContactNameGridHeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to ContactNameTextDup1Text
            /// </summary>
            public Text ContactNameTextDup1Text
            {
                get
                {
                    if (null == fContactNameTextDup1Text)
                    {
                        fContactNameTextDup1Text = new Text("ContactNameTextDup1Text", ContactNameGridHeaderItem);
                        fContactNameTextDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fContactNameTextDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fContactNameTextDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Contact Name");
                    }

                    return fContactNameTextDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup0Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup0Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup0Thumb)
                    {
                        fThumbPARTHeadeDup0Thumb = new Thumb("ThumbPARTHeadeDup0Thumb", ContactNameGridHeaderItem);
                        fThumbPARTHeadeDup0Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                        fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    }

                    return fThumbPARTHeadeDup0Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to EmailAddressGriHeaderItem
            /// </summary>
            public HeaderItem EmailAddressGriHeaderItem
            {
                get
                {
                    if (null == fEmailAddressGriHeaderItem)
                    {
                        fEmailAddressGriHeaderItem = new HeaderItem("EmailAddressGriHeaderItem", GridViewHeaderRHeader);
                        fEmailAddressGriHeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fEmailAddressGriHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                        fEmailAddressGriHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail Address");
                    }

                    return fEmailAddressGriHeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to EmailAddressTexDup1Text
            /// </summary>
            public Text EmailAddressTexDup1Text
            {
                get
                {
                    if (null == fEmailAddressTexDup1Text)
                    {
                        fEmailAddressTexDup1Text = new Text("EmailAddressTexDup1Text", EmailAddressGriHeaderItem);
                        fEmailAddressTexDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fEmailAddressTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fEmailAddressTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail Address");
                    }

                    return fEmailAddressTexDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup1Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup1Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup1Thumb)
                    {
                        fThumbPARTHeadeDup1Thumb = new Thumb("ThumbPARTHeadeDup1Thumb", EmailAddressGriHeaderItem);
                        fThumbPARTHeadeDup1Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                        fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    }

                    return fThumbPARTHeadeDup1Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to FaxNumberGridViHeaderItem
            /// </summary>
            public HeaderItem FaxNumberGridViHeaderItem
            {
                get
                {
                    if (null == fFaxNumberGridViHeaderItem)
                    {
                        fFaxNumberGridViHeaderItem = new HeaderItem("FaxNumberGridViHeaderItem", GridViewHeaderRHeader);
                        fFaxNumberGridViHeaderItem.UIMap.Scope = UIASeachScope.Children;
                        fFaxNumberGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                        fFaxNumberGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax Number");
                    }

                    return fFaxNumberGridViHeaderItem;
                }
            }

            /// <summary>
            /// Gets Reference to FaxNumberTextBlDup1Text
            /// </summary>
            public Text FaxNumberTextBlDup1Text
            {
                get
                {
                    if (null == fFaxNumberTextBlDup1Text)
                    {
                        fFaxNumberTextBlDup1Text = new Text("FaxNumberTextBlDup1Text", FaxNumberGridViHeaderItem);
                        fFaxNumberTextBlDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fFaxNumberTextBlDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fFaxNumberTextBlDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax Number");
                    }

                    return fFaxNumberTextBlDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to ThumbPARTHeadeDup2Thumb
            /// </summary>
            public Thumb ThumbPARTHeadeDup2Thumb
            {
                get
                {
                    if (null == fThumbPARTHeadeDup2Thumb)
                    {
                        fThumbPARTHeadeDup2Thumb = new Thumb("ThumbPARTHeadeDup2Thumb", FaxNumberGridViHeaderItem);
                        fThumbPARTHeadeDup2Thumb.UIMap.Scope = UIASeachScope.Children;
                        fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                        fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    }

                    return fThumbPARTHeadeDup2Thumb;
                }
            }

            /// <summary>
            /// Gets Reference to HPMfpAppServiceDup0I0XDataItem
            /// </summary>
            public DataItem HPMfpAppServiceDup0I0XDataItem
            {
                get
                {
                    if (null == fHPMfpAppServiceDup0I0XDataItem)
                    {
                        fHPMfpAppServiceDup0I0XDataItem = new DataItem("HPMfpAppServiceDup0I0XDataItem", ListViewbb668d9DataGrid);
                        fHPMfpAppServiceDup0I0XDataItem.UIMap.Scope = UIASeachScope.Children;
                        fHPMfpAppServiceDup0I0XDataItem.UIMap.Index = 0;
                        fHPMfpAppServiceDup0I0XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                        fHPMfpAppServiceDup0I0XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP.Mfp.App.Services.AddressBook.EmailFaxMergeRecord");
                    }

                    return fHPMfpAppServiceDup0I0XDataItem;
                }
            }

            /// <summary>
            /// Gets Reference to aaTextBlockText
            /// </summary>
            public Text aaTextBlockText
            {
                get
                {
                    if (null == faaTextBlockText)
                    {
                        faaTextBlockText = new Text("aaTextBlockText", HPMfpAppServiceDup0I0XDataItem);
                        faaTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        faaTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        faaTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"aa");
                    }

                    return faaTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to pgcomTextBlockDup0Text
            /// </summary>
            public Text pgcomTextBlockDup0Text
            {
                get
                {
                    if (null == fpgcomTextBlockDup0Text)
                    {
                        fpgcomTextBlockDup0Text = new Text("pgcomTextBlockDup0Text", HPMfpAppServiceDup0I0XDataItem);
                        fpgcomTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fpgcomTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fpgcomTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"p@g.com");
                    }

                    return fpgcomTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to A122TextBlockDup0Text
            /// </summary>
            public Text A122TextBlockDup0Text
            {
                get
                {
                    if (null == fA122TextBlockDup0Text)
                    {
                        fA122TextBlockDup0Text = new Text("A122TextBlockDup0Text", HPMfpAppServiceDup0I0XDataItem);
                        fA122TextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fA122TextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fA122TextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"122");
                    }

                    return fA122TextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to HPMfpAppServiceDup1I1XDataItem
            /// </summary>
            public DataItem HPMfpAppServiceDup1I1XDataItem
            {
                get
                {
                    if (null == fHPMfpAppServiceDup1I1XDataItem)
                    {
                        fHPMfpAppServiceDup1I1XDataItem = new DataItem("HPMfpAppServiceDup1I1XDataItem", ListViewbb668d9DataGrid);
                        fHPMfpAppServiceDup1I1XDataItem.UIMap.Scope = UIASeachScope.Children;
                        fHPMfpAppServiceDup1I1XDataItem.UIMap.Index = 1;
                        fHPMfpAppServiceDup1I1XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                        fHPMfpAppServiceDup1I1XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP.Mfp.App.Services.AddressBook.EmailFaxMergeRecord");
                    }

                    return fHPMfpAppServiceDup1I1XDataItem;
                }
            }

            /// <summary>
            /// Gets Reference to aaaTextBlockText
            /// </summary>
            public Text aaaTextBlockText
            {
                get
                {
                    if (null == faaaTextBlockText)
                    {
                        faaaTextBlockText = new Text("aaaTextBlockText", HPMfpAppServiceDup1I1XDataItem);
                        faaaTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        faaaTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        faaaTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"aaa");
                    }

                    return faaaTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to pgcomTextBlockDup1Text
            /// </summary>
            public Text pgcomTextBlockDup1Text
            {
                get
                {
                    if (null == fpgcomTextBlockDup1Text)
                    {
                        fpgcomTextBlockDup1Text = new Text("pgcomTextBlockDup1Text", HPMfpAppServiceDup1I1XDataItem);
                        fpgcomTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fpgcomTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fpgcomTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"p@g.com");
                    }

                    return fpgcomTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to A122TextBlockDup1Text
            /// </summary>
            public Text A122TextBlockDup1Text
            {
                get
                {
                    if (null == fA122TextBlockDup1Text)
                    {
                        fA122TextBlockDup1Text = new Text("A122TextBlockDup1Text", HPMfpAppServiceDup1I1XDataItem);
                        fA122TextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fA122TextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fA122TextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"122");
                    }

                    return fA122TextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to HPMfpAppServiceDup2I2XDataItem
            /// </summary>
            public DataItem HPMfpAppServiceDup2I2XDataItem
            {
                get
                {
                    if (null == fHPMfpAppServiceDup2I2XDataItem)
                    {
                        fHPMfpAppServiceDup2I2XDataItem = new DataItem("HPMfpAppServiceDup2I2XDataItem", ListViewbb668d9DataGrid);
                        fHPMfpAppServiceDup2I2XDataItem.UIMap.Scope = UIASeachScope.Children;
                        fHPMfpAppServiceDup2I2XDataItem.UIMap.Index = 2;
                        fHPMfpAppServiceDup2I2XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                        fHPMfpAppServiceDup2I2XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP.Mfp.App.Services.AddressBook.EmailFaxMergeRecord");
                    }

                    return fHPMfpAppServiceDup2I2XDataItem;
                }
            }

            /// <summary>
            /// Gets Reference to adsffafsdTextBlText
            /// </summary>
            public Text adsffafsdTextBlText
            {
                get
                {
                    if (null == fadsffafsdTextBlText)
                    {
                        fadsffafsdTextBlText = new Text("adsffafsdTextBlText", HPMfpAppServiceDup2I2XDataItem);
                        fadsffafsdTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fadsffafsdTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fadsffafsdTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"adsffafsd");
                    }

                    return fadsffafsdTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to pgcomTextBlockDup2Text
            /// </summary>
            public Text pgcomTextBlockDup2Text
            {
                get
                {
                    if (null == fpgcomTextBlockDup2Text)
                    {
                        fpgcomTextBlockDup2Text = new Text("pgcomTextBlockDup2Text", HPMfpAppServiceDup2I2XDataItem);
                        fpgcomTextBlockDup2Text.UIMap.Scope = UIASeachScope.Children;
                        fpgcomTextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fpgcomTextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"p@g.com");
                    }

                    return fpgcomTextBlockDup2Text;
                }
            }

            /// <summary>
            /// Gets Reference to A117TextBlockText
            /// </summary>
            public Text A117TextBlockText
            {
                get
                {
                    if (null == fA117TextBlockText)
                    {
                        fA117TextBlockText = new Text("A117TextBlockText", HPMfpAppServiceDup2I2XDataItem);
                        fA117TextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fA117TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fA117TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"117");
                    }

                    return fA117TextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to HPMfpAppServiceDup3I3XDataItem
            /// </summary>
            public DataItem HPMfpAppServiceDup3I3XDataItem
            {
                get
                {
                    if (null == fHPMfpAppServiceDup3I3XDataItem)
                    {
                        fHPMfpAppServiceDup3I3XDataItem = new DataItem("HPMfpAppServiceDup3I3XDataItem", ListViewbb668d9DataGrid);
                        fHPMfpAppServiceDup3I3XDataItem.UIMap.Scope = UIASeachScope.Children;
                        fHPMfpAppServiceDup3I3XDataItem.UIMap.Index = 3;
                        fHPMfpAppServiceDup3I3XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                        fHPMfpAppServiceDup3I3XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP.Mfp.App.Services.AddressBook.EmailFaxMergeRecord");
                    }

                    return fHPMfpAppServiceDup3I3XDataItem;
                }
            }

            /// <summary>
            /// Gets Reference to ccdaTextBlockText
            /// </summary>
            public Text ccdaTextBlockText
            {
                get
                {
                    if (null == fccdaTextBlockText)
                    {
                        fccdaTextBlockText = new Text("ccdaTextBlockText", HPMfpAppServiceDup3I3XDataItem);
                        fccdaTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fccdaTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fccdaTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"ccda");
                    }

                    return fccdaTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to pgcomTextBlockDup3Text
            /// </summary>
            public Text pgcomTextBlockDup3Text
            {
                get
                {
                    if (null == fpgcomTextBlockDup3Text)
                    {
                        fpgcomTextBlockDup3Text = new Text("pgcomTextBlockDup3Text", HPMfpAppServiceDup3I3XDataItem);
                        fpgcomTextBlockDup3Text.UIMap.Scope = UIASeachScope.Children;
                        fpgcomTextBlockDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fpgcomTextBlockDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"p@g.com");
                    }

                    return fpgcomTextBlockDup3Text;
                }
            }

            /// <summary>
            /// Gets Reference to A1TextBlockText
            /// </summary>
            public Text A1TextBlockText
            {
                get
                {
                    if (null == fA1TextBlockText)
                    {
                        fA1TextBlockText = new Text("A1TextBlockText", HPMfpAppServiceDup3I3XDataItem);
                        fA1TextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fA1TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fA1TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"1");
                    }

                    return fA1TextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to HPMfpAppServiceDup4I4XDataItem
            /// </summary>
            public DataItem HPMfpAppServiceDup4I4XDataItem
            {
                get
                {
                    if (null == fHPMfpAppServiceDup4I4XDataItem)
                    {
                        fHPMfpAppServiceDup4I4XDataItem = new DataItem("HPMfpAppServiceDup4I4XDataItem", ListViewbb668d9DataGrid);
                        fHPMfpAppServiceDup4I4XDataItem.UIMap.Scope = UIASeachScope.Children;
                        fHPMfpAppServiceDup4I4XDataItem.UIMap.Index = 4;
                        fHPMfpAppServiceDup4I4XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                        fHPMfpAppServiceDup4I4XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP.Mfp.App.Services.AddressBook.EmailFaxMergeRecord");
                    }

                    return fHPMfpAppServiceDup4I4XDataItem;
                }
            }

            /// <summary>
            /// Gets Reference to dddddTextBlockText
            /// </summary>
            public Text dddddTextBlockText
            {
                get
                {
                    if (null == fdddddTextBlockText)
                    {
                        fdddddTextBlockText = new Text("dddddTextBlockText", HPMfpAppServiceDup4I4XDataItem);
                        fdddddTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fdddddTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fdddddTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"ddddd");
                    }

                    return fdddddTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to pgcomTextBlockDup4Text
            /// </summary>
            public Text pgcomTextBlockDup4Text
            {
                get
                {
                    if (null == fpgcomTextBlockDup4Text)
                    {
                        fpgcomTextBlockDup4Text = new Text("pgcomTextBlockDup4Text", HPMfpAppServiceDup4I4XDataItem);
                        fpgcomTextBlockDup4Text.UIMap.Scope = UIASeachScope.Children;
                        fpgcomTextBlockDup4Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fpgcomTextBlockDup4Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"p@g.com");
                    }

                    return fpgcomTextBlockDup4Text;
                }
            }

            /// <summary>
            /// Gets Reference to A111TextBlockText
            /// </summary>
            public Text A111TextBlockText
            {
                get
                {
                    if (null == fA111TextBlockText)
                    {
                        fA111TextBlockText = new Text("A111TextBlockText", HPMfpAppServiceDup4I4XDataItem);
                        fA111TextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fA111TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fA111TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"111");
                    }

                    return fA111TextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to HPMfpAppServiceDup5I5XDataItem
            /// </summary>
            public DataItem HPMfpAppServiceDup5I5XDataItem
            {
                get
                {
                    if (null == fHPMfpAppServiceDup5I5XDataItem)
                    {
                        fHPMfpAppServiceDup5I5XDataItem = new DataItem("HPMfpAppServiceDup5I5XDataItem", ListViewbb668d9DataGrid);
                        fHPMfpAppServiceDup5I5XDataItem.UIMap.Scope = UIASeachScope.Children;
                        fHPMfpAppServiceDup5I5XDataItem.UIMap.Index = 5;
                        fHPMfpAppServiceDup5I5XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                        fHPMfpAppServiceDup5I5XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP.Mfp.App.Services.AddressBook.EmailFaxMergeRecord");
                    }

                    return fHPMfpAppServiceDup5I5XDataItem;
                }
            }

            /// <summary>
            /// Gets Reference to sdgdagTextBlockText
            /// </summary>
            public Text sdgdagTextBlockText
            {
                get
                {
                    if (null == fsdgdagTextBlockText)
                    {
                        fsdgdagTextBlockText = new Text("sdgdagTextBlockText", HPMfpAppServiceDup5I5XDataItem);
                        fsdgdagTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fsdgdagTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fsdgdagTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"sdgdag");
                    }

                    return fsdgdagTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to pgcomTextBlockDup5Text
            /// </summary>
            public Text pgcomTextBlockDup5Text
            {
                get
                {
                    if (null == fpgcomTextBlockDup5Text)
                    {
                        fpgcomTextBlockDup5Text = new Text("pgcomTextBlockDup5Text", HPMfpAppServiceDup5I5XDataItem);
                        fpgcomTextBlockDup5Text.UIMap.Scope = UIASeachScope.Children;
                        fpgcomTextBlockDup5Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fpgcomTextBlockDup5Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"p@g.com");
                    }

                    return fpgcomTextBlockDup5Text;
                }
            }

            /// <summary>
            /// Gets Reference to A1111TextBlockText
            /// </summary>
            public Text A1111TextBlockText
            {
                get
                {
                    if (null == fA1111TextBlockText)
                    {
                        fA1111TextBlockText = new Text("A1111TextBlockText", HPMfpAppServiceDup5I5XDataItem);
                        fA1111TextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fA1111TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fA1111TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"1111");
                    }

                    return fA1111TextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to HPMfpAppServiceDup6I6XDataItem
            /// </summary>
            public DataItem HPMfpAppServiceDup6I6XDataItem
            {
                get
                {
                    if (null == fHPMfpAppServiceDup6I6XDataItem)
                    {
                        fHPMfpAppServiceDup6I6XDataItem = new DataItem("HPMfpAppServiceDup6I6XDataItem", ListViewbb668d9DataGrid);
                        fHPMfpAppServiceDup6I6XDataItem.UIMap.Scope = UIASeachScope.Children;
                        fHPMfpAppServiceDup6I6XDataItem.UIMap.Index = 6;
                        fHPMfpAppServiceDup6I6XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                        fHPMfpAppServiceDup6I6XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP.Mfp.App.Services.AddressBook.EmailFaxMergeRecord");
                    }

                    return fHPMfpAppServiceDup6I6XDataItem;
                }
            }

            /// <summary>
            /// Gets Reference to ssssssTextBlockText
            /// </summary>
            public Text ssssssTextBlockText
            {
                get
                {
                    if (null == fssssssTextBlockText)
                    {
                        fssssssTextBlockText = new Text("ssssssTextBlockText", HPMfpAppServiceDup6I6XDataItem);
                        fssssssTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fssssssTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fssssssTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"ssssss");
                    }

                    return fssssssTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to pgcomTextBlockDup6Text
            /// </summary>
            public Text pgcomTextBlockDup6Text
            {
                get
                {
                    if (null == fpgcomTextBlockDup6Text)
                    {
                        fpgcomTextBlockDup6Text = new Text("pgcomTextBlockDup6Text", HPMfpAppServiceDup6I6XDataItem);
                        fpgcomTextBlockDup6Text.UIMap.Scope = UIASeachScope.Children;
                        fpgcomTextBlockDup6Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fpgcomTextBlockDup6Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"p@g.com");
                    }

                    return fpgcomTextBlockDup6Text;
                }
            }

            /// <summary>
            /// Gets Reference to A1113TextBlockText
            /// </summary>
            public Text A1113TextBlockText
            {
                get
                {
                    if (null == fA1113TextBlockText)
                    {
                        fA1113TextBlockText = new Text("A1113TextBlockText", HPMfpAppServiceDup6I6XDataItem);
                        fA1113TextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fA1113TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fA1113TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"1113");
                    }

                    return fA1113TextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPcontactsareText
            /// </summary>
            public Text LDAPcontactsareText
            {
                get
                {
                    if (null == fLDAPcontactsareText)
                    {
                        fLDAPcontactsareText = new Text("LDAPcontactsareText", AddressBookManaWindow);
                        fLDAPcontactsareText.UIMap.Scope = UIASeachScope.Children;
                        fLDAPcontactsareText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fLDAPcontactsareText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AA1B018A-76A3-4D20-8E79-E621B97E6BA0");
                        fLDAPcontactsareText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP contacts are not managed or editable in the Address Book Manager. 0 LDAP replicated addresses in the database.");
                    }

                    return fLDAPcontactsareText;
                }
            }

            /// <summary>
            /// Gets Reference to DeleteButton41BButton
            /// </summary>
            public Button DeleteButton41BButton
            {
                get
                {
                    if (null == fDeleteButton41BButton)
                    {
                        fDeleteButton41BButton = new Button("DeleteButton41BButton", AddressBookManaWindow);
                        fDeleteButton41BButton.UIMap.Scope = UIASeachScope.Children;
                        fDeleteButton41BButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fDeleteButton41BButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"41B96573-563B-4253-90EB-9F3492FA5BCB");
                        fDeleteButton41BButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                    }

                    return fDeleteButton41BButton;
                }
            }

            /// <summary>
            /// Gets Reference to DeleteTextBlockDup1Text
            /// </summary>
            public Text DeleteTextBlockDup1Text
            {
                get
                {
                    if (null == fDeleteTextBlockDup1Text)
                    {
                        fDeleteTextBlockDup1Text = new Text("DeleteTextBlockDup1Text", DeleteButton41BButton);
                        fDeleteTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fDeleteTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fDeleteTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                    }

                    return fDeleteTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to EditButton548EBButton
            /// </summary>
            public Button EditButton548EBButton
            {
                get
                {
                    if (null == fEditButton548EBButton)
                    {
                        fEditButton548EBButton = new Button("EditButton548EBButton", AddressBookManaWindow);
                        fEditButton548EBButton.UIMap.Scope = UIASeachScope.Children;
                        fEditButton548EBButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fEditButton548EBButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"548EB117-4E78-4199-9C93-6D5BA80C353F");
                        fEditButton548EBButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit");
                    }

                    return fEditButton548EBButton;
                }
            }

            /// <summary>
            /// Gets Reference to EditTextBlockText
            /// </summary>
            public Text EditTextBlockText
            {
                get
                {
                    if (null == fEditTextBlockText)
                    {
                        fEditTextBlockText = new Text("EditTextBlockText", EditButton548EBButton);
                        fEditTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fEditTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fEditTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit");
                    }

                    return fEditTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to AddGroupButton7Button
            /// </summary>
            public Button AddGroupButton7Button
            {
                get
                {
                    if (null == fAddGroupButton7Button)
                    {
                        fAddGroupButton7Button = new Button("AddGroupButton7Button", AddressBookManaWindow);
                        fAddGroupButton7Button.UIMap.Scope = UIASeachScope.Children;
                        fAddGroupButton7Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fAddGroupButton7Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7EE85ED2-2E3A-4700-9C01-52D668AEB8F2");
                        fAddGroupButton7Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group");
                    }

                    return fAddGroupButton7Button;
                }
            }

            /// <summary>
            /// Gets Reference to AddGroupTextBloText
            /// </summary>
            public Text AddGroupTextBloText
            {
                get
                {
                    if (null == fAddGroupTextBloText)
                    {
                        fAddGroupTextBloText = new Text("AddGroupTextBloText", AddGroupButton7Button);
                        fAddGroupTextBloText.UIMap.Scope = UIASeachScope.Children;
                        fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group");
                    }

                    return fAddGroupTextBloText;
                }
            }

            /// <summary>
            /// Gets Reference to AddContactButtoButton
            /// </summary>
            public Button AddContactButtoButton
            {
                get
                {
                    if (null == fAddContactButtoButton)
                    {
                        fAddContactButtoButton = new Button("AddContactButtoButton", AddressBookManaWindow);
                        fAddContactButtoButton.UIMap.Scope = UIASeachScope.Children;
                        fAddContactButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fAddContactButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"F80F266E-41DB-42b4-A289-A9F4B0869F9F");
                        fAddContactButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Contact");
                    }

                    return fAddContactButtoButton;
                }
            }

            /// <summary>
            /// Gets Reference to AddContactTextBText
            /// </summary>
            public Text AddContactTextBText
            {
                get
                {
                    if (null == fAddContactTextBText)
                    {
                        fAddContactTextBText = new Text("AddContactTextBText", AddContactButtoButton);
                        fAddContactTextBText.UIMap.Scope = UIASeachScope.Children;
                        fAddContactTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAddContactTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Contact");
                    }

                    return fAddContactTextBText;
                }
            }

            /// <summary>
            /// Gets Reference to OKButtonFA1AC0AButton
            /// </summary>
            public Button OKButtonFA1AC0AButton
            {
                get
                {
                    if (null == fOKButtonFA1AC0AButton)
                    {
                        fOKButtonFA1AC0AButton = new Button("OKButtonFA1AC0AButton", AddressBookManaWindow);
                        fOKButtonFA1AC0AButton.UIMap.Scope = UIASeachScope.Children;
                        fOKButtonFA1AC0AButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fOKButtonFA1AC0AButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FA1AC0AD-9D58-4cb9-A4B3-6E89E4E5BE0D");
                        fOKButtonFA1AC0AButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    }

                    return fOKButtonFA1AC0AButton;
                }
            }

            /// <summary>
            /// Gets Reference to OKTextBlockDup0Text
            /// </summary>
            public Text OKTextBlockDup0Text
            {
                get
                {
                    if (null == fOKTextBlockDup0Text)
                    {
                        fOKTextBlockDup0Text = new Text("OKTextBlockDup0Text", OKButtonFA1AC0AButton);
                        fOKTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    }

                    return fOKTextBlockDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to HPDigitalSendinTitleBar
            /// </summary>
            public TitleBar HPDigitalSendinTitleBar
            {
                get
                {
                    if (null == fHPDigitalSendinTitleBar)
                    {
                        fHPDigitalSendinTitleBar = new TitleBar("HPDigitalSendinTitleBar", HPDigitalSendinWindow);
                        fHPDigitalSendinTitleBar.UIMap.Scope = UIASeachScope.Children;
                        fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                        fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Digital Sending Software Configuration (Server IP Address: 15.75.41.159)");
                    }

                    return fHPDigitalSendinTitleBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemMenuBarSyDup2MenuBar
            /// </summary>
            public MenuBar SystemMenuBarSyDup2MenuBar
            {
                get
                {
                    if (null == fSystemMenuBarSyDup2MenuBar)
                    {
                        fSystemMenuBarSyDup2MenuBar = new MenuBar("SystemMenuBarSyDup2MenuBar", HPDigitalSendinTitleBar);
                        fSystemMenuBarSyDup2MenuBar.UIMap.Scope = UIASeachScope.Children;
                        fSystemMenuBarSyDup2MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                        fSystemMenuBarSyDup2MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                    }

                    return fSystemMenuBarSyDup2MenuBar;
                }
            }

            /// <summary>
            /// Gets Reference to SystemItem1Dup2MenuItem
            /// </summary>
            public MenuItem SystemItem1Dup2MenuItem
            {
                get
                {
                    if (null == fSystemItem1Dup2MenuItem)
                    {
                        fSystemItem1Dup2MenuItem = new MenuItem("SystemItem1Dup2MenuItem", SystemMenuBarSyDup2MenuBar);
                        fSystemItem1Dup2MenuItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemItem1Dup2MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                        fSystemItem1Dup2MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                    }

                    return fSystemItem1Dup2MenuItem;
                }
            }

            /// <summary>
            /// Gets Reference to MinimizeMinimizDup2Button
            /// </summary>
            public Button MinimizeMinimizDup2Button
            {
                get
                {
                    if (null == fMinimizeMinimizDup2Button)
                    {
                        fMinimizeMinimizDup2Button = new Button("MinimizeMinimizDup2Button", HPDigitalSendinTitleBar);
                        fMinimizeMinimizDup2Button.UIMap.Scope = UIASeachScope.Children;
                        fMinimizeMinimizDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                        fMinimizeMinimizDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                    }

                    return fMinimizeMinimizDup2Button;
                }
            }

            /// <summary>
            /// Gets Reference to MaximizeMaximizDup2Button
            /// </summary>
            public Button MaximizeMaximizDup2Button
            {
                get
                {
                    if (null == fMaximizeMaximizDup2Button)
                    {
                        fMaximizeMaximizDup2Button = new Button("MaximizeMaximizDup2Button", HPDigitalSendinTitleBar);
                        fMaximizeMaximizDup2Button.UIMap.Scope = UIASeachScope.Children;
                        fMaximizeMaximizDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                        fMaximizeMaximizDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                    }

                    return fMaximizeMaximizDup2Button;
                }
            }

            /// <summary>
            /// Gets Reference to CloseCloseDup2Button
            /// </summary>
            public Button CloseCloseDup2Button
            {
                get
                {
                    if (null == fCloseCloseDup2Button)
                    {
                        fCloseCloseDup2Button = new Button("CloseCloseDup2Button", HPDigitalSendinTitleBar);
                        fCloseCloseDup2Button.UIMap.Scope = UIASeachScope.Children;
                        fCloseCloseDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                        fCloseCloseDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                    }

                    return fCloseCloseDup2Button;
                }
            }

            /// <summary>
            /// Gets Reference to HelpButtonCB8CFButton
            /// </summary>
            public Button HelpButtonCB8CFButton
            {
                get
                {
                    if (null == fHelpButtonCB8CFButton)
                    {
                        fHelpButtonCB8CFButton = new Button("HelpButtonCB8CFButton", HPDigitalSendinWindow);
                        fHelpButtonCB8CFButton.UIMap.Scope = UIASeachScope.Children;
                        fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CB8CF0C3-DFBE-49b8-B09B-03A34F5D4186");
                        fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                    }

                    return fHelpButtonCB8CFButton;
                }
            }

            /// <summary>
            /// Gets Reference to HelpTextBlockText
            /// </summary>
            public Text HelpTextBlockText
            {
                get
                {
                    if (null == fHelpTextBlockText)
                    {
                        fHelpTextBlockText = new Text("HelpTextBlockText", HelpButtonCB8CFButton);
                        fHelpTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                    }

                    return fHelpTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to ApplyButton61E2Button
            /// </summary>
            public Button ApplyButton61E2Button
            {
                get
                {
                    if (null == fApplyButton61E2Button)
                    {
                        fApplyButton61E2Button = new Button("ApplyButton61E2Button", HPDigitalSendinWindow);
                        fApplyButton61E2Button.UIMap.Scope = UIASeachScope.Children;
                        fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"61E2369B-F53B-4662-A361-B3034C4EFF67");
                        fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                    }

                    return fApplyButton61E2Button;
                }
            }

            /// <summary>
            /// Gets Reference to ApplyTextBlockText
            /// </summary>
            public Text ApplyTextBlockText
            {
                get
                {
                    if (null == fApplyTextBlockText)
                    {
                        fApplyTextBlockText = new Text("ApplyTextBlockText", ApplyButton61E2Button);
                        fApplyTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                    }

                    return fApplyTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to CancelButton65CButton
            /// </summary>
            public Button CancelButton65CButton
            {
                get
                {
                    if (null == fCancelButton65CButton)
                    {
                        fCancelButton65CButton = new Button("CancelButton65CButton", HPDigitalSendinWindow);
                        fCancelButton65CButton.UIMap.Scope = UIASeachScope.Children;
                        fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"65C76204-7AB5-4681-B7FD-2D8F02DA6D4B");
                        fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    }

                    return fCancelButton65CButton;
                }
            }

            /// <summary>
            /// Gets Reference to CancelTextBlockDup1Text
            /// </summary>
            public Text CancelTextBlockDup1Text
            {
                get
                {
                    if (null == fCancelTextBlockDup1Text)
                    {
                        fCancelTextBlockDup1Text = new Text("CancelTextBlockDup1Text", CancelButton65CButton);
                        fCancelTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fCancelTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fCancelTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    }

                    return fCancelTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to OKButtonCC2EF49Button
            /// </summary>
            public Button OKButtonCC2EF49Button
            {
                get
                {
                    if (null == fOKButtonCC2EF49Button)
                    {
                        fOKButtonCC2EF49Button = new Button("OKButtonCC2EF49Button", HPDigitalSendinWindow);
                        fOKButtonCC2EF49Button.UIMap.Scope = UIASeachScope.Children;
                        fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CC2EF491-0BD1-4ac5-9D00-AA61A9D6BA0C");
                        fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    }

                    return fOKButtonCC2EF49Button;
                }
            }

            /// <summary>
            /// Gets Reference to OKTextBlockDup1Text
            /// </summary>
            public Text OKTextBlockDup1Text
            {
                get
                {
                    if (null == fOKTextBlockDup1Text)
                    {
                        fOKTextBlockDup1Text = new Text("OKTextBlockDup1Text", OKButtonCC2EF49Button);
                        fOKTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    }

                    return fOKTextBlockDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to TabControlec0fdTab
            /// </summary>
            public Tab TabControlec0fdTab
            {
                get
                {
                    if (null == fTabControlec0fdTab)
                    {
                        fTabControlec0fdTab = new Tab("TabControlec0fdTab", HPDigitalSendinWindow);
                        fTabControlec0fdTab.UIMap.Scope = UIASeachScope.Children;
                        fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                        fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ec0fd6cd-2ab8-482f-96a5-d1fa158f38d1");
                    }

                    return fTabControlec0fdTab;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup0TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup0TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup0TabItem)
                    {
                        fSystemWindowsCoDup0TabItem = new TabItem("SystemWindowsCoDup0TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup0TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1e2be878-0c03-4404-988c-54d0df925f0f");
                        fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup0TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to GeneralTextmGenText
            /// </summary>
            public Text GeneralTextmGenText
            {
                get
                {
                    if (null == fGeneralTextmGenText)
                    {
                        fGeneralTextmGenText = new Text("GeneralTextmGenText", SystemWindowsCoDup0TabItem);
                        fGeneralTextmGenText.UIMap.Scope = UIASeachScope.Children;
                        fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                        fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                    }

                    return fGeneralTextmGenText;
                }
            }

            /// <summary>
            /// Gets Reference to GeneralTextBlocText
            /// </summary>
            public Text GeneralTextBlocText
            {
                get
                {
                    if (null == fGeneralTextBlocText)
                    {
                        fGeneralTextBlocText = new Text("GeneralTextBlocText", GeneralTextmGenText);
                        fGeneralTextBlocText.UIMap.Scope = UIASeachScope.Children;
                        fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                    }

                    return fGeneralTextBlocText;
                }
            }

            /// <summary>
            /// Gets Reference to Text933345b04e3Text
            /// </summary>
            public Text Text933345b04e3Text
            {
                get
                {
                    if (null == fText933345b04e3Text)
                    {
                        fText933345b04e3Text = new Text("Text933345b04e3Text", SystemWindowsCoDup0TabItem);
                        fText933345b04e3Text.UIMap.Scope = UIASeachScope.Children;
                        fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"933345b0-4e39-44d3-a511-0077f3176ca4");
                        fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    }

                    return fText933345b04e3Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text786caf67344Text
            /// </summary>
            public Text Text786caf67344Text
            {
                get
                {
                    if (null == fText786caf67344Text)
                    {
                        fText786caf67344Text = new Text("Text786caf67344Text", SystemWindowsCoDup0TabItem);
                        fText786caf67344Text.UIMap.Scope = UIASeachScope.Children;
                        fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"786caf67-344f-4ddc-83a5-b9431fb36731");
                        fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fText786caf67344Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup1TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup1TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup1TabItem)
                    {
                        fSystemWindowsCoDup1TabItem = new TabItem("SystemWindowsCoDup1TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup1TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4e90d18a-f33c-43c0-8505-08f4a17169b5");
                        fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup1TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to AuthenticationTDup0Text
            /// </summary>
            public Text AuthenticationTDup0Text
            {
                get
                {
                    if (null == fAuthenticationTDup0Text)
                    {
                        fAuthenticationTDup0Text = new Text("AuthenticationTDup0Text", SystemWindowsCoDup1TabItem);
                        fAuthenticationTDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                        fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                    }

                    return fAuthenticationTDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to AuthenticationTDup1Text
            /// </summary>
            public Text AuthenticationTDup1Text
            {
                get
                {
                    if (null == fAuthenticationTDup1Text)
                    {
                        fAuthenticationTDup1Text = new Text("AuthenticationTDup1Text", AuthenticationTDup0Text);
                        fAuthenticationTDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                    }

                    return fAuthenticationTDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text31EC91730B9Text
            /// </summary>
            public Text Text31EC91730B9Text
            {
                get
                {
                    if (null == fText31EC91730B9Text)
                    {
                        fText31EC91730B9Text = new Text("Text31EC91730B9Text", SystemWindowsCoDup1TabItem);
                        fText31EC91730B9Text.UIMap.Scope = UIASeachScope.Children;
                        fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"31EC9173-0B98-4d46-BC99-7DF8EA2BE02F");
                        fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    }

                    return fText31EC91730B9Text;
                }
            }

            /// <summary>
            /// Gets Reference to TextA479C271445Text
            /// </summary>
            public Text TextA479C271445Text
            {
                get
                {
                    if (null == fTextA479C271445Text)
                    {
                        fTextA479C271445Text = new Text("TextA479C271445Text", SystemWindowsCoDup1TabItem);
                        fTextA479C271445Text.UIMap.Scope = UIASeachScope.Children;
                        fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A479C271-445D-43f1-864D-7503428703E4");
                        fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fTextA479C271445Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup2TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup2TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup2TabItem)
                    {
                        fSystemWindowsCoDup2TabItem = new TabItem("SystemWindowsCoDup2TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup2TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33A07ED3-E1EE-411e-B583-7D0A3374100F");
                        fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup2TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to EmailTextmEmailText
            /// </summary>
            public Text EmailTextmEmailText
            {
                get
                {
                    if (null == fEmailTextmEmailText)
                    {
                        fEmailTextmEmailText = new Text("EmailTextmEmailText", SystemWindowsCoDup2TabItem);
                        fEmailTextmEmailText.UIMap.Scope = UIASeachScope.Children;
                        fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                        fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                    }

                    return fEmailTextmEmailText;
                }
            }

            /// <summary>
            /// Gets Reference to EmailTextBlockText
            /// </summary>
            public Text EmailTextBlockText
            {
                get
                {
                    if (null == fEmailTextBlockText)
                    {
                        fEmailTextBlockText = new Text("EmailTextBlockText", EmailTextmEmailText);
                        fEmailTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                    }

                    return fEmailTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to Text32de714a8bdText
            /// </summary>
            public Text Text32de714a8bdText
            {
                get
                {
                    if (null == fText32de714a8bdText)
                    {
                        fText32de714a8bdText = new Text("Text32de714a8bdText", SystemWindowsCoDup2TabItem);
                        fText32de714a8bdText.UIMap.Scope = UIASeachScope.Children;
                        fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"32de714a-8bda-4f11-bf20-b9a56b5f18bc");
                        fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    }

                    return fText32de714a8bdText;
                }
            }

            /// <summary>
            /// Gets Reference to Text3b2a8761f4fText
            /// </summary>
            public Text Text3b2a8761f4fText
            {
                get
                {
                    if (null == fText3b2a8761f4fText)
                    {
                        fText3b2a8761f4fText = new Text("Text3b2a8761f4fText", SystemWindowsCoDup2TabItem);
                        fText3b2a8761f4fText.UIMap.Scope = UIASeachScope.Children;
                        fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3b2a8761-f4f6-41b1-b08c-9c33744bdc43");
                        fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fText3b2a8761f4fText;
                }
            }

            /// <summary>
            /// Gets Reference to TextBlockText
            /// </summary>
            public Text TextBlockText
            {
                get
                {
                    if (null == fTextBlockText)
                    {
                        fTextBlockText = new Text("TextBlockText", Text3b2a8761f4fText);
                        fTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup3TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup3TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup3TabItem)
                    {
                        fSystemWindowsCoDup3TabItem = new TabItem("SystemWindowsCoDup3TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup3TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4f116988-2b22-473f-bca3-094589a44954");
                        fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup3TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to FaxTextmFaxTabLText
            /// </summary>
            public Text FaxTextmFaxTabLText
            {
                get
                {
                    if (null == fFaxTextmFaxTabLText)
                    {
                        fFaxTextmFaxTabLText = new Text("FaxTextmFaxTabLText", SystemWindowsCoDup3TabItem);
                        fFaxTextmFaxTabLText.UIMap.Scope = UIASeachScope.Children;
                        fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                        fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                    }

                    return fFaxTextmFaxTabLText;
                }
            }

            /// <summary>
            /// Gets Reference to FaxTextBlockText
            /// </summary>
            public Text FaxTextBlockText
            {
                get
                {
                    if (null == fFaxTextBlockText)
                    {
                        fFaxTextBlockText = new Text("FaxTextBlockText", FaxTextmFaxTabLText);
                        fFaxTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                    }

                    return fFaxTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to TextD1ED4F16F38Text
            /// </summary>
            public Text TextD1ED4F16F38Text
            {
                get
                {
                    if (null == fTextD1ED4F16F38Text)
                    {
                        fTextD1ED4F16F38Text = new Text("TextD1ED4F16F38Text", SystemWindowsCoDup3TabItem);
                        fTextD1ED4F16F38Text.UIMap.Scope = UIASeachScope.Children;
                        fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D1ED4F16-F389-4dfd-A884-D258EDB48C11");
                        fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    }

                    return fTextD1ED4F16F38Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text7DDE04FD251Text
            /// </summary>
            public Text Text7DDE04FD251Text
            {
                get
                {
                    if (null == fText7DDE04FD251Text)
                    {
                        fText7DDE04FD251Text = new Text("Text7DDE04FD251Text", SystemWindowsCoDup3TabItem);
                        fText7DDE04FD251Text.UIMap.Scope = UIASeachScope.Children;
                        fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7DDE04FD-2519-44c2-A212-67B0838E1C91");
                        fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fText7DDE04FD251Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup4TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup4TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup4TabItem)
                    {
                        fSystemWindowsCoDup4TabItem = new TabItem("SystemWindowsCoDup4TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup4TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ff96a045-6e12-4ce3-ba85-b65d16c39ffb");
                        fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup4TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to SendtoFolderTexDup0Text
            /// </summary>
            public Text SendtoFolderTexDup0Text
            {
                get
                {
                    if (null == fSendtoFolderTexDup0Text)
                    {
                        fSendtoFolderTexDup0Text = new Text("SendtoFolderTexDup0Text", SystemWindowsCoDup4TabItem);
                        fSendtoFolderTexDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                        fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                    }

                    return fSendtoFolderTexDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to SendtoFolderTexDup1Text
            /// </summary>
            public Text SendtoFolderTexDup1Text
            {
                get
                {
                    if (null == fSendtoFolderTexDup1Text)
                    {
                        fSendtoFolderTexDup1Text = new Text("SendtoFolderTexDup1Text", SendtoFolderTexDup0Text);
                        fSendtoFolderTexDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                    }

                    return fSendtoFolderTexDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text7a57f43ecb1Text
            /// </summary>
            public Text Text7a57f43ecb1Text
            {
                get
                {
                    if (null == fText7a57f43ecb1Text)
                    {
                        fText7a57f43ecb1Text = new Text("Text7a57f43ecb1Text", SystemWindowsCoDup4TabItem);
                        fText7a57f43ecb1Text.UIMap.Scope = UIASeachScope.Children;
                        fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                        fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    }

                    return fText7a57f43ecb1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text654b650dd19Text
            /// </summary>
            public Text Text654b650dd19Text
            {
                get
                {
                    if (null == fText654b650dd19Text)
                    {
                        fText654b650dd19Text = new Text("Text654b650dd19Text", SystemWindowsCoDup4TabItem);
                        fText654b650dd19Text.UIMap.Scope = UIASeachScope.Children;
                        fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                        fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fText654b650dd19Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup5TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup5TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup5TabItem)
                    {
                        fSystemWindowsCoDup5TabItem = new TabItem("SystemWindowsCoDup5TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup5TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"38feb495-2893-4d8b-8961-31ebc2a3bd56");
                        fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup5TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to WorkflowsTextmWText
            /// </summary>
            public Text WorkflowsTextmWText
            {
                get
                {
                    if (null == fWorkflowsTextmWText)
                    {
                        fWorkflowsTextmWText = new Text("WorkflowsTextmWText", SystemWindowsCoDup5TabItem);
                        fWorkflowsTextmWText.UIMap.Scope = UIASeachScope.Children;
                        fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                        fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                    }

                    return fWorkflowsTextmWText;
                }
            }

            /// <summary>
            /// Gets Reference to WorkflowsTextBlText
            /// </summary>
            public Text WorkflowsTextBlText
            {
                get
                {
                    if (null == fWorkflowsTextBlText)
                    {
                        fWorkflowsTextBlText = new Text("WorkflowsTextBlText", WorkflowsTextmWText);
                        fWorkflowsTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                    }

                    return fWorkflowsTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to Text22D9C34E84CText
            /// </summary>
            public Text Text22D9C34E84CText
            {
                get
                {
                    if (null == fText22D9C34E84CText)
                    {
                        fText22D9C34E84CText = new Text("Text22D9C34E84CText", SystemWindowsCoDup5TabItem);
                        fText22D9C34E84CText.UIMap.Scope = UIASeachScope.Children;
                        fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22D9C34E-84C8-4995-AC9E-5B46F8284284");
                        fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    }

                    return fText22D9C34E84CText;
                }
            }

            /// <summary>
            /// Gets Reference to TextC8D15BD39C8Text
            /// </summary>
            public Text TextC8D15BD39C8Text
            {
                get
                {
                    if (null == fTextC8D15BD39C8Text)
                    {
                        fTextC8D15BD39C8Text = new Text("TextC8D15BD39C8Text", SystemWindowsCoDup5TabItem);
                        fTextC8D15BD39C8Text.UIMap.Scope = UIASeachScope.Children;
                        fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C8D15BD3-9C8D-484c-A5E2-309CA8AA6C56");
                        fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fTextC8D15BD39C8Text;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup6TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup6TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup6TabItem)
                    {
                        fSystemWindowsCoDup6TabItem = new TabItem("SystemWindowsCoDup6TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup6TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b8c06323-208e-4239-a523-a025661e0eab");
                        fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup6TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to AddressingTextmText
            /// </summary>
            public Text AddressingTextmText
            {
                get
                {
                    if (null == fAddressingTextmText)
                    {
                        fAddressingTextmText = new Text("AddressingTextmText", SystemWindowsCoDup6TabItem);
                        fAddressingTextmText.UIMap.Scope = UIASeachScope.Children;
                        fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                        fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                    }

                    return fAddressingTextmText;
                }
            }

            /// <summary>
            /// Gets Reference to AddressingTextBText
            /// </summary>
            public Text AddressingTextBText
            {
                get
                {
                    if (null == fAddressingTextBText)
                    {
                        fAddressingTextBText = new Text("AddressingTextBText", AddressingTextmText);
                        fAddressingTextBText.UIMap.Scope = UIASeachScope.Children;
                        fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                    }

                    return fAddressingTextBText;
                }
            }

            /// <summary>
            /// Gets Reference to Text47EB5CBA4D1Text
            /// </summary>
            public Text Text47EB5CBA4D1Text
            {
                get
                {
                    if (null == fText47EB5CBA4D1Text)
                    {
                        fText47EB5CBA4D1Text = new Text("Text47EB5CBA4D1Text", SystemWindowsCoDup6TabItem);
                        fText47EB5CBA4D1Text.UIMap.Scope = UIASeachScope.Children;
                        fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"47EB5CBA-4D1C-4eee-AD64-E26BDA31A3AC");
                        fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    }

                    return fText47EB5CBA4D1Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text0757E148179Text
            /// </summary>
            public Text Text0757E148179Text
            {
                get
                {
                    if (null == fText0757E148179Text)
                    {
                        fText0757E148179Text = new Text("Text0757E148179Text", SystemWindowsCoDup6TabItem);
                        fText0757E148179Text.UIMap.Scope = UIASeachScope.Children;
                        fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0757E148-1794-4a5d-B378-6BE8049F65E1");
                        fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fText0757E148179Text;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollViewerPane
            /// </summary>
            public Pane ScrollViewerPane
            {
                get
                {
                    if (null == fScrollViewerPane)
                    {
                        fScrollViewerPane = new Pane("ScrollViewerPane", SystemWindowsCoDup6TabItem);
                        fScrollViewerPane.UIMap.Scope = UIASeachScope.Children;
                        fScrollViewerPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    }

                    return fScrollViewerPane;
                }
            }

            /// <summary>
            /// Gets Reference to AddressingNetwoCustom
            /// </summary>
            public Custom AddressingNetwoCustom
            {
                get
                {
                    if (null == fAddressingNetwoCustom)
                    {
                        fAddressingNetwoCustom = new Custom("AddressingNetwoCustom", ScrollViewerPane);
                        fAddressingNetwoCustom.UIMap.Scope = UIASeachScope.Children;
                        fAddressingNetwoCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AddressingNetworkContactsUserControl");
                        fAddressingNetwoCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingNetworkContactsUserControl");
                    }

                    return fAddressingNetwoCustom;
                }
            }

            /// <summary>
            /// Gets Reference to ErrorConflictUsCustom
            /// </summary>
            public Custom ErrorConflictUsCustom
            {
                get
                {
                    if (null == fErrorConflictUsCustom)
                    {
                        fErrorConflictUsCustom = new Custom("ErrorConflictUsCustom", AddressingNetwoCustom);
                        fErrorConflictUsCustom.UIMap.Scope = UIASeachScope.Children;
                        fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ErrorConflictUserControl");
                        fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mErrorConflictUserControl");
                    }

                    return fErrorConflictUsCustom;
                }
            }

            /// <summary>
            /// Gets Reference to SearchMethodGroGroup
            /// </summary>
            public Group SearchMethodGroGroup
            {
                get
                {
                    if (null == fSearchMethodGroGroup)
                    {
                        fSearchMethodGroGroup = new Group("SearchMethodGroGroup", AddressingNetwoCustom);
                        fSearchMethodGroGroup.UIMap.Scope = UIASeachScope.Children;
                        fSearchMethodGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fSearchMethodGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddrSearchMethodGroupBox");
                        fSearchMethodGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search Method");
                    }

                    return fSearchMethodGroGroup;
                }
            }

            /// <summary>
            /// Gets Reference to SearchMethodTexText
            /// </summary>
            public Text SearchMethodTexText
            {
                get
                {
                    if (null == fSearchMethodTexText)
                    {
                        fSearchMethodTexText = new Text("SearchMethodTexText", SearchMethodGroGroup);
                        fSearchMethodTexText.UIMap.Scope = UIASeachScope.Children;
                        fSearchMethodTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fSearchMethodTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search Method");
                    }

                    return fSearchMethodTexText;
                }
            }

            /// <summary>
            /// Gets Reference to QuickSearchFindRadioButton
            /// </summary>
            public RadioButton QuickSearchFindRadioButton
            {
                get
                {
                    if (null == fQuickSearchFindRadioButton)
                    {
                        fQuickSearchFindRadioButton = new RadioButton("QuickSearchFindRadioButton", SearchMethodGroGroup);
                        fQuickSearchFindRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fQuickSearchFindRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                        fQuickSearchFindRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a4cd062e-2a81-441c-b0f4-212efcecacf7");
                        fQuickSearchFindRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Search (Find matches beginning with the search string.)");
                    }

                    return fQuickSearchFindRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to QuickSearchFindText
            /// </summary>
            public Text QuickSearchFindText
            {
                get
                {
                    if (null == fQuickSearchFindText)
                    {
                        fQuickSearchFindText = new Text("QuickSearchFindText", QuickSearchFindRadioButton);
                        fQuickSearchFindText.UIMap.Scope = UIASeachScope.Children;
                        fQuickSearchFindText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fQuickSearchFindText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Search (Find matches beginning with the search string.)");
                    }

                    return fQuickSearchFindText;
                }
            }

            /// <summary>
            /// Gets Reference to DetailedSearchFRadioButton
            /// </summary>
            public RadioButton DetailedSearchFRadioButton
            {
                get
                {
                    if (null == fDetailedSearchFRadioButton)
                    {
                        fDetailedSearchFRadioButton = new RadioButton("DetailedSearchFRadioButton", SearchMethodGroGroup);
                        fDetailedSearchFRadioButton.UIMap.Scope = UIASeachScope.Children;
                        fDetailedSearchFRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                        fDetailedSearchFRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84bc451d-eca7-4d72-adee-f6d05739d60e");
                        fDetailedSearchFRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Detailed Search (Find matches containing the search string.)");
                    }

                    return fDetailedSearchFRadioButton;
                }
            }

            /// <summary>
            /// Gets Reference to DetailedSearchFText
            /// </summary>
            public Text DetailedSearchFText
            {
                get
                {
                    if (null == fDetailedSearchFText)
                    {
                        fDetailedSearchFText = new Text("DetailedSearchFText", DetailedSearchFRadioButton);
                        fDetailedSearchFText.UIMap.Scope = UIASeachScope.Children;
                        fDetailedSearchFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fDetailedSearchFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Detailed Search (Find matches containing the search string.)");
                    }

                    return fDetailedSearchFText;
                }
            }

            /// <summary>
            /// Gets Reference to PersonalContactGroup
            /// </summary>
            public Group PersonalContactGroup
            {
                get
                {
                    if (null == fPersonalContactGroup)
                    {
                        fPersonalContactGroup = new Group("PersonalContactGroup", AddressingNetwoCustom);
                        fPersonalContactGroup.UIMap.Scope = UIASeachScope.Children;
                        fPersonalContactGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fPersonalContactGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddrPersonalContactsBox");
                        fPersonalContactGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Personal Contacts");
                    }

                    return fPersonalContactGroup;
                }
            }

            /// <summary>
            /// Gets Reference to PersonalContactText
            /// </summary>
            public Text PersonalContactText
            {
                get
                {
                    if (null == fPersonalContactText)
                    {
                        fPersonalContactText = new Text("PersonalContactText", PersonalContactGroup);
                        fPersonalContactText.UIMap.Scope = UIASeachScope.Children;
                        fPersonalContactText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fPersonalContactText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Personal Contacts");
                    }

                    return fPersonalContactText;
                }
            }

            /// <summary>
            /// Gets Reference to ThepersonalcontText
            /// </summary>
            public Text ThepersonalcontText
            {
                get
                {
                    if (null == fThepersonalcontText)
                    {
                        fThepersonalcontText = new Text("ThepersonalcontText", PersonalContactGroup);
                        fThepersonalcontText.UIMap.Scope = UIASeachScope.Children;
                        fThepersonalcontText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fThepersonalcontText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"The personal contacts for a user can be retrieved from a Microsoft Exchange Server if the user has a Personal Address Book (PAB) associated with his or her user account.");
                    }

                    return fThepersonalcontText;
                }
            }

            /// <summary>
            /// Gets Reference to EnablePersonalCCheckBox
            /// </summary>
            public CheckBox EnablePersonalCCheckBox
            {
                get
                {
                    if (null == fEnablePersonalCCheckBox)
                    {
                        fEnablePersonalCCheckBox = new CheckBox("EnablePersonalCCheckBox", PersonalContactGroup);
                        fEnablePersonalCCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fEnablePersonalCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                        fEnablePersonalCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3edca417-7e14-47e9-8731-cf88146e55c7");
                        fEnablePersonalCCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Personal Contacts (when users sign in to Windows at the device)");
                    }

                    return fEnablePersonalCCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to EnablePersonalCText
            /// </summary>
            public Text EnablePersonalCText
            {
                get
                {
                    if (null == fEnablePersonalCText)
                    {
                        fEnablePersonalCText = new Text("EnablePersonalCText", EnablePersonalCCheckBox);
                        fEnablePersonalCText.UIMap.Scope = UIASeachScope.Children;
                        fEnablePersonalCText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fEnablePersonalCText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Personal Contacts (when users sign in to Windows at the device)");
                    }

                    return fEnablePersonalCText;
                }
            }

            /// <summary>
            /// Gets Reference to TestExchangeSerGroup
            /// </summary>
            public Group TestExchangeSerGroup
            {
                get
                {
                    if (null == fTestExchangeSerGroup)
                    {
                        fTestExchangeSerGroup = new Group("TestExchangeSerGroup", PersonalContactGroup);
                        fTestExchangeSerGroup.UIMap.Scope = UIASeachScope.Children;
                        fTestExchangeSerGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fTestExchangeSerGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mTestPersonalContactsServerGroupBox");
                        fTestExchangeSerGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test Exchange Server");
                    }

                    return fTestExchangeSerGroup;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPReplicationGroup
            /// </summary>
            public Group LDAPReplicationGroup
            {
                get
                {
                    if (null == fLDAPReplicationGroup)
                    {
                        fLDAPReplicationGroup = new Group("LDAPReplicationGroup", AddressingNetwoCustom);
                        fLDAPReplicationGroup.UIMap.Scope = UIASeachScope.Children;
                        fLDAPReplicationGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fLDAPReplicationGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mNetworkContactsGroupBox");
                        fLDAPReplicationGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Replication");
                    }

                    return fLDAPReplicationGroup;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPReplicationText
            /// </summary>
            public Text LDAPReplicationText
            {
                get
                {
                    if (null == fLDAPReplicationText)
                    {
                        fLDAPReplicationText = new Text("LDAPReplicationText", LDAPReplicationGroup);
                        fLDAPReplicationText.UIMap.Scope = UIASeachScope.Children;
                        fLDAPReplicationText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fLDAPReplicationText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Replication");
                    }

                    return fLDAPReplicationText;
                }
            }

            /// <summary>
            /// Gets Reference to EnableNetworkCoCheckBox
            /// </summary>
            public CheckBox EnableNetworkCoCheckBox
            {
                get
                {
                    if (null == fEnableNetworkCoCheckBox)
                    {
                        fEnableNetworkCoCheckBox = new CheckBox("EnableNetworkCoCheckBox", LDAPReplicationGroup);
                        fEnableNetworkCoCheckBox.UIMap.Scope = UIASeachScope.Children;
                        fEnableNetworkCoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                        fEnableNetworkCoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c771301b-e211-4fb2-809d-b4cb3bcd2067");
                        fEnableNetworkCoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Network Contacts (use LDAP server)");
                    }

                    return fEnableNetworkCoCheckBox;
                }
            }

            /// <summary>
            /// Gets Reference to EnableNetworkCoText
            /// </summary>
            public Text EnableNetworkCoText
            {
                get
                {
                    if (null == fEnableNetworkCoText)
                    {
                        fEnableNetworkCoText = new Text("EnableNetworkCoText", EnableNetworkCoCheckBox);
                        fEnableNetworkCoText.UIMap.Scope = UIASeachScope.Children;
                        fEnableNetworkCoText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fEnableNetworkCoText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Network Contacts (use LDAP server)");
                    }

                    return fEnableNetworkCoText;
                }
            }

            /// <summary>
            /// Gets Reference to ExpanderFD3555EGroup
            /// </summary>
            public Group ExpanderFD3555EGroup
            {
                get
                {
                    if (null == fExpanderFD3555EGroup)
                    {
                        fExpanderFD3555EGroup = new Group("ExpanderFD3555EGroup", LDAPReplicationGroup);
                        fExpanderFD3555EGroup.UIMap.Scope = UIASeachScope.Children;
                        fExpanderFD3555EGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                        fExpanderFD3555EGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FD3555EA-5DD8-4e8c-8013-4FBB6F98067E");
                    }

                    return fExpanderFD3555EGroup;
                }
            }

            /// <summary>
            /// Gets Reference to NetworkDirectorGroup
            /// </summary>
            public Group NetworkDirectorGroup
            {
                get
                {
                    if (null == fNetworkDirectorGroup)
                    {
                        fNetworkDirectorGroup = new Group("NetworkDirectorGroup", LDAPReplicationGroup);
                        fNetworkDirectorGroup.UIMap.Scope = UIASeachScope.Children;
                        fNetworkDirectorGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fNetworkDirectorGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mNetworkDirectoryServerGroupBox");
                        fNetworkDirectorGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network Directory Server (LDAP)(Step 1)");
                    }

                    return fNetworkDirectorGroup;
                }
            }

            /// <summary>
            /// Gets Reference to ExpanderDD1518FGroup
            /// </summary>
            public Group ExpanderDD1518FGroup
            {
                get
                {
                    if (null == fExpanderDD1518FGroup)
                    {
                        fExpanderDD1518FGroup = new Group("ExpanderDD1518FGroup", LDAPReplicationGroup);
                        fExpanderDD1518FGroup.UIMap.Scope = UIASeachScope.Children;
                        fExpanderDD1518FGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                        fExpanderDD1518FGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DD1518F6-229D-4794-BC45-4911B62A8276");
                    }

                    return fExpanderDD1518FGroup;
                }
            }

            /// <summary>
            /// Gets Reference to ServerAuthenticGroup
            /// </summary>
            public Group ServerAuthenticGroup
            {
                get
                {
                    if (null == fServerAuthenticGroup)
                    {
                        fServerAuthenticGroup = new Group("ServerAuthenticGroup", LDAPReplicationGroup);
                        fServerAuthenticGroup.UIMap.Scope = UIASeachScope.Children;
                        fServerAuthenticGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fServerAuthenticGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mServerAuthRequirementsGroupBox");
                        fServerAuthenticGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server Authentication Requirements(Step 2)");
                    }

                    return fServerAuthenticGroup;
                }
            }

            /// <summary>
            /// Gets Reference to ExpanderB7151C3Group
            /// </summary>
            public Group ExpanderB7151C3Group
            {
                get
                {
                    if (null == fExpanderB7151C3Group)
                    {
                        fExpanderB7151C3Group = new Group("ExpanderB7151C3Group", LDAPReplicationGroup);
                        fExpanderB7151C3Group.UIMap.Scope = UIASeachScope.Children;
                        fExpanderB7151C3Group.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                        fExpanderB7151C3Group.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B7151C32-813E-49fe-A052-F101BABC03F7");
                    }

                    return fExpanderB7151C3Group;
                }
            }

            /// <summary>
            /// Gets Reference to LDAPDatabaseSeaGroup
            /// </summary>
            public Group LDAPDatabaseSeaGroup
            {
                get
                {
                    if (null == fLDAPDatabaseSeaGroup)
                    {
                        fLDAPDatabaseSeaGroup = new Group("LDAPDatabaseSeaGroup", LDAPReplicationGroup);
                        fLDAPDatabaseSeaGroup.UIMap.Scope = UIASeachScope.Children;
                        fLDAPDatabaseSeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fLDAPDatabaseSeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mLDAPDbSearchSettingsGroupBox");
                        fLDAPDatabaseSeaGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Database Search Settings(Step 3)");
                    }

                    return fLDAPDatabaseSeaGroup;
                }
            }

            /// <summary>
            /// Gets Reference to Expander0D39A3CGroup
            /// </summary>
            public Group Expander0D39A3CGroup
            {
                get
                {
                    if (null == fExpander0D39A3CGroup)
                    {
                        fExpander0D39A3CGroup = new Group("Expander0D39A3CGroup", LDAPReplicationGroup);
                        fExpander0D39A3CGroup.UIMap.Scope = UIASeachScope.Children;
                        fExpander0D39A3CGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                        fExpander0D39A3CGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0D39A3C1-0FEF-4c04-A306-85CAC8347DF0");
                    }

                    return fExpander0D39A3CGroup;
                }
            }

            /// <summary>
            /// Gets Reference to TestforLDAPRetrGroup
            /// </summary>
            public Group TestforLDAPRetrGroup
            {
                get
                {
                    if (null == fTestforLDAPRetrGroup)
                    {
                        fTestforLDAPRetrGroup = new Group("TestforLDAPRetrGroup", LDAPReplicationGroup);
                        fTestforLDAPRetrGroup.UIMap.Scope = UIASeachScope.Children;
                        fTestforLDAPRetrGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fTestforLDAPRetrGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mTestLDAPRetrievalGroupBox");
                        fTestforLDAPRetrGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test for LDAP Retrieval(Step 4)");
                    }

                    return fTestforLDAPRetrGroup;
                }
            }

            /// <summary>
            /// Gets Reference to Expander5DC4D6AGroup
            /// </summary>
            public Group Expander5DC4D6AGroup
            {
                get
                {
                    if (null == fExpander5DC4D6AGroup)
                    {
                        fExpander5DC4D6AGroup = new Group("Expander5DC4D6AGroup", LDAPReplicationGroup);
                        fExpander5DC4D6AGroup.UIMap.Scope = UIASeachScope.Children;
                        fExpander5DC4D6AGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                        fExpander5DC4D6AGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5DC4D6A6-7B07-4911-859F-70566AF3C7B4");
                    }

                    return fExpander5DC4D6AGroup;
                }
            }

            /// <summary>
            /// Gets Reference to SyncScheduleSteGroup
            /// </summary>
            public Group SyncScheduleSteGroup
            {
                get
                {
                    if (null == fSyncScheduleSteGroup)
                    {
                        fSyncScheduleSteGroup = new Group("SyncScheduleSteGroup", LDAPReplicationGroup);
                        fSyncScheduleSteGroup.UIMap.Scope = UIASeachScope.Children;
                        fSyncScheduleSteGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fSyncScheduleSteGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"fa9b3876-67dc-436a-8dc9-2660331e162a");
                        fSyncScheduleSteGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sync Schedule (Step 5)");
                    }

                    return fSyncScheduleSteGroup;
                }
            }

            /// <summary>
            /// Gets Reference to ClearLDAPCacheBButton
            /// </summary>
            public Button ClearLDAPCacheBButton
            {
                get
                {
                    if (null == fClearLDAPCacheBButton)
                    {
                        fClearLDAPCacheBButton = new Button("ClearLDAPCacheBButton", LDAPReplicationGroup);
                        fClearLDAPCacheBButton.UIMap.Scope = UIASeachScope.Children;
                        fClearLDAPCacheBButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fClearLDAPCacheBButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9E2814A0-D532-4b13-B05A-60EEFA520123");
                        fClearLDAPCacheBButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear LDAP Cache");
                    }

                    return fClearLDAPCacheBButton;
                }
            }

            /// <summary>
            /// Gets Reference to ClearLDAPCacheTText
            /// </summary>
            public Text ClearLDAPCacheTText
            {
                get
                {
                    if (null == fClearLDAPCacheTText)
                    {
                        fClearLDAPCacheTText = new Text("ClearLDAPCacheTText", ClearLDAPCacheBButton);
                        fClearLDAPCacheTText.UIMap.Scope = UIASeachScope.Children;
                        fClearLDAPCacheTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fClearLDAPCacheTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Clear LDAP Cache");
                    }

                    return fClearLDAPCacheTText;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookManaGroup
            /// </summary>
            public Group AddressBookManaGroup
            {
                get
                {
                    if (null == fAddressBookManaGroup)
                    {
                        fAddressBookManaGroup = new Group("AddressBookManaGroup", ScrollViewerPane);
                        fAddressBookManaGroup.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                        fAddressBookManaGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                    }

                    return fAddressBookManaGroup;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookManaDup0Text
            /// </summary>
            public Text AddressBookManaDup0Text
            {
                get
                {
                    if (null == fAddressBookManaDup0Text)
                    {
                        fAddressBookManaDup0Text = new Text("AddressBookManaDup0Text", AddressBookManaGroup);
                        fAddressBookManaDup0Text.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAddressBookManaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                    }

                    return fAddressBookManaDup0Text;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookManaButton
            /// </summary>
            public Button AddressBookManaButton
            {
                get
                {
                    if (null == fAddressBookManaButton)
                    {
                        fAddressBookManaButton = new Button("AddressBookManaButton", AddressBookManaGroup);
                        fAddressBookManaButton.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fAddressBookManaButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"174F3D3D-4D21-4cef-956A-CD3D7E08CF4B");
                        fAddressBookManaButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                    }

                    return fAddressBookManaButton;
                }
            }

            /// <summary>
            /// Gets Reference to AddressBookManaDup1Text
            /// </summary>
            public Text AddressBookManaDup1Text
            {
                get
                {
                    if (null == fAddressBookManaDup1Text)
                    {
                        fAddressBookManaDup1Text = new Text("AddressBookManaDup1Text", AddressBookManaButton);
                        fAddressBookManaDup1Text.UIMap.Scope = UIASeachScope.Children;
                        fAddressBookManaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAddressBookManaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Book Manager");
                    }

                    return fAddressBookManaDup1Text;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarVerticDup11ScrollBar
            /// </summary>
            public ScrollBar ScrollBarVerticDup11ScrollBar
            {
                get
                {
                    if (null == fScrollBarVerticDup11ScrollBar)
                    {
                        fScrollBarVerticDup11ScrollBar = new ScrollBar("ScrollBarVerticDup11ScrollBar", ScrollViewerPane);
                        fScrollBarVerticDup11ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarVerticDup11ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarVerticDup11ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    }

                    return fScrollBarVerticDup11ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to ScrollBarHorizoDup11ScrollBar
            /// </summary>
            public ScrollBar ScrollBarHorizoDup11ScrollBar
            {
                get
                {
                    if (null == fScrollBarHorizoDup11ScrollBar)
                    {
                        fScrollBarHorizoDup11ScrollBar = new ScrollBar("ScrollBarHorizoDup11ScrollBar", ScrollViewerPane);
                        fScrollBarHorizoDup11ScrollBar.UIMap.Scope = UIASeachScope.Children;
                        fScrollBarHorizoDup11ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                        fScrollBarHorizoDup11ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    }

                    return fScrollBarHorizoDup11ScrollBar;
                }
            }

            /// <summary>
            /// Gets Reference to DeviceConfiguraTabItem
            /// </summary>
            public TabItem DeviceConfiguraTabItem
            {
                get
                {
                    if (null == fDeviceConfiguraTabItem)
                    {
                        fDeviceConfiguraTabItem = new TabItem("DeviceConfiguraTabItem", TabControlec0fdTab);
                        fDeviceConfiguraTabItem.UIMap.Scope = UIASeachScope.Children;
                        fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6DF1E016-517F-40e4-A63E-CD48D560192F");
                        fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                    }

                    return fDeviceConfiguraTabItem;
                }
            }

            /// <summary>
            /// Gets Reference to DeviceConfiguraText
            /// </summary>
            public Text DeviceConfiguraText
            {
                get
                {
                    if (null == fDeviceConfiguraText)
                    {
                        fDeviceConfiguraText = new Text("DeviceConfiguraText", DeviceConfiguraTabItem);
                        fDeviceConfiguraText.UIMap.Scope = UIASeachScope.Children;
                        fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                    }

                    return fDeviceConfiguraText;
                }
            }

            /// <summary>
            /// Gets Reference to TemplateConfiguTabItem
            /// </summary>
            public TabItem TemplateConfiguTabItem
            {
                get
                {
                    if (null == fTemplateConfiguTabItem)
                    {
                        fTemplateConfiguTabItem = new TabItem("TemplateConfiguTabItem", TabControlec0fdTab);
                        fTemplateConfiguTabItem.UIMap.Scope = UIASeachScope.Children;
                        fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AC05F9B9-A7D8-4b34-80E7-910FB9870D47");
                        fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                    }

                    return fTemplateConfiguTabItem;
                }
            }

            /// <summary>
            /// Gets Reference to TemplateConfiguText
            /// </summary>
            public Text TemplateConfiguText
            {
                get
                {
                    if (null == fTemplateConfiguText)
                    {
                        fTemplateConfiguText = new Text("TemplateConfiguText", TemplateConfiguTabItem);
                        fTemplateConfiguText.UIMap.Scope = UIASeachScope.Children;
                        fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                    }

                    return fTemplateConfiguText;
                }
            }

            /// <summary>
            /// Gets Reference to LogTabItem9b4f3TabItem
            /// </summary>
            public TabItem LogTabItem9b4f3TabItem
            {
                get
                {
                    if (null == fLogTabItem9b4f3TabItem)
                    {
                        fLogTabItem9b4f3TabItem = new TabItem("LogTabItem9b4f3TabItem", TabControlec0fdTab);
                        fLogTabItem9b4f3TabItem.UIMap.Scope = UIASeachScope.Children;
                        fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9b4f34bb-d75a-4080-9be3-1c50ec31c5b6");
                        fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                    }

                    return fLogTabItem9b4f3TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to LogTextBlockText
            /// </summary>
            public Text LogTextBlockText
            {
                get
                {
                    if (null == fLogTextBlockText)
                    {
                        fLogTextBlockText = new Text("LogTextBlockText", LogTabItem9b4f3TabItem);
                        fLogTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                    }

                    return fLogTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup7TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup7TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup7TabItem)
                    {
                        fSystemWindowsCoDup7TabItem = new TabItem("SystemWindowsCoDup7TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup7TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3AC8D4A8-3B06-421A-911B-E8CA248A9ED4");
                        fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup7TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to SecurityTextmSeText
            /// </summary>
            public Text SecurityTextmSeText
            {
                get
                {
                    if (null == fSecurityTextmSeText)
                    {
                        fSecurityTextmSeText = new Text("SecurityTextmSeText", SystemWindowsCoDup7TabItem);
                        fSecurityTextmSeText.UIMap.Scope = UIASeachScope.Children;
                        fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mSecurityTabLabel");
                        fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                    }

                    return fSecurityTextmSeText;
                }
            }

            /// <summary>
            /// Gets Reference to SecurityTextBloText
            /// </summary>
            public Text SecurityTextBloText
            {
                get
                {
                    if (null == fSecurityTextBloText)
                    {
                        fSecurityTextBloText = new Text("SecurityTextBloText", SecurityTextmSeText);
                        fSecurityTextBloText.UIMap.Scope = UIASeachScope.Children;
                        fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                    }

                    return fSecurityTextBloText;
                }
            }

            /// <summary>
            /// Gets Reference to Text8A7A84DB894Text
            /// </summary>
            public Text Text8A7A84DB894Text
            {
                get
                {
                    if (null == fText8A7A84DB894Text)
                    {
                        fText8A7A84DB894Text = new Text("Text8A7A84DB894Text", SystemWindowsCoDup7TabItem);
                        fText8A7A84DB894Text.UIMap.Scope = UIASeachScope.Children;
                        fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8A7A84DB-8945-40E1-A0F9-C40DDD129739");
                        fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    }

                    return fText8A7A84DB894Text;
                }
            }

            /// <summary>
            /// Gets Reference to Text16F78FB18FFText
            /// </summary>
            public Text Text16F78FB18FFText
            {
                get
                {
                    if (null == fText16F78FB18FFText)
                    {
                        fText16F78FB18FFText = new Text("Text16F78FB18FFText", SystemWindowsCoDup7TabItem);
                        fText16F78FB18FFText.UIMap.Scope = UIASeachScope.Children;
                        fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16F78FB1-8FF9-4B0D-8251-FB09F520EA73");
                        fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    }

                    return fText16F78FB18FFText;
                }
            }

            /// <summary>
            /// Gets Reference to SystemWindowsCoDup8TabItem
            /// </summary>
            public TabItem SystemWindowsCoDup8TabItem
            {
                get
                {
                    if (null == fSystemWindowsCoDup8TabItem)
                    {
                        fSystemWindowsCoDup8TabItem = new TabItem("SystemWindowsCoDup8TabItem", TabControlec0fdTab);
                        fSystemWindowsCoDup8TabItem.UIMap.Scope = UIASeachScope.Children;
                        fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1678607C-20BF-4137-8238-C9D46EA8FF70");
                        fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    }

                    return fSystemWindowsCoDup8TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to AnalyticsTextmAText
            /// </summary>
            public Text AnalyticsTextmAText
            {
                get
                {
                    if (null == fAnalyticsTextmAText)
                    {
                        fAnalyticsTextmAText = new Text("AnalyticsTextmAText", SystemWindowsCoDup8TabItem);
                        fAnalyticsTextmAText.UIMap.Scope = UIASeachScope.Children;
                        fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                        fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAnalyticsTabLabel");
                        fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                    }

                    return fAnalyticsTextmAText;
                }
            }

            /// <summary>
            /// Gets Reference to AnalyticsTextBlText
            /// </summary>
            public Text AnalyticsTextBlText
            {
                get
                {
                    if (null == fAnalyticsTextBlText)
                    {
                        fAnalyticsTextBlText = new Text("AnalyticsTextBlText", AnalyticsTextmAText);
                        fAnalyticsTextBlText.UIMap.Scope = UIASeachScope.Children;
                        fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                    }

                    return fAnalyticsTextBlText;
                }
            }

            /// <summary>
            /// Gets Reference to AboutTabItemf45TabItem
            /// </summary>
            public TabItem AboutTabItemf45TabItem
            {
                get
                {
                    if (null == fAboutTabItemf45TabItem)
                    {
                        fAboutTabItemf45TabItem = new TabItem("AboutTabItemf45TabItem", TabControlec0fdTab);
                        fAboutTabItemf45TabItem.UIMap.Scope = UIASeachScope.Children;
                        fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                        fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f45c22d9-f77a-481a-95bc-09cdff03e131");
                        fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                    }

                    return fAboutTabItemf45TabItem;
                }
            }

            /// <summary>
            /// Gets Reference to AboutTextBlockText
            /// </summary>
            public Text AboutTextBlockText
            {
                get
                {
                    if (null == fAboutTextBlockText)
                    {
                        fAboutTextBlockText = new Text("AboutTextBlockText", AboutTabItemf45TabItem);
                        fAboutTextBlockText.UIMap.Scope = UIASeachScope.Children;
                        fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                        fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                    }

                    return fAboutTextBlockText;
                }
            }

            /// <summary>
            /// Gets Reference to DuplicateEntry3Window
            /// </summary>
            public Window DuplicateEntry3Window
            {
                get
                {
                    if (null == fDuplicateEntry3Window)
                    {
                        fDuplicateEntry3Window = new Window("DuplicateEntry3Window", AddContactWindoWindow);
                        fDuplicateEntry3Window.UIMap.Scope = UIASeachScope.Children;
                        fDuplicateEntry3Window.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                        fDuplicateEntry3Window.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Duplicate Entry");
                    }

                    return fDuplicateEntry3Window;
                }
            }

            /// <summary>
            /// Gets Reference to OKButton1Button
            /// </summary>
            public Button OKButton1Button
            {
                get
                {
                    if (null == fOKButton1Button)
                    {
                        fOKButton1Button = new Button("OKButton1Button", DuplicateEntry3Window);
                        fOKButton1Button.UIMap.Scope = UIASeachScope.Children;
                        fOKButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1");
                        fOKButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                        fOKButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    }

                    return fOKButton1Button;
                }
            }
        }
    }
}

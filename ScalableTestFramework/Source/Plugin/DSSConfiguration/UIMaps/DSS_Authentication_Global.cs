//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using TopCat.Core;
using TopCat.TestApi.Enums;

namespace HP.ScalableTest.Plugin.DSSConfiguration.UIMaps
{
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class DSS_Authentication_Global
    {
        /// <summary>
        /// Backing field for HPDigitalSendinWindow property
        /// </summary>
        private Window fHPDigitalSendinWindow;

        /// <summary>
        /// Backing field for HPDigitalSendinTitleBar property
        /// </summary>
        private TitleBar fHPDigitalSendinTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyMenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyMenuBar;

        /// <summary>
        /// Backing field for SystemItem1MenuItem property
        /// </summary>
        private MenuItem fSystemItem1MenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizButton property
        /// </summary>
        private Button fMinimizeMinimizButton;

        /// <summary>
        /// Backing field for MaximizeMaximizButton property
        /// </summary>
        private Button fMaximizeMaximizButton;

        /// <summary>
        /// Backing field for CloseCloseButton property
        /// </summary>
        private Button fCloseCloseButton;

        /// <summary>
        /// Backing field for HelpButtonCB8CFButton property
        /// </summary>
        private Button fHelpButtonCB8CFButton;

        /// <summary>
        /// Backing field for HelpTextBlockText property
        /// </summary>
        private Text fHelpTextBlockText;

        /// <summary>
        /// Backing field for ApplyButton61E2Button property
        /// </summary>
        private Button fApplyButton61E2Button;

        /// <summary>
        /// Backing field for ApplyTextBlockText property
        /// </summary>
        private Text fApplyTextBlockText;

        /// <summary>
        /// Backing field for CancelButton65CButton property
        /// </summary>
        private Button fCancelButton65CButton;

        /// <summary>
        /// Backing field for CancelTextBlockText property
        /// </summary>
        private Text fCancelTextBlockText;

        /// <summary>
        /// Backing field for OKButtonCC2EF49Button property
        /// </summary>
        private Button fOKButtonCC2EF49Button;

        /// <summary>
        /// Backing field for OKTextBlockText property
        /// </summary>
        private Text fOKTextBlockText;

        /// <summary>
        /// Backing field for TabControlec0fdTab property
        /// </summary>
        private Tab fTabControlec0fdTab;

        /// <summary>
        /// Backing field for SystemWindowsCoDup0TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup0TabItem;

        /// <summary>
        /// Backing field for GeneralTextmGenText property
        /// </summary>
        private Text fGeneralTextmGenText;

        /// <summary>
        /// Backing field for GeneralTextBlocText property
        /// </summary>
        private Text fGeneralTextBlocText;

        /// <summary>
        /// Backing field for Text933345b04e3Text property
        /// </summary>
        private Text fText933345b04e3Text;

        /// <summary>
        /// Backing field for Text786caf67344Text property
        /// </summary>
        private Text fText786caf67344Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup1TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup1TabItem;

        /// <summary>
        /// Backing field for AuthenticationTDup0Text property
        /// </summary>
        private Text fAuthenticationTDup0Text;

        /// <summary>
        /// Backing field for AuthenticationTDup1Text property
        /// </summary>
        private Text fAuthenticationTDup1Text;

        /// <summary>
        /// Backing field for Text31EC91730B9Text property
        /// </summary>
        private Text fText31EC91730B9Text;

        /// <summary>
        /// Backing field for TextBlockDup0Text property
        /// </summary>
        private Text fTextBlockDup0Text;

        /// <summary>
        /// Backing field for TextA479C271445Text property
        /// </summary>
        private Text fTextA479C271445Text;

        /// <summary>
        /// Backing field for TextBlockDup1Text property
        /// </summary>
        private Text fTextBlockDup1Text;

        /// <summary>
        /// Backing field for ServiceConfigurCustom property
        /// </summary>
        private Custom fServiceConfigurCustom;

        /// <summary>
        /// Backing field for ScrollViewerPane property
        /// </summary>
        private Pane fScrollViewerPane;

        /// <summary>
        /// Backing field for ErrorConflictUsCustom property
        /// </summary>
        private Custom fErrorConflictUsCustom;

        /// <summary>
        /// Backing field for ImageImage property
        /// </summary>
        private Image fImageImage;

        /// <summary>
        /// Backing field for A1LDAPServerAddText property
        /// </summary>
        private Text fA1LDAPServerAddText;

        /// <summary>
        /// Backing field for AuthenticationMDup0Text property
        /// </summary>
        private Text fAuthenticationMDup0Text;

        /// <summary>
        /// Backing field for AuthenticationMDup1Text property
        /// </summary>
        private Text fAuthenticationMDup1Text;

        /// <summary>
        /// Backing field for ComboBoxd8aaf9dComboBox property
        /// </summary>
        private ComboBox fComboBoxd8aaf9dComboBox;

        /// <summary>
        /// Backing field for NoneListBoxItemListItem property
        /// </summary>
        private ListItem fNoneListBoxItemListItem;

        /// <summary>
        /// Backing field for NoneTextBlockText property
        /// </summary>
        private Text fNoneTextBlockText;

        /// <summary>
        /// Backing field for LDAPServerListBListItem property
        /// </summary>
        private ListItem fLDAPServerListBListItem;

        /// <summary>
        /// Backing field for LDAPServerTextBText property
        /// </summary>
        private Text fLDAPServerTextBText;

        /// <summary>
        /// Backing field for MicrosoftWindowListItem property
        /// </summary>
        private ListItem fMicrosoftWindowListItem;

        /// <summary>
        /// Backing field for MicrosoftWindowText property
        /// </summary>
        private Text fMicrosoftWindowText;

        /// <summary>
        /// Backing field for WindowsSignInSeGroup property
        /// </summary>
        private Group fWindowsSignInSeGroup;

        /// <summary>
        /// Backing field for WindowsSignInSeText property
        /// </summary>
        private Text fWindowsSignInSeText;

        /// <summary>
        /// Backing field for UseasecureconneDup0CheckBox property
        /// </summary>
        private CheckBox fUseasecureconneDup0CheckBox;

        /// <summary>
        /// Backing field for UseasecureconneDup0Text property
        /// </summary>
        private Text fUseasecureconneDup0Text;

        /// <summary>
        /// Backing field for TrustedDomainsText property
        /// </summary>
        private Text fTrustedDomainsText;

        /// <summary>
        /// Backing field for TrustedDomainsTText property
        /// </summary>
        private Text fTrustedDomainsTText;

        /// <summary>
        /// Backing field for DefaultWindowsDDup0Text property
        /// </summary>
        private Text fDefaultWindowsDDup0Text;

        /// <summary>
        /// Backing field for DefaultWindowsDDup1Text property
        /// </summary>
        private Text fDefaultWindowsDDup1Text;

        /// <summary>
        /// Backing field for TextBoxf5ff5c0bEdit property
        /// </summary>
        private Edit fTextBoxf5ff5c0bEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup0Pane property
        /// </summary>
        private Pane fScrollViewerPARDup0Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup0ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup0ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup0ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup0ScrollBar;

        /// <summary>
        /// Backing field for AddButton499d7fButton property
        /// </summary>
        private Button fAddButton499d7fButton;

        /// <summary>
        /// Backing field for AddTextBlockText property
        /// </summary>
        private Text fAddTextBlockText;

        /// <summary>
        /// Backing field for ComboBox5f7d07bComboBox property
        /// </summary>
        private ComboBox fComboBox5f7d07bComboBox;

        /// <summary>
        /// Backing field for ListBox5b32a000List property
        /// </summary>
        private List fListBox5b32a000List;

        /// <summary>
        /// Backing field for A10111495ListBoListItem property
        /// </summary>
        private ListItem fA10111495ListBoListItem;

        /// <summary>
        /// Backing field for A10111495TextBlText property
        /// </summary>
        private Text fA10111495TextBlText;

        /// <summary>
        /// Backing field for RemoveButton46fButton property
        /// </summary>
        private Button fRemoveButton46fButton;

        /// <summary>
        /// Backing field for RemoveTextBlockText property
        /// </summary>
        private Text fRemoveTextBlockText;

        /// <summary>
        /// Backing field for MatchthenameentDup0Text property
        /// </summary>
        private Text fMatchthenameentDup0Text;

        /// <summary>
        /// Backing field for MatchthenameentDup1Text property
        /// </summary>
        private Text fMatchthenameentDup1Text;

        /// <summary>
        /// Backing field for TextBoxfe1b97b3Edit property
        /// </summary>
        private Edit fTextBoxfe1b97b3Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup1Pane property
        /// </summary>
        private Pane fScrollViewerPARDup1Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup1ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup1ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup1ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup1ScrollBar;

        /// <summary>
        /// Backing field for RetrievetheuserDup0Text property
        /// </summary>
        private Text fRetrievetheuserDup0Text;

        /// <summary>
        /// Backing field for RetrievetheuserDup1Text property
        /// </summary>
        private Text fRetrievetheuserDup1Text;

        /// <summary>
        /// Backing field for TextBox6db21b21Edit property
        /// </summary>
        private Edit fTextBox6db21b21Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup2Pane property
        /// </summary>
        private Pane fScrollViewerPARDup2Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup2ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup2ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup2ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup2ScrollBar;

        /// <summary>
        /// Backing field for RetrievetheuserDup2Text property
        /// </summary>
        private Text fRetrievetheuserDup2Text;

        /// <summary>
        /// Backing field for TextBox1B3427A6Edit property
        /// </summary>
        private Edit fTextBox1B3427A6Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup3Pane property
        /// </summary>
        private Pane fScrollViewerPARDup3Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup3ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup3ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup3ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup3ScrollBar;

        /// <summary>
        /// Backing field for TestWindowsSignGroup property
        /// </summary>
        private Group fTestWindowsSignGroup;

        /// <summary>
        /// Backing field for TestWindowsSignText property
        /// </summary>
        private Text fTestWindowsSignText;

        /// <summary>
        /// Backing field for DomainText property
        /// </summary>
        private Text fDomainText;

        /// <summary>
        /// Backing field for DomainTextBlockText property
        /// </summary>
        private Text fDomainTextBlockText;

        /// <summary>
        /// Backing field for ComboBoxbd29c3eComboBox property
        /// </summary>
        private ComboBox fComboBoxbd29c3eComboBox;

        /// <summary>
        /// Backing field for UsernameDup0Text property
        /// </summary>
        private Text fUsernameDup0Text;

        /// <summary>
        /// Backing field for UsernameTextBloDup0Text property
        /// </summary>
        private Text fUsernameTextBloDup0Text;

        /// <summary>
        /// Backing field for TextBox15b33377Edit property
        /// </summary>
        private Edit fTextBox15b33377Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup4Pane property
        /// </summary>
        private Pane fScrollViewerPARDup4Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup4ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup4ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup4ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup4ScrollBar;

        /// <summary>
        /// Backing field for PasswordDup0Text property
        /// </summary>
        private Text fPasswordDup0Text;

        /// <summary>
        /// Backing field for PasswordTextBloDup0Text property
        /// </summary>
        private Text fPasswordTextBloDup0Text;

        /// <summary>
        /// Backing field for PasswordBox475aEdit property
        /// </summary>
        private Edit fPasswordBox475aEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup5Pane property
        /// </summary>
        private Pane fScrollViewerPARDup5Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup5ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup5ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup5ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup5ScrollBar;

        /// <summary>
        /// Backing field for TestButtonc5487Button property
        /// </summary>
        private Button fTestButtonc5487Button;

        /// <summary>
        /// Backing field for TestTextBlockDup0Text property
        /// </summary>
        private Text fTestTextBlockDup0Text;

        /// <summary>
        /// Backing field for LDAPSignInSetupGroup property
        /// </summary>
        private Group fLDAPSignInSetupGroup;

        /// <summary>
        /// Backing field for LDAPSignInSetupText property
        /// </summary>
        private Text fLDAPSignInSetupText;

        /// <summary>
        /// Backing field for LDAPServerAddreDup0Text property
        /// </summary>
        private Text fLDAPServerAddreDup0Text;

        /// <summary>
        /// Backing field for LDAPServerAddreDup1Text property
        /// </summary>
        private Text fLDAPServerAddreDup1Text;

        /// <summary>
        /// Backing field for TextBox5161EC14Edit property
        /// </summary>
        private Edit fTextBox5161EC14Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup6Pane property
        /// </summary>
        private Pane fScrollViewerPARDup6Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup6ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup6ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup6ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup6ScrollBar;

        /// <summary>
        /// Backing field for PortNumberText property
        /// </summary>
        private Text fPortNumberText;

        /// <summary>
        /// Backing field for PortNumberTextBText property
        /// </summary>
        private Text fPortNumberTextBText;

        /// <summary>
        /// Backing field for TextBox0F193739Edit property
        /// </summary>
        private Edit fTextBox0F193739Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup7Pane property
        /// </summary>
        private Pane fScrollViewerPARDup7Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup7ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup7ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup7ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup7ScrollBar;

        /// <summary>
        /// Backing field for UseasecureconneDup1CheckBox property
        /// </summary>
        private CheckBox fUseasecureconneDup1CheckBox;

        /// <summary>
        /// Backing field for UseasecureconneDup1Text property
        /// </summary>
        private Text fUseasecureconneDup1Text;

        /// <summary>
        /// Backing field for BindPrefixText property
        /// </summary>
        private Text fBindPrefixText;

        /// <summary>
        /// Backing field for BindPrefixTextBText property
        /// </summary>
        private Text fBindPrefixTextBText;

        /// <summary>
        /// Backing field for TextBoxE997ACA4Edit property
        /// </summary>
        private Edit fTextBoxE997ACA4Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup8Pane property
        /// </summary>
        private Pane fScrollViewerPARDup8Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup8ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup8ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup8ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup8ScrollBar;

        /// <summary>
        /// Backing field for BindandSearchRoDup0Text property
        /// </summary>
        private Text fBindandSearchRoDup0Text;

        /// <summary>
        /// Backing field for BindandSearchRoDup1Text property
        /// </summary>
        private Text fBindandSearchRoDup1Text;

        /// <summary>
        /// Backing field for TextBoxC51EE9FBEdit property
        /// </summary>
        private Edit fTextBoxC51EE9FBEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup9Pane property
        /// </summary>
        private Pane fScrollViewerPARDup9Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup9ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup9ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup9ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup9ScrollBar;

        /// <summary>
        /// Backing field for MatchthenameentDup2Text property
        /// </summary>
        private Text fMatchthenameentDup2Text;

        /// <summary>
        /// Backing field for MatchthenameentDup3Text property
        /// </summary>
        private Text fMatchthenameentDup3Text;

        /// <summary>
        /// Backing field for TextBox53E6E4C0Edit property
        /// </summary>
        private Edit fTextBox53E6E4C0Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup10Pane property
        /// </summary>
        private Pane fScrollViewerPARDup10Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup10ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup10ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup10ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup10ScrollBar;

        /// <summary>
        /// Backing field for RetrievetheuserDup3Text property
        /// </summary>
        private Text fRetrievetheuserDup3Text;

        /// <summary>
        /// Backing field for RetrievetheuserDup4Text property
        /// </summary>
        private Text fRetrievetheuserDup4Text;

        /// <summary>
        /// Backing field for TextBox9EA6BFB3Edit property
        /// </summary>
        private Edit fTextBox9EA6BFB3Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup11Pane property
        /// </summary>
        private Pane fScrollViewerPARDup11Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup11ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup11ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup11ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup11ScrollBar;

        /// <summary>
        /// Backing field for RetrievethedeviDup0Text property
        /// </summary>
        private Text fRetrievethedeviDup0Text;

        /// <summary>
        /// Backing field for RetrievethedeviDup1Text property
        /// </summary>
        private Text fRetrievethedeviDup1Text;

        /// <summary>
        /// Backing field for TextBox38D37C24Edit property
        /// </summary>
        private Edit fTextBox38D37C24Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup12Pane property
        /// </summary>
        private Pane fScrollViewerPARDup12Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup12ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup12ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup12ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup12ScrollBar;

        /// <summary>
        /// Backing field for RetrievethedeviDup2Text property
        /// </summary>
        private Text fRetrievethedeviDup2Text;

        /// <summary>
        /// Backing field for RetrievethedeviDup3Text property
        /// </summary>
        private Text fRetrievethedeviDup3Text;

        /// <summary>
        /// Backing field for TextBox0BB02D5EEdit property
        /// </summary>
        private Edit fTextBox0BB02D5EEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup13Pane property
        /// </summary>
        private Pane fScrollViewerPARDup13Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup13ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup13ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup13ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup13ScrollBar;

        /// <summary>
        /// Backing field for ExactmatchonGroCheckBox property
        /// </summary>
        private CheckBox fExactmatchonGroCheckBox;

        /// <summary>
        /// Checks for screen avalability
        /// </summary>
        /// <param name="timeout">
        /// The amount of time allowed for the screen avalability
        /// </param>
        public bool WaitForAvailable(int timeout)
        {
            try
            {
                if (HPDigitalSendinWindow.WaitForAvailable(timeout) == ResultCode.Passed)
                {
                    if (AuthenticationTabItem.WaitForAvailable(timeout) == ResultCode.Passed)
                    {
                        return true;
                    }
                }
            }
            catch(Exception)
            {
                return false;
            }
            return false;
        }
    

        /// <summary>
        /// Backing field for ExactmatchonGroText property
        /// </summary>
        private Text fExactmatchonGroText;

        /// <summary>
        /// Backing field for TestLDAPSignInGGroup property
        /// </summary>
        private Group fTestLDAPSignInGGroup;

        /// <summary>
        /// Backing field for TestLDAPSignInTText property
        /// </summary>
        private Text fTestLDAPSignInTText;

        /// <summary>
        /// Backing field for UsernameDup1Text property
        /// </summary>
        private Text fUsernameDup1Text;

        /// <summary>
        /// Backing field for UsernameTextBloDup1Text property
        /// </summary>
        private Text fUsernameTextBloDup1Text;

        /// <summary>
        /// Backing field for TextBoxB8C8294DEdit property
        /// </summary>
        private Edit fTextBoxB8C8294DEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup14Pane property
        /// </summary>
        private Pane fScrollViewerPARDup14Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup14ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup14ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup14ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup14ScrollBar;

        /// <summary>
        /// Backing field for PasswordDup1Text property
        /// </summary>
        private Text fPasswordDup1Text;

        /// <summary>
        /// Backing field for PasswordTextBloDup1Text property
        /// </summary>
        private Text fPasswordTextBloDup1Text;

        /// <summary>
        /// Backing field for PasswordBoxAB2CEdit property
        /// </summary>
        private Edit fPasswordBoxAB2CEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup15Pane property
        /// </summary>
        private Pane fScrollViewerPARDup15Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup15ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup15ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup15ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup15ScrollBar;

        /// <summary>
        /// Backing field for TestButtonB1BD3Button property
        /// </summary>
        private Button fTestButtonB1BD3Button;

        /// <summary>
        /// Backing field for TestTextBlockDup1Text property
        /// </summary>
        private Text fTestTextBlockDup1Text;

        /// <summary>
        /// Backing field for ScrollBarVerticDup16ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup16ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup16ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup16ScrollBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup2TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup2TabItem;

        /// <summary>
        /// Backing field for EmailTextmEmailText property
        /// </summary>
        private Text fEmailTextmEmailText;

        /// <summary>
        /// Backing field for EmailTextBlockText property
        /// </summary>
        private Text fEmailTextBlockText;

        /// <summary>
        /// Backing field for Text32de714a8bdText property
        /// </summary>
        private Text fText32de714a8bdText;

        /// <summary>
        /// Backing field for Text3b2a8761f4fText property
        /// </summary>
        private Text fText3b2a8761f4fText;

        /// <summary>
        /// Backing field for TextBlockDup2Text property
        /// </summary>
        private Text fTextBlockDup2Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup3TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup3TabItem;

        /// <summary>
        /// Backing field for FaxTextmFaxTabLText property
        /// </summary>
        private Text fFaxTextmFaxTabLText;

        /// <summary>
        /// Backing field for FaxTextBlockText property
        /// </summary>
        private Text fFaxTextBlockText;

        /// <summary>
        /// Backing field for TextD1ED4F16F38Text property
        /// </summary>
        private Text fTextD1ED4F16F38Text;

        /// <summary>
        /// Backing field for Text7DDE04FD251Text property
        /// </summary>
        private Text fText7DDE04FD251Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup4TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup4TabItem;

        /// <summary>
        /// Backing field for SendtoFolderTexDup0Text property
        /// </summary>
        private Text fSendtoFolderTexDup0Text;

        /// <summary>
        /// Backing field for SendtoFolderTexDup1Text property
        /// </summary>
        private Text fSendtoFolderTexDup1Text;

        /// <summary>
        /// Backing field for Text7a57f43ecb1Text property
        /// </summary>
        private Text fText7a57f43ecb1Text;

        /// <summary>
        /// Backing field for Text654b650dd19Text property
        /// </summary>
        private Text fText654b650dd19Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup5TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup5TabItem;

        /// <summary>
        /// Backing field for WorkflowsTextmWText property
        /// </summary>
        private Text fWorkflowsTextmWText;

        /// <summary>
        /// Backing field for WorkflowsTextBlText property
        /// </summary>
        private Text fWorkflowsTextBlText;

        /// <summary>
        /// Backing field for Text22D9C34E84CText property
        /// </summary>
        private Text fText22D9C34E84CText;

        /// <summary>
        /// Backing field for TextC8D15BD39C8Text property
        /// </summary>
        private Text fTextC8D15BD39C8Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup6TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup6TabItem;

        /// <summary>
        /// Backing field for AddressingTextmText property
        /// </summary>
        private Text fAddressingTextmText;

        /// <summary>
        /// Backing field for AddressingTextBText property
        /// </summary>
        private Text fAddressingTextBText;

        /// <summary>
        /// Backing field for Text47EB5CBA4D1Text property
        /// </summary>
        private Text fText47EB5CBA4D1Text;

        /// <summary>
        /// Backing field for Text0757E148179Text property
        /// </summary>
        private Text fText0757E148179Text;

        /// <summary>
        /// Backing field for DeviceConfiguraTabItem property
        /// </summary>
        private TabItem fDeviceConfiguraTabItem;

        /// <summary>
        /// Backing field for DeviceConfiguraText property
        /// </summary>
        private Text fDeviceConfiguraText;

        /// <summary>
        /// Backing field for TemplateConfiguTabItem property
        /// </summary>
        private TabItem fTemplateConfiguTabItem;

        /// <summary>
        /// Backing field for TemplateConfiguText property
        /// </summary>
        private Text fTemplateConfiguText;

        /// <summary>
        /// Backing field for LogTabItem9b4f3TabItem property
        /// </summary>
        private TabItem fLogTabItem9b4f3TabItem;

        /// <summary>
        /// Backing field for LogTextBlockText property
        /// </summary>
        private Text fLogTextBlockText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup7TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup7TabItem;

        /// <summary>
        /// Backing field for SecurityTextmSeText property
        /// </summary>
        private Text fSecurityTextmSeText;

        /// <summary>
        /// Backing field for SecurityTextBloText property
        /// </summary>
        private Text fSecurityTextBloText;

        /// <summary>
        /// Backing field for Text8A7A84DB894Text property
        /// </summary>
        private Text fText8A7A84DB894Text;

        /// <summary>
        /// Backing field for Text16F78FB18FFText property
        /// </summary>
        private Text fText16F78FB18FFText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup8TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup8TabItem;

        /// <summary>
        /// Backing field for AnalyticsTextmAText property
        /// </summary>
        private Text fAnalyticsTextmAText;

        /// <summary>
        /// Backing field for AnalyticsTextBlText property
        /// </summary>
        private Text fAnalyticsTextBlText;

        /// <summary>
        /// Backing field for AboutTabItemf45TabItem property
        /// </summary>
        private TabItem fAboutTabItemf45TabItem;

        /// <summary>
        /// Backing field for AboutTextBlockText property
        /// </summary>
        private Text fAboutTextBlockText;

        /// <summary>
        /// The System Ip
        /// </summary>
        private string _systemIP;
        
        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_Authentication_Global"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public DSS_Authentication_Global(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_Authentication_Global"/> class using the default UIAFramework.
        /// </summary>
        public DSS_Authentication_Global()
        {
            Desktop = new Desktop();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_Authentication_Global"/> class using the default UIAFramework.
        /// </summary>
        /// <param name="address">
        /// The system IP address.
        /// </param>
        public DSS_Authentication_Global(string address)
        {
            _systemIP = address;
            Desktop = new Desktop(UIAFramework.ManagedUIA);
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        /// <summary>
        /// Gets Reference to HPDigitalSendinWindow
        /// </summary>
        public Window HPDigitalSendinWindow
        {
            get
            {
                if (null == fHPDigitalSendinWindow)
                {
                    fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                    fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_systemIP})");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                }

                return fHPDigitalSendinWindow;
            }
        }

        /// <summary>
        /// Gets Reference to HPDigitalSendinTitleBar
        /// </summary>
        public TitleBar HPDigitalSendinTitleBar
        {
            get
            {
                if (null == fHPDigitalSendinTitleBar)
                {
                    fHPDigitalSendinTitleBar = new TitleBar("HPDigitalSendinTitleBar", HPDigitalSendinWindow);
                    fHPDigitalSendinTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_systemIP})");
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                }

                return fHPDigitalSendinTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemMenuBarSyMenuBar
        /// </summary>
        public MenuBar SystemMenuBarSyMenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyMenuBar)
                {
                    fSystemMenuBarSyMenuBar = new MenuBar("SystemMenuBarSyMenuBar", HPDigitalSendinTitleBar);
                    fSystemMenuBarSyMenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyMenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                    fSystemMenuBarSyMenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                }

                return fSystemMenuBarSyMenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemItem1MenuItem
        /// </summary>
        public MenuItem SystemItem1MenuItem
        {
            get
            {
                if (null == fSystemItem1MenuItem)
                {
                    fSystemItem1MenuItem = new MenuItem("SystemItem1MenuItem", SystemMenuBarSyMenuBar);
                    fSystemItem1MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                    fSystemItem1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                }

                return fSystemItem1MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to MinimizeMinimizButton
        /// </summary>
        public Button MinimizeMinimizButton
        {
            get
            {
                if (null == fMinimizeMinimizButton)
                {
                    fMinimizeMinimizButton = new Button("MinimizeMinimizButton", HPDigitalSendinTitleBar);
                    fMinimizeMinimizButton.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                    fMinimizeMinimizButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                }

                return fMinimizeMinimizButton;
            }
        }

        /// <summary>
        /// Gets Reference to MaximizeMaximizButton
        /// </summary>
        public Button MaximizeMaximizButton
        {
            get
            {
                if (null == fMaximizeMaximizButton)
                {
                    fMaximizeMaximizButton = new Button("MaximizeMaximizButton", HPDigitalSendinTitleBar);
                    fMaximizeMaximizButton.UIMap.Scope = UIASeachScope.Children;
                    fMaximizeMaximizButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                    fMaximizeMaximizButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                }

                return fMaximizeMaximizButton;
            }
        }

        /// <summary>
        /// Gets Reference to CloseCloseButton
        /// </summary>
        public Button CloseCloseButton
        {
            get
            {
                if (null == fCloseCloseButton)
                {
                    fCloseCloseButton = new Button("CloseCloseButton", HPDigitalSendinTitleBar);
                    fCloseCloseButton.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                    fCloseCloseButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                }

                return fCloseCloseButton;
            }
        }

        /// <summary>
        /// Gets Reference to HelpButtonCB8CFButton
        /// </summary>
        public Button HelpButtonCB8CFButton
        {
            get
            {
                if (null == fHelpButtonCB8CFButton)
                {
                    fHelpButtonCB8CFButton = new Button("HelpButtonCB8CFButton", HPDigitalSendinWindow);
                    fHelpButtonCB8CFButton.UIMap.Scope = UIASeachScope.Children;
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CB8CF0C3-DFBE-49b8-B09B-03A34F5D4186");
                }

                return fHelpButtonCB8CFButton;
            }
        }

        /// <summary>
        /// Gets Reference to HelpTextBlockText
        /// </summary>
        public Text HelpTextBlockText
        {
            get
            {
                if (null == fHelpTextBlockText)
                {
                    fHelpTextBlockText = new Text("HelpTextBlockText", HelpButtonCB8CFButton);
                    fHelpTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ApplyButton61E2Button
        /// </summary>
        public Button GlobalApplyButton
        {
            get
            {
                if (null == fApplyButton61E2Button)
                {
                    fApplyButton61E2Button = new Button("ApplyButton61E2Button", HPDigitalSendinWindow);
                    fApplyButton61E2Button.UIMap.Scope = UIASeachScope.Children;
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"61E2369B-F53B-4662-A361-B3034C4EFF67");
                }

                return fApplyButton61E2Button;
            }
        }

        /// <summary>
        /// Gets Reference to ApplyTextBlockText
        /// </summary>
        public Text ApplyTextBlockText
        {
            get
            {
                if (null == fApplyTextBlockText)
                {
                    fApplyTextBlockText = new Text("ApplyTextBlockText", GlobalApplyButton);
                    fApplyTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to CancelButton65CButton
        /// </summary>
        public Button CancelButton65CButton
        {
            get
            {
                if (null == fCancelButton65CButton)
                {
                    fCancelButton65CButton = new Button("CancelButton65CButton", HPDigitalSendinWindow);
                    fCancelButton65CButton.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"65C76204-7AB5-4681-B7FD-2D8F02DA6D4B");
                }

                return fCancelButton65CButton;
            }
        }

        /// <summary>
        /// Gets Reference to CancelTextBlockText
        /// </summary>
        public Text CancelTextBlockText
        {
            get
            {
                if (null == fCancelTextBlockText)
                {
                    fCancelTextBlockText = new Text("CancelTextBlockText", CancelButton65CButton);
                    fCancelTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fCancelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCancelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to OKButtonCC2EF49Button
        /// </summary>
        public Button OKButtonCC2EF49Button
        {
            get
            {
                if (null == fOKButtonCC2EF49Button)
                {
                    fOKButtonCC2EF49Button = new Button("OKButtonCC2EF49Button", HPDigitalSendinWindow);
                    fOKButtonCC2EF49Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CC2EF491-0BD1-4ac5-9D00-AA61A9D6BA0C");
                }

                return fOKButtonCC2EF49Button;
            }
        }

        /// <summary>
        /// Gets Reference to OKTextBlockText
        /// </summary>
        public Text OKTextBlockText
        {
            get
            {
                if (null == fOKTextBlockText)
                {
                    fOKTextBlockText = new Text("OKTextBlockText", OKButtonCC2EF49Button);
                    fOKTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fOKTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOKTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to TabControlec0fdTab
        /// </summary>
        public Tab TabControlec0fdTab
        {
            get
            {
                if (null == fTabControlec0fdTab)
                {
                    fTabControlec0fdTab = new Tab("TabControlec0fdTab", HPDigitalSendinWindow);
                    fTabControlec0fdTab.UIMap.Scope = UIASeachScope.Children;
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ec0fd6cd-2ab8-482f-96a5-d1fa158f38d1");
                }

                return fTabControlec0fdTab;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup0TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup0TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup0TabItem)
                {
                    fSystemWindowsCoDup0TabItem = new TabItem("SystemWindowsCoDup0TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup0TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1e2be878-0c03-4404-988c-54d0df925f0f");
                }

                return fSystemWindowsCoDup0TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralTextmGenText
        /// </summary>
        public Text GeneralTextmGenText
        {
            get
            {
                if (null == fGeneralTextmGenText)
                {
                    fGeneralTextmGenText = new Text("GeneralTextmGenText", SystemWindowsCoDup0TabItem);
                    fGeneralTextmGenText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                }

                return fGeneralTextmGenText;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralTextBlocText
        /// </summary>
        public Text GeneralTextBlocText
        {
            get
            {
                if (null == fGeneralTextBlocText)
                {
                    fGeneralTextBlocText = new Text("GeneralTextBlocText", GeneralTextmGenText);
                    fGeneralTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to Text933345b04e3Text
        /// </summary>
        public Text Text933345b04e3Text
        {
            get
            {
                if (null == fText933345b04e3Text)
                {
                    fText933345b04e3Text = new Text("Text933345b04e3Text", SystemWindowsCoDup0TabItem);
                    fText933345b04e3Text.UIMap.Scope = UIASeachScope.Children;
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"933345b0-4e39-44d3-a511-0077f3176ca4");
                }

                return fText933345b04e3Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text786caf67344Text
        /// </summary>
        public Text Text786caf67344Text
        {
            get
            {
                if (null == fText786caf67344Text)
                {
                    fText786caf67344Text = new Text("Text786caf67344Text", SystemWindowsCoDup0TabItem);
                    fText786caf67344Text.UIMap.Scope = UIASeachScope.Children;
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"786caf67-344f-4ddc-83a5-b9431fb36731");
                }

                return fText786caf67344Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup1TabItem
        /// </summary>
        public TabItem AuthenticationTabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup1TabItem)
                {
                    fSystemWindowsCoDup1TabItem = new TabItem("SystemWindowsCoDup1TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup1TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4e90d18a-f33c-43c0-8505-08f4a17169b5");
                }

                return fSystemWindowsCoDup1TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationTDup0Text
        /// </summary>
        public Text AuthenticationTDup0Text
        {
            get
            {
                if (null == fAuthenticationTDup0Text)
                {
                    fAuthenticationTDup0Text = new Text("AuthenticationTDup0Text", AuthenticationTabItem);
                    fAuthenticationTDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                }

                return fAuthenticationTDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationTDup1Text
        /// </summary>
        public Text AuthenticationTDup1Text
        {
            get
            {
                if (null == fAuthenticationTDup1Text)
                {
                    fAuthenticationTDup1Text = new Text("AuthenticationTDup1Text", AuthenticationTDup0Text);
                    fAuthenticationTDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text31EC91730B9Text
        /// </summary>
        public Text Text31EC91730B9Text
        {
            get
            {
                if (null == fText31EC91730B9Text)
                {
                    fText31EC91730B9Text = new Text("Text31EC91730B9Text", AuthenticationTabItem);
                    fText31EC91730B9Text.UIMap.Scope = UIASeachScope.Children;
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"31EC9173-0B98-4d46-BC99-7DF8EA2BE02F");
                }

                return fText31EC91730B9Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockDup0Text
        /// </summary>
        public Text TextBlockDup0Text
        {
            get
            {
                if (null == fTextBlockDup0Text)
                {
                    fTextBlockDup0Text = new Text("TextBlockDup0Text", Text31EC91730B9Text);
                    fTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextA479C271445Text
        /// </summary>
        public Text TextA479C271445Text
        {
            get
            {
                if (null == fTextA479C271445Text)
                {
                    fTextA479C271445Text = new Text("TextA479C271445Text", AuthenticationTabItem);
                    fTextA479C271445Text.UIMap.Scope = UIASeachScope.Children;
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A479C271-445D-43f1-864D-7503428703E4");
                }

                return fTextA479C271445Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockDup1Text
        /// </summary>
        public Text TextBlockDup1Text
        {
            get
            {
                if (null == fTextBlockDup1Text)
                {
                    fTextBlockDup1Text = new Text("TextBlockDup1Text", TextA479C271445Text);
                    fTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ServiceConfigurCustom
        /// </summary>
        public Custom ServiceConfigurCustom
        {
            get
            {
                if (null == fServiceConfigurCustom)
                {
                    fServiceConfigurCustom = new Custom("ServiceConfigurCustom", AuthenticationTabItem);
                    fServiceConfigurCustom.UIMap.Scope = UIASeachScope.Children;
                    fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ServiceConfigurationAuthenticationTab");
                    fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mServiceConfigurationAuthenticationTab");
                }

                return fServiceConfigurCustom;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPane
        /// </summary>
        public Pane ScrollViewerPane
        {
            get
            {
                if (null == fScrollViewerPane)
                {
                    fScrollViewerPane = new Pane("ScrollViewerPane", ServiceConfigurCustom);
                    fScrollViewerPane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPane;
            }
        }

        /// <summary>
        /// Gets Reference to ErrorConflictUsCustom
        /// </summary>
        public Custom ErrorConflictUsCustom
        {
            get
            {
                if (null == fErrorConflictUsCustom)
                {
                    fErrorConflictUsCustom = new Custom("ErrorConflictUsCustom", ScrollViewerPane);
                    fErrorConflictUsCustom.UIMap.Scope = UIASeachScope.Children;
                    fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ErrorConflictUserControl");
                    fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mErrorConflictUserControl");
                }

                return fErrorConflictUsCustom;
            }
        }

        /// <summary>
        /// Gets Reference to ImageImage
        /// </summary>
        public Image ImageImage
        {
            get
            {
                if (null == fImageImage)
                {
                    fImageImage = new Image("ImageImage", ErrorConflictUsCustom);
                    fImageImage.UIMap.Scope = UIASeachScope.Children;
                    fImageImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageImage;
            }
        }

        /// <summary>
        /// Gets Reference to A1LDAPServerAddText
        /// </summary>
        public Text A1LDAPServerAddText
        {
            get
            {
                if (null == fA1LDAPServerAddText)
                {
                    fA1LDAPServerAddText = new Text("A1LDAPServerAddText", ErrorConflictUsCustom);
                    fA1LDAPServerAddText.UIMap.Scope = UIASeachScope.Children;
                    fA1LDAPServerAddText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fA1LDAPServerAddText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"1.  LDAP Server Address is required.");
                    fA1LDAPServerAddText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33CC58FF-B4EB-41e5-B4AC-3A926D5E70A7");
                }

                return fA1LDAPServerAddText;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationMDup0Text
        /// </summary>
        public Text AuthenticationMDup0Text
        {
            get
            {
                if (null == fAuthenticationMDup0Text)
                {
                    fAuthenticationMDup0Text = new Text("AuthenticationMDup0Text", ScrollViewerPane);
                    fAuthenticationMDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationMDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAuthenticationMDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication Method");
                    fAuthenticationMDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"bf64b058-ac84-4cda-8d7a-05b78e23cb89");
                }

                return fAuthenticationMDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationMDup1Text
        /// </summary>
        public Text AuthenticationMDup1Text
        {
            get
            {
                if (null == fAuthenticationMDup1Text)
                {
                    fAuthenticationMDup1Text = new Text("AuthenticationMDup1Text", AuthenticationMDup0Text);
                    fAuthenticationMDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationMDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAuthenticationMDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication Method");
                }

                return fAuthenticationMDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxd8aaf9dComboBox
        /// </summary>
        public ComboBox AuthenticationTypeComboBox
        {
            get
            {
                if (null == fComboBoxd8aaf9dComboBox)
                {
                    fComboBoxd8aaf9dComboBox = new ComboBox("ComboBoxd8aaf9dComboBox", ScrollViewerPane);
                    fComboBoxd8aaf9dComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxd8aaf9dComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxd8aaf9dComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"d8aaf9dd-dfc7-4bbd-a419-b3e23679ab7f");
                }

                return fComboBoxd8aaf9dComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to NoneListBoxItemListItem
        /// </summary>
        public ListItem NoneListBoxItemListItem
        {
            get
            {
                if (null == fNoneListBoxItemListItem)
                {
                    fNoneListBoxItemListItem = new ListItem("NoneListBoxItemListItem", AuthenticationTypeComboBox);
                    fNoneListBoxItemListItem.UIMap.Scope = UIASeachScope.Children;
                    fNoneListBoxItemListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fNoneListBoxItemListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"None");
                }

                return fNoneListBoxItemListItem;
            }
        }

        /// <summary>
        /// Gets Reference to NoneTextBlockText
        /// </summary>
        public Text NoneTextBlockText
        {
            get
            {
                if (null == fNoneTextBlockText)
                {
                    fNoneTextBlockText = new Text("NoneTextBlockText", NoneListBoxItemListItem);
                    fNoneTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fNoneTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNoneTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"None");
                }

                return fNoneTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPServerListBListItem
        /// </summary>
        public ListItem LDAPServerListBListItem
        {
            get
            {
                if (null == fLDAPServerListBListItem)
                {
                    fLDAPServerListBListItem = new ListItem("LDAPServerListBListItem", AuthenticationTypeComboBox);
                    fLDAPServerListBListItem.UIMap.Scope = UIASeachScope.Children;
                    fLDAPServerListBListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fLDAPServerListBListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Server");
                }

                return fLDAPServerListBListItem;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPServerTextBText
        /// </summary>
        public Text LDAPServerTextBText
        {
            get
            {
                if (null == fLDAPServerTextBText)
                {
                    fLDAPServerTextBText = new Text("LDAPServerTextBText", LDAPServerListBListItem);
                    fLDAPServerTextBText.UIMap.Scope = UIASeachScope.Children;
                    fLDAPServerTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLDAPServerTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Server");
                }

                return fLDAPServerTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to MicrosoftWindowListItem
        /// </summary>
        public ListItem MicrosoftWindowListItem
        {
            get
            {
                if (null == fMicrosoftWindowListItem)
                {
                    fMicrosoftWindowListItem = new ListItem("MicrosoftWindowListItem", AuthenticationTypeComboBox);
                    fMicrosoftWindowListItem.UIMap.Scope = UIASeachScope.Children;
                    fMicrosoftWindowListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fMicrosoftWindowListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Microsoft Windows");
                }

                return fMicrosoftWindowListItem;
            }
        }

        /// <summary>
        /// Gets Reference to MicrosoftWindowText
        /// </summary>
        public Text MicrosoftWindowText
        {
            get
            {
                if (null == fMicrosoftWindowText)
                {
                    fMicrosoftWindowText = new Text("MicrosoftWindowText", MicrosoftWindowListItem);
                    fMicrosoftWindowText.UIMap.Scope = UIASeachScope.Children;
                    fMicrosoftWindowText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fMicrosoftWindowText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Microsoft Windows");
                }

                return fMicrosoftWindowText;
            }
        }

        /// <summary>
        /// Gets Reference to WindowsSignInSeGroup
        /// </summary>
        public Group WindowsSignInSeGroup
        {
            get
            {
                if (null == fWindowsSignInSeGroup)
                {
                    fWindowsSignInSeGroup = new Group("WindowsSignInSeGroup", ScrollViewerPane);
                    fWindowsSignInSeGroup.UIMap.Scope = UIASeachScope.Children;
                    fWindowsSignInSeGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fWindowsSignInSeGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Sign In Setup (Kerberos and NTLM)");
                    fWindowsSignInSeGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b10f6434-7587-4a90-8c7a-1f12d3e4ef8c");
                }

                return fWindowsSignInSeGroup;
            }
        }

        /// <summary>
        /// Gets Reference to WindowsSignInSeText
        /// </summary>
        public Text WindowsSignInSeText
        {
            get
            {
                if (null == fWindowsSignInSeText)
                {
                    fWindowsSignInSeText = new Text("WindowsSignInSeText", WindowsSignInSeGroup);
                    fWindowsSignInSeText.UIMap.Scope = UIASeachScope.Children;
                    fWindowsSignInSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fWindowsSignInSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Windows Sign In Setup (Kerberos and NTLM)");
                }

                return fWindowsSignInSeText;
            }
        }

        /// <summary>
        /// Gets Reference to UseasecureconneDup0CheckBox
        /// </summary>
        public CheckBox UseasecureconneDup0CheckBox
        {
            get
            {
                if (null == fUseasecureconneDup0CheckBox)
                {
                    fUseasecureconneDup0CheckBox = new CheckBox("UseasecureconneDup0CheckBox", WindowsSignInSeGroup);
                    fUseasecureconneDup0CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUseasecureconneDup0CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fUseasecureconneDup0CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use a secure connection (SSL)");
                    fUseasecureconneDup0CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C38EE421-0A5E-44AF-98BC-ED9F49342F02");
                }

                return fUseasecureconneDup0CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to UseasecureconneDup0Text
        /// </summary>
        public Text UseasecureconneDup0Text
        {
            get
            {
                if (null == fUseasecureconneDup0Text)
                {
                    fUseasecureconneDup0Text = new Text("UseasecureconneDup0Text", UseasecureconneDup0CheckBox);
                    fUseasecureconneDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fUseasecureconneDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUseasecureconneDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use a secure connection (SSL)");
                }

                return fUseasecureconneDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to TrustedDomainsText
        /// </summary>
        public Text TrustedDomainsText
        {
            get
            {
                if (null == fTrustedDomainsText)
                {
                    fTrustedDomainsText = new Text("TrustedDomainsText", WindowsSignInSeGroup);
                    fTrustedDomainsText.UIMap.Scope = UIASeachScope.Children;
                    fTrustedDomainsText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTrustedDomainsText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Trusted Domains");
                }

                return fTrustedDomainsText;
            }
        }

        /// <summary>
        /// Gets Reference to TrustedDomainsTText
        /// </summary>
        public Text TrustedDomainsTText
        {
            get
            {
                if (null == fTrustedDomainsTText)
                {
                    fTrustedDomainsTText = new Text("TrustedDomainsTText", TrustedDomainsText);
                    fTrustedDomainsTText.UIMap.Scope = UIASeachScope.Children;
                    fTrustedDomainsTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTrustedDomainsTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Trusted Domains");
                }

                return fTrustedDomainsTText;
            }
        }

        /// <summary>
        /// Gets Reference to DefaultWindowsDDup0Text
        /// </summary>
        public Text DefaultWindowsDDup0Text
        {
            get
            {
                if (null == fDefaultWindowsDDup0Text)
                {
                    fDefaultWindowsDDup0Text = new Text("DefaultWindowsDDup0Text", WindowsSignInSeGroup);
                    fDefaultWindowsDDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultWindowsDDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDefaultWindowsDDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Windows Domain");
                }

                return fDefaultWindowsDDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to DefaultWindowsDDup1Text
        /// </summary>
        public Text DefaultWindowsDDup1Text
        {
            get
            {
                if (null == fDefaultWindowsDDup1Text)
                {
                    fDefaultWindowsDDup1Text = new Text("DefaultWindowsDDup1Text", DefaultWindowsDDup0Text);
                    fDefaultWindowsDDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultWindowsDDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDefaultWindowsDDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Windows Domain");
                }

                return fDefaultWindowsDDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxf5ff5c0bEdit
        /// </summary>
        public Edit DomainTextBox
        {
            get
            {
                if (null == fTextBoxf5ff5c0bEdit)
                {
                    fTextBoxf5ff5c0bEdit = new Edit("TextBoxf5ff5c0bEdit", WindowsSignInSeGroup);
                    fTextBoxf5ff5c0bEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxf5ff5c0bEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBoxf5ff5c0bEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f5ff5c0b-fc04-408e-a4a7-57bdedecc419");
                }

                return fTextBoxf5ff5c0bEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup0Pane
        /// </summary>
        public Pane ScrollViewerPARDup0Pane
        {
            get
            {
                if (null == fScrollViewerPARDup0Pane)
                {
                    fScrollViewerPARDup0Pane = new Pane("ScrollViewerPARDup0Pane", DomainTextBox);
                    fScrollViewerPARDup0Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup0Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup0ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup0ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup0ScrollBar)
                {
                    fScrollBarVerticDup0ScrollBar = new ScrollBar("ScrollBarVerticDup0ScrollBar", ScrollViewerPARDup0Pane);
                    fScrollBarVerticDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup0ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup0ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup0ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup0ScrollBar)
                {
                    fScrollBarHorizoDup0ScrollBar = new ScrollBar("ScrollBarHorizoDup0ScrollBar", ScrollViewerPARDup0Pane);
                    fScrollBarHorizoDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup0ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to AddButton499d7fButton
        /// </summary>
        public Button AddServerButton
        {
            get
            {
                if (null == fAddButton499d7fButton)
                {
                    fAddButton499d7fButton = new Button("AddButton499d7fButton", WindowsSignInSeGroup);
                    fAddButton499d7fButton.UIMap.Scope = UIASeachScope.Children;
                    fAddButton499d7fButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddButton499d7fButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add");
                    fAddButton499d7fButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"499d7f88-538f-497b-b8bb-8234d46590ee");
                }

                return fAddButton499d7fButton;
            }
        }

        /// <summary>
        /// Gets Reference to AddTextBlockText
        /// </summary>
        public Text AddTextBlockText
        {
            get
            {
                if (null == fAddTextBlockText)
                {
                    fAddTextBlockText = new Text("AddTextBlockText", AddServerButton);
                    fAddTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fAddTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add");
                }

                return fAddTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBox5f7d07bComboBox
        /// </summary>
        public ComboBox ComboBox5f7d07bComboBox
        {
            get
            {
                if (null == fComboBox5f7d07bComboBox)
                {
                    fComboBox5f7d07bComboBox = new ComboBox("ComboBox5f7d07bComboBox", WindowsSignInSeGroup);
                    fComboBox5f7d07bComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox5f7d07bComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox5f7d07bComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5f7d07b1-3c58-4380-8b8b-cdd8fc8883e9");
                }

                return fComboBox5f7d07bComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to ListBox5b32a000List
        /// </summary>
        public List ListBox5b32a000List
        {
            get
            {
                if (null == fListBox5b32a000List)
                {
                    fListBox5b32a000List = new List("ListBox5b32a000List", WindowsSignInSeGroup);
                    fListBox5b32a000List.UIMap.Scope = UIASeachScope.Children;
                    fListBox5b32a000List.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBox");
                    fListBox5b32a000List.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5b32a000-dcea-4fcf-aae6-31add5ecdb9a");
                }

                return fListBox5b32a000List;
            }
        }

        /// <summary>
        /// Gets Reference to A10111495ListBoListItem
        /// </summary>
        public ListItem A10111495ListBoListItem
        {
            get
            {
                if (null == fA10111495ListBoListItem)
                {
                    fA10111495ListBoListItem = new ListItem("A10111495ListBoListItem", ListBox5b32a000List);
                    fA10111495ListBoListItem.UIMap.Scope = UIASeachScope.Children;
                    fA10111495ListBoListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fA10111495ListBoListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"10.11.14.95");
                }

                return fA10111495ListBoListItem;
            }
        }

        /// <summary>
        /// Gets Reference to A10111495TextBlText
        /// </summary>
        public Text A10111495TextBlText
        {
            get
            {
                if (null == fA10111495TextBlText)
                {
                    fA10111495TextBlText = new Text("A10111495TextBlText", A10111495ListBoListItem);
                    fA10111495TextBlText.UIMap.Scope = UIASeachScope.Children;
                    fA10111495TextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fA10111495TextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"10.11.14.95");
                }

                return fA10111495TextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveButton46fButton
        /// </summary>
        public Button RemoveButton46fButton
        {
            get
            {
                if (null == fRemoveButton46fButton)
                {
                    fRemoveButton46fButton = new Button("RemoveButton46fButton", WindowsSignInSeGroup);
                    fRemoveButton46fButton.UIMap.Scope = UIASeachScope.Children;
                    fRemoveButton46fButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRemoveButton46fButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                    fRemoveButton46fButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"46f59477-3c74-48e8-9c64-83931ac6cc38");
                }

                return fRemoveButton46fButton;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveTextBlockText
        /// </summary>
        public Text RemoveTextBlockText
        {
            get
            {
                if (null == fRemoveTextBlockText)
                {
                    fRemoveTextBlockText = new Text("RemoveTextBlockText", RemoveButton46fButton);
                    fRemoveTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fRemoveTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRemoveTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                }

                return fRemoveTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to MatchthenameentDup0Text
        /// </summary>
        public Text MatchthenameentDup0Text
        {
            get
            {
                if (null == fMatchthenameentDup0Text)
                {
                    fMatchthenameentDup0Text = new Text("MatchthenameentDup0Text", WindowsSignInSeGroup);
                    fMatchthenameentDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fMatchthenameentDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fMatchthenameentDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Match the name entered with this attribute");
                }

                return fMatchthenameentDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to MatchthenameentDup1Text
        /// </summary>
        public Text MatchthenameentDup1Text
        {
            get
            {
                if (null == fMatchthenameentDup1Text)
                {
                    fMatchthenameentDup1Text = new Text("MatchthenameentDup1Text", MatchthenameentDup0Text);
                    fMatchthenameentDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fMatchthenameentDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fMatchthenameentDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Match the name entered with this attribute");
                }

                return fMatchthenameentDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxfe1b97b3Edit
        /// </summary>
        public Edit TextBoxfe1b97b3Edit
        {
            get
            {
                if (null == fTextBoxfe1b97b3Edit)
                {
                    fTextBoxfe1b97b3Edit = new Edit("TextBoxfe1b97b3Edit", WindowsSignInSeGroup);
                    fTextBoxfe1b97b3Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxfe1b97b3Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBoxfe1b97b3Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"fe1b97b3-774f-4bed-8d86-96228cb2319a");
                }

                return fTextBoxfe1b97b3Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup1Pane
        /// </summary>
        public Pane ScrollViewerPARDup1Pane
        {
            get
            {
                if (null == fScrollViewerPARDup1Pane)
                {
                    fScrollViewerPARDup1Pane = new Pane("ScrollViewerPARDup1Pane", TextBoxfe1b97b3Edit);
                    fScrollViewerPARDup1Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup1Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup1ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup1ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup1ScrollBar)
                {
                    fScrollBarVerticDup1ScrollBar = new ScrollBar("ScrollBarVerticDup1ScrollBar", ScrollViewerPARDup1Pane);
                    fScrollBarVerticDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup1ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup1ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup1ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup1ScrollBar)
                {
                    fScrollBarHorizoDup1ScrollBar = new ScrollBar("ScrollBarHorizoDup1ScrollBar", ScrollViewerPARDup1Pane);
                    fScrollBarHorizoDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup1ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievetheuserDup0Text
        /// </summary>
        public Text RetrievetheuserDup0Text
        {
            get
            {
                if (null == fRetrievetheuserDup0Text)
                {
                    fRetrievetheuserDup0Text = new Text("RetrievetheuserDup0Text", WindowsSignInSeGroup);
                    fRetrievetheuserDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fRetrievetheuserDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fRetrievetheuserDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the user's e-mail address using this attribute.");
                }

                return fRetrievetheuserDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievetheuserDup1Text
        /// </summary>
        public Text RetrievetheuserDup1Text
        {
            get
            {
                if (null == fRetrievetheuserDup1Text)
                {
                    fRetrievetheuserDup1Text = new Text("RetrievetheuserDup1Text", RetrievetheuserDup0Text);
                    fRetrievetheuserDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fRetrievetheuserDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRetrievetheuserDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the user's e-mail address using this attribute.");
                }

                return fRetrievetheuserDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox6db21b21Edit
        /// </summary>
        public Edit TextBox6db21b21Edit
        {
            get
            {
                if (null == fTextBox6db21b21Edit)
                {
                    fTextBox6db21b21Edit = new Edit("TextBox6db21b21Edit", WindowsSignInSeGroup);
                    fTextBox6db21b21Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox6db21b21Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox6db21b21Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6db21b21-c82e-4bd9-a4ee-7a08377db597");
                }

                return fTextBox6db21b21Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup2Pane
        /// </summary>
        public Pane ScrollViewerPARDup2Pane
        {
            get
            {
                if (null == fScrollViewerPARDup2Pane)
                {
                    fScrollViewerPARDup2Pane = new Pane("ScrollViewerPARDup2Pane", TextBox6db21b21Edit);
                    fScrollViewerPARDup2Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup2Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup2ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup2ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup2ScrollBar)
                {
                    fScrollBarVerticDup2ScrollBar = new ScrollBar("ScrollBarVerticDup2ScrollBar", ScrollViewerPARDup2Pane);
                    fScrollBarVerticDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup2ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup2ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup2ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup2ScrollBar)
                {
                    fScrollBarHorizoDup2ScrollBar = new ScrollBar("ScrollBarHorizoDup2ScrollBar", ScrollViewerPARDup2Pane);
                    fScrollBarHorizoDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup2ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievetheuserDup2Text
        /// </summary>
        public Text RetrievetheuserDup2Text
        {
            get
            {
                if (null == fRetrievetheuserDup2Text)
                {
                    fRetrievetheuserDup2Text = new Text("RetrievetheuserDup2Text", WindowsSignInSeGroup);
                    fRetrievetheuserDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fRetrievetheuserDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRetrievetheuserDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the user's home folder using this attribute.
[This attribute will override the attribute defined in personal shared folders if the folder's configured attribute is 'HomeFolder']");
                }

                return fRetrievetheuserDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox1B3427A6Edit
        /// </summary>
        public Edit TextBox1B3427A6Edit
        {
            get
            {
                if (null == fTextBox1B3427A6Edit)
                {
                    fTextBox1B3427A6Edit = new Edit("TextBox1B3427A6Edit", WindowsSignInSeGroup);
                    fTextBox1B3427A6Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox1B3427A6Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox1B3427A6Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1B3427A6-09D9-40DA-8180-35449967E1FC");
                }

                return fTextBox1B3427A6Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup3Pane
        /// </summary>
        public Pane ScrollViewerPARDup3Pane
        {
            get
            {
                if (null == fScrollViewerPARDup3Pane)
                {
                    fScrollViewerPARDup3Pane = new Pane("ScrollViewerPARDup3Pane", TextBox1B3427A6Edit);
                    fScrollViewerPARDup3Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup3Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup3ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup3ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup3ScrollBar)
                {
                    fScrollBarVerticDup3ScrollBar = new ScrollBar("ScrollBarVerticDup3ScrollBar", ScrollViewerPARDup3Pane);
                    fScrollBarVerticDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup3ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup3ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup3ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup3ScrollBar)
                {
                    fScrollBarHorizoDup3ScrollBar = new ScrollBar("ScrollBarHorizoDup3ScrollBar", ScrollViewerPARDup3Pane);
                    fScrollBarHorizoDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup3ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to TestWindowsSignGroup
        /// </summary>
        public Group TestWindowsSignGroup
        {
            get
            {
                if (null == fTestWindowsSignGroup)
                {
                    fTestWindowsSignGroup = new Group("TestWindowsSignGroup", WindowsSignInSeGroup);
                    fTestWindowsSignGroup.UIMap.Scope = UIASeachScope.Children;
                    fTestWindowsSignGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fTestWindowsSignGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test Windows Sign In");
                    fTestWindowsSignGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"26de5eda-6c9f-467b-9ff5-04f13de76260");
                }

                return fTestWindowsSignGroup;
            }
        }

        /// <summary>
        /// Gets Reference to TestWindowsSignText
        /// </summary>
        public Text TestWindowsSignText
        {
            get
            {
                if (null == fTestWindowsSignText)
                {
                    fTestWindowsSignText = new Text("TestWindowsSignText", TestWindowsSignGroup);
                    fTestWindowsSignText.UIMap.Scope = UIASeachScope.Children;
                    fTestWindowsSignText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTestWindowsSignText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test Windows Sign In");
                }

                return fTestWindowsSignText;
            }
        }

        /// <summary>
        /// Gets Reference to DomainText
        /// </summary>
        public Text DomainText
        {
            get
            {
                if (null == fDomainText)
                {
                    fDomainText = new Text("DomainText", TestWindowsSignGroup);
                    fDomainText.UIMap.Scope = UIASeachScope.Children;
                    fDomainText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDomainText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Domain");
                }

                return fDomainText;
            }
        }

        /// <summary>
        /// Gets Reference to DomainTextBlockText
        /// </summary>
        public Text DomainTextBlockText
        {
            get
            {
                if (null == fDomainTextBlockText)
                {
                    fDomainTextBlockText = new Text("DomainTextBlockText", DomainText);
                    fDomainTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fDomainTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDomainTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Domain");
                }

                return fDomainTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ComboBoxbd29c3eComboBox
        /// </summary>
        public ComboBox ComboBoxbd29c3eComboBox
        {
            get
            {
                if (null == fComboBoxbd29c3eComboBox)
                {
                    fComboBoxbd29c3eComboBox = new ComboBox("ComboBoxbd29c3eComboBox", TestWindowsSignGroup);
                    fComboBoxbd29c3eComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxbd29c3eComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxbd29c3eComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"bd29c3ee-046f-4473-b9ba-962c44b0d9e8");
                }

                return fComboBoxbd29c3eComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameDup0Text
        /// </summary>
        public Text UsernameDup0Text
        {
            get
            {
                if (null == fUsernameDup0Text)
                {
                    fUsernameDup0Text = new Text("UsernameDup0Text", TestWindowsSignGroup);
                    fUsernameDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fUsernameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fUsernameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                }

                return fUsernameDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameTextBloDup0Text
        /// </summary>
        public Text UsernameTextBloDup0Text
        {
            get
            {
                if (null == fUsernameTextBloDup0Text)
                {
                    fUsernameTextBloDup0Text = new Text("UsernameTextBloDup0Text", UsernameDup0Text);
                    fUsernameTextBloDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fUsernameTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUsernameTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                }

                return fUsernameTextBloDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox15b33377Edit
        /// </summary>
        public Edit WindowsUserNameTextBox
        {
            get
            {
                if (null == fTextBox15b33377Edit)
                {
                    fTextBox15b33377Edit = new Edit("TextBox15b33377Edit", TestWindowsSignGroup);
                    fTextBox15b33377Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox15b33377Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox15b33377Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"15b33377-436d-4134-b6c6-36d9293f9022");
                }

                return fTextBox15b33377Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup4Pane
        /// </summary>
        public Pane ScrollViewerPARDup4Pane
        {
            get
            {
                if (null == fScrollViewerPARDup4Pane)
                {
                    fScrollViewerPARDup4Pane = new Pane("ScrollViewerPARDup4Pane", WindowsUserNameTextBox);
                    fScrollViewerPARDup4Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup4Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup4ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup4ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup4ScrollBar)
                {
                    fScrollBarVerticDup4ScrollBar = new ScrollBar("ScrollBarVerticDup4ScrollBar", ScrollViewerPARDup4Pane);
                    fScrollBarVerticDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup4ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup4ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup4ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup4ScrollBar)
                {
                    fScrollBarHorizoDup4ScrollBar = new ScrollBar("ScrollBarHorizoDup4ScrollBar", ScrollViewerPARDup4Pane);
                    fScrollBarHorizoDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup4ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordDup0Text
        /// </summary>
        public Text PasswordDup0Text
        {
            get
            {
                if (null == fPasswordDup0Text)
                {
                    fPasswordDup0Text = new Text("PasswordDup0Text", TestWindowsSignGroup);
                    fPasswordDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fPasswordDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fPasswordDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                }

                return fPasswordDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordTextBloDup0Text
        /// </summary>
        public Text PasswordTextBloDup0Text
        {
            get
            {
                if (null == fPasswordTextBloDup0Text)
                {
                    fPasswordTextBloDup0Text = new Text("PasswordTextBloDup0Text", PasswordDup0Text);
                    fPasswordTextBloDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fPasswordTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPasswordTextBloDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                }

                return fPasswordTextBloDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordBox475aEdit
        /// </summary>
        public Edit WindowsPasswordBox
        {
            get
            {
                if (null == fPasswordBox475aEdit)
                {
                    fPasswordBox475aEdit = new Edit("PasswordBox475aEdit", TestWindowsSignGroup);
                    fPasswordBox475aEdit.UIMap.Scope = UIASeachScope.Children;
                    fPasswordBox475aEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"PasswordBox");
                    fPasswordBox475aEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"475a24f1-283f-4940-be87-7d160fc99a22");
                }

                return fPasswordBox475aEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup5Pane
        /// </summary>
        public Pane ScrollViewerPARDup5Pane
        {
            get
            {
                if (null == fScrollViewerPARDup5Pane)
                {
                    fScrollViewerPARDup5Pane = new Pane("ScrollViewerPARDup5Pane", WindowsPasswordBox);
                    fScrollViewerPARDup5Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup5Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup5ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup5ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup5ScrollBar)
                {
                    fScrollBarVerticDup5ScrollBar = new ScrollBar("ScrollBarVerticDup5ScrollBar", ScrollViewerPARDup5Pane);
                    fScrollBarVerticDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup5ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup5ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup5ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup5ScrollBar)
                {
                    fScrollBarHorizoDup5ScrollBar = new ScrollBar("ScrollBarHorizoDup5ScrollBar", ScrollViewerPARDup5Pane);
                    fScrollBarHorizoDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup5ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to TestButtonc5487Button
        /// </summary>
        public Button WindowsTestButton
        {
            get
            {
                if (null == fTestButtonc5487Button)
                {
                    fTestButtonc5487Button = new Button("TestButtonc5487Button", TestWindowsSignGroup);
                    fTestButtonc5487Button.UIMap.Scope = UIASeachScope.Children;
                    fTestButtonc5487Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fTestButtonc5487Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    fTestButtonc5487Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c548706e-f19b-446e-b0fe-9a8ef95961fe");
                }

                return fTestButtonc5487Button;
            }
        }

        /// <summary>
        /// Gets Reference to TestTextBlockDup0Text
        /// </summary>
        public Text TestTextBlockDup0Text
        {
            get
            {
                if (null == fTestTextBlockDup0Text)
                {
                    fTestTextBlockDup0Text = new Text("TestTextBlockDup0Text", WindowsTestButton);
                    fTestTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fTestTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTestTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                }

                return fTestTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPSignInSetupGroup
        /// </summary>
        public Group LDAPSignInSetupGroup
        {
            get
            {
                if (null == fLDAPSignInSetupGroup)
                {
                    fLDAPSignInSetupGroup = new Group("LDAPSignInSetupGroup", ScrollViewerPane);
                    fLDAPSignInSetupGroup.UIMap.Scope = UIASeachScope.Children;
                    fLDAPSignInSetupGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fLDAPSignInSetupGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Sign In Setup");
                    fLDAPSignInSetupGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C2FED337-3446-4345-9ABF-FCFE2B8BC6A3");
                }

                return fLDAPSignInSetupGroup;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPSignInSetupText
        /// </summary>
        public Text LDAPSignInSetupText
        {
            get
            {
                if (null == fLDAPSignInSetupText)
                {
                    fLDAPSignInSetupText = new Text("LDAPSignInSetupText", LDAPSignInSetupGroup);
                    fLDAPSignInSetupText.UIMap.Scope = UIASeachScope.Children;
                    fLDAPSignInSetupText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLDAPSignInSetupText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Sign In Setup");
                }

                return fLDAPSignInSetupText;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPServerAddreDup0Text
        /// </summary>
        public Text LDAPServerAddreDup0Text
        {
            get
            {
                if (null == fLDAPServerAddreDup0Text)
                {
                    fLDAPServerAddreDup0Text = new Text("LDAPServerAddreDup0Text", LDAPSignInSetupGroup);
                    fLDAPServerAddreDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fLDAPServerAddreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fLDAPServerAddreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Server Address");
                }

                return fLDAPServerAddreDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to LDAPServerAddreDup1Text
        /// </summary>
        public Text LDAPServerAddreDup1Text
        {
            get
            {
                if (null == fLDAPServerAddreDup1Text)
                {
                    fLDAPServerAddreDup1Text = new Text("LDAPServerAddreDup1Text", LDAPServerAddreDup0Text);
                    fLDAPServerAddreDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fLDAPServerAddreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLDAPServerAddreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"LDAP Server Address");
                }

                return fLDAPServerAddreDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox5161EC14Edit
        /// </summary>
        public Edit DomainServerTextBox
        {
            get
            {
                if (null == fTextBox5161EC14Edit)
                {
                    fTextBox5161EC14Edit = new Edit("TextBox5161EC14Edit", LDAPSignInSetupGroup);
                    fTextBox5161EC14Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox5161EC14Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox5161EC14Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5161EC14-12A0-48cd-AF5A-D3F7C19BAA56");
                }

                return fTextBox5161EC14Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup6Pane
        /// </summary>
        public Pane ScrollViewerPARDup6Pane
        {
            get
            {
                if (null == fScrollViewerPARDup6Pane)
                {
                    fScrollViewerPARDup6Pane = new Pane("ScrollViewerPARDup6Pane", DomainServerTextBox);
                    fScrollViewerPARDup6Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup6Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup6ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup6ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup6ScrollBar)
                {
                    fScrollBarVerticDup6ScrollBar = new ScrollBar("ScrollBarVerticDup6ScrollBar", ScrollViewerPARDup6Pane);
                    fScrollBarVerticDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup6ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup6ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup6ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup6ScrollBar)
                {
                    fScrollBarHorizoDup6ScrollBar = new ScrollBar("ScrollBarHorizoDup6ScrollBar", ScrollViewerPARDup6Pane);
                    fScrollBarHorizoDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup6ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to PortNumberText
        /// </summary>
        public Text PortNumberText
        {
            get
            {
                if (null == fPortNumberText)
                {
                    fPortNumberText = new Text("PortNumberText", LDAPSignInSetupGroup);
                    fPortNumberText.UIMap.Scope = UIASeachScope.Children;
                    fPortNumberText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fPortNumberText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port Number");
                }

                return fPortNumberText;
            }
        }

        /// <summary>
        /// Gets Reference to PortNumberTextBText
        /// </summary>
        public Text PortNumberTextBText
        {
            get
            {
                if (null == fPortNumberTextBText)
                {
                    fPortNumberTextBText = new Text("PortNumberTextBText", PortNumberText);
                    fPortNumberTextBText.UIMap.Scope = UIASeachScope.Children;
                    fPortNumberTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPortNumberTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port Number");
                }

                return fPortNumberTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox0F193739Edit
        /// </summary>
        public Edit PortNumberTextBox
        {
            get
            {
                if (null == fTextBox0F193739Edit)
                {
                    fTextBox0F193739Edit = new Edit("TextBox0F193739Edit", LDAPSignInSetupGroup);
                    fTextBox0F193739Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox0F193739Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox0F193739Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0F193739-7FDA-4f61-BE12-06CB9EFB798A");
                }

                return fTextBox0F193739Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup7Pane
        /// </summary>
        public Pane ScrollViewerPARDup7Pane
        {
            get
            {
                if (null == fScrollViewerPARDup7Pane)
                {
                    fScrollViewerPARDup7Pane = new Pane("ScrollViewerPARDup7Pane", PortNumberTextBox);
                    fScrollViewerPARDup7Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup7Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup7Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup7Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup7ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup7ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup7ScrollBar)
                {
                    fScrollBarVerticDup7ScrollBar = new ScrollBar("ScrollBarVerticDup7ScrollBar", ScrollViewerPARDup7Pane);
                    fScrollBarVerticDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup7ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup7ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup7ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup7ScrollBar)
                {
                    fScrollBarHorizoDup7ScrollBar = new ScrollBar("ScrollBarHorizoDup7ScrollBar", ScrollViewerPARDup7Pane);
                    fScrollBarHorizoDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup7ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to UseasecureconneDup1CheckBox
        /// </summary>
        public CheckBox UseasecureconneDup1CheckBox
        {
            get
            {
                if (null == fUseasecureconneDup1CheckBox)
                {
                    fUseasecureconneDup1CheckBox = new CheckBox("UseasecureconneDup1CheckBox", LDAPSignInSetupGroup);
                    fUseasecureconneDup1CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUseasecureconneDup1CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fUseasecureconneDup1CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use a secure connection (SSL)");
                    fUseasecureconneDup1CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0CB33A64-9AF5-4e5f-9CA9-B0C939DFEABC");
                }

                return fUseasecureconneDup1CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to UseasecureconneDup1Text
        /// </summary>
        public Text UseasecureconneDup1Text
        {
            get
            {
                if (null == fUseasecureconneDup1Text)
                {
                    fUseasecureconneDup1Text = new Text("UseasecureconneDup1Text", UseasecureconneDup1CheckBox);
                    fUseasecureconneDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fUseasecureconneDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUseasecureconneDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use a secure connection (SSL)");
                }

                return fUseasecureconneDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to BindPrefixText
        /// </summary>
        public Text BindPrefixText
        {
            get
            {
                if (null == fBindPrefixText)
                {
                    fBindPrefixText = new Text("BindPrefixText", LDAPSignInSetupGroup);
                    fBindPrefixText.UIMap.Scope = UIASeachScope.Children;
                    fBindPrefixText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fBindPrefixText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Bind Prefix");
                }

                return fBindPrefixText;
            }
        }

        /// <summary>
        /// Gets Reference to BindPrefixTextBText
        /// </summary>
        public Text BindPrefixTextBText
        {
            get
            {
                if (null == fBindPrefixTextBText)
                {
                    fBindPrefixTextBText = new Text("BindPrefixTextBText", BindPrefixText);
                    fBindPrefixTextBText.UIMap.Scope = UIASeachScope.Children;
                    fBindPrefixTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fBindPrefixTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Bind Prefix");
                }

                return fBindPrefixTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxE997ACA4Edit
        /// </summary>
        public Edit BindPrefixTextBox
        {
            get
            {
                if (null == fTextBoxE997ACA4Edit)
                {
                    fTextBoxE997ACA4Edit = new Edit("TextBoxE997ACA4Edit", LDAPSignInSetupGroup);
                    fTextBoxE997ACA4Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxE997ACA4Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBoxE997ACA4Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"E997ACA4-B843-4c7f-BDD9-C0CFD06B398C");
                }

                return fTextBoxE997ACA4Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup8Pane
        /// </summary>
        public Pane ScrollViewerPARDup8Pane
        {
            get
            {
                if (null == fScrollViewerPARDup8Pane)
                {
                    fScrollViewerPARDup8Pane = new Pane("ScrollViewerPARDup8Pane", BindPrefixTextBox);
                    fScrollViewerPARDup8Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup8Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup8Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup8Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup8ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup8ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup8ScrollBar)
                {
                    fScrollBarVerticDup8ScrollBar = new ScrollBar("ScrollBarVerticDup8ScrollBar", ScrollViewerPARDup8Pane);
                    fScrollBarVerticDup8ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup8ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup8ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup8ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup8ScrollBar)
                {
                    fScrollBarHorizoDup8ScrollBar = new ScrollBar("ScrollBarHorizoDup8ScrollBar", ScrollViewerPARDup8Pane);
                    fScrollBarHorizoDup8ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup8ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to BindandSearchRoDup0Text
        /// </summary>
        public Text BindandSearchRoDup0Text
        {
            get
            {
                if (null == fBindandSearchRoDup0Text)
                {
                    fBindandSearchRoDup0Text = new Text("BindandSearchRoDup0Text", LDAPSignInSetupGroup);
                    fBindandSearchRoDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fBindandSearchRoDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fBindandSearchRoDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Bind and Search Root");
                }

                return fBindandSearchRoDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to BindandSearchRoDup1Text
        /// </summary>
        public Text BindandSearchRoDup1Text
        {
            get
            {
                if (null == fBindandSearchRoDup1Text)
                {
                    fBindandSearchRoDup1Text = new Text("BindandSearchRoDup1Text", BindandSearchRoDup0Text);
                    fBindandSearchRoDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fBindandSearchRoDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fBindandSearchRoDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Bind and Search Root");
                }

                return fBindandSearchRoDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxC51EE9FBEdit
        /// </summary>
        public Edit BindandSearchTextBox
        {
            get
            {
                if (null == fTextBoxC51EE9FBEdit)
                {
                    fTextBoxC51EE9FBEdit = new Edit("TextBoxC51EE9FBEdit", LDAPSignInSetupGroup);
                    fTextBoxC51EE9FBEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxC51EE9FBEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBoxC51EE9FBEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C51EE9FB-DDAF-4403-BC2F-16AD7343AEEA");
                }

                return fTextBoxC51EE9FBEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup9Pane
        /// </summary>
        public Pane ScrollViewerPARDup9Pane
        {
            get
            {
                if (null == fScrollViewerPARDup9Pane)
                {
                    fScrollViewerPARDup9Pane = new Pane("ScrollViewerPARDup9Pane", BindandSearchTextBox);
                    fScrollViewerPARDup9Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup9Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup9Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup9Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup9ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup9ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup9ScrollBar)
                {
                    fScrollBarVerticDup9ScrollBar = new ScrollBar("ScrollBarVerticDup9ScrollBar", ScrollViewerPARDup9Pane);
                    fScrollBarVerticDup9ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup9ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup9ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup9ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup9ScrollBar)
                {
                    fScrollBarHorizoDup9ScrollBar = new ScrollBar("ScrollBarHorizoDup9ScrollBar", ScrollViewerPARDup9Pane);
                    fScrollBarHorizoDup9ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup9ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to MatchthenameentDup2Text
        /// </summary>
        public Text MatchthenameentDup2Text
        {
            get
            {
                if (null == fMatchthenameentDup2Text)
                {
                    fMatchthenameentDup2Text = new Text("MatchthenameentDup2Text", LDAPSignInSetupGroup);
                    fMatchthenameentDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fMatchthenameentDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fMatchthenameentDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Match the name entered with this attribute");
                }

                return fMatchthenameentDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to MatchthenameentDup3Text
        /// </summary>
        public Text MatchthenameentDup3Text
        {
            get
            {
                if (null == fMatchthenameentDup3Text)
                {
                    fMatchthenameentDup3Text = new Text("MatchthenameentDup3Text", MatchthenameentDup2Text);
                    fMatchthenameentDup3Text.UIMap.Scope = UIASeachScope.Children;
                    fMatchthenameentDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fMatchthenameentDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Match the name entered with this attribute");
                }

                return fMatchthenameentDup3Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox53E6E4C0Edit
        /// </summary>
        public Edit MatchAttributeTextBox
        {
            get
            {
                if (null == fTextBox53E6E4C0Edit)
                {
                    fTextBox53E6E4C0Edit = new Edit("TextBox53E6E4C0Edit", LDAPSignInSetupGroup);
                    fTextBox53E6E4C0Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox53E6E4C0Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox53E6E4C0Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"53E6E4C0-6288-4dab-85E8-3B4746C63D8D");
                }

                return fTextBox53E6E4C0Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup10Pane
        /// </summary>
        public Pane ScrollViewerPARDup10Pane
        {
            get
            {
                if (null == fScrollViewerPARDup10Pane)
                {
                    fScrollViewerPARDup10Pane = new Pane("ScrollViewerPARDup10Pane", MatchAttributeTextBox);
                    fScrollViewerPARDup10Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup10Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup10Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup10Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup10ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup10ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup10ScrollBar)
                {
                    fScrollBarVerticDup10ScrollBar = new ScrollBar("ScrollBarVerticDup10ScrollBar", ScrollViewerPARDup10Pane);
                    fScrollBarVerticDup10ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup10ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup10ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup10ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup10ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup10ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup10ScrollBar)
                {
                    fScrollBarHorizoDup10ScrollBar = new ScrollBar("ScrollBarHorizoDup10ScrollBar", ScrollViewerPARDup10Pane);
                    fScrollBarHorizoDup10ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup10ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup10ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup10ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievetheuserDup3Text
        /// </summary>
        public Text RetrievetheuserDup3Text
        {
            get
            {
                if (null == fRetrievetheuserDup3Text)
                {
                    fRetrievetheuserDup3Text = new Text("RetrievetheuserDup3Text", LDAPSignInSetupGroup);
                    fRetrievetheuserDup3Text.UIMap.Scope = UIASeachScope.Children;
                    fRetrievetheuserDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fRetrievetheuserDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the user's e-mail address using this attribute");
                }

                return fRetrievetheuserDup3Text;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievetheuserDup4Text
        /// </summary>
        public Text RetrievetheuserDup4Text
        {
            get
            {
                if (null == fRetrievetheuserDup4Text)
                {
                    fRetrievetheuserDup4Text = new Text("RetrievetheuserDup4Text", RetrievetheuserDup3Text);
                    fRetrievetheuserDup4Text.UIMap.Scope = UIASeachScope.Children;
                    fRetrievetheuserDup4Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRetrievetheuserDup4Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the user's e-mail address using this attribute");
                }

                return fRetrievetheuserDup4Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox9EA6BFB3Edit
        /// </summary>
        public Edit EmailAttributeTextBox
        {
            get
            {
                if (null == fTextBox9EA6BFB3Edit)
                {
                    fTextBox9EA6BFB3Edit = new Edit("TextBox9EA6BFB3Edit", LDAPSignInSetupGroup);
                    fTextBox9EA6BFB3Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox9EA6BFB3Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox9EA6BFB3Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9EA6BFB3-24A5-49f8-BE9C-DB57DD608B66");
                }

                return fTextBox9EA6BFB3Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup11Pane
        /// </summary>
        public Pane ScrollViewerPARDup11Pane
        {
            get
            {
                if (null == fScrollViewerPARDup11Pane)
                {
                    fScrollViewerPARDup11Pane = new Pane("ScrollViewerPARDup11Pane", EmailAttributeTextBox);
                    fScrollViewerPARDup11Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup11Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup11Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup11Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup11ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup11ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup11ScrollBar)
                {
                    fScrollBarVerticDup11ScrollBar = new ScrollBar("ScrollBarVerticDup11ScrollBar", ScrollViewerPARDup11Pane);
                    fScrollBarVerticDup11ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup11ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup11ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup11ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup11ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup11ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup11ScrollBar)
                {
                    fScrollBarHorizoDup11ScrollBar = new ScrollBar("ScrollBarHorizoDup11ScrollBar", ScrollViewerPARDup11Pane);
                    fScrollBarHorizoDup11ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup11ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup11ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup11ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievethedeviDup0Text
        /// </summary>
        public Text RetrievethedeviDup0Text
        {
            get
            {
                if (null == fRetrievethedeviDup0Text)
                {
                    fRetrievethedeviDup0Text = new Text("RetrievethedeviDup0Text", LDAPSignInSetupGroup);
                    fRetrievethedeviDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fRetrievethedeviDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fRetrievethedeviDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the device user's name using this attribute");
                }

                return fRetrievethedeviDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievethedeviDup1Text
        /// </summary>
        public Text RetrievethedeviDup1Text
        {
            get
            {
                if (null == fRetrievethedeviDup1Text)
                {
                    fRetrievethedeviDup1Text = new Text("RetrievethedeviDup1Text", RetrievethedeviDup0Text);
                    fRetrievethedeviDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fRetrievethedeviDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRetrievethedeviDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the device user's name using this attribute");
                }

                return fRetrievethedeviDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox38D37C24Edit
        /// </summary>
        public Edit UserNameAttributeTextBox
        {
            get
            {
                if (null == fTextBox38D37C24Edit)
                {
                    fTextBox38D37C24Edit = new Edit("TextBox38D37C24Edit", LDAPSignInSetupGroup);
                    fTextBox38D37C24Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox38D37C24Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox38D37C24Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"38D37C24-6163-47eb-81E5-374585047E64");
                }

                return fTextBox38D37C24Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup12Pane
        /// </summary>
        public Pane ScrollViewerPARDup12Pane
        {
            get
            {
                if (null == fScrollViewerPARDup12Pane)
                {
                    fScrollViewerPARDup12Pane = new Pane("ScrollViewerPARDup12Pane", UserNameAttributeTextBox);
                    fScrollViewerPARDup12Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup12Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup12Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup12Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup12ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup12ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup12ScrollBar)
                {
                    fScrollBarVerticDup12ScrollBar = new ScrollBar("ScrollBarVerticDup12ScrollBar", ScrollViewerPARDup12Pane);
                    fScrollBarVerticDup12ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup12ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup12ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup12ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup12ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup12ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup12ScrollBar)
                {
                    fScrollBarHorizoDup12ScrollBar = new ScrollBar("ScrollBarHorizoDup12ScrollBar", ScrollViewerPARDup12Pane);
                    fScrollBarHorizoDup12ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup12ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup12ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup12ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievethedeviDup2Text
        /// </summary>
        public Text RetrievethedeviDup2Text
        {
            get
            {
                if (null == fRetrievethedeviDup2Text)
                {
                    fRetrievethedeviDup2Text = new Text("RetrievethedeviDup2Text", LDAPSignInSetupGroup);
                    fRetrievethedeviDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fRetrievethedeviDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fRetrievethedeviDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the device user's group using this attribute");
                }

                return fRetrievethedeviDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievethedeviDup3Text
        /// </summary>
        public Text RetrievethedeviDup3Text
        {
            get
            {
                if (null == fRetrievethedeviDup3Text)
                {
                    fRetrievethedeviDup3Text = new Text("RetrievethedeviDup3Text", RetrievethedeviDup2Text);
                    fRetrievethedeviDup3Text.UIMap.Scope = UIASeachScope.Children;
                    fRetrievethedeviDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRetrievethedeviDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the device user's group using this attribute");
                }

                return fRetrievethedeviDup3Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox0BB02D5EEdit
        /// </summary>
        public Edit UserGroupAttributeTextBox
        {
            get
            {
                if (null == fTextBox0BB02D5EEdit)
                {
                    fTextBox0BB02D5EEdit = new Edit("TextBox0BB02D5EEdit", LDAPSignInSetupGroup);
                    fTextBox0BB02D5EEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox0BB02D5EEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox0BB02D5EEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0BB02D5E-B956-48a9-9CBA-A1F8FD3164EF");
                }

                return fTextBox0BB02D5EEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup13Pane
        /// </summary>
        public Pane ScrollViewerPARDup13Pane
        {
            get
            {
                if (null == fScrollViewerPARDup13Pane)
                {
                    fScrollViewerPARDup13Pane = new Pane("ScrollViewerPARDup13Pane", UserGroupAttributeTextBox);
                    fScrollViewerPARDup13Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup13Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup13Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup13Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup13ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup13ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup13ScrollBar)
                {
                    fScrollBarVerticDup13ScrollBar = new ScrollBar("ScrollBarVerticDup13ScrollBar", ScrollViewerPARDup13Pane);
                    fScrollBarVerticDup13ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup13ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup13ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup13ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup13ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup13ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup13ScrollBar)
                {
                    fScrollBarHorizoDup13ScrollBar = new ScrollBar("ScrollBarHorizoDup13ScrollBar", ScrollViewerPARDup13Pane);
                    fScrollBarHorizoDup13ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup13ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup13ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup13ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ExactmatchonGroCheckBox
        /// </summary>
        public CheckBox ExactmatchonGroCheckBox
        {
            get
            {
                if (null == fExactmatchonGroCheckBox)
                {
                    fExactmatchonGroCheckBox = new CheckBox("ExactmatchonGroCheckBox", LDAPSignInSetupGroup);
                    fExactmatchonGroCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fExactmatchonGroCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fExactmatchonGroCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Exact match on Group attribute");
                    fExactmatchonGroCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0CB33A64-9AF5-4e5f-9CA9-B0C939DFECDA");
                }

                return fExactmatchonGroCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to ExactmatchonGroText
        /// </summary>
        public Text ExactmatchonGroText
        {
            get
            {
                if (null == fExactmatchonGroText)
                {
                    fExactmatchonGroText = new Text("ExactmatchonGroText", ExactmatchonGroCheckBox);
                    fExactmatchonGroText.UIMap.Scope = UIASeachScope.Children;
                    fExactmatchonGroText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fExactmatchonGroText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Exact match on Group attribute");
                }

                return fExactmatchonGroText;
            }
        }

        /// <summary>
        /// Gets Reference to TestLDAPSignInGGroup
        /// </summary>
        public Group TestLDAPSignInGGroup
        {
            get
            {
                if (null == fTestLDAPSignInGGroup)
                {
                    fTestLDAPSignInGGroup = new Group("TestLDAPSignInGGroup", LDAPSignInSetupGroup);
                    fTestLDAPSignInGGroup.UIMap.Scope = UIASeachScope.Children;
                    fTestLDAPSignInGGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fTestLDAPSignInGGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test LDAP Sign In");
                    fTestLDAPSignInGGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"172F8C8C-8A1E-4c42-B645-67B55B5388CE");
                }

                return fTestLDAPSignInGGroup;
            }
        }

        /// <summary>
        /// Gets Reference to TestLDAPSignInTText
        /// </summary>
        public Text TestLDAPSignInTText
        {
            get
            {
                if (null == fTestLDAPSignInTText)
                {
                    fTestLDAPSignInTText = new Text("TestLDAPSignInTText", TestLDAPSignInGGroup);
                    fTestLDAPSignInTText.UIMap.Scope = UIASeachScope.Children;
                    fTestLDAPSignInTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTestLDAPSignInTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test LDAP Sign In");
                }

                return fTestLDAPSignInTText;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameDup1Text
        /// </summary>
        public Text UsernameDup1Text
        {
            get
            {
                if (null == fUsernameDup1Text)
                {
                    fUsernameDup1Text = new Text("UsernameDup1Text", TestLDAPSignInGGroup);
                    fUsernameDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fUsernameDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fUsernameDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                }

                return fUsernameDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameTextBloDup1Text
        /// </summary>
        public Text UsernameTextBloDup1Text
        {
            get
            {
                if (null == fUsernameTextBloDup1Text)
                {
                    fUsernameTextBloDup1Text = new Text("UsernameTextBloDup1Text", UsernameDup1Text);
                    fUsernameTextBloDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fUsernameTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUsernameTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                }

                return fUsernameTextBloDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxB8C8294DEdit
        /// </summary>
        public Edit UserNameTextBox
        {
            get
            {
                if (null == fTextBoxB8C8294DEdit)
                {
                    fTextBoxB8C8294DEdit = new Edit("TextBoxB8C8294DEdit", TestLDAPSignInGGroup);
                    fTextBoxB8C8294DEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxB8C8294DEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBoxB8C8294DEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B8C8294D-21D7-4550-A7DF-43B50A1BFEAE");
                }

                return fTextBoxB8C8294DEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup14Pane
        /// </summary>
        public Pane ScrollViewerPARDup14Pane
        {
            get
            {
                if (null == fScrollViewerPARDup14Pane)
                {
                    fScrollViewerPARDup14Pane = new Pane("ScrollViewerPARDup14Pane", UserNameTextBox);
                    fScrollViewerPARDup14Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup14Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup14Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup14Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup14ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup14ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup14ScrollBar)
                {
                    fScrollBarVerticDup14ScrollBar = new ScrollBar("ScrollBarVerticDup14ScrollBar", ScrollViewerPARDup14Pane);
                    fScrollBarVerticDup14ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup14ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup14ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup14ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup14ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup14ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup14ScrollBar)
                {
                    fScrollBarHorizoDup14ScrollBar = new ScrollBar("ScrollBarHorizoDup14ScrollBar", ScrollViewerPARDup14Pane);
                    fScrollBarHorizoDup14ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup14ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup14ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup14ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordDup1Text
        /// </summary>
        public Text PasswordDup1Text
        {
            get
            {
                if (null == fPasswordDup1Text)
                {
                    fPasswordDup1Text = new Text("PasswordDup1Text", TestLDAPSignInGGroup);
                    fPasswordDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fPasswordDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fPasswordDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                }

                return fPasswordDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordTextBloDup1Text
        /// </summary>
        public Text PasswordTextBloDup1Text
        {
            get
            {
                if (null == fPasswordTextBloDup1Text)
                {
                    fPasswordTextBloDup1Text = new Text("PasswordTextBloDup1Text", PasswordDup1Text);
                    fPasswordTextBloDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fPasswordTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPasswordTextBloDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                }

                return fPasswordTextBloDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordBoxAB2CEdit
        /// </summary>
        public Edit LDAPPasswordBox
        {
            get
            {
                if (null == fPasswordBoxAB2CEdit)
                {
                    fPasswordBoxAB2CEdit = new Edit("PasswordBoxAB2CEdit", TestLDAPSignInGGroup);
                    fPasswordBoxAB2CEdit.UIMap.Scope = UIASeachScope.Children;
                    fPasswordBoxAB2CEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"PasswordBox");
                    fPasswordBoxAB2CEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB2CA9E0-4D25-4bc8-A908-F12A86268A2D");
                }

                return fPasswordBoxAB2CEdit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup15Pane
        /// </summary>
        public Pane ScrollViewerPARDup15Pane
        {
            get
            {
                if (null == fScrollViewerPARDup15Pane)
                {
                    fScrollViewerPARDup15Pane = new Pane("ScrollViewerPARDup15Pane", LDAPPasswordBox);
                    fScrollViewerPARDup15Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup15Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup15Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup15Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup15ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup15ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup15ScrollBar)
                {
                    fScrollBarVerticDup15ScrollBar = new ScrollBar("ScrollBarVerticDup15ScrollBar", ScrollViewerPARDup15Pane);
                    fScrollBarVerticDup15ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup15ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup15ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup15ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup15ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup15ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup15ScrollBar)
                {
                    fScrollBarHorizoDup15ScrollBar = new ScrollBar("ScrollBarHorizoDup15ScrollBar", ScrollViewerPARDup15Pane);
                    fScrollBarHorizoDup15ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup15ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup15ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup15ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to TestButtonB1BD3Button
        /// </summary>
        public Button LDAPTestButton
        {
            get
            {
                if (null == fTestButtonB1BD3Button)
                {
                    fTestButtonB1BD3Button = new Button("TestButtonB1BD3Button", TestLDAPSignInGGroup);
                    fTestButtonB1BD3Button.UIMap.Scope = UIASeachScope.Children;
                    fTestButtonB1BD3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fTestButtonB1BD3Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    fTestButtonB1BD3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B1BD3C48-9B91-44e8-A002-D7100B47A43A");
                }

                return fTestButtonB1BD3Button;
            }
        }

        /// <summary>
        /// Gets Reference to TestTextBlockDup1Text
        /// </summary>
        public Text TestTextBlockDup1Text
        {
            get
            {
                if (null == fTestTextBlockDup1Text)
                {
                    fTestTextBlockDup1Text = new Text("TestTextBlockDup1Text", LDAPTestButton);
                    fTestTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fTestTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTestTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                }

                return fTestTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup16ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup16ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup16ScrollBar)
                {
                    fScrollBarVerticDup16ScrollBar = new ScrollBar("ScrollBarVerticDup16ScrollBar", ScrollViewerPane);
                    fScrollBarVerticDup16ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup16ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup16ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup16ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup16ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup16ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup16ScrollBar)
                {
                    fScrollBarHorizoDup16ScrollBar = new ScrollBar("ScrollBarHorizoDup16ScrollBar", ScrollViewerPane);
                    fScrollBarHorizoDup16ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup16ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup16ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup16ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup2TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup2TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup2TabItem)
                {
                    fSystemWindowsCoDup2TabItem = new TabItem("SystemWindowsCoDup2TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup2TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33A07ED3-E1EE-411e-B583-7D0A3374100F");
                }

                return fSystemWindowsCoDup2TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to EmailTextmEmailText
        /// </summary>
        public Text EmailTextmEmailText
        {
            get
            {
                if (null == fEmailTextmEmailText)
                {
                    fEmailTextmEmailText = new Text("EmailTextmEmailText", SystemWindowsCoDup2TabItem);
                    fEmailTextmEmailText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                }

                return fEmailTextmEmailText;
            }
        }

        /// <summary>
        /// Gets Reference to EmailTextBlockText
        /// </summary>
        public Text EmailTextBlockText
        {
            get
            {
                if (null == fEmailTextBlockText)
                {
                    fEmailTextBlockText = new Text("EmailTextBlockText", EmailTextmEmailText);
                    fEmailTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                }

                return fEmailTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to Text32de714a8bdText
        /// </summary>
        public Text Text32de714a8bdText
        {
            get
            {
                if (null == fText32de714a8bdText)
                {
                    fText32de714a8bdText = new Text("Text32de714a8bdText", SystemWindowsCoDup2TabItem);
                    fText32de714a8bdText.UIMap.Scope = UIASeachScope.Children;
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"32de714a-8bda-4f11-bf20-b9a56b5f18bc");
                }

                return fText32de714a8bdText;
            }
        }

        /// <summary>
        /// Gets Reference to Text3b2a8761f4fText
        /// </summary>
        public Text Text3b2a8761f4fText
        {
            get
            {
                if (null == fText3b2a8761f4fText)
                {
                    fText3b2a8761f4fText = new Text("Text3b2a8761f4fText", SystemWindowsCoDup2TabItem);
                    fText3b2a8761f4fText.UIMap.Scope = UIASeachScope.Children;
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3b2a8761-f4f6-41b1-b08c-9c33744bdc43");
                }

                return fText3b2a8761f4fText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockDup2Text
        /// </summary>
        public Text TextBlockDup2Text
        {
            get
            {
                if (null == fTextBlockDup2Text)
                {
                    fTextBlockDup2Text = new Text("TextBlockDup2Text", Text3b2a8761f4fText);
                    fTextBlockDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextBlockDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup3TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup3TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup3TabItem)
                {
                    fSystemWindowsCoDup3TabItem = new TabItem("SystemWindowsCoDup3TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4f116988-2b22-473f-bca3-094589a44954");
                }

                return fSystemWindowsCoDup3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to FaxTextmFaxTabLText
        /// </summary>
        public Text FaxTextmFaxTabLText
        {
            get
            {
                if (null == fFaxTextmFaxTabLText)
                {
                    fFaxTextmFaxTabLText = new Text("FaxTextmFaxTabLText", SystemWindowsCoDup3TabItem);
                    fFaxTextmFaxTabLText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                }

                return fFaxTextmFaxTabLText;
            }
        }

        /// <summary>
        /// Gets Reference to FaxTextBlockText
        /// </summary>
        public Text FaxTextBlockText
        {
            get
            {
                if (null == fFaxTextBlockText)
                {
                    fFaxTextBlockText = new Text("FaxTextBlockText", FaxTextmFaxTabLText);
                    fFaxTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to TextD1ED4F16F38Text
        /// </summary>
        public Text TextD1ED4F16F38Text
        {
            get
            {
                if (null == fTextD1ED4F16F38Text)
                {
                    fTextD1ED4F16F38Text = new Text("TextD1ED4F16F38Text", SystemWindowsCoDup3TabItem);
                    fTextD1ED4F16F38Text.UIMap.Scope = UIASeachScope.Children;
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D1ED4F16-F389-4dfd-A884-D258EDB48C11");
                }

                return fTextD1ED4F16F38Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text7DDE04FD251Text
        /// </summary>
        public Text Text7DDE04FD251Text
        {
            get
            {
                if (null == fText7DDE04FD251Text)
                {
                    fText7DDE04FD251Text = new Text("Text7DDE04FD251Text", SystemWindowsCoDup3TabItem);
                    fText7DDE04FD251Text.UIMap.Scope = UIASeachScope.Children;
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7DDE04FD-2519-44c2-A212-67B0838E1C91");
                }

                return fText7DDE04FD251Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup4TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup4TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup4TabItem)
                {
                    fSystemWindowsCoDup4TabItem = new TabItem("SystemWindowsCoDup4TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup4TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ff96a045-6e12-4ce3-ba85-b65d16c39ffb");
                }

                return fSystemWindowsCoDup4TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoFolderTexDup0Text
        /// </summary>
        public Text SendtoFolderTexDup0Text
        {
            get
            {
                if (null == fSendtoFolderTexDup0Text)
                {
                    fSendtoFolderTexDup0Text = new Text("SendtoFolderTexDup0Text", SystemWindowsCoDup4TabItem);
                    fSendtoFolderTexDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                }

                return fSendtoFolderTexDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoFolderTexDup1Text
        /// </summary>
        public Text SendtoFolderTexDup1Text
        {
            get
            {
                if (null == fSendtoFolderTexDup1Text)
                {
                    fSendtoFolderTexDup1Text = new Text("SendtoFolderTexDup1Text", SendtoFolderTexDup0Text);
                    fSendtoFolderTexDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text7a57f43ecb1Text
        /// </summary>
        public Text Text7a57f43ecb1Text
        {
            get
            {
                if (null == fText7a57f43ecb1Text)
                {
                    fText7a57f43ecb1Text = new Text("Text7a57f43ecb1Text", SystemWindowsCoDup4TabItem);
                    fText7a57f43ecb1Text.UIMap.Scope = UIASeachScope.Children;
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                }

                return fText7a57f43ecb1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text654b650dd19Text
        /// </summary>
        public Text Text654b650dd19Text
        {
            get
            {
                if (null == fText654b650dd19Text)
                {
                    fText654b650dd19Text = new Text("Text654b650dd19Text", SystemWindowsCoDup4TabItem);
                    fText654b650dd19Text.UIMap.Scope = UIASeachScope.Children;
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                }

                return fText654b650dd19Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup5TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup5TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup5TabItem)
                {
                    fSystemWindowsCoDup5TabItem = new TabItem("SystemWindowsCoDup5TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup5TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"38feb495-2893-4d8b-8961-31ebc2a3bd56");
                }

                return fSystemWindowsCoDup5TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to WorkflowsTextmWText
        /// </summary>
        public Text WorkflowsTextmWText
        {
            get
            {
                if (null == fWorkflowsTextmWText)
                {
                    fWorkflowsTextmWText = new Text("WorkflowsTextmWText", SystemWindowsCoDup5TabItem);
                    fWorkflowsTextmWText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                }

                return fWorkflowsTextmWText;
            }
        }

        /// <summary>
        /// Gets Reference to WorkflowsTextBlText
        /// </summary>
        public Text WorkflowsTextBlText
        {
            get
            {
                if (null == fWorkflowsTextBlText)
                {
                    fWorkflowsTextBlText = new Text("WorkflowsTextBlText", WorkflowsTextmWText);
                    fWorkflowsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                }

                return fWorkflowsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to Text22D9C34E84CText
        /// </summary>
        public Text Text22D9C34E84CText
        {
            get
            {
                if (null == fText22D9C34E84CText)
                {
                    fText22D9C34E84CText = new Text("Text22D9C34E84CText", SystemWindowsCoDup5TabItem);
                    fText22D9C34E84CText.UIMap.Scope = UIASeachScope.Children;
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22D9C34E-84C8-4995-AC9E-5B46F8284284");
                }

                return fText22D9C34E84CText;
            }
        }

        /// <summary>
        /// Gets Reference to TextC8D15BD39C8Text
        /// </summary>
        public Text TextC8D15BD39C8Text
        {
            get
            {
                if (null == fTextC8D15BD39C8Text)
                {
                    fTextC8D15BD39C8Text = new Text("TextC8D15BD39C8Text", SystemWindowsCoDup5TabItem);
                    fTextC8D15BD39C8Text.UIMap.Scope = UIASeachScope.Children;
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C8D15BD3-9C8D-484c-A5E2-309CA8AA6C56");
                }

                return fTextC8D15BD39C8Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup6TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup6TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup6TabItem)
                {
                    fSystemWindowsCoDup6TabItem = new TabItem("SystemWindowsCoDup6TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup6TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b8c06323-208e-4239-a523-a025661e0eab");
                }

                return fSystemWindowsCoDup6TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingTextmText
        /// </summary>
        public Text AddressingTextmText
        {
            get
            {
                if (null == fAddressingTextmText)
                {
                    fAddressingTextmText = new Text("AddressingTextmText", SystemWindowsCoDup6TabItem);
                    fAddressingTextmText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                }

                return fAddressingTextmText;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingTextBText
        /// </summary>
        public Text AddressingTextBText
        {
            get
            {
                if (null == fAddressingTextBText)
                {
                    fAddressingTextBText = new Text("AddressingTextBText", AddressingTextmText);
                    fAddressingTextBText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to Text47EB5CBA4D1Text
        /// </summary>
        public Text Text47EB5CBA4D1Text
        {
            get
            {
                if (null == fText47EB5CBA4D1Text)
                {
                    fText47EB5CBA4D1Text = new Text("Text47EB5CBA4D1Text", SystemWindowsCoDup6TabItem);
                    fText47EB5CBA4D1Text.UIMap.Scope = UIASeachScope.Children;
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"47EB5CBA-4D1C-4eee-AD64-E26BDA31A3AC");
                }

                return fText47EB5CBA4D1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text0757E148179Text
        /// </summary>
        public Text Text0757E148179Text
        {
            get
            {
                if (null == fText0757E148179Text)
                {
                    fText0757E148179Text = new Text("Text0757E148179Text", SystemWindowsCoDup6TabItem);
                    fText0757E148179Text.UIMap.Scope = UIASeachScope.Children;
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0757E148-1794-4a5d-B378-6BE8049F65E1");
                }

                return fText0757E148179Text;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceConfiguraTabItem
        /// </summary>
        public TabItem DeviceConfiguraTabItem
        {
            get
            {
                if (null == fDeviceConfiguraTabItem)
                {
                    fDeviceConfiguraTabItem = new TabItem("DeviceConfiguraTabItem", TabControlec0fdTab);
                    fDeviceConfiguraTabItem.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6DF1E016-517F-40e4-A63E-CD48D560192F");
                }

                return fDeviceConfiguraTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceConfiguraText
        /// </summary>
        public Text DeviceConfiguraText
        {
            get
            {
                if (null == fDeviceConfiguraText)
                {
                    fDeviceConfiguraText = new Text("DeviceConfiguraText", DeviceConfiguraTabItem);
                    fDeviceConfiguraText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                }

                return fDeviceConfiguraText;
            }
        }

        /// <summary>
        /// Gets Reference to TemplateConfiguTabItem
        /// </summary>
        public TabItem TemplateConfiguTabItem
        {
            get
            {
                if (null == fTemplateConfiguTabItem)
                {
                    fTemplateConfiguTabItem = new TabItem("TemplateConfiguTabItem", TabControlec0fdTab);
                    fTemplateConfiguTabItem.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AC05F9B9-A7D8-4b34-80E7-910FB9870D47");
                }

                return fTemplateConfiguTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to TemplateConfiguText
        /// </summary>
        public Text TemplateConfiguText
        {
            get
            {
                if (null == fTemplateConfiguText)
                {
                    fTemplateConfiguText = new Text("TemplateConfiguText", TemplateConfiguTabItem);
                    fTemplateConfiguText.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                }

                return fTemplateConfiguText;
            }
        }

        /// <summary>
        /// Gets Reference to LogTabItem9b4f3TabItem
        /// </summary>
        public TabItem LogTabItem9b4f3TabItem
        {
            get
            {
                if (null == fLogTabItem9b4f3TabItem)
                {
                    fLogTabItem9b4f3TabItem = new TabItem("LogTabItem9b4f3TabItem", TabControlec0fdTab);
                    fLogTabItem9b4f3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9b4f34bb-d75a-4080-9be3-1c50ec31c5b6");
                }

                return fLogTabItem9b4f3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to LogTextBlockText
        /// </summary>
        public Text LogTextBlockText
        {
            get
            {
                if (null == fLogTextBlockText)
                {
                    fLogTextBlockText = new Text("LogTextBlockText", LogTabItem9b4f3TabItem);
                    fLogTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup7TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup7TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup7TabItem)
                {
                    fSystemWindowsCoDup7TabItem = new TabItem("SystemWindowsCoDup7TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup7TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3AC8D4A8-3B06-421A-911B-E8CA248A9ED4");
                }

                return fSystemWindowsCoDup7TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SecurityTextmSeText
        /// </summary>
        public Text SecurityTextmSeText
        {
            get
            {
                if (null == fSecurityTextmSeText)
                {
                    fSecurityTextmSeText = new Text("SecurityTextmSeText", SystemWindowsCoDup7TabItem);
                    fSecurityTextmSeText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mSecurityTabLabel");
                }

                return fSecurityTextmSeText;
            }
        }

        /// <summary>
        /// Gets Reference to SecurityTextBloText
        /// </summary>
        public Text SecurityTextBloText
        {
            get
            {
                if (null == fSecurityTextBloText)
                {
                    fSecurityTextBloText = new Text("SecurityTextBloText", SecurityTextmSeText);
                    fSecurityTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                }

                return fSecurityTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to Text8A7A84DB894Text
        /// </summary>
        public Text Text8A7A84DB894Text
        {
            get
            {
                if (null == fText8A7A84DB894Text)
                {
                    fText8A7A84DB894Text = new Text("Text8A7A84DB894Text", SystemWindowsCoDup7TabItem);
                    fText8A7A84DB894Text.UIMap.Scope = UIASeachScope.Children;
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8A7A84DB-8945-40E1-A0F9-C40DDD129739");
                }

                return fText8A7A84DB894Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text16F78FB18FFText
        /// </summary>
        public Text Text16F78FB18FFText
        {
            get
            {
                if (null == fText16F78FB18FFText)
                {
                    fText16F78FB18FFText = new Text("Text16F78FB18FFText", SystemWindowsCoDup7TabItem);
                    fText16F78FB18FFText.UIMap.Scope = UIASeachScope.Children;
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16F78FB1-8FF9-4B0D-8251-FB09F520EA73");
                }

                return fText16F78FB18FFText;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup8TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup8TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup8TabItem)
                {
                    fSystemWindowsCoDup8TabItem = new TabItem("SystemWindowsCoDup8TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup8TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1678607C-20BF-4137-8238-C9D46EA8FF70");
                }

                return fSystemWindowsCoDup8TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AnalyticsTextmAText
        /// </summary>
        public Text AnalyticsTextmAText
        {
            get
            {
                if (null == fAnalyticsTextmAText)
                {
                    fAnalyticsTextmAText = new Text("AnalyticsTextmAText", SystemWindowsCoDup8TabItem);
                    fAnalyticsTextmAText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAnalyticsTabLabel");
                }

                return fAnalyticsTextmAText;
            }
        }

        /// <summary>
        /// Gets Reference to AnalyticsTextBlText
        /// </summary>
        public Text AnalyticsTextBlText
        {
            get
            {
                if (null == fAnalyticsTextBlText)
                {
                    fAnalyticsTextBlText = new Text("AnalyticsTextBlText", AnalyticsTextmAText);
                    fAnalyticsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                }

                return fAnalyticsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to AboutTabItemf45TabItem
        /// </summary>
        public TabItem AboutTabItemf45TabItem
        {
            get
            {
                if (null == fAboutTabItemf45TabItem)
                {
                    fAboutTabItemf45TabItem = new TabItem("AboutTabItemf45TabItem", TabControlec0fdTab);
                    fAboutTabItemf45TabItem.UIMap.Scope = UIASeachScope.Children;
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f45c22d9-f77a-481a-95bc-09cdff03e131");
                }

                return fAboutTabItemf45TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AboutTextBlockText
        /// </summary>
        public Text AboutTextBlockText
        {
            get
            {
                if (null == fAboutTextBlockText)
                {
                    fAboutTextBlockText = new Text("AboutTextBlockText", AboutTabItemf45TabItem);
                    fAboutTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                }

                return fAboutTextBlockText;
            }
        }
    }
}

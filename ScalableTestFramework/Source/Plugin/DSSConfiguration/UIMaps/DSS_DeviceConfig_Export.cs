//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------

namespace HP.ScalableTest.Plugin.DSSConfiguration.UIMaps
{
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class DSS_DeviceConfig_Export
    {
        /// <summary>
        /// Backing field for HPDigitalSendinWindow property
        /// </summary>
        private Window fHPDigitalSendinWindow;

        /// <summary>
        /// Backing field for ExportDeviceLisWindow property
        /// </summary>
        private Window fExportDeviceLisWindow;

        /// <summary>
        /// Backing field for DUIViewWndClassPane property
        /// </summary>
        private Pane fDUIViewWndClassPane;

        /// <summary>
        /// Backing field for ExplorerPaneHWNPane property
        /// </summary>
        private Pane fExplorerPaneHWNPane;

        /// <summary>
        /// Backing field for FloatNotifySinkDup0I0XPane property
        /// </summary>
        private Pane fFloatNotifySinkDup0I0XPane;

        /// <summary>
        /// Backing field for CtrlNotifySinkDup0I0XPane property
        /// </summary>
        private Pane fCtrlNotifySinkDup0I0XPane;

        /// <summary>
        /// Backing field for CtrlNotifySinkDup1I1XPane property
        /// </summary>
        private Pane fCtrlNotifySinkDup1I1XPane;

        /// <summary>
        /// Backing field for FloatNotifySinkDup1I1XPane property
        /// </summary>
        private Pane fFloatNotifySinkDup1I1XPane;

        /// <summary>
        /// Backing field for CommandModuleFoToolBar property
        /// </summary>
        private ToolBar fCommandModuleFoToolBar;

        /// <summary>
        /// Backing field for HelpButton3dHelButton property
        /// </summary>
        private Button fHelpButton3dHelButton;

        /// <summary>
        /// Backing field for ViewsViewControSplitButton property
        /// </summary>
        private SplitButton fViewsViewControSplitButton;

        /// <summary>
        /// Backing field for ViewSliderButtoButton property
        /// </summary>
        private Button fViewSliderButtoButton;

        /// <summary>
        /// Backing field for OrganizeAJOSpliButton property
        /// </summary>
        private Button fOrganizeAJOSpliButton;

        /// <summary>
        /// Backing field for NewfolderAJOSplButton property
        /// </summary>
        private Button fNewfolderAJOSplButton;

        /// <summary>
        /// Backing field for ControlHostPropPane property
        /// </summary>
        private Pane fControlHostPropPane;

        /// <summary>
        /// Backing field for NamespaceTreeCoTree property
        /// </summary>
        private Tree fNamespaceTreeCoTree;

        /// <summary>
        /// Backing field for VerticalScrollBScrollBar property
        /// </summary>
        private ScrollBar fVerticalScrollBScrollBar;

        /// <summary>
        /// Backing field for BackbysmallamouButton property
        /// </summary>
        private Button fBackbysmallamouButton;

        /// <summary>
        /// Backing field for BackbylargeamouButton property
        /// </summary>
        private Button fBackbylargeamouButton;

        /// <summary>
        /// Backing field for ThumbThumb property
        /// </summary>
        private Thumb fThumbThumb;

        /// <summary>
        /// Backing field for ForwardbylargeaButton property
        /// </summary>
        private Button fForwardbylargeaButton;

        /// <summary>
        /// Backing field for ForwardbysmallaButton property
        /// </summary>
        private Button fForwardbysmallaButton;

        /// <summary>
        /// Backing field for FavoritesTreeItem property
        /// </summary>
        private TreeItem fFavoritesTreeItem;

        /// <summary>
        /// Backing field for DesktopDup0TreeItem property
        /// </summary>
        private TreeItem fDesktopDup0TreeItem;

        /// <summary>
        /// Backing field for DownloadsTreeItem property
        /// </summary>
        private TreeItem fDownloadsTreeItem;

        /// <summary>
        /// Backing field for RecentPlacesTreeItem property
        /// </summary>
        private TreeItem fRecentPlacesTreeItem;

        /// <summary>
        /// Backing field for DesktopDup1TreeItem property
        /// </summary>
        private TreeItem fDesktopDup1TreeItem;

        /// <summary>
        /// Backing field for LibrariesTreeItem property
        /// </summary>
        private TreeItem fLibrariesTreeItem;

        /// <summary>
        /// Backing field for DocumentsTreeItem property
        /// </summary>
        private TreeItem fDocumentsTreeItem;

        /// <summary>
        /// Backing field for MusicTreeItem property
        /// </summary>
        private TreeItem fMusicTreeItem;

        /// <summary>
        /// Backing field for PicturesTreeItem property
        /// </summary>
        private TreeItem fPicturesTreeItem;

        /// <summary>
        /// Backing field for SubversionTreeItem property
        /// </summary>
        private TreeItem fSubversionTreeItem;

        /// <summary>
        /// Backing field for VideosTreeItem property
        /// </summary>
        private TreeItem fVideosTreeItem;

        /// <summary>
        /// Backing field for ComputerTreeItem property
        /// </summary>
        private TreeItem fComputerTreeItem;

        /// <summary>
        /// Backing field for LocalDiskCTreeItem property
        /// </summary>
        private TreeItem fLocalDiskCTreeItem;

        /// <summary>
        /// Backing field for LocalDiskDTreeItem property
        /// </summary>
        private TreeItem fLocalDiskDTreeItem;

        /// <summary>
        /// Backing field for LocalDiskETreeItem property
        /// </summary>
        private TreeItem fLocalDiskETreeItem;

        /// <summary>
        /// Backing field for NetworkTreeItem property
        /// </summary>
        private TreeItem fNetworkTreeItem;

        /// <summary>
        /// Backing field for ShellFolderViewPane property
        /// </summary>
        private Pane fShellFolderViewPane;

        /// <summary>
        /// Backing field for ItemsViewUIItemList property
        /// </summary>
        private List fItemsViewUIItemList;

        /// <summary>
        /// Backing field for LibrariesUIItemListItem property
        /// </summary>
        private ListItem fLibrariesUIItemListItem;

        /// <summary>
        /// Backing field for UIDup0Image property
        /// </summary>
        private Image fUIDup0Image;

        /// <summary>
        /// Backing field for NameUIPropertySDup0Edit property
        /// </summary>
        private Edit fNameUIPropertySDup0Edit;

        /// <summary>
        /// Backing field for TypeUIPropertySDup0Edit property
        /// </summary>
        private Edit fTypeUIPropertySDup0Edit;

        /// <summary>
        /// Backing field for adminUIItem1ListItem property
        /// </summary>
        private ListItem fadminUIItem1ListItem;

        /// <summary>
        /// Backing field for UIDup1Image property
        /// </summary>
        private Image fUIDup1Image;

        /// <summary>
        /// Backing field for NameUIPropertySDup1Edit property
        /// </summary>
        private Edit fNameUIPropertySDup1Edit;

        /// <summary>
        /// Backing field for TypeUIPropertySDup1Edit property
        /// </summary>
        private Edit fTypeUIPropertySDup1Edit;

        /// <summary>
        /// Backing field for ComputerUIItem2ListItem property
        /// </summary>
        private ListItem fComputerUIItem2ListItem;

        /// <summary>
        /// Backing field for UIDup2Image property
        /// </summary>
        private Image fUIDup2Image;

        /// <summary>
        /// Backing field for NameUIPropertySDup2Edit property
        /// </summary>
        private Edit fNameUIPropertySDup2Edit;

        /// <summary>
        /// Backing field for TypeUIPropertySDup2Edit property
        /// </summary>
        private Edit fTypeUIPropertySDup2Edit;

        /// <summary>
        /// Backing field for NetworkUIItem3ListItem property
        /// </summary>
        private ListItem fNetworkUIItem3ListItem;

        /// <summary>
        /// Backing field for UIDup3Image property
        /// </summary>
        private Image fUIDup3Image;

        /// <summary>
        /// Backing field for NameUIPropertySDup3Edit property
        /// </summary>
        private Edit fNameUIPropertySDup3Edit;

        /// <summary>
        /// Backing field for TypeUIPropertySDup3Edit property
        /// </summary>
        private Edit fTypeUIPropertySDup3Edit;

        /// <summary>
        /// Backing field for CsUIItem4ListItem property
        /// </summary>
        private ListItem fCsUIItem4ListItem;

        /// <summary>
        /// Backing field for UIDup4Image property
        /// </summary>
        private Image fUIDup4Image;

        /// <summary>
        /// Backing field for NameUIPropertySDup4Edit property
        /// </summary>
        private Edit fNameUIPropertySDup4Edit;

        /// <summary>
        /// Backing field for TypeUIPropertySDup4Edit property
        /// </summary>
        private Edit fTypeUIPropertySDup4Edit;

        /// <summary>
        /// Backing field for DSSUIItem5ListItem property
        /// </summary>
        private ListItem fDSSUIItem5ListItem;

        /// <summary>
        /// Backing field for UIDup5Image property
        /// </summary>
        private Image fUIDup5Image;

        /// <summary>
        /// Backing field for NameUIPropertySDup5Edit property
        /// </summary>
        private Edit fNameUIPropertySDup5Edit;

        /// <summary>
        /// Backing field for TypeUIPropertySDup5Edit property
        /// </summary>
        private Edit fTypeUIPropertySDup5Edit;

        /// <summary>
        /// Backing field for FixesUIItem6ListItem property
        /// </summary>
        private ListItem fFixesUIItem6ListItem;

        /// <summary>
        /// Backing field for UIDup6Image property
        /// </summary>
        private Image fUIDup6Image;

        /// <summary>
        /// Backing field for NameUIPropertySDup6Edit property
        /// </summary>
        private Edit fNameUIPropertySDup6Edit;

        /// <summary>
        /// Backing field for TypeUIPropertySDup6Edit property
        /// </summary>
        private Edit fTypeUIPropertySDup6Edit;

        /// <summary>
        /// Backing field for TwainStuffsUIIListItem property
        /// </summary>
        private ListItem fTwainStuffsUIIListItem;

        /// <summary>
        /// Backing field for UIDup7Image property
        /// </summary>
        private Image fUIDup7Image;

        /// <summary>
        /// Backing field for NameUIPropertySDup7Edit property
        /// </summary>
        private Edit fNameUIPropertySDup7Edit;

        /// <summary>
        /// Backing field for TypeUIPropertySDup7Edit property
        /// </summary>
        private Edit fTypeUIPropertySDup7Edit;

        /// <summary>
        /// Backing field for A1csvUIItem8ListItem property
        /// </summary>
        private ListItem fA1csvUIItem8ListItem;

        /// <summary>
        /// Backing field for UIDup8Image property
        /// </summary>
        private Image fUIDup8Image;

        /// <summary>
        /// Backing field for NameUIPropertySDup8Edit property
        /// </summary>
        private Edit fNameUIPropertySDup8Edit;

        /// <summary>
        /// Backing field for TypeUIPropertySDup8Edit property
        /// </summary>
        private Edit fTypeUIPropertySDup8Edit;

        /// <summary>
        /// Backing field for SizeUIPropertySDup0Edit property
        /// </summary>
        private Edit fSizeUIPropertySDup0Edit;

        /// <summary>
        /// Backing field for A12csvUIItem9ListItem property
        /// </summary>
        private ListItem fA12csvUIItem9ListItem;

        /// <summary>
        /// Backing field for UIDup9Image property
        /// </summary>
        private Image fUIDup9Image;

        /// <summary>
        /// Backing field for NameUIPropertySDup9Edit property
        /// </summary>
        private Edit fNameUIPropertySDup9Edit;

        /// <summary>
        /// Backing field for TypeUIPropertySDup9Edit property
        /// </summary>
        private Edit fTypeUIPropertySDup9Edit;

        /// <summary>
        /// Backing field for SizeUIPropertySDup1Edit property
        /// </summary>
        private Edit fSizeUIPropertySDup1Edit;

        /// <summary>
        /// Backing field for DetailsPanePrevPane property
        /// </summary>
        private Pane fDetailsPanePrevPane;

        /// <summary>
        /// Backing field for FilenameCIDLabeText property
        /// </summary>
        private Text fFilenameCIDLabeText;

        /// <summary>
        /// Backing field for FilenameAppContComboBox property
        /// </summary>
        private ComboBox fFilenameAppContComboBox;

        /// <summary>
        /// Backing field for FilenameEdit100Edit property
        /// </summary>
        private Edit fFilenameEdit100Edit;

        /// <summary>
        /// Backing field for FilenameComboLBList property
        /// </summary>
        private List fFilenameComboLBList;

        /// <summary>
        /// Backing field for DropDownButtonDDup0Button property
        /// </summary>
        private Button fDropDownButtonDDup0Button;

        /// <summary>
        /// Backing field for SaveastypeCIDLaText property
        /// </summary>
        private Text fSaveastypeCIDLaText;

        /// <summary>
        /// Backing field for SaveastypeAppCoComboBox property
        /// </summary>
        private ComboBox fSaveastypeAppCoComboBox;

        /// <summary>
        /// Backing field for SaveastypeComboList property
        /// </summary>
        private List fSaveastypeComboList;

        /// <summary>
        /// Backing field for CommaseparatedvListItem property
        /// </summary>
        private ListItem fCommaseparatedvListItem;

        /// <summary>
        /// Backing field for AllFilesListItem property
        /// </summary>
        private ListItem fAllFilesListItem;

        /// <summary>
        /// Backing field for DropDownButtonDDup1Button property
        /// </summary>
        private Button fDropDownButtonDDup1Button;

        /// <summary>
        /// Backing field for SaveFieldsSaveDTree property
        /// </summary>
        private Tree fSaveFieldsSaveDTree;

        /// <summary>
        /// Backing field for ApplicationContTree property
        /// </summary>
        private Tree fApplicationContTree;

        /// <summary>
        /// Backing field for ToolbarWindow32Dup0ToolBar property
        /// </summary>
        private ToolBar fToolbarWindow32Dup0ToolBar;

        /// <summary>
        /// Backing field for HideFoldersItemButton property
        /// </summary>
        private Button fHideFoldersItemButton;

        /// <summary>
        /// Backing field for SaveButton1Button property
        /// </summary>
        private Button fSaveButton1Button;

        /// <summary>
        /// Backing field for CancelButton2Button property
        /// </summary>
        private Button fCancelButton2Button;

        /// <summary>
        /// Backing field for ScrollBarPane property
        /// </summary>
        private Pane fScrollBarPane;

        /// <summary>
        /// Backing field for WorkerWPane property
        /// </summary>
        private Pane fWorkerWPane;

        /// <summary>
        /// Backing field for ReBarWindow3240Pane property
        /// </summary>
        private Pane fReBarWindow3240Pane;

        /// <summary>
        /// Backing field for RebarBandDup0I0XCustom property
        /// </summary>
        private Custom fRebarBandDup0I0XCustom;

        /// <summary>
        /// Backing field for TravelBandPane property
        /// </summary>
        private Pane fTravelBandPane;

        /// <summary>
        /// Backing field for ToolbarWindow32Dup1ToolBar property
        /// </summary>
        private ToolBar fToolbarWindow32Dup1ToolBar;

        /// <summary>
        /// Backing field for BackItem256Button property
        /// </summary>
        private Button fBackItem256Button;

        /// <summary>
        /// Backing field for ForwardItem257Button property
        /// </summary>
        private Button fForwardItem257Button;

        /// <summary>
        /// Backing field for RecentPagesItemButton property
        /// </summary>
        private Button fRecentPagesItemButton;

        /// <summary>
        /// Backing field for RebarBandDup1I1XCustom property
        /// </summary>
        private Custom fRebarBandDup1I1XCustom;

        /// <summary>
        /// Backing field for AddressBandRootPane property
        /// </summary>
        private Pane fAddressBandRootPane;

        /// <summary>
        /// Backing field for msctlsprogressProgressBar property
        /// </summary>
        private ProgressBar fmsctlsprogressProgressBar;

        /// <summary>
        /// Backing field for BreadcrumbParenPane property
        /// </summary>
        private Pane fBreadcrumbParenPane;

        /// <summary>
        /// Backing field for AddressDesktopTToolBar property
        /// </summary>
        private ToolBar fAddressDesktopTToolBar;

        /// <summary>
        /// Backing field for DesktopItem1280SplitButton property
        /// </summary>
        private SplitButton fDesktopItem1280SplitButton;

        /// <summary>
        /// Backing field for ToolbarWindow32Dup2ToolBar property
        /// </summary>
        private ToolBar fToolbarWindow32Dup2ToolBar;

        /// <summary>
        /// Backing field for PreviousLocatioButton property
        /// </summary>
        private Button fPreviousLocatioButton;

        /// <summary>
        /// Backing field for RebarBandDup2I2XCustom property
        /// </summary>
        private Custom fRebarBandDup2I2XCustom;

        /// <summary>
        /// Backing field for UniversalSearchPane property
        /// </summary>
        private Pane fUniversalSearchPane;

        /// <summary>
        /// Backing field for SearchBoxPane property
        /// </summary>
        private Pane fSearchBoxPane;

        /// <summary>
        /// Backing field for SearchEditBoxWrPane property
        /// </summary>
        private Pane fSearchEditBoxWrPane;

        /// <summary>
        /// Backing field for SearchDesktopSePane property
        /// </summary>
        private Pane fSearchDesktopSePane;

        /// <summary>
        /// Backing field for SearchBoxSearchEdit property
        /// </summary>
        private Edit fSearchBoxSearchEdit;

        /// <summary>
        /// Backing field for SearchButtonSeaButton property
        /// </summary>
        private Button fSearchButtonSeaButton;

        /// <summary>
        /// Backing field for ExportDeviceLisTitleBar property
        /// </summary>
        private TitleBar fExportDeviceLisTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyDup0MenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyDup0MenuBar;

        /// <summary>
        /// Backing field for SystemItem1Dup0MenuItem property
        /// </summary>
        private MenuItem fSystemItem1Dup0MenuItem;

        /// <summary>
        /// Backing field for CloseCloseDup0Button property
        /// </summary>
        private Button fCloseCloseDup0Button;

        /// <summary>
        /// Backing field for HPDigitalSendinTitleBar property
        /// </summary>
        private TitleBar fHPDigitalSendinTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyDup1MenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyDup1MenuBar;

        /// <summary>
        /// Backing field for SystemItem1Dup1MenuItem property
        /// </summary>
        private MenuItem fSystemItem1Dup1MenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizButton property
        /// </summary>
        private Button fMinimizeMinimizButton;

        /// <summary>
        /// Backing field for MaximizeMaximizButton property
        /// </summary>
        private Button fMaximizeMaximizButton;

        /// <summary>
        /// Backing field for CloseCloseDup1Button property
        /// </summary>
        private Button fCloseCloseDup1Button;

        /// <summary>
        /// Backing field for HelpButtonCB8CFButton property
        /// </summary>
        private Button fHelpButtonCB8CFButton;

        /// <summary>
        /// Backing field for HelpTextBlockText property
        /// </summary>
        private Text fHelpTextBlockText;

        /// <summary>
        /// Backing field for ApplyButton61E2Button property
        /// </summary>
        private Button fApplyButton61E2Button;

        /// <summary>
        /// Backing field for ApplyTextBlockText property
        /// </summary>
        private Text fApplyTextBlockText;

        /// <summary>
        /// Backing field for CancelButton65CButton property
        /// </summary>
        private Button fCancelButton65CButton;

        /// <summary>
        /// Backing field for CancelTextBlockText property
        /// </summary>
        private Text fCancelTextBlockText;

        /// <summary>
        /// Backing field for OKButtonCC2EF49Button property
        /// </summary>
        private Button fOKButtonCC2EF49Button;

        /// <summary>
        /// Backing field for OKTextBlockText property
        /// </summary>
        private Text fOKTextBlockText;

        /// <summary>
        /// Backing field for TabControlec0fdTab property
        /// </summary>
        private Tab fTabControlec0fdTab;

        /// <summary>
        /// Backing field for SystemWindowsCoDup0TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup0TabItem;

        /// <summary>
        /// Backing field for GeneralTextmGenText property
        /// </summary>
        private Text fGeneralTextmGenText;

        /// <summary>
        /// Backing field for GeneralTextBlocText property
        /// </summary>
        private Text fGeneralTextBlocText;

        /// <summary>
        /// Backing field for Text933345b04e3Text property
        /// </summary>
        private Text fText933345b04e3Text;

        /// <summary>
        /// Backing field for Text786caf67344Text property
        /// </summary>
        private Text fText786caf67344Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup1TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup1TabItem;

        /// <summary>
        /// Backing field for AuthenticationTDup0Text property
        /// </summary>
        private Text fAuthenticationTDup0Text;

        /// <summary>
        /// Backing field for AuthenticationTDup1Text property
        /// </summary>
        private Text fAuthenticationTDup1Text;

        /// <summary>
        /// Backing field for Text31EC91730B9Text property
        /// </summary>
        private Text fText31EC91730B9Text;

        /// <summary>
        /// Backing field for TextA479C271445Text property
        /// </summary>
        private Text fTextA479C271445Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup2TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup2TabItem;

        /// <summary>
        /// Backing field for EmailTextmEmailText property
        /// </summary>
        private Text fEmailTextmEmailText;

        /// <summary>
        /// Backing field for EmailTextBlockText property
        /// </summary>
        private Text fEmailTextBlockText;

        /// <summary>
        /// Backing field for Text32de714a8bdText property
        /// </summary>
        private Text fText32de714a8bdText;

        /// <summary>
        /// Backing field for Text3b2a8761f4fText property
        /// </summary>
        private Text fText3b2a8761f4fText;

        /// <summary>
        /// Backing field for TextBlockDup0Text property
        /// </summary>
        private Text fTextBlockDup0Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup3TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup3TabItem;

        /// <summary>
        /// Backing field for FaxTextmFaxTabLText property
        /// </summary>
        private Text fFaxTextmFaxTabLText;

        /// <summary>
        /// Backing field for FaxTextBlockText property
        /// </summary>
        private Text fFaxTextBlockText;

        /// <summary>
        /// Backing field for TextD1ED4F16F38Text property
        /// </summary>
        private Text fTextD1ED4F16F38Text;

        /// <summary>
        /// Backing field for Text7DDE04FD251Text property
        /// </summary>
        private Text fText7DDE04FD251Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup4TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup4TabItem;

        /// <summary>
        /// Backing field for SendtoFolderTexDup0Text property
        /// </summary>
        private Text fSendtoFolderTexDup0Text;

        /// <summary>
        /// Backing field for SendtoFolderTexDup1Text property
        /// </summary>
        private Text fSendtoFolderTexDup1Text;

        /// <summary>
        /// Backing field for Text7a57f43ecb1Text property
        /// </summary>
        private Text fText7a57f43ecb1Text;

        /// <summary>
        /// Backing field for Text654b650dd19Text property
        /// </summary>
        private Text fText654b650dd19Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup5TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup5TabItem;

        /// <summary>
        /// Backing field for WorkflowsTextmWText property
        /// </summary>
        private Text fWorkflowsTextmWText;

        /// <summary>
        /// Backing field for WorkflowsTextBlText property
        /// </summary>
        private Text fWorkflowsTextBlText;

        /// <summary>
        /// Backing field for Text22D9C34E84CText property
        /// </summary>
        private Text fText22D9C34E84CText;

        /// <summary>
        /// Backing field for TextC8D15BD39C8Text property
        /// </summary>
        private Text fTextC8D15BD39C8Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup6TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup6TabItem;

        /// <summary>
        /// Backing field for AddressingTextmText property
        /// </summary>
        private Text fAddressingTextmText;

        /// <summary>
        /// Backing field for AddressingTextBText property
        /// </summary>
        private Text fAddressingTextBText;

        /// <summary>
        /// Backing field for Text47EB5CBA4D1Text property
        /// </summary>
        private Text fText47EB5CBA4D1Text;

        /// <summary>
        /// Backing field for Text0757E148179Text property
        /// </summary>
        private Text fText0757E148179Text;

        /// <summary>
        /// Backing field for DeviceConfiguraTabItem property
        /// </summary>
        private TabItem fDeviceConfiguraTabItem;

        /// <summary>
        /// Backing field for DeviceConfiguraText property
        /// </summary>
        private Text fDeviceConfiguraText;

        /// <summary>
        /// Backing field for ServiceConfigurCustom property
        /// </summary>
        private Custom fServiceConfigurCustom;

        /// <summary>
        /// Backing field for GroupListText property
        /// </summary>
        private Text fGroupListText;

        /// <summary>
        /// Backing field for GroupListTextBlText property
        /// </summary>
        private Text fGroupListTextBlText;

        /// <summary>
        /// Backing field for DeviceGroupsText property
        /// </summary>
        private Text fDeviceGroupsText;

        /// <summary>
        /// Backing field for DeviceGroupsTexText property
        /// </summary>
        private Text fDeviceGroupsTexText;

        /// <summary>
        /// Backing field for TreeView1416BDETree property
        /// </summary>
        private Tree fTreeView1416BDETree;

        /// <summary>
        /// Backing field for AllDevicesTreeVTreeItem property
        /// </summary>
        private TreeItem fAllDevicesTreeVTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup0Button property
        /// </summary>
        private Button fButtonExpanderDup0Button;

        /// <summary>
        /// Backing field for AllDevicesTextBText property
        /// </summary>
        private Text fAllDevicesTextBText;

        /// <summary>
        /// Backing field for ggTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fggTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup1Button property
        /// </summary>
        private Button fButtonExpanderDup1Button;

        /// <summary>
        /// Backing field for ggTextBlockText property
        /// </summary>
        private Text fggTextBlockText;

        /// <summary>
        /// Backing field for GroupTreeViewItTreeItem property
        /// </summary>
        private TreeItem fGroupTreeViewItTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup2Button property
        /// </summary>
        private Button fButtonExpanderDup2Button;

        /// <summary>
        /// Backing field for GroupTextBlockText property
        /// </summary>
        private Text fGroupTextBlockText;

        /// <summary>
        /// Backing field for pRASHTreeViewItTreeItem property
        /// </summary>
        private TreeItem fpRASHTreeViewItTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup3Button property
        /// </summary>
        private Button fButtonExpanderDup3Button;

        /// <summary>
        /// Backing field for pRASHTextBlockText property
        /// </summary>
        private Text fpRASHTextBlockText;

        /// <summary>
        /// Backing field for pRASHANTreeViewTreeItem property
        /// </summary>
        private TreeItem fpRASHANTreeViewTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup4Button property
        /// </summary>
        private Button fButtonExpanderDup4Button;

        /// <summary>
        /// Backing field for pRASHANTextBlocText property
        /// </summary>
        private Text fpRASHANTextBlocText;

        /// <summary>
        /// Backing field for PrashanTreeViewTreeItem property
        /// </summary>
        private TreeItem fPrashanTreeViewTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup5Button property
        /// </summary>
        private Button fButtonExpanderDup5Button;

        /// <summary>
        /// Backing field for PrashanTextBlocText property
        /// </summary>
        private Text fPrashanTextBlocText;

        /// <summary>
        /// Backing field for SanthoshTreeVieTreeItem property
        /// </summary>
        private TreeItem fSanthoshTreeVieTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup6Button property
        /// </summary>
        private Button fButtonExpanderDup6Button;

        /// <summary>
        /// Backing field for SanthoshTextBloText property
        /// </summary>
        private Text fSanthoshTextBloText;

        /// <summary>
        /// Backing field for AddGroupButtonFButton property
        /// </summary>
        private Button fAddGroupButtonFButton;

        /// <summary>
        /// Backing field for AddGroupTextBloText property
        /// </summary>
        private Text fAddGroupTextBloText;

        /// <summary>
        /// Backing field for RemoveGroupButtButton property
        /// </summary>
        private Button fRemoveGroupButtButton;

        /// <summary>
        /// Backing field for RemoveGroupTextText property
        /// </summary>
        private Text fRemoveGroupTextText;

        /// <summary>
        /// Backing field for RenameButton261Button property
        /// </summary>
        private Button fRenameButton261Button;

        /// <summary>
        /// Backing field for RenameTextBlockText property
        /// </summary>
        private Text fRenameTextBlockText;

        /// <summary>
        /// Backing field for GridSplitterThumb property
        /// </summary>
        private Thumb fGridSplitterThumb;

        /// <summary>
        /// Backing field for DeviceListText property
        /// </summary>
        private Text fDeviceListText;

        /// <summary>
        /// Backing field for DeviceListTextBText property
        /// </summary>
        private Text fDeviceListTextBText;

        /// <summary>
        /// Backing field for ListView141cb8bDataGrid property
        /// </summary>
        private DataGrid fListView141cb8bDataGrid;

        /// <summary>
        /// Backing field for GridViewHeaderRHeader property
        /// </summary>
        private Header fGridViewHeaderRHeader;

        /// <summary>
        /// Backing field for StatusGridViewCHeaderItem property
        /// </summary>
        private HeaderItem fStatusGridViewCHeaderItem;

        /// <summary>
        /// Backing field for StatusTextBlockText property
        /// </summary>
        private Text fStatusTextBlockText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup0Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup0Thumb;

        /// <summary>
        /// Backing field for NameGridViewColHeaderItem property
        /// </summary>
        private HeaderItem fNameGridViewColHeaderItem;

        /// <summary>
        /// Backing field for NameTextBlockText property
        /// </summary>
        private Text fNameTextBlockText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup1Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup1Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup0HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup0HeaderItem;

        /// <summary>
        /// Backing field for ImageDup0Image property
        /// </summary>
        private Image fImageDup0Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup2Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup2Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup1HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup1HeaderItem;

        /// <summary>
        /// Backing field for ImageDup1Image property
        /// </summary>
        private Image fImageDup1Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup3Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup3Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup2HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup2HeaderItem;

        /// <summary>
        /// Backing field for ImageDup2Image property
        /// </summary>
        private Image fImageDup2Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup4Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup4Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup3HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup3HeaderItem;

        /// <summary>
        /// Backing field for ImageDup3Image property
        /// </summary>
        private Image fImageDup3Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup5Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup5Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup4HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup4HeaderItem;

        /// <summary>
        /// Backing field for ImageDup4Image property
        /// </summary>
        private Image fImageDup4Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup6Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup6Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup5HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup5HeaderItem;

        /// <summary>
        /// Backing field for ImageDup5Image property
        /// </summary>
        private Image fImageDup5Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup7Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup7Thumb;

        /// <summary>
        /// Backing field for ModelGridViewCoHeaderItem property
        /// </summary>
        private HeaderItem fModelGridViewCoHeaderItem;

        /// <summary>
        /// Backing field for ModelTextBlockText property
        /// </summary>
        private Text fModelTextBlockText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup8Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup8Thumb;

        /// <summary>
        /// Backing field for IPAddressGridViHeaderItem property
        /// </summary>
        private HeaderItem fIPAddressGridViHeaderItem;

        /// <summary>
        /// Backing field for IPAddressTextBlText property
        /// </summary>
        private Text fIPAddressTextBlText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup9Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup9Thumb;

        /// <summary>
        /// Backing field for HostnameGridVieHeaderItem property
        /// </summary>
        private HeaderItem fHostnameGridVieHeaderItem;

        /// <summary>
        /// Backing field for HostnameTextBloText property
        /// </summary>
        private Text fHostnameTextBloText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup10Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup10Thumb;

        /// <summary>
        /// Backing field for DescriptionGridHeaderItem property
        /// </summary>
        private HeaderItem fDescriptionGridHeaderItem;

        /// <summary>
        /// Backing field for DescriptionTextText property
        /// </summary>
        private Text fDescriptionTextText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup11Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup11Thumb;

        /// <summary>
        /// Backing field for FirmwareGridVieHeaderItem property
        /// </summary>
        private HeaderItem fFirmwareGridVieHeaderItem;

        /// <summary>
        /// Backing field for FirmwareTextBloText property
        /// </summary>
        private Text fFirmwareTextBloText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup12Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup12Thumb;

        /// <summary>
        /// Backing field for unset101113198eDataItem property
        /// </summary>
        private DataItem funset101113198eDataItem;

        /// <summary>
        /// Backing field for ContentPresenteDup0I0XCustom property
        /// </summary>
        private Custom fContentPresenteDup0I0XCustom;

        /// <summary>
        /// Backing field for Image84ACE29E0ADup0Image property
        /// </summary>
        private Image fImage84ACE29E0ADup0Image;

        /// <summary>
        /// Backing field for WaitSpinnerUserDup0Custom property
        /// </summary>
        private Custom fWaitSpinnerUserDup0Custom;

        /// <summary>
        /// Backing field for HPLaserJetFlowMDup0I0XText property
        /// </summary>
        private Text fHPLaserJetFlowMDup0I0XText;

        /// <summary>
        /// Backing field for ContentPresenteDup1I1XCustom property
        /// </summary>
        private Custom fContentPresenteDup1I1XCustom;

        /// <summary>
        /// Backing field for Image844100985ADup0Image property
        /// </summary>
        private Image fImage844100985ADup0Image;

        /// <summary>
        /// Backing field for ContentPresenteDup2I2XCustom property
        /// </summary>
        private Custom fContentPresenteDup2I2XCustom;

        /// <summary>
        /// Backing field for Image20F9A92A96Dup0Image property
        /// </summary>
        private Image fImage20F9A92A96Dup0Image;

        /// <summary>
        /// Backing field for ContentPresenteDup3I3XCustom property
        /// </summary>
        private Custom fContentPresenteDup3I3XCustom;

        /// <summary>
        /// Backing field for ImageCA1843E8BFDup0Image property
        /// </summary>
        private Image fImageCA1843E8BFDup0Image;

        /// <summary>
        /// Backing field for ContentPresenteDup4I4XCustom property
        /// </summary>
        private Custom fContentPresenteDup4I4XCustom;

        /// <summary>
        /// Backing field for ImageE24499D7C0Dup0Image property
        /// </summary>
        private Image fImageE24499D7C0Dup0Image;

        /// <summary>
        /// Backing field for ContentPresenteDup5I5XCustom property
        /// </summary>
        private Custom fContentPresenteDup5I5XCustom;

        /// <summary>
        /// Backing field for Image86A371F7F4Dup0Image property
        /// </summary>
        private Image fImage86A371F7F4Dup0Image;

        /// <summary>
        /// Backing field for ContentPresenteDup6I6XCustom property
        /// </summary>
        private Custom fContentPresenteDup6I6XCustom;

        /// <summary>
        /// Backing field for Image1D2DC29B85Dup0Image property
        /// </summary>
        private Image fImage1D2DC29B85Dup0Image;

        /// <summary>
        /// Backing field for HPLaserJetFlowMDup1I1XText property
        /// </summary>
        private Text fHPLaserJetFlowMDup1I1XText;

        /// <summary>
        /// Backing field for A101113198TextBText property
        /// </summary>
        private Text fA101113198TextBText;

        /// <summary>
        /// Backing field for TextBlockDup1Text property
        /// </summary>
        private Text fTextBlockDup1Text;

        /// <summary>
        /// Backing field for HPLaserJetFlowMDup2I2XText property
        /// </summary>
        private Text fHPLaserJetFlowMDup2I2XText;

        /// <summary>
        /// Backing field for FutureSmart4431Text property
        /// </summary>
        private Text fFutureSmart4431Text;

        /// <summary>
        /// Backing field for unset101112159eDataItem property
        /// </summary>
        private DataItem funset101112159eDataItem;

        /// <summary>
        /// Backing field for ContentPresenteDup7I0XCustom property
        /// </summary>
        private Custom fContentPresenteDup7I0XCustom;

        /// <summary>
        /// Backing field for Image84ACE29E0ADup1Image property
        /// </summary>
        private Image fImage84ACE29E0ADup1Image;

        /// <summary>
        /// Backing field for WaitSpinnerUserDup1Custom property
        /// </summary>
        private Custom fWaitSpinnerUserDup1Custom;

        /// <summary>
        /// Backing field for HPLaserJetMFPM5Dup0I0XText property
        /// </summary>
        private Text fHPLaserJetMFPM5Dup0I0XText;

        /// <summary>
        /// Backing field for ContentPresenteDup8I1XCustom property
        /// </summary>
        private Custom fContentPresenteDup8I1XCustom;

        /// <summary>
        /// Backing field for Image844100985ADup1Image property
        /// </summary>
        private Image fImage844100985ADup1Image;

        /// <summary>
        /// Backing field for ContentPresenteDup9I2XCustom property
        /// </summary>
        private Custom fContentPresenteDup9I2XCustom;

        /// <summary>
        /// Backing field for Image20F9A92A96Dup1Image property
        /// </summary>
        private Image fImage20F9A92A96Dup1Image;

        /// <summary>
        /// Backing field for ContentPresenteDup10I3XCustom property
        /// </summary>
        private Custom fContentPresenteDup10I3XCustom;

        /// <summary>
        /// Backing field for ImageCA1843E8BFDup1Image property
        /// </summary>
        private Image fImageCA1843E8BFDup1Image;

        /// <summary>
        /// Backing field for ContentPresenteDup11I4XCustom property
        /// </summary>
        private Custom fContentPresenteDup11I4XCustom;

        /// <summary>
        /// Backing field for ImageE24499D7C0Dup1Image property
        /// </summary>
        private Image fImageE24499D7C0Dup1Image;

        /// <summary>
        /// Backing field for ContentPresenteDup12I5XCustom property
        /// </summary>
        private Custom fContentPresenteDup12I5XCustom;

        /// <summary>
        /// Backing field for Image86A371F7F4Dup1Image property
        /// </summary>
        private Image fImage86A371F7F4Dup1Image;

        /// <summary>
        /// Backing field for ContentPresenteDup13I6XCustom property
        /// </summary>
        private Custom fContentPresenteDup13I6XCustom;

        /// <summary>
        /// Backing field for Image1D2DC29B85Dup1Image property
        /// </summary>
        private Image fImage1D2DC29B85Dup1Image;

        /// <summary>
        /// Backing field for HPLaserJetMFPM5Dup1I1XText property
        /// </summary>
        private Text fHPLaserJetMFPM5Dup1I1XText;

        /// <summary>
        /// Backing field for A101112159TextBText property
        /// </summary>
        private Text fA101112159TextBText;

        /// <summary>
        /// Backing field for TextBlockDup2Text property
        /// </summary>
        private Text fTextBlockDup2Text;

        /// <summary>
        /// Backing field for HPLaserJetMFPM5Dup2I2XText property
        /// </summary>
        private Text fHPLaserJetMFPM5Dup2I2XText;

        /// <summary>
        /// Backing field for FutureSmart4BetText property
        /// </summary>
        private Text fFutureSmart4BetText;

        /// <summary>
        /// Backing field for AddDeviceButtonButton property
        /// </summary>
        private Button fAddDeviceButtonButton;

        /// <summary>
        /// Backing field for AddDeviceTextBlText property
        /// </summary>
        private Text fAddDeviceTextBlText;

        /// <summary>
        /// Backing field for ExportButtonef5Button property
        /// </summary>
        private Button fExportButtonef5Button;

        /// <summary>
        /// Backing field for ExportTextBlockText property
        /// </summary>
        private Text fExportTextBlockText;

        /// <summary>
        /// Backing field for RemoveDeviceButButton property
        /// </summary>
        private Button fRemoveDeviceButButton;

        /// <summary>
        /// Backing field for RemoveDeviceTexText property
        /// </summary>
        private Text fRemoveDeviceTexText;

        /// <summary>
        /// Backing field for ImportButtona69Button property
        /// </summary>
        private Button fImportButtona69Button;

        /// <summary>
        /// Backing field for ImportTextBlockText property
        /// </summary>
        private Text fImportTextBlockText;

        /// <summary>
        /// Backing field for CreateTemplateBButton property
        /// </summary>
        private Button fCreateTemplateBButton;

        /// <summary>
        /// Backing field for CreateTemplateTText property
        /// </summary>
        private Text fCreateTemplateTText;

        /// <summary>
        /// Backing field for DeviceSignInButButton property
        /// </summary>
        private Button fDeviceSignInButButton;

        /// <summary>
        /// Backing field for DeviceSignInTexText property
        /// </summary>
        private Text fDeviceSignInTexText;

        /// <summary>
        /// Backing field for TotalDevicesText property
        /// </summary>
        private Text fTotalDevicesText;

        /// <summary>
        /// Backing field for TotalDevicesTexText property
        /// </summary>
        private Text fTotalDevicesTexText;

        /// <summary>
        /// Backing field for A2Text82f844376Text property
        /// </summary>
        private Text fA2Text82f844376Text;

        /// <summary>
        /// Backing field for A2TextBlockText property
        /// </summary>
        private Text fA2TextBlockText;

        /// <summary>
        /// Backing field for ConfigureDeviceButton property
        /// </summary>
        private Button fConfigureDeviceButton;

        /// <summary>
        /// Backing field for ConfigureDeviceText property
        /// </summary>
        private Text fConfigureDeviceText;

        /// <summary>
        /// Backing field for TemplateConfiguTabItem property
        /// </summary>
        private TabItem fTemplateConfiguTabItem;

        /// <summary>
        /// Backing field for TemplateConfiguText property
        /// </summary>
        private Text fTemplateConfiguText;

        /// <summary>
        /// Backing field for LogTabItem9b4f3TabItem property
        /// </summary>
        private TabItem fLogTabItem9b4f3TabItem;

        /// <summary>
        /// Backing field for LogTextBlockText property
        /// </summary>
        private Text fLogTextBlockText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup7TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup7TabItem;

        /// <summary>
        /// Backing field for SecurityTextmSeText property
        /// </summary>
        private Text fSecurityTextmSeText;

        /// <summary>
        /// Backing field for SecurityTextBloText property
        /// </summary>
        private Text fSecurityTextBloText;

        /// <summary>
        /// Backing field for Text8A7A84DB894Text property
        /// </summary>
        private Text fText8A7A84DB894Text;

        /// <summary>
        /// Backing field for Text16F78FB18FFText property
        /// </summary>
        private Text fText16F78FB18FFText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup8TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup8TabItem;

        /// <summary>
        /// Backing field for AnalyticsTextmAText property
        /// </summary>
        private Text fAnalyticsTextmAText;

        /// <summary>
        /// Backing field for AnalyticsTextBlText property
        /// </summary>
        private Text fAnalyticsTextBlText;

        /// <summary>
        /// Backing field for AboutTabItemf45TabItem property
        /// </summary>
        private TabItem fAboutTabItemf45TabItem;

        /// <summary>
        /// Backing field for AboutTextBlockText property
        /// </summary>
        private Text fAboutTextBlockText;

        /// <summary>
        /// Backing field for FolderLayoutPanPane property
        /// </summary>
        private Pane fFolderLayoutPanPane;

        /// <summary>
        /// System IP property
        /// </summary>
        private string _ipAddress;

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_DeviceConfig_Export"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public DSS_DeviceConfig_Export(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_DeviceConfig_Export"/> class using the default UIAFramework.
        /// </summary>
        public DSS_DeviceConfig_Export()
        {
            Desktop = new Desktop();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_DeviceConfig_Export"/> class using the default UIAFramework.
        /// </summary>
        /// <param name="address">
        /// The IP Address.
        /// </param>
        public DSS_DeviceConfig_Export(string address)
        {
            Desktop = new Desktop();
            _ipAddress = address;
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        /// <summary>
        /// Gets Reference to HPDigitalSendinWindow
        /// </summary>
        public Window HPDigitalSendinWindow
        {
            get
            {
                if (null == fHPDigitalSendinWindow)
                {
                    fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                    fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_ipAddress})");
                }

                return fHPDigitalSendinWindow;
            }
        }

        /// <summary>
        /// Gets Reference to ExportDeviceLisWindow
        /// </summary>
        public Window ExportDeviceLisWindow
        {
            get
            {
                if (null == fExportDeviceLisWindow)
                {
                    fExportDeviceLisWindow = new Window("ExportDeviceLisWindow", HPDigitalSendinWindow);
                    fExportDeviceLisWindow.UIMap.Scope = UIASeachScope.Children;
                    fExportDeviceLisWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                    fExportDeviceLisWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export Device List To");
                }

                return fExportDeviceLisWindow;
            }
        }

        /// <summary>
        /// Gets Reference to DUIViewWndClassPane
        /// </summary>
        public Pane DUIViewWndClassPane
        {
            get
            {
                if (null == fDUIViewWndClassPane)
                {
                    fDUIViewWndClassPane = new Pane("DUIViewWndClassPane", ExportDeviceLisWindow);
                    fDUIViewWndClassPane.UIMap.Scope = UIASeachScope.Children;
                    fDUIViewWndClassPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"DUIViewWndClassName");
                }

                return fDUIViewWndClassPane;
            }
        }

        /// <summary>
        /// Gets Reference to ExplorerPaneHWNPane
        /// </summary>
        public Pane ExplorerPaneHWNPane
        {
            get
            {
                if (null == fExplorerPaneHWNPane)
                {
                    fExplorerPaneHWNPane = new Pane("ExplorerPaneHWNPane", DUIViewWndClassPane);
                    fExplorerPaneHWNPane.UIMap.Scope = UIASeachScope.Children;
                    fExplorerPaneHWNPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"main");
                    fExplorerPaneHWNPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"HWNDView");
                    fExplorerPaneHWNPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Explorer Pane");
                }

                return fExplorerPaneHWNPane;
            }
        }

        /// <summary>
        /// Gets Reference to FloatNotifySinkDup0I0XPane
        /// </summary>
        public Pane FloatNotifySinkDup0I0XPane
        {
            get
            {
                if (null == fFloatNotifySinkDup0I0XPane)
                {
                    fFloatNotifySinkDup0I0XPane = new Pane("FloatNotifySinkDup0I0XPane", ExplorerPaneHWNPane);
                    fFloatNotifySinkDup0I0XPane.UIMap.Scope = UIASeachScope.Children;
                    fFloatNotifySinkDup0I0XPane.UIMap.Index = 0;
                    fFloatNotifySinkDup0I0XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"FloatNotifySink");
                }

                return fFloatNotifySinkDup0I0XPane;
            }
        }

        /// <summary>
        /// Gets Reference to CtrlNotifySinkDup0I0XPane
        /// </summary>
        public Pane CtrlNotifySinkDup0I0XPane
        {
            get
            {
                if (null == fCtrlNotifySinkDup0I0XPane)
                {
                    fCtrlNotifySinkDup0I0XPane = new Pane("CtrlNotifySinkDup0I0XPane", ExplorerPaneHWNPane);
                    fCtrlNotifySinkDup0I0XPane.UIMap.Scope = UIASeachScope.Children;
                    fCtrlNotifySinkDup0I0XPane.UIMap.Index = 0;
                    fCtrlNotifySinkDup0I0XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CtrlNotifySink");
                }

                return fCtrlNotifySinkDup0I0XPane;
            }
        }

        /// <summary>
        /// Gets Reference to CtrlNotifySinkDup1I1XPane
        /// </summary>
        public Pane CtrlNotifySinkDup1I1XPane
        {
            get
            {
                if (null == fCtrlNotifySinkDup1I1XPane)
                {
                    fCtrlNotifySinkDup1I1XPane = new Pane("CtrlNotifySinkDup1I1XPane", ExplorerPaneHWNPane);
                    fCtrlNotifySinkDup1I1XPane.UIMap.Scope = UIASeachScope.Children;
                    fCtrlNotifySinkDup1I1XPane.UIMap.Index = 1;
                    fCtrlNotifySinkDup1I1XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CtrlNotifySink");
                }

                return fCtrlNotifySinkDup1I1XPane;
            }
        }

        /// <summary>
        /// Gets Reference to FloatNotifySinkDup1I1XPane
        /// </summary>
        public Pane FloatNotifySinkDup1I1XPane
        {
            get
            {
                if (null == fFloatNotifySinkDup1I1XPane)
                {
                    fFloatNotifySinkDup1I1XPane = new Pane("FloatNotifySinkDup1I1XPane", ExplorerPaneHWNPane);
                    fFloatNotifySinkDup1I1XPane.UIMap.Scope = UIASeachScope.Children;
                    fFloatNotifySinkDup1I1XPane.UIMap.Index = 1;
                    fFloatNotifySinkDup1I1XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"FloatNotifySink");
                }

                return fFloatNotifySinkDup1I1XPane;
            }
        }

        /// <summary>
        /// Gets Reference to CommandModuleFoToolBar
        /// </summary>
        public ToolBar CommandModuleFoToolBar
        {
            get
            {
                if (null == fCommandModuleFoToolBar)
                {
                    fCommandModuleFoToolBar = new ToolBar("CommandModuleFoToolBar", ExplorerPaneHWNPane);
                    fCommandModuleFoToolBar.UIMap.Scope = UIASeachScope.Children;
                    fCommandModuleFoToolBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FolderBandModuleInner");
                    fCommandModuleFoToolBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"FolderBandModuleInner");
                    fCommandModuleFoToolBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Command Module");
                }

                return fCommandModuleFoToolBar;
            }
        }

        /// <summary>
        /// Gets Reference to HelpButton3dHelButton
        /// </summary>
        public Button HelpButton3dHelButton
        {
            get
            {
                if (null == fHelpButton3dHelButton)
                {
                    fHelpButton3dHelButton = new Button("HelpButton3dHelButton", CommandModuleFoToolBar);
                    fHelpButton3dHelButton.UIMap.Scope = UIASeachScope.Children;
                    fHelpButton3dHelButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HelpButton");
                    fHelpButton3dHelButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button3d");
                    fHelpButton3dHelButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpButton3dHelButton;
            }
        }

        /// <summary>
        /// Gets Reference to ViewsViewControSplitButton
        /// </summary>
        public SplitButton ViewsViewControSplitButton
        {
            get
            {
                if (null == fViewsViewControSplitButton)
                {
                    fViewsViewControSplitButton = new SplitButton("ViewsViewControSplitButton", CommandModuleFoToolBar);
                    fViewsViewControSplitButton.UIMap.Scope = UIASeachScope.Children;
                    fViewsViewControSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ViewControl");
                    fViewsViewControSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ViewControl");
                    fViewsViewControSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Views");
                }

                return fViewsViewControSplitButton;
            }
        }

        /// <summary>
        /// Gets Reference to ViewSliderButtoButton
        /// </summary>
        public Button ViewSliderButtoButton
        {
            get
            {
                if (null == fViewSliderButtoButton)
                {
                    fViewSliderButtoButton = new Button("ViewSliderButtoButton", ViewsViewControSplitButton);
                    fViewSliderButtoButton.UIMap.Scope = UIASeachScope.Children;
                    fViewSliderButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SplitMenuButton");
                    fViewSliderButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button3d");
                    fViewSliderButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"View Slider");
                }

                return fViewSliderButtoButton;
            }
        }

        /// <summary>
        /// Gets Reference to OrganizeAJOSpliButton
        /// </summary>
        public Button OrganizeAJOSpliButton
        {
            get
            {
                if (null == fOrganizeAJOSpliButton)
                {
                    fOrganizeAJOSpliButton = new Button("OrganizeAJOSpliButton", CommandModuleFoToolBar);
                    fOrganizeAJOSpliButton.UIMap.Scope = UIASeachScope.Children;
                    fOrganizeAJOSpliButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"{7DDC1264-7E4D-4F74-BBC0-D191987C8D0F}");
                    fOrganizeAJOSpliButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AJOSplitButton");
                    fOrganizeAJOSpliButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Organize");
                }

                return fOrganizeAJOSpliButton;
            }
        }

        /// <summary>
        /// Gets Reference to NewfolderAJOSplButton
        /// </summary>
        public Button NewfolderAJOSplButton
        {
            get
            {
                if (null == fNewfolderAJOSplButton)
                {
                    fNewfolderAJOSplButton = new Button("NewfolderAJOSplButton", CommandModuleFoToolBar);
                    fNewfolderAJOSplButton.UIMap.Scope = UIASeachScope.Children;
                    fNewfolderAJOSplButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"{E44616AD-6DF1-4B94-85A4-E465AE8A19DB}");
                    fNewfolderAJOSplButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AJOSplitButton");
                    fNewfolderAJOSplButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"New folder");
                }

                return fNewfolderAJOSplButton;
            }
        }

        /// <summary>
        /// Gets Reference to ControlHostPropPane
        /// </summary>
        public Pane ControlHostPropPane
        {
            get
            {
                if (null == fControlHostPropPane)
                {
                    fControlHostPropPane = new Pane("ControlHostPropPane", ExplorerPaneHWNPane);
                    fControlHostPropPane.UIMap.Scope = UIASeachScope.Children;
                    fControlHostPropPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ProperTreeHost");
                    fControlHostPropPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProperTreeHost");
                    fControlHostPropPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Control Host");
                }

                return fControlHostPropPane;
            }
        }

        /// <summary>
        /// Gets Reference to NamespaceTreeCoTree
        /// </summary>
        public Tree NamespaceTreeCoTree
        {
            get
            {
                if (null == fNamespaceTreeCoTree)
                {
                    fNamespaceTreeCoTree = new Tree("NamespaceTreeCoTree", ControlHostPropPane);
                    fNamespaceTreeCoTree.UIMap.Scope = UIASeachScope.Children;
                    fNamespaceTreeCoTree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"100");
                    fNamespaceTreeCoTree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"SysTreeView32");
                    fNamespaceTreeCoTree.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Namespace Tree Control");
                }

                return fNamespaceTreeCoTree;
            }
        }

        /// <summary>
        /// Gets Reference to VerticalScrollBScrollBar
        /// </summary>
        public ScrollBar VerticalScrollBScrollBar
        {
            get
            {
                if (null == fVerticalScrollBScrollBar)
                {
                    fVerticalScrollBScrollBar = new ScrollBar("VerticalScrollBScrollBar", NamespaceTreeCoTree);
                    fVerticalScrollBScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fVerticalScrollBScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Vertical ScrollBar");
                    fVerticalScrollBScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Vertical Scroll Bar");
                }

                return fVerticalScrollBScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to BackbysmallamouButton
        /// </summary>
        public Button BackbysmallamouButton
        {
            get
            {
                if (null == fBackbysmallamouButton)
                {
                    fBackbysmallamouButton = new Button("BackbysmallamouButton", VerticalScrollBScrollBar);
                    fBackbysmallamouButton.UIMap.Scope = UIASeachScope.Children;
                    fBackbysmallamouButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallDecrement");
                    fBackbysmallamouButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back by small amount");
                }

                return fBackbysmallamouButton;
            }
        }

        /// <summary>
        /// Gets Reference to BackbylargeamouButton
        /// </summary>
        public Button BackbylargeamouButton
        {
            get
            {
                if (null == fBackbylargeamouButton)
                {
                    fBackbylargeamouButton = new Button("BackbylargeamouButton", VerticalScrollBScrollBar);
                    fBackbylargeamouButton.UIMap.Scope = UIASeachScope.Children;
                    fBackbylargeamouButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LargeDecrement");
                    fBackbylargeamouButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back by large amount");
                }

                return fBackbylargeamouButton;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbThumb
        /// </summary>
        public Thumb ThumbThumb
        {
            get
            {
                if (null == fThumbThumb)
                {
                    fThumbThumb = new Thumb("ThumbThumb", VerticalScrollBScrollBar);
                    fThumbThumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbThumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Thumb");
                    fThumbThumb.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Thumb");
                }

                return fThumbThumb;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardbylargeaButton
        /// </summary>
        public Button ForwardbylargeaButton
        {
            get
            {
                if (null == fForwardbylargeaButton)
                {
                    fForwardbylargeaButton = new Button("ForwardbylargeaButton", VerticalScrollBScrollBar);
                    fForwardbylargeaButton.UIMap.Scope = UIASeachScope.Children;
                    fForwardbylargeaButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LargeIncrement");
                    fForwardbylargeaButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward by large amount");
                }

                return fForwardbylargeaButton;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardbysmallaButton
        /// </summary>
        public Button ForwardbysmallaButton
        {
            get
            {
                if (null == fForwardbysmallaButton)
                {
                    fForwardbysmallaButton = new Button("ForwardbysmallaButton", VerticalScrollBScrollBar);
                    fForwardbysmallaButton.UIMap.Scope = UIASeachScope.Children;
                    fForwardbysmallaButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallIncrement");
                    fForwardbysmallaButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward by small amount");
                }

                return fForwardbysmallaButton;
            }
        }

        /// <summary>
        /// Gets Reference to FavoritesTreeItem
        /// </summary>
        public TreeItem FavoritesTreeItem
        {
            get
            {
                if (null == fFavoritesTreeItem)
                {
                    fFavoritesTreeItem = new TreeItem("FavoritesTreeItem", NamespaceTreeCoTree);
                    fFavoritesTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fFavoritesTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Favorites");
                }

                return fFavoritesTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to DesktopDup0TreeItem
        /// </summary>
        public TreeItem DesktopDup0TreeItem
        {
            get
            {
                if (null == fDesktopDup0TreeItem)
                {
                    fDesktopDup0TreeItem = new TreeItem("DesktopDup0TreeItem", FavoritesTreeItem);
                    fDesktopDup0TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fDesktopDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Desktop");
                }

                return fDesktopDup0TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to DownloadsTreeItem
        /// </summary>
        public TreeItem DownloadsTreeItem
        {
            get
            {
                if (null == fDownloadsTreeItem)
                {
                    fDownloadsTreeItem = new TreeItem("DownloadsTreeItem", FavoritesTreeItem);
                    fDownloadsTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fDownloadsTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Downloads");
                }

                return fDownloadsTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to RecentPlacesTreeItem
        /// </summary>
        public TreeItem RecentPlacesTreeItem
        {
            get
            {
                if (null == fRecentPlacesTreeItem)
                {
                    fRecentPlacesTreeItem = new TreeItem("RecentPlacesTreeItem", FavoritesTreeItem);
                    fRecentPlacesTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fRecentPlacesTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Recent Places");
                }

                return fRecentPlacesTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to DesktopDup1TreeItem
        /// </summary>
        public TreeItem DesktopDup1TreeItem
        {
            get
            {
                if (null == fDesktopDup1TreeItem)
                {
                    fDesktopDup1TreeItem = new TreeItem("DesktopDup1TreeItem", NamespaceTreeCoTree);
                    fDesktopDup1TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fDesktopDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Desktop");
                }

                return fDesktopDup1TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to LibrariesTreeItem
        /// </summary>
        public TreeItem LibrariesTreeItem
        {
            get
            {
                if (null == fLibrariesTreeItem)
                {
                    fLibrariesTreeItem = new TreeItem("LibrariesTreeItem", DesktopDup1TreeItem);
                    fLibrariesTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fLibrariesTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Libraries");
                }

                return fLibrariesTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to DocumentsTreeItem
        /// </summary>
        public TreeItem DocumentsTreeItem
        {
            get
            {
                if (null == fDocumentsTreeItem)
                {
                    fDocumentsTreeItem = new TreeItem("DocumentsTreeItem", LibrariesTreeItem);
                    fDocumentsTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fDocumentsTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Documents");
                }

                return fDocumentsTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to MusicTreeItem
        /// </summary>
        public TreeItem MusicTreeItem
        {
            get
            {
                if (null == fMusicTreeItem)
                {
                    fMusicTreeItem = new TreeItem("MusicTreeItem", LibrariesTreeItem);
                    fMusicTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fMusicTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Music");
                }

                return fMusicTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to PicturesTreeItem
        /// </summary>
        public TreeItem PicturesTreeItem
        {
            get
            {
                if (null == fPicturesTreeItem)
                {
                    fPicturesTreeItem = new TreeItem("PicturesTreeItem", LibrariesTreeItem);
                    fPicturesTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fPicturesTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Pictures");
                }

                return fPicturesTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to SubversionTreeItem
        /// </summary>
        public TreeItem SubversionTreeItem
        {
            get
            {
                if (null == fSubversionTreeItem)
                {
                    fSubversionTreeItem = new TreeItem("SubversionTreeItem", LibrariesTreeItem);
                    fSubversionTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSubversionTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Subversion");
                }

                return fSubversionTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to VideosTreeItem
        /// </summary>
        public TreeItem VideosTreeItem
        {
            get
            {
                if (null == fVideosTreeItem)
                {
                    fVideosTreeItem = new TreeItem("VideosTreeItem", LibrariesTreeItem);
                    fVideosTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fVideosTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Videos");
                }

                return fVideosTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ComputerTreeItem
        /// </summary>
        public TreeItem ComputerTreeItem
        {
            get
            {
                if (null == fComputerTreeItem)
                {
                    fComputerTreeItem = new TreeItem("ComputerTreeItem", DesktopDup1TreeItem);
                    fComputerTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fComputerTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Computer");
                }

                return fComputerTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to LocalDiskCTreeItem
        /// </summary>
        public TreeItem LocalDiskCTreeItem
        {
            get
            {
                if (null == fLocalDiskCTreeItem)
                {
                    fLocalDiskCTreeItem = new TreeItem("LocalDiskCTreeItem", ComputerTreeItem);
                    fLocalDiskCTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fLocalDiskCTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Local Disk (C:)");
                }

                return fLocalDiskCTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to LocalDiskDTreeItem
        /// </summary>
        public TreeItem LocalDiskDTreeItem
        {
            get
            {
                if (null == fLocalDiskDTreeItem)
                {
                    fLocalDiskDTreeItem = new TreeItem("LocalDiskDTreeItem", ComputerTreeItem);
                    fLocalDiskDTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fLocalDiskDTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Local Disk (D:)");
                }

                return fLocalDiskDTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to LocalDiskETreeItem
        /// </summary>
        public TreeItem LocalDiskETreeItem
        {
            get
            {
                if (null == fLocalDiskETreeItem)
                {
                    fLocalDiskETreeItem = new TreeItem("LocalDiskETreeItem", ComputerTreeItem);
                    fLocalDiskETreeItem.UIMap.Scope = UIASeachScope.Children;
                    fLocalDiskETreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Local Disk (E:)");
                }

                return fLocalDiskETreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to NetworkTreeItem
        /// </summary>
        public TreeItem NetworkTreeItem
        {
            get
            {
                if (null == fNetworkTreeItem)
                {
                    fNetworkTreeItem = new TreeItem("NetworkTreeItem", DesktopDup1TreeItem);
                    fNetworkTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fNetworkTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network");
                }

                return fNetworkTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ShellFolderViewPane
        /// </summary>
        public Pane ShellFolderViewPane
        {
            get
            {
                if (null == fShellFolderViewPane)
                {
                    fShellFolderViewPane = new Pane("ShellFolderViewPane", ExplorerPaneHWNPane);
                    fShellFolderViewPane.UIMap.Scope = UIASeachScope.Children;
                    fShellFolderViewPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"listview");
                    fShellFolderViewPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"DUIListView");
                    fShellFolderViewPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Shell Folder View");
                }

                return fShellFolderViewPane;
            }
        }

        /// <summary>
        /// Gets Reference to ItemsViewUIItemList
        /// </summary>
        public List ItemsViewUIItemList
        {
            get
            {
                if (null == fItemsViewUIItemList)
                {
                    fItemsViewUIItemList = new List("ItemsViewUIItemList", ShellFolderViewPane);
                    fItemsViewUIItemList.UIMap.Scope = UIASeachScope.Children;
                    fItemsViewUIItemList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItemsView");
                    fItemsViewUIItemList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Items View");
                }

                return fItemsViewUIItemList;
            }
        }

        /// <summary>
        /// Gets Reference to LibrariesUIItemListItem
        /// </summary>
        public ListItem LibrariesUIItemListItem
        {
            get
            {
                if (null == fLibrariesUIItemListItem)
                {
                    fLibrariesUIItemListItem = new ListItem("LibrariesUIItemListItem", ItemsViewUIItemList);
                    fLibrariesUIItemListItem.UIMap.Scope = UIASeachScope.Children;
                    fLibrariesUIItemListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0");
                    fLibrariesUIItemListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                    fLibrariesUIItemListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Libraries");
                }

                return fLibrariesUIItemListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UIDup0Image
        /// </summary>
        public Image UIDup0Image
        {
            get
            {
                if (null == fUIDup0Image)
                {
                    fUIDup0Image = new Image("UIDup0Image", LibrariesUIItemListItem);
                    fUIDup0Image.UIMap.Scope = UIASeachScope.Children;
                    fUIDup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                }

                return fUIDup0Image;
            }
        }

        /// <summary>
        /// Gets Reference to NameUIPropertySDup0Edit
        /// </summary>
        public Edit NameUIPropertySDup0Edit
        {
            get
            {
                if (null == fNameUIPropertySDup0Edit)
                {
                    fNameUIPropertySDup0Edit = new Edit("NameUIPropertySDup0Edit", LibrariesUIItemListItem);
                    fNameUIPropertySDup0Edit.UIMap.Scope = UIASeachScope.Children;
                    fNameUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                    fNameUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fNameUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameUIPropertySDup0Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TypeUIPropertySDup0Edit
        /// </summary>
        public Edit TypeUIPropertySDup0Edit
        {
            get
            {
                if (null == fTypeUIPropertySDup0Edit)
                {
                    fTypeUIPropertySDup0Edit = new Edit("TypeUIPropertySDup0Edit", LibrariesUIItemListItem);
                    fTypeUIPropertySDup0Edit.UIMap.Scope = UIASeachScope.Children;
                    fTypeUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                    fTypeUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fTypeUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                }

                return fTypeUIPropertySDup0Edit;
            }
        }

        /// <summary>
        /// Gets Reference to adminUIItem1ListItem
        /// </summary>
        public ListItem adminUIItem1ListItem
        {
            get
            {
                if (null == fadminUIItem1ListItem)
                {
                    fadminUIItem1ListItem = new ListItem("adminUIItem1ListItem", ItemsViewUIItemList);
                    fadminUIItem1ListItem.UIMap.Scope = UIASeachScope.Children;
                    fadminUIItem1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1");
                    fadminUIItem1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                    fadminUIItem1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"admin");
                }

                return fadminUIItem1ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UIDup1Image
        /// </summary>
        public Image UIDup1Image
        {
            get
            {
                if (null == fUIDup1Image)
                {
                    fUIDup1Image = new Image("UIDup1Image", adminUIItem1ListItem);
                    fUIDup1Image.UIMap.Scope = UIASeachScope.Children;
                    fUIDup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                }

                return fUIDup1Image;
            }
        }

        /// <summary>
        /// Gets Reference to NameUIPropertySDup1Edit
        /// </summary>
        public Edit NameUIPropertySDup1Edit
        {
            get
            {
                if (null == fNameUIPropertySDup1Edit)
                {
                    fNameUIPropertySDup1Edit = new Edit("NameUIPropertySDup1Edit", adminUIItem1ListItem);
                    fNameUIPropertySDup1Edit.UIMap.Scope = UIASeachScope.Children;
                    fNameUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                    fNameUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fNameUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameUIPropertySDup1Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TypeUIPropertySDup1Edit
        /// </summary>
        public Edit TypeUIPropertySDup1Edit
        {
            get
            {
                if (null == fTypeUIPropertySDup1Edit)
                {
                    fTypeUIPropertySDup1Edit = new Edit("TypeUIPropertySDup1Edit", adminUIItem1ListItem);
                    fTypeUIPropertySDup1Edit.UIMap.Scope = UIASeachScope.Children;
                    fTypeUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                    fTypeUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fTypeUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                }

                return fTypeUIPropertySDup1Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ComputerUIItem2ListItem
        /// </summary>
        public ListItem ComputerUIItem2ListItem
        {
            get
            {
                if (null == fComputerUIItem2ListItem)
                {
                    fComputerUIItem2ListItem = new ListItem("ComputerUIItem2ListItem", ItemsViewUIItemList);
                    fComputerUIItem2ListItem.UIMap.Scope = UIASeachScope.Children;
                    fComputerUIItem2ListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2");
                    fComputerUIItem2ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                    fComputerUIItem2ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Computer");
                }

                return fComputerUIItem2ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UIDup2Image
        /// </summary>
        public Image UIDup2Image
        {
            get
            {
                if (null == fUIDup2Image)
                {
                    fUIDup2Image = new Image("UIDup2Image", ComputerUIItem2ListItem);
                    fUIDup2Image.UIMap.Scope = UIASeachScope.Children;
                    fUIDup2Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                }

                return fUIDup2Image;
            }
        }

        /// <summary>
        /// Gets Reference to NameUIPropertySDup2Edit
        /// </summary>
        public Edit NameUIPropertySDup2Edit
        {
            get
            {
                if (null == fNameUIPropertySDup2Edit)
                {
                    fNameUIPropertySDup2Edit = new Edit("NameUIPropertySDup2Edit", ComputerUIItem2ListItem);
                    fNameUIPropertySDup2Edit.UIMap.Scope = UIASeachScope.Children;
                    fNameUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                    fNameUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fNameUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameUIPropertySDup2Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TypeUIPropertySDup2Edit
        /// </summary>
        public Edit TypeUIPropertySDup2Edit
        {
            get
            {
                if (null == fTypeUIPropertySDup2Edit)
                {
                    fTypeUIPropertySDup2Edit = new Edit("TypeUIPropertySDup2Edit", ComputerUIItem2ListItem);
                    fTypeUIPropertySDup2Edit.UIMap.Scope = UIASeachScope.Children;
                    fTypeUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                    fTypeUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fTypeUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                }

                return fTypeUIPropertySDup2Edit;
            }
        }

        /// <summary>
        /// Gets Reference to NetworkUIItem3ListItem
        /// </summary>
        public ListItem NetworkUIItem3ListItem
        {
            get
            {
                if (null == fNetworkUIItem3ListItem)
                {
                    fNetworkUIItem3ListItem = new ListItem("NetworkUIItem3ListItem", ItemsViewUIItemList);
                    fNetworkUIItem3ListItem.UIMap.Scope = UIASeachScope.Children;
                    fNetworkUIItem3ListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3");
                    fNetworkUIItem3ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                    fNetworkUIItem3ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network");
                }

                return fNetworkUIItem3ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UIDup3Image
        /// </summary>
        public Image UIDup3Image
        {
            get
            {
                if (null == fUIDup3Image)
                {
                    fUIDup3Image = new Image("UIDup3Image", NetworkUIItem3ListItem);
                    fUIDup3Image.UIMap.Scope = UIASeachScope.Children;
                    fUIDup3Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                }

                return fUIDup3Image;
            }
        }

        /// <summary>
        /// Gets Reference to NameUIPropertySDup3Edit
        /// </summary>
        public Edit NameUIPropertySDup3Edit
        {
            get
            {
                if (null == fNameUIPropertySDup3Edit)
                {
                    fNameUIPropertySDup3Edit = new Edit("NameUIPropertySDup3Edit", NetworkUIItem3ListItem);
                    fNameUIPropertySDup3Edit.UIMap.Scope = UIASeachScope.Children;
                    fNameUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                    fNameUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fNameUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameUIPropertySDup3Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TypeUIPropertySDup3Edit
        /// </summary>
        public Edit TypeUIPropertySDup3Edit
        {
            get
            {
                if (null == fTypeUIPropertySDup3Edit)
                {
                    fTypeUIPropertySDup3Edit = new Edit("TypeUIPropertySDup3Edit", NetworkUIItem3ListItem);
                    fTypeUIPropertySDup3Edit.UIMap.Scope = UIASeachScope.Children;
                    fTypeUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                    fTypeUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fTypeUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                }

                return fTypeUIPropertySDup3Edit;
            }
        }

        /// <summary>
        /// Gets Reference to CsUIItem4ListItem
        /// </summary>
        public ListItem CsUIItem4ListItem
        {
            get
            {
                if (null == fCsUIItem4ListItem)
                {
                    fCsUIItem4ListItem = new ListItem("CsUIItem4ListItem", ItemsViewUIItemList);
                    fCsUIItem4ListItem.UIMap.Scope = UIASeachScope.Children;
                    fCsUIItem4ListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4");
                    fCsUIItem4ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                    fCsUIItem4ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cs");
                }

                return fCsUIItem4ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UIDup4Image
        /// </summary>
        public Image UIDup4Image
        {
            get
            {
                if (null == fUIDup4Image)
                {
                    fUIDup4Image = new Image("UIDup4Image", CsUIItem4ListItem);
                    fUIDup4Image.UIMap.Scope = UIASeachScope.Children;
                    fUIDup4Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                }

                return fUIDup4Image;
            }
        }

        /// <summary>
        /// Gets Reference to NameUIPropertySDup4Edit
        /// </summary>
        public Edit NameUIPropertySDup4Edit
        {
            get
            {
                if (null == fNameUIPropertySDup4Edit)
                {
                    fNameUIPropertySDup4Edit = new Edit("NameUIPropertySDup4Edit", CsUIItem4ListItem);
                    fNameUIPropertySDup4Edit.UIMap.Scope = UIASeachScope.Children;
                    fNameUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                    fNameUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fNameUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameUIPropertySDup4Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TypeUIPropertySDup4Edit
        /// </summary>
        public Edit TypeUIPropertySDup4Edit
        {
            get
            {
                if (null == fTypeUIPropertySDup4Edit)
                {
                    fTypeUIPropertySDup4Edit = new Edit("TypeUIPropertySDup4Edit", CsUIItem4ListItem);
                    fTypeUIPropertySDup4Edit.UIMap.Scope = UIASeachScope.Children;
                    fTypeUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                    fTypeUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fTypeUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                }

                return fTypeUIPropertySDup4Edit;
            }
        }

        /// <summary>
        /// Gets Reference to DSSUIItem5ListItem
        /// </summary>
        public ListItem DSSUIItem5ListItem
        {
            get
            {
                if (null == fDSSUIItem5ListItem)
                {
                    fDSSUIItem5ListItem = new ListItem("DSSUIItem5ListItem", ItemsViewUIItemList);
                    fDSSUIItem5ListItem.UIMap.Scope = UIASeachScope.Children;
                    fDSSUIItem5ListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5");
                    fDSSUIItem5ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                    fDSSUIItem5ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"DSS");
                }

                return fDSSUIItem5ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UIDup5Image
        /// </summary>
        public Image UIDup5Image
        {
            get
            {
                if (null == fUIDup5Image)
                {
                    fUIDup5Image = new Image("UIDup5Image", DSSUIItem5ListItem);
                    fUIDup5Image.UIMap.Scope = UIASeachScope.Children;
                    fUIDup5Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                }

                return fUIDup5Image;
            }
        }

        /// <summary>
        /// Gets Reference to NameUIPropertySDup5Edit
        /// </summary>
        public Edit NameUIPropertySDup5Edit
        {
            get
            {
                if (null == fNameUIPropertySDup5Edit)
                {
                    fNameUIPropertySDup5Edit = new Edit("NameUIPropertySDup5Edit", DSSUIItem5ListItem);
                    fNameUIPropertySDup5Edit.UIMap.Scope = UIASeachScope.Children;
                    fNameUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                    fNameUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fNameUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameUIPropertySDup5Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TypeUIPropertySDup5Edit
        /// </summary>
        public Edit TypeUIPropertySDup5Edit
        {
            get
            {
                if (null == fTypeUIPropertySDup5Edit)
                {
                    fTypeUIPropertySDup5Edit = new Edit("TypeUIPropertySDup5Edit", DSSUIItem5ListItem);
                    fTypeUIPropertySDup5Edit.UIMap.Scope = UIASeachScope.Children;
                    fTypeUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                    fTypeUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fTypeUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                }

                return fTypeUIPropertySDup5Edit;
            }
        }

        /// <summary>
        /// Gets Reference to FixesUIItem6ListItem
        /// </summary>
        public ListItem FixesUIItem6ListItem
        {
            get
            {
                if (null == fFixesUIItem6ListItem)
                {
                    fFixesUIItem6ListItem = new ListItem("FixesUIItem6ListItem", ItemsViewUIItemList);
                    fFixesUIItem6ListItem.UIMap.Scope = UIASeachScope.Children;
                    fFixesUIItem6ListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6");
                    fFixesUIItem6ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                    fFixesUIItem6ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fixes");
                }

                return fFixesUIItem6ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UIDup6Image
        /// </summary>
        public Image UIDup6Image
        {
            get
            {
                if (null == fUIDup6Image)
                {
                    fUIDup6Image = new Image("UIDup6Image", FixesUIItem6ListItem);
                    fUIDup6Image.UIMap.Scope = UIASeachScope.Children;
                    fUIDup6Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                }

                return fUIDup6Image;
            }
        }

        /// <summary>
        /// Gets Reference to NameUIPropertySDup6Edit
        /// </summary>
        public Edit NameUIPropertySDup6Edit
        {
            get
            {
                if (null == fNameUIPropertySDup6Edit)
                {
                    fNameUIPropertySDup6Edit = new Edit("NameUIPropertySDup6Edit", FixesUIItem6ListItem);
                    fNameUIPropertySDup6Edit.UIMap.Scope = UIASeachScope.Children;
                    fNameUIPropertySDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                    fNameUIPropertySDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fNameUIPropertySDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameUIPropertySDup6Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TypeUIPropertySDup6Edit
        /// </summary>
        public Edit TypeUIPropertySDup6Edit
        {
            get
            {
                if (null == fTypeUIPropertySDup6Edit)
                {
                    fTypeUIPropertySDup6Edit = new Edit("TypeUIPropertySDup6Edit", FixesUIItem6ListItem);
                    fTypeUIPropertySDup6Edit.UIMap.Scope = UIASeachScope.Children;
                    fTypeUIPropertySDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                    fTypeUIPropertySDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fTypeUIPropertySDup6Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                }

                return fTypeUIPropertySDup6Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TwainStuffsUIIListItem
        /// </summary>
        public ListItem TwainStuffsUIIListItem
        {
            get
            {
                if (null == fTwainStuffsUIIListItem)
                {
                    fTwainStuffsUIIListItem = new ListItem("TwainStuffsUIIListItem", ItemsViewUIItemList);
                    fTwainStuffsUIIListItem.UIMap.Scope = UIASeachScope.Children;
                    fTwainStuffsUIIListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7");
                    fTwainStuffsUIIListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                    fTwainStuffsUIIListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Twain_Stuffs");
                }

                return fTwainStuffsUIIListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UIDup7Image
        /// </summary>
        public Image UIDup7Image
        {
            get
            {
                if (null == fUIDup7Image)
                {
                    fUIDup7Image = new Image("UIDup7Image", TwainStuffsUIIListItem);
                    fUIDup7Image.UIMap.Scope = UIASeachScope.Children;
                    fUIDup7Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                }

                return fUIDup7Image;
            }
        }

        /// <summary>
        /// Gets Reference to NameUIPropertySDup7Edit
        /// </summary>
        public Edit NameUIPropertySDup7Edit
        {
            get
            {
                if (null == fNameUIPropertySDup7Edit)
                {
                    fNameUIPropertySDup7Edit = new Edit("NameUIPropertySDup7Edit", TwainStuffsUIIListItem);
                    fNameUIPropertySDup7Edit.UIMap.Scope = UIASeachScope.Children;
                    fNameUIPropertySDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                    fNameUIPropertySDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fNameUIPropertySDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameUIPropertySDup7Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TypeUIPropertySDup7Edit
        /// </summary>
        public Edit TypeUIPropertySDup7Edit
        {
            get
            {
                if (null == fTypeUIPropertySDup7Edit)
                {
                    fTypeUIPropertySDup7Edit = new Edit("TypeUIPropertySDup7Edit", TwainStuffsUIIListItem);
                    fTypeUIPropertySDup7Edit.UIMap.Scope = UIASeachScope.Children;
                    fTypeUIPropertySDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                    fTypeUIPropertySDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fTypeUIPropertySDup7Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                }

                return fTypeUIPropertySDup7Edit;
            }
        }

        /// <summary>
        /// Gets Reference to A1csvUIItem8ListItem
        /// </summary>
        public ListItem A1csvUIItem8ListItem
        {
            get
            {
                if (null == fA1csvUIItem8ListItem)
                {
                    fA1csvUIItem8ListItem = new ListItem("A1csvUIItem8ListItem", ItemsViewUIItemList);
                    fA1csvUIItem8ListItem.UIMap.Scope = UIASeachScope.Children;
                    fA1csvUIItem8ListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8");
                    fA1csvUIItem8ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                    fA1csvUIItem8ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"1.csv");
                }

                return fA1csvUIItem8ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UIDup8Image
        /// </summary>
        public Image UIDup8Image
        {
            get
            {
                if (null == fUIDup8Image)
                {
                    fUIDup8Image = new Image("UIDup8Image", A1csvUIItem8ListItem);
                    fUIDup8Image.UIMap.Scope = UIASeachScope.Children;
                    fUIDup8Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                }

                return fUIDup8Image;
            }
        }

        /// <summary>
        /// Gets Reference to NameUIPropertySDup8Edit
        /// </summary>
        public Edit NameUIPropertySDup8Edit
        {
            get
            {
                if (null == fNameUIPropertySDup8Edit)
                {
                    fNameUIPropertySDup8Edit = new Edit("NameUIPropertySDup8Edit", A1csvUIItem8ListItem);
                    fNameUIPropertySDup8Edit.UIMap.Scope = UIASeachScope.Children;
                    fNameUIPropertySDup8Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                    fNameUIPropertySDup8Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fNameUIPropertySDup8Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameUIPropertySDup8Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TypeUIPropertySDup8Edit
        /// </summary>
        public Edit TypeUIPropertySDup8Edit
        {
            get
            {
                if (null == fTypeUIPropertySDup8Edit)
                {
                    fTypeUIPropertySDup8Edit = new Edit("TypeUIPropertySDup8Edit", A1csvUIItem8ListItem);
                    fTypeUIPropertySDup8Edit.UIMap.Scope = UIASeachScope.Children;
                    fTypeUIPropertySDup8Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                    fTypeUIPropertySDup8Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fTypeUIPropertySDup8Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                }

                return fTypeUIPropertySDup8Edit;
            }
        }

        /// <summary>
        /// Gets Reference to SizeUIPropertySDup0Edit
        /// </summary>
        public Edit SizeUIPropertySDup0Edit
        {
            get
            {
                if (null == fSizeUIPropertySDup0Edit)
                {
                    fSizeUIPropertySDup0Edit = new Edit("SizeUIPropertySDup0Edit", A1csvUIItem8ListItem);
                    fSizeUIPropertySDup0Edit.UIMap.Scope = UIASeachScope.Children;
                    fSizeUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.Size");
                    fSizeUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fSizeUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Size");
                }

                return fSizeUIPropertySDup0Edit;
            }
        }

        /// <summary>
        /// Gets Reference to A12csvUIItem9ListItem
        /// </summary>
        public ListItem A12csvUIItem9ListItem
        {
            get
            {
                if (null == fA12csvUIItem9ListItem)
                {
                    fA12csvUIItem9ListItem = new ListItem("A12csvUIItem9ListItem", ItemsViewUIItemList);
                    fA12csvUIItem9ListItem.UIMap.Scope = UIASeachScope.Children;
                    fA12csvUIItem9ListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9");
                    fA12csvUIItem9ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                    fA12csvUIItem9ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"12.csv");
                }

                return fA12csvUIItem9ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UIDup9Image
        /// </summary>
        public Image UIDup9Image
        {
            get
            {
                if (null == fUIDup9Image)
                {
                    fUIDup9Image = new Image("UIDup9Image", A12csvUIItem9ListItem);
                    fUIDup9Image.UIMap.Scope = UIASeachScope.Children;
                    fUIDup9Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                }

                return fUIDup9Image;
            }
        }

        /// <summary>
        /// Gets Reference to NameUIPropertySDup9Edit
        /// </summary>
        public Edit NameUIPropertySDup9Edit
        {
            get
            {
                if (null == fNameUIPropertySDup9Edit)
                {
                    fNameUIPropertySDup9Edit = new Edit("NameUIPropertySDup9Edit", A12csvUIItem9ListItem);
                    fNameUIPropertySDup9Edit.UIMap.Scope = UIASeachScope.Children;
                    fNameUIPropertySDup9Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                    fNameUIPropertySDup9Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fNameUIPropertySDup9Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameUIPropertySDup9Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TypeUIPropertySDup9Edit
        /// </summary>
        public Edit TypeUIPropertySDup9Edit
        {
            get
            {
                if (null == fTypeUIPropertySDup9Edit)
                {
                    fTypeUIPropertySDup9Edit = new Edit("TypeUIPropertySDup9Edit", A12csvUIItem9ListItem);
                    fTypeUIPropertySDup9Edit.UIMap.Scope = UIASeachScope.Children;
                    fTypeUIPropertySDup9Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                    fTypeUIPropertySDup9Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fTypeUIPropertySDup9Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                }

                return fTypeUIPropertySDup9Edit;
            }
        }

        /// <summary>
        /// Gets Reference to SizeUIPropertySDup1Edit
        /// </summary>
        public Edit SizeUIPropertySDup1Edit
        {
            get
            {
                if (null == fSizeUIPropertySDup1Edit)
                {
                    fSizeUIPropertySDup1Edit = new Edit("SizeUIPropertySDup1Edit", A12csvUIItem9ListItem);
                    fSizeUIPropertySDup1Edit.UIMap.Scope = UIASeachScope.Children;
                    fSizeUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.Size");
                    fSizeUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fSizeUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Size");
                }

                return fSizeUIPropertySDup1Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane FolderLayoutPanPane
        {
            get
            {
                if (null == fFolderLayoutPanPane)
                {
                    fFolderLayoutPanPane = new Pane("FolderLayoutPanPane", ExplorerPaneHWNPane);
                    fFolderLayoutPanPane.UIMap.Scope = UIASeachScope.Children;
                    fFolderLayoutPanPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Element");
                    fFolderLayoutPanPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FolderLayoutContainer");
                    fFolderLayoutPanPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Folder Layout Pane");
                }

                return fFolderLayoutPanPane;
            }
        }

        /// <summary>
        /// Gets Reference to DetailsPanePrevPane
        /// </summary>
        public Pane DetailsPanePrevPane
        {
            get
            {
                if (null == fDetailsPanePrevPane)
                {
                    fDetailsPanePrevPane = new Pane("DetailsPanePrevPane", FolderLayoutPanPane);
                    fDetailsPanePrevPane.UIMap.Scope = UIASeachScope.Children;
                    fDetailsPanePrevPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"BackgroundClear");
                    fDetailsPanePrevPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"PreviewBackground");
                    fDetailsPanePrevPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Details Pane");
                }

                return fDetailsPanePrevPane;
            }
        }

        /// <summary>
        /// Gets Reference to FilenameCIDLabeText
        /// </summary>
        public Text FilenameCIDLabeText
        {
            get
            {
                if (null == fFilenameCIDLabeText)
                {
                    fFilenameCIDLabeText = new Text("FilenameCIDLabeText", DetailsPanePrevPane);
                    fFilenameCIDLabeText.UIMap.Scope = UIASeachScope.Children;
                    fFilenameCIDLabeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SaveDialogLabel");
                    fFilenameCIDLabeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CIDLabel");
                    fFilenameCIDLabeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File name:");
                }

                return fFilenameCIDLabeText;
            }
        }

        /// <summary>
        /// Gets Reference to FilenameAppContComboBox
        /// </summary>
        public ComboBox FilenameAppContComboBox
        {
            get
            {
                if (null == fFilenameAppContComboBox)
                {
                    fFilenameAppContComboBox = new ComboBox("FilenameAppContComboBox", DetailsPanePrevPane);
                    fFilenameAppContComboBox.UIMap.Scope = UIASeachScope.Children;
                    fFilenameAppContComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FileNameControlHost");
                    fFilenameAppContComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AppControlHost");
                    fFilenameAppContComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File name:");
                }

                return fFilenameAppContComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to FilenameEdit100Edit
        /// </summary>
        public Edit FilenameEdit100Edit
        {
            get
            {
                if (null == fFilenameEdit100Edit)
                {
                    fFilenameEdit100Edit = new Edit("FilenameEdit100Edit", FilenameAppContComboBox);
                    fFilenameEdit100Edit.UIMap.Scope = UIASeachScope.Children;
                    fFilenameEdit100Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1001");
                    fFilenameEdit100Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Edit");
                    fFilenameEdit100Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File name:");
                }

                return fFilenameEdit100Edit;
            }
        }

        /// <summary>
        /// Gets Reference to FilenameComboLBList
        /// </summary>
        public List FilenameComboLBList
        {
            get
            {
                if (null == fFilenameComboLBList)
                {
                    fFilenameComboLBList = new List("FilenameComboLBList", FilenameAppContComboBox);
                    fFilenameComboLBList.UIMap.Scope = UIASeachScope.Children;
                    fFilenameComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                    fFilenameComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                    fFilenameComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File name:");
                }

                return fFilenameComboLBList;
            }
        }

        /// <summary>
        /// Gets Reference to DropDownButtonDDup0Button
        /// </summary>
        public Button DropDownButtonDDup0Button
        {
            get
            {
                if (null == fDropDownButtonDDup0Button)
                {
                    fDropDownButtonDDup0Button = new Button("DropDownButtonDDup0Button", FilenameAppContComboBox);
                    fDropDownButtonDDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fDropDownButtonDDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                    fDropDownButtonDDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                }

                return fDropDownButtonDDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to SaveastypeCIDLaText
        /// </summary>
        public Text SaveastypeCIDLaText
        {
            get
            {
                if (null == fSaveastypeCIDLaText)
                {
                    fSaveastypeCIDLaText = new Text("SaveastypeCIDLaText", DetailsPanePrevPane);
                    fSaveastypeCIDLaText.UIMap.Scope = UIASeachScope.Children;
                    fSaveastypeCIDLaText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SaveDialogLabel");
                    fSaveastypeCIDLaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CIDLabel");
                    fSaveastypeCIDLaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save as type:");
                }

                return fSaveastypeCIDLaText;
            }
        }

        /// <summary>
        /// Gets Reference to SaveastypeAppCoComboBox
        /// </summary>
        public ComboBox SaveastypeAppCoComboBox
        {
            get
            {
                if (null == fSaveastypeAppCoComboBox)
                {
                    fSaveastypeAppCoComboBox = new ComboBox("SaveastypeAppCoComboBox", DetailsPanePrevPane);
                    fSaveastypeAppCoComboBox.UIMap.Scope = UIASeachScope.Children;
                    fSaveastypeAppCoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FileTypeControlHost");
                    fSaveastypeAppCoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AppControlHost");
                    fSaveastypeAppCoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save as type:");
                }

                return fSaveastypeAppCoComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SaveastypeComboList
        /// </summary>
        public List SaveastypeComboList
        {
            get
            {
                if (null == fSaveastypeComboList)
                {
                    fSaveastypeComboList = new List("SaveastypeComboList", SaveastypeAppCoComboBox);
                    fSaveastypeComboList.UIMap.Scope = UIASeachScope.Children;
                    fSaveastypeComboList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                    fSaveastypeComboList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                    fSaveastypeComboList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save as type:");
                }

                return fSaveastypeComboList;
            }
        }

        /// <summary>
        /// Gets Reference to CommaseparatedvListItem
        /// </summary>
        public ListItem CommaseparatedvListItem
        {
            get
            {
                if (null == fCommaseparatedvListItem)
                {
                    fCommaseparatedvListItem = new ListItem("CommaseparatedvListItem", SaveastypeComboList);
                    fCommaseparatedvListItem.UIMap.Scope = UIASeachScope.Children;
                    fCommaseparatedvListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Comma separated values(*.csv)");
                }

                return fCommaseparatedvListItem;
            }
        }

        /// <summary>
        /// Gets Reference to AllFilesListItem
        /// </summary>
        public ListItem AllFilesListItem
        {
            get
            {
                if (null == fAllFilesListItem)
                {
                    fAllFilesListItem = new ListItem("AllFilesListItem", SaveastypeComboList);
                    fAllFilesListItem.UIMap.Scope = UIASeachScope.Children;
                    fAllFilesListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"All Files(*.*)");
                }

                return fAllFilesListItem;
            }
        }

        /// <summary>
        /// Gets Reference to DropDownButtonDDup1Button
        /// </summary>
        public Button DropDownButtonDDup1Button
        {
            get
            {
                if (null == fDropDownButtonDDup1Button)
                {
                    fDropDownButtonDDup1Button = new Button("DropDownButtonDDup1Button", SaveastypeAppCoComboBox);
                    fDropDownButtonDDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fDropDownButtonDDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                    fDropDownButtonDDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                }

                return fDropDownButtonDDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to SaveFieldsSaveDTree
        /// </summary>
        public Tree SaveFieldsSaveDTree
        {
            get
            {
                if (null == fSaveFieldsSaveDTree)
                {
                    fSaveFieldsSaveDTree = new Tree("SaveFieldsSaveDTree", DetailsPanePrevPane);
                    fSaveFieldsSaveDTree.UIMap.Scope = UIASeachScope.Children;
                    fSaveFieldsSaveDTree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SaveDialogPreviewMetadataInner");
                    fSaveFieldsSaveDTree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"SaveDialogPreviewMetadataInner");
                    fSaveFieldsSaveDTree.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save Fields");
                }

                return fSaveFieldsSaveDTree;
            }
        }

        /// <summary>
        /// Gets Reference to ApplicationContTree
        /// </summary>
        public Tree ApplicationContTree
        {
            get
            {
                if (null == fApplicationContTree)
                {
                    fApplicationContTree = new Tree("ApplicationContTree", ExplorerPaneHWNPane);
                    fApplicationContTree.UIMap.Scope = UIASeachScope.Children;
                    fApplicationContTree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AppControlsModuleInner");
                    fApplicationContTree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AppControlsModuleInner");
                    fApplicationContTree.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Application Controls");
                }

                return fApplicationContTree;
            }
        }

        /// <summary>
        /// Gets Reference to ToolbarWindow32Dup0ToolBar
        /// </summary>
        public ToolBar ToolbarWindow32Dup0ToolBar
        {
            get
            {
                if (null == fToolbarWindow32Dup0ToolBar)
                {
                    fToolbarWindow32Dup0ToolBar = new ToolBar("ToolbarWindow32Dup0ToolBar", ExportDeviceLisWindow);
                    fToolbarWindow32Dup0ToolBar.UIMap.Scope = UIASeachScope.Children;
                    fToolbarWindow32Dup0ToolBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ToolbarWindow32");
                }

                return fToolbarWindow32Dup0ToolBar;
            }
        }

        /// <summary>
        /// Gets Reference to HideFoldersItemButton
        /// </summary>
        public Button HideFoldersItemButton
        {
            get
            {
                if (null == fHideFoldersItemButton)
                {
                    fHideFoldersItemButton = new Button("HideFoldersItemButton", ToolbarWindow32Dup0ToolBar);
                    fHideFoldersItemButton.UIMap.Scope = UIASeachScope.Children;
                    fHideFoldersItemButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 103");
                    fHideFoldersItemButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hide Folders");
                }

                return fHideFoldersItemButton;
            }
        }

        /// <summary>
        /// Gets Reference to SaveButton1Button
        /// </summary>
        public Button SaveButton1Button
        {
            get
            {
                if (null == fSaveButton1Button)
                {
                    fSaveButton1Button = new Button("SaveButton1Button", ExportDeviceLisWindow);
                    fSaveButton1Button.UIMap.Scope = UIASeachScope.Children;
                    fSaveButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1");
                    fSaveButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fSaveButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save");
                }

                return fSaveButton1Button;
            }
        }

        /// <summary>
        /// Gets Reference to CancelButton2Button
        /// </summary>
        public Button CancelButton2Button
        {
            get
            {
                if (null == fCancelButton2Button)
                {
                    fCancelButton2Button = new Button("CancelButton2Button", ExportDeviceLisWindow);
                    fCancelButton2Button.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2");
                    fCancelButton2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButton2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelButton2Button;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarPane
        /// </summary>
        public Pane ScrollBarPane
        {
            get
            {
                if (null == fScrollBarPane)
                {
                    fScrollBarPane = new Pane("ScrollBarPane", ExportDeviceLisWindow);
                    fScrollBarPane.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarPane;
            }
        }

        /// <summary>
        /// Gets Reference to WorkerWPane
        /// </summary>
        public Pane WorkerWPane
        {
            get
            {
                if (null == fWorkerWPane)
                {
                    fWorkerWPane = new Pane("WorkerWPane", ExportDeviceLisWindow);
                    fWorkerWPane.UIMap.Scope = UIASeachScope.Children;
                    fWorkerWPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WorkerW");
                }

                return fWorkerWPane;
            }
        }

        /// <summary>
        /// Gets Reference to ReBarWindow3240Pane
        /// </summary>
        public Pane ReBarWindow3240Pane
        {
            get
            {
                if (null == fReBarWindow3240Pane)
                {
                    fReBarWindow3240Pane = new Pane("ReBarWindow3240Pane", WorkerWPane);
                    fReBarWindow3240Pane.UIMap.Scope = UIASeachScope.Children;
                    fReBarWindow3240Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"40965");
                    fReBarWindow3240Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ReBarWindow32");
                }

                return fReBarWindow3240Pane;
            }
        }

        /// <summary>
        /// Gets Reference to RebarBandDup0I0XCustom
        /// </summary>
        public Custom RebarBandDup0I0XCustom
        {
            get
            {
                if (null == fRebarBandDup0I0XCustom)
                {
                    fRebarBandDup0I0XCustom = new Custom("RebarBandDup0I0XCustom", ReBarWindow3240Pane);
                    fRebarBandDup0I0XCustom.UIMap.Scope = UIASeachScope.Children;
                    fRebarBandDup0I0XCustom.UIMap.Index = 0;
                    fRebarBandDup0I0XCustom.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rebar Band");
                }

                return fRebarBandDup0I0XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to TravelBandPane
        /// </summary>
        public Pane TravelBandPane
        {
            get
            {
                if (null == fTravelBandPane)
                {
                    fTravelBandPane = new Pane("TravelBandPane", RebarBandDup0I0XCustom);
                    fTravelBandPane.UIMap.Scope = UIASeachScope.Children;
                    fTravelBandPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TravelBand");
                }

                return fTravelBandPane;
            }
        }

        /// <summary>
        /// Gets Reference to ToolbarWindow32Dup1ToolBar
        /// </summary>
        public ToolBar ToolbarWindow32Dup1ToolBar
        {
            get
            {
                if (null == fToolbarWindow32Dup1ToolBar)
                {
                    fToolbarWindow32Dup1ToolBar = new ToolBar("ToolbarWindow32Dup1ToolBar", TravelBandPane);
                    fToolbarWindow32Dup1ToolBar.UIMap.Scope = UIASeachScope.Children;
                    fToolbarWindow32Dup1ToolBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ToolbarWindow32");
                }

                return fToolbarWindow32Dup1ToolBar;
            }
        }

        /// <summary>
        /// Gets Reference to BackItem256Button
        /// </summary>
        public Button BackItem256Button
        {
            get
            {
                if (null == fBackItem256Button)
                {
                    fBackItem256Button = new Button("BackItem256Button", ToolbarWindow32Dup1ToolBar);
                    fBackItem256Button.UIMap.Scope = UIASeachScope.Children;
                    fBackItem256Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 256");
                    fBackItem256Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back");
                }

                return fBackItem256Button;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardItem257Button
        /// </summary>
        public Button ForwardItem257Button
        {
            get
            {
                if (null == fForwardItem257Button)
                {
                    fForwardItem257Button = new Button("ForwardItem257Button", ToolbarWindow32Dup1ToolBar);
                    fForwardItem257Button.UIMap.Scope = UIASeachScope.Children;
                    fForwardItem257Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 257");
                    fForwardItem257Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward");
                }

                return fForwardItem257Button;
            }
        }

        /// <summary>
        /// Gets Reference to RecentPagesItemButton
        /// </summary>
        public Button RecentPagesItemButton
        {
            get
            {
                if (null == fRecentPagesItemButton)
                {
                    fRecentPagesItemButton = new Button("RecentPagesItemButton", ToolbarWindow32Dup1ToolBar);
                    fRecentPagesItemButton.UIMap.Scope = UIASeachScope.Children;
                    fRecentPagesItemButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 258");
                    fRecentPagesItemButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Recent Pages");
                }

                return fRecentPagesItemButton;
            }
        }

        /// <summary>
        /// Gets Reference to RebarBandDup1I1XCustom
        /// </summary>
        public Custom RebarBandDup1I1XCustom
        {
            get
            {
                if (null == fRebarBandDup1I1XCustom)
                {
                    fRebarBandDup1I1XCustom = new Custom("RebarBandDup1I1XCustom", ReBarWindow3240Pane);
                    fRebarBandDup1I1XCustom.UIMap.Scope = UIASeachScope.Children;
                    fRebarBandDup1I1XCustom.UIMap.Index = 1;
                    fRebarBandDup1I1XCustom.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rebar Band");
                }

                return fRebarBandDup1I1XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to AddressBandRootPane
        /// </summary>
        public Pane AddressBandRootPane
        {
            get
            {
                if (null == fAddressBandRootPane)
                {
                    fAddressBandRootPane = new Pane("AddressBandRootPane", RebarBandDup1I1XCustom);
                    fAddressBandRootPane.UIMap.Scope = UIASeachScope.Children;
                    fAddressBandRootPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"41477");
                    fAddressBandRootPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Address Band Root");
                }

                return fAddressBandRootPane;
            }
        }

        /// <summary>
        /// Gets Reference to msctlsprogressProgressBar
        /// </summary>
        public ProgressBar msctlsprogressProgressBar
        {
            get
            {
                if (null == fmsctlsprogressProgressBar)
                {
                    fmsctlsprogressProgressBar = new ProgressBar("msctlsprogressProgressBar", AddressBandRootPane);
                    fmsctlsprogressProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fmsctlsprogressProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"msctls_progress32");
                }

                return fmsctlsprogressProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to BreadcrumbParenPane
        /// </summary>
        public Pane BreadcrumbParenPane
        {
            get
            {
                if (null == fBreadcrumbParenPane)
                {
                    fBreadcrumbParenPane = new Pane("BreadcrumbParenPane", msctlsprogressProgressBar);
                    fBreadcrumbParenPane.UIMap.Scope = UIASeachScope.Children;
                    fBreadcrumbParenPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Breadcrumb Parent");
                }

                return fBreadcrumbParenPane;
            }
        }

        /// <summary>
        /// Gets Reference to AddressDesktopTToolBar
        /// </summary>
        public ToolBar AddressDesktopTToolBar
        {
            get
            {
                if (null == fAddressDesktopTToolBar)
                {
                    fAddressDesktopTToolBar = new ToolBar("AddressDesktopTToolBar", BreadcrumbParenPane);
                    fAddressDesktopTToolBar.UIMap.Scope = UIASeachScope.Children;
                    fAddressDesktopTToolBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1001");
                    fAddressDesktopTToolBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ToolbarWindow32");
                    fAddressDesktopTToolBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address: Desktop");
                }

                return fAddressDesktopTToolBar;
            }
        }

        /// <summary>
        /// Gets Reference to DesktopItem1280SplitButton
        /// </summary>
        public SplitButton DesktopItem1280SplitButton
        {
            get
            {
                if (null == fDesktopItem1280SplitButton)
                {
                    fDesktopItem1280SplitButton = new SplitButton("DesktopItem1280SplitButton", AddressDesktopTToolBar);
                    fDesktopItem1280SplitButton.UIMap.Scope = UIASeachScope.Children;
                    fDesktopItem1280SplitButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1280");
                    fDesktopItem1280SplitButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Desktop");
                }

                return fDesktopItem1280SplitButton;
            }
        }

        /// <summary>
        /// Gets Reference to ToolbarWindow32Dup2ToolBar
        /// </summary>
        public ToolBar ToolbarWindow32Dup2ToolBar
        {
            get
            {
                if (null == fToolbarWindow32Dup2ToolBar)
                {
                    fToolbarWindow32Dup2ToolBar = new ToolBar("ToolbarWindow32Dup2ToolBar", msctlsprogressProgressBar);
                    fToolbarWindow32Dup2ToolBar.UIMap.Scope = UIASeachScope.Children;
                    fToolbarWindow32Dup2ToolBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ToolbarWindow32");
                }

                return fToolbarWindow32Dup2ToolBar;
            }
        }

        /// <summary>
        /// Gets Reference to PreviousLocatioButton
        /// </summary>
        public Button PreviousLocatioButton
        {
            get
            {
                if (null == fPreviousLocatioButton)
                {
                    fPreviousLocatioButton = new Button("PreviousLocatioButton", ToolbarWindow32Dup2ToolBar);
                    fPreviousLocatioButton.UIMap.Scope = UIASeachScope.Children;
                    fPreviousLocatioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 202");
                    fPreviousLocatioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Previous Locations");
                }

                return fPreviousLocatioButton;
            }
        }

        /// <summary>
        /// Gets Reference to RebarBandDup2I2XCustom
        /// </summary>
        public Custom RebarBandDup2I2XCustom
        {
            get
            {
                if (null == fRebarBandDup2I2XCustom)
                {
                    fRebarBandDup2I2XCustom = new Custom("RebarBandDup2I2XCustom", ReBarWindow3240Pane);
                    fRebarBandDup2I2XCustom.UIMap.Scope = UIASeachScope.Children;
                    fRebarBandDup2I2XCustom.UIMap.Index = 2;
                    fRebarBandDup2I2XCustom.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rebar Band");
                }

                return fRebarBandDup2I2XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to UniversalSearchPane
        /// </summary>
        public Pane UniversalSearchPane
        {
            get
            {
                if (null == fUniversalSearchPane)
                {
                    fUniversalSearchPane = new Pane("UniversalSearchPane", RebarBandDup2I2XCustom);
                    fUniversalSearchPane.UIMap.Scope = UIASeachScope.Children;
                    fUniversalSearchPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UniversalSearchBand");
                }

                return fUniversalSearchPane;
            }
        }

        /// <summary>
        /// Gets Reference to SearchBoxPane
        /// </summary>
        public Pane SearchBoxPane
        {
            get
            {
                if (null == fSearchBoxPane)
                {
                    fSearchBoxPane = new Pane("SearchBoxPane", UniversalSearchPane);
                    fSearchBoxPane.UIMap.Scope = UIASeachScope.Children;
                    fSearchBoxPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Search Box");
                }

                return fSearchBoxPane;
            }
        }

        /// <summary>
        /// Gets Reference to SearchEditBoxWrPane
        /// </summary>
        public Pane SearchEditBoxWrPane
        {
            get
            {
                if (null == fSearchEditBoxWrPane)
                {
                    fSearchEditBoxWrPane = new Pane("SearchEditBoxWrPane", SearchBoxPane);
                    fSearchEditBoxWrPane.UIMap.Scope = UIASeachScope.Children;
                    fSearchEditBoxWrPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"SearchEditBoxWrapperClass");
                }

                return fSearchEditBoxWrPane;
            }
        }

        /// <summary>
        /// Gets Reference to SearchDesktopSePane
        /// </summary>
        public Pane SearchDesktopSePane
        {
            get
            {
                if (null == fSearchDesktopSePane)
                {
                    fSearchDesktopSePane = new Pane("SearchDesktopSePane", SearchEditBoxWrPane);
                    fSearchDesktopSePane.UIMap.Scope = UIASeachScope.Children;
                    fSearchDesktopSePane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"SearchBox");
                    fSearchDesktopSePane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @" Search Desktop");
                }

                return fSearchDesktopSePane;
            }
        }

        /// <summary>
        /// Gets Reference to SearchBoxSearchEdit
        /// </summary>
        public Edit SearchBoxSearchEdit
        {
            get
            {
                if (null == fSearchBoxSearchEdit)
                {
                    fSearchBoxSearchEdit = new Edit("SearchBoxSearchEdit", SearchDesktopSePane);
                    fSearchBoxSearchEdit.UIMap.Scope = UIASeachScope.Children;
                    fSearchBoxSearchEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SearchEditBox");
                    fSearchBoxSearchEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"SearchEditBox");
                    fSearchBoxSearchEdit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search Box");
                }

                return fSearchBoxSearchEdit;
            }
        }

        /// <summary>
        /// Gets Reference to SearchButtonSeaButton
        /// </summary>
        public Button SearchButtonSeaButton
        {
            get
            {
                if (null == fSearchButtonSeaButton)
                {
                    fSearchButtonSeaButton = new Button("SearchButtonSeaButton", SearchDesktopSePane);
                    fSearchButtonSeaButton.UIMap.Scope = UIASeachScope.Children;
                    fSearchButtonSeaButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SearchBoxSearchButton");
                    fSearchButtonSeaButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fSearchButtonSeaButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search");
                }

                return fSearchButtonSeaButton;
            }
        }

        /// <summary>
        /// Gets Reference to ExportDeviceLisTitleBar
        /// </summary>
        public TitleBar ExportDeviceLisTitleBar
        {
            get
            {
                if (null == fExportDeviceLisTitleBar)
                {
                    fExportDeviceLisTitleBar = new TitleBar("ExportDeviceLisTitleBar", ExportDeviceLisWindow);
                    fExportDeviceLisTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fExportDeviceLisTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    fExportDeviceLisTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export Device List To");
                }

                return fExportDeviceLisTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemMenuBarSyDup0MenuBar
        /// </summary>
        public MenuBar SystemMenuBarSyDup0MenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyDup0MenuBar)
                {
                    fSystemMenuBarSyDup0MenuBar = new MenuBar("SystemMenuBarSyDup0MenuBar", ExportDeviceLisTitleBar);
                    fSystemMenuBarSyDup0MenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                }

                return fSystemMenuBarSyDup0MenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemItem1Dup0MenuItem
        /// </summary>
        public MenuItem SystemItem1Dup0MenuItem
        {
            get
            {
                if (null == fSystemItem1Dup0MenuItem)
                {
                    fSystemItem1Dup0MenuItem = new MenuItem("SystemItem1Dup0MenuItem", SystemMenuBarSyDup0MenuBar);
                    fSystemItem1Dup0MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                }

                return fSystemItem1Dup0MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to CloseCloseDup0Button
        /// </summary>
        public Button CloseCloseDup0Button
        {
            get
            {
                if (null == fCloseCloseDup0Button)
                {
                    fCloseCloseDup0Button = new Button("CloseCloseDup0Button", ExportDeviceLisTitleBar);
                    fCloseCloseDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                }

                return fCloseCloseDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to HPDigitalSendinTitleBar
        /// </summary>
        public TitleBar HPDigitalSendinTitleBar
        {
            get
            {
                if (null == fHPDigitalSendinTitleBar)
                {
                    fHPDigitalSendinTitleBar = new TitleBar("HPDigitalSendinTitleBar", HPDigitalSendinWindow);
                    fHPDigitalSendinTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Digital Sending Software Configuration (Server IP Address: 15.75.40.105)");
                }

                return fHPDigitalSendinTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemMenuBarSyDup1MenuBar
        /// </summary>
        public MenuBar SystemMenuBarSyDup1MenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyDup1MenuBar)
                {
                    fSystemMenuBarSyDup1MenuBar = new MenuBar("SystemMenuBarSyDup1MenuBar", HPDigitalSendinTitleBar);
                    fSystemMenuBarSyDup1MenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                }

                return fSystemMenuBarSyDup1MenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemItem1Dup1MenuItem
        /// </summary>
        public MenuItem SystemItem1Dup1MenuItem
        {
            get
            {
                if (null == fSystemItem1Dup1MenuItem)
                {
                    fSystemItem1Dup1MenuItem = new MenuItem("SystemItem1Dup1MenuItem", SystemMenuBarSyDup1MenuBar);
                    fSystemItem1Dup1MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                }

                return fSystemItem1Dup1MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to MinimizeMinimizButton
        /// </summary>
        public Button MinimizeMinimizButton
        {
            get
            {
                if (null == fMinimizeMinimizButton)
                {
                    fMinimizeMinimizButton = new Button("MinimizeMinimizButton", HPDigitalSendinTitleBar);
                    fMinimizeMinimizButton.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                    fMinimizeMinimizButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                }

                return fMinimizeMinimizButton;
            }
        }

        /// <summary>
        /// Gets Reference to MaximizeMaximizButton
        /// </summary>
        public Button MaximizeMaximizButton
        {
            get
            {
                if (null == fMaximizeMaximizButton)
                {
                    fMaximizeMaximizButton = new Button("MaximizeMaximizButton", HPDigitalSendinTitleBar);
                    fMaximizeMaximizButton.UIMap.Scope = UIASeachScope.Children;
                    fMaximizeMaximizButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                    fMaximizeMaximizButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                }

                return fMaximizeMaximizButton;
            }
        }

        /// <summary>
        /// Gets Reference to CloseCloseDup1Button
        /// </summary>
        public Button CloseCloseDup1Button
        {
            get
            {
                if (null == fCloseCloseDup1Button)
                {
                    fCloseCloseDup1Button = new Button("CloseCloseDup1Button", HPDigitalSendinTitleBar);
                    fCloseCloseDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                }

                return fCloseCloseDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to HelpButtonCB8CFButton
        /// </summary>
        public Button HelpButtonCB8CFButton
        {
            get
            {
                if (null == fHelpButtonCB8CFButton)
                {
                    fHelpButtonCB8CFButton = new Button("HelpButtonCB8CFButton", HPDigitalSendinWindow);
                    fHelpButtonCB8CFButton.UIMap.Scope = UIASeachScope.Children;
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CB8CF0C3-DFBE-49b8-B09B-03A34F5D4186");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpButtonCB8CFButton;
            }
        }

        /// <summary>
        /// Gets Reference to HelpTextBlockText
        /// </summary>
        public Text HelpTextBlockText
        {
            get
            {
                if (null == fHelpTextBlockText)
                {
                    fHelpTextBlockText = new Text("HelpTextBlockText", HelpButtonCB8CFButton);
                    fHelpTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHelpTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ApplyButton61E2Button
        /// </summary>
        public Button ApplyButton61E2Button
        {
            get
            {
                if (null == fApplyButton61E2Button)
                {
                    fApplyButton61E2Button = new Button("ApplyButton61E2Button", HPDigitalSendinWindow);
                    fApplyButton61E2Button.UIMap.Scope = UIASeachScope.Children;
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"61E2369B-F53B-4662-A361-B3034C4EFF67");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyButton61E2Button;
            }
        }

        /// <summary>
        /// Gets Reference to ApplyTextBlockText
        /// </summary>
        public Text ApplyTextBlockText
        {
            get
            {
                if (null == fApplyTextBlockText)
                {
                    fApplyTextBlockText = new Text("ApplyTextBlockText", ApplyButton61E2Button);
                    fApplyTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to CancelButton65CButton
        /// </summary>
        public Button CancelButton65CButton
        {
            get
            {
                if (null == fCancelButton65CButton)
                {
                    fCancelButton65CButton = new Button("CancelButton65CButton", HPDigitalSendinWindow);
                    fCancelButton65CButton.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"65C76204-7AB5-4681-B7FD-2D8F02DA6D4B");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelButton65CButton;
            }
        }

        /// <summary>
        /// Gets Reference to CancelTextBlockText
        /// </summary>
        public Text CancelTextBlockText
        {
            get
            {
                if (null == fCancelTextBlockText)
                {
                    fCancelTextBlockText = new Text("CancelTextBlockText", CancelButton65CButton);
                    fCancelTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fCancelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCancelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to OKButtonCC2EF49Button
        /// </summary>
        public Button OKButtonCC2EF49Button
        {
            get
            {
                if (null == fOKButtonCC2EF49Button)
                {
                    fOKButtonCC2EF49Button = new Button("OKButtonCC2EF49Button", HPDigitalSendinWindow);
                    fOKButtonCC2EF49Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CC2EF491-0BD1-4ac5-9D00-AA61A9D6BA0C");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKButtonCC2EF49Button;
            }
        }

        /// <summary>
        /// Gets Reference to OKTextBlockText
        /// </summary>
        public Text OKTextBlockText
        {
            get
            {
                if (null == fOKTextBlockText)
                {
                    fOKTextBlockText = new Text("OKTextBlockText", OKButtonCC2EF49Button);
                    fOKTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fOKTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOKTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to TabControlec0fdTab
        /// </summary>
        public Tab TabControlec0fdTab
        {
            get
            {
                if (null == fTabControlec0fdTab)
                {
                    fTabControlec0fdTab = new Tab("TabControlec0fdTab", HPDigitalSendinWindow);
                    fTabControlec0fdTab.UIMap.Scope = UIASeachScope.Children;
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ec0fd6cd-2ab8-482f-96a5-d1fa158f38d1");
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                }

                return fTabControlec0fdTab;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup0TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup0TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup0TabItem)
                {
                    fSystemWindowsCoDup0TabItem = new TabItem("SystemWindowsCoDup0TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup0TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1e2be878-0c03-4404-988c-54d0df925f0f");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup0TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralTextmGenText
        /// </summary>
        public Text GeneralTextmGenText
        {
            get
            {
                if (null == fGeneralTextmGenText)
                {
                    fGeneralTextmGenText = new Text("GeneralTextmGenText", SystemWindowsCoDup0TabItem);
                    fGeneralTextmGenText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextmGenText;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralTextBlocText
        /// </summary>
        public Text GeneralTextBlocText
        {
            get
            {
                if (null == fGeneralTextBlocText)
                {
                    fGeneralTextBlocText = new Text("GeneralTextBlocText", GeneralTextmGenText);
                    fGeneralTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to Text933345b04e3Text
        /// </summary>
        public Text Text933345b04e3Text
        {
            get
            {
                if (null == fText933345b04e3Text)
                {
                    fText933345b04e3Text = new Text("Text933345b04e3Text", SystemWindowsCoDup0TabItem);
                    fText933345b04e3Text.UIMap.Scope = UIASeachScope.Children;
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"933345b0-4e39-44d3-a511-0077f3176ca4");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText933345b04e3Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text786caf67344Text
        /// </summary>
        public Text Text786caf67344Text
        {
            get
            {
                if (null == fText786caf67344Text)
                {
                    fText786caf67344Text = new Text("Text786caf67344Text", SystemWindowsCoDup0TabItem);
                    fText786caf67344Text.UIMap.Scope = UIASeachScope.Children;
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"786caf67-344f-4ddc-83a5-b9431fb36731");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText786caf67344Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup1TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup1TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup1TabItem)
                {
                    fSystemWindowsCoDup1TabItem = new TabItem("SystemWindowsCoDup1TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup1TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4e90d18a-f33c-43c0-8505-08f4a17169b5");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup1TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationTDup0Text
        /// </summary>
        public Text AuthenticationTDup0Text
        {
            get
            {
                if (null == fAuthenticationTDup0Text)
                {
                    fAuthenticationTDup0Text = new Text("AuthenticationTDup0Text", SystemWindowsCoDup1TabItem);
                    fAuthenticationTDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationTDup1Text
        /// </summary>
        public Text AuthenticationTDup1Text
        {
            get
            {
                if (null == fAuthenticationTDup1Text)
                {
                    fAuthenticationTDup1Text = new Text("AuthenticationTDup1Text", AuthenticationTDup0Text);
                    fAuthenticationTDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text31EC91730B9Text
        /// </summary>
        public Text Text31EC91730B9Text
        {
            get
            {
                if (null == fText31EC91730B9Text)
                {
                    fText31EC91730B9Text = new Text("Text31EC91730B9Text", SystemWindowsCoDup1TabItem);
                    fText31EC91730B9Text.UIMap.Scope = UIASeachScope.Children;
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"31EC9173-0B98-4d46-BC99-7DF8EA2BE02F");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText31EC91730B9Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextA479C271445Text
        /// </summary>
        public Text TextA479C271445Text
        {
            get
            {
                if (null == fTextA479C271445Text)
                {
                    fTextA479C271445Text = new Text("TextA479C271445Text", SystemWindowsCoDup1TabItem);
                    fTextA479C271445Text.UIMap.Scope = UIASeachScope.Children;
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A479C271-445D-43f1-864D-7503428703E4");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextA479C271445Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup2TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup2TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup2TabItem)
                {
                    fSystemWindowsCoDup2TabItem = new TabItem("SystemWindowsCoDup2TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup2TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33A07ED3-E1EE-411e-B583-7D0A3374100F");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup2TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to EmailTextmEmailText
        /// </summary>
        public Text EmailTextmEmailText
        {
            get
            {
                if (null == fEmailTextmEmailText)
                {
                    fEmailTextmEmailText = new Text("EmailTextmEmailText", SystemWindowsCoDup2TabItem);
                    fEmailTextmEmailText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                }

                return fEmailTextmEmailText;
            }
        }

        /// <summary>
        /// Gets Reference to EmailTextBlockText
        /// </summary>
        public Text EmailTextBlockText
        {
            get
            {
                if (null == fEmailTextBlockText)
                {
                    fEmailTextBlockText = new Text("EmailTextBlockText", EmailTextmEmailText);
                    fEmailTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                }

                return fEmailTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to Text32de714a8bdText
        /// </summary>
        public Text Text32de714a8bdText
        {
            get
            {
                if (null == fText32de714a8bdText)
                {
                    fText32de714a8bdText = new Text("Text32de714a8bdText", SystemWindowsCoDup2TabItem);
                    fText32de714a8bdText.UIMap.Scope = UIASeachScope.Children;
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"32de714a-8bda-4f11-bf20-b9a56b5f18bc");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText32de714a8bdText;
            }
        }

        /// <summary>
        /// Gets Reference to Text3b2a8761f4fText
        /// </summary>
        public Text Text3b2a8761f4fText
        {
            get
            {
                if (null == fText3b2a8761f4fText)
                {
                    fText3b2a8761f4fText = new Text("Text3b2a8761f4fText", SystemWindowsCoDup2TabItem);
                    fText3b2a8761f4fText.UIMap.Scope = UIASeachScope.Children;
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3b2a8761-f4f6-41b1-b08c-9c33744bdc43");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText3b2a8761f4fText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockDup0Text
        /// </summary>
        public Text TextBlockDup0Text
        {
            get
            {
                if (null == fTextBlockDup0Text)
                {
                    fTextBlockDup0Text = new Text("TextBlockDup0Text", Text3b2a8761f4fText);
                    fTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup3TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup3TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup3TabItem)
                {
                    fSystemWindowsCoDup3TabItem = new TabItem("SystemWindowsCoDup3TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4f116988-2b22-473f-bca3-094589a44954");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to FaxTextmFaxTabLText
        /// </summary>
        public Text FaxTextmFaxTabLText
        {
            get
            {
                if (null == fFaxTextmFaxTabLText)
                {
                    fFaxTextmFaxTabLText = new Text("FaxTextmFaxTabLText", SystemWindowsCoDup3TabItem);
                    fFaxTextmFaxTabLText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextmFaxTabLText;
            }
        }

        /// <summary>
        /// Gets Reference to FaxTextBlockText
        /// </summary>
        public Text FaxTextBlockText
        {
            get
            {
                if (null == fFaxTextBlockText)
                {
                    fFaxTextBlockText = new Text("FaxTextBlockText", FaxTextmFaxTabLText);
                    fFaxTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to TextD1ED4F16F38Text
        /// </summary>
        public Text TextD1ED4F16F38Text
        {
            get
            {
                if (null == fTextD1ED4F16F38Text)
                {
                    fTextD1ED4F16F38Text = new Text("TextD1ED4F16F38Text", SystemWindowsCoDup3TabItem);
                    fTextD1ED4F16F38Text.UIMap.Scope = UIASeachScope.Children;
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D1ED4F16-F389-4dfd-A884-D258EDB48C11");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTextD1ED4F16F38Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text7DDE04FD251Text
        /// </summary>
        public Text Text7DDE04FD251Text
        {
            get
            {
                if (null == fText7DDE04FD251Text)
                {
                    fText7DDE04FD251Text = new Text("Text7DDE04FD251Text", SystemWindowsCoDup3TabItem);
                    fText7DDE04FD251Text.UIMap.Scope = UIASeachScope.Children;
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7DDE04FD-2519-44c2-A212-67B0838E1C91");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText7DDE04FD251Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup4TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup4TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup4TabItem)
                {
                    fSystemWindowsCoDup4TabItem = new TabItem("SystemWindowsCoDup4TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup4TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ff96a045-6e12-4ce3-ba85-b65d16c39ffb");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup4TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoFolderTexDup0Text
        /// </summary>
        public Text SendtoFolderTexDup0Text
        {
            get
            {
                if (null == fSendtoFolderTexDup0Text)
                {
                    fSendtoFolderTexDup0Text = new Text("SendtoFolderTexDup0Text", SystemWindowsCoDup4TabItem);
                    fSendtoFolderTexDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoFolderTexDup1Text
        /// </summary>
        public Text SendtoFolderTexDup1Text
        {
            get
            {
                if (null == fSendtoFolderTexDup1Text)
                {
                    fSendtoFolderTexDup1Text = new Text("SendtoFolderTexDup1Text", SendtoFolderTexDup0Text);
                    fSendtoFolderTexDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text7a57f43ecb1Text
        /// </summary>
        public Text Text7a57f43ecb1Text
        {
            get
            {
                if (null == fText7a57f43ecb1Text)
                {
                    fText7a57f43ecb1Text = new Text("Text7a57f43ecb1Text", SystemWindowsCoDup4TabItem);
                    fText7a57f43ecb1Text.UIMap.Scope = UIASeachScope.Children;
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText7a57f43ecb1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text654b650dd19Text
        /// </summary>
        public Text Text654b650dd19Text
        {
            get
            {
                if (null == fText654b650dd19Text)
                {
                    fText654b650dd19Text = new Text("Text654b650dd19Text", SystemWindowsCoDup4TabItem);
                    fText654b650dd19Text.UIMap.Scope = UIASeachScope.Children;
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText654b650dd19Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup5TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup5TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup5TabItem)
                {
                    fSystemWindowsCoDup5TabItem = new TabItem("SystemWindowsCoDup5TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup5TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"38feb495-2893-4d8b-8961-31ebc2a3bd56");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup5TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to WorkflowsTextmWText
        /// </summary>
        public Text WorkflowsTextmWText
        {
            get
            {
                if (null == fWorkflowsTextmWText)
                {
                    fWorkflowsTextmWText = new Text("WorkflowsTextmWText", SystemWindowsCoDup5TabItem);
                    fWorkflowsTextmWText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                }

                return fWorkflowsTextmWText;
            }
        }

        /// <summary>
        /// Gets Reference to WorkflowsTextBlText
        /// </summary>
        public Text WorkflowsTextBlText
        {
            get
            {
                if (null == fWorkflowsTextBlText)
                {
                    fWorkflowsTextBlText = new Text("WorkflowsTextBlText", WorkflowsTextmWText);
                    fWorkflowsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                }

                return fWorkflowsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to Text22D9C34E84CText
        /// </summary>
        public Text Text22D9C34E84CText
        {
            get
            {
                if (null == fText22D9C34E84CText)
                {
                    fText22D9C34E84CText = new Text("Text22D9C34E84CText", SystemWindowsCoDup5TabItem);
                    fText22D9C34E84CText.UIMap.Scope = UIASeachScope.Children;
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22D9C34E-84C8-4995-AC9E-5B46F8284284");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText22D9C34E84CText;
            }
        }

        /// <summary>
        /// Gets Reference to TextC8D15BD39C8Text
        /// </summary>
        public Text TextC8D15BD39C8Text
        {
            get
            {
                if (null == fTextC8D15BD39C8Text)
                {
                    fTextC8D15BD39C8Text = new Text("TextC8D15BD39C8Text", SystemWindowsCoDup5TabItem);
                    fTextC8D15BD39C8Text.UIMap.Scope = UIASeachScope.Children;
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C8D15BD3-9C8D-484c-A5E2-309CA8AA6C56");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextC8D15BD39C8Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup6TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup6TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup6TabItem)
                {
                    fSystemWindowsCoDup6TabItem = new TabItem("SystemWindowsCoDup6TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup6TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b8c06323-208e-4239-a523-a025661e0eab");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup6TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingTextmText
        /// </summary>
        public Text AddressingTextmText
        {
            get
            {
                if (null == fAddressingTextmText)
                {
                    fAddressingTextmText = new Text("AddressingTextmText", SystemWindowsCoDup6TabItem);
                    fAddressingTextmText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextmText;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingTextBText
        /// </summary>
        public Text AddressingTextBText
        {
            get
            {
                if (null == fAddressingTextBText)
                {
                    fAddressingTextBText = new Text("AddressingTextBText", AddressingTextmText);
                    fAddressingTextBText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to Text47EB5CBA4D1Text
        /// </summary>
        public Text Text47EB5CBA4D1Text
        {
            get
            {
                if (null == fText47EB5CBA4D1Text)
                {
                    fText47EB5CBA4D1Text = new Text("Text47EB5CBA4D1Text", SystemWindowsCoDup6TabItem);
                    fText47EB5CBA4D1Text.UIMap.Scope = UIASeachScope.Children;
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"47EB5CBA-4D1C-4eee-AD64-E26BDA31A3AC");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText47EB5CBA4D1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text0757E148179Text
        /// </summary>
        public Text Text0757E148179Text
        {
            get
            {
                if (null == fText0757E148179Text)
                {
                    fText0757E148179Text = new Text("Text0757E148179Text", SystemWindowsCoDup6TabItem);
                    fText0757E148179Text.UIMap.Scope = UIASeachScope.Children;
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0757E148-1794-4a5d-B378-6BE8049F65E1");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText0757E148179Text;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceConfiguraTabItem
        /// </summary>
        public TabItem DeviceConfiguraTabItem
        {
            get
            {
                if (null == fDeviceConfiguraTabItem)
                {
                    fDeviceConfiguraTabItem = new TabItem("DeviceConfiguraTabItem", TabControlec0fdTab);
                    fDeviceConfiguraTabItem.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6DF1E016-517F-40e4-A63E-CD48D560192F");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                }

                return fDeviceConfiguraTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceConfiguraText
        /// </summary>
        public Text DeviceConfiguraText
        {
            get
            {
                if (null == fDeviceConfiguraText)
                {
                    fDeviceConfiguraText = new Text("DeviceConfiguraText", DeviceConfiguraTabItem);
                    fDeviceConfiguraText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                }

                return fDeviceConfiguraText;
            }
        }

        /// <summary>
        /// Gets Reference to ServiceConfigurCustom
        /// </summary>
        public Custom ServiceConfigurCustom
        {
            get
            {
                if (null == fServiceConfigurCustom)
                {
                    fServiceConfigurCustom = new Custom("ServiceConfigurCustom", DeviceConfiguraTabItem);
                    fServiceConfigurCustom.UIMap.Scope = UIASeachScope.Children;
                    fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mServiceDeviceTab");
                    fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ServiceConfigurationDeviceConfigTab");
                }

                return fServiceConfigurCustom;
            }
        }

        /// <summary>
        /// Gets Reference to GroupListText
        /// </summary>
        public Text GroupListText
        {
            get
            {
                if (null == fGroupListText)
                {
                    fGroupListText = new Text("GroupListText", ServiceConfigurCustom);
                    fGroupListText.UIMap.Scope = UIASeachScope.Children;
                    fGroupListText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGroupListText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Group List");
                }

                return fGroupListText;
            }
        }

        /// <summary>
        /// Gets Reference to GroupListTextBlText
        /// </summary>
        public Text GroupListTextBlText
        {
            get
            {
                if (null == fGroupListTextBlText)
                {
                    fGroupListTextBlText = new Text("GroupListTextBlText", GroupListText);
                    fGroupListTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fGroupListTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGroupListTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Group List");
                }

                return fGroupListTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceGroupsText
        /// </summary>
        public Text DeviceGroupsText
        {
            get
            {
                if (null == fDeviceGroupsText)
                {
                    fDeviceGroupsText = new Text("DeviceGroupsText", ServiceConfigurCustom);
                    fDeviceGroupsText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceGroupsText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDeviceGroupsText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Groups");
                }

                return fDeviceGroupsText;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceGroupsTexText
        /// </summary>
        public Text DeviceGroupsTexText
        {
            get
            {
                if (null == fDeviceGroupsTexText)
                {
                    fDeviceGroupsTexText = new Text("DeviceGroupsTexText", DeviceGroupsText);
                    fDeviceGroupsTexText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceGroupsTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceGroupsTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Groups");
                }

                return fDeviceGroupsTexText;
            }
        }

        /// <summary>
        /// Gets Reference to TreeView1416BDETree
        /// </summary>
        public Tree TreeView1416BDETree
        {
            get
            {
                if (null == fTreeView1416BDETree)
                {
                    fTreeView1416BDETree = new Tree("TreeView1416BDETree", ServiceConfigurCustom);
                    fTreeView1416BDETree.UIMap.Scope = UIASeachScope.Children;
                    fTreeView1416BDETree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1416BDED-715B-43e3-AAE3-D7E3FE37F0F0");
                    fTreeView1416BDETree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeView");
                }

                return fTreeView1416BDETree;
            }
        }

        /// <summary>
        /// Gets Reference to AllDevicesTreeVTreeItem
        /// </summary>
        public TreeItem AllDevicesTreeVTreeItem
        {
            get
            {
                if (null == fAllDevicesTreeVTreeItem)
                {
                    fAllDevicesTreeVTreeItem = new TreeItem("AllDevicesTreeVTreeItem", TreeView1416BDETree);
                    fAllDevicesTreeVTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fAllDevicesTreeVTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fAllDevicesTreeVTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"All Devices");
                }

                return fAllDevicesTreeVTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup0Button
        /// </summary>
        public Button ButtonExpanderDup0Button
        {
            get
            {
                if (null == fButtonExpanderDup0Button)
                {
                    fButtonExpanderDup0Button = new Button("ButtonExpanderDup0Button", AllDevicesTreeVTreeItem);
                    fButtonExpanderDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                    fButtonExpanderDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonExpanderDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to AllDevicesTextBText
        /// </summary>
        public Text AllDevicesTextBText
        {
            get
            {
                if (null == fAllDevicesTextBText)
                {
                    fAllDevicesTextBText = new Text("AllDevicesTextBText", AllDevicesTreeVTreeItem);
                    fAllDevicesTextBText.UIMap.Scope = UIASeachScope.Children;
                    fAllDevicesTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAllDevicesTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"All Devices");
                }

                return fAllDevicesTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to ggTreeViewItemTreeItem
        /// </summary>
        public TreeItem ggTreeViewItemTreeItem
        {
            get
            {
                if (null == fggTreeViewItemTreeItem)
                {
                    fggTreeViewItemTreeItem = new TreeItem("ggTreeViewItemTreeItem", AllDevicesTreeVTreeItem);
                    fggTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fggTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fggTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"gg");
                }

                return fggTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup1Button
        /// </summary>
        public Button ButtonExpanderDup1Button
        {
            get
            {
                if (null == fButtonExpanderDup1Button)
                {
                    fButtonExpanderDup1Button = new Button("ButtonExpanderDup1Button", ggTreeViewItemTreeItem);
                    fButtonExpanderDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                    fButtonExpanderDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonExpanderDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to ggTextBlockText
        /// </summary>
        public Text ggTextBlockText
        {
            get
            {
                if (null == fggTextBlockText)
                {
                    fggTextBlockText = new Text("ggTextBlockText", ggTreeViewItemTreeItem);
                    fggTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fggTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fggTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"gg");
                }

                return fggTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to GroupTreeViewItTreeItem
        /// </summary>
        public TreeItem GroupTreeViewItTreeItem
        {
            get
            {
                if (null == fGroupTreeViewItTreeItem)
                {
                    fGroupTreeViewItTreeItem = new TreeItem("GroupTreeViewItTreeItem", AllDevicesTreeVTreeItem);
                    fGroupTreeViewItTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fGroupTreeViewItTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fGroupTreeViewItTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Group");
                }

                return fGroupTreeViewItTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup2Button
        /// </summary>
        public Button ButtonExpanderDup2Button
        {
            get
            {
                if (null == fButtonExpanderDup2Button)
                {
                    fButtonExpanderDup2Button = new Button("ButtonExpanderDup2Button", GroupTreeViewItTreeItem);
                    fButtonExpanderDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                    fButtonExpanderDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonExpanderDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to GroupTextBlockText
        /// </summary>
        public Text GroupTextBlockText
        {
            get
            {
                if (null == fGroupTextBlockText)
                {
                    fGroupTextBlockText = new Text("GroupTextBlockText", GroupTreeViewItTreeItem);
                    fGroupTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fGroupTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGroupTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Group");
                }

                return fGroupTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to pRASHTreeViewItTreeItem
        /// </summary>
        public TreeItem pRASHTreeViewItTreeItem
        {
            get
            {
                if (null == fpRASHTreeViewItTreeItem)
                {
                    fpRASHTreeViewItTreeItem = new TreeItem("pRASHTreeViewItTreeItem", AllDevicesTreeVTreeItem);
                    fpRASHTreeViewItTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fpRASHTreeViewItTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fpRASHTreeViewItTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"pRASH");
                }

                return fpRASHTreeViewItTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup3Button
        /// </summary>
        public Button ButtonExpanderDup3Button
        {
            get
            {
                if (null == fButtonExpanderDup3Button)
                {
                    fButtonExpanderDup3Button = new Button("ButtonExpanderDup3Button", pRASHTreeViewItTreeItem);
                    fButtonExpanderDup3Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                    fButtonExpanderDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonExpanderDup3Button;
            }
        }

        /// <summary>
        /// Gets Reference to pRASHTextBlockText
        /// </summary>
        public Text pRASHTextBlockText
        {
            get
            {
                if (null == fpRASHTextBlockText)
                {
                    fpRASHTextBlockText = new Text("pRASHTextBlockText", pRASHTreeViewItTreeItem);
                    fpRASHTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fpRASHTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fpRASHTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"pRASH");
                }

                return fpRASHTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to pRASHANTreeViewTreeItem
        /// </summary>
        public TreeItem pRASHANTreeViewTreeItem
        {
            get
            {
                if (null == fpRASHANTreeViewTreeItem)
                {
                    fpRASHANTreeViewTreeItem = new TreeItem("pRASHANTreeViewTreeItem", AllDevicesTreeVTreeItem);
                    fpRASHANTreeViewTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fpRASHANTreeViewTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fpRASHANTreeViewTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"pRASHAN");
                }

                return fpRASHANTreeViewTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup4Button
        /// </summary>
        public Button ButtonExpanderDup4Button
        {
            get
            {
                if (null == fButtonExpanderDup4Button)
                {
                    fButtonExpanderDup4Button = new Button("ButtonExpanderDup4Button", pRASHANTreeViewTreeItem);
                    fButtonExpanderDup4Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup4Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                    fButtonExpanderDup4Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonExpanderDup4Button;
            }
        }

        /// <summary>
        /// Gets Reference to pRASHANTextBlocText
        /// </summary>
        public Text pRASHANTextBlocText
        {
            get
            {
                if (null == fpRASHANTextBlocText)
                {
                    fpRASHANTextBlocText = new Text("pRASHANTextBlocText", pRASHANTreeViewTreeItem);
                    fpRASHANTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fpRASHANTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fpRASHANTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"pRASHAN");
                }

                return fpRASHANTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to PrashanTreeViewTreeItem
        /// </summary>
        public TreeItem PrashanTreeViewTreeItem
        {
            get
            {
                if (null == fPrashanTreeViewTreeItem)
                {
                    fPrashanTreeViewTreeItem = new TreeItem("PrashanTreeViewTreeItem", AllDevicesTreeVTreeItem);
                    fPrashanTreeViewTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fPrashanTreeViewTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fPrashanTreeViewTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Prashan");
                }

                return fPrashanTreeViewTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup5Button
        /// </summary>
        public Button ButtonExpanderDup5Button
        {
            get
            {
                if (null == fButtonExpanderDup5Button)
                {
                    fButtonExpanderDup5Button = new Button("ButtonExpanderDup5Button", PrashanTreeViewTreeItem);
                    fButtonExpanderDup5Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup5Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                    fButtonExpanderDup5Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonExpanderDup5Button;
            }
        }

        /// <summary>
        /// Gets Reference to PrashanTextBlocText
        /// </summary>
        public Text PrashanTextBlocText
        {
            get
            {
                if (null == fPrashanTextBlocText)
                {
                    fPrashanTextBlocText = new Text("PrashanTextBlocText", PrashanTreeViewTreeItem);
                    fPrashanTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fPrashanTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPrashanTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Prashan");
                }

                return fPrashanTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to SanthoshTreeVieTreeItem
        /// </summary>
        public TreeItem SanthoshTreeVieTreeItem
        {
            get
            {
                if (null == fSanthoshTreeVieTreeItem)
                {
                    fSanthoshTreeVieTreeItem = new TreeItem("SanthoshTreeVieTreeItem", AllDevicesTreeVTreeItem);
                    fSanthoshTreeVieTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSanthoshTreeVieTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fSanthoshTreeVieTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Santhosh");
                }

                return fSanthoshTreeVieTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup6Button
        /// </summary>
        public Button ButtonExpanderDup6Button
        {
            get
            {
                if (null == fButtonExpanderDup6Button)
                {
                    fButtonExpanderDup6Button = new Button("ButtonExpanderDup6Button", SanthoshTreeVieTreeItem);
                    fButtonExpanderDup6Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup6Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                    fButtonExpanderDup6Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButtonExpanderDup6Button;
            }
        }

        /// <summary>
        /// Gets Reference to SanthoshTextBloText
        /// </summary>
        public Text SanthoshTextBloText
        {
            get
            {
                if (null == fSanthoshTextBloText)
                {
                    fSanthoshTextBloText = new Text("SanthoshTextBloText", SanthoshTreeVieTreeItem);
                    fSanthoshTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fSanthoshTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSanthoshTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Santhosh");
                }

                return fSanthoshTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to AddGroupButtonFButton
        /// </summary>
        public Button AddGroupButtonFButton
        {
            get
            {
                if (null == fAddGroupButtonFButton)
                {
                    fAddGroupButtonFButton = new Button("AddGroupButtonFButton", ServiceConfigurCustom);
                    fAddGroupButtonFButton.UIMap.Scope = UIASeachScope.Children;
                    fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FF3CA114-616C-4372-9E90-DEBFDDC95553");
                    fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group...");
                }

                return fAddGroupButtonFButton;
            }
        }

        /// <summary>
        /// Gets Reference to AddGroupTextBloText
        /// </summary>
        public Text AddGroupTextBloText
        {
            get
            {
                if (null == fAddGroupTextBloText)
                {
                    fAddGroupTextBloText = new Text("AddGroupTextBloText", AddGroupButtonFButton);
                    fAddGroupTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group...");
                }

                return fAddGroupTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveGroupButtButton
        /// </summary>
        public Button RemoveGroupButtButton
        {
            get
            {
                if (null == fRemoveGroupButtButton)
                {
                    fRemoveGroupButtButton = new Button("RemoveGroupButtButton", ServiceConfigurCustom);
                    fRemoveGroupButtButton.UIMap.Scope = UIASeachScope.Children;
                    fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"254907B3-979B-4706-8099-4EB37924DFB2");
                    fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Group...");
                }

                return fRemoveGroupButtButton;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveGroupTextText
        /// </summary>
        public Text RemoveGroupTextText
        {
            get
            {
                if (null == fRemoveGroupTextText)
                {
                    fRemoveGroupTextText = new Text("RemoveGroupTextText", RemoveGroupButtButton);
                    fRemoveGroupTextText.UIMap.Scope = UIASeachScope.Children;
                    fRemoveGroupTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRemoveGroupTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Group...");
                }

                return fRemoveGroupTextText;
            }
        }

        /// <summary>
        /// Gets Reference to RenameButton261Button
        /// </summary>
        public Button RenameButton261Button
        {
            get
            {
                if (null == fRenameButton261Button)
                {
                    fRenameButton261Button = new Button("RenameButton261Button", ServiceConfigurCustom);
                    fRenameButton261Button.UIMap.Scope = UIASeachScope.Children;
                    fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2619DFAD-0185-42fb-A689-994ED4ACC316");
                    fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rename");
                }

                return fRenameButton261Button;
            }
        }

        /// <summary>
        /// Gets Reference to RenameTextBlockText
        /// </summary>
        public Text RenameTextBlockText
        {
            get
            {
                if (null == fRenameTextBlockText)
                {
                    fRenameTextBlockText = new Text("RenameTextBlockText", RenameButton261Button);
                    fRenameTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fRenameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRenameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rename");
                }

                return fRenameTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to GridSplitterThumb
        /// </summary>
        public Thumb GridSplitterThumb
        {
            get
            {
                if (null == fGridSplitterThumb)
                {
                    fGridSplitterThumb = new Thumb("GridSplitterThumb", ServiceConfigurCustom);
                    fGridSplitterThumb.UIMap.Scope = UIASeachScope.Children;
                    fGridSplitterThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridSplitter");
                }

                return fGridSplitterThumb;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceListText
        /// </summary>
        public Text DeviceListText
        {
            get
            {
                if (null == fDeviceListText)
                {
                    fDeviceListText = new Text("DeviceListText", ServiceConfigurCustom);
                    fDeviceListText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceListText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDeviceListText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device List");
                }

                return fDeviceListText;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceListTextBText
        /// </summary>
        public Text DeviceListTextBText
        {
            get
            {
                if (null == fDeviceListTextBText)
                {
                    fDeviceListTextBText = new Text("DeviceListTextBText", DeviceListText);
                    fDeviceListTextBText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceListTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceListTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device List");
                }

                return fDeviceListTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to ListView141cb8bDataGrid
        /// </summary>
        public DataGrid ListView141cb8bDataGrid
        {
            get
            {
                if (null == fListView141cb8bDataGrid)
                {
                    fListView141cb8bDataGrid = new DataGrid("ListView141cb8bDataGrid", ServiceConfigurCustom);
                    fListView141cb8bDataGrid.UIMap.Scope = UIASeachScope.Children;
                    fListView141cb8bDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"141cb8be-89c3-4b41-80ca-be09bdf636f2");
                    fListView141cb8bDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListView");
                }

                return fListView141cb8bDataGrid;
            }
        }

        /// <summary>
        /// Gets Reference to GridViewHeaderRHeader
        /// </summary>
        public Header GridViewHeaderRHeader
        {
            get
            {
                if (null == fGridViewHeaderRHeader)
                {
                    fGridViewHeaderRHeader = new Header("GridViewHeaderRHeader", ListView141cb8bDataGrid);
                    fGridViewHeaderRHeader.UIMap.Scope = UIASeachScope.Children;
                    fGridViewHeaderRHeader.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewHeaderRowPresenter");
                }

                return fGridViewHeaderRHeader;
            }
        }

        /// <summary>
        /// Gets Reference to StatusGridViewCHeaderItem
        /// </summary>
        public HeaderItem StatusGridViewCHeaderItem
        {
            get
            {
                if (null == fStatusGridViewCHeaderItem)
                {
                    fStatusGridViewCHeaderItem = new HeaderItem("StatusGridViewCHeaderItem", GridViewHeaderRHeader);
                    fStatusGridViewCHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84BDE37C-126B-473a-923B-180DBBB478C6");
                    fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Status");
                }

                return fStatusGridViewCHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to StatusTextBlockText
        /// </summary>
        public Text StatusTextBlockText
        {
            get
            {
                if (null == fStatusTextBlockText)
                {
                    fStatusTextBlockText = new Text("StatusTextBlockText", StatusGridViewCHeaderItem);
                    fStatusTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fStatusTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fStatusTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Status");
                }

                return fStatusTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup0Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup0Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup0Thumb)
                {
                    fThumbPARTHeadeDup0Thumb = new Thumb("ThumbPARTHeadeDup0Thumb", StatusGridViewCHeaderItem);
                    fThumbPARTHeadeDup0Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup0Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to NameGridViewColHeaderItem
        /// </summary>
        public HeaderItem NameGridViewColHeaderItem
        {
            get
            {
                if (null == fNameGridViewColHeaderItem)
                {
                    fNameGridViewColHeaderItem = new HeaderItem("NameGridViewColHeaderItem", GridViewHeaderRHeader);
                    fNameGridViewColHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"507D57C0-BC09-4a0a-8D17-F2A9117ADCE5");
                    fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameGridViewColHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to NameTextBlockText
        /// </summary>
        public Text NameTextBlockText
        {
            get
            {
                if (null == fNameTextBlockText)
                {
                    fNameTextBlockText = new Text("NameTextBlockText", NameGridViewColHeaderItem);
                    fNameTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fNameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup1Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup1Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup1Thumb)
                {
                    fThumbPARTHeadeDup1Thumb = new Thumb("ThumbPARTHeadeDup1Thumb", NameGridViewColHeaderItem);
                    fThumbPARTHeadeDup1Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup1Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to GridViewColumnHDup0HeaderItem
        /// </summary>
        public HeaderItem GridViewColumnHDup0HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup0HeaderItem)
                {
                    fGridViewColumnHDup0HeaderItem = new HeaderItem("GridViewColumnHDup0HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup0HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup0HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"458F7960-4394-4579-919F-D58D5043C703");
                    fGridViewColumnHDup0HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                }

                return fGridViewColumnHDup0HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup0Image
        /// </summary>
        public Image ImageDup0Image
        {
            get
            {
                if (null == fImageDup0Image)
                {
                    fImageDup0Image = new Image("ImageDup0Image", GridViewColumnHDup0HeaderItem);
                    fImageDup0Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup0Image;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup2Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup2Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup2Thumb)
                {
                    fThumbPARTHeadeDup2Thumb = new Thumb("ThumbPARTHeadeDup2Thumb", GridViewColumnHDup0HeaderItem);
                    fThumbPARTHeadeDup2Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup2Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to GridViewColumnHDup1HeaderItem
        /// </summary>
        public HeaderItem GridViewColumnHDup1HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup1HeaderItem)
                {
                    fGridViewColumnHDup1HeaderItem = new HeaderItem("GridViewColumnHDup1HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup1HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup1HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CD97A6CC-D4F4-4ddb-A3BB-7FF26B2222FF");
                    fGridViewColumnHDup1HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                }

                return fGridViewColumnHDup1HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup1Image
        /// </summary>
        public Image ImageDup1Image
        {
            get
            {
                if (null == fImageDup1Image)
                {
                    fImageDup1Image = new Image("ImageDup1Image", GridViewColumnHDup1HeaderItem);
                    fImageDup1Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup1Image;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup3Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup3Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup3Thumb)
                {
                    fThumbPARTHeadeDup3Thumb = new Thumb("ThumbPARTHeadeDup3Thumb", GridViewColumnHDup1HeaderItem);
                    fThumbPARTHeadeDup3Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup3Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup3Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup3Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to GridViewColumnHDup2HeaderItem
        /// </summary>
        public HeaderItem GridViewColumnHDup2HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup2HeaderItem)
                {
                    fGridViewColumnHDup2HeaderItem = new HeaderItem("GridViewColumnHDup2HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup2HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup2HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"008BEEE0-3AE1-47be-BD91-66E124BE04A5");
                    fGridViewColumnHDup2HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                }

                return fGridViewColumnHDup2HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup2Image
        /// </summary>
        public Image ImageDup2Image
        {
            get
            {
                if (null == fImageDup2Image)
                {
                    fImageDup2Image = new Image("ImageDup2Image", GridViewColumnHDup2HeaderItem);
                    fImageDup2Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup2Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup2Image;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup4Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup4Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup4Thumb)
                {
                    fThumbPARTHeadeDup4Thumb = new Thumb("ThumbPARTHeadeDup4Thumb", GridViewColumnHDup2HeaderItem);
                    fThumbPARTHeadeDup4Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup4Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup4Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup4Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to GridViewColumnHDup3HeaderItem
        /// </summary>
        public HeaderItem GridViewColumnHDup3HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup3HeaderItem)
                {
                    fGridViewColumnHDup3HeaderItem = new HeaderItem("GridViewColumnHDup3HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup3HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup3HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4DC0435C-FF08-4325-A9AC-115D1891ABA6");
                    fGridViewColumnHDup3HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                }

                return fGridViewColumnHDup3HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup3Image
        /// </summary>
        public Image ImageDup3Image
        {
            get
            {
                if (null == fImageDup3Image)
                {
                    fImageDup3Image = new Image("ImageDup3Image", GridViewColumnHDup3HeaderItem);
                    fImageDup3Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup3Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup3Image;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup5Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup5Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup5Thumb)
                {
                    fThumbPARTHeadeDup5Thumb = new Thumb("ThumbPARTHeadeDup5Thumb", GridViewColumnHDup3HeaderItem);
                    fThumbPARTHeadeDup5Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup5Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup5Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup5Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to GridViewColumnHDup4HeaderItem
        /// </summary>
        public HeaderItem GridViewColumnHDup4HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup4HeaderItem)
                {
                    fGridViewColumnHDup4HeaderItem = new HeaderItem("GridViewColumnHDup4HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup4HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup4HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"BE6ECE9F-4708-4266-8106-AE6D598B0396");
                    fGridViewColumnHDup4HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                }

                return fGridViewColumnHDup4HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup4Image
        /// </summary>
        public Image ImageDup4Image
        {
            get
            {
                if (null == fImageDup4Image)
                {
                    fImageDup4Image = new Image("ImageDup4Image", GridViewColumnHDup4HeaderItem);
                    fImageDup4Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup4Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup4Image;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup6Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup6Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup6Thumb)
                {
                    fThumbPARTHeadeDup6Thumb = new Thumb("ThumbPARTHeadeDup6Thumb", GridViewColumnHDup4HeaderItem);
                    fThumbPARTHeadeDup6Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup6Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup6Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup6Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to GridViewColumnHDup5HeaderItem
        /// </summary>
        public HeaderItem GridViewColumnHDup5HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup5HeaderItem)
                {
                    fGridViewColumnHDup5HeaderItem = new HeaderItem("GridViewColumnHDup5HeaderItem", GridViewHeaderRHeader);
                    fGridViewColumnHDup5HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup5HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5C264E70-DAEF-44F3-9DE9-9824BC0B9ECF");
                    fGridViewColumnHDup5HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                }

                return fGridViewColumnHDup5HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup5Image
        /// </summary>
        public Image ImageDup5Image
        {
            get
            {
                if (null == fImageDup5Image)
                {
                    fImageDup5Image = new Image("ImageDup5Image", GridViewColumnHDup5HeaderItem);
                    fImageDup5Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup5Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup5Image;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup7Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup7Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup7Thumb)
                {
                    fThumbPARTHeadeDup7Thumb = new Thumb("ThumbPARTHeadeDup7Thumb", GridViewColumnHDup5HeaderItem);
                    fThumbPARTHeadeDup7Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup7Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup7Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup7Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to ModelGridViewCoHeaderItem
        /// </summary>
        public HeaderItem ModelGridViewCoHeaderItem
        {
            get
            {
                if (null == fModelGridViewCoHeaderItem)
                {
                    fModelGridViewCoHeaderItem = new HeaderItem("ModelGridViewCoHeaderItem", GridViewHeaderRHeader);
                    fModelGridViewCoHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"805FD78E-D6A4-4559-939B-ECDD285AE6D7");
                    fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Model");
                }

                return fModelGridViewCoHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to ModelTextBlockText
        /// </summary>
        public Text ModelTextBlockText
        {
            get
            {
                if (null == fModelTextBlockText)
                {
                    fModelTextBlockText = new Text("ModelTextBlockText", ModelGridViewCoHeaderItem);
                    fModelTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fModelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fModelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Model");
                }

                return fModelTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup8Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup8Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup8Thumb)
                {
                    fThumbPARTHeadeDup8Thumb = new Thumb("ThumbPARTHeadeDup8Thumb", ModelGridViewCoHeaderItem);
                    fThumbPARTHeadeDup8Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup8Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup8Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup8Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to IPAddressGridViHeaderItem
        /// </summary>
        public HeaderItem IPAddressGridViHeaderItem
        {
            get
            {
                if (null == fIPAddressGridViHeaderItem)
                {
                    fIPAddressGridViHeaderItem = new HeaderItem("IPAddressGridViHeaderItem", GridViewHeaderRHeader);
                    fIPAddressGridViHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"70E1D5F4-0DA5-4e87-A451-28399734B74C");
                    fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"IP Address");
                }

                return fIPAddressGridViHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to IPAddressTextBlText
        /// </summary>
        public Text IPAddressTextBlText
        {
            get
            {
                if (null == fIPAddressTextBlText)
                {
                    fIPAddressTextBlText = new Text("IPAddressTextBlText", IPAddressGridViHeaderItem);
                    fIPAddressTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fIPAddressTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fIPAddressTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"IP Address");
                }

                return fIPAddressTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup9Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup9Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup9Thumb)
                {
                    fThumbPARTHeadeDup9Thumb = new Thumb("ThumbPARTHeadeDup9Thumb", IPAddressGridViHeaderItem);
                    fThumbPARTHeadeDup9Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup9Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup9Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup9Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to HostnameGridVieHeaderItem
        /// </summary>
        public HeaderItem HostnameGridVieHeaderItem
        {
            get
            {
                if (null == fHostnameGridVieHeaderItem)
                {
                    fHostnameGridVieHeaderItem = new HeaderItem("HostnameGridVieHeaderItem", GridViewHeaderRHeader);
                    fHostnameGridVieHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"82BE5D16-D370-4519-8FC4-0F517E12AFDF");
                    fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname");
                }

                return fHostnameGridVieHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to HostnameTextBloText
        /// </summary>
        public Text HostnameTextBloText
        {
            get
            {
                if (null == fHostnameTextBloText)
                {
                    fHostnameTextBloText = new Text("HostnameTextBloText", HostnameGridVieHeaderItem);
                    fHostnameTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fHostnameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHostnameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname");
                }

                return fHostnameTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup10Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup10Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup10Thumb)
                {
                    fThumbPARTHeadeDup10Thumb = new Thumb("ThumbPARTHeadeDup10Thumb", HostnameGridVieHeaderItem);
                    fThumbPARTHeadeDup10Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup10Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup10Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup10Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to DescriptionGridHeaderItem
        /// </summary>
        public HeaderItem DescriptionGridHeaderItem
        {
            get
            {
                if (null == fDescriptionGridHeaderItem)
                {
                    fDescriptionGridHeaderItem = new HeaderItem("DescriptionGridHeaderItem", GridViewHeaderRHeader);
                    fDescriptionGridHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"26A46CB8-53AC-446f-8012-A92323091104");
                    fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                }

                return fDescriptionGridHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to DescriptionTextText
        /// </summary>
        public Text DescriptionTextText
        {
            get
            {
                if (null == fDescriptionTextText)
                {
                    fDescriptionTextText = new Text("DescriptionTextText", DescriptionGridHeaderItem);
                    fDescriptionTextText.UIMap.Scope = UIASeachScope.Children;
                    fDescriptionTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDescriptionTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                }

                return fDescriptionTextText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup11Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup11Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup11Thumb)
                {
                    fThumbPARTHeadeDup11Thumb = new Thumb("ThumbPARTHeadeDup11Thumb", DescriptionGridHeaderItem);
                    fThumbPARTHeadeDup11Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup11Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup11Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup11Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to FirmwareGridVieHeaderItem
        /// </summary>
        public HeaderItem FirmwareGridVieHeaderItem
        {
            get
            {
                if (null == fFirmwareGridVieHeaderItem)
                {
                    fFirmwareGridVieHeaderItem = new HeaderItem("FirmwareGridVieHeaderItem", GridViewHeaderRHeader);
                    fFirmwareGridVieHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2A8C9E5A-0A8D-48DD-9D15-42B45EB4177B");
                    fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Firmware");
                }

                return fFirmwareGridVieHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to FirmwareTextBloText
        /// </summary>
        public Text FirmwareTextBloText
        {
            get
            {
                if (null == fFirmwareTextBloText)
                {
                    fFirmwareTextBloText = new Text("FirmwareTextBloText", FirmwareGridVieHeaderItem);
                    fFirmwareTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fFirmwareTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFirmwareTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Firmware");
                }

                return fFirmwareTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup12Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup12Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup12Thumb)
                {
                    fThumbPARTHeadeDup12Thumb = new Thumb("ThumbPARTHeadeDup12Thumb", FirmwareGridVieHeaderItem);
                    fThumbPARTHeadeDup12Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup12Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup12Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup12Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to unset101113198eDataItem
        /// </summary>
        public DataItem unset101113198eDataItem
        {
            get
            {
                if (null == funset101113198eDataItem)
                {
                    funset101113198eDataItem = new DataItem("unset101113198eDataItem", ListView141cb8bDataGrid);
                    funset101113198eDataItem.UIMap.Scope = UIASeachScope.Children;
                    funset101113198eDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                    funset101113198eDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"unset; 10.11.13.198; email=disabled; folder=enabled; fax=enabled; addressing=disabled; authentication=notApplicable; customKey=disabled; sharePoint=disabled; HP LaserJet Flow MFP M630; 10.11.13.198; HP LaserJet Flow MFP M630");
                }

                return funset101113198eDataItem;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteDup0I0XCustom
        /// </summary>
        public Custom ContentPresenteDup0I0XCustom
        {
            get
            {
                if (null == fContentPresenteDup0I0XCustom)
                {
                    fContentPresenteDup0I0XCustom = new Custom("ContentPresenteDup0I0XCustom", unset101113198eDataItem);
                    fContentPresenteDup0I0XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup0I0XCustom.UIMap.Index = 0;
                    fContentPresenteDup0I0XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup0I0XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to Image84ACE29E0ADup0Image
        /// </summary>
        public Image Image84ACE29E0ADup0Image
        {
            get
            {
                if (null == fImage84ACE29E0ADup0Image)
                {
                    fImage84ACE29E0ADup0Image = new Image("Image84ACE29E0ADup0Image", ContentPresenteDup0I0XCustom);
                    fImage84ACE29E0ADup0Image.UIMap.Scope = UIASeachScope.Children;
                    fImage84ACE29E0ADup0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84ACE29E-0A0D-4d4b-9168-34F42B14D952");
                    fImage84ACE29E0ADup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImage84ACE29E0ADup0Image;
            }
        }

        /// <summary>
        /// Gets Reference to WaitSpinnerUserDup0Custom
        /// </summary>
        public Custom WaitSpinnerUserDup0Custom
        {
            get
            {
                if (null == fWaitSpinnerUserDup0Custom)
                {
                    fWaitSpinnerUserDup0Custom = new Custom("WaitSpinnerUserDup0Custom", ContentPresenteDup0I0XCustom);
                    fWaitSpinnerUserDup0Custom.UIMap.Scope = UIASeachScope.Children;
                    fWaitSpinnerUserDup0Custom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C736946B-5A03-4603-A63B-2B489C87B082");
                    fWaitSpinnerUserDup0Custom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WaitSpinnerUserControl");
                }

                return fWaitSpinnerUserDup0Custom;
            }
        }

        /// <summary>
        /// Gets Reference to HPLaserJetFlowMDup0I0XText
        /// </summary>
        public Text HPLaserJetFlowMDup0I0XText
        {
            get
            {
                if (null == fHPLaserJetFlowMDup0I0XText)
                {
                    fHPLaserJetFlowMDup0I0XText = new Text("HPLaserJetFlowMDup0I0XText", unset101113198eDataItem);
                    fHPLaserJetFlowMDup0I0XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetFlowMDup0I0XText.UIMap.Index = 0;
                    fHPLaserJetFlowMDup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHPLaserJetFlowMDup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet Flow MFP M630");
                }

                return fHPLaserJetFlowMDup0I0XText;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteDup1I1XCustom
        /// </summary>
        public Custom ContentPresenteDup1I1XCustom
        {
            get
            {
                if (null == fContentPresenteDup1I1XCustom)
                {
                    fContentPresenteDup1I1XCustom = new Custom("ContentPresenteDup1I1XCustom", unset101113198eDataItem);
                    fContentPresenteDup1I1XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup1I1XCustom.UIMap.Index = 1;
                    fContentPresenteDup1I1XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup1I1XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to Image844100985ADup0Image
        /// </summary>
        public Image Image844100985ADup0Image
        {
            get
            {
                if (null == fImage844100985ADup0Image)
                {
                    fImage844100985ADup0Image = new Image("Image844100985ADup0Image", ContentPresenteDup1I1XCustom);
                    fImage844100985ADup0Image.UIMap.Scope = UIASeachScope.Children;
                    fImage844100985ADup0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84410098-5A15-4470-B28C-3220220B3CF7");
                    fImage844100985ADup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImage844100985ADup0Image;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteDup2I2XCustom
        /// </summary>
        public Custom ContentPresenteDup2I2XCustom
        {
            get
            {
                if (null == fContentPresenteDup2I2XCustom)
                {
                    fContentPresenteDup2I2XCustom = new Custom("ContentPresenteDup2I2XCustom", unset101113198eDataItem);
                    fContentPresenteDup2I2XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup2I2XCustom.UIMap.Index = 2;
                    fContentPresenteDup2I2XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup2I2XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to Image20F9A92A96Dup0Image
        /// </summary>
        public Image Image20F9A92A96Dup0Image
        {
            get
            {
                if (null == fImage20F9A92A96Dup0Image)
                {
                    fImage20F9A92A96Dup0Image = new Image("Image20F9A92A96Dup0Image", ContentPresenteDup2I2XCustom);
                    fImage20F9A92A96Dup0Image.UIMap.Scope = UIASeachScope.Children;
                    fImage20F9A92A96Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"20F9A92A-9628-46b7-9034-C31A2B2C2052");
                    fImage20F9A92A96Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImage20F9A92A96Dup0Image;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteDup3I3XCustom
        /// </summary>
        public Custom ContentPresenteDup3I3XCustom
        {
            get
            {
                if (null == fContentPresenteDup3I3XCustom)
                {
                    fContentPresenteDup3I3XCustom = new Custom("ContentPresenteDup3I3XCustom", unset101113198eDataItem);
                    fContentPresenteDup3I3XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup3I3XCustom.UIMap.Index = 3;
                    fContentPresenteDup3I3XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup3I3XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to ImageCA1843E8BFDup0Image
        /// </summary>
        public Image ImageCA1843E8BFDup0Image
        {
            get
            {
                if (null == fImageCA1843E8BFDup0Image)
                {
                    fImageCA1843E8BFDup0Image = new Image("ImageCA1843E8BFDup0Image", ContentPresenteDup3I3XCustom);
                    fImageCA1843E8BFDup0Image.UIMap.Scope = UIASeachScope.Children;
                    fImageCA1843E8BFDup0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CA1843E8-BF8B-4fd4-88C2-66CB0A66A1C2");
                    fImageCA1843E8BFDup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageCA1843E8BFDup0Image;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteDup4I4XCustom
        /// </summary>
        public Custom ContentPresenteDup4I4XCustom
        {
            get
            {
                if (null == fContentPresenteDup4I4XCustom)
                {
                    fContentPresenteDup4I4XCustom = new Custom("ContentPresenteDup4I4XCustom", unset101113198eDataItem);
                    fContentPresenteDup4I4XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup4I4XCustom.UIMap.Index = 4;
                    fContentPresenteDup4I4XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup4I4XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to ImageE24499D7C0Dup0Image
        /// </summary>
        public Image ImageE24499D7C0Dup0Image
        {
            get
            {
                if (null == fImageE24499D7C0Dup0Image)
                {
                    fImageE24499D7C0Dup0Image = new Image("ImageE24499D7C0Dup0Image", ContentPresenteDup4I4XCustom);
                    fImageE24499D7C0Dup0Image.UIMap.Scope = UIASeachScope.Children;
                    fImageE24499D7C0Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"E24499D7-C0DD-4982-A105-C235E810CBF8");
                    fImageE24499D7C0Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageE24499D7C0Dup0Image;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteDup5I5XCustom
        /// </summary>
        public Custom ContentPresenteDup5I5XCustom
        {
            get
            {
                if (null == fContentPresenteDup5I5XCustom)
                {
                    fContentPresenteDup5I5XCustom = new Custom("ContentPresenteDup5I5XCustom", unset101113198eDataItem);
                    fContentPresenteDup5I5XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup5I5XCustom.UIMap.Index = 5;
                    fContentPresenteDup5I5XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup5I5XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to Image86A371F7F4Dup0Image
        /// </summary>
        public Image Image86A371F7F4Dup0Image
        {
            get
            {
                if (null == fImage86A371F7F4Dup0Image)
                {
                    fImage86A371F7F4Dup0Image = new Image("Image86A371F7F4Dup0Image", ContentPresenteDup5I5XCustom);
                    fImage86A371F7F4Dup0Image.UIMap.Scope = UIASeachScope.Children;
                    fImage86A371F7F4Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"86A371F7-F478-4dfd-AE88-854F4FB069A0");
                    fImage86A371F7F4Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImage86A371F7F4Dup0Image;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteDup6I6XCustom
        /// </summary>
        public Custom ContentPresenteDup6I6XCustom
        {
            get
            {
                if (null == fContentPresenteDup6I6XCustom)
                {
                    fContentPresenteDup6I6XCustom = new Custom("ContentPresenteDup6I6XCustom", unset101113198eDataItem);
                    fContentPresenteDup6I6XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup6I6XCustom.UIMap.Index = 6;
                    fContentPresenteDup6I6XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup6I6XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to Image1D2DC29B85Dup0Image
        /// </summary>
        public Image Image1D2DC29B85Dup0Image
        {
            get
            {
                if (null == fImage1D2DC29B85Dup0Image)
                {
                    fImage1D2DC29B85Dup0Image = new Image("Image1D2DC29B85Dup0Image", ContentPresenteDup6I6XCustom);
                    fImage1D2DC29B85Dup0Image.UIMap.Scope = UIASeachScope.Children;
                    fImage1D2DC29B85Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1D2DC29B-85AC-4341-9FBC-741DEC6996B9");
                    fImage1D2DC29B85Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImage1D2DC29B85Dup0Image;
            }
        }

        /// <summary>
        /// Gets Reference to HPLaserJetFlowMDup1I1XText
        /// </summary>
        public Text HPLaserJetFlowMDup1I1XText
        {
            get
            {
                if (null == fHPLaserJetFlowMDup1I1XText)
                {
                    fHPLaserJetFlowMDup1I1XText = new Text("HPLaserJetFlowMDup1I1XText", unset101113198eDataItem);
                    fHPLaserJetFlowMDup1I1XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetFlowMDup1I1XText.UIMap.Index = 1;
                    fHPLaserJetFlowMDup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHPLaserJetFlowMDup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet Flow MFP M630");
                }

                return fHPLaserJetFlowMDup1I1XText;
            }
        }

        /// <summary>
        /// Gets Reference to A101113198TextBText
        /// </summary>
        public Text A101113198TextBText
        {
            get
            {
                if (null == fA101113198TextBText)
                {
                    fA101113198TextBText = new Text("A101113198TextBText", unset101113198eDataItem);
                    fA101113198TextBText.UIMap.Scope = UIASeachScope.Children;
                    fA101113198TextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fA101113198TextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"10.11.13.198");
                }

                return fA101113198TextBText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockDup1Text
        /// </summary>
        public Text TextBlockDup1Text
        {
            get
            {
                if (null == fTextBlockDup1Text)
                {
                    fTextBlockDup1Text = new Text("TextBlockDup1Text", unset101113198eDataItem);
                    fTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to HPLaserJetFlowMDup2I2XText
        /// </summary>
        public Text HPLaserJetFlowMDup2I2XText
        {
            get
            {
                if (null == fHPLaserJetFlowMDup2I2XText)
                {
                    fHPLaserJetFlowMDup2I2XText = new Text("HPLaserJetFlowMDup2I2XText", unset101113198eDataItem);
                    fHPLaserJetFlowMDup2I2XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetFlowMDup2I2XText.UIMap.Index = 2;
                    fHPLaserJetFlowMDup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHPLaserJetFlowMDup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet Flow MFP M630");
                }

                return fHPLaserJetFlowMDup2I2XText;
            }
        }

        /// <summary>
        /// Gets Reference to FutureSmart4431Text
        /// </summary>
        public Text FutureSmart4431Text
        {
            get
            {
                if (null == fFutureSmart4431Text)
                {
                    fFutureSmart4431Text = new Text("FutureSmart4431Text", unset101113198eDataItem);
                    fFutureSmart4431Text.UIMap.Scope = UIASeachScope.Children;
                    fFutureSmart4431Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFutureSmart4431Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"FutureSmart 4 (4.3.1) (2403641_010573)");
                }

                return fFutureSmart4431Text;
            }
        }

        /// <summary>
        /// Gets Reference to unset101112159eDataItem
        /// </summary>
        public DataItem unset101112159eDataItem
        {
            get
            {
                if (null == funset101112159eDataItem)
                {
                    funset101112159eDataItem = new DataItem("unset101112159eDataItem", ListView141cb8bDataGrid);
                    funset101112159eDataItem.UIMap.Scope = UIASeachScope.Children;
                    funset101112159eDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                    funset101112159eDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"unset; 10.11.12.159; email=enabled; folder=enabled; fax=enabled; addressing=disabled; authentication=notApplicable; customKey=enabled; sharePoint=disabled; HP LaserJet MFP M527; 10.11.12.159; HP LaserJet MFP M527");
                }

                return funset101112159eDataItem;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteDup7I0XCustom
        /// </summary>
        public Custom ContentPresenteDup7I0XCustom
        {
            get
            {
                if (null == fContentPresenteDup7I0XCustom)
                {
                    fContentPresenteDup7I0XCustom = new Custom("ContentPresenteDup7I0XCustom", unset101112159eDataItem);
                    fContentPresenteDup7I0XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup7I0XCustom.UIMap.Index = 0;
                    fContentPresenteDup7I0XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup7I0XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to Image84ACE29E0ADup1Image
        /// </summary>
        public Image Image84ACE29E0ADup1Image
        {
            get
            {
                if (null == fImage84ACE29E0ADup1Image)
                {
                    fImage84ACE29E0ADup1Image = new Image("Image84ACE29E0ADup1Image", ContentPresenteDup7I0XCustom);
                    fImage84ACE29E0ADup1Image.UIMap.Scope = UIASeachScope.Children;
                    fImage84ACE29E0ADup1Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84ACE29E-0A0D-4d4b-9168-34F42B14D952");
                    fImage84ACE29E0ADup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImage84ACE29E0ADup1Image;
            }
        }

        /// <summary>
        /// Gets Reference to WaitSpinnerUserDup1Custom
        /// </summary>
        public Custom WaitSpinnerUserDup1Custom
        {
            get
            {
                if (null == fWaitSpinnerUserDup1Custom)
                {
                    fWaitSpinnerUserDup1Custom = new Custom("WaitSpinnerUserDup1Custom", ContentPresenteDup7I0XCustom);
                    fWaitSpinnerUserDup1Custom.UIMap.Scope = UIASeachScope.Children;
                    fWaitSpinnerUserDup1Custom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C736946B-5A03-4603-A63B-2B489C87B082");
                    fWaitSpinnerUserDup1Custom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WaitSpinnerUserControl");
                }

                return fWaitSpinnerUserDup1Custom;
            }
        }

        /// <summary>
        /// Gets Reference to HPLaserJetMFPM5Dup0I0XText
        /// </summary>
        public Text HPLaserJetMFPM5Dup0I0XText
        {
            get
            {
                if (null == fHPLaserJetMFPM5Dup0I0XText)
                {
                    fHPLaserJetMFPM5Dup0I0XText = new Text("HPLaserJetMFPM5Dup0I0XText", unset101112159eDataItem);
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.Index = 0;
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet MFP M527");
                }

                return fHPLaserJetMFPM5Dup0I0XText;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteDup8I1XCustom
        /// </summary>
        public Custom ContentPresenteDup8I1XCustom
        {
            get
            {
                if (null == fContentPresenteDup8I1XCustom)
                {
                    fContentPresenteDup8I1XCustom = new Custom("ContentPresenteDup8I1XCustom", unset101112159eDataItem);
                    fContentPresenteDup8I1XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup8I1XCustom.UIMap.Index = 1;
                    fContentPresenteDup8I1XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup8I1XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to Image844100985ADup1Image
        /// </summary>
        public Image Image844100985ADup1Image
        {
            get
            {
                if (null == fImage844100985ADup1Image)
                {
                    fImage844100985ADup1Image = new Image("Image844100985ADup1Image", ContentPresenteDup8I1XCustom);
                    fImage844100985ADup1Image.UIMap.Scope = UIASeachScope.Children;
                    fImage844100985ADup1Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84410098-5A15-4470-B28C-3220220B3CF7");
                    fImage844100985ADup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImage844100985ADup1Image;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteDup9I2XCustom
        /// </summary>
        public Custom ContentPresenteDup9I2XCustom
        {
            get
            {
                if (null == fContentPresenteDup9I2XCustom)
                {
                    fContentPresenteDup9I2XCustom = new Custom("ContentPresenteDup9I2XCustom", unset101112159eDataItem);
                    fContentPresenteDup9I2XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup9I2XCustom.UIMap.Index = 2;
                    fContentPresenteDup9I2XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup9I2XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to Image20F9A92A96Dup1Image
        /// </summary>
        public Image Image20F9A92A96Dup1Image
        {
            get
            {
                if (null == fImage20F9A92A96Dup1Image)
                {
                    fImage20F9A92A96Dup1Image = new Image("Image20F9A92A96Dup1Image", ContentPresenteDup9I2XCustom);
                    fImage20F9A92A96Dup1Image.UIMap.Scope = UIASeachScope.Children;
                    fImage20F9A92A96Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"20F9A92A-9628-46b7-9034-C31A2B2C2052");
                    fImage20F9A92A96Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImage20F9A92A96Dup1Image;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteDup10I3XCustom
        /// </summary>
        public Custom ContentPresenteDup10I3XCustom
        {
            get
            {
                if (null == fContentPresenteDup10I3XCustom)
                {
                    fContentPresenteDup10I3XCustom = new Custom("ContentPresenteDup10I3XCustom", unset101112159eDataItem);
                    fContentPresenteDup10I3XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup10I3XCustom.UIMap.Index = 3;
                    fContentPresenteDup10I3XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup10I3XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to ImageCA1843E8BFDup1Image
        /// </summary>
        public Image ImageCA1843E8BFDup1Image
        {
            get
            {
                if (null == fImageCA1843E8BFDup1Image)
                {
                    fImageCA1843E8BFDup1Image = new Image("ImageCA1843E8BFDup1Image", ContentPresenteDup10I3XCustom);
                    fImageCA1843E8BFDup1Image.UIMap.Scope = UIASeachScope.Children;
                    fImageCA1843E8BFDup1Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CA1843E8-BF8B-4fd4-88C2-66CB0A66A1C2");
                    fImageCA1843E8BFDup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageCA1843E8BFDup1Image;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteDup11I4XCustom
        /// </summary>
        public Custom ContentPresenteDup11I4XCustom
        {
            get
            {
                if (null == fContentPresenteDup11I4XCustom)
                {
                    fContentPresenteDup11I4XCustom = new Custom("ContentPresenteDup11I4XCustom", unset101112159eDataItem);
                    fContentPresenteDup11I4XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup11I4XCustom.UIMap.Index = 4;
                    fContentPresenteDup11I4XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup11I4XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to ImageE24499D7C0Dup1Image
        /// </summary>
        public Image ImageE24499D7C0Dup1Image
        {
            get
            {
                if (null == fImageE24499D7C0Dup1Image)
                {
                    fImageE24499D7C0Dup1Image = new Image("ImageE24499D7C0Dup1Image", ContentPresenteDup11I4XCustom);
                    fImageE24499D7C0Dup1Image.UIMap.Scope = UIASeachScope.Children;
                    fImageE24499D7C0Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"E24499D7-C0DD-4982-A105-C235E810CBF8");
                    fImageE24499D7C0Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageE24499D7C0Dup1Image;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteDup12I5XCustom
        /// </summary>
        public Custom ContentPresenteDup12I5XCustom
        {
            get
            {
                if (null == fContentPresenteDup12I5XCustom)
                {
                    fContentPresenteDup12I5XCustom = new Custom("ContentPresenteDup12I5XCustom", unset101112159eDataItem);
                    fContentPresenteDup12I5XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup12I5XCustom.UIMap.Index = 5;
                    fContentPresenteDup12I5XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup12I5XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to Image86A371F7F4Dup1Image
        /// </summary>
        public Image Image86A371F7F4Dup1Image
        {
            get
            {
                if (null == fImage86A371F7F4Dup1Image)
                {
                    fImage86A371F7F4Dup1Image = new Image("Image86A371F7F4Dup1Image", ContentPresenteDup12I5XCustom);
                    fImage86A371F7F4Dup1Image.UIMap.Scope = UIASeachScope.Children;
                    fImage86A371F7F4Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"86A371F7-F478-4dfd-AE88-854F4FB069A0");
                    fImage86A371F7F4Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImage86A371F7F4Dup1Image;
            }
        }

        /// <summary>
        /// Gets Reference to ContentPresenteDup13I6XCustom
        /// </summary>
        public Custom ContentPresenteDup13I6XCustom
        {
            get
            {
                if (null == fContentPresenteDup13I6XCustom)
                {
                    fContentPresenteDup13I6XCustom = new Custom("ContentPresenteDup13I6XCustom", unset101112159eDataItem);
                    fContentPresenteDup13I6XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup13I6XCustom.UIMap.Index = 6;
                    fContentPresenteDup13I6XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup13I6XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to Image1D2DC29B85Dup1Image
        /// </summary>
        public Image Image1D2DC29B85Dup1Image
        {
            get
            {
                if (null == fImage1D2DC29B85Dup1Image)
                {
                    fImage1D2DC29B85Dup1Image = new Image("Image1D2DC29B85Dup1Image", ContentPresenteDup13I6XCustom);
                    fImage1D2DC29B85Dup1Image.UIMap.Scope = UIASeachScope.Children;
                    fImage1D2DC29B85Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1D2DC29B-85AC-4341-9FBC-741DEC6996B9");
                    fImage1D2DC29B85Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImage1D2DC29B85Dup1Image;
            }
        }

        /// <summary>
        /// Gets Reference to HPLaserJetMFPM5Dup1I1XText
        /// </summary>
        public Text HPLaserJetMFPM5Dup1I1XText
        {
            get
            {
                if (null == fHPLaserJetMFPM5Dup1I1XText)
                {
                    fHPLaserJetMFPM5Dup1I1XText = new Text("HPLaserJetMFPM5Dup1I1XText", unset101112159eDataItem);
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.Index = 1;
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet MFP M527");
                }

                return fHPLaserJetMFPM5Dup1I1XText;
            }
        }

        /// <summary>
        /// Gets Reference to A101112159TextBText
        /// </summary>
        public Text A101112159TextBText
        {
            get
            {
                if (null == fA101112159TextBText)
                {
                    fA101112159TextBText = new Text("A101112159TextBText", unset101112159eDataItem);
                    fA101112159TextBText.UIMap.Scope = UIASeachScope.Children;
                    fA101112159TextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fA101112159TextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"10.11.12.159");
                }

                return fA101112159TextBText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockDup2Text
        /// </summary>
        public Text TextBlockDup2Text
        {
            get
            {
                if (null == fTextBlockDup2Text)
                {
                    fTextBlockDup2Text = new Text("TextBlockDup2Text", unset101112159eDataItem);
                    fTextBlockDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTextBlockDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to HPLaserJetMFPM5Dup2I2XText
        /// </summary>
        public Text HPLaserJetMFPM5Dup2I2XText
        {
            get
            {
                if (null == fHPLaserJetMFPM5Dup2I2XText)
                {
                    fHPLaserJetMFPM5Dup2I2XText = new Text("HPLaserJetMFPM5Dup2I2XText", unset101112159eDataItem);
                    fHPLaserJetMFPM5Dup2I2XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetMFPM5Dup2I2XText.UIMap.Index = 2;
                    fHPLaserJetMFPM5Dup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHPLaserJetMFPM5Dup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet MFP M527");
                }

                return fHPLaserJetMFPM5Dup2I2XText;
            }
        }

        /// <summary>
        /// Gets Reference to FutureSmart4BetText
        /// </summary>
        public Text FutureSmart4BetText
        {
            get
            {
                if (null == fFutureSmart4BetText)
                {
                    fFutureSmart4BetText = new Text("FutureSmart4BetText", unset101112159eDataItem);
                    fFutureSmart4BetText.UIMap.Scope = UIASeachScope.Children;
                    fFutureSmart4BetText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFutureSmart4BetText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"FutureSmart 4 (Beta) (2458463_099498)");
                }

                return fFutureSmart4BetText;
            }
        }

        /// <summary>
        /// Gets Reference to AddDeviceButtonButton
        /// </summary>
        public Button AddDeviceButtonButton
        {
            get
            {
                if (null == fAddDeviceButtonButton)
                {
                    fAddDeviceButtonButton = new Button("AddDeviceButtonButton", ServiceConfigurCustom);
                    fAddDeviceButtonButton.UIMap.Scope = UIASeachScope.Children;
                    fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"F312568F-16E2-4717-876C-9A076CE2602B");
                    fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Device...");
                }

                return fAddDeviceButtonButton;
            }
        }

        /// <summary>
        /// Gets Reference to AddDeviceTextBlText
        /// </summary>
        public Text AddDeviceTextBlText
        {
            get
            {
                if (null == fAddDeviceTextBlText)
                {
                    fAddDeviceTextBlText = new Text("AddDeviceTextBlText", AddDeviceButtonButton);
                    fAddDeviceTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fAddDeviceTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddDeviceTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Device...");
                }

                return fAddDeviceTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to ExportButtonef5Button
        /// </summary>
        public Button ExportButtonef5Button
        {
            get
            {
                if (null == fExportButtonef5Button)
                {
                    fExportButtonef5Button = new Button("ExportButtonef5Button", ServiceConfigurCustom);
                    fExportButtonef5Button.UIMap.Scope = UIASeachScope.Children;
                    fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ef506fe9-b864-4efe-a960-ad04e56aab91");
                    fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                }

                return fExportButtonef5Button;
            }
        }

        /// <summary>
        /// Gets Reference to ExportTextBlockText
        /// </summary>
        public Text ExportTextBlockText
        {
            get
            {
                if (null == fExportTextBlockText)
                {
                    fExportTextBlockText = new Text("ExportTextBlockText", ExportButtonef5Button);
                    fExportTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                }

                return fExportTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveDeviceButButton
        /// </summary>
        public Button RemoveDeviceButButton
        {
            get
            {
                if (null == fRemoveDeviceButButton)
                {
                    fRemoveDeviceButButton = new Button("RemoveDeviceButButton", ServiceConfigurCustom);
                    fRemoveDeviceButButton.UIMap.Scope = UIASeachScope.Children;
                    fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6f0bbda8-ae72-4b07-bd10-508b3cd6df98");
                    fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Device...");
                }

                return fRemoveDeviceButButton;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveDeviceTexText
        /// </summary>
        public Text RemoveDeviceTexText
        {
            get
            {
                if (null == fRemoveDeviceTexText)
                {
                    fRemoveDeviceTexText = new Text("RemoveDeviceTexText", RemoveDeviceButButton);
                    fRemoveDeviceTexText.UIMap.Scope = UIASeachScope.Children;
                    fRemoveDeviceTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRemoveDeviceTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Device...");
                }

                return fRemoveDeviceTexText;
            }
        }

        /// <summary>
        /// Gets Reference to ImportButtona69Button
        /// </summary>
        public Button ImportButtona69Button
        {
            get
            {
                if (null == fImportButtona69Button)
                {
                    fImportButtona69Button = new Button("ImportButtona69Button", ServiceConfigurCustom);
                    fImportButtona69Button.UIMap.Scope = UIASeachScope.Children;
                    fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a694c1f5-ca51-45dc-ae40-8decc9704ca5");
                    fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import");
                }

                return fImportButtona69Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImportTextBlockText
        /// </summary>
        public Text ImportTextBlockText
        {
            get
            {
                if (null == fImportTextBlockText)
                {
                    fImportTextBlockText = new Text("ImportTextBlockText", ImportButtona69Button);
                    fImportTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fImportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fImportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import");
                }

                return fImportTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to CreateTemplateBButton
        /// </summary>
        public Button CreateTemplateBButton
        {
            get
            {
                if (null == fCreateTemplateBButton)
                {
                    fCreateTemplateBButton = new Button("CreateTemplateBButton", ServiceConfigurCustom);
                    fCreateTemplateBButton.UIMap.Scope = UIASeachScope.Children;
                    fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4C50BE02-6C60-4097-9595-ACF2CC3D5F50");
                    fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create Template");
                }

                return fCreateTemplateBButton;
            }
        }

        /// <summary>
        /// Gets Reference to CreateTemplateTText
        /// </summary>
        public Text CreateTemplateTText
        {
            get
            {
                if (null == fCreateTemplateTText)
                {
                    fCreateTemplateTText = new Text("CreateTemplateTText", CreateTemplateBButton);
                    fCreateTemplateTText.UIMap.Scope = UIASeachScope.Children;
                    fCreateTemplateTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCreateTemplateTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create Template");
                }

                return fCreateTemplateTText;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceSignInButButton
        /// </summary>
        public Button DeviceSignInButButton
        {
            get
            {
                if (null == fDeviceSignInButButton)
                {
                    fDeviceSignInButButton = new Button("DeviceSignInButButton", ServiceConfigurCustom);
                    fDeviceSignInButButton.UIMap.Scope = UIASeachScope.Children;
                    fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mDeviceSignInButton");
                    fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Sign In...");
                }

                return fDeviceSignInButButton;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceSignInTexText
        /// </summary>
        public Text DeviceSignInTexText
        {
            get
            {
                if (null == fDeviceSignInTexText)
                {
                    fDeviceSignInTexText = new Text("DeviceSignInTexText", DeviceSignInButButton);
                    fDeviceSignInTexText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceSignInTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceSignInTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Sign In...");
                }

                return fDeviceSignInTexText;
            }
        }

        /// <summary>
        /// Gets Reference to TotalDevicesText
        /// </summary>
        public Text TotalDevicesText
        {
            get
            {
                if (null == fTotalDevicesText)
                {
                    fTotalDevicesText = new Text("TotalDevicesText", ServiceConfigurCustom);
                    fTotalDevicesText.UIMap.Scope = UIASeachScope.Children;
                    fTotalDevicesText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTotalDevicesText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Total Devices");
                }

                return fTotalDevicesText;
            }
        }

        /// <summary>
        /// Gets Reference to TotalDevicesTexText
        /// </summary>
        public Text TotalDevicesTexText
        {
            get
            {
                if (null == fTotalDevicesTexText)
                {
                    fTotalDevicesTexText = new Text("TotalDevicesTexText", TotalDevicesText);
                    fTotalDevicesTexText.UIMap.Scope = UIASeachScope.Children;
                    fTotalDevicesTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTotalDevicesTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Total Devices");
                }

                return fTotalDevicesTexText;
            }
        }

        /// <summary>
        /// Gets Reference to A2Text82f844376Text
        /// </summary>
        public Text A2Text82f844376Text
        {
            get
            {
                if (null == fA2Text82f844376Text)
                {
                    fA2Text82f844376Text = new Text("A2Text82f844376Text", ServiceConfigurCustom);
                    fA2Text82f844376Text.UIMap.Scope = UIASeachScope.Children;
                    fA2Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"82f84437-601e-4562-a536-33b7ebcbf6d7");
                    fA2Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fA2Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"2");
                }

                return fA2Text82f844376Text;
            }
        }

        /// <summary>
        /// Gets Reference to A2TextBlockText
        /// </summary>
        public Text A2TextBlockText
        {
            get
            {
                if (null == fA2TextBlockText)
                {
                    fA2TextBlockText = new Text("A2TextBlockText", A2Text82f844376Text);
                    fA2TextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fA2TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fA2TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"2");
                }

                return fA2TextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ConfigureDeviceButton
        /// </summary>
        public Button ConfigureDeviceButton
        {
            get
            {
                if (null == fConfigureDeviceButton)
                {
                    fConfigureDeviceButton = new Button("ConfigureDeviceButton", ServiceConfigurCustom);
                    fConfigureDeviceButton.UIMap.Scope = UIASeachScope.Children;
                    fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"cc06ce85-fb0a-4048-8b41-968e5c947ca3");
                    fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Configure Device...");
                }

                return fConfigureDeviceButton;
            }
        }

        /// <summary>
        /// Gets Reference to ConfigureDeviceText
        /// </summary>
        public Text ConfigureDeviceText
        {
            get
            {
                if (null == fConfigureDeviceText)
                {
                    fConfigureDeviceText = new Text("ConfigureDeviceText", ConfigureDeviceButton);
                    fConfigureDeviceText.UIMap.Scope = UIASeachScope.Children;
                    fConfigureDeviceText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fConfigureDeviceText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Configure Device...");
                }

                return fConfigureDeviceText;
            }
        }

        /// <summary>
        /// Gets Reference to TemplateConfiguTabItem
        /// </summary>
        public TabItem TemplateConfiguTabItem
        {
            get
            {
                if (null == fTemplateConfiguTabItem)
                {
                    fTemplateConfiguTabItem = new TabItem("TemplateConfiguTabItem", TabControlec0fdTab);
                    fTemplateConfiguTabItem.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AC05F9B9-A7D8-4b34-80E7-910FB9870D47");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                }

                return fTemplateConfiguTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to TemplateConfiguText
        /// </summary>
        public Text TemplateConfiguText
        {
            get
            {
                if (null == fTemplateConfiguText)
                {
                    fTemplateConfiguText = new Text("TemplateConfiguText", TemplateConfiguTabItem);
                    fTemplateConfiguText.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                }

                return fTemplateConfiguText;
            }
        }

        /// <summary>
        /// Gets Reference to LogTabItem9b4f3TabItem
        /// </summary>
        public TabItem LogTabItem9b4f3TabItem
        {
            get
            {
                if (null == fLogTabItem9b4f3TabItem)
                {
                    fLogTabItem9b4f3TabItem = new TabItem("LogTabItem9b4f3TabItem", TabControlec0fdTab);
                    fLogTabItem9b4f3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9b4f34bb-d75a-4080-9be3-1c50ec31c5b6");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTabItem9b4f3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to LogTextBlockText
        /// </summary>
        public Text LogTextBlockText
        {
            get
            {
                if (null == fLogTextBlockText)
                {
                    fLogTextBlockText = new Text("LogTextBlockText", LogTabItem9b4f3TabItem);
                    fLogTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup7TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup7TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup7TabItem)
                {
                    fSystemWindowsCoDup7TabItem = new TabItem("SystemWindowsCoDup7TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup7TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3AC8D4A8-3B06-421A-911B-E8CA248A9ED4");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup7TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SecurityTextmSeText
        /// </summary>
        public Text SecurityTextmSeText
        {
            get
            {
                if (null == fSecurityTextmSeText)
                {
                    fSecurityTextmSeText = new Text("SecurityTextmSeText", SystemWindowsCoDup7TabItem);
                    fSecurityTextmSeText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mSecurityTabLabel");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                }

                return fSecurityTextmSeText;
            }
        }

        /// <summary>
        /// Gets Reference to SecurityTextBloText
        /// </summary>
        public Text SecurityTextBloText
        {
            get
            {
                if (null == fSecurityTextBloText)
                {
                    fSecurityTextBloText = new Text("SecurityTextBloText", SecurityTextmSeText);
                    fSecurityTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                }

                return fSecurityTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to Text8A7A84DB894Text
        /// </summary>
        public Text Text8A7A84DB894Text
        {
            get
            {
                if (null == fText8A7A84DB894Text)
                {
                    fText8A7A84DB894Text = new Text("Text8A7A84DB894Text", SystemWindowsCoDup7TabItem);
                    fText8A7A84DB894Text.UIMap.Scope = UIASeachScope.Children;
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8A7A84DB-8945-40E1-A0F9-C40DDD129739");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText8A7A84DB894Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text16F78FB18FFText
        /// </summary>
        public Text Text16F78FB18FFText
        {
            get
            {
                if (null == fText16F78FB18FFText)
                {
                    fText16F78FB18FFText = new Text("Text16F78FB18FFText", SystemWindowsCoDup7TabItem);
                    fText16F78FB18FFText.UIMap.Scope = UIASeachScope.Children;
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16F78FB1-8FF9-4B0D-8251-FB09F520EA73");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText16F78FB18FFText;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup8TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup8TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup8TabItem)
                {
                    fSystemWindowsCoDup8TabItem = new TabItem("SystemWindowsCoDup8TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup8TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1678607C-20BF-4137-8238-C9D46EA8FF70");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup8TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AnalyticsTextmAText
        /// </summary>
        public Text AnalyticsTextmAText
        {
            get
            {
                if (null == fAnalyticsTextmAText)
                {
                    fAnalyticsTextmAText = new Text("AnalyticsTextmAText", SystemWindowsCoDup8TabItem);
                    fAnalyticsTextmAText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAnalyticsTabLabel");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                }

                return fAnalyticsTextmAText;
            }
        }

        /// <summary>
        /// Gets Reference to AnalyticsTextBlText
        /// </summary>
        public Text AnalyticsTextBlText
        {
            get
            {
                if (null == fAnalyticsTextBlText)
                {
                    fAnalyticsTextBlText = new Text("AnalyticsTextBlText", AnalyticsTextmAText);
                    fAnalyticsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                }

                return fAnalyticsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to AboutTabItemf45TabItem
        /// </summary>
        public TabItem AboutTabItemf45TabItem
        {
            get
            {
                if (null == fAboutTabItemf45TabItem)
                {
                    fAboutTabItemf45TabItem = new TabItem("AboutTabItemf45TabItem", TabControlec0fdTab);
                    fAboutTabItemf45TabItem.UIMap.Scope = UIASeachScope.Children;
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f45c22d9-f77a-481a-95bc-09cdff03e131");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                }

                return fAboutTabItemf45TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AboutTextBlockText
        /// </summary>
        public Text AboutTextBlockText
        {
            get
            {
                if (null == fAboutTextBlockText)
                {
                    fAboutTextBlockText = new Text("AboutTextBlockText", AboutTabItemf45TabItem);
                    fAboutTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                }

                return fAboutTextBlockText;
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------

namespace HP.ScalableTest.Plugin.DSSConfiguration.UIMaps
{
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class DSS_EmailForDevice
    {
        /// <summary>
        /// Backing field for HPDigitalSendinWindow property
        /// </summary>
        private Window fHPDigitalSendinWindow;

        /// <summary>
        /// Backing field for ConfigureDeviceWindow property
        /// </summary>
        private Window fConfigureDeviceWindow;

        /// <summary>
        /// Backing field for PopupWindow property
        /// </summary>
        private Window fPopupWindow;

        /// <summary>
        /// Backing field for ScrollViewerDroPane property
        /// </summary>
        private Pane fScrollViewerDroPane;

        /// <summary>
        /// Backing field for DirectlyfromtheDup0ListItem property
        /// </summary>
        private ListItem fDirectlyfromtheDup0ListItem;

        /// <summary>
        /// Backing field for DirectlyfromtheDup0Text property
        /// </summary>
        private Text fDirectlyfromtheDup0Text;

        /// <summary>
        /// Backing field for viatheDigitalSeDup0ListItem property
        /// </summary>
        private ListItem fviatheDigitalSeDup0ListItem;

        /// <summary>
        /// Backing field for viatheDigitalSeDup0Text property
        /// </summary>
        private Text fviatheDigitalSeDup0Text;

        /// <summary>
        /// Backing field for ScrollBarVerticDup0ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup0ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup0ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup0ScrollBar;

        /// <summary>
        /// Backing field for ConfigureDeviceTitleBar property
        /// </summary>
        private TitleBar fConfigureDeviceTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyDup0MenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyDup0MenuBar;

        /// <summary>
        /// Backing field for SystemItem1Dup0MenuItem property
        /// </summary>
        private MenuItem fSystemItem1Dup0MenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizDup0Button property
        /// </summary>
        private Button fMinimizeMinimizDup0Button;

        /// <summary>
        /// Backing field for MaximizeMaximizButton property
        /// </summary>
        private Button fMaximizeMaximizButton;

        /// <summary>
        /// Backing field for CloseCloseDup0Button property
        /// </summary>
        private Button fCloseCloseDup0Button;

        /// <summary>
        /// Backing field for HelpButtonfb686Button property
        /// </summary>
        private Button fHelpButtonfb686Button;

        /// <summary>
        /// Backing field for HelpTextBlockDup0Text property
        /// </summary>
        private Text fHelpTextBlockDup0Text;

        /// <summary>
        /// Backing field for ApplyButton46D6Button property
        /// </summary>
        private Button fApplyButton46D6Button;

        /// <summary>
        /// Backing field for ApplyTextBlockDup0Text property
        /// </summary>
        private Text fApplyTextBlockDup0Text;

        /// <summary>
        /// Backing field for CancelButtoned9Button property
        /// </summary>
        private Button fCancelButtoned9Button;

        /// <summary>
        /// Backing field for CancelTextBlockDup0Text property
        /// </summary>
        private Text fCancelTextBlockDup0Text;

        /// <summary>
        /// Backing field for OKButton8c9182aButton property
        /// </summary>
        private Button fOKButton8c9182aButton;

        /// <summary>
        /// Backing field for OKTextBlockDup0Text property
        /// </summary>
        private Text fOKTextBlockDup0Text;

        /// <summary>
        /// Backing field for TabControl2111BTab property
        /// </summary>
        private Tab fTabControl2111BTab;

        /// <summary>
        /// Backing field for SystemWindowsCoDup0TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup0TabItem;

        /// <summary>
        /// Backing field for GeneralTextmGenDup0Text property
        /// </summary>
        private Text fGeneralTextmGenDup0Text;

        /// <summary>
        /// Backing field for GeneralTextBlocDup0Text property
        /// </summary>
        private Text fGeneralTextBlocDup0Text;

        /// <summary>
        /// Backing field for Text9127A6692D0Text property
        /// </summary>
        private Text fText9127A6692D0Text;

        /// <summary>
        /// Backing field for ProgressBar836eProgressBar property
        /// </summary>
        private ProgressBar fProgressBar836eProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup1TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup1TabItem;

        /// <summary>
        /// Backing field for AuthenticationTDup0Text property
        /// </summary>
        private Text fAuthenticationTDup0Text;

        /// <summary>
        /// Backing field for AuthenticationTDup1Text property
        /// </summary>
        private Text fAuthenticationTDup1Text;

        /// <summary>
        /// Backing field for Text2087FBF2200Text property
        /// </summary>
        private Text fText2087FBF2200Text;

        /// <summary>
        /// Backing field for Text3C0A7A0B490Text property
        /// </summary>
        private Text fText3C0A7A0B490Text;

        /// <summary>
        /// Backing field for ProgressBar992dProgressBar property
        /// </summary>
        private ProgressBar fProgressBar992dProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup2TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup2TabItem;

        /// <summary>
        /// Backing field for SendtoEmailTextDup0Text property
        /// </summary>
        private Text fSendtoEmailTextDup0Text;

        /// <summary>
        /// Backing field for SendtoEmailTextDup1Text property
        /// </summary>
        private Text fSendtoEmailTextDup1Text;

        /// <summary>
        /// Backing field for Text265ea8f2a5fText property
        /// </summary>
        private Text fText265ea8f2a5fText;

        /// <summary>
        /// Backing field for TextBlockDup0Text property
        /// </summary>
        private Text fTextBlockDup0Text;

        /// <summary>
        /// Backing field for Text1a251d5f398Text property
        /// </summary>
        private Text fText1a251d5f398Text;

        /// <summary>
        /// Backing field for TextBlockDup1Text property
        /// </summary>
        private Text fTextBlockDup1Text;

        /// <summary>
        /// Backing field for ProgressBara2e8ProgressBar property
        /// </summary>
        private ProgressBar fProgressBara2e8ProgressBar;

        /// <summary>
        /// Backing field for TabStatusUserCoCustom property
        /// </summary>
        private Custom fTabStatusUserCoCustom;

        /// <summary>
        /// Backing field for ErrorTextBlockText property
        /// </summary>
        private Text fEnabledTextBlocText;

        /// <summary>
        /// Backing field for MfpConfiguratioCustom property
        /// </summary>
        private Custom fMfpConfiguratioCustom;

        /// <summary>
        /// Backing field for ScrollViewer363Pane property
        /// </summary>
        private Pane fScrollViewer363Pane;

        /// <summary>
        /// Backing field for ErrorConflictUsCustom property
        /// </summary>
        private Custom fErrorConflictUsCustom;

        /// <summary>
        /// Backing field for ImageDup0Image property
        /// </summary>
        private Image fImageDup0Image;

        /// <summary>
        /// Backing field for A1AnOutgoingEmaText property
        /// </summary>
        private Text fA1AnOutgoingEmaText;

        /// <summary>
        /// Backing field for EnableSendtoEmaCheckBox property
        /// </summary>
        private CheckBox fEnableSendtoEmaCheckBox;

        /// <summary>
        /// Backing field for EnableSendtoEmaText property
        /// </summary>
        private Text fEnableSendtoEmaText;

        /// <summary>
        /// Backing field for OutgoingEmailSeGroup property
        /// </summary>
        private Group fOutgoingEmailSeGroup;

        /// <summary>
        /// Backing field for OutgoingEmailSeText property
        /// </summary>
        private Text fOutgoingEmailSeText;

        /// <summary>
        /// Backing field for SendEmailText property
        /// </summary>
        private Text fSendEmailText;

        /// <summary>
        /// Backing field for SendEmailTextBlText property
        /// </summary>
        private Text fSendEmailTextBlText;

        /// <summary>
        /// Backing field for ComboBoxA9893D6ComboBox property
        /// </summary>
        private ComboBox fComboBoxA9893D6ComboBox;

        /// <summary>
        /// Backing field for DirectlyfromtheDup1ListItem property
        /// </summary>
        private ListItem fDirectlyfromtheDup1ListItem;

        /// <summary>
        /// Backing field for DirectlyfromtheDup1Text property
        /// </summary>
        private Text fDirectlyfromtheDup1Text;

        /// <summary>
        /// Backing field for viatheDigitalSeDup1ListItem property
        /// </summary>
        private ListItem fviatheDigitalSeDup1ListItem;

        /// <summary>
        /// Backing field for viatheDigitalSeDup1Text property
        /// </summary>
        private Text fviatheDigitalSeDup1Text;

        /// <summary>
        /// Backing field for ListView60e9923DataGrid property
        /// </summary>
        private DataGrid fListView60e9923DataGrid;

        /// <summary>
        /// Backing field for GridViewHeaderRDup0Header property
        /// </summary>
        private Header fGridViewHeaderRDup0Header;

        /// <summary>
        /// Backing field for ServerNameGridVHeaderItem property
        /// </summary>
        private HeaderItem fServerNameGridVHeaderItem;

        /// <summary>
        /// Backing field for ServerNameText property
        /// </summary>
        private Text fServerNameText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup0Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup0Thumb;

        /// <summary>
        /// Backing field for PortNumberGridVHeaderItem property
        /// </summary>
        private HeaderItem fPortNumberGridVHeaderItem;

        /// <summary>
        /// Backing field for PortNumberText property
        /// </summary>
        private Text fPortNumberText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup1Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup1Thumb;

        /// <summary>
        /// Backing field for ServerUsageGridHeaderItem property
        /// </summary>
        private HeaderItem fServerUsageGridHeaderItem;

        /// <summary>
        /// Backing field for ServerUsageText property
        /// </summary>
        private Text fServerUsageText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup2Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup2Thumb;

        /// <summary>
        /// Backing field for Buttondef1110f9Button property
        /// </summary>
        private Button fButtondef1110f9Button;

        /// <summary>
        /// Backing field for ImagemEmailUpBuImage property
        /// </summary>
        private Image fImagemEmailUpBuImage;

        /// <summary>
        /// Backing field for Button3eb872397Button property
        /// </summary>
        private Button fButton3eb872397Button;

        /// <summary>
        /// Backing field for ImagemEmailDownImage property
        /// </summary>
        private Image fImagemEmailDownImage;

        /// <summary>
        /// Backing field for OnlyoneoutgoingText property
        /// </summary>
        private Text fOnlyoneoutgoingText;

        /// <summary>
        /// Backing field for AddButtonc35761Button property
        /// </summary>
        private Button fAddButtonc35761Button;

        /// <summary>
        /// Backing field for AddTextBlockDup0Text property
        /// </summary>
        private Text fAddTextBlockDup0Text;

        /// <summary>
        /// Backing field for EditButton17099Button property
        /// </summary>
        private Button fEditButton17099Button;

        /// <summary>
        /// Backing field for EditTextBlockDup0Text property
        /// </summary>
        private Text fEditTextBlockDup0Text;

        /// <summary>
        /// Backing field for RemoveButton254Button property
        /// </summary>
        private Button fRemoveButton254Button;

        /// <summary>
        /// Backing field for RemoveTextBlockDup0Text property
        /// </summary>
        private Text fRemoveTextBlockDup0Text;

        /// <summary>
        /// Backing field for QuickSetsGroupBGroup property
        /// </summary>
        private Group fQuickSetsGroupBGroup;

        /// <summary>
        /// Backing field for QuickSetsTextBlText property
        /// </summary>
        private Text fQuickSetsTextBlText;

        /// <summary>
        /// Backing field for ListView561a7cfDataGrid property
        /// </summary>
        private DataGrid fListView561a7cfDataGrid;

        /// <summary>
        /// Backing field for GridViewHeaderRDup1Header property
        /// </summary>
        private Header fGridViewHeaderRDup1Header;

        /// <summary>
        /// Backing field for QuickSetTitleGrHeaderItem property
        /// </summary>
        private HeaderItem fQuickSetTitleGrHeaderItem;

        /// <summary>
        /// Backing field for QuickSetTitleText property
        /// </summary>
        private Text fQuickSetTitleText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup3Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup3Thumb;

        /// <summary>
        /// Backing field for QuickSetDescripHeaderItem property
        /// </summary>
        private HeaderItem fQuickSetDescripHeaderItem;

        /// <summary>
        /// Backing field for QuickSetDescripText property
        /// </summary>
        private Text fQuickSetDescripText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup4Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup4Thumb;

        /// <summary>
        /// Backing field for ButtonLocationGHeaderItem property
        /// </summary>
        private HeaderItem fButtonLocationGHeaderItem;

        /// <summary>
        /// Backing field for ButtonLocationText property
        /// </summary>
        private Text fButtonLocationText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup5Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup5Thumb;

        /// <summary>
        /// Backing field for HPDssAppConfiguDup0I0XDataItem property
        /// </summary>
        private DataItem fHPDssAppConfiguDup0I0XDataItem;

        /// <summary>
        /// Backing field for BlackPDFTextBloText property
        /// </summary>
        private Text fBlackPDFTextBloText;

        /// <summary>
        /// Backing field for A1sided150dpiTeDup0Text property
        /// </summary>
        private Text fA1sided150dpiTeDup0Text;

        /// <summary>
        /// Backing field for QuickSetsApplicDup0Text property
        /// </summary>
        private Text fQuickSetsApplicDup0Text;

        /// <summary>
        /// Backing field for HPDssAppConfiguDup1I1XDataItem property
        /// </summary>
        private DataItem fHPDssAppConfiguDup1I1XDataItem;

        /// <summary>
        /// Backing field for ColorPDFTextBloText property
        /// </summary>
        private Text fColorPDFTextBloText;

        /// <summary>
        /// Backing field for A1sided150dpiTeDup1Text property
        /// </summary>
        private Text fA1sided150dpiTeDup1Text;

        /// <summary>
        /// Backing field for QuickSetsApplicDup1Text property
        /// </summary>
        private Text fQuickSetsApplicDup1Text;

        /// <summary>
        /// Backing field for AddButton4ec552Button property
        /// </summary>
        private Button fAddButton4ec552Button;

        /// <summary>
        /// Backing field for AddTextBlockDup1Text property
        /// </summary>
        private Text fAddTextBlockDup1Text;

        /// <summary>
        /// Backing field for EditButton2100dButton property
        /// </summary>
        private Button fEditButton2100dButton;

        /// <summary>
        /// Backing field for EditTextBlockDup1Text property
        /// </summary>
        private Text fEditTextBlockDup1Text;

        /// <summary>
        /// Backing field for CopyButtonf36c5Button property
        /// </summary>
        private Button fCopyButtonf36c5Button;

        /// <summary>
        /// Backing field for CopyTextBlockText property
        /// </summary>
        private Text fCopyTextBlockText;

        /// <summary>
        /// Backing field for RemoveButton78fButton property
        /// </summary>
        private Button fRemoveButton78fButton;

        /// <summary>
        /// Backing field for RemoveTextBlockDup1Text property
        /// </summary>
        private Text fRemoveTextBlockDup1Text;

        /// <summary>
        /// Backing field for AddressandMessaGroup property
        /// </summary>
        private Group fAddressandMessaGroup;

        /// <summary>
        /// Backing field for AddressandMessaText property
        /// </summary>
        private Text fAddressandMessaText;

        /// <summary>
        /// Backing field for SelectthedesireText property
        /// </summary>
        private Text fSelectthedesireText;

        /// <summary>
        /// Backing field for AddressFieldResDup0Text property
        /// </summary>
        private Text fAddressFieldResDup0Text;

        /// <summary>
        /// Backing field for AddressFieldResDup1Text property
        /// </summary>
        private Text fAddressFieldResDup1Text;

        /// <summary>
        /// Backing field for ComboBoxC9F27ECComboBox property
        /// </summary>
        private ComboBox fComboBoxC9F27ECComboBox;

        /// <summary>
        /// Backing field for SettingappliesiText property
        /// </summary>
        private Text fSettingappliesiText;

        /// <summary>
        /// Backing field for FromTextf77e3d2Text property
        /// </summary>
        private Text fFromTextf77e3d2Text;

        /// <summary>
        /// Backing field for FromTextBlockText property
        /// </summary>
        private Text fFromTextBlockText;

        /// <summary>
        /// Backing field for ComboBox79BAB33ComboBox property
        /// </summary>
        private ComboBox fComboBox79BAB33ComboBox;

        /// <summary>
        /// Backing field for UsereditableCheDup0CheckBox property
        /// </summary>
        private CheckBox fUsereditableCheDup0CheckBox;

        /// <summary>
        /// Backing field for UsereditableTexDup0Text property
        /// </summary>
        private Text fUsereditableTexDup0Text;

        /// <summary>
        /// Backing field for GroupBoxmOnlyApGroup property
        /// </summary>
        private Group fGroupBoxmOnlyApGroup;

        /// <summary>
        /// Backing field for DefaultFromText property
        /// </summary>
        private Text fDefaultFromText;

        /// <summary>
        /// Backing field for DefaultFromTextText property
        /// </summary>
        private Text fDefaultFromTextText;

        /// <summary>
        /// Backing field for TextBox2E78C91AEdit property
        /// </summary>
        private Edit fTextBox2E78C91AEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup0Pane property
        /// </summary>
        private Pane fScrollViewerPARDup0Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup1ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup1ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup1ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup1ScrollBar;

        /// <summary>
        /// Backing field for DefaultDisplayNDup0Text property
        /// </summary>
        private Text fDefaultDisplayNDup0Text;

        /// <summary>
        /// Backing field for DefaultDisplayNDup1Text property
        /// </summary>
        private Text fDefaultDisplayNDup1Text;

        /// <summary>
        /// Backing field for TextBox01092B21Edit property
        /// </summary>
        private Edit fTextBox01092B21Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup1Pane property
        /// </summary>
        private Pane fScrollViewerPARDup1Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup2ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup2ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup2ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup2ScrollBar;

        /// <summary>
        /// Backing field for NoteAdefaultFroText property
        /// </summary>
        private Text fNoteAdefaultFroText;

        /// <summary>
        /// Backing field for NoteThisisanoptText property
        /// </summary>
        private Text fNoteThisisanoptText;

        /// <summary>
        /// Backing field for AlwaysApplyRadiRadioButton property
        /// </summary>
        private RadioButton fAlwaysApplyRadiRadioButton;

        /// <summary>
        /// Backing field for ApplyonlyifnotaRadioButton property
        /// </summary>
        private RadioButton fApplyonlyifnotaRadioButton;

        /// <summary>
        /// Backing field for ToText0b5099608Text property
        /// </summary>
        private Text fToText0b5099608Text;

        /// <summary>
        /// Backing field for ToTextBlockText property
        /// </summary>
        private Text fToTextBlockText;

        /// <summary>
        /// Backing field for ComboBox51181A4ComboBox property
        /// </summary>
        private ComboBox fComboBox51181A4ComboBox;

        /// <summary>
        /// Backing field for UsereditableCheDup1CheckBox property
        /// </summary>
        private CheckBox fUsereditableCheDup1CheckBox;

        /// <summary>
        /// Backing field for UsereditableTexDup1Text property
        /// </summary>
        private Text fUsereditableTexDup1Text;

        /// <summary>
        /// Backing field for CCTextaf163d019Text property
        /// </summary>
        private Text fCCTextaf163d019Text;

        /// <summary>
        /// Backing field for CCTextBlockText property
        /// </summary>
        private Text fCCTextBlockText;

        /// <summary>
        /// Backing field for ComboBoxADC0CADComboBox property
        /// </summary>
        private ComboBox fComboBoxADC0CADComboBox;

        /// <summary>
        /// Backing field for UsereditableCheDup2CheckBox property
        /// </summary>
        private CheckBox fUsereditableCheDup2CheckBox;

        /// <summary>
        /// Backing field for UsereditableTexDup2Text property
        /// </summary>
        private Text fUsereditableTexDup2Text;

        /// <summary>
        /// Backing field for BCCTextaeea6c74Text property
        /// </summary>
        private Text fBCCTextaeea6c74Text;

        /// <summary>
        /// Backing field for BCCTextBlockText property
        /// </summary>
        private Text fBCCTextBlockText;

        /// <summary>
        /// Backing field for ComboBox0746471ComboBox property
        /// </summary>
        private ComboBox fComboBox0746471ComboBox;

        /// <summary>
        /// Backing field for UsereditableCheDup3CheckBox property
        /// </summary>
        private CheckBox fUsereditableCheDup3CheckBox;

        /// <summary>
        /// Backing field for UsereditableTexDup3Text property
        /// </summary>
        private Text fUsereditableTexDup3Text;

        /// <summary>
        /// Backing field for SubjectText property
        /// </summary>
        private Text fSubjectText;

        /// <summary>
        /// Backing field for SubjectTextBlocText property
        /// </summary>
        private Text fSubjectTextBlocText;

        /// <summary>
        /// Backing field for TextBox2DDF7D8BEdit property
        /// </summary>
        private Edit fTextBox2DDF7D8BEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup2Pane property
        /// </summary>
        private Pane fScrollViewerPARDup2Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup3ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup3ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup3ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup3ScrollBar;

        /// <summary>
        /// Backing field for UsereditableCheDup4CheckBox property
        /// </summary>
        private CheckBox fUsereditableCheDup4CheckBox;

        /// <summary>
        /// Backing field for UsereditableTexDup4Text property
        /// </summary>
        private Text fUsereditableTexDup4Text;

        /// <summary>
        /// Backing field for DefaultMessageText property
        /// </summary>
        private Text fDefaultMessageText;

        /// <summary>
        /// Backing field for DefaultMessageTText property
        /// </summary>
        private Text fDefaultMessageTText;

        /// <summary>
        /// Backing field for TextBox78FA07F4Edit property
        /// </summary>
        private Edit fTextBox78FA07F4Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup3Pane property
        /// </summary>
        private Pane fScrollViewerPARDup3Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup4ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup4ScrollBar;

        /// <summary>
        /// Backing field for RepeatButtonLinDup0Button property
        /// </summary>
        private Button fRepeatButtonLinDup0Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup0Button property
        /// </summary>
        private Button fRepeatButtonPagDup0Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup1Button property
        /// </summary>
        private Button fRepeatButtonPagDup1Button;

        /// <summary>
        /// Backing field for ThumbDup0Thumb property
        /// </summary>
        private Thumb fThumbDup0Thumb;

        /// <summary>
        /// Backing field for RepeatButtonLinDup1Button property
        /// </summary>
        private Button fRepeatButtonLinDup1Button;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup4ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup4ScrollBar;

        /// <summary>
        /// Backing field for UsereditableCheDup5CheckBox property
        /// </summary>
        private CheckBox fUsereditableCheDup5CheckBox;

        /// <summary>
        /// Backing field for UsereditableTexDup5Text property
        /// </summary>
        private Text fUsereditableTexDup5Text;

        /// <summary>
        /// Backing field for SigningandEncryGroup property
        /// </summary>
        private Group fSigningandEncryGroup;

        /// <summary>
        /// Backing field for SigningandEncryText property
        /// </summary>
        private Text fSigningandEncryText;

        /// <summary>
        /// Backing field for SigningTextmEmaText property
        /// </summary>
        private Text fSigningTextmEmaText;

        /// <summary>
        /// Backing field for SigningTextBlocText property
        /// </summary>
        private Text fSigningTextBlocText;

        /// <summary>
        /// Backing field for ComboBoxA6DF22FComboBox property
        /// </summary>
        private ComboBox fComboBoxA6DF22FComboBox;

        /// <summary>
        /// Backing field for UsereditableCheDup6CheckBox property
        /// </summary>
        private CheckBox fUsereditableCheDup6CheckBox;

        /// <summary>
        /// Backing field for UsereditableTexDup6Text property
        /// </summary>
        private Text fUsereditableTexDup6Text;

        /// <summary>
        /// Backing field for EncryptionTextmText property
        /// </summary>
        private Text fEncryptionTextmText;

        /// <summary>
        /// Backing field for EncryptionTextBText property
        /// </summary>
        private Text fEncryptionTextBText;

        /// <summary>
        /// Backing field for ComboBoxC331B21ComboBox property
        /// </summary>
        private ComboBox fComboBoxC331B21ComboBox;

        /// <summary>
        /// Backing field for UsereditableCheDup7CheckBox property
        /// </summary>
        private CheckBox fUsereditableCheDup7CheckBox;

        /// <summary>
        /// Backing field for UsereditableTexDup7Text property
        /// </summary>
        private Text fUsereditableTexDup7Text;

        /// <summary>
        /// Backing field for AttributeforRecDup0Text property
        /// </summary>
        private Text fAttributeforRecDup0Text;

        /// <summary>
        /// Backing field for AttributeforRecDup1Text property
        /// </summary>
        private Text fAttributeforRecDup1Text;

        /// <summary>
        /// Backing field for TextBoxD598C919Edit property
        /// </summary>
        private Edit fTextBoxD598C919Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup4Pane property
        /// </summary>
        private Pane fScrollViewerPARDup4Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup5ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup5ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup5ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup5ScrollBar;

        /// <summary>
        /// Backing field for RetrieverecipieText property
        /// </summary>
        private Text fRetrieverecipieText;

        /// <summary>
        /// Backing field for NotificationSetGroup property
        /// </summary>
        private Group fNotificationSetGroup;

        /// <summary>
        /// Backing field for NotificationSetText property
        /// </summary>
        private Text fNotificationSetText;

        /// <summary>
        /// Backing field for ConditiononWhicDup0Text property
        /// </summary>
        private Text fConditiononWhicDup0Text;

        /// <summary>
        /// Backing field for ConditiononWhicDup1Text property
        /// </summary>
        private Text fConditiononWhicDup1Text;

        /// <summary>
        /// Backing field for ComboBoxacd621dComboBox property
        /// </summary>
        private ComboBox fComboBoxacd621dComboBox;

        /// <summary>
        /// Backing field for MethodUsedtoDelDup0Text property
        /// </summary>
        private Text fMethodUsedtoDelDup0Text;

        /// <summary>
        /// Backing field for MethodUsedtoDelDup1Text property
        /// </summary>
        private Text fMethodUsedtoDelDup1Text;

        /// <summary>
        /// Backing field for ComboBox116120eComboBox property
        /// </summary>
        private ComboBox fComboBox116120eComboBox;

        /// <summary>
        /// Backing field for NotificationEmaDup0Text property
        /// </summary>
        private Text fNotificationEmaDup0Text;

        /// <summary>
        /// Backing field for NotificationEmaDup1Text property
        /// </summary>
        private Text fNotificationEmaDup1Text;

        /// <summary>
        /// Backing field for TextBox23C3F3A3Edit property
        /// </summary>
        private Edit fTextBox23C3F3A3Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup5Pane property
        /// </summary>
        private Pane fScrollViewerPARDup5Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup6ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup6ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup6ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup6ScrollBar;

        /// <summary>
        /// Backing field for IncludeThumbnaiCheckBox property
        /// </summary>
        private CheckBox fIncludeThumbnaiCheckBox;

        /// <summary>
        /// Backing field for IncludeThumbnaiText property
        /// </summary>
        private Text fIncludeThumbnaiText;

        /// <summary>
        /// Backing field for TextBoxEdit property
        /// </summary>
        private Edit fTextBoxEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup6Pane property
        /// </summary>
        private Pane fScrollViewerPARDup6Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup7ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup7ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup7ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup7ScrollBar;

        /// <summary>
        /// Backing field for ScanSettingsGroGroup property
        /// </summary>
        private Group fScanSettingsGroGroup;

        /// <summary>
        /// Backing field for ScanSettingsTexText property
        /// </summary>
        private Text fScanSettingsTexText;

        /// <summary>
        /// Backing field for OriginalSizeText property
        /// </summary>
        private Text fOriginalSizeText;

        /// <summary>
        /// Backing field for OriginalSizeTexText property
        /// </summary>
        private Text fOriginalSizeTexText;

        /// <summary>
        /// Backing field for ComboBox1ed9470ComboBox property
        /// </summary>
        private ComboBox fComboBox1ed9470ComboBox;

        /// <summary>
        /// Backing field for CustomDimensionText property
        /// </summary>
        private Text fCustomDimensionText;

        /// <summary>
        /// Backing field for ComboBox5ab7dadComboBox property
        /// </summary>
        private ComboBox fComboBox5ab7dadComboBox;

        /// <summary>
        /// Backing field for CustomXDimensioText property
        /// </summary>
        private Text fCustomXDimensioText;

        /// <summary>
        /// Backing field for TextBoxd0359958Edit property
        /// </summary>
        private Edit fTextBoxd0359958Edit;

        /// <summary>
        /// Backing field for CustomYDimensioText property
        /// </summary>
        private Text fCustomYDimensioText;

        /// <summary>
        /// Backing field for TextBox4212ecdeEdit property
        /// </summary>
        private Edit fTextBox4212ecdeEdit;

        /// <summary>
        /// Backing field for OriginalSidesText property
        /// </summary>
        private Text fOriginalSidesText;

        /// <summary>
        /// Backing field for OriginalSidesTeText property
        /// </summary>
        private Text fOriginalSidesTeText;

        /// <summary>
        /// Backing field for ComboBox0bf3c30ComboBox property
        /// </summary>
        private ComboBox fComboBox0bf3c30ComboBox;

        /// <summary>
        /// Backing field for OptimizeTextPicDup0Text property
        /// </summary>
        private Text fOptimizeTextPicDup0Text;

        /// <summary>
        /// Backing field for OptimizeTextPicDup1Text property
        /// </summary>
        private Text fOptimizeTextPicDup1Text;

        /// <summary>
        /// Backing field for ComboBox95d815aComboBox property
        /// </summary>
        private ComboBox fComboBox95d815aComboBox;

        /// <summary>
        /// Backing field for OptimizeForText property
        /// </summary>
        private Text fOptimizeForText;

        /// <summary>
        /// Backing field for OptimizeForTextText property
        /// </summary>
        private Text fOptimizeForTextText;

        /// <summary>
        /// Backing field for ComboBox7a26f01ComboBox property
        /// </summary>
        private ComboBox fComboBox7a26f01ComboBox;

        /// <summary>
        /// Backing field for ContentOrientatDup0Text property
        /// </summary>
        private Text fContentOrientatDup0Text;

        /// <summary>
        /// Backing field for ContentOrientatDup1Text property
        /// </summary>
        private Text fContentOrientatDup1Text;

        /// <summary>
        /// Backing field for ComboBoxbec0157ComboBox property
        /// </summary>
        private ComboBox fComboBoxbec0157ComboBox;

        /// <summary>
        /// Backing field for A2SidedFormatTeDup0Text property
        /// </summary>
        private Text fA2SidedFormatTeDup0Text;

        /// <summary>
        /// Backing field for A2SidedFormatTeDup1Text property
        /// </summary>
        private Text fA2SidedFormatTeDup1Text;

        /// <summary>
        /// Backing field for ComboBox06cb7dfComboBox property
        /// </summary>
        private ComboBox fComboBox06cb7dfComboBox;

        /// <summary>
        /// Backing field for BackgroundCleanDup0Text property
        /// </summary>
        private Text fBackgroundCleanDup0Text;

        /// <summary>
        /// Backing field for BackgroundCleanDup1Text property
        /// </summary>
        private Text fBackgroundCleanDup1Text;

        /// <summary>
        /// Backing field for ComboBoxd01f295ComboBox property
        /// </summary>
        private ComboBox fComboBoxd01f295ComboBox;

        /// <summary>
        /// Backing field for DarknessText property
        /// </summary>
        private Text fDarknessText;

        /// <summary>
        /// Backing field for DarknessTextBloText property
        /// </summary>
        private Text fDarknessTextBloText;

        /// <summary>
        /// Backing field for ComboBoxd4a708cComboBox property
        /// </summary>
        private ComboBox fComboBoxd4a708cComboBox;

        /// <summary>
        /// Backing field for ContrastText property
        /// </summary>
        private Text fContrastText;

        /// <summary>
        /// Backing field for ContrastTextBloText property
        /// </summary>
        private Text fContrastTextBloText;

        /// <summary>
        /// Backing field for ComboBoxd702915ComboBox property
        /// </summary>
        private ComboBox fComboBoxd702915ComboBox;

        /// <summary>
        /// Backing field for SharpnessText property
        /// </summary>
        private Text fSharpnessText;

        /// <summary>
        /// Backing field for SharpnessTextBlText property
        /// </summary>
        private Text fSharpnessTextBlText;

        /// <summary>
        /// Backing field for ComboBox8bdd792ComboBox property
        /// </summary>
        private ComboBox fComboBox8bdd792ComboBox;

        /// <summary>
        /// Backing field for ColorDropoutText property
        /// </summary>
        private Text fColorDropoutText;

        /// <summary>
        /// Backing field for ComboBox1b66d63ComboBox property
        /// </summary>
        private ComboBox fComboBox1b66d63ComboBox;

        /// <summary>
        /// Backing field for ImagePreviewText property
        /// </summary>
        private Text fImagePreviewText;

        /// <summary>
        /// Backing field for ImagePreviewTexText property
        /// </summary>
        private Text fImagePreviewTexText;

        /// <summary>
        /// Backing field for ComboBoxb0d09f3ComboBox property
        /// </summary>
        private ComboBox fComboBoxb0d09f3ComboBox;

        /// <summary>
        /// Backing field for CroppingOptionsDup0Text property
        /// </summary>
        private Text fCroppingOptionsDup0Text;

        /// <summary>
        /// Backing field for CroppingOptionsDup1Text property
        /// </summary>
        private Text fCroppingOptionsDup1Text;

        /// <summary>
        /// Backing field for ComboBox791C2F7ComboBox property
        /// </summary>
        private ComboBox fComboBox791C2F7ComboBox;

        /// <summary>
        /// Backing field for JobBuildCheckBoCheckBox property
        /// </summary>
        private CheckBox fJobBuildCheckBoCheckBox;

        /// <summary>
        /// Backing field for JobBuildTextBloText property
        /// </summary>
        private Text fJobBuildTextBloText;

        /// <summary>
        /// Backing field for AutomaticToneChCheckBox property
        /// </summary>
        private CheckBox fAutomaticToneChCheckBox;

        /// <summary>
        /// Backing field for CheckingthisboxText property
        /// </summary>
        private Text fCheckingthisboxText;

        /// <summary>
        /// Backing field for AutomaticallyStCheckBox property
        /// </summary>
        private CheckBox fAutomaticallyStCheckBox;

        /// <summary>
        /// Backing field for WhenenabledpageText property
        /// </summary>
        private Text fWhenenabledpageText;

        /// <summary>
        /// Backing field for MultifeedDetectCheckBox property
        /// </summary>
        private CheckBox fMultifeedDetectCheckBox;

        /// <summary>
        /// Backing field for MultifeedDetectText property
        /// </summary>
        private Text fMultifeedDetectText;

        /// <summary>
        /// Backing field for EraseEdgeUserCoCustom property
        /// </summary>
        private Custom fEraseEdgeUserCoCustom;

        /// <summary>
        /// Backing field for EraseEdgesGroupGroup property
        /// </summary>
        private Group fEraseEdgesGroupGroup;

        /// <summary>
        /// Backing field for EraseEdgesTextBDup0Text property
        /// </summary>
        private Text fEraseEdgesTextBDup0Text;

        /// <summary>
        /// Backing field for EraseEdgesCheckCheckBox property
        /// </summary>
        private CheckBox fEraseEdgesCheckCheckBox;

        /// <summary>
        /// Backing field for EraseEdgesTextBDup1Text property
        /// </summary>
        private Text fEraseEdgesTextBDup1Text;

        /// <summary>
        /// Backing field for UseinchesCheckBCheckBox property
        /// </summary>
        private CheckBox fUseinchesCheckBCheckBox;

        /// <summary>
        /// Backing field for FrontsideeraseGGroup property
        /// </summary>
        private Group fFrontsideeraseGGroup;

        /// <summary>
        /// Backing field for BacksideeraseGrGroup property
        /// </summary>
        private Group fBacksideeraseGrGroup;

        /// <summary>
        /// Backing field for FileSettingsGroGroup property
        /// </summary>
        private Group fFileSettingsGroGroup;

        /// <summary>
        /// Backing field for FileSettingsTexText property
        /// </summary>
        private Text fFileSettingsTexText;

        /// <summary>
        /// Backing field for FileNamePrefixTDup0Text property
        /// </summary>
        private Text fFileNamePrefixTDup0Text;

        /// <summary>
        /// Backing field for FileNamePrefixTDup1Text property
        /// </summary>
        private Text fFileNamePrefixTDup1Text;

        /// <summary>
        /// Backing field for TextBox354da417Edit property
        /// </summary>
        private Edit fTextBox354da417Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup7Pane property
        /// </summary>
        private Pane fScrollViewerPARDup7Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup8ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup8ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup8ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup8ScrollBar;

        /// <summary>
        /// Backing field for Expander51d258dGroup property
        /// </summary>
        private Group fExpander51d258dGroup;

        /// <summary>
        /// Backing field for ButtonHeaderSitDup0Button property
        /// </summary>
        private Button fButtonHeaderSitDup0Button;

        /// <summary>
        /// Backing field for NotusereditableDup0Text property
        /// </summary>
        private Text fNotusereditableDup0Text;

        /// <summary>
        /// Backing field for NotusereditableDup1Text property
        /// </summary>
        private Text fNotusereditableDup1Text;

        /// <summary>
        /// Backing field for DefaultFileNameDup0Text property
        /// </summary>
        private Text fDefaultFileNameDup0Text;

        /// <summary>
        /// Backing field for DefaultFileNameDup1Text property
        /// </summary>
        private Text fDefaultFileNameDup1Text;

        /// <summary>
        /// Backing field for TextBoxb0f48232Edit property
        /// </summary>
        private Edit fTextBoxb0f48232Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup8Pane property
        /// </summary>
        private Pane fScrollViewerPARDup8Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup9ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup9ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup9ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup9ScrollBar;

        /// <summary>
        /// Backing field for UsereditableCheDup8CheckBox property
        /// </summary>
        private CheckBox fUsereditableCheDup8CheckBox;

        /// <summary>
        /// Backing field for UsereditableTexDup8Text property
        /// </summary>
        private Text fUsereditableTexDup8Text;

        /// <summary>
        /// Backing field for ExampleText3888Text property
        /// </summary>
        private Text fExampleText3888Text;

        /// <summary>
        /// Backing field for ExampleTextBlocText property
        /// </summary>
        private Text fExampleTextBlocText;

        /// <summary>
        /// Backing field for TextBox2adca00aEdit property
        /// </summary>
        private Edit fTextBox2adca00aEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup9Pane property
        /// </summary>
        private Pane fScrollViewerPARDup9Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup10ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup10ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup10ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup10ScrollBar;

        /// <summary>
        /// Backing field for FileNameSuffixTDup0Text property
        /// </summary>
        private Text fFileNameSuffixTDup0Text;

        /// <summary>
        /// Backing field for FileNameSuffixTDup1Text property
        /// </summary>
        private Text fFileNameSuffixTDup1Text;

        /// <summary>
        /// Backing field for TextBox349c75d4Edit property
        /// </summary>
        private Edit fTextBox349c75d4Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup10Pane property
        /// </summary>
        private Pane fScrollViewerPARDup10Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup11ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup11ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup11ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup11ScrollBar;

        /// <summary>
        /// Backing field for Expander2b78525Group property
        /// </summary>
        private Group fExpander2b78525Group;

        /// <summary>
        /// Backing field for ButtonHeaderSitDup1Button property
        /// </summary>
        private Button fButtonHeaderSitDup1Button;

        /// <summary>
        /// Backing field for NotusereditableDup2Text property
        /// </summary>
        private Text fNotusereditableDup2Text;

        /// <summary>
        /// Backing field for NotusereditableDup3Text property
        /// </summary>
        private Text fNotusereditableDup3Text;

        /// <summary>
        /// Backing field for DefaultColorPreDup0Text property
        /// </summary>
        private Text fDefaultColorPreDup0Text;

        /// <summary>
        /// Backing field for DefaultColorPreDup1Text property
        /// </summary>
        private Text fDefaultColorPreDup1Text;

        /// <summary>
        /// Backing field for ComboBox8936adcComboBox property
        /// </summary>
        private ComboBox fComboBox8936adcComboBox;

        /// <summary>
        /// Backing field for ScaninBlackwhenCheckBox property
        /// </summary>
        private CheckBox fScaninBlackwhenCheckBox;

        /// <summary>
        /// Backing field for ScaninBlackwhenText property
        /// </summary>
        private Text fScaninBlackwhenText;

        /// <summary>
        /// Backing field for InAutomaticallyText property
        /// </summary>
        private Text fInAutomaticallyText;

        /// <summary>
        /// Backing field for DefaultOutputQuDup0Text property
        /// </summary>
        private Text fDefaultOutputQuDup0Text;

        /// <summary>
        /// Backing field for DefaultOutputQuDup1Text property
        /// </summary>
        private Text fDefaultOutputQuDup1Text;

        /// <summary>
        /// Backing field for ComboBoxb02f84eComboBox property
        /// </summary>
        private ComboBox fComboBoxb02f84eComboBox;

        /// <summary>
        /// Backing field for EnableOCRCheckBCheckBox property
        /// </summary>
        private CheckBox fEnableOCRCheckBCheckBox;

        /// <summary>
        /// Backing field for EnableOCRTextBlText property
        /// </summary>
        private Text fEnableOCRTextBlText;

        /// <summary>
        /// Backing field for AllowusertospecText property
        /// </summary>
        private Text fAllowusertospecText;

        /// <summary>
        /// Backing field for DefaultResolutiDup0Text property
        /// </summary>
        private Text fDefaultResolutiDup0Text;

        /// <summary>
        /// Backing field for DefaultResolutiDup1Text property
        /// </summary>
        private Text fDefaultResolutiDup1Text;

        /// <summary>
        /// Backing field for ComboBoxfea42eaComboBox property
        /// </summary>
        private ComboBox fComboBoxfea42eaComboBox;

        /// <summary>
        /// Backing field for CompressionTextDup0Text property
        /// </summary>
        private Text fCompressionTextDup0Text;

        /// <summary>
        /// Backing field for CompressionTextDup1Text property
        /// </summary>
        private Text fCompressionTextDup1Text;

        /// <summary>
        /// Backing field for ComboBox7dbab3fComboBox property
        /// </summary>
        private ComboBox fComboBox7dbab3fComboBox;

        /// <summary>
        /// Backing field for DefaultFileTypeDup0Text property
        /// </summary>
        private Text fDefaultFileTypeDup0Text;

        /// <summary>
        /// Backing field for DefaultFileTypeDup1Text property
        /// </summary>
        private Text fDefaultFileTypeDup1Text;

        /// <summary>
        /// Backing field for ComboBox11bcd8aComboBox property
        /// </summary>
        private ComboBox fComboBox11bcd8aComboBox;

        /// <summary>
        /// Backing field for BlackTIFFCompreDup0Text property
        /// </summary>
        private Text fBlackTIFFCompreDup0Text;

        /// <summary>
        /// Backing field for BlackTIFFCompreDup1Text property
        /// </summary>
        private Text fBlackTIFFCompreDup1Text;

        /// <summary>
        /// Backing field for ComboBoxf57ad72ComboBox property
        /// </summary>
        private ComboBox fComboBoxf57ad72ComboBox;

        /// <summary>
        /// Backing field for ColorGrayscaleTDup0Text property
        /// </summary>
        private Text fColorGrayscaleTDup0Text;

        /// <summary>
        /// Backing field for ColorGrayscaleTDup1Text property
        /// </summary>
        private Text fColorGrayscaleTDup1Text;

        /// <summary>
        /// Backing field for ComboBoxe9dcd5bComboBox property
        /// </summary>
        private ComboBox fComboBoxe9dcd5bComboBox;

        /// <summary>
        /// Backing field for DefaultOCRLanguDup0Text property
        /// </summary>
        private Text fDefaultOCRLanguDup0Text;

        /// <summary>
        /// Backing field for DefaultOCRLanguDup1Text property
        /// </summary>
        private Text fDefaultOCRLanguDup1Text;

        /// <summary>
        /// Backing field for ComboBox8fcc64dComboBox property
        /// </summary>
        private ComboBox fComboBox8fcc64dComboBox;

        /// <summary>
        /// Backing field for PDFEncryptionChCheckBox property
        /// </summary>
        private CheckBox fPDFEncryptionChCheckBox;

        /// <summary>
        /// Backing field for PDFEncryptionTeText property
        /// </summary>
        private Text fPDFEncryptionTeText;

        /// <summary>
        /// Backing field for UserwillbeprompText property
        /// </summary>
        private Text fUserwillbeprompText;

        /// <summary>
        /// Backing field for EnableBlankPageCheckBox property
        /// </summary>
        private CheckBox fEnableBlankPageCheckBox;

        /// <summary>
        /// Backing field for EnableBlankPageText property
        /// </summary>
        private Text fEnableBlankPageText;

        /// <summary>
        /// Backing field for BlankpageswithiText property
        /// </summary>
        private Text fBlankpageswithiText;

        /// <summary>
        /// Backing field for ScrollBarVerticDup12ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup12ScrollBar;

        /// <summary>
        /// Backing field for RepeatButtonLinDup2Button property
        /// </summary>
        private Button fRepeatButtonLinDup2Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup2Button property
        /// </summary>
        private Button fRepeatButtonPagDup2Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup3Button property
        /// </summary>
        private Button fRepeatButtonPagDup3Button;

        /// <summary>
        /// Backing field for ThumbDup1Thumb property
        /// </summary>
        private Thumb fThumbDup1Thumb;

        /// <summary>
        /// Backing field for RepeatButtonLinDup3Button property
        /// </summary>
        private Button fRepeatButtonLinDup3Button;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup12ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup12ScrollBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup3TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup3TabItem;

        /// <summary>
        /// Backing field for FaxTextmFaxTabLDup0Text property
        /// </summary>
        private Text fFaxTextmFaxTabLDup0Text;

        /// <summary>
        /// Backing field for FaxTextBlockDup0Text property
        /// </summary>
        private Text fFaxTextBlockDup0Text;

        /// <summary>
        /// Backing field for Text105C9A93254Text property
        /// </summary>
        private Text fText105C9A93254Text;

        /// <summary>
        /// Backing field for Text25DD30D682EText property
        /// </summary>
        private Text fText25DD30D682EText;

        /// <summary>
        /// Backing field for TextBlockDup2Text property
        /// </summary>
        private Text fTextBlockDup2Text;

        /// <summary>
        /// Backing field for ProgressBare99cProgressBar property
        /// </summary>
        private ProgressBar fProgressBare99cProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup4TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup4TabItem;

        /// <summary>
        /// Backing field for SendtoFolderTexDup0Text property
        /// </summary>
        private Text fSendtoFolderTexDup0Text;

        /// <summary>
        /// Backing field for SendtoFolderTexDup1Text property
        /// </summary>
        private Text fSendtoFolderTexDup1Text;

        /// <summary>
        /// Backing field for Texta7a758d4d75Text property
        /// </summary>
        private Text fTexta7a758d4d75Text;

        /// <summary>
        /// Backing field for Texte95b3491f6bText property
        /// </summary>
        private Text fTexte95b3491f6bText;

        /// <summary>
        /// Backing field for ProgressBar9a14ProgressBar property
        /// </summary>
        private ProgressBar fProgressBar9a14ProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup5TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup5TabItem;

        /// <summary>
        /// Backing field for SendtoWorkflowsDup0Text property
        /// </summary>
        private Text fSendtoWorkflowsDup0Text;

        /// <summary>
        /// Backing field for SendtoWorkflowsDup1Text property
        /// </summary>
        private Text fSendtoWorkflowsDup1Text;

        /// <summary>
        /// Backing field for TextAA63352F914Text property
        /// </summary>
        private Text fTextAA63352F914Text;

        /// <summary>
        /// Backing field for TextB31E1B768A7Text property
        /// </summary>
        private Text fTextB31E1B768A7Text;

        /// <summary>
        /// Backing field for ProgressBar55dfProgressBar property
        /// </summary>
        private ProgressBar fProgressBar55dfProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup6TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup6TabItem;

        /// <summary>
        /// Backing field for SendtoSharePoinDup0Text property
        /// </summary>
        private Text fSendtoSharePoinDup0Text;

        /// <summary>
        /// Backing field for SendtoSharePoinDup1Text property
        /// </summary>
        private Text fSendtoSharePoinDup1Text;

        /// <summary>
        /// Backing field for Text348fa329f78Text property
        /// </summary>
        private Text fText348fa329f78Text;

        /// <summary>
        /// Backing field for Text4bfa1a11126Text property
        /// </summary>
        private Text fText4bfa1a11126Text;

        /// <summary>
        /// Backing field for ProgressBard093ProgressBar property
        /// </summary>
        private ProgressBar fProgressBard093ProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup7TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup7TabItem;

        /// <summary>
        /// Backing field for AddressingTextmDup0Text property
        /// </summary>
        private Text fAddressingTextmDup0Text;

        /// <summary>
        /// Backing field for AddressingTextBDup0Text property
        /// </summary>
        private Text fAddressingTextBDup0Text;

        /// <summary>
        /// Backing field for Text7a57f43ecb1Dup0Text property
        /// </summary>
        private Text fText7a57f43ecb1Dup0Text;

        /// <summary>
        /// Backing field for Text654b650dd19Dup0Text property
        /// </summary>
        private Text fText654b650dd19Dup0Text;

        /// <summary>
        /// Backing field for ProgressBar15a0ProgressBar property
        /// </summary>
        private ProgressBar fProgressBar15a0ProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup8TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup8TabItem;

        /// <summary>
        /// Backing field for LogTextmLogTabLText property
        /// </summary>
        private Text fLogTextmLogTabLText;

        /// <summary>
        /// Backing field for LogTextBlockDup0Text property
        /// </summary>
        private Text fLogTextBlockDup0Text;

        /// <summary>
        /// Backing field for ProgressBarA997ProgressBar property
        /// </summary>
        private ProgressBar fProgressBarA997ProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup9TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup9TabItem;

        /// <summary>
        /// Backing field for HPDigitalSendinTitleBar property
        /// </summary>
        private TitleBar fHPDigitalSendinTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyDup1MenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyDup1MenuBar;

        /// <summary>
        /// Backing field for SystemItem1Dup1MenuItem property
        /// </summary>
        private MenuItem fSystemItem1Dup1MenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizDup1Button property
        /// </summary>
        private Button fMinimizeMinimizDup1Button;

        /// <summary>
        /// Backing field for RestoreRestoreButton property
        /// </summary>
        private Button fRestoreRestoreButton;

        /// <summary>
        /// Backing field for CloseCloseDup1Button property
        /// </summary>
        private Button fCloseCloseDup1Button;

        /// <summary>
        /// Backing field for HelpButtonCB8CFButton property
        /// </summary>
        private Button fHelpButtonCB8CFButton;

        /// <summary>
        /// Backing field for HelpTextBlockDup1Text property
        /// </summary>
        private Text fHelpTextBlockDup1Text;

        /// <summary>
        /// Backing field for ApplyButton property
        /// </summary>
        private Button fApplyButton61E2Button;

        /// <summary>
        /// Backing field for ApplyTextBlockDup1Text property
        /// </summary>
        private Text fApplyTextBlockDup1Text;

        /// <summary>
        /// Backing field for CancelButton65CButton property
        /// </summary>
        private Button fCancelButton65CButton;

        /// <summary>
        /// Backing field for CancelTextBlockDup1Text property
        /// </summary>
        private Text fCancelTextBlockDup1Text;

        /// <summary>
        /// Backing field for OKButton property
        /// </summary>
        private Button fOKButtonCC2EF49Button;

        /// <summary>
        /// Backing field for OKTextBlockDup1Text property
        /// </summary>
        private Text fOKTextBlockDup1Text;

        /// <summary>
        /// Backing field for TabControlec0fdTab property
        /// </summary>
        private Tab fTabControlec0fdTab;

        /// <summary>
        /// Backing field for SystemWindowsCoDup10TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup10TabItem;

        /// <summary>
        /// Backing field for GeneralTextmGenDup1Text property
        /// </summary>
        private Text fGeneralTextmGenDup1Text;

        /// <summary>
        /// Backing field for GeneralTextBlocDup1Text property
        /// </summary>
        private Text fGeneralTextBlocDup1Text;

        /// <summary>
        /// Backing field for Text933345b04e3Text property
        /// </summary>
        private Text fText933345b04e3Text;

        /// <summary>
        /// Backing field for Text786caf67344Text property
        /// </summary>
        private Text fText786caf67344Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup11TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup11TabItem;

        /// <summary>
        /// Backing field for AuthenticationTDup2Text property
        /// </summary>
        private Text fAuthenticationTDup2Text;

        /// <summary>
        /// Backing field for AuthenticationTDup3Text property
        /// </summary>
        private Text fAuthenticationTDup3Text;

        /// <summary>
        /// Backing field for Text31EC91730B9Text property
        /// </summary>
        private Text fText31EC91730B9Text;

        /// <summary>
        /// Backing field for TextA479C271445Text property
        /// </summary>
        private Text fTextA479C271445Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup12TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup12TabItem;

        /// <summary>
        /// Backing field for EmailTextmEmailText property
        /// </summary>
        private Text fEmailTextmEmailText;

        /// <summary>
        /// Backing field for EmailTextBlockText property
        /// </summary>
        private Text fEmailTextBlockText;

        /// <summary>
        /// Backing field for Text32de714a8bdText property
        /// </summary>
        private Text fText32de714a8bdText;

        /// <summary>
        /// Backing field for Text3b2a8761f4fText property
        /// </summary>
        private Text fText3b2a8761f4fText;

        /// <summary>
        /// Backing field for TextBlockDup3Text property
        /// </summary>
        private Text fTextBlockDup3Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup13TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup13TabItem;

        /// <summary>
        /// Backing field for FaxTextmFaxTabLDup1Text property
        /// </summary>
        private Text fFaxTextmFaxTabLDup1Text;

        /// <summary>
        /// Backing field for FaxTextBlockDup1Text property
        /// </summary>
        private Text fFaxTextBlockDup1Text;

        /// <summary>
        /// Backing field for TextD1ED4F16F38Text property
        /// </summary>
        private Text fTextD1ED4F16F38Text;

        /// <summary>
        /// Backing field for Text7DDE04FD251Text property
        /// </summary>
        private Text fText7DDE04FD251Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup14TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup14TabItem;

        /// <summary>
        /// Backing field for SendtoFolderTexDup2Text property
        /// </summary>
        private Text fSendtoFolderTexDup2Text;

        /// <summary>
        /// Backing field for SendtoFolderTexDup3Text property
        /// </summary>
        private Text fSendtoFolderTexDup3Text;

        /// <summary>
        /// Backing field for Text7a57f43ecb1Dup1Text property
        /// </summary>
        private Text fText7a57f43ecb1Dup1Text;

        /// <summary>
        /// Backing field for Text654b650dd19Dup1Text property
        /// </summary>
        private Text fText654b650dd19Dup1Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup15TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup15TabItem;

        /// <summary>
        /// Backing field for WorkflowsTextmWText property
        /// </summary>
        private Text fWorkflowsTextmWText;

        /// <summary>
        /// Backing field for WorkflowsTextBlText property
        /// </summary>
        private Text fWorkflowsTextBlText;

        /// <summary>
        /// Backing field for Text22D9C34E84CText property
        /// </summary>
        private Text fText22D9C34E84CText;

        /// <summary>
        /// Backing field for TextC8D15BD39C8Text property
        /// </summary>
        private Text fTextC8D15BD39C8Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup16TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup16TabItem;

        /// <summary>
        /// Backing field for AddressingTextmDup1Text property
        /// </summary>
        private Text fAddressingTextmDup1Text;

        /// <summary>
        /// Backing field for AddressingTextBDup1Text property
        /// </summary>
        private Text fAddressingTextBDup1Text;

        /// <summary>
        /// Backing field for Text47EB5CBA4D1Text property
        /// </summary>
        private Text fText47EB5CBA4D1Text;

        /// <summary>
        /// Backing field for Text0757E148179Text property
        /// </summary>
        private Text fText0757E148179Text;

        /// <summary>
        /// Backing field for DeviceConfiguraTabItem property
        /// </summary>
        private TabItem fDeviceConfiguraTabItem;

        /// <summary>
        /// Backing field for DeviceConfiguraText property
        /// </summary>
        private Text fDeviceConfiguraText;

        /// <summary>
        /// Backing field for ServiceConfigurCustom property
        /// </summary>
        private Custom fServiceConfigurCustom;

        /// <summary>
        /// Backing field for GroupListText property
        /// </summary>
        private Text fGroupListText;

        /// <summary>
        /// Backing field for GroupListTextBlText property
        /// </summary>
        private Text fGroupListTextBlText;

        /// <summary>
        /// Backing field for DeviceGroupsText property
        /// </summary>
        private Text fDeviceGroupsText;

        /// <summary>
        /// Backing field for DeviceGroupsTexText property
        /// </summary>
        private Text fDeviceGroupsTexText;

        /// <summary>
        /// Backing field for TreeView1416BDETree property
        /// </summary>
        private Tree fTreeView1416BDETree;

        /// <summary>
        /// Backing field for AllDevicesTreeVTreeItem property
        /// </summary>
        private TreeItem fAllDevicesTreeVTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderButton property
        /// </summary>
        private Button fButtonExpanderButton;

        /// <summary>
        /// Backing field for AllDevicesTextBText property
        /// </summary>
        private Text fAllDevicesTextBText;

        /// <summary>
        /// Backing field for AddGroupButtonFButton property
        /// </summary>
        private Button fAddGroupButtonFButton;

        /// <summary>
        /// Backing field for AddGroupTextBloText property
        /// </summary>
        private Text fAddGroupTextBloText;

        /// <summary>
        /// Backing field for RemoveGroupButtButton property
        /// </summary>
        private Button fRemoveGroupButtButton;

        /// <summary>
        /// Backing field for RemoveGroupTextText property
        /// </summary>
        private Text fRemoveGroupTextText;

        /// <summary>
        /// Backing field for RenameButton261Button property
        /// </summary>
        private Button fRenameButton261Button;

        /// <summary>
        /// Backing field for RenameTextBlockText property
        /// </summary>
        private Text fRenameTextBlockText;

        /// <summary>
        /// Backing field for GridSplitterThumb property
        /// </summary>
        private Thumb fGridSplitterThumb;

        /// <summary>
        /// Backing field for DeviceListText property
        /// </summary>
        private Text fDeviceListText;

        /// <summary>
        /// Backing field for DeviceListTextBText property
        /// </summary>
        private Text fDeviceListTextBText;

        /// <summary>
        /// Backing field for ListView141cb8bDataGrid property
        /// </summary>
        private DataGrid fListView141cb8bDataGrid;

        /// <summary>
        /// Backing field for GridViewHeaderRDup2Header property
        /// </summary>
        private Header fGridViewHeaderRDup2Header;

        /// <summary>
        /// Backing field for StatusGridViewCHeaderItem property
        /// </summary>
        private HeaderItem fStatusGridViewCHeaderItem;

        /// <summary>
        /// Backing field for StatusTextBlockText property
        /// </summary>
        private Text fStatusTextBlockText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup6Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup6Thumb;

        /// <summary>
        /// Backing field for NameGridViewColHeaderItem property
        /// </summary>
        private HeaderItem fNameGridViewColHeaderItem;

        /// <summary>
        /// Backing field for NameTextBlockText property
        /// </summary>
        private Text fNameTextBlockText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup7Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup7Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup0HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup0HeaderItem;

        /// <summary>
        /// Backing field for ImageDup1Image property
        /// </summary>
        private Image fImageDup1Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup8Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup8Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup1HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup1HeaderItem;

        /// <summary>
        /// Backing field for ImageDup2Image property
        /// </summary>
        private Image fImageDup2Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup9Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup9Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup2HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup2HeaderItem;

        /// <summary>
        /// Backing field for ImageDup3Image property
        /// </summary>
        private Image fImageDup3Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup10Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup10Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup3HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup3HeaderItem;

        /// <summary>
        /// Backing field for ImageDup4Image property
        /// </summary>
        private Image fImageDup4Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup11Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup11Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup4HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup4HeaderItem;

        /// <summary>
        /// Backing field for ImageDup5Image property
        /// </summary>
        private Image fImageDup5Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup12Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup12Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup5HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup5HeaderItem;

        /// <summary>
        /// Backing field for ImageDup6Image property
        /// </summary>
        private Image fImageDup6Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup13Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup13Thumb;

        /// <summary>
        /// Backing field for ModelGridViewCoHeaderItem property
        /// </summary>
        private HeaderItem fModelGridViewCoHeaderItem;

        /// <summary>
        /// Backing field for ModelTextBlockText property
        /// </summary>
        private Text fModelTextBlockText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup14Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup14Thumb;

        /// <summary>
        /// Backing field for IPAddressGridViHeaderItem property
        /// </summary>
        private HeaderItem fIPAddressGridViHeaderItem;

        /// <summary>
        /// Backing field for IPAddressTextBlText property
        /// </summary>
        private Text fIPAddressTextBlText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup15Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup15Thumb;

        /// <summary>
        /// Backing field for HostnameGridVieHeaderItem property
        /// </summary>
        private HeaderItem fHostnameGridVieHeaderItem;

        /// <summary>
        /// Backing field for HostnameTextBloText property
        /// </summary>
        private Text fHostnameTextBloText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup16Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup16Thumb;

        /// <summary>
        /// Backing field for DescriptionGridHeaderItem property
        /// </summary>
        private HeaderItem fDescriptionGridHeaderItem;

        /// <summary>
        /// Backing field for DescriptionTextText property
        /// </summary>
        private Text fDescriptionTextText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup17Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup17Thumb;

        /// <summary>
        /// Backing field for FirmwareGridVieHeaderItem property
        /// </summary>
        private HeaderItem fFirmwareGridVieHeaderItem;

        /// <summary>
        /// Backing field for FirmwareTextBloText property
        /// </summary>
        private Text fFirmwareTextBloText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup18Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup18Thumb;

        /// <summary>
        /// Backing field for bound101112170eDataItem property
        /// </summary>
        private DataItem fbound101112170eDataItem;

        /// <summary>
        /// Backing field for ContentPresenteDup0I0XCustom property
        /// </summary>
        private Custom fContentPresenteDup0I0XCustom;

        /// <summary>
        /// Backing field for Image84ACE29E0AImage property
        /// </summary>
        private Image fImage84ACE29E0AImage;

        /// <summary>
        /// Backing field for WaitSpinnerUserCustom property
        /// </summary>
        private Custom fWaitSpinnerUserCustom;

        /// <summary>
        /// Backing field for ImagemWaitSpinnImage property
        /// </summary>
        private Image fImagemWaitSpinnImage;

        /// <summary>
        /// Backing field for HPOfficejetColoDup0I0XText property
        /// </summary>
        private Text fHPOfficejetColoDup0I0XText;

        /// <summary>
        /// Backing field for ContentPresenteDup1I1XCustom property
        /// </summary>
        private Custom fContentPresenteDup1I1XCustom;

        /// <summary>
        /// Backing field for Image844100985AImage property
        /// </summary>
        private Image fImage844100985AImage;

        /// <summary>
        /// Backing field for ContentPresenteDup2I2XCustom property
        /// </summary>
        private Custom fContentPresenteDup2I2XCustom;

        /// <summary>
        /// Backing field for Image20F9A92A96Image property
        /// </summary>
        private Image fImage20F9A92A96Image;

        /// <summary>
        /// Backing field for ContentPresenteDup3I3XCustom property
        /// </summary>
        private Custom fContentPresenteDup3I3XCustom;

        /// <summary>
        /// Backing field for ImageCA1843E8BFImage property
        /// </summary>
        private Image fImageCA1843E8BFImage;

        /// <summary>
        /// Backing field for ContentPresenteDup4I4XCustom property
        /// </summary>
        private Custom fContentPresenteDup4I4XCustom;

        /// <summary>
        /// Backing field for ImageE24499D7C0Image property
        /// </summary>
        private Image fImageE24499D7C0Image;

        /// <summary>
        /// Backing field for ContentPresenteDup5I5XCustom property
        /// </summary>
        private Custom fContentPresenteDup5I5XCustom;

        /// <summary>
        /// Backing field for Image86A371F7F4Image property
        /// </summary>
        private Image fImage86A371F7F4Image;

        /// <summary>
        /// Backing field for ContentPresenteDup6I6XCustom property
        /// </summary>
        private Custom fContentPresenteDup6I6XCustom;

        /// <summary>
        /// Backing field for Image1D2DC29B85Image property
        /// </summary>
        private Image fImage1D2DC29B85Image;

        /// <summary>
        /// Backing field for HPOfficejetColoDup1I1XText property
        /// </summary>
        private Text fHPOfficejetColoDup1I1XText;

        /// <summary>
        /// Backing field for A101112170TextBText property
        /// </summary>
        private Text fA101112170TextBText;

        /// <summary>
        /// Backing field for TextBlockDup4Text property
        /// </summary>
        private Text fTextBlockDup4Text;

        /// <summary>
        /// Backing field for HPOfficejetColoDup2I2XText property
        /// </summary>
        private Text fHPOfficejetColoDup2I2XText;

        /// <summary>
        /// Backing field for FutureSmart3372Text property
        /// </summary>
        private Text fFutureSmart3372Text;

        /// <summary>
        /// Backing field for AddDeviceButtonButton property
        /// </summary>
        private Button fAddDeviceButtonButton;

        /// <summary>
        /// Backing field for AddDeviceTextBlText property
        /// </summary>
        private Text fAddDeviceTextBlText;

        /// <summary>
        /// Backing field for ExportButtonef5Button property
        /// </summary>
        private Button fExportButtonef5Button;

        /// <summary>
        /// Backing field for ExportTextBlockText property
        /// </summary>
        private Text fExportTextBlockText;

        /// <summary>
        /// Backing field for RemoveDeviceButButton property
        /// </summary>
        private Button fRemoveDeviceButButton;

        /// <summary>
        /// Backing field for RemoveDeviceTexText property
        /// </summary>
        private Text fRemoveDeviceTexText;

        /// <summary>
        /// Backing field for ImportButtona69Button property
        /// </summary>
        private Button fImportButtona69Button;

        /// <summary>
        /// Backing field for ImportTextBlockText property
        /// </summary>
        private Text fImportTextBlockText;

        /// <summary>
        /// Backing field for CreateTemplateBButton property
        /// </summary>
        private Button fCreateTemplateBButton;

        /// <summary>
        /// Backing field for CreateTemplateTText property
        /// </summary>
        private Text fCreateTemplateTText;

        /// <summary>
        /// Backing field for DeviceSignInButButton property
        /// </summary>
        private Button fDeviceSignInButButton;

        /// <summary>
        /// Backing field for DeviceSignInTexText property
        /// </summary>
        private Text fDeviceSignInTexText;

        /// <summary>
        /// Backing field for TotalDevicesText property
        /// </summary>
        private Text fTotalDevicesText;

        /// <summary>
        /// Backing field for TotalDevicesTexText property
        /// </summary>
        private Text fTotalDevicesTexText;

        /// <summary>
        /// Backing field for A1Text82f844376Text property
        /// </summary>
        private Text fA1Text82f844376Text;

        /// <summary>
        /// Backing field for A1TextBlockText property
        /// </summary>
        private Text fA1TextBlockText;

        /// <summary>
        /// Backing field for ConfigureDeviceButton property
        /// </summary>
        private Button fConfigureDeviceButton;

        /// <summary>
        /// Backing field for ConfigureDeviceText property
        /// </summary>
        private Text fConfigureDeviceText;

        /// <summary>
        /// Backing field for TemplateConfiguTabItem property
        /// </summary>
        private TabItem fTemplateConfiguTabItem;

        /// <summary>
        /// Backing field for TemplateConfiguText property
        /// </summary>
        private Text fTemplateConfiguText;

        /// <summary>
        /// Backing field for LogTabItem9b4f3TabItem property
        /// </summary>
        private TabItem fLogTabItem9b4f3TabItem;

        /// <summary>
        /// Backing field for LogTextBlockDup1Text property
        /// </summary>
        private Text fLogTextBlockDup1Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup17TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup17TabItem;

        /// <summary>
        /// Backing field for SecurityTextmSeText property
        /// </summary>
        private Text fSecurityTextmSeText;

        /// <summary>
        /// Backing field for SecurityTextBloText property
        /// </summary>
        private Text fSecurityTextBloText;

        /// <summary>
        /// Backing field for Text8A7A84DB894Text property
        /// </summary>
        private Text fText8A7A84DB894Text;

        /// <summary>
        /// Backing field for Text16F78FB18FFText property
        /// </summary>
        private Text fText16F78FB18FFText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup18TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup18TabItem;

        /// <summary>
        /// Backing field for AnalyticsTextmAText property
        /// </summary>
        private Text fAnalyticsTextmAText;

        /// <summary>
        /// Backing field for AnalyticsTextBlText property
        /// </summary>
        private Text fAnalyticsTextBlText;

        /// <summary>
        /// Backing field for AboutTabItemf45TabItem property
        /// </summary>
        private TabItem fAboutTabItemf45TabItem;

        /// <summary>
        /// Backing field for AboutTextBlockText property
        /// </summary>
        private Text fAboutTextBlockText;

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_EmailForDevice"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public DSS_EmailForDevice(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_EmailForDevice"/> class using the default UIAFramework.
        /// </summary>
        public DSS_EmailForDevice()
        {
            Desktop = new Desktop();
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Window HPDigitalSendinWindow
        {
            get
            {
                if (null == fHPDigitalSendinWindow)
                {
                    fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                    fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Digital Sending Software Configuration (Server IP Address: 10.11.14.245)");
                }

                return fHPDigitalSendinWindow;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Window ConfigureDeviceWindow
        {
            get
            {
                if (null == fConfigureDeviceWindow)
                {
                    fConfigureDeviceWindow = new Window("ConfigureDeviceWindow", HPDigitalSendinWindow);
                    fConfigureDeviceWindow.UIMap.Scope = UIASeachScope.Children;
                    fConfigureDeviceWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fConfigureDeviceWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1fbfa621-ccac-42b3-8f91-9f2632ec1d89");
                  
                }

                return fConfigureDeviceWindow;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Window PopupWindow
        {
            get
            {
                if (null == fPopupWindow)
                {
                    fPopupWindow = new Window("PopupWindow", ConfigureDeviceWindow);
                    fPopupWindow.UIMap.Scope = UIASeachScope.Children;
                    fPopupWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Popup");
                }

                return fPopupWindow;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerDroPane
        {
            get
            {
                if (null == fScrollViewerDroPane)
                {
                    fScrollViewerDroPane = new Pane("ScrollViewerDroPane", PopupWindow);
                    fScrollViewerDroPane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerDroPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerDroPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDownScrollViewer");
                }

                return fScrollViewerDroPane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem DirectlyfromtheDup0ListItem
        {
            get
            {
                if (null == fDirectlyfromtheDup0ListItem)
                {
                    fDirectlyfromtheDup0ListItem = new ListItem("DirectlyfromtheDup0ListItem", ScrollViewerDroPane);
                    fDirectlyfromtheDup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fDirectlyfromtheDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fDirectlyfromtheDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Directly from the device");
                }

                return fDirectlyfromtheDup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DirectlyfromtheDup0Text
        {
            get
            {
                if (null == fDirectlyfromtheDup0Text)
                {
                    fDirectlyfromtheDup0Text = new Text("DirectlyfromtheDup0Text", DirectlyfromtheDup0ListItem);
                    fDirectlyfromtheDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDirectlyfromtheDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDirectlyfromtheDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Directly from the device");
                }

                return fDirectlyfromtheDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem viatheDigitalSeDup0ListItem
        {
            get
            {
                if (null == fviatheDigitalSeDup0ListItem)
                {
                    fviatheDigitalSeDup0ListItem = new ListItem("viatheDigitalSeDup0ListItem", ScrollViewerDroPane);
                    fviatheDigitalSeDup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fviatheDigitalSeDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fviatheDigitalSeDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"via the Digital Sending Service");
                }

                return fviatheDigitalSeDup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text viatheDigitalSeDup0Text
        {
            get
            {
                if (null == fviatheDigitalSeDup0Text)
                {
                    fviatheDigitalSeDup0Text = new Text("viatheDigitalSeDup0Text", viatheDigitalSeDup0ListItem);
                    fviatheDigitalSeDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fviatheDigitalSeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fviatheDigitalSeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"via the Digital Sending Service");
                }

                return fviatheDigitalSeDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup0ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup0ScrollBar)
                {
                    fScrollBarVerticDup0ScrollBar = new ScrollBar("ScrollBarVerticDup0ScrollBar", ScrollViewerDroPane);
                    fScrollBarVerticDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup0ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup0ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup0ScrollBar)
                {
                    fScrollBarHorizoDup0ScrollBar = new ScrollBar("ScrollBarHorizoDup0ScrollBar", ScrollViewerDroPane);
                    fScrollBarHorizoDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup0ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TitleBar ConfigureDeviceTitleBar
        {
            get
            {
                if (null == fConfigureDeviceTitleBar)
                {
                    fConfigureDeviceTitleBar = new TitleBar("ConfigureDeviceTitleBar", ConfigureDeviceWindow);
                    fConfigureDeviceTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fConfigureDeviceTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    
                }

                return fConfigureDeviceTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuBar SystemMenuBarSyDup0MenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyDup0MenuBar)
                {
                    fSystemMenuBarSyDup0MenuBar = new MenuBar("SystemMenuBarSyDup0MenuBar", ConfigureDeviceTitleBar);
                    fSystemMenuBarSyDup0MenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                }

                return fSystemMenuBarSyDup0MenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuItem SystemItem1Dup0MenuItem
        {
            get
            {
                if (null == fSystemItem1Dup0MenuItem)
                {
                    fSystemItem1Dup0MenuItem = new MenuItem("SystemItem1Dup0MenuItem", SystemMenuBarSyDup0MenuBar);
                    fSystemItem1Dup0MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                }

                return fSystemItem1Dup0MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button MinimizeMinimizDup0Button
        {
            get
            {
                if (null == fMinimizeMinimizDup0Button)
                {
                    fMinimizeMinimizDup0Button = new Button("MinimizeMinimizDup0Button", ConfigureDeviceTitleBar);
                    fMinimizeMinimizDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                    fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                }

                return fMinimizeMinimizDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button MaximizeMaximizButton
        {
            get
            {
                if (null == fMaximizeMaximizButton)
                {
                    fMaximizeMaximizButton = new Button("MaximizeMaximizButton", ConfigureDeviceTitleBar);
                    fMaximizeMaximizButton.UIMap.Scope = UIASeachScope.Children;
                    fMaximizeMaximizButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                    fMaximizeMaximizButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                }

                return fMaximizeMaximizButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CloseCloseDup0Button
        {
            get
            {
                if (null == fCloseCloseDup0Button)
                {
                    fCloseCloseDup0Button = new Button("CloseCloseDup0Button", ConfigureDeviceTitleBar);
                    fCloseCloseDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                }

                return fCloseCloseDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button HelpButtonfb686Button
        {
            get
            {
                if (null == fHelpButtonfb686Button)
                {
                    fHelpButtonfb686Button = new Button("HelpButtonfb686Button", ConfigureDeviceWindow);
                    fHelpButtonfb686Button.UIMap.Scope = UIASeachScope.Children;
                    fHelpButtonfb686Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fHelpButtonfb686Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"fb68687e-7025-47cb-b1b1-c3df439a2773");
                    fHelpButtonfb686Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpButtonfb686Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text HelpTextBlockDup0Text
        {
            get
            {
                if (null == fHelpTextBlockDup0Text)
                {
                    fHelpTextBlockDup0Text = new Text("HelpTextBlockDup0Text", HelpButtonfb686Button);
                    fHelpTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fHelpTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHelpTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ApplyButton46D6Button
        {
            get
            {
                if (null == fApplyButton46D6Button)
                {
                    fApplyButton46D6Button = new Button("ApplyButton46D6Button", ConfigureDeviceWindow);
                    fApplyButton46D6Button.UIMap.Scope = UIASeachScope.Children;
                    fApplyButton46D6Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fApplyButton46D6Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"46D669A0-F3DB-49c5-B67D-DAE887281B4E");
                    fApplyButton46D6Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyButton46D6Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ApplyTextBlockDup0Text
        {
            get
            {
                if (null == fApplyTextBlockDup0Text)
                {
                    fApplyTextBlockDup0Text = new Text("ApplyTextBlockDup0Text", ApplyButton46D6Button);
                    fApplyTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fApplyTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fApplyTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CancelButtoned9Button
        {
            get
            {
                if (null == fCancelButtoned9Button)
                {
                    fCancelButtoned9Button = new Button("CancelButtoned9Button", ConfigureDeviceWindow);
                    fCancelButtoned9Button.UIMap.Scope = UIASeachScope.Children;
                    fCancelButtoned9Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButtoned9Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ed9b74ee-24a6-4138-ae44-bdb7b44cffcb");
                    fCancelButtoned9Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelButtoned9Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CancelTextBlockDup0Text
        {
            get
            {
                if (null == fCancelTextBlockDup0Text)
                {
                    fCancelTextBlockDup0Text = new Text("CancelTextBlockDup0Text", CancelButtoned9Button);
                    fCancelTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fCancelTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCancelTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button OKButton8c9182aButton
        {
            get
            {
                if (null == fOKButton8c9182aButton)
                {
                    fOKButton8c9182aButton = new Button("OKButton8c9182aButton", ConfigureDeviceWindow);
                    fOKButton8c9182aButton.UIMap.Scope = UIASeachScope.Children;
                    fOKButton8c9182aButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButton8c9182aButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8c9182a5-6104-46bc-b6ac-6bc57ec6ea81");
                    fOKButton8c9182aButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKButton8c9182aButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OKTextBlockDup0Text
        {
            get
            {
                if (null == fOKTextBlockDup0Text)
                {
                    fOKTextBlockDup0Text = new Text("OKTextBlockDup0Text", OKButton8c9182aButton);
                    fOKTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Tab TabControl2111BTab
        {
            get
            {
                if (null == fTabControl2111BTab)
                {
                    fTabControl2111BTab = new Tab("TabControl2111BTab", ConfigureDeviceWindow);
                    fTabControl2111BTab.UIMap.Scope = UIASeachScope.Children;
                    fTabControl2111BTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                    fTabControl2111BTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2111B07F-601C-4442-9A43-CAC4268C264A");
                }

                return fTabControl2111BTab;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup0TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup0TabItem)
                {
                    fSystemWindowsCoDup0TabItem = new TabItem("SystemWindowsCoDup0TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup0TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e0422d26-5fd8-44bc-b019-886f5e135c97");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup0TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GeneralTextmGenDup0Text
        {
            get
            {
                if (null == fGeneralTextmGenDup0Text)
                {
                    fGeneralTextmGenDup0Text = new Text("GeneralTextmGenDup0Text", SystemWindowsCoDup0TabItem);
                    fGeneralTextmGenDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextmGenDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGeneralTextmGenDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                    fGeneralTextmGenDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextmGenDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GeneralTextBlocDup0Text
        {
            get
            {
                if (null == fGeneralTextBlocDup0Text)
                {
                    fGeneralTextBlocDup0Text = new Text("GeneralTextBlocDup0Text", GeneralTextmGenDup0Text);
                    fGeneralTextBlocDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextBlocDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGeneralTextBlocDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextBlocDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text9127A6692D0Text
        {
            get
            {
                if (null == fText9127A6692D0Text)
                {
                    fText9127A6692D0Text = new Text("Text9127A6692D0Text", SystemWindowsCoDup0TabItem);
                    fText9127A6692D0Text.UIMap.Scope = UIASeachScope.Children;
                    fText9127A6692D0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText9127A6692D0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9127A669-2D02-477d-B2B0-818B59F1EC24");
                    fText9127A6692D0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText9127A6692D0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ProgressBar ProgressBar836eProgressBar
        {
            get
            {
                if (null == fProgressBar836eProgressBar)
                {
                    fProgressBar836eProgressBar = new ProgressBar("ProgressBar836eProgressBar", SystemWindowsCoDup0TabItem);
                    fProgressBar836eProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBar836eProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBar836eProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"836e39c4-f336-411d-b4bf-7ce21bd659a1");
                }

                return fProgressBar836eProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup1TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup1TabItem)
                {
                    fSystemWindowsCoDup1TabItem = new TabItem("SystemWindowsCoDup1TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup1TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1cc57c14-8994-43b6-9870-5199757f8fc4");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup1TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AuthenticationTDup0Text
        {
            get
            {
                if (null == fAuthenticationTDup0Text)
                {
                    fAuthenticationTDup0Text = new Text("AuthenticationTDup0Text", SystemWindowsCoDup1TabItem);
                    fAuthenticationTDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AuthenticationTDup1Text
        {
            get
            {
                if (null == fAuthenticationTDup1Text)
                {
                    fAuthenticationTDup1Text = new Text("AuthenticationTDup1Text", AuthenticationTDup0Text);
                    fAuthenticationTDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text2087FBF2200Text
        {
            get
            {
                if (null == fText2087FBF2200Text)
                {
                    fText2087FBF2200Text = new Text("Text2087FBF2200Text", SystemWindowsCoDup1TabItem);
                    fText2087FBF2200Text.UIMap.Scope = UIASeachScope.Children;
                    fText2087FBF2200Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText2087FBF2200Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2087FBF2-200E-4f1e-9B53-80F1D9CF632A");
                    fText2087FBF2200Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText2087FBF2200Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text3C0A7A0B490Text
        {
            get
            {
                if (null == fText3C0A7A0B490Text)
                {
                    fText3C0A7A0B490Text = new Text("Text3C0A7A0B490Text", SystemWindowsCoDup1TabItem);
                    fText3C0A7A0B490Text.UIMap.Scope = UIASeachScope.Children;
                    fText3C0A7A0B490Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText3C0A7A0B490Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3C0A7A0B-490D-4539-B6B3-66DD241D05EE");
                    fText3C0A7A0B490Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText3C0A7A0B490Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ProgressBar ProgressBar992dProgressBar
        {
            get
            {
                if (null == fProgressBar992dProgressBar)
                {
                    fProgressBar992dProgressBar = new ProgressBar("ProgressBar992dProgressBar", SystemWindowsCoDup1TabItem);
                    fProgressBar992dProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBar992dProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBar992dProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"992d5944-26af-4308-aa22-d41cb035a4c7");
                }

                return fProgressBar992dProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup2TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup2TabItem)
                {
                    fSystemWindowsCoDup2TabItem = new TabItem("SystemWindowsCoDup2TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup2TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6D0F0F02-8197-4a09-BEE5-BDF68AFFBB76");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup2TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoEmailTextDup0Text
        {
            get
            {
                if (null == fSendtoEmailTextDup0Text)
                {
                    fSendtoEmailTextDup0Text = new Text("SendtoEmailTextDup0Text", SystemWindowsCoDup2TabItem);
                    fSendtoEmailTextDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoEmailTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoEmailTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                    fSendtoEmailTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to E-mail");
                }

                return fSendtoEmailTextDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoEmailTextDup1Text
        {
            get
            {
                if (null == fSendtoEmailTextDup1Text)
                {
                    fSendtoEmailTextDup1Text = new Text("SendtoEmailTextDup1Text", SendtoEmailTextDup0Text);
                    fSendtoEmailTextDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoEmailTextDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoEmailTextDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to E-mail");
                }

                return fSendtoEmailTextDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text265ea8f2a5fText
        {
            get
            {
                if (null == fText265ea8f2a5fText)
                {
                    fText265ea8f2a5fText = new Text("Text265ea8f2a5fText", SystemWindowsCoDup2TabItem);
                    fText265ea8f2a5fText.UIMap.Scope = UIASeachScope.Children;
                    fText265ea8f2a5fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText265ea8f2a5fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"265ea8f2-a5f1-4612-b9c9-04b14bb686b6");
                    fText265ea8f2a5fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText265ea8f2a5fText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextBlockDup0Text
        {
            get
            {
                if (null == fTextBlockDup0Text)
                {
                    fTextBlockDup0Text = new Text("TextBlockDup0Text", Text265ea8f2a5fText);
                    fTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text1a251d5f398Text
        {
            get
            {
                if (null == fText1a251d5f398Text)
                {
                    fText1a251d5f398Text = new Text("Text1a251d5f398Text", SystemWindowsCoDup2TabItem);
                    fText1a251d5f398Text.UIMap.Scope = UIASeachScope.Children;
                    fText1a251d5f398Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText1a251d5f398Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1a251d5f-3981-419a-b1b8-472df8e4b6aa");
                    fText1a251d5f398Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText1a251d5f398Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextBlockDup1Text
        {
            get
            {
                if (null == fTextBlockDup1Text)
                {
                    fTextBlockDup1Text = new Text("TextBlockDup1Text", Text1a251d5f398Text);
                    fTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ProgressBar ProgressBara2e8ProgressBar
        {
            get
            {
                if (null == fProgressBara2e8ProgressBar)
                {
                    fProgressBara2e8ProgressBar = new ProgressBar("ProgressBara2e8ProgressBar", SystemWindowsCoDup2TabItem);
                    fProgressBara2e8ProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBara2e8ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBara2e8ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a2e8e90d-d0e0-4939-a375-588d9cf351be");
                }

                return fProgressBara2e8ProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom TabStatusUserCoCustom
        {
            get
            {
                if (null == fTabStatusUserCoCustom)
                {
                    fTabStatusUserCoCustom = new Custom("TabStatusUserCoCustom", SystemWindowsCoDup2TabItem);
                    fTabStatusUserCoCustom.UIMap.Scope = UIASeachScope.Children;
                    fTabStatusUserCoCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabStatusUserControl");
                    fTabStatusUserCoCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabStatusUserControl");
                }

                return fTabStatusUserCoCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ErrorTextBlockText
        {
            get
            {
                if (null == fEnabledTextBlocText)
                {
                    fEnabledTextBlocText = new Text("ErrorTextBlockText", TabStatusUserCoCustom);
                    fEnabledTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fEnabledTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEnabledTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"570af218-7199-4b1c-9820-168d476e74ae");
                }

                return fEnabledTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom MfpConfiguratioCustom
        {
            get
            {
                if (null == fMfpConfiguratioCustom)
                {
                    fMfpConfiguratioCustom = new Custom("MfpConfiguratioCustom", SystemWindowsCoDup2TabItem);
                    fMfpConfiguratioCustom.UIMap.Scope = UIASeachScope.Children;
                    fMfpConfiguratioCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MfpConfigurationEmailTab");
                    fMfpConfiguratioCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mMfpConfigurationEmailTab");
                }

                return fMfpConfiguratioCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewer363Pane
        {
            get
            {
                if (null == fScrollViewer363Pane)
                {
                    fScrollViewer363Pane = new Pane("ScrollViewer363Pane", MfpConfiguratioCustom);
                    fScrollViewer363Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewer363Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewer363Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"36324185-e085-4868-9b20-3d947d678fcc");
                }

                return fScrollViewer363Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ErrorConflictUsCustom
        {
            get
            {
                if (null == fErrorConflictUsCustom)
                {
                    fErrorConflictUsCustom = new Custom("ErrorConflictUsCustom", ScrollViewer363Pane);
                    fErrorConflictUsCustom.UIMap.Scope = UIASeachScope.Children;
                    fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ErrorConflictUserControl");
                    fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mErrorConflictUserControl");
                }

                return fErrorConflictUsCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup0Image
        {
            get
            {
                if (null == fImageDup0Image)
                {
                    fImageDup0Image = new Image("ImageDup0Image", ErrorConflictUsCustom);
                    fImageDup0Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup0Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text A1AnOutgoingEmaText
        {
            get
            {
                if (null == fA1AnOutgoingEmaText)
                {
                    fA1AnOutgoingEmaText = new Text("A1AnOutgoingEmaText", ErrorConflictUsCustom);
                    fA1AnOutgoingEmaText.UIMap.Scope = UIASeachScope.Children;
                    fA1AnOutgoingEmaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fA1AnOutgoingEmaText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33CC58FF-B4EB-41e5-B4AC-3A926D5E70A7");
                    fA1AnOutgoingEmaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"1.  An Outgoing E-mail Server (SMTP) is required before Send to E-mail can be enabled.");
                }

                return fA1AnOutgoingEmaText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox EnableSendtoEmaCheckBox
        {
            get
            {
                if (null == fEnableSendtoEmaCheckBox)
                {
                    fEnableSendtoEmaCheckBox = new CheckBox("EnableSendtoEmaCheckBox", ScrollViewer363Pane);
                    fEnableSendtoEmaCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEnableSendtoEmaCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fEnableSendtoEmaCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16B43264-1B78-4d1a-A9A7-ED4DDEE52A3D");
                    fEnableSendtoEmaCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Send to E-mail");
                }

                return fEnableSendtoEmaCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EnableSendtoEmaText
        {
            get
            {
                if (null == fEnableSendtoEmaText)
                {
                    fEnableSendtoEmaText = new Text("EnableSendtoEmaText", EnableSendtoEmaCheckBox);
                    fEnableSendtoEmaText.UIMap.Scope = UIASeachScope.Children;
                    fEnableSendtoEmaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEnableSendtoEmaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Send to E-mail");
                }

                return fEnableSendtoEmaText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group OutgoingEmailSeGroup
        {
            get
            {
                if (null == fOutgoingEmailSeGroup)
                {
                    fOutgoingEmailSeGroup = new Group("OutgoingEmailSeGroup", ScrollViewer363Pane);
                    fOutgoingEmailSeGroup.UIMap.Scope = UIASeachScope.Children;
                    fOutgoingEmailSeGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fOutgoingEmailSeGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FD3A1328-6E4F-48a9-94C8-D3744D76A567");
                    fOutgoingEmailSeGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Outgoing E-mail Server (SMTP)");
                }

                return fOutgoingEmailSeGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OutgoingEmailSeText
        {
            get
            {
                if (null == fOutgoingEmailSeText)
                {
                    fOutgoingEmailSeText = new Text("OutgoingEmailSeText", OutgoingEmailSeGroup);
                    fOutgoingEmailSeText.UIMap.Scope = UIASeachScope.Children;
                    fOutgoingEmailSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOutgoingEmailSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Outgoing E-mail Server (SMTP)");
                }

                return fOutgoingEmailSeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendEmailText
        {
            get
            {
                if (null == fSendEmailText)
                {
                    fSendEmailText = new Text("SendEmailText", OutgoingEmailSeGroup);
                    fSendEmailText.UIMap.Scope = UIASeachScope.Children;
                    fSendEmailText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendEmailText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send E-mail");
                }

                return fSendEmailText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendEmailTextBlText
        {
            get
            {
                if (null == fSendEmailTextBlText)
                {
                    fSendEmailTextBlText = new Text("SendEmailTextBlText", SendEmailText);
                    fSendEmailTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fSendEmailTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendEmailTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send E-mail");
                }

                return fSendEmailTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxA9893D6ComboBox
        {
            get
            {
                if (null == fComboBoxA9893D6ComboBox)
                {
                    fComboBoxA9893D6ComboBox = new ComboBox("ComboBoxA9893D6ComboBox", OutgoingEmailSeGroup);
                    fComboBoxA9893D6ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxA9893D6ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxA9893D6ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A9893D6B-2EC7-440c-B7CD-6297F3359416");
                }

                return fComboBoxA9893D6ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem DirectlyfromtheDup1ListItem
        {
            get
            {
                if (null == fDirectlyfromtheDup1ListItem)
                {
                    fDirectlyfromtheDup1ListItem = new ListItem("DirectlyfromtheDup1ListItem", ComboBoxA9893D6ComboBox);
                    fDirectlyfromtheDup1ListItem.UIMap.Scope = UIASeachScope.Children;
                    fDirectlyfromtheDup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fDirectlyfromtheDup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Directly from the device");
                }

                return fDirectlyfromtheDup1ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DirectlyfromtheDup1Text
        {
            get
            {
                if (null == fDirectlyfromtheDup1Text)
                {
                    fDirectlyfromtheDup1Text = new Text("DirectlyfromtheDup1Text", DirectlyfromtheDup1ListItem);
                    fDirectlyfromtheDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDirectlyfromtheDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDirectlyfromtheDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Directly from the device");
                }

                return fDirectlyfromtheDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem viatheDigitalSeDup1ListItem
        {
            get
            {
                if (null == fviatheDigitalSeDup1ListItem)
                {
                    fviatheDigitalSeDup1ListItem = new ListItem("viatheDigitalSeDup1ListItem", ComboBoxA9893D6ComboBox);
                    fviatheDigitalSeDup1ListItem.UIMap.Scope = UIASeachScope.Children;
                    fviatheDigitalSeDup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fviatheDigitalSeDup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"via the Digital Sending Service");
                }

                return fviatheDigitalSeDup1ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text viatheDigitalSeDup1Text
        {
            get
            {
                if (null == fviatheDigitalSeDup1Text)
                {
                    fviatheDigitalSeDup1Text = new Text("viatheDigitalSeDup1Text", viatheDigitalSeDup1ListItem);
                    fviatheDigitalSeDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fviatheDigitalSeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fviatheDigitalSeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"via the Digital Sending Service");
                }

                return fviatheDigitalSeDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public DataGrid ListView60e9923DataGrid
        {
            get
            {
                if (null == fListView60e9923DataGrid)
                {
                    fListView60e9923DataGrid = new DataGrid("ListView60e9923DataGrid", OutgoingEmailSeGroup);
                    fListView60e9923DataGrid.UIMap.Scope = UIASeachScope.Children;
                    fListView60e9923DataGrid.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListView");
                    fListView60e9923DataGrid.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"60e99232-1149-4534-b852-3b5490f837cc");
                }

                return fListView60e9923DataGrid;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Header GridViewHeaderRDup0Header
        {
            get
            {
                if (null == fGridViewHeaderRDup0Header)
                {
                    fGridViewHeaderRDup0Header = new Header("GridViewHeaderRDup0Header", ListView60e9923DataGrid);
                    fGridViewHeaderRDup0Header.UIMap.Scope = UIASeachScope.Children;
                    fGridViewHeaderRDup0Header.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewHeaderRowPresenter");
                }

                return fGridViewHeaderRDup0Header;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem ServerNameGridVHeaderItem
        {
            get
            {
                if (null == fServerNameGridVHeaderItem)
                {
                    fServerNameGridVHeaderItem = new HeaderItem("ServerNameGridVHeaderItem", GridViewHeaderRDup0Header);
                    fServerNameGridVHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fServerNameGridVHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fServerNameGridVHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server Name");
                }

                return fServerNameGridVHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ServerNameText
        {
            get
            {
                if (null == fServerNameText)
                {
                    fServerNameText = new Text("ServerNameText", ServerNameGridVHeaderItem);
                    fServerNameText.UIMap.Scope = UIASeachScope.Children;
                    fServerNameText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fServerNameText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server Name");
                }

                return fServerNameText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup0Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup0Thumb)
                {
                    fThumbPARTHeadeDup0Thumb = new Thumb("ThumbPARTHeadeDup0Thumb", ServerNameGridVHeaderItem);
                    fThumbPARTHeadeDup0Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup0Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem PortNumberGridVHeaderItem
        {
            get
            {
                if (null == fPortNumberGridVHeaderItem)
                {
                    fPortNumberGridVHeaderItem = new HeaderItem("PortNumberGridVHeaderItem", GridViewHeaderRDup0Header);
                    fPortNumberGridVHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fPortNumberGridVHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fPortNumberGridVHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port Number");
                }

                return fPortNumberGridVHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text PortNumberText
        {
            get
            {
                if (null == fPortNumberText)
                {
                    fPortNumberText = new Text("PortNumberText", PortNumberGridVHeaderItem);
                    fPortNumberText.UIMap.Scope = UIASeachScope.Children;
                    fPortNumberText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fPortNumberText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Port Number");
                }

                return fPortNumberText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup1Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup1Thumb)
                {
                    fThumbPARTHeadeDup1Thumb = new Thumb("ThumbPARTHeadeDup1Thumb", PortNumberGridVHeaderItem);
                    fThumbPARTHeadeDup1Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup1Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem ServerUsageGridHeaderItem
        {
            get
            {
                if (null == fServerUsageGridHeaderItem)
                {
                    fServerUsageGridHeaderItem = new HeaderItem("ServerUsageGridHeaderItem", GridViewHeaderRDup0Header);
                    fServerUsageGridHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fServerUsageGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fServerUsageGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server Usage");
                }

                return fServerUsageGridHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ServerUsageText
        {
            get
            {
                if (null == fServerUsageText)
                {
                    fServerUsageText = new Text("ServerUsageText", ServerUsageGridHeaderItem);
                    fServerUsageText.UIMap.Scope = UIASeachScope.Children;
                    fServerUsageText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fServerUsageText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Server Usage");
                }

                return fServerUsageText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup2Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup2Thumb)
                {
                    fThumbPARTHeadeDup2Thumb = new Thumb("ThumbPARTHeadeDup2Thumb", ServerUsageGridHeaderItem);
                    fThumbPARTHeadeDup2Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup2Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button Buttondef1110f9Button
        {
            get
            {
                if (null == fButtondef1110f9Button)
                {
                    fButtondef1110f9Button = new Button("Buttondef1110f9Button", OutgoingEmailSeGroup);
                    fButtondef1110f9Button.UIMap.Scope = UIASeachScope.Children;
                    fButtondef1110f9Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtondef1110f9Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"def1110f-9f76-4c5b-805d-0294760d0707");
                }

                return fButtondef1110f9Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImagemEmailUpBuImage
        {
            get
            {
                if (null == fImagemEmailUpBuImage)
                {
                    fImagemEmailUpBuImage = new Image("ImagemEmailUpBuImage", Buttondef1110f9Button);
                    fImagemEmailUpBuImage.UIMap.Scope = UIASeachScope.Children;
                    fImagemEmailUpBuImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImagemEmailUpBuImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailUpButtonImage");
                }

                return fImagemEmailUpBuImage;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button Button3eb872397Button
        {
            get
            {
                if (null == fButton3eb872397Button)
                {
                    fButton3eb872397Button = new Button("Button3eb872397Button", OutgoingEmailSeGroup);
                    fButton3eb872397Button.UIMap.Scope = UIASeachScope.Children;
                    fButton3eb872397Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButton3eb872397Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3eb87239-790c-4f53-adea-d081e80c3d8f");
                }

                return fButton3eb872397Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImagemEmailDownImage
        {
            get
            {
                if (null == fImagemEmailDownImage)
                {
                    fImagemEmailDownImage = new Image("ImagemEmailDownImage", Button3eb872397Button);
                    fImagemEmailDownImage.UIMap.Scope = UIASeachScope.Children;
                    fImagemEmailDownImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImagemEmailDownImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailDownButtonImage");
                }

                return fImagemEmailDownImage;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OnlyoneoutgoingText
        {
            get
            {
                if (null == fOnlyoneoutgoingText)
                {
                    fOnlyoneoutgoingText = new Text("OnlyoneoutgoingText", OutgoingEmailSeGroup);
                    fOnlyoneoutgoingText.UIMap.Scope = UIASeachScope.Children;
                    fOnlyoneoutgoingText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fOnlyoneoutgoingText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2007e358-86f6-474a-acb0-fd0b018c01ce");
                    fOnlyoneoutgoingText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Only one outgoing e-mail server is allowed for this device.");
                }

                return fOnlyoneoutgoingText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button AddButtonc35761Button
        {
            get
            {
                if (null == fAddButtonc35761Button)
                {
                    fAddButtonc35761Button = new Button("AddButtonc35761Button", OutgoingEmailSeGroup);
                    fAddButtonc35761Button.UIMap.Scope = UIASeachScope.Children;
                    fAddButtonc35761Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddButtonc35761Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c3576153-6e09-4052-8b6f-fa6d6f66e327");
                    fAddButtonc35761Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add...");
                }

                return fAddButtonc35761Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddTextBlockDup0Text
        {
            get
            {
                if (null == fAddTextBlockDup0Text)
                {
                    fAddTextBlockDup0Text = new Text("AddTextBlockDup0Text", AddButtonc35761Button);
                    fAddTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAddTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add...");
                }

                return fAddTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button EditButton17099Button
        {
            get
            {
                if (null == fEditButton17099Button)
                {
                    fEditButton17099Button = new Button("EditButton17099Button", OutgoingEmailSeGroup);
                    fEditButton17099Button.UIMap.Scope = UIASeachScope.Children;
                    fEditButton17099Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fEditButton17099Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"17099457-b963-4333-9e46-ce30af63494a");
                    fEditButton17099Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit...");
                }

                return fEditButton17099Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EditTextBlockDup0Text
        {
            get
            {
                if (null == fEditTextBlockDup0Text)
                {
                    fEditTextBlockDup0Text = new Text("EditTextBlockDup0Text", EditButton17099Button);
                    fEditTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fEditTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEditTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit...");
                }

                return fEditTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RemoveButton254Button
        {
            get
            {
                if (null == fRemoveButton254Button)
                {
                    fRemoveButton254Button = new Button("RemoveButton254Button", OutgoingEmailSeGroup);
                    fRemoveButton254Button.UIMap.Scope = UIASeachScope.Children;
                    fRemoveButton254Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRemoveButton254Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"25476d71-1bcf-4e88-8107-f4dbb1445a53");
                    fRemoveButton254Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                }

                return fRemoveButton254Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text RemoveTextBlockDup0Text
        {
            get
            {
                if (null == fRemoveTextBlockDup0Text)
                {
                    fRemoveTextBlockDup0Text = new Text("RemoveTextBlockDup0Text", RemoveButton254Button);
                    fRemoveTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fRemoveTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRemoveTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                }

                return fRemoveTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group QuickSetsGroupBGroup
        {
            get
            {
                if (null == fQuickSetsGroupBGroup)
                {
                    fQuickSetsGroupBGroup = new Group("QuickSetsGroupBGroup", ScrollViewer363Pane);
                    fQuickSetsGroupBGroup.UIMap.Scope = UIASeachScope.Children;
                    fQuickSetsGroupBGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fQuickSetsGroupBGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"de67a7c4-c07b-4118-bec2-2227ad94d407");
                    fQuickSetsGroupBGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Sets");
                }

                return fQuickSetsGroupBGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text QuickSetsTextBlText
        {
            get
            {
                if (null == fQuickSetsTextBlText)
                {
                    fQuickSetsTextBlText = new Text("QuickSetsTextBlText", QuickSetsGroupBGroup);
                    fQuickSetsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fQuickSetsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fQuickSetsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Sets");
                }

                return fQuickSetsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public DataGrid ListView561a7cfDataGrid
        {
            get
            {
                if (null == fListView561a7cfDataGrid)
                {
                    fListView561a7cfDataGrid = new DataGrid("ListView561a7cfDataGrid", QuickSetsGroupBGroup);
                    fListView561a7cfDataGrid.UIMap.Scope = UIASeachScope.Children;
                    fListView561a7cfDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListView");
                    fListView561a7cfDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"561a7cf6-a313-4fd1-9ba1-98ff0070cf0a");
                }

                return fListView561a7cfDataGrid;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Header GridViewHeaderRDup1Header
        {
            get
            {
                if (null == fGridViewHeaderRDup1Header)
                {
                    fGridViewHeaderRDup1Header = new Header("GridViewHeaderRDup1Header", ListView561a7cfDataGrid);
                    fGridViewHeaderRDup1Header.UIMap.Scope = UIASeachScope.Children;
                    fGridViewHeaderRDup1Header.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewHeaderRowPresenter");
                }

                return fGridViewHeaderRDup1Header;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem QuickSetTitleGrHeaderItem
        {
            get
            {
                if (null == fQuickSetTitleGrHeaderItem)
                {
                    fQuickSetTitleGrHeaderItem = new HeaderItem("QuickSetTitleGrHeaderItem", GridViewHeaderRDup1Header);
                    fQuickSetTitleGrHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fQuickSetTitleGrHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fQuickSetTitleGrHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Set Title");
                }

                return fQuickSetTitleGrHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text QuickSetTitleText
        {
            get
            {
                if (null == fQuickSetTitleText)
                {
                    fQuickSetTitleText = new Text("QuickSetTitleText", QuickSetTitleGrHeaderItem);
                    fQuickSetTitleText.UIMap.Scope = UIASeachScope.Children;
                    fQuickSetTitleText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fQuickSetTitleText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Set Title");
                }

                return fQuickSetTitleText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup3Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup3Thumb)
                {
                    fThumbPARTHeadeDup3Thumb = new Thumb("ThumbPARTHeadeDup3Thumb", QuickSetTitleGrHeaderItem);
                    fThumbPARTHeadeDup3Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup3Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup3Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup3Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem QuickSetDescripHeaderItem
        {
            get
            {
                if (null == fQuickSetDescripHeaderItem)
                {
                    fQuickSetDescripHeaderItem = new HeaderItem("QuickSetDescripHeaderItem", GridViewHeaderRDup1Header);
                    fQuickSetDescripHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fQuickSetDescripHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fQuickSetDescripHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Set Description");
                }

                return fQuickSetDescripHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text QuickSetDescripText
        {
            get
            {
                if (null == fQuickSetDescripText)
                {
                    fQuickSetDescripText = new Text("QuickSetDescripText", QuickSetDescripHeaderItem);
                    fQuickSetDescripText.UIMap.Scope = UIASeachScope.Children;
                    fQuickSetDescripText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fQuickSetDescripText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Set Description");
                }

                return fQuickSetDescripText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup4Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup4Thumb)
                {
                    fThumbPARTHeadeDup4Thumb = new Thumb("ThumbPARTHeadeDup4Thumb", QuickSetDescripHeaderItem);
                    fThumbPARTHeadeDup4Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup4Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup4Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup4Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem ButtonLocationGHeaderItem
        {
            get
            {
                if (null == fButtonLocationGHeaderItem)
                {
                    fButtonLocationGHeaderItem = new HeaderItem("ButtonLocationGHeaderItem", GridViewHeaderRDup1Header);
                    fButtonLocationGHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fButtonLocationGHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fButtonLocationGHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Button Location");
                }

                return fButtonLocationGHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ButtonLocationText
        {
            get
            {
                if (null == fButtonLocationText)
                {
                    fButtonLocationText = new Text("ButtonLocationText", ButtonLocationGHeaderItem);
                    fButtonLocationText.UIMap.Scope = UIASeachScope.Children;
                    fButtonLocationText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fButtonLocationText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Button Location");
                }

                return fButtonLocationText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup5Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup5Thumb)
                {
                    fThumbPARTHeadeDup5Thumb = new Thumb("ThumbPARTHeadeDup5Thumb", ButtonLocationGHeaderItem);
                    fThumbPARTHeadeDup5Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup5Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup5Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup5Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public DataItem HPDssAppConfiguDup0I0XDataItem
        {
            get
            {
                if (null == fHPDssAppConfiguDup0I0XDataItem)
                {
                    fHPDssAppConfiguDup0I0XDataItem = new DataItem("HPDssAppConfiguDup0I0XDataItem", ListView561a7cfDataGrid);
                    fHPDssAppConfiguDup0I0XDataItem.UIMap.Scope = UIASeachScope.Children;
                    fHPDssAppConfiguDup0I0XDataItem.UIMap.Index = 0;
                    fHPDssAppConfiguDup0I0XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                    fHPDssAppConfiguDup0I0XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP.Dss.App.ConfigurationUtility.DataModel.Email.EmailQuickSetDataModel");
                }

                return fHPDssAppConfiguDup0I0XDataItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text BlackPDFTextBloText
        {
            get
            {
                if (null == fBlackPDFTextBloText)
                {
                    fBlackPDFTextBloText = new Text("BlackPDFTextBloText", HPDssAppConfiguDup0I0XDataItem);
                    fBlackPDFTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fBlackPDFTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fBlackPDFTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Black PDF");
                }

                return fBlackPDFTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text A1sided150dpiTeDup0Text
        {
            get
            {
                if (null == fA1sided150dpiTeDup0Text)
                {
                    fA1sided150dpiTeDup0Text = new Text("A1sided150dpiTeDup0Text", HPDssAppConfiguDup0I0XDataItem);
                    fA1sided150dpiTeDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fA1sided150dpiTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fA1sided150dpiTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"1-sided, 150 dpi");
                }

                return fA1sided150dpiTeDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text QuickSetsApplicDup0Text
        {
            get
            {
                if (null == fQuickSetsApplicDup0Text)
                {
                    fQuickSetsApplicDup0Text = new Text("QuickSetsApplicDup0Text", HPDssAppConfiguDup0I0XDataItem);
                    fQuickSetsApplicDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fQuickSetsApplicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fQuickSetsApplicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Sets Application");
                }

                return fQuickSetsApplicDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public DataItem HPDssAppConfiguDup1I1XDataItem
        {
            get
            {
                if (null == fHPDssAppConfiguDup1I1XDataItem)
                {
                    fHPDssAppConfiguDup1I1XDataItem = new DataItem("HPDssAppConfiguDup1I1XDataItem", ListView561a7cfDataGrid);
                    fHPDssAppConfiguDup1I1XDataItem.UIMap.Scope = UIASeachScope.Children;
                    fHPDssAppConfiguDup1I1XDataItem.UIMap.Index = 1;
                    fHPDssAppConfiguDup1I1XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                    fHPDssAppConfiguDup1I1XDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP.Dss.App.ConfigurationUtility.DataModel.Email.EmailQuickSetDataModel");
                }

                return fHPDssAppConfiguDup1I1XDataItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ColorPDFTextBloText
        {
            get
            {
                if (null == fColorPDFTextBloText)
                {
                    fColorPDFTextBloText = new Text("ColorPDFTextBloText", HPDssAppConfiguDup1I1XDataItem);
                    fColorPDFTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fColorPDFTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fColorPDFTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Color PDF");
                }

                return fColorPDFTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text A1sided150dpiTeDup1Text
        {
            get
            {
                if (null == fA1sided150dpiTeDup1Text)
                {
                    fA1sided150dpiTeDup1Text = new Text("A1sided150dpiTeDup1Text", HPDssAppConfiguDup1I1XDataItem);
                    fA1sided150dpiTeDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fA1sided150dpiTeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fA1sided150dpiTeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"1-sided, 150 dpi");
                }

                return fA1sided150dpiTeDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text QuickSetsApplicDup1Text
        {
            get
            {
                if (null == fQuickSetsApplicDup1Text)
                {
                    fQuickSetsApplicDup1Text = new Text("QuickSetsApplicDup1Text", HPDssAppConfiguDup1I1XDataItem);
                    fQuickSetsApplicDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fQuickSetsApplicDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fQuickSetsApplicDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Sets Application");
                }

                return fQuickSetsApplicDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button AddButton4ec552Button
        {
            get
            {
                if (null == fAddButton4ec552Button)
                {
                    fAddButton4ec552Button = new Button("AddButton4ec552Button", QuickSetsGroupBGroup);
                    fAddButton4ec552Button.UIMap.Scope = UIASeachScope.Children;
                    fAddButton4ec552Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddButton4ec552Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4ec552fc-0699-4277-b788-b20f9fd3fad4");
                    fAddButton4ec552Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add...");
                }

                return fAddButton4ec552Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddTextBlockDup1Text
        {
            get
            {
                if (null == fAddTextBlockDup1Text)
                {
                    fAddTextBlockDup1Text = new Text("AddTextBlockDup1Text", AddButton4ec552Button);
                    fAddTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAddTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add...");
                }

                return fAddTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button EditButton2100dButton
        {
            get
            {
                if (null == fEditButton2100dButton)
                {
                    fEditButton2100dButton = new Button("EditButton2100dButton", QuickSetsGroupBGroup);
                    fEditButton2100dButton.UIMap.Scope = UIASeachScope.Children;
                    fEditButton2100dButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fEditButton2100dButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2100dd80-5d8e-47d0-a509-8e1802851738");
                    fEditButton2100dButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit...");
                }

                return fEditButton2100dButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EditTextBlockDup1Text
        {
            get
            {
                if (null == fEditTextBlockDup1Text)
                {
                    fEditTextBlockDup1Text = new Text("EditTextBlockDup1Text", EditButton2100dButton);
                    fEditTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fEditTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEditTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit...");
                }

                return fEditTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CopyButtonf36c5Button
        {
            get
            {
                if (null == fCopyButtonf36c5Button)
                {
                    fCopyButtonf36c5Button = new Button("CopyButtonf36c5Button", QuickSetsGroupBGroup);
                    fCopyButtonf36c5Button.UIMap.Scope = UIASeachScope.Children;
                    fCopyButtonf36c5Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCopyButtonf36c5Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f36c514f-34f6-4b20-a2f7-f62bbdeb98e0");
                    fCopyButtonf36c5Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Copy...");
                }

                return fCopyButtonf36c5Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CopyTextBlockText
        {
            get
            {
                if (null == fCopyTextBlockText)
                {
                    fCopyTextBlockText = new Text("CopyTextBlockText", CopyButtonf36c5Button);
                    fCopyTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fCopyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCopyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Copy...");
                }

                return fCopyTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RemoveButton78fButton
        {
            get
            {
                if (null == fRemoveButton78fButton)
                {
                    fRemoveButton78fButton = new Button("RemoveButton78fButton", QuickSetsGroupBGroup);
                    fRemoveButton78fButton.UIMap.Scope = UIASeachScope.Children;
                    fRemoveButton78fButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRemoveButton78fButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"78f6bbf4-24b1-4418-9728-68eb00909dfb");
                    fRemoveButton78fButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                }

                return fRemoveButton78fButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text RemoveTextBlockDup1Text
        {
            get
            {
                if (null == fRemoveTextBlockDup1Text)
                {
                    fRemoveTextBlockDup1Text = new Text("RemoveTextBlockDup1Text", RemoveButton78fButton);
                    fRemoveTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fRemoveTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRemoveTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                }

                return fRemoveTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group AddressandMessaGroup
        {
            get
            {
                if (null == fAddressandMessaGroup)
                {
                    fAddressandMessaGroup = new Group("AddressandMessaGroup", ScrollViewer363Pane);
                    fAddressandMessaGroup.UIMap.Scope = UIASeachScope.Children;
                    fAddressandMessaGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fAddressandMessaGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"314382c1-be37-4716-9748-e50e34a929da");
                    fAddressandMessaGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address and Message Field Control");
                }

                return fAddressandMessaGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddressandMessaText
        {
            get
            {
                if (null == fAddressandMessaText)
                {
                    fAddressandMessaText = new Text("AddressandMessaText", AddressandMessaGroup);
                    fAddressandMessaText.UIMap.Scope = UIASeachScope.Children;
                    fAddressandMessaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddressandMessaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address and Message Field Control");
                }

                return fAddressandMessaText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SelectthedesireText
        {
            get
            {
                if (null == fSelectthedesireText)
                {
                    fSelectthedesireText = new Text("SelectthedesireText", AddressandMessaGroup);
                    fSelectthedesireText.UIMap.Scope = UIASeachScope.Children;
                    fSelectthedesireText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSelectthedesireText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Select the desired setting for each field and whether the field can be edited by the user at the control panel. If any selections require users to sign in, set the base application to require signing in by navigating to the Security tab.");
                }

                return fSelectthedesireText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddressFieldResDup0Text
        {
            get
            {
                if (null == fAddressFieldResDup0Text)
                {
                    fAddressFieldResDup0Text = new Text("AddressFieldResDup0Text", AddressandMessaGroup);
                    fAddressFieldResDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAddressFieldResDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAddressFieldResDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7FC90BF3-6786-4d7d-AEEA-AB24D22B72DF");
                    fAddressFieldResDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Field Restrictions");
                }

                return fAddressFieldResDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddressFieldResDup1Text
        {
            get
            {
                if (null == fAddressFieldResDup1Text)
                {
                    fAddressFieldResDup1Text = new Text("AddressFieldResDup1Text", AddressFieldResDup0Text);
                    fAddressFieldResDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAddressFieldResDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddressFieldResDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address Field Restrictions");
                }

                return fAddressFieldResDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxC9F27ECComboBox
        {
            get
            {
                if (null == fComboBoxC9F27ECComboBox)
                {
                    fComboBoxC9F27ECComboBox = new ComboBox("ComboBoxC9F27ECComboBox", AddressandMessaGroup);
                    fComboBoxC9F27ECComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxC9F27ECComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxC9F27ECComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C9F27EC8-2DFA-419a-A5FB-048B69D7767F");
                }

                return fComboBoxC9F27ECComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SettingappliesiText
        {
            get
            {
                if (null == fSettingappliesiText)
                {
                    fSettingappliesiText = new Text("SettingappliesiText", AddressandMessaGroup);
                    fSettingappliesiText.UIMap.Scope = UIASeachScope.Children;
                    fSettingappliesiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSettingappliesiText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"EC527071-9E5C-4e35-92D8-1FAD87606453");
                    fSettingappliesiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, "Setting applies if From, To, Cc, or Bcc fields are \"User editable\"");
                }

                return fSettingappliesiText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FromTextf77e3d2Text
        {
            get
            {
                if (null == fFromTextf77e3d2Text)
                {
                    fFromTextf77e3d2Text = new Text("FromTextf77e3d2Text", AddressandMessaGroup);
                    fFromTextf77e3d2Text.UIMap.Scope = UIASeachScope.Children;
                    fFromTextf77e3d2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFromTextf77e3d2Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f77e3d2a-abf7-4309-b358-26ada5455597");
                    fFromTextf77e3d2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"From");
                }

                return fFromTextf77e3d2Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FromTextBlockText
        {
            get
            {
                if (null == fFromTextBlockText)
                {
                    fFromTextBlockText = new Text("FromTextBlockText", FromTextf77e3d2Text);
                    fFromTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fFromTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFromTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"From");
                }

                return fFromTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox79BAB33ComboBox
        {
            get
            {
                if (null == fComboBox79BAB33ComboBox)
                {
                    fComboBox79BAB33ComboBox = new ComboBox("ComboBox79BAB33ComboBox", AddressandMessaGroup);
                    fComboBox79BAB33ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox79BAB33ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox79BAB33ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"79BAB33F-377C-45b9-B618-4FE93F4C1923");
                }

                return fComboBox79BAB33ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox UsereditableCheDup0CheckBox
        {
            get
            {
                if (null == fUsereditableCheDup0CheckBox)
                {
                    fUsereditableCheDup0CheckBox = new CheckBox("UsereditableCheDup0CheckBox", AddressandMessaGroup);
                    fUsereditableCheDup0CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableCheDup0CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fUsereditableCheDup0CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"497fcf16-c6a1-4f27-a962-543fc5edc0e9");
                    fUsereditableCheDup0CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableCheDup0CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text UsereditableTexDup0Text
        {
            get
            {
                if (null == fUsereditableTexDup0Text)
                {
                    fUsereditableTexDup0Text = new Text("UsereditableTexDup0Text", UsereditableCheDup0CheckBox);
                    fUsereditableTexDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUsereditableTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableTexDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group GroupBoxmOnlyApGroup
        {
            get
            {
                if (null == fGroupBoxmOnlyApGroup)
                {
                    fGroupBoxmOnlyApGroup = new Group("GroupBoxmOnlyApGroup", AddressandMessaGroup);
                    fGroupBoxmOnlyApGroup.UIMap.Scope = UIASeachScope.Children;
                    fGroupBoxmOnlyApGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fGroupBoxmOnlyApGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mOnlyApplyIfDeviceFromAddressIsEmptyGroupBox");
                }

                return fGroupBoxmOnlyApGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultFromText
        {
            get
            {
                if (null == fDefaultFromText)
                {
                    fDefaultFromText = new Text("DefaultFromText", GroupBoxmOnlyApGroup);
                    fDefaultFromText.UIMap.Scope = UIASeachScope.Children;
                    fDefaultFromText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDefaultFromText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default From");
                }

                return fDefaultFromText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultFromTextText
        {
            get
            {
                if (null == fDefaultFromTextText)
                {
                    fDefaultFromTextText = new Text("DefaultFromTextText", DefaultFromText);
                    fDefaultFromTextText.UIMap.Scope = UIASeachScope.Children;
                    fDefaultFromTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDefaultFromTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default From");
                }

                return fDefaultFromTextText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBox2E78C91AEdit
        {
            get
            {
                if (null == fTextBox2E78C91AEdit)
                {
                    fTextBox2E78C91AEdit = new Edit("TextBox2E78C91AEdit", GroupBoxmOnlyApGroup);
                    fTextBox2E78C91AEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox2E78C91AEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox2E78C91AEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2E78C91A-1615-4fb2-86B5-DDDEF095D7E7");
                }

                return fTextBox2E78C91AEdit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup0Pane
        {
            get
            {
                if (null == fScrollViewerPARDup0Pane)
                {
                    fScrollViewerPARDup0Pane = new Pane("ScrollViewerPARDup0Pane", TextBox2E78C91AEdit);
                    fScrollViewerPARDup0Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup0Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup1ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup1ScrollBar)
                {
                    fScrollBarVerticDup1ScrollBar = new ScrollBar("ScrollBarVerticDup1ScrollBar", ScrollViewerPARDup0Pane);
                    fScrollBarVerticDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup1ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup1ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup1ScrollBar)
                {
                    fScrollBarHorizoDup1ScrollBar = new ScrollBar("ScrollBarHorizoDup1ScrollBar", ScrollViewerPARDup0Pane);
                    fScrollBarHorizoDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup1ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultDisplayNDup0Text
        {
            get
            {
                if (null == fDefaultDisplayNDup0Text)
                {
                    fDefaultDisplayNDup0Text = new Text("DefaultDisplayNDup0Text", GroupBoxmOnlyApGroup);
                    fDefaultDisplayNDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultDisplayNDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDefaultDisplayNDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Display Name");
                }

                return fDefaultDisplayNDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultDisplayNDup1Text
        {
            get
            {
                if (null == fDefaultDisplayNDup1Text)
                {
                    fDefaultDisplayNDup1Text = new Text("DefaultDisplayNDup1Text", DefaultDisplayNDup0Text);
                    fDefaultDisplayNDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultDisplayNDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDefaultDisplayNDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Display Name");
                }

                return fDefaultDisplayNDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBox01092B21Edit
        {
            get
            {
                if (null == fTextBox01092B21Edit)
                {
                    fTextBox01092B21Edit = new Edit("TextBox01092B21Edit", GroupBoxmOnlyApGroup);
                    fTextBox01092B21Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox01092B21Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox01092B21Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"01092B21-E7AF-4503-A473-9B03E0507C0F");
                }

                return fTextBox01092B21Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup1Pane
        {
            get
            {
                if (null == fScrollViewerPARDup1Pane)
                {
                    fScrollViewerPARDup1Pane = new Pane("ScrollViewerPARDup1Pane", TextBox01092B21Edit);
                    fScrollViewerPARDup1Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup1Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup2ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup2ScrollBar)
                {
                    fScrollBarVerticDup2ScrollBar = new ScrollBar("ScrollBarVerticDup2ScrollBar", ScrollViewerPARDup1Pane);
                    fScrollBarVerticDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup2ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup2ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup2ScrollBar)
                {
                    fScrollBarHorizoDup2ScrollBar = new ScrollBar("ScrollBarHorizoDup2ScrollBar", ScrollViewerPARDup1Pane);
                    fScrollBarHorizoDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup2ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NoteAdefaultFroText
        {
            get
            {
                if (null == fNoteAdefaultFroText)
                {
                    fNoteAdefaultFroText = new Text("NoteAdefaultFroText", GroupBoxmOnlyApGroup);
                    fNoteAdefaultFroText.UIMap.Scope = UIASeachScope.Children;
                    fNoteAdefaultFroText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNoteAdefaultFroText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Note: A default From: address is required and is used when users do not sign in to use e-mail.");
                }

                return fNoteAdefaultFroText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NoteThisisanoptText
        {
            get
            {
                if (null == fNoteThisisanoptText)
                {
                    fNoteThisisanoptText = new Text("NoteThisisanoptText", GroupBoxmOnlyApGroup);
                    fNoteThisisanoptText.UIMap.Scope = UIASeachScope.Children;
                    fNoteThisisanoptText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNoteThisisanoptText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Note: This is an optional setting.  If set, the display name is shown at the control panel rather than the Default From: address.
");
                }

                return fNoteThisisanoptText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public RadioButton AlwaysApplyRadiRadioButton
        {
            get
            {
                if (null == fAlwaysApplyRadiRadioButton)
                {
                    fAlwaysApplyRadiRadioButton = new RadioButton("AlwaysApplyRadiRadioButton", GroupBoxmOnlyApGroup);
                    fAlwaysApplyRadiRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fAlwaysApplyRadiRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    fAlwaysApplyRadiRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DBA715DE-D1F9-4FF9-9CCB-53F63651F0FF");
                    fAlwaysApplyRadiRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Always Apply");
                }

                return fAlwaysApplyRadiRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public RadioButton ApplyonlyifnotaRadioButton
        {
            get
            {
                if (null == fApplyonlyifnotaRadioButton)
                {
                    fApplyonlyifnotaRadioButton = new RadioButton("ApplyonlyifnotaRadioButton", GroupBoxmOnlyApGroup);
                    fApplyonlyifnotaRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fApplyonlyifnotaRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    fApplyonlyifnotaRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1A05387F-F6F1-4B45-A007-74F164B3464B");
                    fApplyonlyifnotaRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply only if not already configured");
                }

                return fApplyonlyifnotaRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ToText0b5099608Text
        {
            get
            {
                if (null == fToText0b5099608Text)
                {
                    fToText0b5099608Text = new Text("ToText0b5099608Text", AddressandMessaGroup);
                    fToText0b5099608Text.UIMap.Scope = UIASeachScope.Children;
                    fToText0b5099608Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fToText0b5099608Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0b509960-86d3-4d50-8df6-368bca214f63");
                    fToText0b5099608Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"To");
                }

                return fToText0b5099608Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ToTextBlockText
        {
            get
            {
                if (null == fToTextBlockText)
                {
                    fToTextBlockText = new Text("ToTextBlockText", ToText0b5099608Text);
                    fToTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fToTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fToTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"To");
                }

                return fToTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox51181A4ComboBox
        {
            get
            {
                if (null == fComboBox51181A4ComboBox)
                {
                    fComboBox51181A4ComboBox = new ComboBox("ComboBox51181A4ComboBox", AddressandMessaGroup);
                    fComboBox51181A4ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox51181A4ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox51181A4ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"51181A44-0E53-46ec-BCF7-4B1BE7345417");
                }

                return fComboBox51181A4ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox UsereditableCheDup1CheckBox
        {
            get
            {
                if (null == fUsereditableCheDup1CheckBox)
                {
                    fUsereditableCheDup1CheckBox = new CheckBox("UsereditableCheDup1CheckBox", AddressandMessaGroup);
                    fUsereditableCheDup1CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableCheDup1CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fUsereditableCheDup1CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c79b6e83-5082-4cc1-9253-ba03b48e11f3");
                    fUsereditableCheDup1CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableCheDup1CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text UsereditableTexDup1Text
        {
            get
            {
                if (null == fUsereditableTexDup1Text)
                {
                    fUsereditableTexDup1Text = new Text("UsereditableTexDup1Text", UsereditableCheDup1CheckBox);
                    fUsereditableTexDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUsereditableTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableTexDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CCTextaf163d019Text
        {
            get
            {
                if (null == fCCTextaf163d019Text)
                {
                    fCCTextaf163d019Text = new Text("CCTextaf163d019Text", AddressandMessaGroup);
                    fCCTextaf163d019Text.UIMap.Scope = UIASeachScope.Children;
                    fCCTextaf163d019Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fCCTextaf163d019Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"af163d01-916e-4cd1-9801-102ac09b4a76");
                    fCCTextaf163d019Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"CC");
                }

                return fCCTextaf163d019Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CCTextBlockText
        {
            get
            {
                if (null == fCCTextBlockText)
                {
                    fCCTextBlockText = new Text("CCTextBlockText", CCTextaf163d019Text);
                    fCCTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fCCTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCCTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"CC");
                }

                return fCCTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxADC0CADComboBox
        {
            get
            {
                if (null == fComboBoxADC0CADComboBox)
                {
                    fComboBoxADC0CADComboBox = new ComboBox("ComboBoxADC0CADComboBox", AddressandMessaGroup);
                    fComboBoxADC0CADComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxADC0CADComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxADC0CADComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ADC0CADB-84E9-4c23-AB69-CD84C5AEB315");
                }

                return fComboBoxADC0CADComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox UsereditableCheDup2CheckBox
        {
            get
            {
                if (null == fUsereditableCheDup2CheckBox)
                {
                    fUsereditableCheDup2CheckBox = new CheckBox("UsereditableCheDup2CheckBox", AddressandMessaGroup);
                    fUsereditableCheDup2CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableCheDup2CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fUsereditableCheDup2CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"841da57a-b256-4fa7-8d3c-4803cf8e9600");
                    fUsereditableCheDup2CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableCheDup2CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text UsereditableTexDup2Text
        {
            get
            {
                if (null == fUsereditableTexDup2Text)
                {
                    fUsereditableTexDup2Text = new Text("UsereditableTexDup2Text", UsereditableCheDup2CheckBox);
                    fUsereditableTexDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableTexDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUsereditableTexDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableTexDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text BCCTextaeea6c74Text
        {
            get
            {
                if (null == fBCCTextaeea6c74Text)
                {
                    fBCCTextaeea6c74Text = new Text("BCCTextaeea6c74Text", AddressandMessaGroup);
                    fBCCTextaeea6c74Text.UIMap.Scope = UIASeachScope.Children;
                    fBCCTextaeea6c74Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fBCCTextaeea6c74Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"aeea6c74-0bf8-41f8-ad40-a7f28c076caf");
                    fBCCTextaeea6c74Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"BCC");
                }

                return fBCCTextaeea6c74Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text BCCTextBlockText
        {
            get
            {
                if (null == fBCCTextBlockText)
                {
                    fBCCTextBlockText = new Text("BCCTextBlockText", BCCTextaeea6c74Text);
                    fBCCTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fBCCTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fBCCTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"BCC");
                }

                return fBCCTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox0746471ComboBox
        {
            get
            {
                if (null == fComboBox0746471ComboBox)
                {
                    fComboBox0746471ComboBox = new ComboBox("ComboBox0746471ComboBox", AddressandMessaGroup);
                    fComboBox0746471ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox0746471ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox0746471ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"07464717-17A6-45df-A5F0-1708D37D1640");
                }

                return fComboBox0746471ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox UsereditableCheDup3CheckBox
        {
            get
            {
                if (null == fUsereditableCheDup3CheckBox)
                {
                    fUsereditableCheDup3CheckBox = new CheckBox("UsereditableCheDup3CheckBox", AddressandMessaGroup);
                    fUsereditableCheDup3CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableCheDup3CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fUsereditableCheDup3CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"aafdeef9-e213-441d-be11-0c8a904f6831");
                    fUsereditableCheDup3CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableCheDup3CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text UsereditableTexDup3Text
        {
            get
            {
                if (null == fUsereditableTexDup3Text)
                {
                    fUsereditableTexDup3Text = new Text("UsereditableTexDup3Text", UsereditableCheDup3CheckBox);
                    fUsereditableTexDup3Text.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableTexDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUsereditableTexDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableTexDup3Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SubjectText
        {
            get
            {
                if (null == fSubjectText)
                {
                    fSubjectText = new Text("SubjectText", AddressandMessaGroup);
                    fSubjectText.UIMap.Scope = UIASeachScope.Children;
                    fSubjectText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSubjectText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Subject");
                }

                return fSubjectText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SubjectTextBlocText
        {
            get
            {
                if (null == fSubjectTextBlocText)
                {
                    fSubjectTextBlocText = new Text("SubjectTextBlocText", SubjectText);
                    fSubjectTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fSubjectTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSubjectTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Subject");
                }

                return fSubjectTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBox2DDF7D8BEdit
        {
            get
            {
                if (null == fTextBox2DDF7D8BEdit)
                {
                    fTextBox2DDF7D8BEdit = new Edit("TextBox2DDF7D8BEdit", AddressandMessaGroup);
                    fTextBox2DDF7D8BEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox2DDF7D8BEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox2DDF7D8BEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2DDF7D8B-45A7-45b8-AD70-3CEFFAC2A2D7");
                }

                return fTextBox2DDF7D8BEdit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup2Pane
        {
            get
            {
                if (null == fScrollViewerPARDup2Pane)
                {
                    fScrollViewerPARDup2Pane = new Pane("ScrollViewerPARDup2Pane", TextBox2DDF7D8BEdit);
                    fScrollViewerPARDup2Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup2Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup3ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup3ScrollBar)
                {
                    fScrollBarVerticDup3ScrollBar = new ScrollBar("ScrollBarVerticDup3ScrollBar", ScrollViewerPARDup2Pane);
                    fScrollBarVerticDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup3ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup3ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup3ScrollBar)
                {
                    fScrollBarHorizoDup3ScrollBar = new ScrollBar("ScrollBarHorizoDup3ScrollBar", ScrollViewerPARDup2Pane);
                    fScrollBarHorizoDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup3ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox UsereditableCheDup4CheckBox
        {
            get
            {
                if (null == fUsereditableCheDup4CheckBox)
                {
                    fUsereditableCheDup4CheckBox = new CheckBox("UsereditableCheDup4CheckBox", AddressandMessaGroup);
                    fUsereditableCheDup4CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableCheDup4CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fUsereditableCheDup4CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e450cec2-0bc1-49ee-ab5a-d33f05721a02");
                    fUsereditableCheDup4CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableCheDup4CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text UsereditableTexDup4Text
        {
            get
            {
                if (null == fUsereditableTexDup4Text)
                {
                    fUsereditableTexDup4Text = new Text("UsereditableTexDup4Text", UsereditableCheDup4CheckBox);
                    fUsereditableTexDup4Text.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableTexDup4Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUsereditableTexDup4Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableTexDup4Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultMessageText
        {
            get
            {
                if (null == fDefaultMessageText)
                {
                    fDefaultMessageText = new Text("DefaultMessageText", AddressandMessaGroup);
                    fDefaultMessageText.UIMap.Scope = UIASeachScope.Children;
                    fDefaultMessageText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDefaultMessageText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Message");
                }

                return fDefaultMessageText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultMessageTText
        {
            get
            {
                if (null == fDefaultMessageTText)
                {
                    fDefaultMessageTText = new Text("DefaultMessageTText", DefaultMessageText);
                    fDefaultMessageTText.UIMap.Scope = UIASeachScope.Children;
                    fDefaultMessageTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDefaultMessageTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Message");
                }

                return fDefaultMessageTText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBox78FA07F4Edit
        {
            get
            {
                if (null == fTextBox78FA07F4Edit)
                {
                    fTextBox78FA07F4Edit = new Edit("TextBox78FA07F4Edit", AddressandMessaGroup);
                    fTextBox78FA07F4Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox78FA07F4Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox78FA07F4Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"78FA07F4-CA65-4f10-87B5-57B53B1DFB60");
                }

                return fTextBox78FA07F4Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup3Pane
        {
            get
            {
                if (null == fScrollViewerPARDup3Pane)
                {
                    fScrollViewerPARDup3Pane = new Pane("ScrollViewerPARDup3Pane", TextBox78FA07F4Edit);
                    fScrollViewerPARDup3Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup3Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup4ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup4ScrollBar)
                {
                    fScrollBarVerticDup4ScrollBar = new ScrollBar("ScrollBarVerticDup4ScrollBar", ScrollViewerPARDup3Pane);
                    fScrollBarVerticDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup4ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RepeatButtonLinDup0Button
        {
            get
            {
                if (null == fRepeatButtonLinDup0Button)
                {
                    fRepeatButtonLinDup0Button = new Button("RepeatButtonLinDup0Button", ScrollBarVerticDup4ScrollBar);
                    fRepeatButtonLinDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonLinDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonLinDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LineUp");
                }

                return fRepeatButtonLinDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RepeatButtonPagDup0Button
        {
            get
            {
                if (null == fRepeatButtonPagDup0Button)
                {
                    fRepeatButtonPagDup0Button = new Button("RepeatButtonPagDup0Button", ScrollBarVerticDup4ScrollBar);
                    fRepeatButtonPagDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageUp");
                }

                return fRepeatButtonPagDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RepeatButtonPagDup1Button
        {
            get
            {
                if (null == fRepeatButtonPagDup1Button)
                {
                    fRepeatButtonPagDup1Button = new Button("RepeatButtonPagDup1Button", ScrollBarVerticDup4ScrollBar);
                    fRepeatButtonPagDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageDown");
                }

                return fRepeatButtonPagDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbDup0Thumb
        {
            get
            {
                if (null == fThumbDup0Thumb)
                {
                    fThumbDup0Thumb = new Thumb("ThumbDup0Thumb", ScrollBarVerticDup4ScrollBar);
                    fThumbDup0Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbDup0Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RepeatButtonLinDup1Button
        {
            get
            {
                if (null == fRepeatButtonLinDup1Button)
                {
                    fRepeatButtonLinDup1Button = new Button("RepeatButtonLinDup1Button", ScrollBarVerticDup4ScrollBar);
                    fRepeatButtonLinDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonLinDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonLinDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LineDown");
                }

                return fRepeatButtonLinDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup4ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup4ScrollBar)
                {
                    fScrollBarHorizoDup4ScrollBar = new ScrollBar("ScrollBarHorizoDup4ScrollBar", ScrollViewerPARDup3Pane);
                    fScrollBarHorizoDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup4ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox UsereditableCheDup5CheckBox
        {
            get
            {
                if (null == fUsereditableCheDup5CheckBox)
                {
                    fUsereditableCheDup5CheckBox = new CheckBox("UsereditableCheDup5CheckBox", AddressandMessaGroup);
                    fUsereditableCheDup5CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableCheDup5CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fUsereditableCheDup5CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"bc0d6ece-1b22-474b-b655-5825959e287c");
                    fUsereditableCheDup5CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableCheDup5CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text UsereditableTexDup5Text
        {
            get
            {
                if (null == fUsereditableTexDup5Text)
                {
                    fUsereditableTexDup5Text = new Text("UsereditableTexDup5Text", UsereditableCheDup5CheckBox);
                    fUsereditableTexDup5Text.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableTexDup5Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUsereditableTexDup5Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableTexDup5Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group SigningandEncryGroup
        {
            get
            {
                if (null == fSigningandEncryGroup)
                {
                    fSigningandEncryGroup = new Group("SigningandEncryGroup", ScrollViewer363Pane);
                    fSigningandEncryGroup.UIMap.Scope = UIASeachScope.Children;
                    fSigningandEncryGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fSigningandEncryGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2E595CD9-0838-4873-9580-50C092EBFF2B");
                    fSigningandEncryGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Signing and Encryption");
                }

                return fSigningandEncryGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SigningandEncryText
        {
            get
            {
                if (null == fSigningandEncryText)
                {
                    fSigningandEncryText = new Text("SigningandEncryText", SigningandEncryGroup);
                    fSigningandEncryText.UIMap.Scope = UIASeachScope.Children;
                    fSigningandEncryText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSigningandEncryText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Signing and Encryption");
                }

                return fSigningandEncryText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SigningTextmEmaText
        {
            get
            {
                if (null == fSigningTextmEmaText)
                {
                    fSigningTextmEmaText = new Text("SigningTextmEmaText", SigningandEncryGroup);
                    fSigningTextmEmaText.UIMap.Scope = UIASeachScope.Children;
                    fSigningTextmEmaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSigningTextmEmaText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailSigningLabel");
                    fSigningTextmEmaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Signing");
                }

                return fSigningTextmEmaText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SigningTextBlocText
        {
            get
            {
                if (null == fSigningTextBlocText)
                {
                    fSigningTextBlocText = new Text("SigningTextBlocText", SigningTextmEmaText);
                    fSigningTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fSigningTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSigningTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Signing");
                }

                return fSigningTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxA6DF22FComboBox
        {
            get
            {
                if (null == fComboBoxA6DF22FComboBox)
                {
                    fComboBoxA6DF22FComboBox = new ComboBox("ComboBoxA6DF22FComboBox", SigningandEncryGroup);
                    fComboBoxA6DF22FComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxA6DF22FComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxA6DF22FComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A6DF22F5-B4D1-494e-A848-35A9A1662C2A");
                }

                return fComboBoxA6DF22FComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox UsereditableCheDup6CheckBox
        {
            get
            {
                if (null == fUsereditableCheDup6CheckBox)
                {
                    fUsereditableCheDup6CheckBox = new CheckBox("UsereditableCheDup6CheckBox", SigningandEncryGroup);
                    fUsereditableCheDup6CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableCheDup6CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fUsereditableCheDup6CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"03EC619A-E519-43e1-8458-EEA1EACACA54");
                    fUsereditableCheDup6CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableCheDup6CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text UsereditableTexDup6Text
        {
            get
            {
                if (null == fUsereditableTexDup6Text)
                {
                    fUsereditableTexDup6Text = new Text("UsereditableTexDup6Text", UsereditableCheDup6CheckBox);
                    fUsereditableTexDup6Text.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableTexDup6Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUsereditableTexDup6Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableTexDup6Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EncryptionTextmText
        {
            get
            {
                if (null == fEncryptionTextmText)
                {
                    fEncryptionTextmText = new Text("EncryptionTextmText", SigningandEncryGroup);
                    fEncryptionTextmText.UIMap.Scope = UIASeachScope.Children;
                    fEncryptionTextmText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fEncryptionTextmText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailEncryptionLabel");
                    fEncryptionTextmText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Encryption");
                }

                return fEncryptionTextmText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EncryptionTextBText
        {
            get
            {
                if (null == fEncryptionTextBText)
                {
                    fEncryptionTextBText = new Text("EncryptionTextBText", EncryptionTextmText);
                    fEncryptionTextBText.UIMap.Scope = UIASeachScope.Children;
                    fEncryptionTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEncryptionTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Encryption");
                }

                return fEncryptionTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxC331B21ComboBox
        {
            get
            {
                if (null == fComboBoxC331B21ComboBox)
                {
                    fComboBoxC331B21ComboBox = new ComboBox("ComboBoxC331B21ComboBox", SigningandEncryGroup);
                    fComboBoxC331B21ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxC331B21ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxC331B21ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C331B21C-25D5-4248-95FB-D7CC5A13ECFA");
                }

                return fComboBoxC331B21ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox UsereditableCheDup7CheckBox
        {
            get
            {
                if (null == fUsereditableCheDup7CheckBox)
                {
                    fUsereditableCheDup7CheckBox = new CheckBox("UsereditableCheDup7CheckBox", SigningandEncryGroup);
                    fUsereditableCheDup7CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableCheDup7CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fUsereditableCheDup7CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"46C68DD2-8D00-4acc-B717-BF1EA36BE608");
                    fUsereditableCheDup7CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableCheDup7CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text UsereditableTexDup7Text
        {
            get
            {
                if (null == fUsereditableTexDup7Text)
                {
                    fUsereditableTexDup7Text = new Text("UsereditableTexDup7Text", UsereditableCheDup7CheckBox);
                    fUsereditableTexDup7Text.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableTexDup7Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUsereditableTexDup7Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableTexDup7Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AttributeforRecDup0Text
        {
            get
            {
                if (null == fAttributeforRecDup0Text)
                {
                    fAttributeforRecDup0Text = new Text("AttributeforRecDup0Text", SigningandEncryGroup);
                    fAttributeforRecDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAttributeforRecDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAttributeforRecDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailAttributeForRecipientPublickeyLabel");
                    fAttributeforRecDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Attribute for Recipient Public Key");
                }

                return fAttributeforRecDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AttributeforRecDup1Text
        {
            get
            {
                if (null == fAttributeforRecDup1Text)
                {
                    fAttributeforRecDup1Text = new Text("AttributeforRecDup1Text", AttributeforRecDup0Text);
                    fAttributeforRecDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAttributeforRecDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAttributeforRecDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Attribute for Recipient Public Key");
                }

                return fAttributeforRecDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBoxD598C919Edit
        {
            get
            {
                if (null == fTextBoxD598C919Edit)
                {
                    fTextBoxD598C919Edit = new Edit("TextBoxD598C919Edit", SigningandEncryGroup);
                    fTextBoxD598C919Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxD598C919Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBoxD598C919Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D598C919-EBE4-41e0-AB10-E882B160FB0F");
                }

                return fTextBoxD598C919Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup4Pane
        {
            get
            {
                if (null == fScrollViewerPARDup4Pane)
                {
                    fScrollViewerPARDup4Pane = new Pane("ScrollViewerPARDup4Pane", TextBoxD598C919Edit);
                    fScrollViewerPARDup4Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup4Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup5ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup5ScrollBar)
                {
                    fScrollBarVerticDup5ScrollBar = new ScrollBar("ScrollBarVerticDup5ScrollBar", ScrollViewerPARDup4Pane);
                    fScrollBarVerticDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup5ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup5ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup5ScrollBar)
                {
                    fScrollBarHorizoDup5ScrollBar = new ScrollBar("ScrollBarHorizoDup5ScrollBar", ScrollViewerPARDup4Pane);
                    fScrollBarHorizoDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup5ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text RetrieverecipieText
        {
            get
            {
                if (null == fRetrieverecipieText)
                {
                    fRetrieverecipieText = new Text("RetrieverecipieText", SigningandEncryGroup);
                    fRetrieverecipieText.UIMap.Scope = UIASeachScope.Children;
                    fRetrieverecipieText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRetrieverecipieText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailMatchCertPubKeyAttributeNoteText");
                    fRetrieverecipieText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve recipient's public key certificate from LDAP using this attribute");
                }

                return fRetrieverecipieText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group NotificationSetGroup
        {
            get
            {
                if (null == fNotificationSetGroup)
                {
                    fNotificationSetGroup = new Group("NotificationSetGroup", ScrollViewer363Pane);
                    fNotificationSetGroup.UIMap.Scope = UIASeachScope.Children;
                    fNotificationSetGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fNotificationSetGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c0bbeea0-91cc-49df-9a75-a034030c456b");
                    fNotificationSetGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Notification Settings");
                }

                return fNotificationSetGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotificationSetText
        {
            get
            {
                if (null == fNotificationSetText)
                {
                    fNotificationSetText = new Text("NotificationSetText", NotificationSetGroup);
                    fNotificationSetText.UIMap.Scope = UIASeachScope.Children;
                    fNotificationSetText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNotificationSetText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Notification Settings");
                }

                return fNotificationSetText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ConditiononWhicDup0Text
        {
            get
            {
                if (null == fConditiononWhicDup0Text)
                {
                    fConditiononWhicDup0Text = new Text("ConditiononWhicDup0Text", NotificationSetGroup);
                    fConditiononWhicDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fConditiononWhicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fConditiononWhicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailNotifyConditionLabel");
                    fConditiononWhicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Condition on Which to Notify");
                }

                return fConditiononWhicDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ConditiononWhicDup1Text
        {
            get
            {
                if (null == fConditiononWhicDup1Text)
                {
                    fConditiononWhicDup1Text = new Text("ConditiononWhicDup1Text", ConditiononWhicDup0Text);
                    fConditiononWhicDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fConditiononWhicDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fConditiononWhicDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Condition on Which to Notify");
                }

                return fConditiononWhicDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxacd621dComboBox
        {
            get
            {
                if (null == fComboBoxacd621dComboBox)
                {
                    fComboBoxacd621dComboBox = new ComboBox("ComboBoxacd621dComboBox", NotificationSetGroup);
                    fComboBoxacd621dComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxacd621dComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxacd621dComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"acd621de-1451-4d4f-b3f2-725919ae2948");
                }

                return fComboBoxacd621dComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text MethodUsedtoDelDup0Text
        {
            get
            {
                if (null == fMethodUsedtoDelDup0Text)
                {
                    fMethodUsedtoDelDup0Text = new Text("MethodUsedtoDelDup0Text", NotificationSetGroup);
                    fMethodUsedtoDelDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fMethodUsedtoDelDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fMethodUsedtoDelDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0ab11b41-4936-4363-8dc7-95e8521f994b");
                    fMethodUsedtoDelDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Method Used to Deliver Notification");
                }

                return fMethodUsedtoDelDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text MethodUsedtoDelDup1Text
        {
            get
            {
                if (null == fMethodUsedtoDelDup1Text)
                {
                    fMethodUsedtoDelDup1Text = new Text("MethodUsedtoDelDup1Text", MethodUsedtoDelDup0Text);
                    fMethodUsedtoDelDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fMethodUsedtoDelDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fMethodUsedtoDelDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Method Used to Deliver Notification");
                }

                return fMethodUsedtoDelDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox116120eComboBox
        {
            get
            {
                if (null == fComboBox116120eComboBox)
                {
                    fComboBox116120eComboBox = new ComboBox("ComboBox116120eComboBox", NotificationSetGroup);
                    fComboBox116120eComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox116120eComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox116120eComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"116120e0-2435-4a56-9a51-2e8fbb7fe5c4");
                }

                return fComboBox116120eComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotificationEmaDup0Text
        {
            get
            {
                if (null == fNotificationEmaDup0Text)
                {
                    fNotificationEmaDup0Text = new Text("NotificationEmaDup0Text", NotificationSetGroup);
                    fNotificationEmaDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fNotificationEmaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fNotificationEmaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2D6BBB16-AE0E-4416-AF05-494D22155E33");
                    fNotificationEmaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Notification E-mail Address");
                }

                return fNotificationEmaDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotificationEmaDup1Text
        {
            get
            {
                if (null == fNotificationEmaDup1Text)
                {
                    fNotificationEmaDup1Text = new Text("NotificationEmaDup1Text", NotificationEmaDup0Text);
                    fNotificationEmaDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fNotificationEmaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNotificationEmaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Notification E-mail Address");
                }

                return fNotificationEmaDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBox23C3F3A3Edit
        {
            get
            {
                if (null == fTextBox23C3F3A3Edit)
                {
                    fTextBox23C3F3A3Edit = new Edit("TextBox23C3F3A3Edit", NotificationSetGroup);
                    fTextBox23C3F3A3Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox23C3F3A3Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox23C3F3A3Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"23C3F3A3-521C-4d06-8736-30266DEBDF02");
                }

                return fTextBox23C3F3A3Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup5Pane
        {
            get
            {
                if (null == fScrollViewerPARDup5Pane)
                {
                    fScrollViewerPARDup5Pane = new Pane("ScrollViewerPARDup5Pane", TextBox23C3F3A3Edit);
                    fScrollViewerPARDup5Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup5Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup6ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup6ScrollBar)
                {
                    fScrollBarVerticDup6ScrollBar = new ScrollBar("ScrollBarVerticDup6ScrollBar", ScrollViewerPARDup5Pane);
                    fScrollBarVerticDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup6ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup6ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup6ScrollBar)
                {
                    fScrollBarHorizoDup6ScrollBar = new ScrollBar("ScrollBarHorizoDup6ScrollBar", ScrollViewerPARDup5Pane);
                    fScrollBarHorizoDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup6ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox IncludeThumbnaiCheckBox
        {
            get
            {
                if (null == fIncludeThumbnaiCheckBox)
                {
                    fIncludeThumbnaiCheckBox = new CheckBox("IncludeThumbnaiCheckBox", NotificationSetGroup);
                    fIncludeThumbnaiCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fIncludeThumbnaiCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fIncludeThumbnaiCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"652B0185-2DAE-4DA8-BE7E-2AC8CC8712C1");
                    fIncludeThumbnaiCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Include Thumbnail");
                }

                return fIncludeThumbnaiCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text IncludeThumbnaiText
        {
            get
            {
                if (null == fIncludeThumbnaiText)
                {
                    fIncludeThumbnaiText = new Text("IncludeThumbnaiText", IncludeThumbnaiCheckBox);
                    fIncludeThumbnaiText.UIMap.Scope = UIASeachScope.Children;
                    fIncludeThumbnaiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fIncludeThumbnaiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Include Thumbnail");
                }

                return fIncludeThumbnaiText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBoxEdit
        {
            get
            {
                if (null == fTextBoxEdit)
                {
                    fTextBoxEdit = new Edit("TextBoxEdit", NotificationSetGroup);
                    fTextBoxEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxEdit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup6Pane
        {
            get
            {
                if (null == fScrollViewerPARDup6Pane)
                {
                    fScrollViewerPARDup6Pane = new Pane("ScrollViewerPARDup6Pane", TextBoxEdit);
                    fScrollViewerPARDup6Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup6Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup6Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup7ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup7ScrollBar)
                {
                    fScrollBarVerticDup7ScrollBar = new ScrollBar("ScrollBarVerticDup7ScrollBar", ScrollViewerPARDup6Pane);
                    fScrollBarVerticDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup7ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup7ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup7ScrollBar)
                {
                    fScrollBarHorizoDup7ScrollBar = new ScrollBar("ScrollBarHorizoDup7ScrollBar", ScrollViewerPARDup6Pane);
                    fScrollBarHorizoDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup7ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group ScanSettingsGroGroup
        {
            get
            {
                if (null == fScanSettingsGroGroup)
                {
                    fScanSettingsGroGroup = new Group("ScanSettingsGroGroup", ScrollViewer363Pane);
                    fScanSettingsGroGroup.UIMap.Scope = UIASeachScope.Children;
                    fScanSettingsGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fScanSettingsGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3d65b8b7-683d-494d-a3d0-a1c283999bc8");
                    fScanSettingsGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan Settings");
                }

                return fScanSettingsGroGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ScanSettingsTexText
        {
            get
            {
                if (null == fScanSettingsTexText)
                {
                    fScanSettingsTexText = new Text("ScanSettingsTexText", ScanSettingsGroGroup);
                    fScanSettingsTexText.UIMap.Scope = UIASeachScope.Children;
                    fScanSettingsTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fScanSettingsTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan Settings");
                }

                return fScanSettingsTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OriginalSizeText
        {
            get
            {
                if (null == fOriginalSizeText)
                {
                    fOriginalSizeText = new Text("OriginalSizeText", ScanSettingsGroGroup);
                    fOriginalSizeText.UIMap.Scope = UIASeachScope.Children;
                    fOriginalSizeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fOriginalSizeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Original Size");
                }

                return fOriginalSizeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OriginalSizeTexText
        {
            get
            {
                if (null == fOriginalSizeTexText)
                {
                    fOriginalSizeTexText = new Text("OriginalSizeTexText", OriginalSizeText);
                    fOriginalSizeTexText.UIMap.Scope = UIASeachScope.Children;
                    fOriginalSizeTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOriginalSizeTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Original Size");
                }

                return fOriginalSizeTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox1ed9470ComboBox
        {
            get
            {
                if (null == fComboBox1ed9470ComboBox)
                {
                    fComboBox1ed9470ComboBox = new ComboBox("ComboBox1ed9470ComboBox", ScanSettingsGroGroup);
                    fComboBox1ed9470ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox1ed9470ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox1ed9470ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1ed9470f-42c1-4101-aa84-1bc245342de5");
                }

                return fComboBox1ed9470ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CustomDimensionText
        {
            get
            {
                if (null == fCustomDimensionText)
                {
                    fCustomDimensionText = new Text("CustomDimensionText", ScanSettingsGroGroup);
                    fCustomDimensionText.UIMap.Scope = UIASeachScope.Children;
                    fCustomDimensionText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fCustomDimensionText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Custom Dimension Units");
                }

                return fCustomDimensionText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox5ab7dadComboBox
        {
            get
            {
                if (null == fComboBox5ab7dadComboBox)
                {
                    fComboBox5ab7dadComboBox = new ComboBox("ComboBox5ab7dadComboBox", ScanSettingsGroGroup);
                    fComboBox5ab7dadComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox5ab7dadComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox5ab7dadComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5ab7dad2-2242-4713-be9e-0e4fe8cc421c");
                }

                return fComboBox5ab7dadComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CustomXDimensioText
        {
            get
            {
                if (null == fCustomXDimensioText)
                {
                    fCustomXDimensioText = new Text("CustomXDimensioText", ScanSettingsGroGroup);
                    fCustomXDimensioText.UIMap.Scope = UIASeachScope.Children;
                    fCustomXDimensioText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fCustomXDimensioText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Custom X Dimension");
                }

                return fCustomXDimensioText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBoxd0359958Edit
        {
            get
            {
                if (null == fTextBoxd0359958Edit)
                {
                    fTextBoxd0359958Edit = new Edit("TextBoxd0359958Edit", ScanSettingsGroGroup);
                    fTextBoxd0359958Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxd0359958Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBoxd0359958Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"d0359958-37fc-4f89-9bb9-91f34eef0092");
                }

                return fTextBoxd0359958Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CustomYDimensioText
        {
            get
            {
                if (null == fCustomYDimensioText)
                {
                    fCustomYDimensioText = new Text("CustomYDimensioText", ScanSettingsGroGroup);
                    fCustomYDimensioText.UIMap.Scope = UIASeachScope.Children;
                    fCustomYDimensioText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fCustomYDimensioText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Custom Y Dimension");
                }

                return fCustomYDimensioText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBox4212ecdeEdit
        {
            get
            {
                if (null == fTextBox4212ecdeEdit)
                {
                    fTextBox4212ecdeEdit = new Edit("TextBox4212ecdeEdit", ScanSettingsGroGroup);
                    fTextBox4212ecdeEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox4212ecdeEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox4212ecdeEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4212ecde-dd53-4263-8336-ac8f48aa1239");
                }

                return fTextBox4212ecdeEdit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OriginalSidesText
        {
            get
            {
                if (null == fOriginalSidesText)
                {
                    fOriginalSidesText = new Text("OriginalSidesText", ScanSettingsGroGroup);
                    fOriginalSidesText.UIMap.Scope = UIASeachScope.Children;
                    fOriginalSidesText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fOriginalSidesText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Original Sides");
                }

                return fOriginalSidesText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OriginalSidesTeText
        {
            get
            {
                if (null == fOriginalSidesTeText)
                {
                    fOriginalSidesTeText = new Text("OriginalSidesTeText", OriginalSidesText);
                    fOriginalSidesTeText.UIMap.Scope = UIASeachScope.Children;
                    fOriginalSidesTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOriginalSidesTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Original Sides");
                }

                return fOriginalSidesTeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox0bf3c30ComboBox
        {
            get
            {
                if (null == fComboBox0bf3c30ComboBox)
                {
                    fComboBox0bf3c30ComboBox = new ComboBox("ComboBox0bf3c30ComboBox", ScanSettingsGroGroup);
                    fComboBox0bf3c30ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox0bf3c30ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox0bf3c30ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0bf3c306-3614-499f-add2-051236bccb1a");
                }

                return fComboBox0bf3c30ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OptimizeTextPicDup0Text
        {
            get
            {
                if (null == fOptimizeTextPicDup0Text)
                {
                    fOptimizeTextPicDup0Text = new Text("OptimizeTextPicDup0Text", ScanSettingsGroGroup);
                    fOptimizeTextPicDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fOptimizeTextPicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fOptimizeTextPicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"55bb51b3-2089-40f6-9639-d44be0231890");
                    fOptimizeTextPicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Optimize Text/Picture");
                }

                return fOptimizeTextPicDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OptimizeTextPicDup1Text
        {
            get
            {
                if (null == fOptimizeTextPicDup1Text)
                {
                    fOptimizeTextPicDup1Text = new Text("OptimizeTextPicDup1Text", OptimizeTextPicDup0Text);
                    fOptimizeTextPicDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fOptimizeTextPicDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOptimizeTextPicDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Optimize Text/Picture");
                }

                return fOptimizeTextPicDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox95d815aComboBox
        {
            get
            {
                if (null == fComboBox95d815aComboBox)
                {
                    fComboBox95d815aComboBox = new ComboBox("ComboBox95d815aComboBox", ScanSettingsGroGroup);
                    fComboBox95d815aComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox95d815aComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox95d815aComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"95d815ad-7266-4a56-b83e-aa07b3358128");
                }

                return fComboBox95d815aComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OptimizeForText
        {
            get
            {
                if (null == fOptimizeForText)
                {
                    fOptimizeForText = new Text("OptimizeForText", ScanSettingsGroGroup);
                    fOptimizeForText.UIMap.Scope = UIASeachScope.Children;
                    fOptimizeForText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fOptimizeForText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Optimize For");
                }

                return fOptimizeForText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OptimizeForTextText
        {
            get
            {
                if (null == fOptimizeForTextText)
                {
                    fOptimizeForTextText = new Text("OptimizeForTextText", OptimizeForText);
                    fOptimizeForTextText.UIMap.Scope = UIASeachScope.Children;
                    fOptimizeForTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOptimizeForTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Optimize For");
                }

                return fOptimizeForTextText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox7a26f01ComboBox
        {
            get
            {
                if (null == fComboBox7a26f01ComboBox)
                {
                    fComboBox7a26f01ComboBox = new ComboBox("ComboBox7a26f01ComboBox", ScanSettingsGroGroup);
                    fComboBox7a26f01ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox7a26f01ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox7a26f01ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a26f012-c3ce-47f4-acc3-a9135e04e5e5");
                }

                return fComboBox7a26f01ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ContentOrientatDup0Text
        {
            get
            {
                if (null == fContentOrientatDup0Text)
                {
                    fContentOrientatDup0Text = new Text("ContentOrientatDup0Text", ScanSettingsGroGroup);
                    fContentOrientatDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fContentOrientatDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fContentOrientatDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Content Orientation");
                }

                return fContentOrientatDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ContentOrientatDup1Text
        {
            get
            {
                if (null == fContentOrientatDup1Text)
                {
                    fContentOrientatDup1Text = new Text("ContentOrientatDup1Text", ContentOrientatDup0Text);
                    fContentOrientatDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fContentOrientatDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fContentOrientatDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Content Orientation");
                }

                return fContentOrientatDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxbec0157ComboBox
        {
            get
            {
                if (null == fComboBoxbec0157ComboBox)
                {
                    fComboBoxbec0157ComboBox = new ComboBox("ComboBoxbec0157ComboBox", ScanSettingsGroGroup);
                    fComboBoxbec0157ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxbec0157ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxbec0157ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"bec01572-4e7d-4e3d-ac94-3cb12ff42f4a");
                }

                return fComboBoxbec0157ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text A2SidedFormatTeDup0Text
        {
            get
            {
                if (null == fA2SidedFormatTeDup0Text)
                {
                    fA2SidedFormatTeDup0Text = new Text("A2SidedFormatTeDup0Text", ScanSettingsGroGroup);
                    fA2SidedFormatTeDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fA2SidedFormatTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fA2SidedFormatTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1b324381-a18b-4d25-8c2f-d5a029e60707");
                    fA2SidedFormatTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"2-Sided Format");
                }

                return fA2SidedFormatTeDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text A2SidedFormatTeDup1Text
        {
            get
            {
                if (null == fA2SidedFormatTeDup1Text)
                {
                    fA2SidedFormatTeDup1Text = new Text("A2SidedFormatTeDup1Text", A2SidedFormatTeDup0Text);
                    fA2SidedFormatTeDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fA2SidedFormatTeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fA2SidedFormatTeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"2-Sided Format");
                }

                return fA2SidedFormatTeDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox06cb7dfComboBox
        {
            get
            {
                if (null == fComboBox06cb7dfComboBox)
                {
                    fComboBox06cb7dfComboBox = new ComboBox("ComboBox06cb7dfComboBox", ScanSettingsGroGroup);
                    fComboBox06cb7dfComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox06cb7dfComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox06cb7dfComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"06cb7df7-2e13-46ce-abbe-f4da830a74dd");
                }

                return fComboBox06cb7dfComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text BackgroundCleanDup0Text
        {
            get
            {
                if (null == fBackgroundCleanDup0Text)
                {
                    fBackgroundCleanDup0Text = new Text("BackgroundCleanDup0Text", ScanSettingsGroGroup);
                    fBackgroundCleanDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fBackgroundCleanDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fBackgroundCleanDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Background Cleanup");
                }

                return fBackgroundCleanDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text BackgroundCleanDup1Text
        {
            get
            {
                if (null == fBackgroundCleanDup1Text)
                {
                    fBackgroundCleanDup1Text = new Text("BackgroundCleanDup1Text", BackgroundCleanDup0Text);
                    fBackgroundCleanDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fBackgroundCleanDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fBackgroundCleanDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Background Cleanup");
                }

                return fBackgroundCleanDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxd01f295ComboBox
        {
            get
            {
                if (null == fComboBoxd01f295ComboBox)
                {
                    fComboBoxd01f295ComboBox = new ComboBox("ComboBoxd01f295ComboBox", ScanSettingsGroGroup);
                    fComboBoxd01f295ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxd01f295ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxd01f295ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"d01f2959-8ed0-42fe-9846-dfec10a0dbcd");
                }

                return fComboBoxd01f295ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DarknessText
        {
            get
            {
                if (null == fDarknessText)
                {
                    fDarknessText = new Text("DarknessText", ScanSettingsGroGroup);
                    fDarknessText.UIMap.Scope = UIASeachScope.Children;
                    fDarknessText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDarknessText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Darkness");
                }

                return fDarknessText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DarknessTextBloText
        {
            get
            {
                if (null == fDarknessTextBloText)
                {
                    fDarknessTextBloText = new Text("DarknessTextBloText", DarknessText);
                    fDarknessTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fDarknessTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDarknessTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Darkness");
                }

                return fDarknessTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxd4a708cComboBox
        {
            get
            {
                if (null == fComboBoxd4a708cComboBox)
                {
                    fComboBoxd4a708cComboBox = new ComboBox("ComboBoxd4a708cComboBox", ScanSettingsGroGroup);
                    fComboBoxd4a708cComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxd4a708cComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxd4a708cComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"d4a708cc-e191-4e85-ba37-d913c1bdd720");
                }

                return fComboBoxd4a708cComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ContrastText
        {
            get
            {
                if (null == fContrastText)
                {
                    fContrastText = new Text("ContrastText", ScanSettingsGroGroup);
                    fContrastText.UIMap.Scope = UIASeachScope.Children;
                    fContrastText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fContrastText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Contrast");
                }

                return fContrastText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ContrastTextBloText
        {
            get
            {
                if (null == fContrastTextBloText)
                {
                    fContrastTextBloText = new Text("ContrastTextBloText", ContrastText);
                    fContrastTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fContrastTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fContrastTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Contrast");
                }

                return fContrastTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxd702915ComboBox
        {
            get
            {
                if (null == fComboBoxd702915ComboBox)
                {
                    fComboBoxd702915ComboBox = new ComboBox("ComboBoxd702915ComboBox", ScanSettingsGroGroup);
                    fComboBoxd702915ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxd702915ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxd702915ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"d702915c-c5ca-469d-b34b-94b2b40f3f10");
                }

                return fComboBoxd702915ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SharpnessText
        {
            get
            {
                if (null == fSharpnessText)
                {
                    fSharpnessText = new Text("SharpnessText", ScanSettingsGroGroup);
                    fSharpnessText.UIMap.Scope = UIASeachScope.Children;
                    fSharpnessText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSharpnessText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sharpness");
                }

                return fSharpnessText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SharpnessTextBlText
        {
            get
            {
                if (null == fSharpnessTextBlText)
                {
                    fSharpnessTextBlText = new Text("SharpnessTextBlText", SharpnessText);
                    fSharpnessTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fSharpnessTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSharpnessTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sharpness");
                }

                return fSharpnessTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox8bdd792ComboBox
        {
            get
            {
                if (null == fComboBox8bdd792ComboBox)
                {
                    fComboBox8bdd792ComboBox = new ComboBox("ComboBox8bdd792ComboBox", ScanSettingsGroGroup);
                    fComboBox8bdd792ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox8bdd792ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox8bdd792ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8bdd792b-f60c-4430-89c3-9f5230c37ef4");
                }

                return fComboBox8bdd792ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ColorDropoutText
        {
            get
            {
                if (null == fColorDropoutText)
                {
                    fColorDropoutText = new Text("ColorDropoutText", ScanSettingsGroGroup);
                    fColorDropoutText.UIMap.Scope = UIASeachScope.Children;
                    fColorDropoutText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fColorDropoutText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Color Dropout");
                }

                return fColorDropoutText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox1b66d63ComboBox
        {
            get
            {
                if (null == fComboBox1b66d63ComboBox)
                {
                    fComboBox1b66d63ComboBox = new ComboBox("ComboBox1b66d63ComboBox", ScanSettingsGroGroup);
                    fComboBox1b66d63ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox1b66d63ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox1b66d63ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1b66d630-c348-4cae-b435-4dd088fa31f1");
                }

                return fComboBox1b66d63ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ImagePreviewText
        {
            get
            {
                if (null == fImagePreviewText)
                {
                    fImagePreviewText = new Text("ImagePreviewText", ScanSettingsGroGroup);
                    fImagePreviewText.UIMap.Scope = UIASeachScope.Children;
                    fImagePreviewText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fImagePreviewText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Image Preview");
                }

                return fImagePreviewText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ImagePreviewTexText
        {
            get
            {
                if (null == fImagePreviewTexText)
                {
                    fImagePreviewTexText = new Text("ImagePreviewTexText", ImagePreviewText);
                    fImagePreviewTexText.UIMap.Scope = UIASeachScope.Children;
                    fImagePreviewTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fImagePreviewTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Image Preview");
                }

                return fImagePreviewTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxb0d09f3ComboBox
        {
            get
            {
                if (null == fComboBoxb0d09f3ComboBox)
                {
                    fComboBoxb0d09f3ComboBox = new ComboBox("ComboBoxb0d09f3ComboBox", ScanSettingsGroGroup);
                    fComboBoxb0d09f3ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxb0d09f3ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxb0d09f3ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b0d09f36-9ba3-4230-9019-4b889e85845d");
                }

                return fComboBoxb0d09f3ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CroppingOptionsDup0Text
        {
            get
            {
                if (null == fCroppingOptionsDup0Text)
                {
                    fCroppingOptionsDup0Text = new Text("CroppingOptionsDup0Text", ScanSettingsGroGroup);
                    fCroppingOptionsDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fCroppingOptionsDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fCroppingOptionsDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cropping Options");
                }

                return fCroppingOptionsDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CroppingOptionsDup1Text
        {
            get
            {
                if (null == fCroppingOptionsDup1Text)
                {
                    fCroppingOptionsDup1Text = new Text("CroppingOptionsDup1Text", CroppingOptionsDup0Text);
                    fCroppingOptionsDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fCroppingOptionsDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCroppingOptionsDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cropping Options");
                }

                return fCroppingOptionsDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox791C2F7ComboBox
        {
            get
            {
                if (null == fComboBox791C2F7ComboBox)
                {
                    fComboBox791C2F7ComboBox = new ComboBox("ComboBox791C2F7ComboBox", ScanSettingsGroGroup);
                    fComboBox791C2F7ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox791C2F7ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox791C2F7ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"791C2F798-0642-401f-9845-469A31E56D75");
                }

                return fComboBox791C2F7ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox JobBuildCheckBoCheckBox
        {
            get
            {
                if (null == fJobBuildCheckBoCheckBox)
                {
                    fJobBuildCheckBoCheckBox = new CheckBox("JobBuildCheckBoCheckBox", ScanSettingsGroGroup);
                    fJobBuildCheckBoCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fJobBuildCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fJobBuildCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4a56e059-d147-4144-994a-6b57b76633f8");
                    fJobBuildCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Job Build");
                }

                return fJobBuildCheckBoCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text JobBuildTextBloText
        {
            get
            {
                if (null == fJobBuildTextBloText)
                {
                    fJobBuildTextBloText = new Text("JobBuildTextBloText", JobBuildCheckBoCheckBox);
                    fJobBuildTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fJobBuildTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fJobBuildTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Job Build");
                }

                return fJobBuildTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox AutomaticToneChCheckBox
        {
            get
            {
                if (null == fAutomaticToneChCheckBox)
                {
                    fAutomaticToneChCheckBox = new CheckBox("AutomaticToneChCheckBox", ScanSettingsGroGroup);
                    fAutomaticToneChCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fAutomaticToneChCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fAutomaticToneChCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7F9D27BA-2D57-42BD-848C-C65A75019A78");
                    fAutomaticToneChCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Automatic Tone");
                }

                return fAutomaticToneChCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CheckingthisboxText
        {
            get
            {
                if (null == fCheckingthisboxText)
                {
                    fCheckingthisboxText = new Text("CheckingthisboxText", ScanSettingsGroGroup);
                    fCheckingthisboxText.UIMap.Scope = UIASeachScope.Children;
                    fCheckingthisboxText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fCheckingthisboxText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1AC885A6-A0FF-48FE-81F1-AFE9259F2F78");
                    fCheckingthisboxText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Checking this box sets the Darkness, Contrast, and Background Cleanup settings automatically.");
                }

                return fCheckingthisboxText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox AutomaticallyStCheckBox
        {
            get
            {
                if (null == fAutomaticallyStCheckBox)
                {
                    fAutomaticallyStCheckBox = new CheckBox("AutomaticallyStCheckBox", ScanSettingsGroGroup);
                    fAutomaticallyStCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fAutomaticallyStCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fAutomaticallyStCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"46158777-745E-4E88-A857-5F4D8399858F");
                    fAutomaticallyStCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Automatically Straighten");
                }

                return fAutomaticallyStCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text WhenenabledpageText
        {
            get
            {
                if (null == fWhenenabledpageText)
                {
                    fWhenenabledpageText = new Text("WhenenabledpageText", ScanSettingsGroGroup);
                    fWhenenabledpageText.UIMap.Scope = UIASeachScope.Children;
                    fWhenenabledpageText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fWhenenabledpageText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"When enabled, pages that are skewed during scanning will automatically be straightened.");
                }

                return fWhenenabledpageText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox MultifeedDetectCheckBox
        {
            get
            {
                if (null == fMultifeedDetectCheckBox)
                {
                    fMultifeedDetectCheckBox = new CheckBox("MultifeedDetectCheckBox", ScanSettingsGroGroup);
                    fMultifeedDetectCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fMultifeedDetectCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fMultifeedDetectCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"34ac1483-dde3-4a97-824a-f35985efb3b2");
                    fMultifeedDetectCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Multi-feed Detection");
                }

                return fMultifeedDetectCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text MultifeedDetectText
        {
            get
            {
                if (null == fMultifeedDetectText)
                {
                    fMultifeedDetectText = new Text("MultifeedDetectText", MultifeedDetectCheckBox);
                    fMultifeedDetectText.UIMap.Scope = UIASeachScope.Children;
                    fMultifeedDetectText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fMultifeedDetectText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Multi-feed Detection");
                }

                return fMultifeedDetectText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom EraseEdgeUserCoCustom
        {
            get
            {
                if (null == fEraseEdgeUserCoCustom)
                {
                    fEraseEdgeUserCoCustom = new Custom("EraseEdgeUserCoCustom", ScanSettingsGroGroup);
                    fEraseEdgeUserCoCustom.UIMap.Scope = UIASeachScope.Children;
                    fEraseEdgeUserCoCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"EraseEdgeUserControl");
                    fEraseEdgeUserCoCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailEdgeEraseUserControl");
                }

                return fEraseEdgeUserCoCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group EraseEdgesGroupGroup
        {
            get
            {
                if (null == fEraseEdgesGroupGroup)
                {
                    fEraseEdgesGroupGroup = new Group("EraseEdgesGroupGroup", EraseEdgeUserCoCustom);
                    fEraseEdgesGroupGroup.UIMap.Scope = UIASeachScope.Children;
                    fEraseEdgesGroupGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fEraseEdgesGroupGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"95264138-6d30-4903-8cb8-efaadf93c29c");
                    fEraseEdgesGroupGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Erase Edges");
                }

                return fEraseEdgesGroupGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EraseEdgesTextBDup0Text
        {
            get
            {
                if (null == fEraseEdgesTextBDup0Text)
                {
                    fEraseEdgesTextBDup0Text = new Text("EraseEdgesTextBDup0Text", EraseEdgesGroupGroup);
                    fEraseEdgesTextBDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fEraseEdgesTextBDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEraseEdgesTextBDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Erase Edges");
                }

                return fEraseEdgesTextBDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox EraseEdgesCheckCheckBox
        {
            get
            {
                if (null == fEraseEdgesCheckCheckBox)
                {
                    fEraseEdgesCheckCheckBox = new CheckBox("EraseEdgesCheckCheckBox", EraseEdgesGroupGroup);
                    fEraseEdgesCheckCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEraseEdgesCheckCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fEraseEdgesCheckCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22ecd23b-a89a-4f67-9666-ea42be70c215");
                    fEraseEdgesCheckCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Erase Edges");
                }

                return fEraseEdgesCheckCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EraseEdgesTextBDup1Text
        {
            get
            {
                if (null == fEraseEdgesTextBDup1Text)
                {
                    fEraseEdgesTextBDup1Text = new Text("EraseEdgesTextBDup1Text", EraseEdgesCheckCheckBox);
                    fEraseEdgesTextBDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fEraseEdgesTextBDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEraseEdgesTextBDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Erase Edges");
                }

                return fEraseEdgesTextBDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox UseinchesCheckBCheckBox
        {
            get
            {
                if (null == fUseinchesCheckBCheckBox)
                {
                    fUseinchesCheckBCheckBox = new CheckBox("UseinchesCheckBCheckBox", EraseEdgesGroupGroup);
                    fUseinchesCheckBCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUseinchesCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fUseinchesCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"29e3a4d9-b313-4c75-a684-d0343eacd5bf");
                    fUseinchesCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use inches");
                }

                return fUseinchesCheckBCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group FrontsideeraseGGroup
        {
            get
            {
                if (null == fFrontsideeraseGGroup)
                {
                    fFrontsideeraseGGroup = new Group("FrontsideeraseGGroup", EraseEdgesGroupGroup);
                    fFrontsideeraseGGroup.UIMap.Scope = UIASeachScope.Children;
                    fFrontsideeraseGGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fFrontsideeraseGGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3233E272-F4BC-438c-B5FB-D92087D3A76D");
                    fFrontsideeraseGGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Front side erase");
                }

                return fFrontsideeraseGGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group BacksideeraseGrGroup
        {
            get
            {
                if (null == fBacksideeraseGrGroup)
                {
                    fBacksideeraseGrGroup = new Group("BacksideeraseGrGroup", EraseEdgesGroupGroup);
                    fBacksideeraseGrGroup.UIMap.Scope = UIASeachScope.Children;
                    fBacksideeraseGrGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fBacksideeraseGrGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DE77E0C4-69F4-4113-B581-645AB48F850D");
                    fBacksideeraseGrGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back side erase");
                }

                return fBacksideeraseGrGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group FileSettingsGroGroup
        {
            get
            {
                if (null == fFileSettingsGroGroup)
                {
                    fFileSettingsGroGroup = new Group("FileSettingsGroGroup", ScrollViewer363Pane);
                    fFileSettingsGroGroup.UIMap.Scope = UIASeachScope.Children;
                    fFileSettingsGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fFileSettingsGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"da63c8b5-523f-431a-ab36-e2a6d3ef8139");
                    fFileSettingsGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Settings");
                }

                return fFileSettingsGroGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FileSettingsTexText
        {
            get
            {
                if (null == fFileSettingsTexText)
                {
                    fFileSettingsTexText = new Text("FileSettingsTexText", FileSettingsGroGroup);
                    fFileSettingsTexText.UIMap.Scope = UIASeachScope.Children;
                    fFileSettingsTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFileSettingsTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Settings");
                }

                return fFileSettingsTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FileNamePrefixTDup0Text
        {
            get
            {
                if (null == fFileNamePrefixTDup0Text)
                {
                    fFileNamePrefixTDup0Text = new Text("FileNamePrefixTDup0Text", FileSettingsGroGroup);
                    fFileNamePrefixTDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fFileNamePrefixTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFileNamePrefixTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7cb1750b-6c9e-4ca5-9c06-f58959b19b5e");
                    fFileNamePrefixTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Name Prefix");
                }

                return fFileNamePrefixTDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FileNamePrefixTDup1Text
        {
            get
            {
                if (null == fFileNamePrefixTDup1Text)
                {
                    fFileNamePrefixTDup1Text = new Text("FileNamePrefixTDup1Text", FileNamePrefixTDup0Text);
                    fFileNamePrefixTDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fFileNamePrefixTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFileNamePrefixTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Name Prefix");
                }

                return fFileNamePrefixTDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBox354da417Edit
        {
            get
            {
                if (null == fTextBox354da417Edit)
                {
                    fTextBox354da417Edit = new Edit("TextBox354da417Edit", FileSettingsGroGroup);
                    fTextBox354da417Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox354da417Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox354da417Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"354da417-6697-46c2-8a3d-b1bd7ff39dca");
                }

                return fTextBox354da417Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup7Pane
        {
            get
            {
                if (null == fScrollViewerPARDup7Pane)
                {
                    fScrollViewerPARDup7Pane = new Pane("ScrollViewerPARDup7Pane", TextBox354da417Edit);
                    fScrollViewerPARDup7Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup7Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup7Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup7Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup8ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup8ScrollBar)
                {
                    fScrollBarVerticDup8ScrollBar = new ScrollBar("ScrollBarVerticDup8ScrollBar", ScrollViewerPARDup7Pane);
                    fScrollBarVerticDup8ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup8ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup8ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup8ScrollBar)
                {
                    fScrollBarHorizoDup8ScrollBar = new ScrollBar("ScrollBarHorizoDup8ScrollBar", ScrollViewerPARDup7Pane);
                    fScrollBarHorizoDup8ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup8ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup8ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group Expander51d258dGroup
        {
            get
            {
                if (null == fExpander51d258dGroup)
                {
                    fExpander51d258dGroup = new Group("Expander51d258dGroup", FileSettingsGroGroup);
                    fExpander51d258dGroup.UIMap.Scope = UIASeachScope.Children;
                    fExpander51d258dGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                    fExpander51d258dGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"51d258de-9728-4efe-acdf-7430f639223f");
                }

                return fExpander51d258dGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ButtonHeaderSitDup0Button
        {
            get
            {
                if (null == fButtonHeaderSitDup0Button)
                {
                    fButtonHeaderSitDup0Button = new Button("ButtonHeaderSitDup0Button", Expander51d258dGroup);
                    fButtonHeaderSitDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonHeaderSitDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonHeaderSitDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                }

                return fButtonHeaderSitDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotusereditableDup0Text
        {
            get
            {
                if (null == fNotusereditableDup0Text)
                {
                    fNotusereditableDup0Text = new Text("NotusereditableDup0Text", FileSettingsGroGroup);
                    fNotusereditableDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fNotusereditableDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fNotusereditableDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"bb72cd29-0816-4b6b-a360-a0193dc6df68");
                    fNotusereditableDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Not user editable");
                }

                return fNotusereditableDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotusereditableDup1Text
        {
            get
            {
                if (null == fNotusereditableDup1Text)
                {
                    fNotusereditableDup1Text = new Text("NotusereditableDup1Text", NotusereditableDup0Text);
                    fNotusereditableDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fNotusereditableDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNotusereditableDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Not user editable");
                }

                return fNotusereditableDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultFileNameDup0Text
        {
            get
            {
                if (null == fDefaultFileNameDup0Text)
                {
                    fDefaultFileNameDup0Text = new Text("DefaultFileNameDup0Text", FileSettingsGroGroup);
                    fDefaultFileNameDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultFileNameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDefaultFileNameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"173b4f29-ff03-4f11-b82a-cb843388125a");
                    fDefaultFileNameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default File Name");
                }

                return fDefaultFileNameDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultFileNameDup1Text
        {
            get
            {
                if (null == fDefaultFileNameDup1Text)
                {
                    fDefaultFileNameDup1Text = new Text("DefaultFileNameDup1Text", DefaultFileNameDup0Text);
                    fDefaultFileNameDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultFileNameDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDefaultFileNameDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default File Name");
                }

                return fDefaultFileNameDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBoxb0f48232Edit
        {
            get
            {
                if (null == fTextBoxb0f48232Edit)
                {
                    fTextBoxb0f48232Edit = new Edit("TextBoxb0f48232Edit", FileSettingsGroGroup);
                    fTextBoxb0f48232Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxb0f48232Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBoxb0f48232Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b0f48232-4c67-4257-beb7-ddb64a0a0d4d");
                }

                return fTextBoxb0f48232Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup8Pane
        {
            get
            {
                if (null == fScrollViewerPARDup8Pane)
                {
                    fScrollViewerPARDup8Pane = new Pane("ScrollViewerPARDup8Pane", TextBoxb0f48232Edit);
                    fScrollViewerPARDup8Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup8Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup8Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup8Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup9ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup9ScrollBar)
                {
                    fScrollBarVerticDup9ScrollBar = new ScrollBar("ScrollBarVerticDup9ScrollBar", ScrollViewerPARDup8Pane);
                    fScrollBarVerticDup9ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup9ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup9ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup9ScrollBar)
                {
                    fScrollBarHorizoDup9ScrollBar = new ScrollBar("ScrollBarHorizoDup9ScrollBar", ScrollViewerPARDup8Pane);
                    fScrollBarHorizoDup9ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup9ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup9ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox UsereditableCheDup8CheckBox
        {
            get
            {
                if (null == fUsereditableCheDup8CheckBox)
                {
                    fUsereditableCheDup8CheckBox = new CheckBox("UsereditableCheDup8CheckBox", FileSettingsGroGroup);
                    fUsereditableCheDup8CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableCheDup8CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fUsereditableCheDup8CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c8cfc858-80f0-47a2-aa18-f2511c0e017a");
                    fUsereditableCheDup8CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableCheDup8CheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text UsereditableTexDup8Text
        {
            get
            {
                if (null == fUsereditableTexDup8Text)
                {
                    fUsereditableTexDup8Text = new Text("UsereditableTexDup8Text", UsereditableCheDup8CheckBox);
                    fUsereditableTexDup8Text.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableTexDup8Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUsereditableTexDup8Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableTexDup8Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ExampleText3888Text
        {
            get
            {
                if (null == fExampleText3888Text)
                {
                    fExampleText3888Text = new Text("ExampleText3888Text", FileSettingsGroGroup);
                    fExampleText3888Text.UIMap.Scope = UIASeachScope.Children;
                    fExampleText3888Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fExampleText3888Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3888dad2-d262-456b-8f8f-bdc295aa7027");
                    fExampleText3888Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Example");
                }

                return fExampleText3888Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ExampleTextBlocText
        {
            get
            {
                if (null == fExampleTextBlocText)
                {
                    fExampleTextBlocText = new Text("ExampleTextBlocText", ExampleText3888Text);
                    fExampleTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fExampleTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fExampleTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Example");
                }

                return fExampleTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBox2adca00aEdit
        {
            get
            {
                if (null == fTextBox2adca00aEdit)
                {
                    fTextBox2adca00aEdit = new Edit("TextBox2adca00aEdit", FileSettingsGroGroup);
                    fTextBox2adca00aEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox2adca00aEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox2adca00aEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2adca00a-8bf9-4b94-83d9-6f4adb819dd7");
                }

                return fTextBox2adca00aEdit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup9Pane
        {
            get
            {
                if (null == fScrollViewerPARDup9Pane)
                {
                    fScrollViewerPARDup9Pane = new Pane("ScrollViewerPARDup9Pane", TextBox2adca00aEdit);
                    fScrollViewerPARDup9Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup9Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup9Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup9Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup10ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup10ScrollBar)
                {
                    fScrollBarVerticDup10ScrollBar = new ScrollBar("ScrollBarVerticDup10ScrollBar", ScrollViewerPARDup9Pane);
                    fScrollBarVerticDup10ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup10ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup10ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup10ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup10ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup10ScrollBar)
                {
                    fScrollBarHorizoDup10ScrollBar = new ScrollBar("ScrollBarHorizoDup10ScrollBar", ScrollViewerPARDup9Pane);
                    fScrollBarHorizoDup10ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup10ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup10ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup10ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FileNameSuffixTDup0Text
        {
            get
            {
                if (null == fFileNameSuffixTDup0Text)
                {
                    fFileNameSuffixTDup0Text = new Text("FileNameSuffixTDup0Text", FileSettingsGroGroup);
                    fFileNameSuffixTDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fFileNameSuffixTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFileNameSuffixTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"bd367803-7ff2-464b-a290-fee281398050");
                    fFileNameSuffixTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Name Suffix");
                }

                return fFileNameSuffixTDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FileNameSuffixTDup1Text
        {
            get
            {
                if (null == fFileNameSuffixTDup1Text)
                {
                    fFileNameSuffixTDup1Text = new Text("FileNameSuffixTDup1Text", FileNameSuffixTDup0Text);
                    fFileNameSuffixTDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fFileNameSuffixTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFileNameSuffixTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Name Suffix");
                }

                return fFileNameSuffixTDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBox349c75d4Edit
        {
            get
            {
                if (null == fTextBox349c75d4Edit)
                {
                    fTextBox349c75d4Edit = new Edit("TextBox349c75d4Edit", FileSettingsGroGroup);
                    fTextBox349c75d4Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox349c75d4Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox349c75d4Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"349c75d4-c047-4246-b4bd-9d3191555732");
                }

                return fTextBox349c75d4Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup10Pane
        {
            get
            {
                if (null == fScrollViewerPARDup10Pane)
                {
                    fScrollViewerPARDup10Pane = new Pane("ScrollViewerPARDup10Pane", TextBox349c75d4Edit);
                    fScrollViewerPARDup10Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup10Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup10Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup10Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup11ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup11ScrollBar)
                {
                    fScrollBarVerticDup11ScrollBar = new ScrollBar("ScrollBarVerticDup11ScrollBar", ScrollViewerPARDup10Pane);
                    fScrollBarVerticDup11ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup11ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup11ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup11ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup11ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup11ScrollBar)
                {
                    fScrollBarHorizoDup11ScrollBar = new ScrollBar("ScrollBarHorizoDup11ScrollBar", ScrollViewerPARDup10Pane);
                    fScrollBarHorizoDup11ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup11ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup11ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup11ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group Expander2b78525Group
        {
            get
            {
                if (null == fExpander2b78525Group)
                {
                    fExpander2b78525Group = new Group("Expander2b78525Group", FileSettingsGroGroup);
                    fExpander2b78525Group.UIMap.Scope = UIASeachScope.Children;
                    fExpander2b78525Group.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                    fExpander2b78525Group.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2b785255-457a-4c60-ac98-0c9e8e8a854f");
                }

                return fExpander2b78525Group;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ButtonHeaderSitDup1Button
        {
            get
            {
                if (null == fButtonHeaderSitDup1Button)
                {
                    fButtonHeaderSitDup1Button = new Button("ButtonHeaderSitDup1Button", Expander2b78525Group);
                    fButtonHeaderSitDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonHeaderSitDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonHeaderSitDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                }

                return fButtonHeaderSitDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotusereditableDup2Text
        {
            get
            {
                if (null == fNotusereditableDup2Text)
                {
                    fNotusereditableDup2Text = new Text("NotusereditableDup2Text", FileSettingsGroGroup);
                    fNotusereditableDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fNotusereditableDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fNotusereditableDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"167965d4-2d1f-4c7c-9820-f62275e0f96b");
                    fNotusereditableDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Not user editable");
                }

                return fNotusereditableDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotusereditableDup3Text
        {
            get
            {
                if (null == fNotusereditableDup3Text)
                {
                    fNotusereditableDup3Text = new Text("NotusereditableDup3Text", NotusereditableDup2Text);
                    fNotusereditableDup3Text.UIMap.Scope = UIASeachScope.Children;
                    fNotusereditableDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNotusereditableDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Not user editable");
                }

                return fNotusereditableDup3Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultColorPreDup0Text
        {
            get
            {
                if (null == fDefaultColorPreDup0Text)
                {
                    fDefaultColorPreDup0Text = new Text("DefaultColorPreDup0Text", FileSettingsGroGroup);
                    fDefaultColorPreDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultColorPreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDefaultColorPreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a19b4f05-f965-44b1-94b9-075dffefc97b");
                    fDefaultColorPreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Color Preference");
                }

                return fDefaultColorPreDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultColorPreDup1Text
        {
            get
            {
                if (null == fDefaultColorPreDup1Text)
                {
                    fDefaultColorPreDup1Text = new Text("DefaultColorPreDup1Text", DefaultColorPreDup0Text);
                    fDefaultColorPreDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultColorPreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDefaultColorPreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Color Preference");
                }

                return fDefaultColorPreDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox8936adcComboBox
        {
            get
            {
                if (null == fComboBox8936adcComboBox)
                {
                    fComboBox8936adcComboBox = new ComboBox("ComboBox8936adcComboBox", FileSettingsGroGroup);
                    fComboBox8936adcComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox8936adcComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox8936adcComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8936adc6-b03a-4517-a645-9edc59172449");
                }

                return fComboBox8936adcComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox ScaninBlackwhenCheckBox
        {
            get
            {
                if (null == fScaninBlackwhenCheckBox)
                {
                    fScaninBlackwhenCheckBox = new CheckBox("ScaninBlackwhenCheckBox", FileSettingsGroGroup);
                    fScaninBlackwhenCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fScaninBlackwhenCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fScaninBlackwhenCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9724A6E6-A2EC-4607-9DE4-81C6C42F3020");
                    fScaninBlackwhenCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan in Black when color is not detected");
                }

                return fScaninBlackwhenCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ScaninBlackwhenText
        {
            get
            {
                if (null == fScaninBlackwhenText)
                {
                    fScaninBlackwhenText = new Text("ScaninBlackwhenText", ScaninBlackwhenCheckBox);
                    fScaninBlackwhenText.UIMap.Scope = UIASeachScope.Children;
                    fScaninBlackwhenText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fScaninBlackwhenText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan in Black when color is not detected");
                }

                return fScaninBlackwhenText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text InAutomaticallyText
        {
            get
            {
                if (null == fInAutomaticallyText)
                {
                    fInAutomaticallyText = new Text("InAutomaticallyText", FileSettingsGroGroup);
                    fInAutomaticallyText.UIMap.Scope = UIASeachScope.Children;
                    fInAutomaticallyText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fInAutomaticallyText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"In Automatically detect mode, mono pages will be scanned in black-and-white. If disabled, or if current file settings do not allow black scanning, then pages will be scanned in grayscale");
                }

                return fInAutomaticallyText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultOutputQuDup0Text
        {
            get
            {
                if (null == fDefaultOutputQuDup0Text)
                {
                    fDefaultOutputQuDup0Text = new Text("DefaultOutputQuDup0Text", FileSettingsGroGroup);
                    fDefaultOutputQuDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultOutputQuDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDefaultOutputQuDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"56596687-0fd6-4da9-8941-5606c6760fb4");
                    fDefaultOutputQuDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Output Quality");
                }

                return fDefaultOutputQuDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultOutputQuDup1Text
        {
            get
            {
                if (null == fDefaultOutputQuDup1Text)
                {
                    fDefaultOutputQuDup1Text = new Text("DefaultOutputQuDup1Text", DefaultOutputQuDup0Text);
                    fDefaultOutputQuDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultOutputQuDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDefaultOutputQuDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Output Quality");
                }

                return fDefaultOutputQuDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxb02f84eComboBox
        {
            get
            {
                if (null == fComboBoxb02f84eComboBox)
                {
                    fComboBoxb02f84eComboBox = new ComboBox("ComboBoxb02f84eComboBox", FileSettingsGroGroup);
                    fComboBoxb02f84eComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxb02f84eComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxb02f84eComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b02f84ea-7e95-4a91-bf70-e3e747b18986");
                }

                return fComboBoxb02f84eComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox EnableOCRCheckBCheckBox
        {
            get
            {
                if (null == fEnableOCRCheckBCheckBox)
                {
                    fEnableOCRCheckBCheckBox = new CheckBox("EnableOCRCheckBCheckBox", FileSettingsGroGroup);
                    fEnableOCRCheckBCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEnableOCRCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fEnableOCRCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7A02F87E-F22E-4D25-BC60-30E75795A228");
                    fEnableOCRCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable OCR");
                }

                return fEnableOCRCheckBCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EnableOCRTextBlText
        {
            get
            {
                if (null == fEnableOCRTextBlText)
                {
                    fEnableOCRTextBlText = new Text("EnableOCRTextBlText", EnableOCRCheckBCheckBox);
                    fEnableOCRTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fEnableOCRTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEnableOCRTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable OCR");
                }

                return fEnableOCRTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AllowusertospecText
        {
            get
            {
                if (null == fAllowusertospecText)
                {
                    fAllowusertospecText = new Text("AllowusertospecText", FileSettingsGroGroup);
                    fAllowusertospecText.UIMap.Scope = UIASeachScope.Children;
                    fAllowusertospecText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAllowusertospecText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"691FC84F-79D6-4025-9185-3479EFB07DFA");
                    fAllowusertospecText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Allow user to specify OCR type");
                }

                return fAllowusertospecText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultResolutiDup0Text
        {
            get
            {
                if (null == fDefaultResolutiDup0Text)
                {
                    fDefaultResolutiDup0Text = new Text("DefaultResolutiDup0Text", FileSettingsGroGroup);
                    fDefaultResolutiDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultResolutiDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDefaultResolutiDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"65062bc6-e182-41fa-8858-dd92ebdd9a92");
                    fDefaultResolutiDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Resolution");
                }

                return fDefaultResolutiDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultResolutiDup1Text
        {
            get
            {
                if (null == fDefaultResolutiDup1Text)
                {
                    fDefaultResolutiDup1Text = new Text("DefaultResolutiDup1Text", DefaultResolutiDup0Text);
                    fDefaultResolutiDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultResolutiDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDefaultResolutiDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Resolution");
                }

                return fDefaultResolutiDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxfea42eaComboBox
        {
            get
            {
                if (null == fComboBoxfea42eaComboBox)
                {
                    fComboBoxfea42eaComboBox = new ComboBox("ComboBoxfea42eaComboBox", FileSettingsGroGroup);
                    fComboBoxfea42eaComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxfea42eaComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxfea42eaComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"fea42eab-93cc-427f-abdc-2196a67355d9");
                }

                return fComboBoxfea42eaComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CompressionTextDup0Text
        {
            get
            {
                if (null == fCompressionTextDup0Text)
                {
                    fCompressionTextDup0Text = new Text("CompressionTextDup0Text", FileSettingsGroGroup);
                    fCompressionTextDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fCompressionTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fCompressionTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f446ccb5-1958-4106-bf0d-7f197d4b452e");
                    fCompressionTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Compression");
                }

                return fCompressionTextDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CompressionTextDup1Text
        {
            get
            {
                if (null == fCompressionTextDup1Text)
                {
                    fCompressionTextDup1Text = new Text("CompressionTextDup1Text", CompressionTextDup0Text);
                    fCompressionTextDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fCompressionTextDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCompressionTextDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Compression");
                }

                return fCompressionTextDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox7dbab3fComboBox
        {
            get
            {
                if (null == fComboBox7dbab3fComboBox)
                {
                    fComboBox7dbab3fComboBox = new ComboBox("ComboBox7dbab3fComboBox", FileSettingsGroGroup);
                    fComboBox7dbab3fComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox7dbab3fComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox7dbab3fComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7dbab3f8-a24d-4928-bb53-2e31ccdad302");
                }

                return fComboBox7dbab3fComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultFileTypeDup0Text
        {
            get
            {
                if (null == fDefaultFileTypeDup0Text)
                {
                    fDefaultFileTypeDup0Text = new Text("DefaultFileTypeDup0Text", FileSettingsGroGroup);
                    fDefaultFileTypeDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultFileTypeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDefaultFileTypeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"351e2ca1-333d-4ca4-a229-213abf45f0f8");
                    fDefaultFileTypeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default File Type");
                }

                return fDefaultFileTypeDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultFileTypeDup1Text
        {
            get
            {
                if (null == fDefaultFileTypeDup1Text)
                {
                    fDefaultFileTypeDup1Text = new Text("DefaultFileTypeDup1Text", DefaultFileTypeDup0Text);
                    fDefaultFileTypeDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultFileTypeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDefaultFileTypeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default File Type");
                }

                return fDefaultFileTypeDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox11bcd8aComboBox
        {
            get
            {
                if (null == fComboBox11bcd8aComboBox)
                {
                    fComboBox11bcd8aComboBox = new ComboBox("ComboBox11bcd8aComboBox", FileSettingsGroGroup);
                    fComboBox11bcd8aComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox11bcd8aComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox11bcd8aComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"11bcd8aa-9df3-490c-a0a5-54e3ac603dbe");
                }

                return fComboBox11bcd8aComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text BlackTIFFCompreDup0Text
        {
            get
            {
                if (null == fBlackTIFFCompreDup0Text)
                {
                    fBlackTIFFCompreDup0Text = new Text("BlackTIFFCompreDup0Text", FileSettingsGroGroup);
                    fBlackTIFFCompreDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fBlackTIFFCompreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fBlackTIFFCompreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"864e721c-1b10-425b-be61-0e6d78b22c74");
                    fBlackTIFFCompreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Black TIFF Compression");
                }

                return fBlackTIFFCompreDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text BlackTIFFCompreDup1Text
        {
            get
            {
                if (null == fBlackTIFFCompreDup1Text)
                {
                    fBlackTIFFCompreDup1Text = new Text("BlackTIFFCompreDup1Text", BlackTIFFCompreDup0Text);
                    fBlackTIFFCompreDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fBlackTIFFCompreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fBlackTIFFCompreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Black TIFF Compression");
                }

                return fBlackTIFFCompreDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxf57ad72ComboBox
        {
            get
            {
                if (null == fComboBoxf57ad72ComboBox)
                {
                    fComboBoxf57ad72ComboBox = new ComboBox("ComboBoxf57ad72ComboBox", FileSettingsGroGroup);
                    fComboBoxf57ad72ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxf57ad72ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxf57ad72ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f57ad72b-4c99-4cc6-a00e-833ea83f1501");
                }

                return fComboBoxf57ad72ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ColorGrayscaleTDup0Text
        {
            get
            {
                if (null == fColorGrayscaleTDup0Text)
                {
                    fColorGrayscaleTDup0Text = new Text("ColorGrayscaleTDup0Text", FileSettingsGroGroup);
                    fColorGrayscaleTDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fColorGrayscaleTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fColorGrayscaleTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e2b51e50-825c-4452-b807-7c964c8f7f51");
                    fColorGrayscaleTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Color/Grayscale TIFF Compression");
                }

                return fColorGrayscaleTDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ColorGrayscaleTDup1Text
        {
            get
            {
                if (null == fColorGrayscaleTDup1Text)
                {
                    fColorGrayscaleTDup1Text = new Text("ColorGrayscaleTDup1Text", ColorGrayscaleTDup0Text);
                    fColorGrayscaleTDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fColorGrayscaleTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fColorGrayscaleTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Color/Grayscale TIFF Compression");
                }

                return fColorGrayscaleTDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxe9dcd5bComboBox
        {
            get
            {
                if (null == fComboBoxe9dcd5bComboBox)
                {
                    fComboBoxe9dcd5bComboBox = new ComboBox("ComboBoxe9dcd5bComboBox", FileSettingsGroGroup);
                    fComboBoxe9dcd5bComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxe9dcd5bComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxe9dcd5bComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e9dcd5b7-1485-4291-b145-fb63999f90c5");
                }

                return fComboBoxe9dcd5bComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultOCRLanguDup0Text
        {
            get
            {
                if (null == fDefaultOCRLanguDup0Text)
                {
                    fDefaultOCRLanguDup0Text = new Text("DefaultOCRLanguDup0Text", FileSettingsGroGroup);
                    fDefaultOCRLanguDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultOCRLanguDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDefaultOCRLanguDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default OCR Language");
                }

                return fDefaultOCRLanguDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultOCRLanguDup1Text
        {
            get
            {
                if (null == fDefaultOCRLanguDup1Text)
                {
                    fDefaultOCRLanguDup1Text = new Text("DefaultOCRLanguDup1Text", DefaultOCRLanguDup0Text);
                    fDefaultOCRLanguDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultOCRLanguDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDefaultOCRLanguDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default OCR Language");
                }

                return fDefaultOCRLanguDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox8fcc64dComboBox
        {
            get
            {
                if (null == fComboBox8fcc64dComboBox)
                {
                    fComboBox8fcc64dComboBox = new ComboBox("ComboBox8fcc64dComboBox", FileSettingsGroGroup);
                    fComboBox8fcc64dComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox8fcc64dComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox8fcc64dComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8fcc64dd-f141-40c5-9081-1f127d9bcf4a");
                }

                return fComboBox8fcc64dComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox PDFEncryptionChCheckBox
        {
            get
            {
                if (null == fPDFEncryptionChCheckBox)
                {
                    fPDFEncryptionChCheckBox = new CheckBox("PDFEncryptionChCheckBox", FileSettingsGroGroup);
                    fPDFEncryptionChCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fPDFEncryptionChCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fPDFEncryptionChCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"64e5c54e-22a5-4037-af4d-8e5fabc149f2");
                    fPDFEncryptionChCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"PDF Encryption");
                }

                return fPDFEncryptionChCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text PDFEncryptionTeText
        {
            get
            {
                if (null == fPDFEncryptionTeText)
                {
                    fPDFEncryptionTeText = new Text("PDFEncryptionTeText", PDFEncryptionChCheckBox);
                    fPDFEncryptionTeText.UIMap.Scope = UIASeachScope.Children;
                    fPDFEncryptionTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPDFEncryptionTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"PDF Encryption");
                }

                return fPDFEncryptionTeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text UserwillbeprompText
        {
            get
            {
                if (null == fUserwillbeprompText)
                {
                    fUserwillbeprompText = new Text("UserwillbeprompText", FileSettingsGroGroup);
                    fUserwillbeprompText.UIMap.Scope = UIASeachScope.Children;
                    fUserwillbeprompText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUserwillbeprompText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User will be prompted to enter a password to encrypt the PDF when sending or saving the file.");
                }

                return fUserwillbeprompText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox EnableBlankPageCheckBox
        {
            get
            {
                if (null == fEnableBlankPageCheckBox)
                {
                    fEnableBlankPageCheckBox = new CheckBox("EnableBlankPageCheckBox", FileSettingsGroGroup);
                    fEnableBlankPageCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEnableBlankPageCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fEnableBlankPageCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0dfc1e53-bb8d-4a26-b73f-dd3aa6fcbcda");
                    fEnableBlankPageCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Blank Page Suppression");
                }

                return fEnableBlankPageCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EnableBlankPageText
        {
            get
            {
                if (null == fEnableBlankPageText)
                {
                    fEnableBlankPageText = new Text("EnableBlankPageText", EnableBlankPageCheckBox);
                    fEnableBlankPageText.UIMap.Scope = UIASeachScope.Children;
                    fEnableBlankPageText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEnableBlankPageText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Blank Page Suppression");
                }

                return fEnableBlankPageText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text BlankpageswithiText
        {
            get
            {
                if (null == fBlankpageswithiText)
                {
                    fBlankpageswithiText = new Text("BlankpageswithiText", FileSettingsGroGroup);
                    fBlankpageswithiText.UIMap.Scope = UIASeachScope.Children;
                    fBlankpageswithiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fBlankpageswithiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Blank pages within the original document are not saved.");
                }

                return fBlankpageswithiText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup12ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup12ScrollBar)
                {
                    fScrollBarVerticDup12ScrollBar = new ScrollBar("ScrollBarVerticDup12ScrollBar", ScrollViewer363Pane);
                    fScrollBarVerticDup12ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup12ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup12ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup12ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RepeatButtonLinDup2Button
        {
            get
            {
                if (null == fRepeatButtonLinDup2Button)
                {
                    fRepeatButtonLinDup2Button = new Button("RepeatButtonLinDup2Button", ScrollBarVerticDup12ScrollBar);
                    fRepeatButtonLinDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonLinDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonLinDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LineUp");
                }

                return fRepeatButtonLinDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RepeatButtonPagDup2Button
        {
            get
            {
                if (null == fRepeatButtonPagDup2Button)
                {
                    fRepeatButtonPagDup2Button = new Button("RepeatButtonPagDup2Button", ScrollBarVerticDup12ScrollBar);
                    fRepeatButtonPagDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonPagDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageUp");
                }

                return fRepeatButtonPagDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RepeatButtonPagDup3Button
        {
            get
            {
                if (null == fRepeatButtonPagDup3Button)
                {
                    fRepeatButtonPagDup3Button = new Button("RepeatButtonPagDup3Button", ScrollBarVerticDup12ScrollBar);
                    fRepeatButtonPagDup3Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonPagDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageDown");
                }

                return fRepeatButtonPagDup3Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbDup1Thumb
        {
            get
            {
                if (null == fThumbDup1Thumb)
                {
                    fThumbDup1Thumb = new Thumb("ThumbDup1Thumb", ScrollBarVerticDup12ScrollBar);
                    fThumbDup1Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbDup1Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RepeatButtonLinDup3Button
        {
            get
            {
                if (null == fRepeatButtonLinDup3Button)
                {
                    fRepeatButtonLinDup3Button = new Button("RepeatButtonLinDup3Button", ScrollBarVerticDup12ScrollBar);
                    fRepeatButtonLinDup3Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonLinDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonLinDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LineDown");
                }

                return fRepeatButtonLinDup3Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup12ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup12ScrollBar)
                {
                    fScrollBarHorizoDup12ScrollBar = new ScrollBar("ScrollBarHorizoDup12ScrollBar", ScrollViewer363Pane);
                    fScrollBarHorizoDup12ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup12ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup12ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup12ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup3TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup3TabItem)
                {
                    fSystemWindowsCoDup3TabItem = new TabItem("SystemWindowsCoDup3TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"59f7cef3-80db-4e16-8c7d-7214d65c4ad6");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FaxTextmFaxTabLDup0Text
        {
            get
            {
                if (null == fFaxTextmFaxTabLDup0Text)
                {
                    fFaxTextmFaxTabLDup0Text = new Text("FaxTextmFaxTabLDup0Text", SystemWindowsCoDup3TabItem);
                    fFaxTextmFaxTabLDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextmFaxTabLDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFaxTextmFaxTabLDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                    fFaxTextmFaxTabLDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextmFaxTabLDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FaxTextBlockDup0Text
        {
            get
            {
                if (null == fFaxTextBlockDup0Text)
                {
                    fFaxTextBlockDup0Text = new Text("FaxTextBlockDup0Text", FaxTextmFaxTabLDup0Text);
                    fFaxTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFaxTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text105C9A93254Text
        {
            get
            {
                if (null == fText105C9A93254Text)
                {
                    fText105C9A93254Text = new Text("Text105C9A93254Text", SystemWindowsCoDup3TabItem);
                    fText105C9A93254Text.UIMap.Scope = UIASeachScope.Children;
                    fText105C9A93254Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText105C9A93254Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"105C9A93-254E-4da7-8BA1-3CC66B8EAD15");
                    fText105C9A93254Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText105C9A93254Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text25DD30D682EText
        {
            get
            {
                if (null == fText25DD30D682EText)
                {
                    fText25DD30D682EText = new Text("Text25DD30D682EText", SystemWindowsCoDup3TabItem);
                    fText25DD30D682EText.UIMap.Scope = UIASeachScope.Children;
                    fText25DD30D682EText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText25DD30D682EText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"25DD30D6-82E0-4bf3-9D85-D9C3EF71087A");
                    fText25DD30D682EText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText25DD30D682EText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextBlockDup2Text
        {
            get
            {
                if (null == fTextBlockDup2Text)
                {
                    fTextBlockDup2Text = new Text("TextBlockDup2Text", Text25DD30D682EText);
                    fTextBlockDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextBlockDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ProgressBar ProgressBare99cProgressBar
        {
            get
            {
                if (null == fProgressBare99cProgressBar)
                {
                    fProgressBare99cProgressBar = new ProgressBar("ProgressBare99cProgressBar", SystemWindowsCoDup3TabItem);
                    fProgressBare99cProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBare99cProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBare99cProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e99c5788-f8b1-43bb-849f-3ab550aa4b30");
                }

                return fProgressBare99cProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup4TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup4TabItem)
                {
                    fSystemWindowsCoDup4TabItem = new TabItem("SystemWindowsCoDup4TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup4TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4fc77c37-e986-429e-b033-e2e5fb4a85e5");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup4TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoFolderTexDup0Text
        {
            get
            {
                if (null == fSendtoFolderTexDup0Text)
                {
                    fSendtoFolderTexDup0Text = new Text("SendtoFolderTexDup0Text", SystemWindowsCoDup4TabItem);
                    fSendtoFolderTexDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoFolderTexDup1Text
        {
            get
            {
                if (null == fSendtoFolderTexDup1Text)
                {
                    fSendtoFolderTexDup1Text = new Text("SendtoFolderTexDup1Text", SendtoFolderTexDup0Text);
                    fSendtoFolderTexDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Texta7a758d4d75Text
        {
            get
            {
                if (null == fTexta7a758d4d75Text)
                {
                    fTexta7a758d4d75Text = new Text("Texta7a758d4d75Text", SystemWindowsCoDup4TabItem);
                    fTexta7a758d4d75Text.UIMap.Scope = UIASeachScope.Children;
                    fTexta7a758d4d75Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTexta7a758d4d75Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a7a758d4-d759-4b19-8ea7-353731d0c2f4");
                    fTexta7a758d4d75Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTexta7a758d4d75Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Texte95b3491f6bText
        {
            get
            {
                if (null == fTexte95b3491f6bText)
                {
                    fTexte95b3491f6bText = new Text("Texte95b3491f6bText", SystemWindowsCoDup4TabItem);
                    fTexte95b3491f6bText.UIMap.Scope = UIASeachScope.Children;
                    fTexte95b3491f6bText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTexte95b3491f6bText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e95b3491-f6b7-4a10-92d2-862dc0b4b188");
                    fTexte95b3491f6bText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTexte95b3491f6bText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ProgressBar ProgressBar9a14ProgressBar
        {
            get
            {
                if (null == fProgressBar9a14ProgressBar)
                {
                    fProgressBar9a14ProgressBar = new ProgressBar("ProgressBar9a14ProgressBar", SystemWindowsCoDup4TabItem);
                    fProgressBar9a14ProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBar9a14ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBar9a14ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9a144af2-3c52-4a7b-8336-ba2eef27f32c");
                }

                return fProgressBar9a14ProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup5TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup5TabItem)
                {
                    fSystemWindowsCoDup5TabItem = new TabItem("SystemWindowsCoDup5TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup5TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"72389cc4-0879-48a1-94ae-3f27e4f6ebf4");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup5TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoWorkflowsDup0Text
        {
            get
            {
                if (null == fSendtoWorkflowsDup0Text)
                {
                    fSendtoWorkflowsDup0Text = new Text("SendtoWorkflowsDup0Text", SystemWindowsCoDup5TabItem);
                    fSendtoWorkflowsDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoWorkflowsDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoWorkflowsDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                    fSendtoWorkflowsDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Workflows");
                }

                return fSendtoWorkflowsDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoWorkflowsDup1Text
        {
            get
            {
                if (null == fSendtoWorkflowsDup1Text)
                {
                    fSendtoWorkflowsDup1Text = new Text("SendtoWorkflowsDup1Text", SendtoWorkflowsDup0Text);
                    fSendtoWorkflowsDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoWorkflowsDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoWorkflowsDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Workflows");
                }

                return fSendtoWorkflowsDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextAA63352F914Text
        {
            get
            {
                if (null == fTextAA63352F914Text)
                {
                    fTextAA63352F914Text = new Text("TextAA63352F914Text", SystemWindowsCoDup5TabItem);
                    fTextAA63352F914Text.UIMap.Scope = UIASeachScope.Children;
                    fTextAA63352F914Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextAA63352F914Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AA63352F-9148-41b9-AED8-B26A079FCA6A");
                    fTextAA63352F914Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTextAA63352F914Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextB31E1B768A7Text
        {
            get
            {
                if (null == fTextB31E1B768A7Text)
                {
                    fTextB31E1B768A7Text = new Text("TextB31E1B768A7Text", SystemWindowsCoDup5TabItem);
                    fTextB31E1B768A7Text.UIMap.Scope = UIASeachScope.Children;
                    fTextB31E1B768A7Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextB31E1B768A7Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B31E1B76-8A70-407b-B844-637C1737D8A0");
                    fTextB31E1B768A7Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextB31E1B768A7Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ProgressBar ProgressBar55dfProgressBar
        {
            get
            {
                if (null == fProgressBar55dfProgressBar)
                {
                    fProgressBar55dfProgressBar = new ProgressBar("ProgressBar55dfProgressBar", SystemWindowsCoDup5TabItem);
                    fProgressBar55dfProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBar55dfProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBar55dfProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"55df71ad-b53b-46b8-95fc-ab4433bec7b4");
                }

                return fProgressBar55dfProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup6TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup6TabItem)
                {
                    fSystemWindowsCoDup6TabItem = new TabItem("SystemWindowsCoDup6TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup6TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2392b462-3286-4dd1-9fb7-c962c43de01a");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup6TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoSharePoinDup0Text
        {
            get
            {
                if (null == fSendtoSharePoinDup0Text)
                {
                    fSendtoSharePoinDup0Text = new Text("SendtoSharePoinDup0Text", SystemWindowsCoDup6TabItem);
                    fSendtoSharePoinDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoSharePoinDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoSharePoinDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mSharePointTabLabel");
                    fSendtoSharePoinDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to SharePoint®");
                }

                return fSendtoSharePoinDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoSharePoinDup1Text
        {
            get
            {
                if (null == fSendtoSharePoinDup1Text)
                {
                    fSendtoSharePoinDup1Text = new Text("SendtoSharePoinDup1Text", SendtoSharePoinDup0Text);
                    fSendtoSharePoinDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoSharePoinDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoSharePoinDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to SharePoint®");
                }

                return fSendtoSharePoinDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text348fa329f78Text
        {
            get
            {
                if (null == fText348fa329f78Text)
                {
                    fText348fa329f78Text = new Text("Text348fa329f78Text", SystemWindowsCoDup6TabItem);
                    fText348fa329f78Text.UIMap.Scope = UIASeachScope.Children;
                    fText348fa329f78Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText348fa329f78Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"348fa329-f78c-49b1-9622-5c08f7e021d2");
                    fText348fa329f78Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText348fa329f78Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text4bfa1a11126Text
        {
            get
            {
                if (null == fText4bfa1a11126Text)
                {
                    fText4bfa1a11126Text = new Text("Text4bfa1a11126Text", SystemWindowsCoDup6TabItem);
                    fText4bfa1a11126Text.UIMap.Scope = UIASeachScope.Children;
                    fText4bfa1a11126Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText4bfa1a11126Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4bfa1a11-126e-47ee-bae0-b57524f306c5");
                    fText4bfa1a11126Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText4bfa1a11126Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ProgressBar ProgressBard093ProgressBar
        {
            get
            {
                if (null == fProgressBard093ProgressBar)
                {
                    fProgressBard093ProgressBar = new ProgressBar("ProgressBard093ProgressBar", SystemWindowsCoDup6TabItem);
                    fProgressBard093ProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBard093ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBard093ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"d093c10f-9c9a-4951-8778-ae36e4cb8906");
                }

                return fProgressBard093ProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup7TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup7TabItem)
                {
                    fSystemWindowsCoDup7TabItem = new TabItem("SystemWindowsCoDup7TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup7TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2c39648c-5b8c-4a4a-8403-9204bab8f86a");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup7TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddressingTextmDup0Text
        {
            get
            {
                if (null == fAddressingTextmDup0Text)
                {
                    fAddressingTextmDup0Text = new Text("AddressingTextmDup0Text", SystemWindowsCoDup7TabItem);
                    fAddressingTextmDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextmDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAddressingTextmDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                    fAddressingTextmDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextmDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddressingTextBDup0Text
        {
            get
            {
                if (null == fAddressingTextBDup0Text)
                {
                    fAddressingTextBDup0Text = new Text("AddressingTextBDup0Text", AddressingTextmDup0Text);
                    fAddressingTextBDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextBDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddressingTextBDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextBDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text7a57f43ecb1Dup0Text
        {
            get
            {
                if (null == fText7a57f43ecb1Dup0Text)
                {
                    fText7a57f43ecb1Dup0Text = new Text("Text7a57f43ecb1Dup0Text", SystemWindowsCoDup7TabItem);
                    fText7a57f43ecb1Dup0Text.UIMap.Scope = UIASeachScope.Children;
                    fText7a57f43ecb1Dup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7a57f43ecb1Dup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                    fText7a57f43ecb1Dup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText7a57f43ecb1Dup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text654b650dd19Dup0Text
        {
            get
            {
                if (null == fText654b650dd19Dup0Text)
                {
                    fText654b650dd19Dup0Text = new Text("Text654b650dd19Dup0Text", SystemWindowsCoDup7TabItem);
                    fText654b650dd19Dup0Text.UIMap.Scope = UIASeachScope.Children;
                    fText654b650dd19Dup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText654b650dd19Dup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                    fText654b650dd19Dup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText654b650dd19Dup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ProgressBar ProgressBar15a0ProgressBar
        {
            get
            {
                if (null == fProgressBar15a0ProgressBar)
                {
                    fProgressBar15a0ProgressBar = new ProgressBar("ProgressBar15a0ProgressBar", SystemWindowsCoDup7TabItem);
                    fProgressBar15a0ProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBar15a0ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBar15a0ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"15a0e097-7457-4429-ad09-7faad221b9da");
                }

                return fProgressBar15a0ProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup8TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup8TabItem)
                {
                    fSystemWindowsCoDup8TabItem = new TabItem("SystemWindowsCoDup8TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup8TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C5AD81FA-F1DA-466c-96FD-190B67B3FB49");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup8TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text LogTextmLogTabLText
        {
            get
            {
                if (null == fLogTextmLogTabLText)
                {
                    fLogTextmLogTabLText = new Text("LogTextmLogTabLText", SystemWindowsCoDup8TabItem);
                    fLogTextmLogTabLText.UIMap.Scope = UIASeachScope.Children;
                    fLogTextmLogTabLText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fLogTextmLogTabLText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mLogTabLabel");
                    fLogTextmLogTabLText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTextmLogTabLText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text LogTextBlockDup0Text
        {
            get
            {
                if (null == fLogTextBlockDup0Text)
                {
                    fLogTextBlockDup0Text = new Text("LogTextBlockDup0Text", LogTextmLogTabLText);
                    fLogTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fLogTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLogTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ProgressBar ProgressBarA997ProgressBar
        {
            get
            {
                if (null == fProgressBarA997ProgressBar)
                {
                    fProgressBarA997ProgressBar = new ProgressBar("ProgressBarA997ProgressBar", SystemWindowsCoDup8TabItem);
                    fProgressBarA997ProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBarA997ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBarA997ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A99714B6-EFB6-4249-BE44-2C003700270A");
                }

                return fProgressBarA997ProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup9TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup9TabItem)
                {
                    fSystemWindowsCoDup9TabItem = new TabItem("SystemWindowsCoDup9TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup9TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup9TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup9TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"cf949d55-8696-4f80-9cf7-0478eedc98e0");
                    fSystemWindowsCoDup9TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup9TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TitleBar HPDigitalSendinTitleBar
        {
            get
            {
                if (null == fHPDigitalSendinTitleBar)
                {
                    fHPDigitalSendinTitleBar = new TitleBar("HPDigitalSendinTitleBar", HPDigitalSendinWindow);
                    fHPDigitalSendinTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Digital Sending Software Configuration (Server IP Address: 10.11.14.245)");
                }

                return fHPDigitalSendinTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuBar SystemMenuBarSyDup1MenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyDup1MenuBar)
                {
                    fSystemMenuBarSyDup1MenuBar = new MenuBar("SystemMenuBarSyDup1MenuBar", HPDigitalSendinTitleBar);
                    fSystemMenuBarSyDup1MenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                }

                return fSystemMenuBarSyDup1MenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuItem SystemItem1Dup1MenuItem
        {
            get
            {
                if (null == fSystemItem1Dup1MenuItem)
                {
                    fSystemItem1Dup1MenuItem = new MenuItem("SystemItem1Dup1MenuItem", SystemMenuBarSyDup1MenuBar);
                    fSystemItem1Dup1MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                }

                return fSystemItem1Dup1MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button MinimizeMinimizDup1Button
        {
            get
            {
                if (null == fMinimizeMinimizDup1Button)
                {
                    fMinimizeMinimizDup1Button = new Button("MinimizeMinimizDup1Button", HPDigitalSendinTitleBar);
                    fMinimizeMinimizDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                    fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                }

                return fMinimizeMinimizDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RestoreRestoreButton
        {
            get
            {
                if (null == fRestoreRestoreButton)
                {
                    fRestoreRestoreButton = new Button("RestoreRestoreButton", HPDigitalSendinTitleBar);
                    fRestoreRestoreButton.UIMap.Scope = UIASeachScope.Children;
                    fRestoreRestoreButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Restore");
                    fRestoreRestoreButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Restore");
                }

                return fRestoreRestoreButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CloseCloseDup1Button
        {
            get
            {
                if (null == fCloseCloseDup1Button)
                {
                    fCloseCloseDup1Button = new Button("CloseCloseDup1Button", HPDigitalSendinTitleBar);
                    fCloseCloseDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                }

                return fCloseCloseDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button HelpButtonCB8CFButton
        {
            get
            {
                if (null == fHelpButtonCB8CFButton)
                {
                    fHelpButtonCB8CFButton = new Button("HelpButtonCB8CFButton", HPDigitalSendinWindow);
                    fHelpButtonCB8CFButton.UIMap.Scope = UIASeachScope.Children;
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CB8CF0C3-DFBE-49b8-B09B-03A34F5D4186");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpButtonCB8CFButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text HelpTextBlockDup1Text
        {
            get
            {
                if (null == fHelpTextBlockDup1Text)
                {
                    fHelpTextBlockDup1Text = new Text("HelpTextBlockDup1Text", HelpButtonCB8CFButton);
                    fHelpTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fHelpTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHelpTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ApplyButton61E2Button
        {
            get
            {
                if (null == fApplyButton61E2Button)
                {
                    fApplyButton61E2Button = new Button("ApplyButton", HPDigitalSendinWindow);
                    fApplyButton61E2Button.UIMap.Scope = UIASeachScope.Children;
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"61E2369B-F53B-4662-A361-B3034C4EFF67");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyButton61E2Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ApplyTextBlockDup1Text
        {
            get
            {
                if (null == fApplyTextBlockDup1Text)
                {
                    fApplyTextBlockDup1Text = new Text("ApplyTextBlockDup1Text", ApplyButton61E2Button);
                    fApplyTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fApplyTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fApplyTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CancelButton65CButton
        {
            get
            {
                if (null == fCancelButton65CButton)
                {
                    fCancelButton65CButton = new Button("CancelButton65CButton", HPDigitalSendinWindow);
                    fCancelButton65CButton.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"65C76204-7AB5-4681-B7FD-2D8F02DA6D4B");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelButton65CButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CancelTextBlockDup1Text
        {
            get
            {
                if (null == fCancelTextBlockDup1Text)
                {
                    fCancelTextBlockDup1Text = new Text("CancelTextBlockDup1Text", CancelButton65CButton);
                    fCancelTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fCancelTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCancelTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button OKButtonCC2EF49Button
        {
            get
            {
                if (null == fOKButtonCC2EF49Button)
                {
                    fOKButtonCC2EF49Button = new Button("OKButton", HPDigitalSendinWindow);
                    fOKButtonCC2EF49Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CC2EF491-0BD1-4ac5-9D00-AA61A9D6BA0C");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKButtonCC2EF49Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OKTextBlockDup1Text
        {
            get
            {
                if (null == fOKTextBlockDup1Text)
                {
                    fOKTextBlockDup1Text = new Text("OKTextBlockDup1Text", OKButtonCC2EF49Button);
                    fOKTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Tab TabControlec0fdTab
        {
            get
            {
                if (null == fTabControlec0fdTab)
                {
                    fTabControlec0fdTab = new Tab("TabControlec0fdTab", HPDigitalSendinWindow);
                    fTabControlec0fdTab.UIMap.Scope = UIASeachScope.Children;
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ec0fd6cd-2ab8-482f-96a5-d1fa158f38d1");
                }

                return fTabControlec0fdTab;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup10TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup10TabItem)
                {
                    fSystemWindowsCoDup10TabItem = new TabItem("SystemWindowsCoDup10TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup10TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup10TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup10TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1e2be878-0c03-4404-988c-54d0df925f0f");
                    fSystemWindowsCoDup10TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup10TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GeneralTextmGenDup1Text
        {
            get
            {
                if (null == fGeneralTextmGenDup1Text)
                {
                    fGeneralTextmGenDup1Text = new Text("GeneralTextmGenDup1Text", SystemWindowsCoDup10TabItem);
                    fGeneralTextmGenDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextmGenDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGeneralTextmGenDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                    fGeneralTextmGenDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextmGenDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GeneralTextBlocDup1Text
        {
            get
            {
                if (null == fGeneralTextBlocDup1Text)
                {
                    fGeneralTextBlocDup1Text = new Text("GeneralTextBlocDup1Text", GeneralTextmGenDup1Text);
                    fGeneralTextBlocDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextBlocDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGeneralTextBlocDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextBlocDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text933345b04e3Text
        {
            get
            {
                if (null == fText933345b04e3Text)
                {
                    fText933345b04e3Text = new Text("Text933345b04e3Text", SystemWindowsCoDup10TabItem);
                    fText933345b04e3Text.UIMap.Scope = UIASeachScope.Children;
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"933345b0-4e39-44d3-a511-0077f3176ca4");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText933345b04e3Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text786caf67344Text
        {
            get
            {
                if (null == fText786caf67344Text)
                {
                    fText786caf67344Text = new Text("Text786caf67344Text", SystemWindowsCoDup10TabItem);
                    fText786caf67344Text.UIMap.Scope = UIASeachScope.Children;
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"786caf67-344f-4ddc-83a5-b9431fb36731");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText786caf67344Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup11TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup11TabItem)
                {
                    fSystemWindowsCoDup11TabItem = new TabItem("SystemWindowsCoDup11TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup11TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup11TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup11TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4e90d18a-f33c-43c0-8505-08f4a17169b5");
                    fSystemWindowsCoDup11TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup11TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AuthenticationTDup2Text
        {
            get
            {
                if (null == fAuthenticationTDup2Text)
                {
                    fAuthenticationTDup2Text = new Text("AuthenticationTDup2Text", SystemWindowsCoDup11TabItem);
                    fAuthenticationTDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAuthenticationTDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                    fAuthenticationTDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AuthenticationTDup3Text
        {
            get
            {
                if (null == fAuthenticationTDup3Text)
                {
                    fAuthenticationTDup3Text = new Text("AuthenticationTDup3Text", AuthenticationTDup2Text);
                    fAuthenticationTDup3Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAuthenticationTDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTDup3Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text31EC91730B9Text
        {
            get
            {
                if (null == fText31EC91730B9Text)
                {
                    fText31EC91730B9Text = new Text("Text31EC91730B9Text", SystemWindowsCoDup11TabItem);
                    fText31EC91730B9Text.UIMap.Scope = UIASeachScope.Children;
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"31EC9173-0B98-4d46-BC99-7DF8EA2BE02F");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText31EC91730B9Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextA479C271445Text
        {
            get
            {
                if (null == fTextA479C271445Text)
                {
                    fTextA479C271445Text = new Text("TextA479C271445Text", SystemWindowsCoDup11TabItem);
                    fTextA479C271445Text.UIMap.Scope = UIASeachScope.Children;
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A479C271-445D-43f1-864D-7503428703E4");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextA479C271445Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup12TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup12TabItem)
                {
                    fSystemWindowsCoDup12TabItem = new TabItem("SystemWindowsCoDup12TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup12TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup12TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup12TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33A07ED3-E1EE-411e-B583-7D0A3374100F");
                    fSystemWindowsCoDup12TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup12TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EmailTextmEmailText
        {
            get
            {
                if (null == fEmailTextmEmailText)
                {
                    fEmailTextmEmailText = new Text("EmailTextmEmailText", SystemWindowsCoDup12TabItem);
                    fEmailTextmEmailText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                }

                return fEmailTextmEmailText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EmailTextBlockText
        {
            get
            {
                if (null == fEmailTextBlockText)
                {
                    fEmailTextBlockText = new Text("EmailTextBlockText", EmailTextmEmailText);
                    fEmailTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                }

                return fEmailTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text32de714a8bdText
        {
            get
            {
                if (null == fText32de714a8bdText)
                {
                    fText32de714a8bdText = new Text("Text32de714a8bdText", SystemWindowsCoDup12TabItem);
                    fText32de714a8bdText.UIMap.Scope = UIASeachScope.Children;
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"32de714a-8bda-4f11-bf20-b9a56b5f18bc");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText32de714a8bdText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text3b2a8761f4fText
        {
            get
            {
                if (null == fText3b2a8761f4fText)
                {
                    fText3b2a8761f4fText = new Text("Text3b2a8761f4fText", SystemWindowsCoDup12TabItem);
                    fText3b2a8761f4fText.UIMap.Scope = UIASeachScope.Children;
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3b2a8761-f4f6-41b1-b08c-9c33744bdc43");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText3b2a8761f4fText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextBlockDup3Text
        {
            get
            {
                if (null == fTextBlockDup3Text)
                {
                    fTextBlockDup3Text = new Text("TextBlockDup3Text", Text3b2a8761f4fText);
                    fTextBlockDup3Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextBlockDup3Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup13TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup13TabItem)
                {
                    fSystemWindowsCoDup13TabItem = new TabItem("SystemWindowsCoDup13TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup13TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup13TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup13TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4f116988-2b22-473f-bca3-094589a44954");
                    fSystemWindowsCoDup13TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup13TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FaxTextmFaxTabLDup1Text
        {
            get
            {
                if (null == fFaxTextmFaxTabLDup1Text)
                {
                    fFaxTextmFaxTabLDup1Text = new Text("FaxTextmFaxTabLDup1Text", SystemWindowsCoDup13TabItem);
                    fFaxTextmFaxTabLDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextmFaxTabLDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFaxTextmFaxTabLDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                    fFaxTextmFaxTabLDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextmFaxTabLDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FaxTextBlockDup1Text
        {
            get
            {
                if (null == fFaxTextBlockDup1Text)
                {
                    fFaxTextBlockDup1Text = new Text("FaxTextBlockDup1Text", FaxTextmFaxTabLDup1Text);
                    fFaxTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFaxTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextD1ED4F16F38Text
        {
            get
            {
                if (null == fTextD1ED4F16F38Text)
                {
                    fTextD1ED4F16F38Text = new Text("TextD1ED4F16F38Text", SystemWindowsCoDup13TabItem);
                    fTextD1ED4F16F38Text.UIMap.Scope = UIASeachScope.Children;
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D1ED4F16-F389-4dfd-A884-D258EDB48C11");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTextD1ED4F16F38Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text7DDE04FD251Text
        {
            get
            {
                if (null == fText7DDE04FD251Text)
                {
                    fText7DDE04FD251Text = new Text("Text7DDE04FD251Text", SystemWindowsCoDup13TabItem);
                    fText7DDE04FD251Text.UIMap.Scope = UIASeachScope.Children;
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7DDE04FD-2519-44c2-A212-67B0838E1C91");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText7DDE04FD251Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup14TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup14TabItem)
                {
                    fSystemWindowsCoDup14TabItem = new TabItem("SystemWindowsCoDup14TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup14TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup14TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup14TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ff96a045-6e12-4ce3-ba85-b65d16c39ffb");
                    fSystemWindowsCoDup14TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup14TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoFolderTexDup2Text
        {
            get
            {
                if (null == fSendtoFolderTexDup2Text)
                {
                    fSendtoFolderTexDup2Text = new Text("SendtoFolderTexDup2Text", SystemWindowsCoDup14TabItem);
                    fSendtoFolderTexDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoFolderTexDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                    fSendtoFolderTexDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoFolderTexDup3Text
        {
            get
            {
                if (null == fSendtoFolderTexDup3Text)
                {
                    fSendtoFolderTexDup3Text = new Text("SendtoFolderTexDup3Text", SendtoFolderTexDup2Text);
                    fSendtoFolderTexDup3Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoFolderTexDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexDup3Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text7a57f43ecb1Dup1Text
        {
            get
            {
                if (null == fText7a57f43ecb1Dup1Text)
                {
                    fText7a57f43ecb1Dup1Text = new Text("Text7a57f43ecb1Dup1Text", SystemWindowsCoDup14TabItem);
                    fText7a57f43ecb1Dup1Text.UIMap.Scope = UIASeachScope.Children;
                    fText7a57f43ecb1Dup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7a57f43ecb1Dup1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                    fText7a57f43ecb1Dup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText7a57f43ecb1Dup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text654b650dd19Dup1Text
        {
            get
            {
                if (null == fText654b650dd19Dup1Text)
                {
                    fText654b650dd19Dup1Text = new Text("Text654b650dd19Dup1Text", SystemWindowsCoDup14TabItem);
                    fText654b650dd19Dup1Text.UIMap.Scope = UIASeachScope.Children;
                    fText654b650dd19Dup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText654b650dd19Dup1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                    fText654b650dd19Dup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText654b650dd19Dup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup15TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup15TabItem)
                {
                    fSystemWindowsCoDup15TabItem = new TabItem("SystemWindowsCoDup15TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup15TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup15TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup15TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"38feb495-2893-4d8b-8961-31ebc2a3bd56");
                    fSystemWindowsCoDup15TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup15TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text WorkflowsTextmWText
        {
            get
            {
                if (null == fWorkflowsTextmWText)
                {
                    fWorkflowsTextmWText = new Text("WorkflowsTextmWText", SystemWindowsCoDup15TabItem);
                    fWorkflowsTextmWText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                }

                return fWorkflowsTextmWText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text WorkflowsTextBlText
        {
            get
            {
                if (null == fWorkflowsTextBlText)
                {
                    fWorkflowsTextBlText = new Text("WorkflowsTextBlText", WorkflowsTextmWText);
                    fWorkflowsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                }

                return fWorkflowsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text22D9C34E84CText
        {
            get
            {
                if (null == fText22D9C34E84CText)
                {
                    fText22D9C34E84CText = new Text("Text22D9C34E84CText", SystemWindowsCoDup15TabItem);
                    fText22D9C34E84CText.UIMap.Scope = UIASeachScope.Children;
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22D9C34E-84C8-4995-AC9E-5B46F8284284");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText22D9C34E84CText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextC8D15BD39C8Text
        {
            get
            {
                if (null == fTextC8D15BD39C8Text)
                {
                    fTextC8D15BD39C8Text = new Text("TextC8D15BD39C8Text", SystemWindowsCoDup15TabItem);
                    fTextC8D15BD39C8Text.UIMap.Scope = UIASeachScope.Children;
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C8D15BD3-9C8D-484c-A5E2-309CA8AA6C56");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextC8D15BD39C8Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup16TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup16TabItem)
                {
                    fSystemWindowsCoDup16TabItem = new TabItem("SystemWindowsCoDup16TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup16TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup16TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup16TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b8c06323-208e-4239-a523-a025661e0eab");
                    fSystemWindowsCoDup16TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup16TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddressingTextmDup1Text
        {
            get
            {
                if (null == fAddressingTextmDup1Text)
                {
                    fAddressingTextmDup1Text = new Text("AddressingTextmDup1Text", SystemWindowsCoDup16TabItem);
                    fAddressingTextmDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextmDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAddressingTextmDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                    fAddressingTextmDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextmDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddressingTextBDup1Text
        {
            get
            {
                if (null == fAddressingTextBDup1Text)
                {
                    fAddressingTextBDup1Text = new Text("AddressingTextBDup1Text", AddressingTextmDup1Text);
                    fAddressingTextBDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextBDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddressingTextBDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextBDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text47EB5CBA4D1Text
        {
            get
            {
                if (null == fText47EB5CBA4D1Text)
                {
                    fText47EB5CBA4D1Text = new Text("Text47EB5CBA4D1Text", SystemWindowsCoDup16TabItem);
                    fText47EB5CBA4D1Text.UIMap.Scope = UIASeachScope.Children;
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"47EB5CBA-4D1C-4eee-AD64-E26BDA31A3AC");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText47EB5CBA4D1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text0757E148179Text
        {
            get
            {
                if (null == fText0757E148179Text)
                {
                    fText0757E148179Text = new Text("Text0757E148179Text", SystemWindowsCoDup16TabItem);
                    fText0757E148179Text.UIMap.Scope = UIASeachScope.Children;
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0757E148-1794-4a5d-B378-6BE8049F65E1");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText0757E148179Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem DeviceConfiguraTabItem
        {
            get
            {
                if (null == fDeviceConfiguraTabItem)
                {
                    fDeviceConfiguraTabItem = new TabItem("DeviceConfiguraTabItem", TabControlec0fdTab);
                    fDeviceConfiguraTabItem.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6DF1E016-517F-40e4-A63E-CD48D560192F");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                }

                return fDeviceConfiguraTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceConfiguraText
        {
            get
            {
                if (null == fDeviceConfiguraText)
                {
                    fDeviceConfiguraText = new Text("DeviceConfiguraText", DeviceConfiguraTabItem);
                    fDeviceConfiguraText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                }

                return fDeviceConfiguraText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ServiceConfigurCustom
        {
            get
            {
                if (null == fServiceConfigurCustom)
                {
                    fServiceConfigurCustom = new Custom("ServiceConfigurCustom", DeviceConfiguraTabItem);
                    fServiceConfigurCustom.UIMap.Scope = UIASeachScope.Children;
                    fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ServiceConfigurationDeviceConfigTab");
                    fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mServiceDeviceTab");
                }

                return fServiceConfigurCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GroupListText
        {
            get
            {
                if (null == fGroupListText)
                {
                    fGroupListText = new Text("GroupListText", ServiceConfigurCustom);
                    fGroupListText.UIMap.Scope = UIASeachScope.Children;
                    fGroupListText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGroupListText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Group List");
                }

                return fGroupListText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GroupListTextBlText
        {
            get
            {
                if (null == fGroupListTextBlText)
                {
                    fGroupListTextBlText = new Text("GroupListTextBlText", GroupListText);
                    fGroupListTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fGroupListTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGroupListTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Group List");
                }

                return fGroupListTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceGroupsText
        {
            get
            {
                if (null == fDeviceGroupsText)
                {
                    fDeviceGroupsText = new Text("DeviceGroupsText", ServiceConfigurCustom);
                    fDeviceGroupsText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceGroupsText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDeviceGroupsText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Groups");
                }

                return fDeviceGroupsText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceGroupsTexText
        {
            get
            {
                if (null == fDeviceGroupsTexText)
                {
                    fDeviceGroupsTexText = new Text("DeviceGroupsTexText", DeviceGroupsText);
                    fDeviceGroupsTexText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceGroupsTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceGroupsTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Groups");
                }

                return fDeviceGroupsTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Tree TreeView1416BDETree
        {
            get
            {
                if (null == fTreeView1416BDETree)
                {
                    fTreeView1416BDETree = new Tree("TreeView1416BDETree", ServiceConfigurCustom);
                    fTreeView1416BDETree.UIMap.Scope = UIASeachScope.Children;
                    fTreeView1416BDETree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeView");
                    fTreeView1416BDETree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1416BDED-715B-43e3-AAE3-D7E3FE37F0F0");
                }

                return fTreeView1416BDETree;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TreeItem AllDevicesTreeVTreeItem
        {
            get
            {
                if (null == fAllDevicesTreeVTreeItem)
                {
                    fAllDevicesTreeVTreeItem = new TreeItem("AllDevicesTreeVTreeItem", TreeView1416BDETree);
                    fAllDevicesTreeVTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fAllDevicesTreeVTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fAllDevicesTreeVTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"All Devices");
                }

                return fAllDevicesTreeVTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ButtonExpanderButton
        {
            get
            {
                if (null == fButtonExpanderButton)
                {
                    fButtonExpanderButton = new Button("ButtonExpanderButton", AllDevicesTreeVTreeItem);
                    fButtonExpanderButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AllDevicesTextBText
        {
            get
            {
                if (null == fAllDevicesTextBText)
                {
                    fAllDevicesTextBText = new Text("AllDevicesTextBText", AllDevicesTreeVTreeItem);
                    fAllDevicesTextBText.UIMap.Scope = UIASeachScope.Children;
                    fAllDevicesTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAllDevicesTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"All Devices");
                }

                return fAllDevicesTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button AddGroupButtonFButton
        {
            get
            {
                if (null == fAddGroupButtonFButton)
                {
                    fAddGroupButtonFButton = new Button("AddGroupButtonFButton", ServiceConfigurCustom);
                    fAddGroupButtonFButton.UIMap.Scope = UIASeachScope.Children;
                    fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FF3CA114-616C-4372-9E90-DEBFDDC95553");
                    fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group...");
                }

                return fAddGroupButtonFButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddGroupTextBloText
        {
            get
            {
                if (null == fAddGroupTextBloText)
                {
                    fAddGroupTextBloText = new Text("AddGroupTextBloText", AddGroupButtonFButton);
                    fAddGroupTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group...");
                }

                return fAddGroupTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RemoveGroupButtButton
        {
            get
            {
                if (null == fRemoveGroupButtButton)
                {
                    fRemoveGroupButtButton = new Button("RemoveGroupButtButton", ServiceConfigurCustom);
                    fRemoveGroupButtButton.UIMap.Scope = UIASeachScope.Children;
                    fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"254907B3-979B-4706-8099-4EB37924DFB2");
                    fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Group...");
                }

                return fRemoveGroupButtButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text RemoveGroupTextText
        {
            get
            {
                if (null == fRemoveGroupTextText)
                {
                    fRemoveGroupTextText = new Text("RemoveGroupTextText", RemoveGroupButtButton);
                    fRemoveGroupTextText.UIMap.Scope = UIASeachScope.Children;
                    fRemoveGroupTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRemoveGroupTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Group...");
                }

                return fRemoveGroupTextText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RenameButton261Button
        {
            get
            {
                if (null == fRenameButton261Button)
                {
                    fRenameButton261Button = new Button("RenameButton261Button", ServiceConfigurCustom);
                    fRenameButton261Button.UIMap.Scope = UIASeachScope.Children;
                    fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2619DFAD-0185-42fb-A689-994ED4ACC316");
                    fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rename");
                }

                return fRenameButton261Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text RenameTextBlockText
        {
            get
            {
                if (null == fRenameTextBlockText)
                {
                    fRenameTextBlockText = new Text("RenameTextBlockText", RenameButton261Button);
                    fRenameTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fRenameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRenameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rename");
                }

                return fRenameTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb GridSplitterThumb
        {
            get
            {
                if (null == fGridSplitterThumb)
                {
                    fGridSplitterThumb = new Thumb("GridSplitterThumb", ServiceConfigurCustom);
                    fGridSplitterThumb.UIMap.Scope = UIASeachScope.Children;
                    fGridSplitterThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridSplitter");
                }

                return fGridSplitterThumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceListText
        {
            get
            {
                if (null == fDeviceListText)
                {
                    fDeviceListText = new Text("DeviceListText", ServiceConfigurCustom);
                    fDeviceListText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceListText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDeviceListText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device List");
                }

                return fDeviceListText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceListTextBText
        {
            get
            {
                if (null == fDeviceListTextBText)
                {
                    fDeviceListTextBText = new Text("DeviceListTextBText", DeviceListText);
                    fDeviceListTextBText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceListTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceListTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device List");
                }

                return fDeviceListTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public DataGrid ListView141cb8bDataGrid
        {
            get
            {
                if (null == fListView141cb8bDataGrid)
                {
                    fListView141cb8bDataGrid = new DataGrid("ListView141cb8bDataGrid", ServiceConfigurCustom);
                    fListView141cb8bDataGrid.UIMap.Scope = UIASeachScope.Children;
                    fListView141cb8bDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListView");
                    fListView141cb8bDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"141cb8be-89c3-4b41-80ca-be09bdf636f2");
                }

                return fListView141cb8bDataGrid;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Header GridViewHeaderRDup2Header
        {
            get
            {
                if (null == fGridViewHeaderRDup2Header)
                {
                    fGridViewHeaderRDup2Header = new Header("GridViewHeaderRDup2Header", ListView141cb8bDataGrid);
                    fGridViewHeaderRDup2Header.UIMap.Scope = UIASeachScope.Children;
                    fGridViewHeaderRDup2Header.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewHeaderRowPresenter");
                }

                return fGridViewHeaderRDup2Header;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem StatusGridViewCHeaderItem
        {
            get
            {
                if (null == fStatusGridViewCHeaderItem)
                {
                    fStatusGridViewCHeaderItem = new HeaderItem("StatusGridViewCHeaderItem", GridViewHeaderRDup2Header);
                    fStatusGridViewCHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84BDE37C-126B-473a-923B-180DBBB478C6");
                    fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Status");
                }

                return fStatusGridViewCHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text StatusTextBlockText
        {
            get
            {
                if (null == fStatusTextBlockText)
                {
                    fStatusTextBlockText = new Text("StatusTextBlockText", StatusGridViewCHeaderItem);
                    fStatusTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fStatusTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fStatusTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Status");
                }

                return fStatusTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup6Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup6Thumb)
                {
                    fThumbPARTHeadeDup6Thumb = new Thumb("ThumbPARTHeadeDup6Thumb", StatusGridViewCHeaderItem);
                    fThumbPARTHeadeDup6Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup6Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup6Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup6Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem NameGridViewColHeaderItem
        {
            get
            {
                if (null == fNameGridViewColHeaderItem)
                {
                    fNameGridViewColHeaderItem = new HeaderItem("NameGridViewColHeaderItem", GridViewHeaderRDup2Header);
                    fNameGridViewColHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"507D57C0-BC09-4a0a-8D17-F2A9117ADCE5");
                    fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameGridViewColHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NameTextBlockText
        {
            get
            {
                if (null == fNameTextBlockText)
                {
                    fNameTextBlockText = new Text("NameTextBlockText", NameGridViewColHeaderItem);
                    fNameTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fNameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup7Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup7Thumb)
                {
                    fThumbPARTHeadeDup7Thumb = new Thumb("ThumbPARTHeadeDup7Thumb", NameGridViewColHeaderItem);
                    fThumbPARTHeadeDup7Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup7Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup7Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup7Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup0HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup0HeaderItem)
                {
                    fGridViewColumnHDup0HeaderItem = new HeaderItem("GridViewColumnHDup0HeaderItem", GridViewHeaderRDup2Header);
                    fGridViewColumnHDup0HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup0HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup0HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"458F7960-4394-4579-919F-D58D5043C703");
                }

                return fGridViewColumnHDup0HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup1Image
        {
            get
            {
                if (null == fImageDup1Image)
                {
                    fImageDup1Image = new Image("ImageDup1Image", GridViewColumnHDup0HeaderItem);
                    fImageDup1Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup1Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup8Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup8Thumb)
                {
                    fThumbPARTHeadeDup8Thumb = new Thumb("ThumbPARTHeadeDup8Thumb", GridViewColumnHDup0HeaderItem);
                    fThumbPARTHeadeDup8Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup8Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup8Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup8Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup1HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup1HeaderItem)
                {
                    fGridViewColumnHDup1HeaderItem = new HeaderItem("GridViewColumnHDup1HeaderItem", GridViewHeaderRDup2Header);
                    fGridViewColumnHDup1HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup1HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup1HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CD97A6CC-D4F4-4ddb-A3BB-7FF26B2222FF");
                }

                return fGridViewColumnHDup1HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup2Image
        {
            get
            {
                if (null == fImageDup2Image)
                {
                    fImageDup2Image = new Image("ImageDup2Image", GridViewColumnHDup1HeaderItem);
                    fImageDup2Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup2Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup2Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup9Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup9Thumb)
                {
                    fThumbPARTHeadeDup9Thumb = new Thumb("ThumbPARTHeadeDup9Thumb", GridViewColumnHDup1HeaderItem);
                    fThumbPARTHeadeDup9Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup9Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup9Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup9Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup2HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup2HeaderItem)
                {
                    fGridViewColumnHDup2HeaderItem = new HeaderItem("GridViewColumnHDup2HeaderItem", GridViewHeaderRDup2Header);
                    fGridViewColumnHDup2HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup2HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup2HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"008BEEE0-3AE1-47be-BD91-66E124BE04A5");
                }

                return fGridViewColumnHDup2HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup3Image
        {
            get
            {
                if (null == fImageDup3Image)
                {
                    fImageDup3Image = new Image("ImageDup3Image", GridViewColumnHDup2HeaderItem);
                    fImageDup3Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup3Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup3Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup10Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup10Thumb)
                {
                    fThumbPARTHeadeDup10Thumb = new Thumb("ThumbPARTHeadeDup10Thumb", GridViewColumnHDup2HeaderItem);
                    fThumbPARTHeadeDup10Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup10Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup10Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup10Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup3HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup3HeaderItem)
                {
                    fGridViewColumnHDup3HeaderItem = new HeaderItem("GridViewColumnHDup3HeaderItem", GridViewHeaderRDup2Header);
                    fGridViewColumnHDup3HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup3HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup3HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4DC0435C-FF08-4325-A9AC-115D1891ABA6");
                }

                return fGridViewColumnHDup3HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup4Image
        {
            get
            {
                if (null == fImageDup4Image)
                {
                    fImageDup4Image = new Image("ImageDup4Image", GridViewColumnHDup3HeaderItem);
                    fImageDup4Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup4Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup4Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup11Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup11Thumb)
                {
                    fThumbPARTHeadeDup11Thumb = new Thumb("ThumbPARTHeadeDup11Thumb", GridViewColumnHDup3HeaderItem);
                    fThumbPARTHeadeDup11Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup11Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup11Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup11Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup4HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup4HeaderItem)
                {
                    fGridViewColumnHDup4HeaderItem = new HeaderItem("GridViewColumnHDup4HeaderItem", GridViewHeaderRDup2Header);
                    fGridViewColumnHDup4HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup4HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup4HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"BE6ECE9F-4708-4266-8106-AE6D598B0396");
                }

                return fGridViewColumnHDup4HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup5Image
        {
            get
            {
                if (null == fImageDup5Image)
                {
                    fImageDup5Image = new Image("ImageDup5Image", GridViewColumnHDup4HeaderItem);
                    fImageDup5Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup5Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup5Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup12Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup12Thumb)
                {
                    fThumbPARTHeadeDup12Thumb = new Thumb("ThumbPARTHeadeDup12Thumb", GridViewColumnHDup4HeaderItem);
                    fThumbPARTHeadeDup12Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup12Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup12Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup12Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup5HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup5HeaderItem)
                {
                    fGridViewColumnHDup5HeaderItem = new HeaderItem("GridViewColumnHDup5HeaderItem", GridViewHeaderRDup2Header);
                    fGridViewColumnHDup5HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup5HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup5HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5C264E70-DAEF-44F3-9DE9-9824BC0B9ECF");
                }

                return fGridViewColumnHDup5HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup6Image
        {
            get
            {
                if (null == fImageDup6Image)
                {
                    fImageDup6Image = new Image("ImageDup6Image", GridViewColumnHDup5HeaderItem);
                    fImageDup6Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup6Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup6Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup13Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup13Thumb)
                {
                    fThumbPARTHeadeDup13Thumb = new Thumb("ThumbPARTHeadeDup13Thumb", GridViewColumnHDup5HeaderItem);
                    fThumbPARTHeadeDup13Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup13Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup13Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup13Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem ModelGridViewCoHeaderItem
        {
            get
            {
                if (null == fModelGridViewCoHeaderItem)
                {
                    fModelGridViewCoHeaderItem = new HeaderItem("ModelGridViewCoHeaderItem", GridViewHeaderRDup2Header);
                    fModelGridViewCoHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"805FD78E-D6A4-4559-939B-ECDD285AE6D7");
                    fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Model");
                }

                return fModelGridViewCoHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ModelTextBlockText
        {
            get
            {
                if (null == fModelTextBlockText)
                {
                    fModelTextBlockText = new Text("ModelTextBlockText", ModelGridViewCoHeaderItem);
                    fModelTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fModelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fModelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Model");
                }

                return fModelTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup14Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup14Thumb)
                {
                    fThumbPARTHeadeDup14Thumb = new Thumb("ThumbPARTHeadeDup14Thumb", ModelGridViewCoHeaderItem);
                    fThumbPARTHeadeDup14Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup14Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup14Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup14Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem IPAddressGridViHeaderItem
        {
            get
            {
                if (null == fIPAddressGridViHeaderItem)
                {
                    fIPAddressGridViHeaderItem = new HeaderItem("IPAddressGridViHeaderItem", GridViewHeaderRDup2Header);
                    fIPAddressGridViHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"70E1D5F4-0DA5-4e87-A451-28399734B74C");
                    fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"IP Address");
                }

                return fIPAddressGridViHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text IPAddressTextBlText
        {
            get
            {
                if (null == fIPAddressTextBlText)
                {
                    fIPAddressTextBlText = new Text("IPAddressTextBlText", IPAddressGridViHeaderItem);
                    fIPAddressTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fIPAddressTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fIPAddressTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"IP Address");
                }

                return fIPAddressTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup15Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup15Thumb)
                {
                    fThumbPARTHeadeDup15Thumb = new Thumb("ThumbPARTHeadeDup15Thumb", IPAddressGridViHeaderItem);
                    fThumbPARTHeadeDup15Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup15Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup15Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup15Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem HostnameGridVieHeaderItem
        {
            get
            {
                if (null == fHostnameGridVieHeaderItem)
                {
                    fHostnameGridVieHeaderItem = new HeaderItem("HostnameGridVieHeaderItem", GridViewHeaderRDup2Header);
                    fHostnameGridVieHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"82BE5D16-D370-4519-8FC4-0F517E12AFDF");
                    fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname");
                }

                return fHostnameGridVieHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text HostnameTextBloText
        {
            get
            {
                if (null == fHostnameTextBloText)
                {
                    fHostnameTextBloText = new Text("HostnameTextBloText", HostnameGridVieHeaderItem);
                    fHostnameTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fHostnameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHostnameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname");
                }

                return fHostnameTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup16Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup16Thumb)
                {
                    fThumbPARTHeadeDup16Thumb = new Thumb("ThumbPARTHeadeDup16Thumb", HostnameGridVieHeaderItem);
                    fThumbPARTHeadeDup16Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup16Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup16Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup16Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem DescriptionGridHeaderItem
        {
            get
            {
                if (null == fDescriptionGridHeaderItem)
                {
                    fDescriptionGridHeaderItem = new HeaderItem("DescriptionGridHeaderItem", GridViewHeaderRDup2Header);
                    fDescriptionGridHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"26A46CB8-53AC-446f-8012-A92323091104");
                    fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                }

                return fDescriptionGridHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DescriptionTextText
        {
            get
            {
                if (null == fDescriptionTextText)
                {
                    fDescriptionTextText = new Text("DescriptionTextText", DescriptionGridHeaderItem);
                    fDescriptionTextText.UIMap.Scope = UIASeachScope.Children;
                    fDescriptionTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDescriptionTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                }

                return fDescriptionTextText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup17Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup17Thumb)
                {
                    fThumbPARTHeadeDup17Thumb = new Thumb("ThumbPARTHeadeDup17Thumb", DescriptionGridHeaderItem);
                    fThumbPARTHeadeDup17Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup17Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup17Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup17Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem FirmwareGridVieHeaderItem
        {
            get
            {
                if (null == fFirmwareGridVieHeaderItem)
                {
                    fFirmwareGridVieHeaderItem = new HeaderItem("FirmwareGridVieHeaderItem", GridViewHeaderRDup2Header);
                    fFirmwareGridVieHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2A8C9E5A-0A8D-48DD-9D15-42B45EB4177B");
                    fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Firmware");
                }

                return fFirmwareGridVieHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FirmwareTextBloText
        {
            get
            {
                if (null == fFirmwareTextBloText)
                {
                    fFirmwareTextBloText = new Text("FirmwareTextBloText", FirmwareGridVieHeaderItem);
                    fFirmwareTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fFirmwareTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFirmwareTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Firmware");
                }

                return fFirmwareTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup18Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup18Thumb)
                {
                    fThumbPARTHeadeDup18Thumb = new Thumb("ThumbPARTHeadeDup18Thumb", FirmwareGridVieHeaderItem);
                    fThumbPARTHeadeDup18Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup18Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup18Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup18Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public DataItem bound101112170eDataItem
        {
            get
            {
                if (null == fbound101112170eDataItem)
                {
                    fbound101112170eDataItem = new DataItem("bound101112170eDataItem", ListView141cb8bDataGrid);
                    fbound101112170eDataItem.UIMap.Scope = UIASeachScope.Children;
                    fbound101112170eDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                    fbound101112170eDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"bound; 10.11.12.170; email=disabled; folder=disabled; fax=enabled; addressing=disabled; authentication=notApplicable; customKey=disabled; sharePoint=disabled; HP Officejet Color FlowMFP X585; 10.11.12.170; HP Officejet Color FlowMFP X585");
                }

                return fbound101112170eDataItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ContentPresenteDup0I0XCustom
        {
            get
            {
                if (null == fContentPresenteDup0I0XCustom)
                {
                    fContentPresenteDup0I0XCustom = new Custom("ContentPresenteDup0I0XCustom", bound101112170eDataItem);
                    fContentPresenteDup0I0XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup0I0XCustom.UIMap.Index = 0;
                    fContentPresenteDup0I0XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup0I0XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image Image84ACE29E0AImage
        {
            get
            {
                if (null == fImage84ACE29E0AImage)
                {
                    fImage84ACE29E0AImage = new Image("Image84ACE29E0AImage", ContentPresenteDup0I0XCustom);
                    fImage84ACE29E0AImage.UIMap.Scope = UIASeachScope.Children;
                    fImage84ACE29E0AImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage84ACE29E0AImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84ACE29E-0A0D-4d4b-9168-34F42B14D952");
                }

                return fImage84ACE29E0AImage;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom WaitSpinnerUserCustom
        {
            get
            {
                if (null == fWaitSpinnerUserCustom)
                {
                    fWaitSpinnerUserCustom = new Custom("WaitSpinnerUserCustom", ContentPresenteDup0I0XCustom);
                    fWaitSpinnerUserCustom.UIMap.Scope = UIASeachScope.Children;
                    fWaitSpinnerUserCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WaitSpinnerUserControl");
                    fWaitSpinnerUserCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C736946B-5A03-4603-A63B-2B489C87B082");
                }

                return fWaitSpinnerUserCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImagemWaitSpinnImage
        {
            get
            {
                if (null == fImagemWaitSpinnImage)
                {
                    fImagemWaitSpinnImage = new Image("ImagemWaitSpinnImage", WaitSpinnerUserCustom);
                    fImagemWaitSpinnImage.UIMap.Scope = UIASeachScope.Children;
                    fImagemWaitSpinnImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImagemWaitSpinnImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWaitSpinnerImage");
                }

                return fImagemWaitSpinnImage;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text HPOfficejetColoDup0I0XText
        {
            get
            {
                if (null == fHPOfficejetColoDup0I0XText)
                {
                    fHPOfficejetColoDup0I0XText = new Text("HPOfficejetColoDup0I0XText", bound101112170eDataItem);
                    fHPOfficejetColoDup0I0XText.UIMap.Scope = UIASeachScope.Children;
                    fHPOfficejetColoDup0I0XText.UIMap.Index = 0;
                    fHPOfficejetColoDup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHPOfficejetColoDup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Officejet Color FlowMFP X585");
                }

                return fHPOfficejetColoDup0I0XText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ContentPresenteDup1I1XCustom
        {
            get
            {
                if (null == fContentPresenteDup1I1XCustom)
                {
                    fContentPresenteDup1I1XCustom = new Custom("ContentPresenteDup1I1XCustom", bound101112170eDataItem);
                    fContentPresenteDup1I1XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup1I1XCustom.UIMap.Index = 1;
                    fContentPresenteDup1I1XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup1I1XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image Image844100985AImage
        {
            get
            {
                if (null == fImage844100985AImage)
                {
                    fImage844100985AImage = new Image("Image844100985AImage", ContentPresenteDup1I1XCustom);
                    fImage844100985AImage.UIMap.Scope = UIASeachScope.Children;
                    fImage844100985AImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage844100985AImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84410098-5A15-4470-B28C-3220220B3CF7");
                }

                return fImage844100985AImage;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ContentPresenteDup2I2XCustom
        {
            get
            {
                if (null == fContentPresenteDup2I2XCustom)
                {
                    fContentPresenteDup2I2XCustom = new Custom("ContentPresenteDup2I2XCustom", bound101112170eDataItem);
                    fContentPresenteDup2I2XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup2I2XCustom.UIMap.Index = 2;
                    fContentPresenteDup2I2XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup2I2XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image Image20F9A92A96Image
        {
            get
            {
                if (null == fImage20F9A92A96Image)
                {
                    fImage20F9A92A96Image = new Image("Image20F9A92A96Image", ContentPresenteDup2I2XCustom);
                    fImage20F9A92A96Image.UIMap.Scope = UIASeachScope.Children;
                    fImage20F9A92A96Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage20F9A92A96Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"20F9A92A-9628-46b7-9034-C31A2B2C2052");
                }

                return fImage20F9A92A96Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ContentPresenteDup3I3XCustom
        {
            get
            {
                if (null == fContentPresenteDup3I3XCustom)
                {
                    fContentPresenteDup3I3XCustom = new Custom("ContentPresenteDup3I3XCustom", bound101112170eDataItem);
                    fContentPresenteDup3I3XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup3I3XCustom.UIMap.Index = 3;
                    fContentPresenteDup3I3XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup3I3XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageCA1843E8BFImage
        {
            get
            {
                if (null == fImageCA1843E8BFImage)
                {
                    fImageCA1843E8BFImage = new Image("ImageCA1843E8BFImage", ContentPresenteDup3I3XCustom);
                    fImageCA1843E8BFImage.UIMap.Scope = UIASeachScope.Children;
                    fImageCA1843E8BFImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageCA1843E8BFImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CA1843E8-BF8B-4fd4-88C2-66CB0A66A1C2");
                }

                return fImageCA1843E8BFImage;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ContentPresenteDup4I4XCustom
        {
            get
            {
                if (null == fContentPresenteDup4I4XCustom)
                {
                    fContentPresenteDup4I4XCustom = new Custom("ContentPresenteDup4I4XCustom", bound101112170eDataItem);
                    fContentPresenteDup4I4XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup4I4XCustom.UIMap.Index = 4;
                    fContentPresenteDup4I4XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup4I4XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageE24499D7C0Image
        {
            get
            {
                if (null == fImageE24499D7C0Image)
                {
                    fImageE24499D7C0Image = new Image("ImageE24499D7C0Image", ContentPresenteDup4I4XCustom);
                    fImageE24499D7C0Image.UIMap.Scope = UIASeachScope.Children;
                    fImageE24499D7C0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageE24499D7C0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"E24499D7-C0DD-4982-A105-C235E810CBF8");
                }

                return fImageE24499D7C0Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ContentPresenteDup5I5XCustom
        {
            get
            {
                if (null == fContentPresenteDup5I5XCustom)
                {
                    fContentPresenteDup5I5XCustom = new Custom("ContentPresenteDup5I5XCustom", bound101112170eDataItem);
                    fContentPresenteDup5I5XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup5I5XCustom.UIMap.Index = 5;
                    fContentPresenteDup5I5XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup5I5XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image Image86A371F7F4Image
        {
            get
            {
                if (null == fImage86A371F7F4Image)
                {
                    fImage86A371F7F4Image = new Image("Image86A371F7F4Image", ContentPresenteDup5I5XCustom);
                    fImage86A371F7F4Image.UIMap.Scope = UIASeachScope.Children;
                    fImage86A371F7F4Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage86A371F7F4Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"86A371F7-F478-4dfd-AE88-854F4FB069A0");
                }

                return fImage86A371F7F4Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ContentPresenteDup6I6XCustom
        {
            get
            {
                if (null == fContentPresenteDup6I6XCustom)
                {
                    fContentPresenteDup6I6XCustom = new Custom("ContentPresenteDup6I6XCustom", bound101112170eDataItem);
                    fContentPresenteDup6I6XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup6I6XCustom.UIMap.Index = 6;
                    fContentPresenteDup6I6XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup6I6XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image Image1D2DC29B85Image
        {
            get
            {
                if (null == fImage1D2DC29B85Image)
                {
                    fImage1D2DC29B85Image = new Image("Image1D2DC29B85Image", ContentPresenteDup6I6XCustom);
                    fImage1D2DC29B85Image.UIMap.Scope = UIASeachScope.Children;
                    fImage1D2DC29B85Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage1D2DC29B85Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1D2DC29B-85AC-4341-9FBC-741DEC6996B9");
                }

                return fImage1D2DC29B85Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text HPOfficejetColoDup1I1XText
        {
            get
            {
                if (null == fHPOfficejetColoDup1I1XText)
                {
                    fHPOfficejetColoDup1I1XText = new Text("HPOfficejetColoDup1I1XText", bound101112170eDataItem);
                    fHPOfficejetColoDup1I1XText.UIMap.Scope = UIASeachScope.Children;
                    fHPOfficejetColoDup1I1XText.UIMap.Index = 1;
                    fHPOfficejetColoDup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHPOfficejetColoDup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Officejet Color FlowMFP X585");
                }

                return fHPOfficejetColoDup1I1XText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text A101112170TextBText
        {
            get
            {
                if (null == fA101112170TextBText)
                {
                    fA101112170TextBText = new Text("A101112170TextBText", bound101112170eDataItem);
                    fA101112170TextBText.UIMap.Scope = UIASeachScope.Children;
                    fA101112170TextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fA101112170TextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"10.11.12.170");
                }

                return fA101112170TextBText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextBlockDup4Text
        {
            get
            {
                if (null == fTextBlockDup4Text)
                {
                    fTextBlockDup4Text = new Text("TextBlockDup4Text", bound101112170eDataItem);
                    fTextBlockDup4Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup4Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTextBlockDup4Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text HPOfficejetColoDup2I2XText
        {
            get
            {
                if (null == fHPOfficejetColoDup2I2XText)
                {
                    fHPOfficejetColoDup2I2XText = new Text("HPOfficejetColoDup2I2XText", bound101112170eDataItem);
                    fHPOfficejetColoDup2I2XText.UIMap.Scope = UIASeachScope.Children;
                    fHPOfficejetColoDup2I2XText.UIMap.Index = 2;
                    fHPOfficejetColoDup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHPOfficejetColoDup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Officejet Color FlowMFP X585");
                }

                return fHPOfficejetColoDup2I2XText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FutureSmart3372Text
        {
            get
            {
                if (null == fFutureSmart3372Text)
                {
                    fFutureSmart3372Text = new Text("FutureSmart3372Text", bound101112170eDataItem);
                    fFutureSmart3372Text.UIMap.Scope = UIASeachScope.Children;
                    fFutureSmart3372Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFutureSmart3372Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"FutureSmart 3 (3.7) (2307781_551194)");
                }

                return fFutureSmart3372Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button AddDeviceButtonButton
        {
            get
            {
                if (null == fAddDeviceButtonButton)
                {
                    fAddDeviceButtonButton = new Button("AddDeviceButtonButton", ServiceConfigurCustom);
                    fAddDeviceButtonButton.UIMap.Scope = UIASeachScope.Children;
                    fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"F312568F-16E2-4717-876C-9A076CE2602B");
                    fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Device...");
                }

                return fAddDeviceButtonButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddDeviceTextBlText
        {
            get
            {
                if (null == fAddDeviceTextBlText)
                {
                    fAddDeviceTextBlText = new Text("AddDeviceTextBlText", AddDeviceButtonButton);
                    fAddDeviceTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fAddDeviceTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddDeviceTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Device...");
                }

                return fAddDeviceTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ExportButtonef5Button
        {
            get
            {
                if (null == fExportButtonef5Button)
                {
                    fExportButtonef5Button = new Button("ExportButtonef5Button", ServiceConfigurCustom);
                    fExportButtonef5Button.UIMap.Scope = UIASeachScope.Children;
                    fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ef506fe9-b864-4efe-a960-ad04e56aab91");
                    fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                }

                return fExportButtonef5Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ExportTextBlockText
        {
            get
            {
                if (null == fExportTextBlockText)
                {
                    fExportTextBlockText = new Text("ExportTextBlockText", ExportButtonef5Button);
                    fExportTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                }

                return fExportTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RemoveDeviceButButton
        {
            get
            {
                if (null == fRemoveDeviceButButton)
                {
                    fRemoveDeviceButButton = new Button("RemoveDeviceButButton", ServiceConfigurCustom);
                    fRemoveDeviceButButton.UIMap.Scope = UIASeachScope.Children;
                    fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6f0bbda8-ae72-4b07-bd10-508b3cd6df98");
                    fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Device...");
                }

                return fRemoveDeviceButButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text RemoveDeviceTexText
        {
            get
            {
                if (null == fRemoveDeviceTexText)
                {
                    fRemoveDeviceTexText = new Text("RemoveDeviceTexText", RemoveDeviceButButton);
                    fRemoveDeviceTexText.UIMap.Scope = UIASeachScope.Children;
                    fRemoveDeviceTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRemoveDeviceTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Device...");
                }

                return fRemoveDeviceTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ImportButtona69Button
        {
            get
            {
                if (null == fImportButtona69Button)
                {
                    fImportButtona69Button = new Button("ImportButtona69Button", ServiceConfigurCustom);
                    fImportButtona69Button.UIMap.Scope = UIASeachScope.Children;
                    fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a694c1f5-ca51-45dc-ae40-8decc9704ca5");
                    fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import");
                }

                return fImportButtona69Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ImportTextBlockText
        {
            get
            {
                if (null == fImportTextBlockText)
                {
                    fImportTextBlockText = new Text("ImportTextBlockText", ImportButtona69Button);
                    fImportTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fImportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fImportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import");
                }

                return fImportTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CreateTemplateBButton
        {
            get
            {
                if (null == fCreateTemplateBButton)
                {
                    fCreateTemplateBButton = new Button("CreateTemplateBButton", ServiceConfigurCustom);
                    fCreateTemplateBButton.UIMap.Scope = UIASeachScope.Children;
                    fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4C50BE02-6C60-4097-9595-ACF2CC3D5F50");
                    fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create Template");
                }

                return fCreateTemplateBButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CreateTemplateTText
        {
            get
            {
                if (null == fCreateTemplateTText)
                {
                    fCreateTemplateTText = new Text("CreateTemplateTText", CreateTemplateBButton);
                    fCreateTemplateTText.UIMap.Scope = UIASeachScope.Children;
                    fCreateTemplateTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCreateTemplateTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create Template");
                }

                return fCreateTemplateTText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button DeviceSignInButButton
        {
            get
            {
                if (null == fDeviceSignInButButton)
                {
                    fDeviceSignInButButton = new Button("DeviceSignInButButton", ServiceConfigurCustom);
                    fDeviceSignInButButton.UIMap.Scope = UIASeachScope.Children;
                    fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mDeviceSignInButton");
                    fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Sign In...");
                }

                return fDeviceSignInButButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceSignInTexText
        {
            get
            {
                if (null == fDeviceSignInTexText)
                {
                    fDeviceSignInTexText = new Text("DeviceSignInTexText", DeviceSignInButButton);
                    fDeviceSignInTexText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceSignInTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceSignInTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Sign In...");
                }

                return fDeviceSignInTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TotalDevicesText
        {
            get
            {
                if (null == fTotalDevicesText)
                {
                    fTotalDevicesText = new Text("TotalDevicesText", ServiceConfigurCustom);
                    fTotalDevicesText.UIMap.Scope = UIASeachScope.Children;
                    fTotalDevicesText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTotalDevicesText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Total Devices");
                }

                return fTotalDevicesText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TotalDevicesTexText
        {
            get
            {
                if (null == fTotalDevicesTexText)
                {
                    fTotalDevicesTexText = new Text("TotalDevicesTexText", TotalDevicesText);
                    fTotalDevicesTexText.UIMap.Scope = UIASeachScope.Children;
                    fTotalDevicesTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTotalDevicesTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Total Devices");
                }

                return fTotalDevicesTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text A1Text82f844376Text
        {
            get
            {
                if (null == fA1Text82f844376Text)
                {
                    fA1Text82f844376Text = new Text("A1Text82f844376Text", ServiceConfigurCustom);
                    fA1Text82f844376Text.UIMap.Scope = UIASeachScope.Children;
                    fA1Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fA1Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"82f84437-601e-4562-a536-33b7ebcbf6d7");
                    fA1Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"1");
                }

                return fA1Text82f844376Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text A1TextBlockText
        {
            get
            {
                if (null == fA1TextBlockText)
                {
                    fA1TextBlockText = new Text("A1TextBlockText", A1Text82f844376Text);
                    fA1TextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fA1TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fA1TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"1");
                }

                return fA1TextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ConfigureDeviceButton
        {
            get
            {
                if (null == fConfigureDeviceButton)
                {
                    fConfigureDeviceButton = new Button("ConfigureDeviceButton", ServiceConfigurCustom);
                    fConfigureDeviceButton.UIMap.Scope = UIASeachScope.Children;
                    fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"cc06ce85-fb0a-4048-8b41-968e5c947ca3");
                    fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Configure Device...");
                }

                return fConfigureDeviceButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ConfigureDeviceText
        {
            get
            {
                if (null == fConfigureDeviceText)
                {
                    fConfigureDeviceText = new Text("ConfigureDeviceText", ConfigureDeviceButton);
                    fConfigureDeviceText.UIMap.Scope = UIASeachScope.Children;
                    fConfigureDeviceText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fConfigureDeviceText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Configure Device...");
                }

                return fConfigureDeviceText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem TemplateConfiguTabItem
        {
            get
            {
                if (null == fTemplateConfiguTabItem)
                {
                    fTemplateConfiguTabItem = new TabItem("TemplateConfiguTabItem", TabControlec0fdTab);
                    fTemplateConfiguTabItem.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AC05F9B9-A7D8-4b34-80E7-910FB9870D47");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                }

                return fTemplateConfiguTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TemplateConfiguText
        {
            get
            {
                if (null == fTemplateConfiguText)
                {
                    fTemplateConfiguText = new Text("TemplateConfiguText", TemplateConfiguTabItem);
                    fTemplateConfiguText.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                }

                return fTemplateConfiguText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem LogTabItem9b4f3TabItem
        {
            get
            {
                if (null == fLogTabItem9b4f3TabItem)
                {
                    fLogTabItem9b4f3TabItem = new TabItem("LogTabItem9b4f3TabItem", TabControlec0fdTab);
                    fLogTabItem9b4f3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9b4f34bb-d75a-4080-9be3-1c50ec31c5b6");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTabItem9b4f3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text LogTextBlockDup1Text
        {
            get
            {
                if (null == fLogTextBlockDup1Text)
                {
                    fLogTextBlockDup1Text = new Text("LogTextBlockDup1Text", LogTabItem9b4f3TabItem);
                    fLogTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fLogTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLogTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup17TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup17TabItem)
                {
                    fSystemWindowsCoDup17TabItem = new TabItem("SystemWindowsCoDup17TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup17TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup17TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup17TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3AC8D4A8-3B06-421A-911B-E8CA248A9ED4");
                    fSystemWindowsCoDup17TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup17TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SecurityTextmSeText
        {
            get
            {
                if (null == fSecurityTextmSeText)
                {
                    fSecurityTextmSeText = new Text("SecurityTextmSeText", SystemWindowsCoDup17TabItem);
                    fSecurityTextmSeText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mSecurityTabLabel");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                }

                return fSecurityTextmSeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SecurityTextBloText
        {
            get
            {
                if (null == fSecurityTextBloText)
                {
                    fSecurityTextBloText = new Text("SecurityTextBloText", SecurityTextmSeText);
                    fSecurityTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                }

                return fSecurityTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text8A7A84DB894Text
        {
            get
            {
                if (null == fText8A7A84DB894Text)
                {
                    fText8A7A84DB894Text = new Text("Text8A7A84DB894Text", SystemWindowsCoDup17TabItem);
                    fText8A7A84DB894Text.UIMap.Scope = UIASeachScope.Children;
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8A7A84DB-8945-40E1-A0F9-C40DDD129739");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText8A7A84DB894Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text16F78FB18FFText
        {
            get
            {
                if (null == fText16F78FB18FFText)
                {
                    fText16F78FB18FFText = new Text("Text16F78FB18FFText", SystemWindowsCoDup17TabItem);
                    fText16F78FB18FFText.UIMap.Scope = UIASeachScope.Children;
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16F78FB1-8FF9-4B0D-8251-FB09F520EA73");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText16F78FB18FFText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup18TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup18TabItem)
                {
                    fSystemWindowsCoDup18TabItem = new TabItem("SystemWindowsCoDup18TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup18TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup18TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup18TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1678607C-20BF-4137-8238-C9D46EA8FF70");
                    fSystemWindowsCoDup18TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup18TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AnalyticsTextmAText
        {
            get
            {
                if (null == fAnalyticsTextmAText)
                {
                    fAnalyticsTextmAText = new Text("AnalyticsTextmAText", SystemWindowsCoDup18TabItem);
                    fAnalyticsTextmAText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAnalyticsTabLabel");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                }

                return fAnalyticsTextmAText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AnalyticsTextBlText
        {
            get
            {
                if (null == fAnalyticsTextBlText)
                {
                    fAnalyticsTextBlText = new Text("AnalyticsTextBlText", AnalyticsTextmAText);
                    fAnalyticsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                }

                return fAnalyticsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem AboutTabItemf45TabItem
        {
            get
            {
                if (null == fAboutTabItemf45TabItem)
                {
                    fAboutTabItemf45TabItem = new TabItem("AboutTabItemf45TabItem", TabControlec0fdTab);
                    fAboutTabItemf45TabItem.UIMap.Scope = UIASeachScope.Children;
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f45c22d9-f77a-481a-95bc-09cdff03e131");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                }

                return fAboutTabItemf45TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AboutTextBlockText
        {
            get
            {
                if (null == fAboutTextBlockText)
                {
                    fAboutTextBlockText = new Text("AboutTextBlockText", AboutTabItemf45TabItem);
                    fAboutTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                }

                return fAboutTextBlockText;
            }
        }
    }
}

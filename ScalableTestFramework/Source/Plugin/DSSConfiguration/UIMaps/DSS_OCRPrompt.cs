//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------

namespace HP.ScalableTest.Plugin.DSSConfiguration.UIMaps
{
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class DSS_OCRPrompt
    {
        /// <summary>
        /// Backing field for NewTextDocumentWindow property
        /// </summary>
        private Window fNewTextDocumentWindow;

        /// <summary>
        /// Backing field for SaveAs32770Window property
        /// </summary>
        private Window fSaveAs32770Window;

        /// <summary>
        /// Backing field for DUIViewWndClassPane property
        /// </summary>
        private Pane fDUIViewWndClassPane;

        /// <summary>
        /// Backing field for ExplorerPaneHWNPane property
        /// </summary>
        private Pane fExplorerPaneHWNPane;

        /// <summary>
        /// Backing field for FloatNotifySinkDup0I0XPane property
        /// </summary>
        private Pane fFloatNotifySinkDup0I0XPane;

        /// <summary>
        /// Backing field for CtrlNotifySinkDup0I0XPane property
        /// </summary>
        private Pane fCtrlNotifySinkDup0I0XPane;

        /// <summary>
        /// Backing field for CtrlNotifySinkDup1I1XPane property
        /// </summary>
        private Pane fCtrlNotifySinkDup1I1XPane;

        /// <summary>
        /// Backing field for FloatNotifySinkDup1I1XPane property
        /// </summary>
        private Pane fFloatNotifySinkDup1I1XPane;

        /// <summary>
        /// Backing field for CommandModuleFoToolBar property
        /// </summary>
        private ToolBar fCommandModuleFoToolBar;

        /// <summary>
        /// Backing field for HelpButton3dHelButton property
        /// </summary>
        private Button fHelpButton3dHelButton;

        /// <summary>
        /// Backing field for ViewsViewControSplitButton property
        /// </summary>
        private SplitButton fViewsViewControSplitButton;

        /// <summary>
        /// Backing field for ViewSliderButtoButton property
        /// </summary>
        private Button fViewSliderButtoButton;

        /// <summary>
        /// Backing field for OrganizeAJOSpliButton property
        /// </summary>
        private Button fOrganizeAJOSpliButton;

        /// <summary>
        /// Backing field for NewfolderAJOSplButton property
        /// </summary>
        private Button fNewfolderAJOSplButton;

        /// <summary>
        /// Backing field for ControlHostPropPane property
        /// </summary>
        private Pane fControlHostPropPane;

        /// <summary>
        /// Backing field for NamespaceTreeCoTree property
        /// </summary>
        private Tree fNamespaceTreeCoTree;

        /// <summary>
        /// Backing field for VerticalScrollBDup0ScrollBar property
        /// </summary>
        private ScrollBar fVerticalScrollBDup0ScrollBar;

        /// <summary>
        /// Backing field for BackbysmallamouDup0Button property
        /// </summary>
        private Button fBackbysmallamouDup0Button;

        /// <summary>
        /// Backing field for BackbylargeamouButton property
        /// </summary>
        private Button fBackbylargeamouButton;

        /// <summary>
        /// Backing field for ThumbThumb property
        /// </summary>
        private Thumb fThumbThumb;

        /// <summary>
        /// Backing field for ForwardbylargeaButton property
        /// </summary>
        private Button fForwardbylargeaButton;

        /// <summary>
        /// Backing field for ForwardbysmallaDup0Button property
        /// </summary>
        private Button fForwardbysmallaDup0Button;

        /// <summary>
        /// Backing field for FavoritesTreeItem property
        /// </summary>
        private TreeItem fFavoritesTreeItem;

        /// <summary>
        /// Backing field for DesktopDup0TreeItem property
        /// </summary>
        private TreeItem fDesktopDup0TreeItem;

        /// <summary>
        /// Backing field for DownloadsTreeItem property
        /// </summary>
        private TreeItem fDownloadsTreeItem;

        /// <summary>
        /// Backing field for RecentPlacesTreeItem property
        /// </summary>
        private TreeItem fRecentPlacesTreeItem;

        /// <summary>
        /// Backing field for DesktopDup1TreeItem property
        /// </summary>
        private TreeItem fDesktopDup1TreeItem;

        /// <summary>
        /// Backing field for LibrariesTreeItem property
        /// </summary>
        private TreeItem fLibrariesTreeItem;

        /// <summary>
        /// Backing field for DocumentsTreeItem property
        /// </summary>
        private TreeItem fDocumentsTreeItem;

        /// <summary>
        /// Backing field for MusicTreeItem property
        /// </summary>
        private TreeItem fMusicTreeItem;

        /// <summary>
        /// Backing field for PicturesTreeItem property
        /// </summary>
        private TreeItem fPicturesTreeItem;

        /// <summary>
        /// Backing field for SubversionTreeItem property
        /// </summary>
        private TreeItem fSubversionTreeItem;

        /// <summary>
        /// Backing field for VideosTreeItem property
        /// </summary>
        private TreeItem fVideosTreeItem;

        /// <summary>
        /// Backing field for ComputerTreeItem property
        /// </summary>
        private TreeItem fComputerTreeItem;

        /// <summary>
        /// Backing field for LocalDiskCTreeItem property
        /// </summary>
        private TreeItem fLocalDiskCTreeItem;

        /// <summary>
        /// Backing field for LocalDiskDTreeItem property
        /// </summary>
        private TreeItem fLocalDiskDTreeItem;

        /// <summary>
        /// Backing field for LocalDiskETreeItem property
        /// </summary>
        private TreeItem fLocalDiskETreeItem;

        /// <summary>
        /// Backing field for NetworkTreeItem property
        /// </summary>
        private TreeItem fNetworkTreeItem;

        /// <summary>
        /// Backing field for ShellFolderViewPane property
        /// </summary>
        private Pane fShellFolderViewPane;

        /// <summary>
        /// Backing field for ItemsViewUIItemList property
        /// </summary>
        private List fItemsViewUIItemList;

        /// <summary>
        /// Backing field for CtrlNotifySinkDup2Pane property
        /// </summary>
        private Pane fCtrlNotifySinkDup2Pane;

        /// <summary>
        /// Backing field for VerticalScrollBDup1ScrollBar property
        /// </summary>
        private ScrollBar fVerticalScrollBDup1ScrollBar;

        /// <summary>
        /// Backing field for LineupButton property
        /// </summary>
        private Button fLineupButton;

        /// <summary>
        /// Backing field for PositionCustom property
        /// </summary>
        private Custom fPositionCustom;

        /// <summary>
        /// Backing field for PagedownButton property
        /// </summary>
        private Button fPagedownButton;

        /// <summary>
        /// Backing field for LinedownButton property
        /// </summary>
        private Button fLinedownButton;

        /// <summary>
        /// Backing field for LibrariesUIItemListItem property
        /// </summary>
        private ListItem fLibrariesUIItemListItem;

        /// <summary>
        /// Backing field for UIDup0Image property
        /// </summary>
        private Image fUIDup0Image;

        /// <summary>
        /// Backing field for NameUIPropertySDup0Edit property
        /// </summary>
        private Edit fNameUIPropertySDup0Edit;

        /// <summary>
        /// Backing field for TypeUIPropertySDup0Edit property
        /// </summary>
        private Edit fTypeUIPropertySDup0Edit;

        /// <summary>
        /// Backing field for adminUIItem1ListItem property
        /// </summary>
        private ListItem fadminUIItem1ListItem;

        /// <summary>
        /// Backing field for UIDup1Image property
        /// </summary>
        private Image fUIDup1Image;

        /// <summary>
        /// Backing field for NameUIPropertySDup1Edit property
        /// </summary>
        private Edit fNameUIPropertySDup1Edit;

        /// <summary>
        /// Backing field for TypeUIPropertySDup1Edit property
        /// </summary>
        private Edit fTypeUIPropertySDup1Edit;

        /// <summary>
        /// Backing field for ComputerUIItem2ListItem property
        /// </summary>
        private ListItem fComputerUIItem2ListItem;

        /// <summary>
        /// Backing field for UIDup2Image property
        /// </summary>
        private Image fUIDup2Image;

        /// <summary>
        /// Backing field for NameUIPropertySDup2Edit property
        /// </summary>
        private Edit fNameUIPropertySDup2Edit;

        /// <summary>
        /// Backing field for TypeUIPropertySDup2Edit property
        /// </summary>
        private Edit fTypeUIPropertySDup2Edit;

        /// <summary>
        /// Backing field for NetworkUIItem3ListItem property
        /// </summary>
        private ListItem fNetworkUIItem3ListItem;

        /// <summary>
        /// Backing field for UIDup3Image property
        /// </summary>
        private Image fUIDup3Image;

        /// <summary>
        /// Backing field for NameUIPropertySDup3Edit property
        /// </summary>
        private Edit fNameUIPropertySDup3Edit;

        /// <summary>
        /// Backing field for TypeUIPropertySDup3Edit property
        /// </summary>
        private Edit fTypeUIPropertySDup3Edit;

        /// <summary>
        /// Backing field for TwainStuffsUIIListItem property
        /// </summary>
        private ListItem fTwainStuffsUIIListItem;

        /// <summary>
        /// Backing field for UIDup4Image property
        /// </summary>
        private Image fUIDup4Image;

        /// <summary>
        /// Backing field for NameUIPropertySDup4Edit property
        /// </summary>
        private Edit fNameUIPropertySDup4Edit;

        /// <summary>
        /// Backing field for TypeUIPropertySDup4Edit property
        /// </summary>
        private Edit fTypeUIPropertySDup4Edit;

        /// <summary>
        /// Backing field for A59FQRBJI8BtxtUListItem property
        /// </summary>
        private ListItem fA59FQRBJI8BtxtUListItem;

        /// <summary>
        /// Backing field for UIDup5Image property
        /// </summary>
        private Image fUIDup5Image;

        /// <summary>
        /// Backing field for NameUIPropertySDup5Edit property
        /// </summary>
        private Edit fNameUIPropertySDup5Edit;

        /// <summary>
        /// Backing field for TypeUIPropertySDup5Edit property
        /// </summary>
        private Edit fTypeUIPropertySDup5Edit;

        /// <summary>
        /// Backing field for SizeUIPropertySEdit property
        /// </summary>
        private Edit fSizeUIPropertySEdit;

        /// <summary>
        /// Backing field for DetailsPanePrevPane property
        /// </summary>
        private Pane fDetailsPanePrevPane;

        /// <summary>
        /// Backing field for FilenameCIDLabeText property
        /// </summary>
        private Text fFilenameCIDLabeText;

        /// <summary>
        /// Backing field for FilenameAppContComboBox property
        /// </summary>
        private ComboBox fFilenameAppContComboBox;

        /// <summary>
        /// Backing field for FilenameEdit100Edit property
        /// </summary>
        private Edit fFilenameEdit100Edit;

        /// <summary>
        /// Backing field for FilenameComboLBList property
        /// </summary>
        private List fFilenameComboLBList;

        /// <summary>
        /// Backing field for DropDownButtonDDup0Button property
        /// </summary>
        private Button fDropDownButtonDDup0Button;

        /// <summary>
        /// Backing field for SaveastypeCIDLaText property
        /// </summary>
        private Text fSaveastypeCIDLaText;

        /// <summary>
        /// Backing field for SaveastypeAppCoComboBox property
        /// </summary>
        private ComboBox fSaveastypeAppCoComboBox;

        /// <summary>
        /// Backing field for SaveastypeComboList property
        /// </summary>
        private List fSaveastypeComboList;

        /// <summary>
        /// Backing field for TextDocumentstxListItem property
        /// </summary>
        private ListItem fTextDocumentstxListItem;

        /// <summary>
        /// Backing field for AllFilesListItem property
        /// </summary>
        private ListItem fAllFilesListItem;

        /// <summary>
        /// Backing field for DropDownButtonDDup1Button property
        /// </summary>
        private Button fDropDownButtonDDup1Button;

        /// <summary>
        /// Backing field for SaveFieldsSaveDTree property
        /// </summary>
        private Tree fSaveFieldsSaveDTree;

        /// <summary>
        /// Backing field for ApplicationContTree property
        /// </summary>
        private Tree fApplicationContTree;

        /// <summary>
        /// Backing field for ToolbarWindow32Dup0ToolBar property
        /// </summary>
        private ToolBar fToolbarWindow32Dup0ToolBar;

        /// <summary>
        /// Backing field for HideFoldersItemButton property
        /// </summary>
        private Button fHideFoldersItemButton;

        /// <summary>
        /// Backing field for EncodingStaticText property
        /// </summary>
        private Text fEncodingStaticText;

        /// <summary>
        /// Backing field for EncodingComboBox property
        /// </summary>
        private ComboBox fEncodingComboBox;

        /// <summary>
        /// Backing field for EncodingComboLBList property
        /// </summary>
        private List fEncodingComboLBList;

        /// <summary>
        /// Backing field for ANSIListItem property
        /// </summary>
        private ListItem fANSIListItem;

        /// <summary>
        /// Backing field for UnicodeListItem property
        /// </summary>
        private ListItem fUnicodeListItem;

        /// <summary>
        /// Backing field for UnicodebigendiaListItem property
        /// </summary>
        private ListItem fUnicodebigendiaListItem;

        /// <summary>
        /// Backing field for UTF8ListItem property
        /// </summary>
        private ListItem fUTF8ListItem;

        /// <summary>
        /// Backing field for DropDownButtonDDup2Button property
        /// </summary>
        private Button fDropDownButtonDDup2Button;

        /// <summary>
        /// Backing field for SaveButton1Button property
        /// </summary>
        private Button fSaveButton1Button;

        /// <summary>
        /// Backing field for CancelButton2Button property
        /// </summary>
        private Button fCancelButton2Button;

        /// <summary>
        /// Backing field for ScrollBarPane property
        /// </summary>
        private Pane fScrollBarPane;

        /// <summary>
        /// Backing field for WorkerWPane property
        /// </summary>
        private Pane fWorkerWPane;

        /// <summary>
        /// Backing field for ReBarWindow3240Pane property
        /// </summary>
        private Pane fReBarWindow3240Pane;

        /// <summary>
        /// Backing field for TravelBandPane property
        /// </summary>
        private Pane fTravelBandPane;

        /// <summary>
        /// Backing field for ToolbarWindow32Dup1ToolBar property
        /// </summary>
        private ToolBar fToolbarWindow32Dup1ToolBar;

        /// <summary>
        /// Backing field for BackItem256Button property
        /// </summary>
        private Button fBackItem256Button;

        /// <summary>
        /// Backing field for ForwardItem257Button property
        /// </summary>
        private Button fForwardItem257Button;

        /// <summary>
        /// Backing field for RecentPagesItemButton property
        /// </summary>
        private Button fRecentPagesItemButton;

        /// <summary>
        /// Backing field for AddressBandRootPane property
        /// </summary>
        private Pane fAddressBandRootPane;

        /// <summary>
        /// Backing field for msctlsprogressProgressBar property
        /// </summary>
        private ProgressBar fmsctlsprogressProgressBar;

        /// <summary>
        /// Backing field for BreadcrumbParenPane property
        /// </summary>
        private Pane fBreadcrumbParenPane;

        /// <summary>
        /// Backing field for AddressDesktopTToolBar property
        /// </summary>
        private ToolBar fAddressDesktopTToolBar;

        /// <summary>
        /// Backing field for DesktopItem1280SplitButton property
        /// </summary>
        private SplitButton fDesktopItem1280SplitButton;

        /// <summary>
        /// Backing field for ToolbarWindow32Dup2ToolBar property
        /// </summary>
        private ToolBar fToolbarWindow32Dup2ToolBar;

        /// <summary>
        /// Backing field for PreviousLocatioButton property
        /// </summary>
        private Button fPreviousLocatioButton;

        /// <summary>
        /// Backing field for UniversalSearchPane property
        /// </summary>
        private Pane fUniversalSearchPane;

        /// <summary>
        /// Backing field for SearchBoxPane property
        /// </summary>
        private Pane fSearchBoxPane;

        /// <summary>
        /// Backing field for SearchEditBoxWrPane property
        /// </summary>
        private Pane fSearchEditBoxWrPane;

        /// <summary>
        /// Backing field for SearchDesktopSePane property
        /// </summary>
        private Pane fSearchDesktopSePane;

        /// <summary>
        /// Backing field for SearchBoxSearchEdit property
        /// </summary>
        private Edit fSearchBoxSearchEdit;

        /// <summary>
        /// Backing field for SearchButtonSeaButton property
        /// </summary>
        private Button fSearchButtonSeaButton;

        /// <summary>
        /// Backing field for RebarBandDup0I0XCustom property
        /// </summary>
        private Custom fRebarBandDup0I0XCustom;

        /// <summary>
        /// Backing field for RebarBandDup1I1XCustom property
        /// </summary>
        private Custom fRebarBandDup1I1XCustom;

        /// <summary>
        /// Backing field for RebarBandDup2I2XCustom property
        /// </summary>
        private Custom fRebarBandDup2I2XCustom;

        /// <summary>
        /// Backing field for SaveAsTitleBar property
        /// </summary>
        private TitleBar fSaveAsTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyDup0MenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyDup0MenuBar;

        /// <summary>
        /// Backing field for SystemItem1Dup0MenuItem property
        /// </summary>
        private MenuItem fSystemItem1Dup0MenuItem;

        /// <summary>
        /// Backing field for CloseCloseDup0Button property
        /// </summary>
        private Button fCloseCloseDup0Button;

        /// <summary>
        /// Backing field for Edit15Document property
        /// </summary>
        private Document fEdit15Document;

        /// <summary>
        /// Backing field for WindowGripCustom property
        /// </summary>
        private Custom fWindowGripCustom;

        /// <summary>
        /// Backing field for HorizontalScrolScrollBar property
        /// </summary>
        private ScrollBar fHorizontalScrolScrollBar;

        /// <summary>
        /// Backing field for BackbysmallamouDup1Button property
        /// </summary>
        private Button fBackbysmallamouDup1Button;

        /// <summary>
        /// Backing field for ForwardbysmallaDup1Button property
        /// </summary>
        private Button fForwardbysmallaDup1Button;

        /// <summary>
        /// Backing field for VerticalScrollBDup2ScrollBar property
        /// </summary>
        private ScrollBar fVerticalScrollBDup2ScrollBar;

        /// <summary>
        /// Backing field for BackbysmallamouDup2Button property
        /// </summary>
        private Button fBackbysmallamouDup2Button;

        /// <summary>
        /// Backing field for ForwardbysmallaDup2Button property
        /// </summary>
        private Button fForwardbysmallaDup2Button;

        /// <summary>
        /// Backing field for NewTextDocumentTitleBar property
        /// </summary>
        private TitleBar fNewTextDocumentTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyDup1MenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyDup1MenuBar;

        /// <summary>
        /// Backing field for SystemItem1Dup1MenuItem property
        /// </summary>
        private MenuItem fSystemItem1Dup1MenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizDup0Button property
        /// </summary>
        private Button fMinimizeMinimizDup0Button;

        /// <summary>
        /// Backing field for MaximizeMaximizDup0Button property
        /// </summary>
        private Button fMaximizeMaximizDup0Button;

        /// <summary>
        /// Backing field for CloseCloseDup1Button property
        /// </summary>
        private Button fCloseCloseDup1Button;

        /// <summary>
        /// Backing field for ApplicationMenuBar property
        /// </summary>
        private MenuBar fApplicationMenuBar;

        /// <summary>
        /// Backing field for FileItem1MenuItem property
        /// </summary>
        private MenuItem fFileItem1MenuItem;

        /// <summary>
        /// Backing field for EditItem2MenuItem property
        /// </summary>
        private MenuItem fEditItem2MenuItem;

        /// <summary>
        /// Backing field for FormatItem3MenuItem property
        /// </summary>
        private MenuItem fFormatItem3MenuItem;

        /// <summary>
        /// Backing field for ViewItem4MenuItem property
        /// </summary>
        private MenuItem fViewItem4MenuItem;

        /// <summary>
        /// Backing field for HelpItem5MenuItem property
        /// </summary>
        private MenuItem fHelpItem5MenuItem;

        /// <summary>
        /// Backing field for HPDigitalSendinWindow property
        /// </summary>
        private Window fHPDigitalSendinWindow;

        /// <summary>
        /// Backing field for AddPromptsWindoWindow property
        /// </summary>
        private Window fAddPromptsWindoWindow;

        /// <summary>
        /// Backing field for AddPromptsTitleBar property
        /// </summary>
        private TitleBar fAddPromptsTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyDup2MenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyDup2MenuBar;

        /// <summary>
        /// Backing field for SystemItem1Dup2MenuItem property
        /// </summary>
        private MenuItem fSystemItem1Dup2MenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizDup1Button property
        /// </summary>
        private Button fMinimizeMinimizDup1Button;

        /// <summary>
        /// Backing field for MaximizeMaximizDup1Button property
        /// </summary>
        private Button fMaximizeMaximizDup1Button;

        /// <summary>
        /// Backing field for CloseCloseDup2Button property
        /// </summary>
        private Button fCloseCloseDup2Button;

        /// <summary>
        /// Backing field for GroupBoxDup0Group property
        /// </summary>
        private Group fGroupBoxDup0Group;

        /// <summary>
        /// Backing field for AvailablePromptDup0Text property
        /// </summary>
        private Text fAvailablePromptDup0Text;

        /// <summary>
        /// Backing field for AvailablePromptDup1Text property
        /// </summary>
        private Text fAvailablePromptDup1Text;

        /// <summary>
        /// Backing field for ListBox62d278ccList property
        /// </summary>
        private List fListBox62d278ccList;

        /// <summary>
        /// Backing field for OCRFILENAMEListListItem property
        /// </summary>
        private ListItem fOCRFILENAMEListListItem;

        /// <summary>
        /// Backing field for OCRFILENAMETextText property
        /// </summary>
        private Text fOCRFILENAMETextText;

        /// <summary>
        /// Backing field for Image5A2956C841Image property
        /// </summary>
        private Image fImage5A2956C841Image;

        /// <summary>
        /// Backing field for GroupBoxDup1I0XGroup property
        /// </summary>
        private Group fGroupBoxDup1I0XGroup;

        /// <summary>
        /// Backing field for Button58234b8b2Button property
        /// </summary>
        private Button fButton58234b8b2Button;

        /// <summary>
        /// Backing field for ImageDup0Image property
        /// </summary>
        private Image fImageDup0Image;

        /// <summary>
        /// Backing field for Button3b14973e7Button property
        /// </summary>
        private Button fButton3b14973e7Button;

        /// <summary>
        /// Backing field for ImageDup1Image property
        /// </summary>
        private Image fImageDup1Image;

        /// <summary>
        /// Backing field for GroupBoxDup2I1XGroup property
        /// </summary>
        private Group fGroupBoxDup2I1XGroup;

        /// <summary>
        /// Backing field for NewButtond6f529Button property
        /// </summary>
        private Button fNewButtond6f529Button;

        /// <summary>
        /// Backing field for NewTextBlockText property
        /// </summary>
        private Text fNewTextBlockText;

        /// <summary>
        /// Backing field for EditButtonb4df6Button property
        /// </summary>
        private Button fEditButtonb4df6Button;

        /// <summary>
        /// Backing field for EditTextBlockDup0Text property
        /// </summary>
        private Text fEditTextBlockDup0Text;

        /// <summary>
        /// Backing field for DeleteButton8ecButton property
        /// </summary>
        private Button fDeleteButton8ecButton;

        /// <summary>
        /// Backing field for DeleteTextBlockText property
        /// </summary>
        private Text fDeleteTextBlockText;

        /// <summary>
        /// Backing field for PromptListText property
        /// </summary>
        private Text fPromptListText;

        /// <summary>
        /// Backing field for PromptListTextBText property
        /// </summary>
        private Text fPromptListTextBText;

        /// <summary>
        /// Backing field for ListBoxd5d588ddList property
        /// </summary>
        private List fListBoxd5d588ddList;

        /// <summary>
        /// Backing field for Buttonfb8688204Button property
        /// </summary>
        private Button fButtonfb8688204Button;

        /// <summary>
        /// Backing field for ImageDup2Image property
        /// </summary>
        private Image fImageDup2Image;

        /// <summary>
        /// Backing field for Button98ceca8e6Button property
        /// </summary>
        private Button fButton98ceca8e6Button;

        /// <summary>
        /// Backing field for ImageDup3Image property
        /// </summary>
        private Image fImageDup3Image;

        /// <summary>
        /// Backing field for OKButton5fc8b2bButton property
        /// </summary>
        private Button fOKButton5fc8b2bButton;

        /// <summary>
        /// Backing field for OKTextBlockDup0Text property
        /// </summary>
        private Text fOKTextBlockDup0Text;

        /// <summary>
        /// Backing field for CancelButtonf87Button property
        /// </summary>
        private Button fCancelButtonf87Button;

        /// <summary>
        /// Backing field for CancelTextBlockDup0Text property
        /// </summary>
        private Text fCancelTextBlockDup0Text;

        /// <summary>
        /// Backing field for HelpButtonc1b1bButton property
        /// </summary>
        private Button fHelpButtonc1b1bButton;

        /// <summary>
        /// Backing field for HelpTextBlockDup0Text property
        /// </summary>
        private Text fHelpTextBlockDup0Text;

        /// <summary>
        /// Backing field for HPDigitalSendinTitleBar property
        /// </summary>
        private TitleBar fHPDigitalSendinTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyDup3MenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyDup3MenuBar;

        /// <summary>
        /// Backing field for SystemItem1Dup3MenuItem property
        /// </summary>
        private MenuItem fSystemItem1Dup3MenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizDup2Button property
        /// </summary>
        private Button fMinimizeMinimizDup2Button;

        /// <summary>
        /// Backing field for RestoreRestoreButton property
        /// </summary>
        private Button fRestoreRestoreButton;

        /// <summary>
        /// Backing field for CloseCloseDup3Button property
        /// </summary>
        private Button fCloseCloseDup3Button;

        /// <summary>
        /// Backing field for HelpButtonCB8CFButton property
        /// </summary>
        private Button fHelpButtonCB8CFButton;

        /// <summary>
        /// Backing field for HelpTextBlockDup1Text property
        /// </summary>
        private Text fHelpTextBlockDup1Text;

        /// <summary>
        /// Backing field for ApplyButton61E2Button property
        /// </summary>
        private Button fApplyButton61E2Button;

        /// <summary>
        /// Backing field for ApplyTextBlockText property
        /// </summary>
        private Text fApplyTextBlockText;

        /// <summary>
        /// Backing field for CancelButton65CButton property
        /// </summary>
        private Button fCancelButton65CButton;

        /// <summary>
        /// Backing field for CancelTextBlockDup1Text property
        /// </summary>
        private Text fCancelTextBlockDup1Text;

        /// <summary>
        /// Backing field for OKButtonCC2EF49Button property
        /// </summary>
        private Button fOKButtonCC2EF49Button;

        /// <summary>
        /// Backing field for OKTextBlockDup1Text property
        /// </summary>
        private Text fOKTextBlockDup1Text;

        /// <summary>
        /// Backing field for TabControlec0fdTab property
        /// </summary>
        private Tab fTabControlec0fdTab;

        /// <summary>
        /// Backing field for SystemWindowsCoDup0TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup0TabItem;

        /// <summary>
        /// Backing field for GeneralTextmGenText property
        /// </summary>
        private Text fGeneralTextmGenText;

        /// <summary>
        /// Backing field for GeneralTextBlocText property
        /// </summary>
        private Text fGeneralTextBlocText;

        /// <summary>
        /// Backing field for Text933345b04e3Text property
        /// </summary>
        private Text fText933345b04e3Text;

        /// <summary>
        /// Backing field for Text786caf67344Text property
        /// </summary>
        private Text fText786caf67344Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup1TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup1TabItem;

        /// <summary>
        /// Backing field for AuthenticationTDup0Text property
        /// </summary>
        private Text fAuthenticationTDup0Text;

        /// <summary>
        /// Backing field for AuthenticationTDup1Text property
        /// </summary>
        private Text fAuthenticationTDup1Text;

        /// <summary>
        /// Backing field for Text31EC91730B9Text property
        /// </summary>
        private Text fText31EC91730B9Text;

        /// <summary>
        /// Backing field for TextA479C271445Text property
        /// </summary>
        private Text fTextA479C271445Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup2TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup2TabItem;

        /// <summary>
        /// Backing field for EmailTextmEmailText property
        /// </summary>
        private Text fEmailTextmEmailText;

        /// <summary>
        /// Backing field for EmailTextBlockText property
        /// </summary>
        private Text fEmailTextBlockText;

        /// <summary>
        /// Backing field for Text32de714a8bdText property
        /// </summary>
        private Text fText32de714a8bdText;

        /// <summary>
        /// Backing field for Text3b2a8761f4fText property
        /// </summary>
        private Text fText3b2a8761f4fText;

        /// <summary>
        /// Backing field for TextBlockDup0Text property
        /// </summary>
        private Text fTextBlockDup0Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup3TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup3TabItem;

        /// <summary>
        /// Backing field for FaxTextmFaxTabLText property
        /// </summary>
        private Text fFaxTextmFaxTabLText;

        /// <summary>
        /// Backing field for FaxTextBlockText property
        /// </summary>
        private Text fFaxTextBlockText;

        /// <summary>
        /// Backing field for TextD1ED4F16F38Text property
        /// </summary>
        private Text fTextD1ED4F16F38Text;

        /// <summary>
        /// Backing field for Text7DDE04FD251Text property
        /// </summary>
        private Text fText7DDE04FD251Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup4TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup4TabItem;

        /// <summary>
        /// Backing field for SendtoFolderTexDup0Text property
        /// </summary>
        private Text fSendtoFolderTexDup0Text;

        /// <summary>
        /// Backing field for SendtoFolderTexDup1Text property
        /// </summary>
        private Text fSendtoFolderTexDup1Text;

        /// <summary>
        /// Backing field for Text7a57f43ecb1Text property
        /// </summary>
        private Text fText7a57f43ecb1Text;

        /// <summary>
        /// Backing field for Text654b650dd19Text property
        /// </summary>
        private Text fText654b650dd19Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup5TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup5TabItem;

        /// <summary>
        /// Backing field for WorkflowsTextmWText property
        /// </summary>
        private Text fWorkflowsTextmWText;

        /// <summary>
        /// Backing field for WorkflowsTextBlDup0Text property
        /// </summary>
        private Text fWorkflowsTextBlDup0Text;

        /// <summary>
        /// Backing field for Text22D9C34E84CText property
        /// </summary>
        private Text fText22D9C34E84CText;

        /// <summary>
        /// Backing field for TextBlockDup1Text property
        /// </summary>
        private Text fTextBlockDup1Text;

        /// <summary>
        /// Backing field for TextC8D15BD39C8Text property
        /// </summary>
        private Text fTextC8D15BD39C8Text;

        /// <summary>
        /// Backing field for EnableWorkflowsCheckBox property
        /// </summary>
        private CheckBox fEnableWorkflowsCheckBox;

        /// <summary>
        /// Backing field for WorkflowsGroupBGroup property
        /// </summary>
        private Group fWorkflowsGroupBGroup;

        /// <summary>
        /// Backing field for WorkflowsTextBlDup1Text property
        /// </summary>
        private Text fWorkflowsTextBlDup1Text;

        /// <summary>
        /// Backing field for DisplayPromptTeCheckBox property
        /// </summary>
        private CheckBox fDisplayPromptTeCheckBox;

        /// <summary>
        /// Backing field for DisplayPromptTeText property
        /// </summary>
        private Text fDisplayPromptTeText;

        /// <summary>
        /// Backing field for Buttona1be7942bButton property
        /// </summary>
        private Button fButtona1be7942bButton;

        /// <summary>
        /// Backing field for ImageDup4Image property
        /// </summary>
        private Image fImageDup4Image;

        /// <summary>
        /// Backing field for AddGroupText property
        /// </summary>
        private Text fAddGroupText;

        /// <summary>
        /// Backing field for AddGroupTextBloText property
        /// </summary>
        private Text fAddGroupTextBloText;

        /// <summary>
        /// Backing field for Button1864d3cfeButton property
        /// </summary>
        private Button fButton1864d3cfeButton;

        /// <summary>
        /// Backing field for ImageDup5Image property
        /// </summary>
        private Image fImageDup5Image;

        /// <summary>
        /// Backing field for AddMenuText property
        /// </summary>
        private Text fAddMenuText;

        /// <summary>
        /// Backing field for AddMenuTextBlocText property
        /// </summary>
        private Text fAddMenuTextBlocText;

        /// <summary>
        /// Backing field for Button13d3c30c3Button property
        /// </summary>
        private Button fButton13d3c30c3Button;

        /// <summary>
        /// Backing field for ImageDup6Image property
        /// </summary>
        private Image fImageDup6Image;

        /// <summary>
        /// Backing field for AddFormText property
        /// </summary>
        private Text fAddFormText;

        /// <summary>
        /// Backing field for AddFormTextBlocText property
        /// </summary>
        private Text fAddFormTextBlocText;

        /// <summary>
        /// Backing field for Buttond508dee64Button property
        /// </summary>
        private Button fButtond508dee64Button;

        /// <summary>
        /// Backing field for ImageDup7Image property
        /// </summary>
        private Image fImageDup7Image;

        /// <summary>
        /// Backing field for AddPromptsText property
        /// </summary>
        private Text fAddPromptsText;

        /// <summary>
        /// Backing field for AddPromptsTextBText property
        /// </summary>
        private Text fAddPromptsTextBText;

        /// <summary>
        /// Backing field for EditButton252ecButton property
        /// </summary>
        private Button fEditButton252ecButton;

        /// <summary>
        /// Backing field for EditTextBlockDup1Text property
        /// </summary>
        private Text fEditTextBlockDup1Text;

        /// <summary>
        /// Backing field for RemoveButton148Button property
        /// </summary>
        private Button fRemoveButton148Button;

        /// <summary>
        /// Backing field for RemoveTextBlockText property
        /// </summary>
        private Text fRemoveTextBlockText;

        /// <summary>
        /// Backing field for TreeViewd9ec713Tree property
        /// </summary>
        private Tree fTreeViewd9ec713Tree;

        /// <summary>
        /// Backing field for COMMONMFPGROUPTTreeItem property
        /// </summary>
        private TreeItem fCOMMONMFPGROUPTTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup0Button property
        /// </summary>
        private Button fButtonExpanderDup0Button;

        /// <summary>
        /// Backing field for ImageDup8Image property
        /// </summary>
        private Image fImageDup8Image;

        /// <summary>
        /// Backing field for COMMONMFPGROUPTText property
        /// </summary>
        private Text fCOMMONMFPGROUPTText;

        /// <summary>
        /// Backing field for xsTreeViewItemDup0TreeItem property
        /// </summary>
        private TreeItem fxsTreeViewItemDup0TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup1Button property
        /// </summary>
        private Button fButtonExpanderDup1Button;

        /// <summary>
        /// Backing field for ImageDup9Image property
        /// </summary>
        private Image fImageDup9Image;

        /// <summary>
        /// Backing field for xsTextBlockDup0Text property
        /// </summary>
        private Text fxsTextBlockDup0Text;

        /// <summary>
        /// Backing field for xsTreeViewItemDup1TreeItem property
        /// </summary>
        private TreeItem fxsTreeViewItemDup1TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup2Button property
        /// </summary>
        private Button fButtonExpanderDup2Button;

        /// <summary>
        /// Backing field for ImageDup10Image property
        /// </summary>
        private Image fImageDup10Image;

        /// <summary>
        /// Backing field for xsTextBlockDup1Text property
        /// </summary>
        private Text fxsTextBlockDup1Text;

        /// <summary>
        /// Backing field for SanthoshTreeVieTreeItem property
        /// </summary>
        private TreeItem fSanthoshTreeVieTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup3Button property
        /// </summary>
        private Button fButtonExpanderDup3Button;

        /// <summary>
        /// Backing field for ImageDup11Image property
        /// </summary>
        private Image fImageDup11Image;

        /// <summary>
        /// Backing field for SanthoshTextBloText property
        /// </summary>
        private Text fSanthoshTextBloText;

        /// <summary>
        /// Backing field for RohitTreeViewItTreeItem property
        /// </summary>
        private TreeItem fRohitTreeViewItTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup4Button property
        /// </summary>
        private Button fButtonExpanderDup4Button;

        /// <summary>
        /// Backing field for ImageDup12Image property
        /// </summary>
        private Image fImageDup12Image;

        /// <summary>
        /// Backing field for RohitTextBlockText property
        /// </summary>
        private Text fRohitTextBlockText;

        /// <summary>
        /// Backing field for GaTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fGaTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup5Button property
        /// </summary>
        private Button fButtonExpanderDup5Button;

        /// <summary>
        /// Backing field for ImageDup13Image property
        /// </summary>
        private Image fImageDup13Image;

        /// <summary>
        /// Backing field for GaTextBlockText property
        /// </summary>
        private Text fGaTextBlockText;

        /// <summary>
        /// Backing field for SantTreeViewIteTreeItem property
        /// </summary>
        private TreeItem fSantTreeViewIteTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup6Button property
        /// </summary>
        private Button fButtonExpanderDup6Button;

        /// <summary>
        /// Backing field for ImageDup14Image property
        /// </summary>
        private Image fImageDup14Image;

        /// <summary>
        /// Backing field for SantTextBlockText property
        /// </summary>
        private Text fSantTextBlockText;

        /// <summary>
        /// Backing field for SwapnaTreeViewITreeItem property
        /// </summary>
        private TreeItem fSwapnaTreeViewITreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup7Button property
        /// </summary>
        private Button fButtonExpanderDup7Button;

        /// <summary>
        /// Backing field for ImageDup15Image property
        /// </summary>
        private Image fImageDup15Image;

        /// <summary>
        /// Backing field for SwapnaTextBlockText property
        /// </summary>
        private Text fSwapnaTextBlockText;

        /// <summary>
        /// Backing field for qwqwqTreeViewItTreeItem property
        /// </summary>
        private TreeItem fqwqwqTreeViewItTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup8Button property
        /// </summary>
        private Button fButtonExpanderDup8Button;

        /// <summary>
        /// Backing field for ImageDup16Image property
        /// </summary>
        private Image fImageDup16Image;

        /// <summary>
        /// Backing field for qwqwqTextBlockText property
        /// </summary>
        private Text fqwqwqTextBlockText;

        /// <summary>
        /// Backing field for TestTreeViewIteTreeItem property
        /// </summary>
        private TreeItem fTestTreeViewIteTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup9Button property
        /// </summary>
        private Button fButtonExpanderDup9Button;

        /// <summary>
        /// Backing field for ImageDup17Image property
        /// </summary>
        private Image fImageDup17Image;

        /// <summary>
        /// Backing field for TestTextBlockText property
        /// </summary>
        private Text fTestTextBlockText;

        /// <summary>
        /// Backing field for SNFTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fSNFTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup10Button property
        /// </summary>
        private Button fButtonExpanderDup10Button;

        /// <summary>
        /// Backing field for ImageDup18Image property
        /// </summary>
        private Image fImageDup18Image;

        /// <summary>
        /// Backing field for SNFTextBlockText property
        /// </summary>
        private Text fSNFTextBlockText;

        /// <summary>
        /// Backing field for RajTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fRajTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup11Button property
        /// </summary>
        private Button fButtonExpanderDup11Button;

        /// <summary>
        /// Backing field for ImageDup19Image property
        /// </summary>
        private Image fImageDup19Image;

        /// <summary>
        /// Backing field for RajTextBlockText property
        /// </summary>
        private Text fRajTextBlockText;

        /// <summary>
        /// Backing field for xsTreeViewItemDup2TreeItem property
        /// </summary>
        private TreeItem fxsTreeViewItemDup2TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup12Button property
        /// </summary>
        private Button fButtonExpanderDup12Button;

        /// <summary>
        /// Backing field for ImageDup20Image property
        /// </summary>
        private Image fImageDup20Image;

        /// <summary>
        /// Backing field for xsTextBlockDup2Text property
        /// </summary>
        private Text fxsTextBlockDup2Text;

        /// <summary>
        /// Backing field for cdTreeViewItemDup0TreeItem property
        /// </summary>
        private TreeItem fcdTreeViewItemDup0TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup13Button property
        /// </summary>
        private Button fButtonExpanderDup13Button;

        /// <summary>
        /// Backing field for ImageDup21Image property
        /// </summary>
        private Image fImageDup21Image;

        /// <summary>
        /// Backing field for cdTextBlockDup0Text property
        /// </summary>
        private Text fcdTextBlockDup0Text;

        /// <summary>
        /// Backing field for cdTreeViewItemDup1TreeItem property
        /// </summary>
        private TreeItem fcdTreeViewItemDup1TreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup14Button property
        /// </summary>
        private Button fButtonExpanderDup14Button;

        /// <summary>
        /// Backing field for ImageDup22Image property
        /// </summary>
        private Image fImageDup22Image;

        /// <summary>
        /// Backing field for cdTextBlockDup1Text property
        /// </summary>
        private Text fcdTextBlockDup1Text;

        /// <summary>
        /// Backing field for djTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fdjTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup15Button property
        /// </summary>
        private Button fButtonExpanderDup15Button;

        /// <summary>
        /// Backing field for ImageDup23Image property
        /// </summary>
        private Image fImageDup23Image;

        /// <summary>
        /// Backing field for djTextBlockText property
        /// </summary>
        private Text fdjTextBlockText;

        /// <summary>
        /// Backing field for djjTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fdjjTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup16Button property
        /// </summary>
        private Button fButtonExpanderDup16Button;

        /// <summary>
        /// Backing field for ImageDup24Image property
        /// </summary>
        private Image fImageDup24Image;

        /// <summary>
        /// Backing field for djjTextBlockText property
        /// </summary>
        private Text fdjjTextBlockText;

        /// <summary>
        /// Backing field for RamTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fRamTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup17Button property
        /// </summary>
        private Button fButtonExpanderDup17Button;

        /// <summary>
        /// Backing field for ImageDup25Image property
        /// </summary>
        private Image fImageDup25Image;

        /// <summary>
        /// Backing field for RamTextBlockText property
        /// </summary>
        private Text fRamTextBlockText;

        /// <summary>
        /// Backing field for RaamaTreeViewItTreeItem property
        /// </summary>
        private TreeItem fRaamaTreeViewItTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup18Button property
        /// </summary>
        private Button fButtonExpanderDup18Button;

        /// <summary>
        /// Backing field for ImageDup26Image property
        /// </summary>
        private Image fImageDup26Image;

        /// <summary>
        /// Backing field for RaamaTextBlockText property
        /// </summary>
        private Text fRaamaTextBlockText;

        /// <summary>
        /// Backing field for PrasTreeViewIteTreeItem property
        /// </summary>
        private TreeItem fPrasTreeViewIteTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup19Button property
        /// </summary>
        private Button fButtonExpanderDup19Button;

        /// <summary>
        /// Backing field for Image6C67385BE4Dup0Image property
        /// </summary>
        private Image fImage6C67385BE4Dup0Image;

        /// <summary>
        /// Backing field for PrasTextBlockText property
        /// </summary>
        private Text fPrasTextBlockText;

        /// <summary>
        /// Backing field for ReaTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fReaTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup20Button property
        /// </summary>
        private Button fButtonExpanderDup20Button;

        /// <summary>
        /// Backing field for ImageDup27Image property
        /// </summary>
        private Image fImageDup27Image;

        /// <summary>
        /// Backing field for ReaTextBlockText property
        /// </summary>
        private Text fReaTextBlockText;

        /// <summary>
        /// Backing field for ReasdTreeViewItTreeItem property
        /// </summary>
        private TreeItem fReasdTreeViewItTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup21Button property
        /// </summary>
        private Button fButtonExpanderDup21Button;

        /// <summary>
        /// Backing field for ImageDup28Image property
        /// </summary>
        private Image fImageDup28Image;

        /// <summary>
        /// Backing field for ReasdTextBlockText property
        /// </summary>
        private Text fReasdTextBlockText;

        /// <summary>
        /// Backing field for ddTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fddTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup22Button property
        /// </summary>
        private Button fButtonExpanderDup22Button;

        /// <summary>
        /// Backing field for Image6C67385BE4Dup1Image property
        /// </summary>
        private Image fImage6C67385BE4Dup1Image;

        /// <summary>
        /// Backing field for ddTextBlockText property
        /// </summary>
        private Text fddTextBlockText;

        /// <summary>
        /// Backing field for rdrTreeViewItemTreeItem property
        /// </summary>
        private TreeItem frdrTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup23Button property
        /// </summary>
        private Button fButtonExpanderDup23Button;

        /// <summary>
        /// Backing field for ImageDup29Image property
        /// </summary>
        private Image fImageDup29Image;

        /// <summary>
        /// Backing field for rdrTextBlockText property
        /// </summary>
        private Text frdrTextBlockText;

        /// <summary>
        /// Backing field for RaqTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fRaqTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup24Button property
        /// </summary>
        private Button fButtonExpanderDup24Button;

        /// <summary>
        /// Backing field for ImageDup30Image property
        /// </summary>
        private Image fImageDup30Image;

        /// <summary>
        /// Backing field for RaqTextBlockText property
        /// </summary>
        private Text fRaqTextBlockText;

        /// <summary>
        /// Backing field for qweTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fqweTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup25Button property
        /// </summary>
        private Button fButtonExpanderDup25Button;

        /// <summary>
        /// Backing field for ImageDup31Image property
        /// </summary>
        private Image fImageDup31Image;

        /// <summary>
        /// Backing field for qweTextBlockText property
        /// </summary>
        private Text fqweTextBlockText;

        /// <summary>
        /// Backing field for csTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fcsTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup26Button property
        /// </summary>
        private Button fButtonExpanderDup26Button;

        /// <summary>
        /// Backing field for Image6C67385BE4Dup2Image property
        /// </summary>
        private Image fImage6C67385BE4Dup2Image;

        /// <summary>
        /// Backing field for csTextBlockText property
        /// </summary>
        private Text fcsTextBlockText;

        /// <summary>
        /// Backing field for rdTreeViewItemTreeItem property
        /// </summary>
        private TreeItem frdTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup27Button property
        /// </summary>
        private Button fButtonExpanderDup27Button;

        /// <summary>
        /// Backing field for ImageDup32Image property
        /// </summary>
        private Image fImageDup32Image;

        /// <summary>
        /// Backing field for rdTextBlockText property
        /// </summary>
        private Text frdTextBlockText;

        /// <summary>
        /// Backing field for drdTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fdrdTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup28Button property
        /// </summary>
        private Button fButtonExpanderDup28Button;

        /// <summary>
        /// Backing field for ImageDup33Image property
        /// </summary>
        private Image fImageDup33Image;

        /// <summary>
        /// Backing field for drdTextBlockText property
        /// </summary>
        private Text fdrdTextBlockText;

        /// <summary>
        /// Backing field for sTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fsTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup29Button property
        /// </summary>
        private Button fButtonExpanderDup29Button;

        /// <summary>
        /// Backing field for Image6C67385BE4Dup3Image property
        /// </summary>
        private Image fImage6C67385BE4Dup3Image;

        /// <summary>
        /// Backing field for sTextBlockText property
        /// </summary>
        private Text fsTextBlockText;

        /// <summary>
        /// Backing field for HgfTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fHgfTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup30Button property
        /// </summary>
        private Button fButtonExpanderDup30Button;

        /// <summary>
        /// Backing field for ImageDup34Image property
        /// </summary>
        private Image fImageDup34Image;

        /// <summary>
        /// Backing field for HgfTextBlockText property
        /// </summary>
        private Text fHgfTextBlockText;

        /// <summary>
        /// Backing field for HgfdwdwqqwdwqdTTreeItem property
        /// </summary>
        private TreeItem fHgfdwdwqqwdwqdTTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup31Button property
        /// </summary>
        private Button fButtonExpanderDup31Button;

        /// <summary>
        /// Backing field for ImageDup35Image property
        /// </summary>
        private Image fImageDup35Image;

        /// <summary>
        /// Backing field for HgfdwdwqqwdwqdTText property
        /// </summary>
        private Text fHgfdwdwqqwdwqdTText;

        /// <summary>
        /// Backing field for JhgwdqqdwwqdwqTTreeItem property
        /// </summary>
        private TreeItem fJhgwdqqdwwqdwqTTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup32Button property
        /// </summary>
        private Button fButtonExpanderDup32Button;

        /// <summary>
        /// Backing field for ImageDup36Image property
        /// </summary>
        private Image fImageDup36Image;

        /// <summary>
        /// Backing field for JhgwdqqdwwqdwqTText property
        /// </summary>
        private Text fJhgwdqqdwwqdwqTText;

        /// <summary>
        /// Backing field for hdwdqdwwqdTreeVTreeItem property
        /// </summary>
        private TreeItem fhdwdqdwwqdTreeVTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup33Button property
        /// </summary>
        private Button fButtonExpanderDup33Button;

        /// <summary>
        /// Backing field for Image6C67385BE4Dup4Image property
        /// </summary>
        private Image fImage6C67385BE4Dup4Image;

        /// <summary>
        /// Backing field for hdwdqdwwqdTextBText property
        /// </summary>
        private Text fhdwdqdwwqdTextBText;

        /// <summary>
        /// Backing field for rdsdcTreeViewItTreeItem property
        /// </summary>
        private TreeItem frdsdcTreeViewItTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup34Button property
        /// </summary>
        private Button fButtonExpanderDup34Button;

        /// <summary>
        /// Backing field for ImageDup37Image property
        /// </summary>
        private Image fImageDup37Image;

        /// <summary>
        /// Backing field for rdsdcTextBlockText property
        /// </summary>
        private Text frdsdcTextBlockText;

        /// <summary>
        /// Backing field for GGfTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fGGfTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup35Button property
        /// </summary>
        private Button fButtonExpanderDup35Button;

        /// <summary>
        /// Backing field for ImageDup38Image property
        /// </summary>
        private Image fImageDup38Image;

        /// <summary>
        /// Backing field for GGfTextBlockText property
        /// </summary>
        private Text fGGfTextBlockText;

        /// <summary>
        /// Backing field for FFTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fFFTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup36Button property
        /// </summary>
        private Button fButtonExpanderDup36Button;

        /// <summary>
        /// Backing field for ImageDup39Image property
        /// </summary>
        private Image fImageDup39Image;

        /// <summary>
        /// Backing field for FFTextBlockText property
        /// </summary>
        private Text fFFTextBlockText;

        /// <summary>
        /// Backing field for PaaTreeViewItemTreeItem property
        /// </summary>
        private TreeItem fPaaTreeViewItemTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderDup37Button property
        /// </summary>
        private Button fButtonExpanderDup37Button;

        /// <summary>
        /// Backing field for Image6C67385BE4Dup5Image property
        /// </summary>
        private Image fImage6C67385BE4Dup5Image;

        /// <summary>
        /// Backing field for PaaTextBlockText property
        /// </summary>
        private Text fPaaTextBlockText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup6TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup6TabItem;

        /// <summary>
        /// Backing field for AddressingTextmText property
        /// </summary>
        private Text fAddressingTextmText;

        /// <summary>
        /// Backing field for AddressingTextBText property
        /// </summary>
        private Text fAddressingTextBText;

        /// <summary>
        /// Backing field for Text47EB5CBA4D1Text property
        /// </summary>
        private Text fText47EB5CBA4D1Text;

        /// <summary>
        /// Backing field for Text0757E148179Text property
        /// </summary>
        private Text fText0757E148179Text;

        /// <summary>
        /// Backing field for DeviceConfiguraTabItem property
        /// </summary>
        private TabItem fDeviceConfiguraTabItem;

        /// <summary>
        /// Backing field for DeviceConfiguraText property
        /// </summary>
        private Text fDeviceConfiguraText;

        /// <summary>
        /// Backing field for TemplateConfiguTabItem property
        /// </summary>
        private TabItem fTemplateConfiguTabItem;

        /// <summary>
        /// Backing field for TemplateConfiguText property
        /// </summary>
        private Text fTemplateConfiguText;

        /// <summary>
        /// Backing field for LogTabItem9b4f3TabItem property
        /// </summary>
        private TabItem fLogTabItem9b4f3TabItem;

        /// <summary>
        /// Backing field for LogTextBlockText property
        /// </summary>
        private Text fLogTextBlockText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup7TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup7TabItem;

        /// <summary>
        /// Backing field for SecurityTextmSeText property
        /// </summary>
        private Text fSecurityTextmSeText;

        /// <summary>
        /// Backing field for SecurityTextBloText property
        /// </summary>
        private Text fSecurityTextBloText;

        /// <summary>
        /// Backing field for Text8A7A84DB894Text property
        /// </summary>
        private Text fText8A7A84DB894Text;

        /// <summary>
        /// Backing field for Text16F78FB18FFText property
        /// </summary>
        private Text fText16F78FB18FFText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup8TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup8TabItem;

        /// <summary>
        /// Backing field for AnalyticsTextmAText property
        /// </summary>
        private Text fAnalyticsTextmAText;

        /// <summary>
        /// Backing field for AnalyticsTextBlText property
        /// </summary>
        private Text fAnalyticsTextBlText;

        /// <summary>
        /// Backing field for AboutTabItemf45TabItem property
        /// </summary>
        private TabItem fAboutTabItemf45TabItem;

        /// <summary>
        /// Backing field for AboutTextBlockText property
        /// </summary>
        private Text fAboutTextBlockText;

        /// <summary>
        /// Backing field for TextBoxc93b2243Edit property
        /// </summary>
        private Edit fTextBoxc93b2243Edit;

        /// <summary>
        /// Backing field for PromptSettingsGGroup property
        /// </summary>
        private Group fPromptSettingsGGroup;

        /// <summary>
        /// Backing field for OKButton249af4fButton property
        /// </summary>
        private Button fOKButton249af4fButton;

        /// <summary>
        /// Backing field for ResponseSettingGroup property
        /// </summary>
        private Group fResponseSettingGroup;

        /// <summary>
        /// Backing field for WorkflowPromptWWindow property
        /// </summary>
        private Window fWorkflowPromptWWindow;

        /// <summary>
        /// Backing field for UserMustSupplyaCheckBox property
        /// </summary>
        private CheckBox fUserMustSupplyaCheckBox;

        /// <summary>
        /// The Ip Address
        /// </summary>
        private string _ipAddress;

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_OCRPrompt"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public DSS_OCRPrompt(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_OCRPrompt"/> class using the default UIAFramework.
        /// </summary>   
        /// <param name="address">
        /// The IP Address.
        /// </param>
        public DSS_OCRPrompt(string address)
        {
            Desktop = new Desktop();
            _ipAddress = address;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_OCRPrompt"/> class using the default UIAFramework.
        /// </summary>
        public DSS_OCRPrompt()
        {
            Desktop = new Desktop();
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        /// <summary>
        /// Gets Reference to NewTextDocumentWindow
        /// </summary>
        public Window NewTextDocumentWindow
        {
            get
            {
                if (null == fNewTextDocumentWindow)
                {
                    fNewTextDocumentWindow = new Window("NewTextDocumentWindow", Desktop);
                    fNewTextDocumentWindow.UIMap.Scope = UIASeachScope.Children;
                    fNewTextDocumentWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"New Text Document.txt - Notepad");
                    fNewTextDocumentWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Notepad");
                }

                return fNewTextDocumentWindow;
            }
        }

        /// <summary>
        /// Gets Reference to SaveAs32770Window
        /// </summary>
        public Window SaveAs32770Window
        {
            get
            {
                if (null == fSaveAs32770Window)
                {
                    fSaveAs32770Window = new Window("SaveAs32770Window", NewTextDocumentWindow);
                    fSaveAs32770Window.UIMap.Scope = UIASeachScope.Children;
                    fSaveAs32770Window.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save As");
                    fSaveAs32770Window.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fSaveAs32770Window;
            }
        }

        /// <summary>
        /// Gets Reference to DUIViewWndClassPane
        /// </summary>
        public Pane DUIViewWndClassPane
        {
            get
            {
                if (null == fDUIViewWndClassPane)
                {
                    fDUIViewWndClassPane = new Pane("DUIViewWndClassPane", SaveAs32770Window);
                    fDUIViewWndClassPane.UIMap.Scope = UIASeachScope.Children;
                    fDUIViewWndClassPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"DUIViewWndClassName");
                }

                return fDUIViewWndClassPane;
            }
        }

        /// <summary>
        /// Gets Reference to ExplorerPaneHWNPane
        /// </summary>
        public Pane ExplorerPaneHWNPane
        {
            get
            {
                if (null == fExplorerPaneHWNPane)
                {
                    fExplorerPaneHWNPane = new Pane("ExplorerPaneHWNPane", DUIViewWndClassPane);
                    fExplorerPaneHWNPane.UIMap.Scope = UIASeachScope.Children;
                    fExplorerPaneHWNPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Explorer Pane");
                    fExplorerPaneHWNPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"HWNDView");
                    fExplorerPaneHWNPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"main");
                }

                return fExplorerPaneHWNPane;
            }
        }

        /// <summary>
        /// Gets Reference to FloatNotifySinkDup0I0XPane
        /// </summary>
        public Pane FloatNotifySinkDup0I0XPane
        {
            get
            {
                if (null == fFloatNotifySinkDup0I0XPane)
                {
                    fFloatNotifySinkDup0I0XPane = new Pane("FloatNotifySinkDup0I0XPane", ExplorerPaneHWNPane);
                    fFloatNotifySinkDup0I0XPane.UIMap.Scope = UIASeachScope.Children;
                    fFloatNotifySinkDup0I0XPane.UIMap.Index = 0;
                    fFloatNotifySinkDup0I0XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"FloatNotifySink");
                }

                return fFloatNotifySinkDup0I0XPane;
            }
        }

        /// <summary>
        /// Gets Reference to CtrlNotifySinkDup0I0XPane
        /// </summary>
        public Pane CtrlNotifySinkDup0I0XPane
        {
            get
            {
                if (null == fCtrlNotifySinkDup0I0XPane)
                {
                    fCtrlNotifySinkDup0I0XPane = new Pane("CtrlNotifySinkDup0I0XPane", ExplorerPaneHWNPane);
                    fCtrlNotifySinkDup0I0XPane.UIMap.Scope = UIASeachScope.Children;
                    fCtrlNotifySinkDup0I0XPane.UIMap.Index = 0;
                    fCtrlNotifySinkDup0I0XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CtrlNotifySink");
                }

                return fCtrlNotifySinkDup0I0XPane;
            }
        }

        /// <summary>
        /// Gets Reference to CtrlNotifySinkDup1I1XPane
        /// </summary>
        public Pane CtrlNotifySinkDup1I1XPane
        {
            get
            {
                if (null == fCtrlNotifySinkDup1I1XPane)
                {
                    fCtrlNotifySinkDup1I1XPane = new Pane("CtrlNotifySinkDup1I1XPane", ExplorerPaneHWNPane);
                    fCtrlNotifySinkDup1I1XPane.UIMap.Scope = UIASeachScope.Children;
                    fCtrlNotifySinkDup1I1XPane.UIMap.Index = 1;
                    fCtrlNotifySinkDup1I1XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CtrlNotifySink");
                }

                return fCtrlNotifySinkDup1I1XPane;
            }
        }

        /// <summary>
        /// Gets Reference to FloatNotifySinkDup1I1XPane
        /// </summary>
        public Pane FloatNotifySinkDup1I1XPane
        {
            get
            {
                if (null == fFloatNotifySinkDup1I1XPane)
                {
                    fFloatNotifySinkDup1I1XPane = new Pane("FloatNotifySinkDup1I1XPane", ExplorerPaneHWNPane);
                    fFloatNotifySinkDup1I1XPane.UIMap.Scope = UIASeachScope.Children;
                    fFloatNotifySinkDup1I1XPane.UIMap.Index = 1;
                    fFloatNotifySinkDup1I1XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"FloatNotifySink");
                }

                return fFloatNotifySinkDup1I1XPane;
            }
        }

        /// <summary>
        /// Gets Reference to CommandModuleFoToolBar
        /// </summary>
        public ToolBar CommandModuleFoToolBar
        {
            get
            {
                if (null == fCommandModuleFoToolBar)
                {
                    fCommandModuleFoToolBar = new ToolBar("CommandModuleFoToolBar", ExplorerPaneHWNPane);
                    fCommandModuleFoToolBar.UIMap.Scope = UIASeachScope.Children;
                    fCommandModuleFoToolBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Command Module");
                    fCommandModuleFoToolBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"FolderBandModuleInner");
                    fCommandModuleFoToolBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FolderBandModuleInner");
                }

                return fCommandModuleFoToolBar;
            }
        }

        /// <summary>
        /// Gets Reference to HelpButton3dHelButton
        /// </summary>
        public Button HelpButton3dHelButton
        {
            get
            {
                if (null == fHelpButton3dHelButton)
                {
                    fHelpButton3dHelButton = new Button("HelpButton3dHelButton", CommandModuleFoToolBar);
                    fHelpButton3dHelButton.UIMap.Scope = UIASeachScope.Children;
                    fHelpButton3dHelButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                    fHelpButton3dHelButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button3d");
                    fHelpButton3dHelButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HelpButton");
                }

                return fHelpButton3dHelButton;
            }
        }

        /// <summary>
        /// Gets Reference to ViewsViewControSplitButton
        /// </summary>
        public SplitButton ViewsViewControSplitButton
        {
            get
            {
                if (null == fViewsViewControSplitButton)
                {
                    fViewsViewControSplitButton = new SplitButton("ViewsViewControSplitButton", CommandModuleFoToolBar);
                    fViewsViewControSplitButton.UIMap.Scope = UIASeachScope.Children;
                    fViewsViewControSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Views");
                    fViewsViewControSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ViewControl");
                    fViewsViewControSplitButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ViewControl");
                }

                return fViewsViewControSplitButton;
            }
        }

        /// <summary>
        /// Gets Reference to ViewSliderButtoButton
        /// </summary>
        public Button ViewSliderButtoButton
        {
            get
            {
                if (null == fViewSliderButtoButton)
                {
                    fViewSliderButtoButton = new Button("ViewSliderButtoButton", ViewsViewControSplitButton);
                    fViewSliderButtoButton.UIMap.Scope = UIASeachScope.Children;
                    fViewSliderButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"View Slider");
                    fViewSliderButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button3d");
                    fViewSliderButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SplitMenuButton");
                }

                return fViewSliderButtoButton;
            }
        }

        /// <summary>
        /// Gets Reference to OrganizeAJOSpliButton
        /// </summary>
        public Button OrganizeAJOSpliButton
        {
            get
            {
                if (null == fOrganizeAJOSpliButton)
                {
                    fOrganizeAJOSpliButton = new Button("OrganizeAJOSpliButton", CommandModuleFoToolBar);
                    fOrganizeAJOSpliButton.UIMap.Scope = UIASeachScope.Children;
                    fOrganizeAJOSpliButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Organize");
                    fOrganizeAJOSpliButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AJOSplitButton");
                    fOrganizeAJOSpliButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"{7DDC1264-7E4D-4F74-BBC0-D191987C8D0F}");
                }

                return fOrganizeAJOSpliButton;
            }
        }

        /// <summary>
        /// Gets Reference to NewfolderAJOSplButton
        /// </summary>
        public Button NewfolderAJOSplButton
        {
            get
            {
                if (null == fNewfolderAJOSplButton)
                {
                    fNewfolderAJOSplButton = new Button("NewfolderAJOSplButton", CommandModuleFoToolBar);
                    fNewfolderAJOSplButton.UIMap.Scope = UIASeachScope.Children;
                    fNewfolderAJOSplButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"New folder");
                    fNewfolderAJOSplButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AJOSplitButton");
                    fNewfolderAJOSplButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"{E44616AD-6DF1-4B94-85A4-E465AE8A19DB}");
                }

                return fNewfolderAJOSplButton;
            }
        }

        /// <summary>
        /// Gets Reference to ControlHostPropPane
        /// </summary>
        public Pane ControlHostPropPane
        {
            get
            {
                if (null == fControlHostPropPane)
                {
                    fControlHostPropPane = new Pane("ControlHostPropPane", ExplorerPaneHWNPane);
                    fControlHostPropPane.UIMap.Scope = UIASeachScope.Children;
                    fControlHostPropPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Control Host");
                    fControlHostPropPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProperTreeHost");
                    fControlHostPropPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ProperTreeHost");
                }

                return fControlHostPropPane;
            }
        }

        /// <summary>
        /// Gets Reference to NamespaceTreeCoTree
        /// </summary>
        public Tree NamespaceTreeCoTree
        {
            get
            {
                if (null == fNamespaceTreeCoTree)
                {
                    fNamespaceTreeCoTree = new Tree("NamespaceTreeCoTree", ControlHostPropPane);
                    fNamespaceTreeCoTree.UIMap.Scope = UIASeachScope.Children;
                    fNamespaceTreeCoTree.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Namespace Tree Control");
                    fNamespaceTreeCoTree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"SysTreeView32");
                    fNamespaceTreeCoTree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"100");
                }

                return fNamespaceTreeCoTree;
            }
        }

        /// <summary>
        /// Gets Reference to VerticalScrollBDup0ScrollBar
        /// </summary>
        public ScrollBar VerticalScrollBDup0ScrollBar
        {
            get
            {
                if (null == fVerticalScrollBDup0ScrollBar)
                {
                    fVerticalScrollBDup0ScrollBar = new ScrollBar("VerticalScrollBDup0ScrollBar", NamespaceTreeCoTree);
                    fVerticalScrollBDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fVerticalScrollBDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Vertical Scroll Bar");
                    fVerticalScrollBDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Vertical ScrollBar");
                }

                return fVerticalScrollBDup0ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to BackbysmallamouDup0Button
        /// </summary>
        public Button BackbysmallamouDup0Button
        {
            get
            {
                if (null == fBackbysmallamouDup0Button)
                {
                    fBackbysmallamouDup0Button = new Button("BackbysmallamouDup0Button", VerticalScrollBDup0ScrollBar);
                    fBackbysmallamouDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fBackbysmallamouDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back by small amount");
                    fBackbysmallamouDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallDecrement");
                }

                return fBackbysmallamouDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to BackbylargeamouButton
        /// </summary>
        public Button BackbylargeamouButton
        {
            get
            {
                if (null == fBackbylargeamouButton)
                {
                    fBackbylargeamouButton = new Button("BackbylargeamouButton", VerticalScrollBDup0ScrollBar);
                    fBackbylargeamouButton.UIMap.Scope = UIASeachScope.Children;
                    fBackbylargeamouButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back by large amount");
                    fBackbylargeamouButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LargeDecrement");
                }

                return fBackbylargeamouButton;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbThumb
        /// </summary>
        public Thumb ThumbThumb
        {
            get
            {
                if (null == fThumbThumb)
                {
                    fThumbThumb = new Thumb("ThumbThumb", VerticalScrollBDup0ScrollBar);
                    fThumbThumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbThumb.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Thumb");
                    fThumbThumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Thumb");
                }

                return fThumbThumb;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardbylargeaButton
        /// </summary>
        public Button ForwardbylargeaButton
        {
            get
            {
                if (null == fForwardbylargeaButton)
                {
                    fForwardbylargeaButton = new Button("ForwardbylargeaButton", VerticalScrollBDup0ScrollBar);
                    fForwardbylargeaButton.UIMap.Scope = UIASeachScope.Children;
                    fForwardbylargeaButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward by large amount");
                    fForwardbylargeaButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LargeIncrement");
                }

                return fForwardbylargeaButton;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardbysmallaDup0Button
        /// </summary>
        public Button ForwardbysmallaDup0Button
        {
            get
            {
                if (null == fForwardbysmallaDup0Button)
                {
                    fForwardbysmallaDup0Button = new Button("ForwardbysmallaDup0Button", VerticalScrollBDup0ScrollBar);
                    fForwardbysmallaDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fForwardbysmallaDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward by small amount");
                    fForwardbysmallaDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallIncrement");
                }

                return fForwardbysmallaDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to FavoritesTreeItem
        /// </summary>
        public TreeItem FavoritesTreeItem
        {
            get
            {
                if (null == fFavoritesTreeItem)
                {
                    fFavoritesTreeItem = new TreeItem("FavoritesTreeItem", NamespaceTreeCoTree);
                    fFavoritesTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fFavoritesTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Favorites");
                }

                return fFavoritesTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to DesktopDup0TreeItem
        /// </summary>
        public TreeItem DesktopDup0TreeItem
        {
            get
            {
                if (null == fDesktopDup0TreeItem)
                {
                    fDesktopDup0TreeItem = new TreeItem("DesktopDup0TreeItem", FavoritesTreeItem);
                    fDesktopDup0TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fDesktopDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Desktop");
                }

                return fDesktopDup0TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to DownloadsTreeItem
        /// </summary>
        public TreeItem DownloadsTreeItem
        {
            get
            {
                if (null == fDownloadsTreeItem)
                {
                    fDownloadsTreeItem = new TreeItem("DownloadsTreeItem", FavoritesTreeItem);
                    fDownloadsTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fDownloadsTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Downloads");
                }

                return fDownloadsTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to RecentPlacesTreeItem
        /// </summary>
        public TreeItem RecentPlacesTreeItem
        {
            get
            {
                if (null == fRecentPlacesTreeItem)
                {
                    fRecentPlacesTreeItem = new TreeItem("RecentPlacesTreeItem", FavoritesTreeItem);
                    fRecentPlacesTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fRecentPlacesTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Recent Places");
                }

                return fRecentPlacesTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to DesktopDup1TreeItem
        /// </summary>
        public TreeItem DesktopDup1TreeItem
        {
            get
            {
                if (null == fDesktopDup1TreeItem)
                {
                    fDesktopDup1TreeItem = new TreeItem("DesktopDup1TreeItem", NamespaceTreeCoTree);
                    fDesktopDup1TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fDesktopDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Desktop");
                }

                return fDesktopDup1TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to LibrariesTreeItem
        /// </summary>
        public TreeItem LibrariesTreeItem
        {
            get
            {
                if (null == fLibrariesTreeItem)
                {
                    fLibrariesTreeItem = new TreeItem("LibrariesTreeItem", DesktopDup1TreeItem);
                    fLibrariesTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fLibrariesTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Libraries");
                }

                return fLibrariesTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to DocumentsTreeItem
        /// </summary>
        public TreeItem DocumentsTreeItem
        {
            get
            {
                if (null == fDocumentsTreeItem)
                {
                    fDocumentsTreeItem = new TreeItem("DocumentsTreeItem", LibrariesTreeItem);
                    fDocumentsTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fDocumentsTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Documents");
                }

                return fDocumentsTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to MusicTreeItem
        /// </summary>
        public TreeItem MusicTreeItem
        {
            get
            {
                if (null == fMusicTreeItem)
                {
                    fMusicTreeItem = new TreeItem("MusicTreeItem", LibrariesTreeItem);
                    fMusicTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fMusicTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Music");
                }

                return fMusicTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to PicturesTreeItem
        /// </summary>
        public TreeItem PicturesTreeItem
        {
            get
            {
                if (null == fPicturesTreeItem)
                {
                    fPicturesTreeItem = new TreeItem("PicturesTreeItem", LibrariesTreeItem);
                    fPicturesTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fPicturesTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Pictures");
                }

                return fPicturesTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to SubversionTreeItem
        /// </summary>
        public TreeItem SubversionTreeItem
        {
            get
            {
                if (null == fSubversionTreeItem)
                {
                    fSubversionTreeItem = new TreeItem("SubversionTreeItem", LibrariesTreeItem);
                    fSubversionTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSubversionTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Subversion");
                }

                return fSubversionTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to VideosTreeItem
        /// </summary>
        public TreeItem VideosTreeItem
        {
            get
            {
                if (null == fVideosTreeItem)
                {
                    fVideosTreeItem = new TreeItem("VideosTreeItem", LibrariesTreeItem);
                    fVideosTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fVideosTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Videos");
                }

                return fVideosTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ComputerTreeItem
        /// </summary>
        public TreeItem ComputerTreeItem
        {
            get
            {
                if (null == fComputerTreeItem)
                {
                    fComputerTreeItem = new TreeItem("ComputerTreeItem", DesktopDup1TreeItem);
                    fComputerTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fComputerTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Computer");
                }

                return fComputerTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to LocalDiskCTreeItem
        /// </summary>
        public TreeItem LocalDiskCTreeItem
        {
            get
            {
                if (null == fLocalDiskCTreeItem)
                {
                    fLocalDiskCTreeItem = new TreeItem("LocalDiskCTreeItem", ComputerTreeItem);
                    fLocalDiskCTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fLocalDiskCTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Local Disk (C:)");
                }

                return fLocalDiskCTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to LocalDiskDTreeItem
        /// </summary>
        public TreeItem LocalDiskDTreeItem
        {
            get
            {
                if (null == fLocalDiskDTreeItem)
                {
                    fLocalDiskDTreeItem = new TreeItem("LocalDiskDTreeItem", ComputerTreeItem);
                    fLocalDiskDTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fLocalDiskDTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Local Disk (D:)");
                }

                return fLocalDiskDTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to LocalDiskETreeItem
        /// </summary>
        public TreeItem LocalDiskETreeItem
        {
            get
            {
                if (null == fLocalDiskETreeItem)
                {
                    fLocalDiskETreeItem = new TreeItem("LocalDiskETreeItem", ComputerTreeItem);
                    fLocalDiskETreeItem.UIMap.Scope = UIASeachScope.Children;
                    fLocalDiskETreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Local Disk (E:)");
                }

                return fLocalDiskETreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to NetworkTreeItem
        /// </summary>
        public TreeItem NetworkTreeItem
        {
            get
            {
                if (null == fNetworkTreeItem)
                {
                    fNetworkTreeItem = new TreeItem("NetworkTreeItem", DesktopDup1TreeItem);
                    fNetworkTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fNetworkTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network");
                }

                return fNetworkTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ShellFolderViewPane
        /// </summary>
        public Pane ShellFolderViewPane
        {
            get
            {
                if (null == fShellFolderViewPane)
                {
                    fShellFolderViewPane = new Pane("ShellFolderViewPane", ExplorerPaneHWNPane);
                    fShellFolderViewPane.UIMap.Scope = UIASeachScope.Children;
                    fShellFolderViewPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Shell Folder View");
                    fShellFolderViewPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"DUIListView");
                    fShellFolderViewPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"listview");
                }

                return fShellFolderViewPane;
            }
        }

        /// <summary>
        /// Gets Reference to ItemsViewUIItemList
        /// </summary>
        public List ItemsViewUIItemList
        {
            get
            {
                if (null == fItemsViewUIItemList)
                {
                    fItemsViewUIItemList = new List("ItemsViewUIItemList", ShellFolderViewPane);
                    fItemsViewUIItemList.UIMap.Scope = UIASeachScope.Children;
                    fItemsViewUIItemList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Items View");
                    fItemsViewUIItemList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItemsView");
                }

                return fItemsViewUIItemList;
            }
        }

        /// <summary>
        /// Gets Reference to CtrlNotifySinkDup2Pane
        /// </summary>
        public Pane CtrlNotifySinkDup2Pane
        {
            get
            {
                if (null == fCtrlNotifySinkDup2Pane)
                {
                    fCtrlNotifySinkDup2Pane = new Pane("CtrlNotifySinkDup2Pane", ItemsViewUIItemList);
                    fCtrlNotifySinkDup2Pane.UIMap.Scope = UIASeachScope.Children;
                    fCtrlNotifySinkDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CtrlNotifySink");
                }

                return fCtrlNotifySinkDup2Pane;
            }
        }

        /// <summary>
        /// Gets Reference to VerticalScrollBDup1ScrollBar
        /// </summary>
        public ScrollBar VerticalScrollBDup1ScrollBar
        {
            get
            {
                if (null == fVerticalScrollBDup1ScrollBar)
                {
                    fVerticalScrollBDup1ScrollBar = new ScrollBar("VerticalScrollBDup1ScrollBar", ItemsViewUIItemList);
                    fVerticalScrollBDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fVerticalScrollBDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Vertical Scroll Bar");
                    fVerticalScrollBDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"LineVScrollBar");
                    fVerticalScrollBDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fVerticalScrollBDup1ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to LineupButton
        /// </summary>
        public Button LineupButton
        {
            get
            {
                if (null == fLineupButton)
                {
                    fLineupButton = new Button("LineupButton", VerticalScrollBDup1ScrollBar);
                    fLineupButton.UIMap.Scope = UIASeachScope.Children;
                    fLineupButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Line up");
                }

                return fLineupButton;
            }
        }

        /// <summary>
        /// Gets Reference to PositionCustom
        /// </summary>
        public Custom PositionCustom
        {
            get
            {
                if (null == fPositionCustom)
                {
                    fPositionCustom = new Custom("PositionCustom", VerticalScrollBDup1ScrollBar);
                    fPositionCustom.UIMap.Scope = UIASeachScope.Children;
                    fPositionCustom.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Position");
                }

                return fPositionCustom;
            }
        }

        /// <summary>
        /// Gets Reference to PagedownButton
        /// </summary>
        public Button PagedownButton
        {
            get
            {
                if (null == fPagedownButton)
                {
                    fPagedownButton = new Button("PagedownButton", VerticalScrollBDup1ScrollBar);
                    fPagedownButton.UIMap.Scope = UIASeachScope.Children;
                    fPagedownButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Page down");
                }

                return fPagedownButton;
            }
        }

        /// <summary>
        /// Gets Reference to LinedownButton
        /// </summary>
        public Button LinedownButton
        {
            get
            {
                if (null == fLinedownButton)
                {
                    fLinedownButton = new Button("LinedownButton", VerticalScrollBDup1ScrollBar);
                    fLinedownButton.UIMap.Scope = UIASeachScope.Children;
                    fLinedownButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Line down");
                }

                return fLinedownButton;
            }
        }

        /// <summary>
        /// Gets Reference to LibrariesUIItemListItem
        /// </summary>
        public ListItem LibrariesUIItemListItem
        {
            get
            {
                if (null == fLibrariesUIItemListItem)
                {
                    fLibrariesUIItemListItem = new ListItem("LibrariesUIItemListItem", ItemsViewUIItemList);
                    fLibrariesUIItemListItem.UIMap.Scope = UIASeachScope.Children;
                    fLibrariesUIItemListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Libraries");
                    fLibrariesUIItemListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                    fLibrariesUIItemListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0");
                }

                return fLibrariesUIItemListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UIDup0Image
        /// </summary>
        public Image UIDup0Image
        {
            get
            {
                if (null == fUIDup0Image)
                {
                    fUIDup0Image = new Image("UIDup0Image", LibrariesUIItemListItem);
                    fUIDup0Image.UIMap.Scope = UIASeachScope.Children;
                    fUIDup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                }

                return fUIDup0Image;
            }
        }

        /// <summary>
        /// Gets Reference to NameUIPropertySDup0Edit
        /// </summary>
        public Edit NameUIPropertySDup0Edit
        {
            get
            {
                if (null == fNameUIPropertySDup0Edit)
                {
                    fNameUIPropertySDup0Edit = new Edit("NameUIPropertySDup0Edit", LibrariesUIItemListItem);
                    fNameUIPropertySDup0Edit.UIMap.Scope = UIASeachScope.Children;
                    fNameUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                    fNameUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fNameUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                }

                return fNameUIPropertySDup0Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TypeUIPropertySDup0Edit
        /// </summary>
        public Edit TypeUIPropertySDup0Edit
        {
            get
            {
                if (null == fTypeUIPropertySDup0Edit)
                {
                    fTypeUIPropertySDup0Edit = new Edit("TypeUIPropertySDup0Edit", LibrariesUIItemListItem);
                    fTypeUIPropertySDup0Edit.UIMap.Scope = UIASeachScope.Children;
                    fTypeUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                    fTypeUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fTypeUIPropertySDup0Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                }

                return fTypeUIPropertySDup0Edit;
            }
        }

        /// <summary>
        /// Gets Reference to adminUIItem1ListItem
        /// </summary>
        public ListItem adminUIItem1ListItem
        {
            get
            {
                if (null == fadminUIItem1ListItem)
                {
                    fadminUIItem1ListItem = new ListItem("adminUIItem1ListItem", ItemsViewUIItemList);
                    fadminUIItem1ListItem.UIMap.Scope = UIASeachScope.Children;
                    fadminUIItem1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"admin");
                    fadminUIItem1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                    fadminUIItem1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1");
                }

                return fadminUIItem1ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UIDup1Image
        /// </summary>
        public Image UIDup1Image
        {
            get
            {
                if (null == fUIDup1Image)
                {
                    fUIDup1Image = new Image("UIDup1Image", adminUIItem1ListItem);
                    fUIDup1Image.UIMap.Scope = UIASeachScope.Children;
                    fUIDup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                }

                return fUIDup1Image;
            }
        }

        /// <summary>
        /// Gets Reference to NameUIPropertySDup1Edit
        /// </summary>
        public Edit NameUIPropertySDup1Edit
        {
            get
            {
                if (null == fNameUIPropertySDup1Edit)
                {
                    fNameUIPropertySDup1Edit = new Edit("NameUIPropertySDup1Edit", adminUIItem1ListItem);
                    fNameUIPropertySDup1Edit.UIMap.Scope = UIASeachScope.Children;
                    fNameUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                    fNameUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fNameUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                }

                return fNameUIPropertySDup1Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TypeUIPropertySDup1Edit
        /// </summary>
        public Edit TypeUIPropertySDup1Edit
        {
            get
            {
                if (null == fTypeUIPropertySDup1Edit)
                {
                    fTypeUIPropertySDup1Edit = new Edit("TypeUIPropertySDup1Edit", adminUIItem1ListItem);
                    fTypeUIPropertySDup1Edit.UIMap.Scope = UIASeachScope.Children;
                    fTypeUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                    fTypeUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fTypeUIPropertySDup1Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                }

                return fTypeUIPropertySDup1Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ComputerUIItem2ListItem
        /// </summary>
        public ListItem ComputerUIItem2ListItem
        {
            get
            {
                if (null == fComputerUIItem2ListItem)
                {
                    fComputerUIItem2ListItem = new ListItem("ComputerUIItem2ListItem", ItemsViewUIItemList);
                    fComputerUIItem2ListItem.UIMap.Scope = UIASeachScope.Children;
                    fComputerUIItem2ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Computer");
                    fComputerUIItem2ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                    fComputerUIItem2ListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2");
                }

                return fComputerUIItem2ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UIDup2Image
        /// </summary>
        public Image UIDup2Image
        {
            get
            {
                if (null == fUIDup2Image)
                {
                    fUIDup2Image = new Image("UIDup2Image", ComputerUIItem2ListItem);
                    fUIDup2Image.UIMap.Scope = UIASeachScope.Children;
                    fUIDup2Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                }

                return fUIDup2Image;
            }
        }

        /// <summary>
        /// Gets Reference to NameUIPropertySDup2Edit
        /// </summary>
        public Edit NameUIPropertySDup2Edit
        {
            get
            {
                if (null == fNameUIPropertySDup2Edit)
                {
                    fNameUIPropertySDup2Edit = new Edit("NameUIPropertySDup2Edit", ComputerUIItem2ListItem);
                    fNameUIPropertySDup2Edit.UIMap.Scope = UIASeachScope.Children;
                    fNameUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                    fNameUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fNameUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                }

                return fNameUIPropertySDup2Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TypeUIPropertySDup2Edit
        /// </summary>
        public Edit TypeUIPropertySDup2Edit
        {
            get
            {
                if (null == fTypeUIPropertySDup2Edit)
                {
                    fTypeUIPropertySDup2Edit = new Edit("TypeUIPropertySDup2Edit", ComputerUIItem2ListItem);
                    fTypeUIPropertySDup2Edit.UIMap.Scope = UIASeachScope.Children;
                    fTypeUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                    fTypeUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fTypeUIPropertySDup2Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                }

                return fTypeUIPropertySDup2Edit;
            }
        }

        /// <summary>
        /// Gets Reference to NetworkUIItem3ListItem
        /// </summary>
        public ListItem NetworkUIItem3ListItem
        {
            get
            {
                if (null == fNetworkUIItem3ListItem)
                {
                    fNetworkUIItem3ListItem = new ListItem("NetworkUIItem3ListItem", ItemsViewUIItemList);
                    fNetworkUIItem3ListItem.UIMap.Scope = UIASeachScope.Children;
                    fNetworkUIItem3ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network");
                    fNetworkUIItem3ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                    fNetworkUIItem3ListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3");
                }

                return fNetworkUIItem3ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UIDup3Image
        /// </summary>
        public Image UIDup3Image
        {
            get
            {
                if (null == fUIDup3Image)
                {
                    fUIDup3Image = new Image("UIDup3Image", NetworkUIItem3ListItem);
                    fUIDup3Image.UIMap.Scope = UIASeachScope.Children;
                    fUIDup3Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                }

                return fUIDup3Image;
            }
        }

        /// <summary>
        /// Gets Reference to NameUIPropertySDup3Edit
        /// </summary>
        public Edit NameUIPropertySDup3Edit
        {
            get
            {
                if (null == fNameUIPropertySDup3Edit)
                {
                    fNameUIPropertySDup3Edit = new Edit("NameUIPropertySDup3Edit", NetworkUIItem3ListItem);
                    fNameUIPropertySDup3Edit.UIMap.Scope = UIASeachScope.Children;
                    fNameUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                    fNameUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fNameUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                }

                return fNameUIPropertySDup3Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TypeUIPropertySDup3Edit
        /// </summary>
        public Edit TypeUIPropertySDup3Edit
        {
            get
            {
                if (null == fTypeUIPropertySDup3Edit)
                {
                    fTypeUIPropertySDup3Edit = new Edit("TypeUIPropertySDup3Edit", NetworkUIItem3ListItem);
                    fTypeUIPropertySDup3Edit.UIMap.Scope = UIASeachScope.Children;
                    fTypeUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                    fTypeUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fTypeUIPropertySDup3Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                }

                return fTypeUIPropertySDup3Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TwainStuffsUIIListItem
        /// </summary>
        public ListItem TwainStuffsUIIListItem
        {
            get
            {
                if (null == fTwainStuffsUIIListItem)
                {
                    fTwainStuffsUIIListItem = new ListItem("TwainStuffsUIIListItem", ItemsViewUIItemList);
                    fTwainStuffsUIIListItem.UIMap.Scope = UIASeachScope.Children;
                    fTwainStuffsUIIListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Twain_Stuffs");
                    fTwainStuffsUIIListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                    fTwainStuffsUIIListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4");
                }

                return fTwainStuffsUIIListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UIDup4Image
        /// </summary>
        public Image UIDup4Image
        {
            get
            {
                if (null == fUIDup4Image)
                {
                    fUIDup4Image = new Image("UIDup4Image", TwainStuffsUIIListItem);
                    fUIDup4Image.UIMap.Scope = UIASeachScope.Children;
                    fUIDup4Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                }

                return fUIDup4Image;
            }
        }

        /// <summary>
        /// Gets Reference to NameUIPropertySDup4Edit
        /// </summary>
        public Edit NameUIPropertySDup4Edit
        {
            get
            {
                if (null == fNameUIPropertySDup4Edit)
                {
                    fNameUIPropertySDup4Edit = new Edit("NameUIPropertySDup4Edit", TwainStuffsUIIListItem);
                    fNameUIPropertySDup4Edit.UIMap.Scope = UIASeachScope.Children;
                    fNameUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                    fNameUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fNameUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                }

                return fNameUIPropertySDup4Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TypeUIPropertySDup4Edit
        /// </summary>
        public Edit TypeUIPropertySDup4Edit
        {
            get
            {
                if (null == fTypeUIPropertySDup4Edit)
                {
                    fTypeUIPropertySDup4Edit = new Edit("TypeUIPropertySDup4Edit", TwainStuffsUIIListItem);
                    fTypeUIPropertySDup4Edit.UIMap.Scope = UIASeachScope.Children;
                    fTypeUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                    fTypeUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fTypeUIPropertySDup4Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                }

                return fTypeUIPropertySDup4Edit;
            }
        }

        /// <summary>
        /// Gets Reference to A59FQRBJI8BtxtUListItem
        /// </summary>
        public ListItem A59FQRBJI8BtxtUListItem
        {
            get
            {
                if (null == fA59FQRBJI8BtxtUListItem)
                {
                    fA59FQRBJI8BtxtUListItem = new ListItem("A59FQRBJI8BtxtUListItem", ItemsViewUIItemList);
                    fA59FQRBJI8BtxtUListItem.UIMap.Scope = UIASeachScope.Children;
                    fA59FQRBJI8BtxtUListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"59FQRBJI8B.txt");
                    fA59FQRBJI8BtxtUListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIItem");
                    fA59FQRBJI8BtxtUListItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5");
                }

                return fA59FQRBJI8BtxtUListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UIDup5Image
        /// </summary>
        public Image UIDup5Image
        {
            get
            {
                if (null == fUIDup5Image)
                {
                    fUIDup5Image = new Image("UIDup5Image", A59FQRBJI8BtxtUListItem);
                    fUIDup5Image.UIMap.Scope = UIASeachScope.Children;
                    fUIDup5Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIImage");
                }

                return fUIDup5Image;
            }
        }

        /// <summary>
        /// Gets Reference to NameUIPropertySDup5Edit
        /// </summary>
        public Edit NameUIPropertySDup5Edit
        {
            get
            {
                if (null == fNameUIPropertySDup5Edit)
                {
                    fNameUIPropertySDup5Edit = new Edit("NameUIPropertySDup5Edit", A59FQRBJI8BtxtUListItem);
                    fNameUIPropertySDup5Edit.UIMap.Scope = UIASeachScope.Children;
                    fNameUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                    fNameUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fNameUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemNameDisplay");
                }

                return fNameUIPropertySDup5Edit;
            }
        }

        /// <summary>
        /// Gets Reference to TypeUIPropertySDup5Edit
        /// </summary>
        public Edit TypeUIPropertySDup5Edit
        {
            get
            {
                if (null == fTypeUIPropertySDup5Edit)
                {
                    fTypeUIPropertySDup5Edit = new Edit("TypeUIPropertySDup5Edit", A59FQRBJI8BtxtUListItem);
                    fTypeUIPropertySDup5Edit.UIMap.Scope = UIASeachScope.Children;
                    fTypeUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Type");
                    fTypeUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fTypeUIPropertySDup5Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.ItemTypeText");
                }

                return fTypeUIPropertySDup5Edit;
            }
        }

        /// <summary>
        /// Gets Reference to SizeUIPropertySEdit
        /// </summary>
        public Edit SizeUIPropertySEdit
        {
            get
            {
                if (null == fSizeUIPropertySEdit)
                {
                    fSizeUIPropertySEdit = new Edit("SizeUIPropertySEdit", A59FQRBJI8BtxtUListItem);
                    fSizeUIPropertySEdit.UIMap.Scope = UIASeachScope.Children;
                    fSizeUIPropertySEdit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Size");
                    fSizeUIPropertySEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UIProperty");
                    fSizeUIPropertySEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"System.Size");
                }

                return fSizeUIPropertySEdit;
            }
        }

        /// <summary>
        /// Gets Reference to DetailsPanePrevPane
        /// </summary>
        public Pane DetailsPanePrevPane
        {
            get
            {
                if (null == fDetailsPanePrevPane)
                {
                    fDetailsPanePrevPane = new Pane("DetailsPanePrevPane", ExplorerPaneHWNPane);
                    fDetailsPanePrevPane.UIMap.Scope = UIASeachScope.Children;
                    fDetailsPanePrevPane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Details Pane");
                    fDetailsPanePrevPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"PreviewBackground");
                    fDetailsPanePrevPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"BackgroundClear");
                }

                return fDetailsPanePrevPane;
            }
        }

        /// <summary>
        /// Gets Reference to FilenameCIDLabeText
        /// </summary>
        public Text FilenameCIDLabeText
        {
            get
            {
                if (null == fFilenameCIDLabeText)
                {
                    fFilenameCIDLabeText = new Text("FilenameCIDLabeText", DetailsPanePrevPane);
                    fFilenameCIDLabeText.UIMap.Scope = UIASeachScope.Children;
                    fFilenameCIDLabeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File name:");
                    fFilenameCIDLabeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CIDLabel");
                    fFilenameCIDLabeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SaveDialogLabel");
                }

                return fFilenameCIDLabeText;
            }
        }

        /// <summary>
        /// Gets Reference to FilenameAppContComboBox
        /// </summary>
        public ComboBox FilenameAppContComboBox
        {
            get
            {
                if (null == fFilenameAppContComboBox)
                {
                    fFilenameAppContComboBox = new ComboBox("FilenameAppContComboBox", DetailsPanePrevPane);
                    fFilenameAppContComboBox.UIMap.Scope = UIASeachScope.Children;
                    fFilenameAppContComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File name:");
                    fFilenameAppContComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AppControlHost");
                    fFilenameAppContComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FileNameControlHost");
                }

                return fFilenameAppContComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to FilenameEdit100Edit
        /// </summary>
        public Edit FilenameEdit100Edit
        {
            get
            {
                if (null == fFilenameEdit100Edit)
                {
                    fFilenameEdit100Edit = new Edit("FilenameEdit100Edit", FilenameAppContComboBox);
                    fFilenameEdit100Edit.UIMap.Scope = UIASeachScope.Children;
                    fFilenameEdit100Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File name:");
                    fFilenameEdit100Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Edit");
                    fFilenameEdit100Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1001");
                }

                return fFilenameEdit100Edit;
            }
        }

        /// <summary>
        /// Gets Reference to FilenameComboLBList
        /// </summary>
        public List FilenameComboLBList
        {
            get
            {
                if (null == fFilenameComboLBList)
                {
                    fFilenameComboLBList = new List("FilenameComboLBList", FilenameAppContComboBox);
                    fFilenameComboLBList.UIMap.Scope = UIASeachScope.Children;
                    fFilenameComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File name:");
                    fFilenameComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                    fFilenameComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                }

                return fFilenameComboLBList;
            }
        }

        /// <summary>
        /// Gets Reference to DropDownButtonDDup0Button
        /// </summary>
        public Button DropDownButtonDDup0Button
        {
            get
            {
                if (null == fDropDownButtonDDup0Button)
                {
                    fDropDownButtonDDup0Button = new Button("DropDownButtonDDup0Button", FilenameAppContComboBox);
                    fDropDownButtonDDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fDropDownButtonDDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                    fDropDownButtonDDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                }

                return fDropDownButtonDDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to SaveastypeCIDLaText
        /// </summary>
        public Text SaveastypeCIDLaText
        {
            get
            {
                if (null == fSaveastypeCIDLaText)
                {
                    fSaveastypeCIDLaText = new Text("SaveastypeCIDLaText", DetailsPanePrevPane);
                    fSaveastypeCIDLaText.UIMap.Scope = UIASeachScope.Children;
                    fSaveastypeCIDLaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save as type:");
                    fSaveastypeCIDLaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CIDLabel");
                    fSaveastypeCIDLaText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SaveDialogLabel");
                }

                return fSaveastypeCIDLaText;
            }
        }

        /// <summary>
        /// Gets Reference to SaveastypeAppCoComboBox
        /// </summary>
        public ComboBox SaveastypeAppCoComboBox
        {
            get
            {
                if (null == fSaveastypeAppCoComboBox)
                {
                    fSaveastypeAppCoComboBox = new ComboBox("SaveastypeAppCoComboBox", DetailsPanePrevPane);
                    fSaveastypeAppCoComboBox.UIMap.Scope = UIASeachScope.Children;
                    fSaveastypeAppCoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save as type:");
                    fSaveastypeAppCoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AppControlHost");
                    fSaveastypeAppCoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FileTypeControlHost");
                }

                return fSaveastypeAppCoComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to SaveastypeComboList
        /// </summary>
        public List SaveastypeComboList
        {
            get
            {
                if (null == fSaveastypeComboList)
                {
                    fSaveastypeComboList = new List("SaveastypeComboList", SaveastypeAppCoComboBox);
                    fSaveastypeComboList.UIMap.Scope = UIASeachScope.Children;
                    fSaveastypeComboList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save as type:");
                    fSaveastypeComboList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                    fSaveastypeComboList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                }

                return fSaveastypeComboList;
            }
        }

        /// <summary>
        /// Gets Reference to TextDocumentstxListItem
        /// </summary>
        public ListItem TextDocumentstxListItem
        {
            get
            {
                if (null == fTextDocumentstxListItem)
                {
                    fTextDocumentstxListItem = new ListItem("TextDocumentstxListItem", SaveastypeComboList);
                    fTextDocumentstxListItem.UIMap.Scope = UIASeachScope.Children;
                    fTextDocumentstxListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Text Documents (*.txt)");
                }

                return fTextDocumentstxListItem;
            }
        }

        /// <summary>
        /// Gets Reference to AllFilesListItem
        /// </summary>
        public ListItem AllFilesListItem
        {
            get
            {
                if (null == fAllFilesListItem)
                {
                    fAllFilesListItem = new ListItem("AllFilesListItem", SaveastypeComboList);
                    fAllFilesListItem.UIMap.Scope = UIASeachScope.Children;
                    fAllFilesListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"All Files  (*.*)");
                }

                return fAllFilesListItem;
            }
        }

        /// <summary>
        /// Gets Reference to DropDownButtonDDup1Button
        /// </summary>
        public Button DropDownButtonDDup1Button
        {
            get
            {
                if (null == fDropDownButtonDDup1Button)
                {
                    fDropDownButtonDDup1Button = new Button("DropDownButtonDDup1Button", SaveastypeAppCoComboBox);
                    fDropDownButtonDDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fDropDownButtonDDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                    fDropDownButtonDDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                }

                return fDropDownButtonDDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to SaveFieldsSaveDTree
        /// </summary>
        public Tree SaveFieldsSaveDTree
        {
            get
            {
                if (null == fSaveFieldsSaveDTree)
                {
                    fSaveFieldsSaveDTree = new Tree("SaveFieldsSaveDTree", DetailsPanePrevPane);
                    fSaveFieldsSaveDTree.UIMap.Scope = UIASeachScope.Children;
                    fSaveFieldsSaveDTree.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save Fields");
                    fSaveFieldsSaveDTree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"SaveDialogPreviewMetadataInner");
                    fSaveFieldsSaveDTree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SaveDialogPreviewMetadataInner");
                }

                return fSaveFieldsSaveDTree;
            }
        }

        /// <summary>
        /// Gets Reference to ApplicationContTree
        /// </summary>
        public Tree ApplicationContTree
        {
            get
            {
                if (null == fApplicationContTree)
                {
                    fApplicationContTree = new Tree("ApplicationContTree", ExplorerPaneHWNPane);
                    fApplicationContTree.UIMap.Scope = UIASeachScope.Children;
                    fApplicationContTree.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Application Controls");
                    fApplicationContTree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"AppControlsModuleInner");
                    fApplicationContTree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AppControlsModuleInner");
                }

                return fApplicationContTree;
            }
        }

        /// <summary>
        /// Gets Reference to ToolbarWindow32Dup0ToolBar
        /// </summary>
        public ToolBar ToolbarWindow32Dup0ToolBar
        {
            get
            {
                if (null == fToolbarWindow32Dup0ToolBar)
                {
                    fToolbarWindow32Dup0ToolBar = new ToolBar("ToolbarWindow32Dup0ToolBar", SaveAs32770Window);
                    fToolbarWindow32Dup0ToolBar.UIMap.Scope = UIASeachScope.Children;
                    fToolbarWindow32Dup0ToolBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ToolbarWindow32");
                }

                return fToolbarWindow32Dup0ToolBar;
            }
        }

        /// <summary>
        /// Gets Reference to HideFoldersItemButton
        /// </summary>
        public Button HideFoldersItemButton
        {
            get
            {
                if (null == fHideFoldersItemButton)
                {
                    fHideFoldersItemButton = new Button("HideFoldersItemButton", ToolbarWindow32Dup0ToolBar);
                    fHideFoldersItemButton.UIMap.Scope = UIASeachScope.Children;
                    fHideFoldersItemButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hide Folders");
                    fHideFoldersItemButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 103");
                }

                return fHideFoldersItemButton;
            }
        }

        /// <summary>
        /// Gets Reference to EncodingStaticText
        /// </summary>
        public Text EncodingStaticText
        {
            get
            {
                if (null == fEncodingStaticText)
                {
                    fEncodingStaticText = new Text("EncodingStaticText", SaveAs32770Window);
                    fEncodingStaticText.UIMap.Scope = UIASeachScope.Children;
                    fEncodingStaticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Encoding:");
                    fEncodingStaticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fEncodingStaticText;
            }
        }

        /// <summary>
        /// Gets Reference to EncodingComboBox
        /// </summary>
        public ComboBox EncodingComboBox
        {
            get
            {
                if (null == fEncodingComboBox)
                {
                    fEncodingComboBox = new ComboBox("EncodingComboBox", SaveAs32770Window);
                    fEncodingComboBox.UIMap.Scope = UIASeachScope.Children;
                    fEncodingComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Encoding:");
                    fEncodingComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                }

                return fEncodingComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to EncodingComboLBList
        /// </summary>
        public List EncodingComboLBList
        {
            get
            {
                if (null == fEncodingComboLBList)
                {
                    fEncodingComboLBList = new List("EncodingComboLBList", EncodingComboBox);
                    fEncodingComboLBList.UIMap.Scope = UIASeachScope.Children;
                    fEncodingComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Encoding:");
                    fEncodingComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                    fEncodingComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                }

                return fEncodingComboLBList;
            }
        }

        /// <summary>
        /// Gets Reference to ANSIListItem
        /// </summary>
        public ListItem ANSIListItem
        {
            get
            {
                if (null == fANSIListItem)
                {
                    fANSIListItem = new ListItem("ANSIListItem", EncodingComboLBList);
                    fANSIListItem.UIMap.Scope = UIASeachScope.Children;
                    fANSIListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"ANSI");
                }

                return fANSIListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UnicodeListItem
        /// </summary>
        public ListItem UnicodeListItem
        {
            get
            {
                if (null == fUnicodeListItem)
                {
                    fUnicodeListItem = new ListItem("UnicodeListItem", EncodingComboLBList);
                    fUnicodeListItem.UIMap.Scope = UIASeachScope.Children;
                    fUnicodeListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Unicode");
                }

                return fUnicodeListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UnicodebigendiaListItem
        /// </summary>
        public ListItem UnicodebigendiaListItem
        {
            get
            {
                if (null == fUnicodebigendiaListItem)
                {
                    fUnicodebigendiaListItem = new ListItem("UnicodebigendiaListItem", EncodingComboLBList);
                    fUnicodebigendiaListItem.UIMap.Scope = UIASeachScope.Children;
                    fUnicodebigendiaListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Unicode big endian");
                }

                return fUnicodebigendiaListItem;
            }
        }

        /// <summary>
        /// Gets Reference to UTF8ListItem
        /// </summary>
        public ListItem UTF8ListItem
        {
            get
            {
                if (null == fUTF8ListItem)
                {
                    fUTF8ListItem = new ListItem("UTF8ListItem", EncodingComboLBList);
                    fUTF8ListItem.UIMap.Scope = UIASeachScope.Children;
                    fUTF8ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"UTF-8");
                }

                return fUTF8ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to DropDownButtonDDup2Button
        /// </summary>
        public Button DropDownButtonDDup2Button
        {
            get
            {
                if (null == fDropDownButtonDDup2Button)
                {
                    fDropDownButtonDDup2Button = new Button("DropDownButtonDDup2Button", EncodingComboBox);
                    fDropDownButtonDDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fDropDownButtonDDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                    fDropDownButtonDDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                }

                return fDropDownButtonDDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to SaveButton1Button
        /// </summary>
        public Button SaveButton1Button
        {
            get
            {
                if (null == fSaveButton1Button)
                {
                    fSaveButton1Button = new Button("SaveButton1Button", SaveAs32770Window);
                    fSaveButton1Button.UIMap.Scope = UIASeachScope.Children;
                    fSaveButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save");
                    fSaveButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fSaveButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1");
                }

                return fSaveButton1Button;
            }
        }

        /// <summary>
        /// Gets Reference to CancelButton2Button
        /// </summary>
        public Button CancelButton2Button
        {
            get
            {
                if (null == fCancelButton2Button)
                {
                    fCancelButton2Button = new Button("CancelButton2Button", SaveAs32770Window);
                    fCancelButton2Button.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    fCancelButton2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButton2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2");
                }

                return fCancelButton2Button;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarPane
        /// </summary>
        public Pane ScrollBarPane
        {
            get
            {
                if (null == fScrollBarPane)
                {
                    fScrollBarPane = new Pane("ScrollBarPane", SaveAs32770Window);
                    fScrollBarPane.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarPane;
            }
        }

        /// <summary>
        /// Gets Reference to WorkerWPane
        /// </summary>
        public Pane WorkerWPane
        {
            get
            {
                if (null == fWorkerWPane)
                {
                    fWorkerWPane = new Pane("WorkerWPane", SaveAs32770Window);
                    fWorkerWPane.UIMap.Scope = UIASeachScope.Children;
                    fWorkerWPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WorkerW");
                }

                return fWorkerWPane;
            }
        }

        /// <summary>
        /// Gets Reference to ReBarWindow3240Pane
        /// </summary>
        public Pane ReBarWindow3240Pane
        {
            get
            {
                if (null == fReBarWindow3240Pane)
                {
                    fReBarWindow3240Pane = new Pane("ReBarWindow3240Pane", WorkerWPane);
                    fReBarWindow3240Pane.UIMap.Scope = UIASeachScope.Children;
                    fReBarWindow3240Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ReBarWindow32");
                    fReBarWindow3240Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"40965");
                }

                return fReBarWindow3240Pane;
            }
        }

        /// <summary>
        /// Gets Reference to TravelBandPane
        /// </summary>
        public Pane TravelBandPane
        {
            get
            {
                if (null == fTravelBandPane)
                {
                    fTravelBandPane = new Pane("TravelBandPane", ReBarWindow3240Pane);
                    fTravelBandPane.UIMap.Scope = UIASeachScope.Children;
                    fTravelBandPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TravelBand");
                }

                return fTravelBandPane;
            }
        }

        /// <summary>
        /// Gets Reference to ToolbarWindow32Dup1ToolBar
        /// </summary>
        public ToolBar ToolbarWindow32Dup1ToolBar
        {
            get
            {
                if (null == fToolbarWindow32Dup1ToolBar)
                {
                    fToolbarWindow32Dup1ToolBar = new ToolBar("ToolbarWindow32Dup1ToolBar", TravelBandPane);
                    fToolbarWindow32Dup1ToolBar.UIMap.Scope = UIASeachScope.Children;
                    fToolbarWindow32Dup1ToolBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ToolbarWindow32");
                }

                return fToolbarWindow32Dup1ToolBar;
            }
        }

        /// <summary>
        /// Gets Reference to BackItem256Button
        /// </summary>
        public Button BackItem256Button
        {
            get
            {
                if (null == fBackItem256Button)
                {
                    fBackItem256Button = new Button("BackItem256Button", ToolbarWindow32Dup1ToolBar);
                    fBackItem256Button.UIMap.Scope = UIASeachScope.Children;
                    fBackItem256Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back");
                    fBackItem256Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 256");
                }

                return fBackItem256Button;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardItem257Button
        /// </summary>
        public Button ForwardItem257Button
        {
            get
            {
                if (null == fForwardItem257Button)
                {
                    fForwardItem257Button = new Button("ForwardItem257Button", ToolbarWindow32Dup1ToolBar);
                    fForwardItem257Button.UIMap.Scope = UIASeachScope.Children;
                    fForwardItem257Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward");
                    fForwardItem257Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 257");
                }

                return fForwardItem257Button;
            }
        }

        /// <summary>
        /// Gets Reference to RecentPagesItemButton
        /// </summary>
        public Button RecentPagesItemButton
        {
            get
            {
                if (null == fRecentPagesItemButton)
                {
                    fRecentPagesItemButton = new Button("RecentPagesItemButton", ToolbarWindow32Dup1ToolBar);
                    fRecentPagesItemButton.UIMap.Scope = UIASeachScope.Children;
                    fRecentPagesItemButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Recent Pages");
                    fRecentPagesItemButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 258");
                }

                return fRecentPagesItemButton;
            }
        }

        /// <summary>
        /// Gets Reference to AddressBandRootPane
        /// </summary>
        public Pane AddressBandRootPane
        {
            get
            {
                if (null == fAddressBandRootPane)
                {
                    fAddressBandRootPane = new Pane("AddressBandRootPane", ReBarWindow3240Pane);
                    fAddressBandRootPane.UIMap.Scope = UIASeachScope.Children;
                    fAddressBandRootPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Address Band Root");
                    fAddressBandRootPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"41477");
                }

                return fAddressBandRootPane;
            }
        }

        /// <summary>
        /// Gets Reference to msctlsprogressProgressBar
        /// </summary>
        public ProgressBar msctlsprogressProgressBar
        {
            get
            {
                if (null == fmsctlsprogressProgressBar)
                {
                    fmsctlsprogressProgressBar = new ProgressBar("msctlsprogressProgressBar", AddressBandRootPane);
                    fmsctlsprogressProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fmsctlsprogressProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"msctls_progress32");
                }

                return fmsctlsprogressProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to BreadcrumbParenPane
        /// </summary>
        public Pane BreadcrumbParenPane
        {
            get
            {
                if (null == fBreadcrumbParenPane)
                {
                    fBreadcrumbParenPane = new Pane("BreadcrumbParenPane", msctlsprogressProgressBar);
                    fBreadcrumbParenPane.UIMap.Scope = UIASeachScope.Children;
                    fBreadcrumbParenPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Breadcrumb Parent");
                }

                return fBreadcrumbParenPane;
            }
        }

        /// <summary>
        /// Gets Reference to AddressDesktopTToolBar
        /// </summary>
        public ToolBar AddressDesktopTToolBar
        {
            get
            {
                if (null == fAddressDesktopTToolBar)
                {
                    fAddressDesktopTToolBar = new ToolBar("AddressDesktopTToolBar", BreadcrumbParenPane);
                    fAddressDesktopTToolBar.UIMap.Scope = UIASeachScope.Children;
                    fAddressDesktopTToolBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Address: Desktop");
                    fAddressDesktopTToolBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ToolbarWindow32");
                    fAddressDesktopTToolBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1001");
                }

                return fAddressDesktopTToolBar;
            }
        }

        /// <summary>
        /// Gets Reference to DesktopItem1280SplitButton
        /// </summary>
        public SplitButton DesktopItem1280SplitButton
        {
            get
            {
                if (null == fDesktopItem1280SplitButton)
                {
                    fDesktopItem1280SplitButton = new SplitButton("DesktopItem1280SplitButton", AddressDesktopTToolBar);
                    fDesktopItem1280SplitButton.UIMap.Scope = UIASeachScope.Children;
                    fDesktopItem1280SplitButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Desktop");
                    fDesktopItem1280SplitButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1280");
                }

                return fDesktopItem1280SplitButton;
            }
        }

        /// <summary>
        /// Gets Reference to ToolbarWindow32Dup2ToolBar
        /// </summary>
        public ToolBar ToolbarWindow32Dup2ToolBar
        {
            get
            {
                if (null == fToolbarWindow32Dup2ToolBar)
                {
                    fToolbarWindow32Dup2ToolBar = new ToolBar("ToolbarWindow32Dup2ToolBar", msctlsprogressProgressBar);
                    fToolbarWindow32Dup2ToolBar.UIMap.Scope = UIASeachScope.Children;
                    fToolbarWindow32Dup2ToolBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ToolbarWindow32");
                }

                return fToolbarWindow32Dup2ToolBar;
            }
        }

        /// <summary>
        /// Gets Reference to PreviousLocatioButton
        /// </summary>
        public Button PreviousLocatioButton
        {
            get
            {
                if (null == fPreviousLocatioButton)
                {
                    fPreviousLocatioButton = new Button("PreviousLocatioButton", ToolbarWindow32Dup2ToolBar);
                    fPreviousLocatioButton.UIMap.Scope = UIASeachScope.Children;
                    fPreviousLocatioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Previous Locations");
                    fPreviousLocatioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 202");
                }

                return fPreviousLocatioButton;
            }
        }


        /// <summary>
        /// Gets Reference to UniversalSearchPane
        /// </summary>
        public Pane UniversalSearchPane
        {
            get
            {
                if (null == fUniversalSearchPane)
                {
                    fUniversalSearchPane = new Pane("UniversalSearchPane", ReBarWindow3240Pane);
                    fUniversalSearchPane.UIMap.Scope = UIASeachScope.Children;
                    fUniversalSearchPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"UniversalSearchBand");
                }

                return fUniversalSearchPane;
            }
        }

        /// <summary>
        /// Gets Reference to SearchBoxPane
        /// </summary>
        public Pane SearchBoxPane
        {
            get
            {
                if (null == fSearchBoxPane)
                {
                    fSearchBoxPane = new Pane("SearchBoxPane", UniversalSearchPane);
                    fSearchBoxPane.UIMap.Scope = UIASeachScope.Children;
                    fSearchBoxPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Search Box");
                }

                return fSearchBoxPane;
            }
        }

        /// <summary>
        /// Gets Reference to SearchEditBoxWrPane
        /// </summary>
        public Pane SearchEditBoxWrPane
        {
            get
            {
                if (null == fSearchEditBoxWrPane)
                {
                    fSearchEditBoxWrPane = new Pane("SearchEditBoxWrPane", SearchBoxPane);
                    fSearchEditBoxWrPane.UIMap.Scope = UIASeachScope.Children;
                    fSearchEditBoxWrPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"SearchEditBoxWrapperClass");
                }

                return fSearchEditBoxWrPane;
            }
        }

        /// <summary>
        /// Gets Reference to SearchDesktopSePane
        /// </summary>
        public Pane SearchDesktopSePane
        {
            get
            {
                if (null == fSearchDesktopSePane)
                {
                    fSearchDesktopSePane = new Pane("SearchDesktopSePane", SearchEditBoxWrPane);
                    fSearchDesktopSePane.UIMap.Scope = UIASeachScope.Children;
                    fSearchDesktopSePane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @" Search Desktop");
                    fSearchDesktopSePane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"SearchBox");
                }

                return fSearchDesktopSePane;
            }
        }

        /// <summary>
        /// Gets Reference to SearchBoxSearchEdit
        /// </summary>
        public Edit SearchBoxSearchEdit
        {
            get
            {
                if (null == fSearchBoxSearchEdit)
                {
                    fSearchBoxSearchEdit = new Edit("SearchBoxSearchEdit", SearchDesktopSePane);
                    fSearchBoxSearchEdit.UIMap.Scope = UIASeachScope.Children;
                    fSearchBoxSearchEdit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search Box");
                    fSearchBoxSearchEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"SearchEditBox");
                    fSearchBoxSearchEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SearchEditBox");
                }

                return fSearchBoxSearchEdit;
            }
        }

        /// <summary>
        /// Gets Reference to SearchButtonSeaButton
        /// </summary>
        public Button SearchButtonSeaButton
        {
            get
            {
                if (null == fSearchButtonSeaButton)
                {
                    fSearchButtonSeaButton = new Button("SearchButtonSeaButton", SearchDesktopSePane);
                    fSearchButtonSeaButton.UIMap.Scope = UIASeachScope.Children;
                    fSearchButtonSeaButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search");
                    fSearchButtonSeaButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fSearchButtonSeaButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SearchBoxSearchButton");
                }

                return fSearchButtonSeaButton;
            }
        }

        /// <summary>
        /// Gets Reference to RebarBandDup0I0XCustom
        /// </summary>
        public Custom RebarBandDup0I0XCustom
        {
            get
            {
                if (null == fRebarBandDup0I0XCustom)
                {
                    fRebarBandDup0I0XCustom = new Custom("RebarBandDup0I0XCustom", ReBarWindow3240Pane);
                    fRebarBandDup0I0XCustom.UIMap.Scope = UIASeachScope.Children;
                    fRebarBandDup0I0XCustom.UIMap.Index = 0;
                    fRebarBandDup0I0XCustom.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rebar Band");
                }

                return fRebarBandDup0I0XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to RebarBandDup1I1XCustom
        /// </summary>
        public Custom RebarBandDup1I1XCustom
        {
            get
            {
                if (null == fRebarBandDup1I1XCustom)
                {
                    fRebarBandDup1I1XCustom = new Custom("RebarBandDup1I1XCustom", ReBarWindow3240Pane);
                    fRebarBandDup1I1XCustom.UIMap.Scope = UIASeachScope.Children;
                    fRebarBandDup1I1XCustom.UIMap.Index = 1;
                    fRebarBandDup1I1XCustom.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rebar Band");
                }

                return fRebarBandDup1I1XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to RebarBandDup2I2XCustom
        /// </summary>
        public Custom RebarBandDup2I2XCustom
        {
            get
            {
                if (null == fRebarBandDup2I2XCustom)
                {
                    fRebarBandDup2I2XCustom = new Custom("RebarBandDup2I2XCustom", ReBarWindow3240Pane);
                    fRebarBandDup2I2XCustom.UIMap.Scope = UIASeachScope.Children;
                    fRebarBandDup2I2XCustom.UIMap.Index = 2;
                    fRebarBandDup2I2XCustom.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rebar Band");
                }

                return fRebarBandDup2I2XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to SaveAsTitleBar
        /// </summary>
        public TitleBar SaveAsTitleBar
        {
            get
            {
                if (null == fSaveAsTitleBar)
                {
                    fSaveAsTitleBar = new TitleBar("SaveAsTitleBar", SaveAs32770Window);
                    fSaveAsTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fSaveAsTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save As");
                    fSaveAsTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                }

                return fSaveAsTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemMenuBarSyDup0MenuBar
        /// </summary>
        public MenuBar SystemMenuBarSyDup0MenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyDup0MenuBar)
                {
                    fSystemMenuBarSyDup0MenuBar = new MenuBar("SystemMenuBarSyDup0MenuBar", SaveAsTitleBar);
                    fSystemMenuBarSyDup0MenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                    fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                }

                return fSystemMenuBarSyDup0MenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemItem1Dup0MenuItem
        /// </summary>
        public MenuItem SystemItem1Dup0MenuItem
        {
            get
            {
                if (null == fSystemItem1Dup0MenuItem)
                {
                    fSystemItem1Dup0MenuItem = new MenuItem("SystemItem1Dup0MenuItem", SystemMenuBarSyDup0MenuBar);
                    fSystemItem1Dup0MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                    fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                }

                return fSystemItem1Dup0MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to CloseCloseDup0Button
        /// </summary>
        public Button CloseCloseDup0Button
        {
            get
            {
                if (null == fCloseCloseDup0Button)
                {
                    fCloseCloseDup0Button = new Button("CloseCloseDup0Button", SaveAsTitleBar);
                    fCloseCloseDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                    fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                }

                return fCloseCloseDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to Edit15Document
        /// </summary>
        public Document Edit15Document
        {
            get
            {
                if (null == fEdit15Document)
                {
                    fEdit15Document = new Document("Edit15Document", NewTextDocumentWindow);
                    fEdit15Document.UIMap.Scope = UIASeachScope.Children;
                    fEdit15Document.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Edit");
                    fEdit15Document.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"15");
                }

                return fEdit15Document;
            }
        }

        /// <summary>
        /// Gets Reference to WindowGripCustom
        /// </summary>
        public Custom WindowGripCustom
        {
            get
            {
                if (null == fWindowGripCustom)
                {
                    fWindowGripCustom = new Custom("WindowGripCustom", Edit15Document);
                    fWindowGripCustom.UIMap.Scope = UIASeachScope.Children;
                    fWindowGripCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Window.Grip");
                }

                return fWindowGripCustom;
            }
        }

        /// <summary>
        /// Gets Reference to HorizontalScrolScrollBar
        /// </summary>
        public ScrollBar HorizontalScrolScrollBar
        {
            get
            {
                if (null == fHorizontalScrolScrollBar)
                {
                    fHorizontalScrolScrollBar = new ScrollBar("HorizontalScrolScrollBar", Edit15Document);
                    fHorizontalScrolScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fHorizontalScrolScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Horizontal Scroll Bar");
                    fHorizontalScrolScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Horizontal ScrollBar");
                }

                return fHorizontalScrolScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to BackbysmallamouDup1Button
        /// </summary>
        public Button BackbysmallamouDup1Button
        {
            get
            {
                if (null == fBackbysmallamouDup1Button)
                {
                    fBackbysmallamouDup1Button = new Button("BackbysmallamouDup1Button", HorizontalScrolScrollBar);
                    fBackbysmallamouDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fBackbysmallamouDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back by small amount");
                    fBackbysmallamouDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallDecrement");
                }

                return fBackbysmallamouDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardbysmallaDup1Button
        /// </summary>
        public Button ForwardbysmallaDup1Button
        {
            get
            {
                if (null == fForwardbysmallaDup1Button)
                {
                    fForwardbysmallaDup1Button = new Button("ForwardbysmallaDup1Button", HorizontalScrolScrollBar);
                    fForwardbysmallaDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fForwardbysmallaDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward by small amount");
                    fForwardbysmallaDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallIncrement");
                }

                return fForwardbysmallaDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to VerticalScrollBDup2ScrollBar
        /// </summary>
        public ScrollBar VerticalScrollBDup2ScrollBar
        {
            get
            {
                if (null == fVerticalScrollBDup2ScrollBar)
                {
                    fVerticalScrollBDup2ScrollBar = new ScrollBar("VerticalScrollBDup2ScrollBar", Edit15Document);
                    fVerticalScrollBDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fVerticalScrollBDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Vertical Scroll Bar");
                    fVerticalScrollBDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Vertical ScrollBar");
                }

                return fVerticalScrollBDup2ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to BackbysmallamouDup2Button
        /// </summary>
        public Button BackbysmallamouDup2Button
        {
            get
            {
                if (null == fBackbysmallamouDup2Button)
                {
                    fBackbysmallamouDup2Button = new Button("BackbysmallamouDup2Button", VerticalScrollBDup2ScrollBar);
                    fBackbysmallamouDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fBackbysmallamouDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back by small amount");
                    fBackbysmallamouDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallDecrement");
                }

                return fBackbysmallamouDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardbysmallaDup2Button
        /// </summary>
        public Button ForwardbysmallaDup2Button
        {
            get
            {
                if (null == fForwardbysmallaDup2Button)
                {
                    fForwardbysmallaDup2Button = new Button("ForwardbysmallaDup2Button", VerticalScrollBDup2ScrollBar);
                    fForwardbysmallaDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fForwardbysmallaDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward by small amount");
                    fForwardbysmallaDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallIncrement");
                }

                return fForwardbysmallaDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to NewTextDocumentTitleBar
        /// </summary>
        public TitleBar NewTextDocumentTitleBar
        {
            get
            {
                if (null == fNewTextDocumentTitleBar)
                {
                    fNewTextDocumentTitleBar = new TitleBar("NewTextDocumentTitleBar", NewTextDocumentWindow);
                    fNewTextDocumentTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fNewTextDocumentTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"New Text Document.txt - Notepad");
                    fNewTextDocumentTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                }

                return fNewTextDocumentTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemMenuBarSyDup1MenuBar
        /// </summary>
        public MenuBar SystemMenuBarSyDup1MenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyDup1MenuBar)
                {
                    fSystemMenuBarSyDup1MenuBar = new MenuBar("SystemMenuBarSyDup1MenuBar", NewTextDocumentTitleBar);
                    fSystemMenuBarSyDup1MenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                    fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                }

                return fSystemMenuBarSyDup1MenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemItem1Dup1MenuItem
        /// </summary>
        public MenuItem SystemItem1Dup1MenuItem
        {
            get
            {
                if (null == fSystemItem1Dup1MenuItem)
                {
                    fSystemItem1Dup1MenuItem = new MenuItem("SystemItem1Dup1MenuItem", SystemMenuBarSyDup1MenuBar);
                    fSystemItem1Dup1MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                    fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                }

                return fSystemItem1Dup1MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to MinimizeMinimizDup0Button
        /// </summary>
        public Button MinimizeMinimizDup0Button
        {
            get
            {
                if (null == fMinimizeMinimizDup0Button)
                {
                    fMinimizeMinimizDup0Button = new Button("MinimizeMinimizDup0Button", NewTextDocumentTitleBar);
                    fMinimizeMinimizDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                    fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                }

                return fMinimizeMinimizDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to MaximizeMaximizDup0Button
        /// </summary>
        public Button MaximizeMaximizDup0Button
        {
            get
            {
                if (null == fMaximizeMaximizDup0Button)
                {
                    fMaximizeMaximizDup0Button = new Button("MaximizeMaximizDup0Button", NewTextDocumentTitleBar);
                    fMaximizeMaximizDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                    fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                }

                return fMaximizeMaximizDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to CloseCloseDup1Button
        /// </summary>
        public Button CloseCloseDup1Button
        {
            get
            {
                if (null == fCloseCloseDup1Button)
                {
                    fCloseCloseDup1Button = new Button("CloseCloseDup1Button", NewTextDocumentTitleBar);
                    fCloseCloseDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                    fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                }

                return fCloseCloseDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to ApplicationMenuBar
        /// </summary>
        public MenuBar ApplicationMenuBar
        {
            get
            {
                if (null == fApplicationMenuBar)
                {
                    fApplicationMenuBar = new MenuBar("ApplicationMenuBar", NewTextDocumentWindow);
                    fApplicationMenuBar.UIMap.Scope = UIASeachScope.Children;
                    fApplicationMenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Application");
                    fApplicationMenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"MenuBar");
                }

                return fApplicationMenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to FileItem1MenuItem
        /// </summary>
        public MenuItem FileItem1MenuItem
        {
            get
            {
                if (null == fFileItem1MenuItem)
                {
                    fFileItem1MenuItem = new MenuItem("FileItem1MenuItem", ApplicationMenuBar);
                    fFileItem1MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fFileItem1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File");
                    fFileItem1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                }

                return fFileItem1MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to EditItem2MenuItem
        /// </summary>
        public MenuItem EditItem2MenuItem
        {
            get
            {
                if (null == fEditItem2MenuItem)
                {
                    fEditItem2MenuItem = new MenuItem("EditItem2MenuItem", ApplicationMenuBar);
                    fEditItem2MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fEditItem2MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit");
                    fEditItem2MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 2");
                }

                return fEditItem2MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to FormatItem3MenuItem
        /// </summary>
        public MenuItem FormatItem3MenuItem
        {
            get
            {
                if (null == fFormatItem3MenuItem)
                {
                    fFormatItem3MenuItem = new MenuItem("FormatItem3MenuItem", ApplicationMenuBar);
                    fFormatItem3MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fFormatItem3MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Format");
                    fFormatItem3MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 3");
                }

                return fFormatItem3MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to ViewItem4MenuItem
        /// </summary>
        public MenuItem ViewItem4MenuItem
        {
            get
            {
                if (null == fViewItem4MenuItem)
                {
                    fViewItem4MenuItem = new MenuItem("ViewItem4MenuItem", ApplicationMenuBar);
                    fViewItem4MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fViewItem4MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"View");
                    fViewItem4MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 4");
                }

                return fViewItem4MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to HelpItem5MenuItem
        /// </summary>
        public MenuItem HelpItem5MenuItem
        {
            get
            {
                if (null == fHelpItem5MenuItem)
                {
                    fHelpItem5MenuItem = new MenuItem("HelpItem5MenuItem", ApplicationMenuBar);
                    fHelpItem5MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fHelpItem5MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                    fHelpItem5MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 5");
                }

                return fHelpItem5MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to HPDigitalSendinWindow
        /// </summary>
        public Window HPDigitalSendinWindow
        {
            get
            {
                if (null == fHPDigitalSendinWindow)
                {
                    fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                    fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {_ipAddress})");
                }

                return fHPDigitalSendinWindow;
            }
        }

        /// <summary>
        /// Gets Reference to AddPromptsWindoWindow
        /// </summary>
        public Window AddPromptsWindoWindow
        {
            get
            {
                if (null == fAddPromptsWindoWindow)
                {
                    fAddPromptsWindoWindow = new Window("AddPromptsWindoWindow", HPDigitalSendinWindow);
                    fAddPromptsWindoWindow.UIMap.Scope = UIASeachScope.Children;
                    fAddPromptsWindoWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Prompts");
                    fAddPromptsWindoWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fAddPromptsWindoWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6092E3F3-534E-4185-B621-FC3D67CC473F");
                }

                return fAddPromptsWindoWindow;
            }
        }

        /// <summary>
        /// Gets Reference to AddPromptsTitleBar
        /// </summary>
        public TitleBar AddPromptsTitleBar
        {
            get
            {
                if (null == fAddPromptsTitleBar)
                {
                    fAddPromptsTitleBar = new TitleBar("AddPromptsTitleBar", AddPromptsWindoWindow);
                    fAddPromptsTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fAddPromptsTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Prompts");
                    fAddPromptsTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                }

                return fAddPromptsTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemMenuBarSyDup2MenuBar
        /// </summary>
        public MenuBar SystemMenuBarSyDup2MenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyDup2MenuBar)
                {
                    fSystemMenuBarSyDup2MenuBar = new MenuBar("SystemMenuBarSyDup2MenuBar", AddPromptsTitleBar);
                    fSystemMenuBarSyDup2MenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyDup2MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                    fSystemMenuBarSyDup2MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                }

                return fSystemMenuBarSyDup2MenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemItem1Dup2MenuItem
        /// </summary>
        public MenuItem SystemItem1Dup2MenuItem
        {
            get
            {
                if (null == fSystemItem1Dup2MenuItem)
                {
                    fSystemItem1Dup2MenuItem = new MenuItem("SystemItem1Dup2MenuItem", SystemMenuBarSyDup2MenuBar);
                    fSystemItem1Dup2MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1Dup2MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                    fSystemItem1Dup2MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                }

                return fSystemItem1Dup2MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to MinimizeMinimizDup1Button
        /// </summary>
        public Button MinimizeMinimizDup1Button
        {
            get
            {
                if (null == fMinimizeMinimizDup1Button)
                {
                    fMinimizeMinimizDup1Button = new Button("MinimizeMinimizDup1Button", AddPromptsTitleBar);
                    fMinimizeMinimizDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                    fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                }

                return fMinimizeMinimizDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to MaximizeMaximizDup1Button
        /// </summary>
        public Button MaximizeMaximizDup1Button
        {
            get
            {
                if (null == fMaximizeMaximizDup1Button)
                {
                    fMaximizeMaximizDup1Button = new Button("MaximizeMaximizDup1Button", AddPromptsTitleBar);
                    fMaximizeMaximizDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                    fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                }

                return fMaximizeMaximizDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to CloseCloseDup2Button
        /// </summary>
        public Button CloseCloseDup2Button
        {
            get
            {
                if (null == fCloseCloseDup2Button)
                {
                    fCloseCloseDup2Button = new Button("CloseCloseDup2Button", AddPromptsTitleBar);
                    fCloseCloseDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                    fCloseCloseDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                }

                return fCloseCloseDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to GroupBoxDup0Group
        /// </summary>
        public Group GroupBoxDup0Group
        {
            get
            {
                if (null == fGroupBoxDup0Group)
                {
                    fGroupBoxDup0Group = new Group("GroupBoxDup0Group", AddPromptsWindoWindow);
                    fGroupBoxDup0Group.UIMap.Scope = UIASeachScope.Children;
                    fGroupBoxDup0Group.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fGroupBoxDup0Group;
            }
        }

        /// <summary>
        /// Gets Reference to AvailablePromptDup0Text
        /// </summary>
        public Text AvailablePromptDup0Text
        {
            get
            {
                if (null == fAvailablePromptDup0Text)
                {
                    fAvailablePromptDup0Text = new Text("AvailablePromptDup0Text", GroupBoxDup0Group);
                    fAvailablePromptDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAvailablePromptDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Available Prompts:");
                    fAvailablePromptDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fAvailablePromptDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to AvailablePromptDup1Text
        /// </summary>
        public Text AvailablePromptDup1Text
        {
            get
            {
                if (null == fAvailablePromptDup1Text)
                {
                    fAvailablePromptDup1Text = new Text("AvailablePromptDup1Text", AvailablePromptDup0Text);
                    fAvailablePromptDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAvailablePromptDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Available Prompts:");
                    fAvailablePromptDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAvailablePromptDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ListBox62d278ccList
        /// </summary>
        public List ListBox62d278ccList
        {
            get
            {
                if (null == fListBox62d278ccList)
                {
                    fListBox62d278ccList = new List("ListBox62d278ccList", GroupBoxDup0Group);
                    fListBox62d278ccList.UIMap.Scope = UIASeachScope.Children;
                    fListBox62d278ccList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBox");
                    fListBox62d278ccList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"62d278cc-b8cd-492b-b125-998831a6b3b8");
                }

                return fListBox62d278ccList;
            }
        }

        /// <summary>
        /// Gets Reference to OCRFILENAMEListListItem
        /// </summary>
        public ListItem OCRFILENAMEListListItem
        {
            get
            {
                if (null == fOCRFILENAMEListListItem)
                {
                    fOCRFILENAMEListListItem = new ListItem("OCRFILENAMEListListItem", ListBox62d278ccList);
                    fOCRFILENAMEListListItem.UIMap.Scope = UIASeachScope.Children;
                    fOCRFILENAMEListListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"[OCR]FILE NAME");
                    fOCRFILENAMEListListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                }

                return fOCRFILENAMEListListItem;
            }
        }

        /// <summary>
        /// Gets Reference to OCRFILENAMETextText
        /// </summary>
        public Text OCRFILENAMETextText
        {
            get
            {
                if (null == fOCRFILENAMETextText)
                {
                    fOCRFILENAMETextText = new Text("OCRFILENAMETextText", OCRFILENAMEListListItem);
                    fOCRFILENAMETextText.UIMap.Scope = UIASeachScope.Children;
                    fOCRFILENAMETextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OCR FILE NAME");
                    fOCRFILENAMETextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fOCRFILENAMETextText;
            }
        }

        /// <summary>
        /// Gets Reference to Image5A2956C841Image
        /// </summary>
        public Image Image5A2956C841Image
        {
            get
            {
                if (null == fImage5A2956C841Image)
                {
                    fImage5A2956C841Image = new Image("Image5A2956C841Image", OCRFILENAMEListListItem);
                    fImage5A2956C841Image.UIMap.Scope = UIASeachScope.Children;
                    fImage5A2956C841Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage5A2956C841Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5A2956C8-4172-4ea0-8363-C2D0A97CB783");
                }

                return fImage5A2956C841Image;
            }
        }

        /// <summary>
        /// Gets Reference to GroupBoxDup1I0XGroup
        /// </summary>
        public Group GroupBoxDup1I0XGroup
        {
            get
            {
                if (null == fGroupBoxDup1I0XGroup)
                {
                    fGroupBoxDup1I0XGroup = new Group("GroupBoxDup1I0XGroup", GroupBoxDup0Group);
                    fGroupBoxDup1I0XGroup.UIMap.Scope = UIASeachScope.Children;
                    fGroupBoxDup1I0XGroup.UIMap.Index = 0;
                    fGroupBoxDup1I0XGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fGroupBoxDup1I0XGroup;
            }
        }

        /// <summary>
        /// Gets Reference to Button58234b8b2Button
        /// </summary>
        public Button Button58234b8b2Button
        {
            get
            {
                if (null == fButton58234b8b2Button)
                {
                    fButton58234b8b2Button = new Button("Button58234b8b2Button", GroupBoxDup1I0XGroup);
                    fButton58234b8b2Button.UIMap.Scope = UIASeachScope.Children;
                    fButton58234b8b2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButton58234b8b2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"58234b8b-2846-4c1c-9296-4b344380119c");
                }

                return fButton58234b8b2Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup0Image
        /// </summary>
        public Image ImageDup0Image
        {
            get
            {
                if (null == fImageDup0Image)
                {
                    fImageDup0Image = new Image("ImageDup0Image", Button58234b8b2Button);
                    fImageDup0Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup0Image;
            }
        }

        /// <summary>
        /// Gets Reference to Button3b14973e7Button
        /// </summary>
        public Button Button3b14973e7Button
        {
            get
            {
                if (null == fButton3b14973e7Button)
                {
                    fButton3b14973e7Button = new Button("Button3b14973e7Button", GroupBoxDup1I0XGroup);
                    fButton3b14973e7Button.UIMap.Scope = UIASeachScope.Children;
                    fButton3b14973e7Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButton3b14973e7Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3b14973e-7bbe-405b-843b-e0cd7fc94ab7");
                }

                return fButton3b14973e7Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup1Image
        /// </summary>
        public Image ImageDup1Image
        {
            get
            {
                if (null == fImageDup1Image)
                {
                    fImageDup1Image = new Image("ImageDup1Image", Button3b14973e7Button);
                    fImageDup1Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup1Image;
            }
        }

        /// <summary>
        /// Gets Reference to GroupBoxDup2I1XGroup
        /// </summary>
        public Group GroupBoxDup2I1XGroup
        {
            get
            {
                if (null == fGroupBoxDup2I1XGroup)
                {
                    fGroupBoxDup2I1XGroup = new Group("GroupBoxDup2I1XGroup", GroupBoxDup0Group);
                    fGroupBoxDup2I1XGroup.UIMap.Scope = UIASeachScope.Children;
                    fGroupBoxDup2I1XGroup.UIMap.Index = 1;
                    fGroupBoxDup2I1XGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fGroupBoxDup2I1XGroup;
            }
        }

        /// <summary>
        /// Gets Reference to NewButtond6f529Button
        /// </summary>
        public Button NewButtond6f529Button
        {
            get
            {
                if (null == fNewButtond6f529Button)
                {
                    fNewButtond6f529Button = new Button("NewButtond6f529Button", GroupBoxDup2I1XGroup);
                    fNewButtond6f529Button.UIMap.Scope = UIASeachScope.Children;
                    fNewButtond6f529Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"New...");
                    fNewButtond6f529Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fNewButtond6f529Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"d6f529c4-0352-47d9-818f-9c2543f0efee");
                }

                return fNewButtond6f529Button;
            }
        }

        /// <summary>
        /// Gets Reference to NewTextBlockText
        /// </summary>
        public Text NewTextBlockText
        {
            get
            {
                if (null == fNewTextBlockText)
                {
                    fNewTextBlockText = new Text("NewTextBlockText", NewButtond6f529Button);
                    fNewTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fNewTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"New...");
                    fNewTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fNewTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to EditButtonb4df6Button
        /// </summary>
        public Button EditButtonb4df6Button
        {
            get
            {
                if (null == fEditButtonb4df6Button)
                {
                    fEditButtonb4df6Button = new Button("EditButtonb4df6Button", GroupBoxDup2I1XGroup);
                    fEditButtonb4df6Button.UIMap.Scope = UIASeachScope.Children;
                    fEditButtonb4df6Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit...");
                    fEditButtonb4df6Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fEditButtonb4df6Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b4df6af7-b656-4338-9650-0075f8b8a32d");
                }

                return fEditButtonb4df6Button;
            }
        }

        /// <summary>
        /// Gets Reference to EditTextBlockDup0Text
        /// </summary>
        public Text EditTextBlockDup0Text
        {
            get
            {
                if (null == fEditTextBlockDup0Text)
                {
                    fEditTextBlockDup0Text = new Text("EditTextBlockDup0Text", EditButtonb4df6Button);
                    fEditTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fEditTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit...");
                    fEditTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fEditTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to DeleteButton8ecButton
        /// </summary>
        public Button DeleteButton8ecButton
        {
            get
            {
                if (null == fDeleteButton8ecButton)
                {
                    fDeleteButton8ecButton = new Button("DeleteButton8ecButton", GroupBoxDup2I1XGroup);
                    fDeleteButton8ecButton.UIMap.Scope = UIASeachScope.Children;
                    fDeleteButton8ecButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                    fDeleteButton8ecButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fDeleteButton8ecButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8ec1ae53-ac78-4dad-83c4-092281e35922");
                }

                return fDeleteButton8ecButton;
            }
        }

        /// <summary>
        /// Gets Reference to DeleteTextBlockText
        /// </summary>
        public Text DeleteTextBlockText
        {
            get
            {
                if (null == fDeleteTextBlockText)
                {
                    fDeleteTextBlockText = new Text("DeleteTextBlockText", DeleteButton8ecButton);
                    fDeleteTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fDeleteTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Delete");
                    fDeleteTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fDeleteTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to PromptListText
        /// </summary>
        public Text PromptListText
        {
            get
            {
                if (null == fPromptListText)
                {
                    fPromptListText = new Text("PromptListText", GroupBoxDup0Group);
                    fPromptListText.UIMap.Scope = UIASeachScope.Children;
                    fPromptListText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Prompt List:");
                    fPromptListText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fPromptListText;
            }
        }

        /// <summary>
        /// Gets Reference to PromptListTextBText
        /// </summary>
        public Text PromptListTextBText
        {
            get
            {
                if (null == fPromptListTextBText)
                {
                    fPromptListTextBText = new Text("PromptListTextBText", PromptListText);
                    fPromptListTextBText.UIMap.Scope = UIASeachScope.Children;
                    fPromptListTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Prompt List:");
                    fPromptListTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fPromptListTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to ListBoxd5d588ddList
        /// </summary>
        public List ListBoxd5d588ddList
        {
            get
            {
                if (null == fListBoxd5d588ddList)
                {
                    fListBoxd5d588ddList = new List("ListBoxd5d588ddList", GroupBoxDup0Group);
                    fListBoxd5d588ddList.UIMap.Scope = UIASeachScope.Children;
                    fListBoxd5d588ddList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBox");
                    fListBoxd5d588ddList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"d5d588dd-f1ff-4748-af69-668b75ae457d");
                }

                return fListBoxd5d588ddList;
            }
        }

        /// <summary>
        /// Gets Reference to Buttonfb8688204Button
        /// </summary>
        public Button Buttonfb8688204Button
        {
            get
            {
                if (null == fButtonfb8688204Button)
                {
                    fButtonfb8688204Button = new Button("Buttonfb8688204Button", GroupBoxDup0Group);
                    fButtonfb8688204Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonfb8688204Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonfb8688204Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"fb868820-43be-4517-8dee-df3a75a224f3");
                }

                return fButtonfb8688204Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup2Image
        /// </summary>
        public Image ImageDup2Image
        {
            get
            {
                if (null == fImageDup2Image)
                {
                    fImageDup2Image = new Image("ImageDup2Image", Buttonfb8688204Button);
                    fImageDup2Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup2Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup2Image;
            }
        }

        /// <summary>
        /// Gets Reference to Button98ceca8e6Button
        /// </summary>
        public Button Button98ceca8e6Button
        {
            get
            {
                if (null == fButton98ceca8e6Button)
                {
                    fButton98ceca8e6Button = new Button("Button98ceca8e6Button", GroupBoxDup0Group);
                    fButton98ceca8e6Button.UIMap.Scope = UIASeachScope.Children;
                    fButton98ceca8e6Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButton98ceca8e6Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"98ceca8e-6c71-4088-8c56-ecc3e641eca5");
                }

                return fButton98ceca8e6Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup3Image
        /// </summary>
        public Image ImageDup3Image
        {
            get
            {
                if (null == fImageDup3Image)
                {
                    fImageDup3Image = new Image("ImageDup3Image", Button98ceca8e6Button);
                    fImageDup3Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup3Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup3Image;
            }
        }

        /// <summary>
        /// Gets Reference to OKButton5fc8b2bButton
        /// </summary>
        public Button OKButton5fc8b2bButton
        {
            get
            {
                if (null == fOKButton5fc8b2bButton)
                {
                    fOKButton5fc8b2bButton = new Button("OKButton5fc8b2bButton", AddPromptsWindoWindow);
                    fOKButton5fc8b2bButton.UIMap.Scope = UIASeachScope.Children;
                    fOKButton5fc8b2bButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKButton5fc8b2bButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButton5fc8b2bButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5fc8b2b6-2ad0-4053-a420-c3f67522afa4");
                }

                return fOKButton5fc8b2bButton;
            }
        }

        /// <summary>
        /// Gets Reference to OKTextBlockDup0Text
        /// </summary>
        public Text OKTextBlockDup0Text
        {
            get
            {
                if (null == fOKTextBlockDup0Text)
                {
                    fOKTextBlockDup0Text = new Text("OKTextBlockDup0Text", OKButton5fc8b2bButton);
                    fOKTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fOKTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to CancelButtonf87Button
        /// </summary>
        public Button CancelButtonf87Button
        {
            get
            {
                if (null == fCancelButtonf87Button)
                {
                    fCancelButtonf87Button = new Button("CancelButtonf87Button", AddPromptsWindoWindow);
                    fCancelButtonf87Button.UIMap.Scope = UIASeachScope.Children;
                    fCancelButtonf87Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    fCancelButtonf87Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButtonf87Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f87beaa7-eaf0-4f85-a771-dc625f83d2a3");
                }

                return fCancelButtonf87Button;
            }
        }

        /// <summary>
        /// Gets Reference to CancelTextBlockDup0Text
        /// </summary>
        public Text CancelTextBlockDup0Text
        {
            get
            {
                if (null == fCancelTextBlockDup0Text)
                {
                    fCancelTextBlockDup0Text = new Text("CancelTextBlockDup0Text", CancelButtonf87Button);
                    fCancelTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fCancelTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    fCancelTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fCancelTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to HelpButtonc1b1bButton
        /// </summary>
        public Button HelpButtonc1b1bButton
        {
            get
            {
                if (null == fHelpButtonc1b1bButton)
                {
                    fHelpButtonc1b1bButton = new Button("HelpButtonc1b1bButton", AddPromptsWindoWindow);
                    fHelpButtonc1b1bButton.UIMap.Scope = UIASeachScope.Children;
                    fHelpButtonc1b1bButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                    fHelpButtonc1b1bButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fHelpButtonc1b1bButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c1b1b996-8eed-47a5-b3ba-3868b10789f2");
                }

                return fHelpButtonc1b1bButton;
            }
        }

        /// <summary>
        /// Gets Reference to HelpTextBlockDup0Text
        /// </summary>
        public Text HelpTextBlockDup0Text
        {
            get
            {
                if (null == fHelpTextBlockDup0Text)
                {
                    fHelpTextBlockDup0Text = new Text("HelpTextBlockDup0Text", HelpButtonc1b1bButton);
                    fHelpTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fHelpTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                    fHelpTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fHelpTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to HPDigitalSendinTitleBar
        /// </summary>
        public TitleBar HPDigitalSendinTitleBar
        {
            get
            {
                if (null == fHPDigitalSendinTitleBar)
                {
                    fHPDigitalSendinTitleBar = new TitleBar("HPDigitalSendinTitleBar", HPDigitalSendinWindow);
                    fHPDigitalSendinTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Digital Sending Software Configuration (Server IP Address: 10.11.14.115)");
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                }

                return fHPDigitalSendinTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemMenuBarSyDup3MenuBar
        /// </summary>
        public MenuBar SystemMenuBarSyDup3MenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyDup3MenuBar)
                {
                    fSystemMenuBarSyDup3MenuBar = new MenuBar("SystemMenuBarSyDup3MenuBar", HPDigitalSendinTitleBar);
                    fSystemMenuBarSyDup3MenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyDup3MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                    fSystemMenuBarSyDup3MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                }

                return fSystemMenuBarSyDup3MenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemItem1Dup3MenuItem
        /// </summary>
        public MenuItem SystemItem1Dup3MenuItem
        {
            get
            {
                if (null == fSystemItem1Dup3MenuItem)
                {
                    fSystemItem1Dup3MenuItem = new MenuItem("SystemItem1Dup3MenuItem", SystemMenuBarSyDup3MenuBar);
                    fSystemItem1Dup3MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1Dup3MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                    fSystemItem1Dup3MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                }

                return fSystemItem1Dup3MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to MinimizeMinimizDup2Button
        /// </summary>
        public Button MinimizeMinimizDup2Button
        {
            get
            {
                if (null == fMinimizeMinimizDup2Button)
                {
                    fMinimizeMinimizDup2Button = new Button("MinimizeMinimizDup2Button", HPDigitalSendinTitleBar);
                    fMinimizeMinimizDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                    fMinimizeMinimizDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                }

                return fMinimizeMinimizDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to RestoreRestoreButton
        /// </summary>
        public Button RestoreRestoreButton
        {
            get
            {
                if (null == fRestoreRestoreButton)
                {
                    fRestoreRestoreButton = new Button("RestoreRestoreButton", HPDigitalSendinTitleBar);
                    fRestoreRestoreButton.UIMap.Scope = UIASeachScope.Children;
                    fRestoreRestoreButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Restore");
                    fRestoreRestoreButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Restore");
                }

                return fRestoreRestoreButton;
            }
        }

        /// <summary>
        /// Gets Reference to CloseCloseDup3Button
        /// </summary>
        public Button CloseCloseDup3Button
        {
            get
            {
                if (null == fCloseCloseDup3Button)
                {
                    fCloseCloseDup3Button = new Button("CloseCloseDup3Button", HPDigitalSendinTitleBar);
                    fCloseCloseDup3Button.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                    fCloseCloseDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                }

                return fCloseCloseDup3Button;
            }
        }

        /// <summary>
        /// Gets Reference to HelpButtonCB8CFButton
        /// </summary>
        public Button HelpButtonCB8CFButton
        {
            get
            {
                if (null == fHelpButtonCB8CFButton)
                {
                    fHelpButtonCB8CFButton = new Button("HelpButtonCB8CFButton", HPDigitalSendinWindow);
                    fHelpButtonCB8CFButton.UIMap.Scope = UIASeachScope.Children;
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CB8CF0C3-DFBE-49b8-B09B-03A34F5D4186");
                }

                return fHelpButtonCB8CFButton;
            }
        }

        /// <summary>
        /// Gets Reference to HelpTextBlockDup1Text
        /// </summary>
        public Text HelpTextBlockDup1Text
        {
            get
            {
                if (null == fHelpTextBlockDup1Text)
                {
                    fHelpTextBlockDup1Text = new Text("HelpTextBlockDup1Text", HelpButtonCB8CFButton);
                    fHelpTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fHelpTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                    fHelpTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fHelpTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ApplyButton61E2Button
        /// </summary>
        public Button ApplyButton61E2Button
        {
            get
            {
                if (null == fApplyButton61E2Button)
                {
                    fApplyButton61E2Button = new Button("ApplyButton61E2Button", HPDigitalSendinWindow);
                    fApplyButton61E2Button.UIMap.Scope = UIASeachScope.Children;
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"61E2369B-F53B-4662-A361-B3034C4EFF67");
                }

                return fApplyButton61E2Button;
            }
        }

        /// <summary>
        /// Gets Reference to ApplyTextBlockText
        /// </summary>
        public Text ApplyTextBlockText
        {
            get
            {
                if (null == fApplyTextBlockText)
                {
                    fApplyTextBlockText = new Text("ApplyTextBlockText", ApplyButton61E2Button);
                    fApplyTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                    fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fApplyTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to CancelButton65CButton
        /// </summary>
        public Button CancelButton65CButton
        {
            get
            {
                if (null == fCancelButton65CButton)
                {
                    fCancelButton65CButton = new Button("CancelButton65CButton", HPDigitalSendinWindow);
                    fCancelButton65CButton.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"65C76204-7AB5-4681-B7FD-2D8F02DA6D4B");
                }

                return fCancelButton65CButton;
            }
        }

        /// <summary>
        /// Gets Reference to CancelTextBlockDup1Text
        /// </summary>
        public Text CancelTextBlockDup1Text
        {
            get
            {
                if (null == fCancelTextBlockDup1Text)
                {
                    fCancelTextBlockDup1Text = new Text("CancelTextBlockDup1Text", CancelButton65CButton);
                    fCancelTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fCancelTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    fCancelTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fCancelTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to OKButtonCC2EF49Button
        /// </summary>
        public Button OKButtonCC2EF49Button
        {
            get
            {
                if (null == fOKButtonCC2EF49Button)
                {
                    fOKButtonCC2EF49Button = new Button("OKButtonCC2EF49Button", HPDigitalSendinWindow);
                    fOKButtonCC2EF49Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CC2EF491-0BD1-4ac5-9D00-AA61A9D6BA0C");
                }

                return fOKButtonCC2EF49Button;
            }
        }

        /// <summary>
        /// Gets Reference to OKTextBlockDup1Text
        /// </summary>
        public Text OKTextBlockDup1Text
        {
            get
            {
                if (null == fOKTextBlockDup1Text)
                {
                    fOKTextBlockDup1Text = new Text("OKTextBlockDup1Text", OKButtonCC2EF49Button);
                    fOKTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fOKTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TabControlec0fdTab
        /// </summary>
        public Tab TabControlec0fdTab
        {
            get
            {
                if (null == fTabControlec0fdTab)
                {
                    fTabControlec0fdTab = new Tab("TabControlec0fdTab", HPDigitalSendinWindow);
                    fTabControlec0fdTab.UIMap.Scope = UIASeachScope.Children;
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ec0fd6cd-2ab8-482f-96a5-d1fa158f38d1");
                }

                return fTabControlec0fdTab;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup0TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup0TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup0TabItem)
                {
                    fSystemWindowsCoDup0TabItem = new TabItem("SystemWindowsCoDup0TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup0TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1e2be878-0c03-4404-988c-54d0df925f0f");
                }

                return fSystemWindowsCoDup0TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralTextmGenText
        /// </summary>
        public Text GeneralTextmGenText
        {
            get
            {
                if (null == fGeneralTextmGenText)
                {
                    fGeneralTextmGenText = new Text("GeneralTextmGenText", SystemWindowsCoDup0TabItem);
                    fGeneralTextmGenText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                }

                return fGeneralTextmGenText;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralTextBlocText
        /// </summary>
        public Text GeneralTextBlocText
        {
            get
            {
                if (null == fGeneralTextBlocText)
                {
                    fGeneralTextBlocText = new Text("GeneralTextBlocText", GeneralTextmGenText);
                    fGeneralTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fGeneralTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to Text933345b04e3Text
        /// </summary>
        public Text Text933345b04e3Text
        {
            get
            {
                if (null == fText933345b04e3Text)
                {
                    fText933345b04e3Text = new Text("Text933345b04e3Text", SystemWindowsCoDup0TabItem);
                    fText933345b04e3Text.UIMap.Scope = UIASeachScope.Children;
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"933345b0-4e39-44d3-a511-0077f3176ca4");
                }

                return fText933345b04e3Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text786caf67344Text
        /// </summary>
        public Text Text786caf67344Text
        {
            get
            {
                if (null == fText786caf67344Text)
                {
                    fText786caf67344Text = new Text("Text786caf67344Text", SystemWindowsCoDup0TabItem);
                    fText786caf67344Text.UIMap.Scope = UIASeachScope.Children;
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"786caf67-344f-4ddc-83a5-b9431fb36731");
                }

                return fText786caf67344Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup1TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup1TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup1TabItem)
                {
                    fSystemWindowsCoDup1TabItem = new TabItem("SystemWindowsCoDup1TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup1TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4e90d18a-f33c-43c0-8505-08f4a17169b5");
                }

                return fSystemWindowsCoDup1TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationTDup0Text
        /// </summary>
        public Text AuthenticationTDup0Text
        {
            get
            {
                if (null == fAuthenticationTDup0Text)
                {
                    fAuthenticationTDup0Text = new Text("AuthenticationTDup0Text", SystemWindowsCoDup1TabItem);
                    fAuthenticationTDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                }

                return fAuthenticationTDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationTDup1Text
        /// </summary>
        public Text AuthenticationTDup1Text
        {
            get
            {
                if (null == fAuthenticationTDup1Text)
                {
                    fAuthenticationTDup1Text = new Text("AuthenticationTDup1Text", AuthenticationTDup0Text);
                    fAuthenticationTDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAuthenticationTDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text31EC91730B9Text
        /// </summary>
        public Text Text31EC91730B9Text
        {
            get
            {
                if (null == fText31EC91730B9Text)
                {
                    fText31EC91730B9Text = new Text("Text31EC91730B9Text", SystemWindowsCoDup1TabItem);
                    fText31EC91730B9Text.UIMap.Scope = UIASeachScope.Children;
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"31EC9173-0B98-4d46-BC99-7DF8EA2BE02F");
                }

                return fText31EC91730B9Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextA479C271445Text
        /// </summary>
        public Text TextA479C271445Text
        {
            get
            {
                if (null == fTextA479C271445Text)
                {
                    fTextA479C271445Text = new Text("TextA479C271445Text", SystemWindowsCoDup1TabItem);
                    fTextA479C271445Text.UIMap.Scope = UIASeachScope.Children;
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A479C271-445D-43f1-864D-7503428703E4");
                }

                return fTextA479C271445Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup2TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup2TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup2TabItem)
                {
                    fSystemWindowsCoDup2TabItem = new TabItem("SystemWindowsCoDup2TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup2TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33A07ED3-E1EE-411e-B583-7D0A3374100F");
                }

                return fSystemWindowsCoDup2TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to EmailTextmEmailText
        /// </summary>
        public Text EmailTextmEmailText
        {
            get
            {
                if (null == fEmailTextmEmailText)
                {
                    fEmailTextmEmailText = new Text("EmailTextmEmailText", SystemWindowsCoDup2TabItem);
                    fEmailTextmEmailText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                }

                return fEmailTextmEmailText;
            }
        }

        /// <summary>
        /// Gets Reference to EmailTextBlockText
        /// </summary>
        public Text EmailTextBlockText
        {
            get
            {
                if (null == fEmailTextBlockText)
                {
                    fEmailTextBlockText = new Text("EmailTextBlockText", EmailTextmEmailText);
                    fEmailTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fEmailTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to Text32de714a8bdText
        /// </summary>
        public Text Text32de714a8bdText
        {
            get
            {
                if (null == fText32de714a8bdText)
                {
                    fText32de714a8bdText = new Text("Text32de714a8bdText", SystemWindowsCoDup2TabItem);
                    fText32de714a8bdText.UIMap.Scope = UIASeachScope.Children;
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"32de714a-8bda-4f11-bf20-b9a56b5f18bc");
                }

                return fText32de714a8bdText;
            }
        }

        /// <summary>
        /// Gets Reference to Text3b2a8761f4fText
        /// </summary>
        public Text Text3b2a8761f4fText
        {
            get
            {
                if (null == fText3b2a8761f4fText)
                {
                    fText3b2a8761f4fText = new Text("Text3b2a8761f4fText", SystemWindowsCoDup2TabItem);
                    fText3b2a8761f4fText.UIMap.Scope = UIASeachScope.Children;
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3b2a8761-f4f6-41b1-b08c-9c33744bdc43");
                }

                return fText3b2a8761f4fText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockDup0Text
        /// </summary>
        public Text TextBlockDup0Text
        {
            get
            {
                if (null == fTextBlockDup0Text)
                {
                    fTextBlockDup0Text = new Text("TextBlockDup0Text", Text3b2a8761f4fText);
                    fTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup3TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup3TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup3TabItem)
                {
                    fSystemWindowsCoDup3TabItem = new TabItem("SystemWindowsCoDup3TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4f116988-2b22-473f-bca3-094589a44954");
                }

                return fSystemWindowsCoDup3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to FaxTextmFaxTabLText
        /// </summary>
        public Text FaxTextmFaxTabLText
        {
            get
            {
                if (null == fFaxTextmFaxTabLText)
                {
                    fFaxTextmFaxTabLText = new Text("FaxTextmFaxTabLText", SystemWindowsCoDup3TabItem);
                    fFaxTextmFaxTabLText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                }

                return fFaxTextmFaxTabLText;
            }
        }

        /// <summary>
        /// Gets Reference to FaxTextBlockText
        /// </summary>
        public Text FaxTextBlockText
        {
            get
            {
                if (null == fFaxTextBlockText)
                {
                    fFaxTextBlockText = new Text("FaxTextBlockText", FaxTextmFaxTabLText);
                    fFaxTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fFaxTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to TextD1ED4F16F38Text
        /// </summary>
        public Text TextD1ED4F16F38Text
        {
            get
            {
                if (null == fTextD1ED4F16F38Text)
                {
                    fTextD1ED4F16F38Text = new Text("TextD1ED4F16F38Text", SystemWindowsCoDup3TabItem);
                    fTextD1ED4F16F38Text.UIMap.Scope = UIASeachScope.Children;
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D1ED4F16-F389-4dfd-A884-D258EDB48C11");
                }

                return fTextD1ED4F16F38Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text7DDE04FD251Text
        /// </summary>
        public Text Text7DDE04FD251Text
        {
            get
            {
                if (null == fText7DDE04FD251Text)
                {
                    fText7DDE04FD251Text = new Text("Text7DDE04FD251Text", SystemWindowsCoDup3TabItem);
                    fText7DDE04FD251Text.UIMap.Scope = UIASeachScope.Children;
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7DDE04FD-2519-44c2-A212-67B0838E1C91");
                }

                return fText7DDE04FD251Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup4TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup4TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup4TabItem)
                {
                    fSystemWindowsCoDup4TabItem = new TabItem("SystemWindowsCoDup4TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup4TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ff96a045-6e12-4ce3-ba85-b65d16c39ffb");
                }

                return fSystemWindowsCoDup4TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoFolderTexDup0Text
        /// </summary>
        public Text SendtoFolderTexDup0Text
        {
            get
            {
                if (null == fSendtoFolderTexDup0Text)
                {
                    fSendtoFolderTexDup0Text = new Text("SendtoFolderTexDup0Text", SystemWindowsCoDup4TabItem);
                    fSendtoFolderTexDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                }

                return fSendtoFolderTexDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoFolderTexDup1Text
        /// </summary>
        public Text SendtoFolderTexDup1Text
        {
            get
            {
                if (null == fSendtoFolderTexDup1Text)
                {
                    fSendtoFolderTexDup1Text = new Text("SendtoFolderTexDup1Text", SendtoFolderTexDup0Text);
                    fSendtoFolderTexDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSendtoFolderTexDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text7a57f43ecb1Text
        /// </summary>
        public Text Text7a57f43ecb1Text
        {
            get
            {
                if (null == fText7a57f43ecb1Text)
                {
                    fText7a57f43ecb1Text = new Text("Text7a57f43ecb1Text", SystemWindowsCoDup4TabItem);
                    fText7a57f43ecb1Text.UIMap.Scope = UIASeachScope.Children;
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                }

                return fText7a57f43ecb1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text654b650dd19Text
        /// </summary>
        public Text Text654b650dd19Text
        {
            get
            {
                if (null == fText654b650dd19Text)
                {
                    fText654b650dd19Text = new Text("Text654b650dd19Text", SystemWindowsCoDup4TabItem);
                    fText654b650dd19Text.UIMap.Scope = UIASeachScope.Children;
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                }

                return fText654b650dd19Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup5TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup5TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup5TabItem)
                {
                    fSystemWindowsCoDup5TabItem = new TabItem("SystemWindowsCoDup5TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup5TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"38feb495-2893-4d8b-8961-31ebc2a3bd56");
                }

                return fSystemWindowsCoDup5TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to WorkflowsTextmWText
        /// </summary>
        public Text WorkflowsTextmWText
        {
            get
            {
                if (null == fWorkflowsTextmWText)
                {
                    fWorkflowsTextmWText = new Text("WorkflowsTextmWText", SystemWindowsCoDup5TabItem);
                    fWorkflowsTextmWText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                }

                return fWorkflowsTextmWText;
            }
        }

        /// <summary>
        /// Gets Reference to WorkflowsTextBlDup0Text
        /// </summary>
        public Text WorkflowsTextBlDup0Text
        {
            get
            {
                if (null == fWorkflowsTextBlDup0Text)
                {
                    fWorkflowsTextBlDup0Text = new Text("WorkflowsTextBlDup0Text", WorkflowsTextmWText);
                    fWorkflowsTextBlDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextBlDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                    fWorkflowsTextBlDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fWorkflowsTextBlDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text22D9C34E84CText
        /// </summary>
        public Text Text22D9C34E84CText
        {
            get
            {
                if (null == fText22D9C34E84CText)
                {
                    fText22D9C34E84CText = new Text("Text22D9C34E84CText", SystemWindowsCoDup5TabItem);
                    fText22D9C34E84CText.UIMap.Scope = UIASeachScope.Children;
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22D9C34E-84C8-4995-AC9E-5B46F8284284");
                }

                return fText22D9C34E84CText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockDup1Text
        /// </summary>
        public Text TextBlockDup1Text
        {
            get
            {
                if (null == fTextBlockDup1Text)
                {
                    fTextBlockDup1Text = new Text("TextBlockDup1Text", Text22D9C34E84CText);
                    fTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextC8D15BD39C8Text
        /// </summary>
        public Text TextC8D15BD39C8Text
        {
            get
            {
                if (null == fTextC8D15BD39C8Text)
                {
                    fTextC8D15BD39C8Text = new Text("TextC8D15BD39C8Text", SystemWindowsCoDup5TabItem);
                    fTextC8D15BD39C8Text.UIMap.Scope = UIASeachScope.Children;
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C8D15BD3-9C8D-484c-A5E2-309CA8AA6C56");
                }

                return fTextC8D15BD39C8Text;
            }
        }

        /// <summary>
        /// Gets Reference to EnableWorkflowsCheckBox
        /// </summary>
        public CheckBox EnableWorkflowsCheckBox
        {
            get
            {
                if (null == fEnableWorkflowsCheckBox)
                {
                    fEnableWorkflowsCheckBox = new CheckBox("EnableWorkflowsCheckBox", SystemWindowsCoDup5TabItem);
                    fEnableWorkflowsCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEnableWorkflowsCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Workflows");
                    fEnableWorkflowsCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fEnableWorkflowsCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"566318c9-1b59-4da0-a51e-da04be46709f");
                }

                return fEnableWorkflowsCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to WorkflowsGroupBGroup
        /// </summary>
        public Group WorkflowsGroupBGroup
        {
            get
            {
                if (null == fWorkflowsGroupBGroup)
                {
                    fWorkflowsGroupBGroup = new Group("WorkflowsGroupBGroup", SystemWindowsCoDup5TabItem);
                    fWorkflowsGroupBGroup.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsGroupBGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                    fWorkflowsGroupBGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fWorkflowsGroupBGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"31A44099-1E87-4348-992C-66CC0BDED7CE");
                }

                return fWorkflowsGroupBGroup;
            }
        }

        /// <summary>
        /// Gets Reference to WorkflowsTextBlDup1Text
        /// </summary>
        public Text WorkflowsTextBlDup1Text
        {
            get
            {
                if (null == fWorkflowsTextBlDup1Text)
                {
                    fWorkflowsTextBlDup1Text = new Text("WorkflowsTextBlDup1Text", WorkflowsGroupBGroup);
                    fWorkflowsTextBlDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextBlDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                    fWorkflowsTextBlDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fWorkflowsTextBlDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to DisplayPromptTeCheckBox
        /// </summary>
        public CheckBox DisplayPromptTeCheckBox
        {
            get
            {
                if (null == fDisplayPromptTeCheckBox)
                {
                    fDisplayPromptTeCheckBox = new CheckBox("DisplayPromptTeCheckBox", WorkflowsGroupBGroup);
                    fDisplayPromptTeCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fDisplayPromptTeCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Display Prompt Text");
                    fDisplayPromptTeCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fDisplayPromptTeCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"EF74004A-9D76-4544-BFCD-9FCE694F91B5");
                }

                return fDisplayPromptTeCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to DisplayPromptTeText
        /// </summary>
        public Text DisplayPromptTeText
        {
            get
            {
                if (null == fDisplayPromptTeText)
                {
                    fDisplayPromptTeText = new Text("DisplayPromptTeText", DisplayPromptTeCheckBox);
                    fDisplayPromptTeText.UIMap.Scope = UIASeachScope.Children;
                    fDisplayPromptTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Display Prompt Text");
                    fDisplayPromptTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fDisplayPromptTeText;
            }
        }

        /// <summary>
        /// Gets Reference to Buttona1be7942bButton
        /// </summary>
        public Button Buttona1be7942bButton
        {
            get
            {
                if (null == fButtona1be7942bButton)
                {
                    fButtona1be7942bButton = new Button("Buttona1be7942bButton", WorkflowsGroupBGroup);
                    fButtona1be7942bButton.UIMap.Scope = UIASeachScope.Children;
                    fButtona1be7942bButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtona1be7942bButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a1be7942-bfe7-4f51-88a8-d3a0b76095b4");
                }

                return fButtona1be7942bButton;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup4Image
        /// </summary>
        public Image ImageDup4Image
        {
            get
            {
                if (null == fImageDup4Image)
                {
                    fImageDup4Image = new Image("ImageDup4Image", Buttona1be7942bButton);
                    fImageDup4Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup4Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup4Image;
            }
        }

        /// <summary>
        /// Gets Reference to AddGroupText
        /// </summary>
        public Text AddGroupText
        {
            get
            {
                if (null == fAddGroupText)
                {
                    fAddGroupText = new Text("AddGroupText", Buttona1be7942bButton);
                    fAddGroupText.UIMap.Scope = UIASeachScope.Children;
                    fAddGroupText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group...");
                    fAddGroupText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fAddGroupText;
            }
        }

        /// <summary>
        /// Gets Reference to AddGroupTextBloText
        /// </summary>
        public Text AddGroupTextBloText
        {
            get
            {
                if (null == fAddGroupTextBloText)
                {
                    fAddGroupTextBloText = new Text("AddGroupTextBloText", AddGroupText);
                    fAddGroupTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group...");
                    fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAddGroupTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to Button1864d3cfeButton
        /// </summary>
        public Button Button1864d3cfeButton
        {
            get
            {
                if (null == fButton1864d3cfeButton)
                {
                    fButton1864d3cfeButton = new Button("Button1864d3cfeButton", WorkflowsGroupBGroup);
                    fButton1864d3cfeButton.UIMap.Scope = UIASeachScope.Children;
                    fButton1864d3cfeButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButton1864d3cfeButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1864d3cf-e8a1-4626-81c7-a69b47b8cec9");
                }

                return fButton1864d3cfeButton;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup5Image
        /// </summary>
        public Image ImageDup5Image
        {
            get
            {
                if (null == fImageDup5Image)
                {
                    fImageDup5Image = new Image("ImageDup5Image", Button1864d3cfeButton);
                    fImageDup5Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup5Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup5Image;
            }
        }

        /// <summary>
        /// Gets Reference to AddMenuText
        /// </summary>
        public Text AddMenuText
        {
            get
            {
                if (null == fAddMenuText)
                {
                    fAddMenuText = new Text("AddMenuText", Button1864d3cfeButton);
                    fAddMenuText.UIMap.Scope = UIASeachScope.Children;
                    fAddMenuText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Menu...");
                    fAddMenuText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fAddMenuText;
            }
        }

        /// <summary>
        /// Gets Reference to AddMenuTextBlocText
        /// </summary>
        public Text AddMenuTextBlocText
        {
            get
            {
                if (null == fAddMenuTextBlocText)
                {
                    fAddMenuTextBlocText = new Text("AddMenuTextBlocText", AddMenuText);
                    fAddMenuTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fAddMenuTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Menu...");
                    fAddMenuTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAddMenuTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to Button13d3c30c3Button
        /// </summary>
        public Button Button13d3c30c3Button
        {
            get
            {
                if (null == fButton13d3c30c3Button)
                {
                    fButton13d3c30c3Button = new Button("Button13d3c30c3Button", WorkflowsGroupBGroup);
                    fButton13d3c30c3Button.UIMap.Scope = UIASeachScope.Children;
                    fButton13d3c30c3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButton13d3c30c3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"13d3c30c-382a-43ed-900f-7b6d3f7dc586");
                }

                return fButton13d3c30c3Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup6Image
        /// </summary>
        public Image ImageDup6Image
        {
            get
            {
                if (null == fImageDup6Image)
                {
                    fImageDup6Image = new Image("ImageDup6Image", Button13d3c30c3Button);
                    fImageDup6Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup6Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup6Image;
            }
        }

        /// <summary>
        /// Gets Reference to AddFormText
        /// </summary>
        public Text AddFormText
        {
            get
            {
                if (null == fAddFormText)
                {
                    fAddFormText = new Text("AddFormText", Button13d3c30c3Button);
                    fAddFormText.UIMap.Scope = UIASeachScope.Children;
                    fAddFormText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Form...");
                    fAddFormText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fAddFormText;
            }
        }

        /// <summary>
        /// Gets Reference to AddFormTextBlocText
        /// </summary>
        public Text AddFormTextBlocText
        {
            get
            {
                if (null == fAddFormTextBlocText)
                {
                    fAddFormTextBlocText = new Text("AddFormTextBlocText", AddFormText);
                    fAddFormTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fAddFormTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Form...");
                    fAddFormTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAddFormTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to Buttond508dee64Button
        /// </summary>
        public Button Buttond508dee64Button
        {
            get
            {
                if (null == fButtond508dee64Button)
                {
                    fButtond508dee64Button = new Button("Buttond508dee64Button", WorkflowsGroupBGroup);
                    fButtond508dee64Button.UIMap.Scope = UIASeachScope.Children;
                    fButtond508dee64Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtond508dee64Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"d508dee6-4a70-4d0c-8ec4-492a34329617");
                }

                return fButtond508dee64Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup7Image
        /// </summary>
        public Image ImageDup7Image
        {
            get
            {
                if (null == fImageDup7Image)
                {
                    fImageDup7Image = new Image("ImageDup7Image", Buttond508dee64Button);
                    fImageDup7Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup7Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup7Image;
            }
        }

        /// <summary>
        /// Gets Reference to AddPromptsText
        /// </summary>
        public Text AddPromptsText
        {
            get
            {
                if (null == fAddPromptsText)
                {
                    fAddPromptsText = new Text("AddPromptsText", Buttond508dee64Button);
                    fAddPromptsText.UIMap.Scope = UIASeachScope.Children;
                    fAddPromptsText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Prompts...");
                    fAddPromptsText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fAddPromptsText;
            }
        }

        /// <summary>
        /// Gets Reference to AddPromptsTextBText
        /// </summary>
        public Text AddPromptsTextBText
        {
            get
            {
                if (null == fAddPromptsTextBText)
                {
                    fAddPromptsTextBText = new Text("AddPromptsTextBText", AddPromptsText);
                    fAddPromptsTextBText.UIMap.Scope = UIASeachScope.Children;
                    fAddPromptsTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Prompts...");
                    fAddPromptsTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAddPromptsTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to EditButton252ecButton
        /// </summary>
        public Button EditButton252ecButton
        {
            get
            {
                if (null == fEditButton252ecButton)
                {
                    fEditButton252ecButton = new Button("EditButton252ecButton", WorkflowsGroupBGroup);
                    fEditButton252ecButton.UIMap.Scope = UIASeachScope.Children;
                    fEditButton252ecButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit...");
                    fEditButton252ecButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fEditButton252ecButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"252ecbbe-c9e3-4f3e-b022-493d53bd6f91");
                }

                return fEditButton252ecButton;
            }
        }

        /// <summary>
        /// Gets Reference to EditTextBlockDup1Text
        /// </summary>
        public Text EditTextBlockDup1Text
        {
            get
            {
                if (null == fEditTextBlockDup1Text)
                {
                    fEditTextBlockDup1Text = new Text("EditTextBlockDup1Text", EditButton252ecButton);
                    fEditTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fEditTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit...");
                    fEditTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fEditTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveButton148Button
        /// </summary>
        public Button RemoveButton148Button
        {
            get
            {
                if (null == fRemoveButton148Button)
                {
                    fRemoveButton148Button = new Button("RemoveButton148Button", WorkflowsGroupBGroup);
                    fRemoveButton148Button.UIMap.Scope = UIASeachScope.Children;
                    fRemoveButton148Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                    fRemoveButton148Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRemoveButton148Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1485788e-38b6-4b04-b6f1-0d10f55e0749");
                }

                return fRemoveButton148Button;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveTextBlockText
        /// </summary>
        public Text RemoveTextBlockText
        {
            get
            {
                if (null == fRemoveTextBlockText)
                {
                    fRemoveTextBlockText = new Text("RemoveTextBlockText", RemoveButton148Button);
                    fRemoveTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fRemoveTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                    fRemoveTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fRemoveTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to TreeViewd9ec713Tree
        /// </summary>
        public Tree TreeViewd9ec713Tree
        {
            get
            {
                if (null == fTreeViewd9ec713Tree)
                {
                    fTreeViewd9ec713Tree = new Tree("TreeViewd9ec713Tree", WorkflowsGroupBGroup);
                    fTreeViewd9ec713Tree.UIMap.Scope = UIASeachScope.Children;
                    fTreeViewd9ec713Tree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeView");
                    fTreeViewd9ec713Tree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"d9ec7133-aa0e-4589-828b-dba70b9746b8");
                }

                return fTreeViewd9ec713Tree;
            }
        }

        /// <summary>
        /// Gets Reference to COMMONMFPGROUPTTreeItem
        /// </summary>
        public TreeItem COMMONMFPGROUPTTreeItem
        {
            get
            {
                if (null == fCOMMONMFPGROUPTTreeItem)
                {
                    fCOMMONMFPGROUPTTreeItem = new TreeItem("COMMONMFPGROUPTTreeItem", TreeViewd9ec713Tree);
                    fCOMMONMFPGROUPTTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fCOMMONMFPGROUPTTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"COMMON MFP GROUP");
                    fCOMMONMFPGROUPTTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fCOMMONMFPGROUPTTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup0Button
        /// </summary>
        public Button ButtonExpanderDup0Button
        {
            get
            {
                if (null == fButtonExpanderDup0Button)
                {
                    fButtonExpanderDup0Button = new Button("ButtonExpanderDup0Button", COMMONMFPGROUPTTreeItem);
                    fButtonExpanderDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup8Image
        /// </summary>
        public Image ImageDup8Image
        {
            get
            {
                if (null == fImageDup8Image)
                {
                    fImageDup8Image = new Image("ImageDup8Image", COMMONMFPGROUPTTreeItem);
                    fImageDup8Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup8Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup8Image;
            }
        }

        /// <summary>
        /// Gets Reference to COMMONMFPGROUPTText
        /// </summary>
        public Text COMMONMFPGROUPTText
        {
            get
            {
                if (null == fCOMMONMFPGROUPTText)
                {
                    fCOMMONMFPGROUPTText = new Text("COMMONMFPGROUPTText", COMMONMFPGROUPTTreeItem);
                    fCOMMONMFPGROUPTText.UIMap.Scope = UIASeachScope.Children;
                    fCOMMONMFPGROUPTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"COMMON MFP GROUP");
                    fCOMMONMFPGROUPTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fCOMMONMFPGROUPTText;
            }
        }

        /// <summary>
        /// Gets Reference to xsTreeViewItemDup0TreeItem
        /// </summary>
        public TreeItem xsTreeViewItemDup0TreeItem
        {
            get
            {
                if (null == fxsTreeViewItemDup0TreeItem)
                {
                    fxsTreeViewItemDup0TreeItem = new TreeItem("xsTreeViewItemDup0TreeItem", COMMONMFPGROUPTTreeItem);
                    fxsTreeViewItemDup0TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fxsTreeViewItemDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"xs");
                    fxsTreeViewItemDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fxsTreeViewItemDup0TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup1Button
        /// </summary>
        public Button ButtonExpanderDup1Button
        {
            get
            {
                if (null == fButtonExpanderDup1Button)
                {
                    fButtonExpanderDup1Button = new Button("ButtonExpanderDup1Button", xsTreeViewItemDup0TreeItem);
                    fButtonExpanderDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup9Image
        /// </summary>
        public Image ImageDup9Image
        {
            get
            {
                if (null == fImageDup9Image)
                {
                    fImageDup9Image = new Image("ImageDup9Image", xsTreeViewItemDup0TreeItem);
                    fImageDup9Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup9Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup9Image;
            }
        }

        /// <summary>
        /// Gets Reference to xsTextBlockDup0Text
        /// </summary>
        public Text xsTextBlockDup0Text
        {
            get
            {
                if (null == fxsTextBlockDup0Text)
                {
                    fxsTextBlockDup0Text = new Text("xsTextBlockDup0Text", xsTreeViewItemDup0TreeItem);
                    fxsTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fxsTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"xs");
                    fxsTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fxsTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to xsTreeViewItemDup1TreeItem
        /// </summary>
        public TreeItem xsTreeViewItemDup1TreeItem
        {
            get
            {
                if (null == fxsTreeViewItemDup1TreeItem)
                {
                    fxsTreeViewItemDup1TreeItem = new TreeItem("xsTreeViewItemDup1TreeItem", xsTreeViewItemDup0TreeItem);
                    fxsTreeViewItemDup1TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fxsTreeViewItemDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"xs");
                    fxsTreeViewItemDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fxsTreeViewItemDup1TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup2Button
        /// </summary>
        public Button ButtonExpanderDup2Button
        {
            get
            {
                if (null == fButtonExpanderDup2Button)
                {
                    fButtonExpanderDup2Button = new Button("ButtonExpanderDup2Button", xsTreeViewItemDup1TreeItem);
                    fButtonExpanderDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup10Image
        /// </summary>
        public Image ImageDup10Image
        {
            get
            {
                if (null == fImageDup10Image)
                {
                    fImageDup10Image = new Image("ImageDup10Image", xsTreeViewItemDup1TreeItem);
                    fImageDup10Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup10Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup10Image;
            }
        }

        /// <summary>
        /// Gets Reference to xsTextBlockDup1Text
        /// </summary>
        public Text xsTextBlockDup1Text
        {
            get
            {
                if (null == fxsTextBlockDup1Text)
                {
                    fxsTextBlockDup1Text = new Text("xsTextBlockDup1Text", xsTreeViewItemDup1TreeItem);
                    fxsTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fxsTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"xs");
                    fxsTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fxsTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to SanthoshTreeVieTreeItem
        /// </summary>
        public TreeItem SanthoshTreeVieTreeItem
        {
            get
            {
                if (null == fSanthoshTreeVieTreeItem)
                {
                    fSanthoshTreeVieTreeItem = new TreeItem("SanthoshTreeVieTreeItem", TreeViewd9ec713Tree);
                    fSanthoshTreeVieTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSanthoshTreeVieTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Santhosh");
                    fSanthoshTreeVieTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fSanthoshTreeVieTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup3Button
        /// </summary>
        public Button ButtonExpanderDup3Button
        {
            get
            {
                if (null == fButtonExpanderDup3Button)
                {
                    fButtonExpanderDup3Button = new Button("ButtonExpanderDup3Button", SanthoshTreeVieTreeItem);
                    fButtonExpanderDup3Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup3Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup11Image
        /// </summary>
        public Image ImageDup11Image
        {
            get
            {
                if (null == fImageDup11Image)
                {
                    fImageDup11Image = new Image("ImageDup11Image", SanthoshTreeVieTreeItem);
                    fImageDup11Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup11Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup11Image;
            }
        }

        /// <summary>
        /// Gets Reference to SanthoshTextBloText
        /// </summary>
        public Text SanthoshTextBloText
        {
            get
            {
                if (null == fSanthoshTextBloText)
                {
                    fSanthoshTextBloText = new Text("SanthoshTextBloText", SanthoshTreeVieTreeItem);
                    fSanthoshTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fSanthoshTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Santhosh");
                    fSanthoshTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSanthoshTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to RohitTreeViewItTreeItem
        /// </summary>
        public TreeItem RohitTreeViewItTreeItem
        {
            get
            {
                if (null == fRohitTreeViewItTreeItem)
                {
                    fRohitTreeViewItTreeItem = new TreeItem("RohitTreeViewItTreeItem", TreeViewd9ec713Tree);
                    fRohitTreeViewItTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fRohitTreeViewItTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rohit");
                    fRohitTreeViewItTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fRohitTreeViewItTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup4Button
        /// </summary>
        public Button ButtonExpanderDup4Button
        {
            get
            {
                if (null == fButtonExpanderDup4Button)
                {
                    fButtonExpanderDup4Button = new Button("ButtonExpanderDup4Button", RohitTreeViewItTreeItem);
                    fButtonExpanderDup4Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup4Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup4Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup4Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup12Image
        /// </summary>
        public Image ImageDup12Image
        {
            get
            {
                if (null == fImageDup12Image)
                {
                    fImageDup12Image = new Image("ImageDup12Image", RohitTreeViewItTreeItem);
                    fImageDup12Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup12Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup12Image;
            }
        }

        /// <summary>
        /// Gets Reference to RohitTextBlockText
        /// </summary>
        public Text RohitTextBlockText
        {
            get
            {
                if (null == fRohitTextBlockText)
                {
                    fRohitTextBlockText = new Text("RohitTextBlockText", RohitTreeViewItTreeItem);
                    fRohitTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fRohitTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rohit");
                    fRohitTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fRohitTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to GaTreeViewItemTreeItem
        /// </summary>
        public TreeItem GaTreeViewItemTreeItem
        {
            get
            {
                if (null == fGaTreeViewItemTreeItem)
                {
                    fGaTreeViewItemTreeItem = new TreeItem("GaTreeViewItemTreeItem", TreeViewd9ec713Tree);
                    fGaTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fGaTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Ga");
                    fGaTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fGaTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup5Button
        /// </summary>
        public Button ButtonExpanderDup5Button
        {
            get
            {
                if (null == fButtonExpanderDup5Button)
                {
                    fButtonExpanderDup5Button = new Button("ButtonExpanderDup5Button", GaTreeViewItemTreeItem);
                    fButtonExpanderDup5Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup5Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup5Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup5Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup13Image
        /// </summary>
        public Image ImageDup13Image
        {
            get
            {
                if (null == fImageDup13Image)
                {
                    fImageDup13Image = new Image("ImageDup13Image", GaTreeViewItemTreeItem);
                    fImageDup13Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup13Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup13Image;
            }
        }

        /// <summary>
        /// Gets Reference to GaTextBlockText
        /// </summary>
        public Text GaTextBlockText
        {
            get
            {
                if (null == fGaTextBlockText)
                {
                    fGaTextBlockText = new Text("GaTextBlockText", GaTreeViewItemTreeItem);
                    fGaTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fGaTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Ga");
                    fGaTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fGaTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to SantTreeViewIteTreeItem
        /// </summary>
        public TreeItem SantTreeViewIteTreeItem
        {
            get
            {
                if (null == fSantTreeViewIteTreeItem)
                {
                    fSantTreeViewIteTreeItem = new TreeItem("SantTreeViewIteTreeItem", TreeViewd9ec713Tree);
                    fSantTreeViewIteTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSantTreeViewIteTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sant");
                    fSantTreeViewIteTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fSantTreeViewIteTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup6Button
        /// </summary>
        public Button ButtonExpanderDup6Button
        {
            get
            {
                if (null == fButtonExpanderDup6Button)
                {
                    fButtonExpanderDup6Button = new Button("ButtonExpanderDup6Button", SantTreeViewIteTreeItem);
                    fButtonExpanderDup6Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup6Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup6Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup6Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup14Image
        /// </summary>
        public Image ImageDup14Image
        {
            get
            {
                if (null == fImageDup14Image)
                {
                    fImageDup14Image = new Image("ImageDup14Image", SantTreeViewIteTreeItem);
                    fImageDup14Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup14Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup14Image;
            }
        }

        /// <summary>
        /// Gets Reference to SantTextBlockText
        /// </summary>
        public Text SantTextBlockText
        {
            get
            {
                if (null == fSantTextBlockText)
                {
                    fSantTextBlockText = new Text("SantTextBlockText", SantTreeViewIteTreeItem);
                    fSantTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fSantTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sant");
                    fSantTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSantTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to SwapnaTreeViewITreeItem
        /// </summary>
        public TreeItem SwapnaTreeViewITreeItem
        {
            get
            {
                if (null == fSwapnaTreeViewITreeItem)
                {
                    fSwapnaTreeViewITreeItem = new TreeItem("SwapnaTreeViewITreeItem", TreeViewd9ec713Tree);
                    fSwapnaTreeViewITreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSwapnaTreeViewITreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Swapna");
                    fSwapnaTreeViewITreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fSwapnaTreeViewITreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup7Button
        /// </summary>
        public Button ButtonExpanderDup7Button
        {
            get
            {
                if (null == fButtonExpanderDup7Button)
                {
                    fButtonExpanderDup7Button = new Button("ButtonExpanderDup7Button", SwapnaTreeViewITreeItem);
                    fButtonExpanderDup7Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup7Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup7Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup7Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup15Image
        /// </summary>
        public Image ImageDup15Image
        {
            get
            {
                if (null == fImageDup15Image)
                {
                    fImageDup15Image = new Image("ImageDup15Image", SwapnaTreeViewITreeItem);
                    fImageDup15Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup15Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup15Image;
            }
        }

        /// <summary>
        /// Gets Reference to SwapnaTextBlockText
        /// </summary>
        public Text SwapnaTextBlockText
        {
            get
            {
                if (null == fSwapnaTextBlockText)
                {
                    fSwapnaTextBlockText = new Text("SwapnaTextBlockText", SwapnaTreeViewITreeItem);
                    fSwapnaTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fSwapnaTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Swapna");
                    fSwapnaTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSwapnaTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to qwqwqTreeViewItTreeItem
        /// </summary>
        public TreeItem qwqwqTreeViewItTreeItem
        {
            get
            {
                if (null == fqwqwqTreeViewItTreeItem)
                {
                    fqwqwqTreeViewItTreeItem = new TreeItem("qwqwqTreeViewItTreeItem", TreeViewd9ec713Tree);
                    fqwqwqTreeViewItTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fqwqwqTreeViewItTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"qwqwq");
                    fqwqwqTreeViewItTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fqwqwqTreeViewItTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup8Button
        /// </summary>
        public Button ButtonExpanderDup8Button
        {
            get
            {
                if (null == fButtonExpanderDup8Button)
                {
                    fButtonExpanderDup8Button = new Button("ButtonExpanderDup8Button", qwqwqTreeViewItTreeItem);
                    fButtonExpanderDup8Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup8Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup8Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup8Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup16Image
        /// </summary>
        public Image ImageDup16Image
        {
            get
            {
                if (null == fImageDup16Image)
                {
                    fImageDup16Image = new Image("ImageDup16Image", qwqwqTreeViewItTreeItem);
                    fImageDup16Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup16Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup16Image;
            }
        }

        /// <summary>
        /// Gets Reference to qwqwqTextBlockText
        /// </summary>
        public Text qwqwqTextBlockText
        {
            get
            {
                if (null == fqwqwqTextBlockText)
                {
                    fqwqwqTextBlockText = new Text("qwqwqTextBlockText", qwqwqTreeViewItTreeItem);
                    fqwqwqTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fqwqwqTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"qwqwq");
                    fqwqwqTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fqwqwqTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to TestTreeViewIteTreeItem
        /// </summary>
        public TreeItem TestTreeViewIteTreeItem
        {
            get
            {
                if (null == fTestTreeViewIteTreeItem)
                {
                    fTestTreeViewIteTreeItem = new TreeItem("TestTreeViewIteTreeItem", TreeViewd9ec713Tree);
                    fTestTreeViewIteTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fTestTreeViewIteTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    fTestTreeViewIteTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fTestTreeViewIteTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup9Button
        /// </summary>
        public Button ButtonExpanderDup9Button
        {
            get
            {
                if (null == fButtonExpanderDup9Button)
                {
                    fButtonExpanderDup9Button = new Button("ButtonExpanderDup9Button", TestTreeViewIteTreeItem);
                    fButtonExpanderDup9Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup9Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup9Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup9Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup17Image
        /// </summary>
        public Image ImageDup17Image
        {
            get
            {
                if (null == fImageDup17Image)
                {
                    fImageDup17Image = new Image("ImageDup17Image", TestTreeViewIteTreeItem);
                    fImageDup17Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup17Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup17Image;
            }
        }

        /// <summary>
        /// Gets Reference to TestTextBlockText
        /// </summary>
        public Text TestTextBlockText
        {
            get
            {
                if (null == fTestTextBlockText)
                {
                    fTestTextBlockText = new Text("TestTextBlockText", TestTreeViewIteTreeItem);
                    fTestTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fTestTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Test");
                    fTestTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTestTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to SNFTreeViewItemTreeItem
        /// </summary>
        public TreeItem SNFTreeViewItemTreeItem
        {
            get
            {
                if (null == fSNFTreeViewItemTreeItem)
                {
                    fSNFTreeViewItemTreeItem = new TreeItem("SNFTreeViewItemTreeItem", TreeViewd9ec713Tree);
                    fSNFTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fSNFTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"SNF");
                    fSNFTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fSNFTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup10Button
        /// </summary>
        public Button ButtonExpanderDup10Button
        {
            get
            {
                if (null == fButtonExpanderDup10Button)
                {
                    fButtonExpanderDup10Button = new Button("ButtonExpanderDup10Button", SNFTreeViewItemTreeItem);
                    fButtonExpanderDup10Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup10Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup10Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup10Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup18Image
        /// </summary>
        public Image ImageDup18Image
        {
            get
            {
                if (null == fImageDup18Image)
                {
                    fImageDup18Image = new Image("ImageDup18Image", SNFTreeViewItemTreeItem);
                    fImageDup18Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup18Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup18Image;
            }
        }

        /// <summary>
        /// Gets Reference to SNFTextBlockText
        /// </summary>
        public Text SNFTextBlockText
        {
            get
            {
                if (null == fSNFTextBlockText)
                {
                    fSNFTextBlockText = new Text("SNFTextBlockText", SNFTreeViewItemTreeItem);
                    fSNFTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fSNFTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"SNF");
                    fSNFTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSNFTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to RajTreeViewItemTreeItem
        /// </summary>
        public TreeItem RajTreeViewItemTreeItem
        {
            get
            {
                if (null == fRajTreeViewItemTreeItem)
                {
                    fRajTreeViewItemTreeItem = new TreeItem("RajTreeViewItemTreeItem", TreeViewd9ec713Tree);
                    fRajTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fRajTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Raj");
                    fRajTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fRajTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup11Button
        /// </summary>
        public Button ButtonExpanderDup11Button
        {
            get
            {
                if (null == fButtonExpanderDup11Button)
                {
                    fButtonExpanderDup11Button = new Button("ButtonExpanderDup11Button", RajTreeViewItemTreeItem);
                    fButtonExpanderDup11Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup11Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup11Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup11Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup19Image
        /// </summary>
        public Image ImageDup19Image
        {
            get
            {
                if (null == fImageDup19Image)
                {
                    fImageDup19Image = new Image("ImageDup19Image", RajTreeViewItemTreeItem);
                    fImageDup19Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup19Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup19Image;
            }
        }

        /// <summary>
        /// Gets Reference to RajTextBlockText
        /// </summary>
        public Text RajTextBlockText
        {
            get
            {
                if (null == fRajTextBlockText)
                {
                    fRajTextBlockText = new Text("RajTextBlockText", RajTreeViewItemTreeItem);
                    fRajTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fRajTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Raj");
                    fRajTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fRajTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to xsTreeViewItemDup2TreeItem
        /// </summary>
        public TreeItem xsTreeViewItemDup2TreeItem
        {
            get
            {
                if (null == fxsTreeViewItemDup2TreeItem)
                {
                    fxsTreeViewItemDup2TreeItem = new TreeItem("xsTreeViewItemDup2TreeItem", TreeViewd9ec713Tree);
                    fxsTreeViewItemDup2TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fxsTreeViewItemDup2TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"xs");
                    fxsTreeViewItemDup2TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fxsTreeViewItemDup2TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup12Button
        /// </summary>
        public Button ButtonExpanderDup12Button
        {
            get
            {
                if (null == fButtonExpanderDup12Button)
                {
                    fButtonExpanderDup12Button = new Button("ButtonExpanderDup12Button", xsTreeViewItemDup2TreeItem);
                    fButtonExpanderDup12Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup12Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup12Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup12Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup20Image
        /// </summary>
        public Image ImageDup20Image
        {
            get
            {
                if (null == fImageDup20Image)
                {
                    fImageDup20Image = new Image("ImageDup20Image", xsTreeViewItemDup2TreeItem);
                    fImageDup20Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup20Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup20Image;
            }
        }

        /// <summary>
        /// Gets Reference to xsTextBlockDup2Text
        /// </summary>
        public Text xsTextBlockDup2Text
        {
            get
            {
                if (null == fxsTextBlockDup2Text)
                {
                    fxsTextBlockDup2Text = new Text("xsTextBlockDup2Text", xsTreeViewItemDup2TreeItem);
                    fxsTextBlockDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fxsTextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"xs");
                    fxsTextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fxsTextBlockDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to cdTreeViewItemDup0TreeItem
        /// </summary>
        public TreeItem cdTreeViewItemDup0TreeItem
        {
            get
            {
                if (null == fcdTreeViewItemDup0TreeItem)
                {
                    fcdTreeViewItemDup0TreeItem = new TreeItem("cdTreeViewItemDup0TreeItem", TreeViewd9ec713Tree);
                    fcdTreeViewItemDup0TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fcdTreeViewItemDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"cd");
                    fcdTreeViewItemDup0TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fcdTreeViewItemDup0TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup13Button
        /// </summary>
        public Button ButtonExpanderDup13Button
        {
            get
            {
                if (null == fButtonExpanderDup13Button)
                {
                    fButtonExpanderDup13Button = new Button("ButtonExpanderDup13Button", cdTreeViewItemDup0TreeItem);
                    fButtonExpanderDup13Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup13Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup13Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup13Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup21Image
        /// </summary>
        public Image ImageDup21Image
        {
            get
            {
                if (null == fImageDup21Image)
                {
                    fImageDup21Image = new Image("ImageDup21Image", cdTreeViewItemDup0TreeItem);
                    fImageDup21Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup21Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup21Image;
            }
        }

        /// <summary>
        /// Gets Reference to cdTextBlockDup0Text
        /// </summary>
        public Text cdTextBlockDup0Text
        {
            get
            {
                if (null == fcdTextBlockDup0Text)
                {
                    fcdTextBlockDup0Text = new Text("cdTextBlockDup0Text", cdTreeViewItemDup0TreeItem);
                    fcdTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fcdTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"cd");
                    fcdTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fcdTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to cdTreeViewItemDup1TreeItem
        /// </summary>
        public TreeItem cdTreeViewItemDup1TreeItem
        {
            get
            {
                if (null == fcdTreeViewItemDup1TreeItem)
                {
                    fcdTreeViewItemDup1TreeItem = new TreeItem("cdTreeViewItemDup1TreeItem", cdTreeViewItemDup0TreeItem);
                    fcdTreeViewItemDup1TreeItem.UIMap.Scope = UIASeachScope.Children;
                    fcdTreeViewItemDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"cd");
                    fcdTreeViewItemDup1TreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fcdTreeViewItemDup1TreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup14Button
        /// </summary>
        public Button ButtonExpanderDup14Button
        {
            get
            {
                if (null == fButtonExpanderDup14Button)
                {
                    fButtonExpanderDup14Button = new Button("ButtonExpanderDup14Button", cdTreeViewItemDup1TreeItem);
                    fButtonExpanderDup14Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup14Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup14Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup14Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup22Image
        /// </summary>
        public Image ImageDup22Image
        {
            get
            {
                if (null == fImageDup22Image)
                {
                    fImageDup22Image = new Image("ImageDup22Image", cdTreeViewItemDup1TreeItem);
                    fImageDup22Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup22Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup22Image;
            }
        }

        /// <summary>
        /// Gets Reference to cdTextBlockDup1Text
        /// </summary>
        public Text cdTextBlockDup1Text
        {
            get
            {
                if (null == fcdTextBlockDup1Text)
                {
                    fcdTextBlockDup1Text = new Text("cdTextBlockDup1Text", cdTreeViewItemDup1TreeItem);
                    fcdTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fcdTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"cd");
                    fcdTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fcdTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to djTreeViewItemTreeItem
        /// </summary>
        public TreeItem djTreeViewItemTreeItem
        {
            get
            {
                if (null == fdjTreeViewItemTreeItem)
                {
                    fdjTreeViewItemTreeItem = new TreeItem("djTreeViewItemTreeItem", TreeViewd9ec713Tree);
                    fdjTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fdjTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"dj");
                    fdjTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fdjTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup15Button
        /// </summary>
        public Button ButtonExpanderDup15Button
        {
            get
            {
                if (null == fButtonExpanderDup15Button)
                {
                    fButtonExpanderDup15Button = new Button("ButtonExpanderDup15Button", djTreeViewItemTreeItem);
                    fButtonExpanderDup15Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup15Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup15Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup15Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup23Image
        /// </summary>
        public Image ImageDup23Image
        {
            get
            {
                if (null == fImageDup23Image)
                {
                    fImageDup23Image = new Image("ImageDup23Image", djTreeViewItemTreeItem);
                    fImageDup23Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup23Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup23Image;
            }
        }

        /// <summary>
        /// Gets Reference to djTextBlockText
        /// </summary>
        public Text djTextBlockText
        {
            get
            {
                if (null == fdjTextBlockText)
                {
                    fdjTextBlockText = new Text("djTextBlockText", djTreeViewItemTreeItem);
                    fdjTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fdjTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"dj");
                    fdjTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fdjTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to djjTreeViewItemTreeItem
        /// </summary>
        public TreeItem djjTreeViewItemTreeItem
        {
            get
            {
                if (null == fdjjTreeViewItemTreeItem)
                {
                    fdjjTreeViewItemTreeItem = new TreeItem("djjTreeViewItemTreeItem", djTreeViewItemTreeItem);
                    fdjjTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fdjjTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"djj");
                    fdjjTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fdjjTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup16Button
        /// </summary>
        public Button ButtonExpanderDup16Button
        {
            get
            {
                if (null == fButtonExpanderDup16Button)
                {
                    fButtonExpanderDup16Button = new Button("ButtonExpanderDup16Button", djjTreeViewItemTreeItem);
                    fButtonExpanderDup16Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup16Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup16Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup16Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup24Image
        /// </summary>
        public Image ImageDup24Image
        {
            get
            {
                if (null == fImageDup24Image)
                {
                    fImageDup24Image = new Image("ImageDup24Image", djjTreeViewItemTreeItem);
                    fImageDup24Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup24Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup24Image;
            }
        }

        /// <summary>
        /// Gets Reference to djjTextBlockText
        /// </summary>
        public Text djjTextBlockText
        {
            get
            {
                if (null == fdjjTextBlockText)
                {
                    fdjjTextBlockText = new Text("djjTextBlockText", djjTreeViewItemTreeItem);
                    fdjjTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fdjjTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"djj");
                    fdjjTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fdjjTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to RamTreeViewItemTreeItem
        /// </summary>
        public TreeItem RamTreeViewItemTreeItem
        {
            get
            {
                if (null == fRamTreeViewItemTreeItem)
                {
                    fRamTreeViewItemTreeItem = new TreeItem("RamTreeViewItemTreeItem", TreeViewd9ec713Tree);
                    fRamTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fRamTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Ram");
                    fRamTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fRamTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup17Button
        /// </summary>
        public Button ButtonExpanderDup17Button
        {
            get
            {
                if (null == fButtonExpanderDup17Button)
                {
                    fButtonExpanderDup17Button = new Button("ButtonExpanderDup17Button", RamTreeViewItemTreeItem);
                    fButtonExpanderDup17Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup17Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup17Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup17Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup25Image
        /// </summary>
        public Image ImageDup25Image
        {
            get
            {
                if (null == fImageDup25Image)
                {
                    fImageDup25Image = new Image("ImageDup25Image", RamTreeViewItemTreeItem);
                    fImageDup25Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup25Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup25Image;
            }
        }

        /// <summary>
        /// Gets Reference to RamTextBlockText
        /// </summary>
        public Text RamTextBlockText
        {
            get
            {
                if (null == fRamTextBlockText)
                {
                    fRamTextBlockText = new Text("RamTextBlockText", RamTreeViewItemTreeItem);
                    fRamTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fRamTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Ram");
                    fRamTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fRamTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to RaamaTreeViewItTreeItem
        /// </summary>
        public TreeItem RaamaTreeViewItTreeItem
        {
            get
            {
                if (null == fRaamaTreeViewItTreeItem)
                {
                    fRaamaTreeViewItTreeItem = new TreeItem("RaamaTreeViewItTreeItem", RamTreeViewItemTreeItem);
                    fRaamaTreeViewItTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fRaamaTreeViewItTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Raama");
                    fRaamaTreeViewItTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fRaamaTreeViewItTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup18Button
        /// </summary>
        public Button ButtonExpanderDup18Button
        {
            get
            {
                if (null == fButtonExpanderDup18Button)
                {
                    fButtonExpanderDup18Button = new Button("ButtonExpanderDup18Button", RaamaTreeViewItTreeItem);
                    fButtonExpanderDup18Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup18Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup18Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup18Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup26Image
        /// </summary>
        public Image ImageDup26Image
        {
            get
            {
                if (null == fImageDup26Image)
                {
                    fImageDup26Image = new Image("ImageDup26Image", RaamaTreeViewItTreeItem);
                    fImageDup26Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup26Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup26Image;
            }
        }

        /// <summary>
        /// Gets Reference to RaamaTextBlockText
        /// </summary>
        public Text RaamaTextBlockText
        {
            get
            {
                if (null == fRaamaTextBlockText)
                {
                    fRaamaTextBlockText = new Text("RaamaTextBlockText", RaamaTreeViewItTreeItem);
                    fRaamaTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fRaamaTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Raama");
                    fRaamaTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fRaamaTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to PrasTreeViewIteTreeItem
        /// </summary>
        public TreeItem PrasTreeViewIteTreeItem
        {
            get
            {
                if (null == fPrasTreeViewIteTreeItem)
                {
                    fPrasTreeViewIteTreeItem = new TreeItem("PrasTreeViewIteTreeItem", RaamaTreeViewItTreeItem);
                    fPrasTreeViewIteTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fPrasTreeViewIteTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Pras");
                    fPrasTreeViewIteTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fPrasTreeViewIteTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup19Button
        /// </summary>
        public Button ButtonExpanderDup19Button
        {
            get
            {
                if (null == fButtonExpanderDup19Button)
                {
                    fButtonExpanderDup19Button = new Button("ButtonExpanderDup19Button", PrasTreeViewIteTreeItem);
                    fButtonExpanderDup19Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup19Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup19Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup19Button;
            }
        }

        /// <summary>
        /// Gets Reference to Image6C67385BE4Dup0Image
        /// </summary>
        public Image Image6C67385BE4Dup0Image
        {
            get
            {
                if (null == fImage6C67385BE4Dup0Image)
                {
                    fImage6C67385BE4Dup0Image = new Image("Image6C67385BE4Dup0Image", PrasTreeViewIteTreeItem);
                    fImage6C67385BE4Dup0Image.UIMap.Scope = UIASeachScope.Children;
                    fImage6C67385BE4Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage6C67385BE4Dup0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6C67385B-E43F-4ec0-B879-4FE51625A588");
                }

                return fImage6C67385BE4Dup0Image;
            }
        }

        /// <summary>
        /// Gets Reference to PrasTextBlockText
        /// </summary>
        public Text PrasTextBlockText
        {
            get
            {
                if (null == fPrasTextBlockText)
                {
                    fPrasTextBlockText = new Text("PrasTextBlockText", PrasTreeViewIteTreeItem);
                    fPrasTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fPrasTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Pras");
                    fPrasTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fPrasTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ReaTreeViewItemTreeItem
        /// </summary>
        public TreeItem ReaTreeViewItemTreeItem
        {
            get
            {
                if (null == fReaTreeViewItemTreeItem)
                {
                    fReaTreeViewItemTreeItem = new TreeItem("ReaTreeViewItemTreeItem", TreeViewd9ec713Tree);
                    fReaTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fReaTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rea");
                    fReaTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fReaTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup20Button
        /// </summary>
        public Button ButtonExpanderDup20Button
        {
            get
            {
                if (null == fButtonExpanderDup20Button)
                {
                    fButtonExpanderDup20Button = new Button("ButtonExpanderDup20Button", ReaTreeViewItemTreeItem);
                    fButtonExpanderDup20Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup20Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup20Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup20Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup27Image
        /// </summary>
        public Image ImageDup27Image
        {
            get
            {
                if (null == fImageDup27Image)
                {
                    fImageDup27Image = new Image("ImageDup27Image", ReaTreeViewItemTreeItem);
                    fImageDup27Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup27Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup27Image;
            }
        }

        /// <summary>
        /// Gets Reference to ReaTextBlockText
        /// </summary>
        public Text ReaTextBlockText
        {
            get
            {
                if (null == fReaTextBlockText)
                {
                    fReaTextBlockText = new Text("ReaTextBlockText", ReaTreeViewItemTreeItem);
                    fReaTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fReaTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rea");
                    fReaTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fReaTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ReasdTreeViewItTreeItem
        /// </summary>
        public TreeItem ReasdTreeViewItTreeItem
        {
            get
            {
                if (null == fReasdTreeViewItTreeItem)
                {
                    fReasdTreeViewItTreeItem = new TreeItem("ReasdTreeViewItTreeItem", ReaTreeViewItemTreeItem);
                    fReasdTreeViewItTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fReasdTreeViewItTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Reasd");
                    fReasdTreeViewItTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fReasdTreeViewItTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup21Button
        /// </summary>
        public Button ButtonExpanderDup21Button
        {
            get
            {
                if (null == fButtonExpanderDup21Button)
                {
                    fButtonExpanderDup21Button = new Button("ButtonExpanderDup21Button", ReasdTreeViewItTreeItem);
                    fButtonExpanderDup21Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup21Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup21Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup21Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup28Image
        /// </summary>
        public Image ImageDup28Image
        {
            get
            {
                if (null == fImageDup28Image)
                {
                    fImageDup28Image = new Image("ImageDup28Image", ReasdTreeViewItTreeItem);
                    fImageDup28Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup28Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup28Image;
            }
        }

        /// <summary>
        /// Gets Reference to ReasdTextBlockText
        /// </summary>
        public Text ReasdTextBlockText
        {
            get
            {
                if (null == fReasdTextBlockText)
                {
                    fReasdTextBlockText = new Text("ReasdTextBlockText", ReasdTreeViewItTreeItem);
                    fReasdTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fReasdTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Reasd");
                    fReasdTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fReasdTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to ddTreeViewItemTreeItem
        /// </summary>
        public TreeItem ddTreeViewItemTreeItem
        {
            get
            {
                if (null == fddTreeViewItemTreeItem)
                {
                    fddTreeViewItemTreeItem = new TreeItem("ddTreeViewItemTreeItem", ReasdTreeViewItTreeItem);
                    fddTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fddTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"dd");
                    fddTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fddTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup22Button
        /// </summary>
        public Button ButtonExpanderDup22Button
        {
            get
            {
                if (null == fButtonExpanderDup22Button)
                {
                    fButtonExpanderDup22Button = new Button("ButtonExpanderDup22Button", ddTreeViewItemTreeItem);
                    fButtonExpanderDup22Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup22Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup22Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup22Button;
            }
        }

        /// <summary>
        /// Gets Reference to Image6C67385BE4Dup1Image
        /// </summary>
        public Image Image6C67385BE4Dup1Image
        {
            get
            {
                if (null == fImage6C67385BE4Dup1Image)
                {
                    fImage6C67385BE4Dup1Image = new Image("Image6C67385BE4Dup1Image", ddTreeViewItemTreeItem);
                    fImage6C67385BE4Dup1Image.UIMap.Scope = UIASeachScope.Children;
                    fImage6C67385BE4Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage6C67385BE4Dup1Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6C67385B-E43F-4ec0-B879-4FE51625A588");
                }

                return fImage6C67385BE4Dup1Image;
            }
        }

        /// <summary>
        /// Gets Reference to ddTextBlockText
        /// </summary>
        public Text ddTextBlockText
        {
            get
            {
                if (null == fddTextBlockText)
                {
                    fddTextBlockText = new Text("ddTextBlockText", ddTreeViewItemTreeItem);
                    fddTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fddTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"dd");
                    fddTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fddTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to rdrTreeViewItemTreeItem
        /// </summary>
        public TreeItem rdrTreeViewItemTreeItem
        {
            get
            {
                if (null == frdrTreeViewItemTreeItem)
                {
                    frdrTreeViewItemTreeItem = new TreeItem("rdrTreeViewItemTreeItem", TreeViewd9ec713Tree);
                    frdrTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    frdrTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"rdr");
                    frdrTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return frdrTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup23Button
        /// </summary>
        public Button ButtonExpanderDup23Button
        {
            get
            {
                if (null == fButtonExpanderDup23Button)
                {
                    fButtonExpanderDup23Button = new Button("ButtonExpanderDup23Button", rdrTreeViewItemTreeItem);
                    fButtonExpanderDup23Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup23Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup23Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup23Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup29Image
        /// </summary>
        public Image ImageDup29Image
        {
            get
            {
                if (null == fImageDup29Image)
                {
                    fImageDup29Image = new Image("ImageDup29Image", rdrTreeViewItemTreeItem);
                    fImageDup29Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup29Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup29Image;
            }
        }

        /// <summary>
        /// Gets Reference to rdrTextBlockText
        /// </summary>
        public Text rdrTextBlockText
        {
            get
            {
                if (null == frdrTextBlockText)
                {
                    frdrTextBlockText = new Text("rdrTextBlockText", rdrTreeViewItemTreeItem);
                    frdrTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    frdrTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"rdr");
                    frdrTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return frdrTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to RaqTreeViewItemTreeItem
        /// </summary>
        public TreeItem RaqTreeViewItemTreeItem
        {
            get
            {
                if (null == fRaqTreeViewItemTreeItem)
                {
                    fRaqTreeViewItemTreeItem = new TreeItem("RaqTreeViewItemTreeItem", TreeViewd9ec713Tree);
                    fRaqTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fRaqTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Raq");
                    fRaqTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fRaqTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup24Button
        /// </summary>
        public Button ButtonExpanderDup24Button
        {
            get
            {
                if (null == fButtonExpanderDup24Button)
                {
                    fButtonExpanderDup24Button = new Button("ButtonExpanderDup24Button", RaqTreeViewItemTreeItem);
                    fButtonExpanderDup24Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup24Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup24Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup24Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup30Image
        /// </summary>
        public Image ImageDup30Image
        {
            get
            {
                if (null == fImageDup30Image)
                {
                    fImageDup30Image = new Image("ImageDup30Image", RaqTreeViewItemTreeItem);
                    fImageDup30Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup30Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup30Image;
            }
        }

        /// <summary>
        /// Gets Reference to RaqTextBlockText
        /// </summary>
        public Text RaqTextBlockText
        {
            get
            {
                if (null == fRaqTextBlockText)
                {
                    fRaqTextBlockText = new Text("RaqTextBlockText", RaqTreeViewItemTreeItem);
                    fRaqTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fRaqTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Raq");
                    fRaqTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fRaqTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to qweTreeViewItemTreeItem
        /// </summary>
        public TreeItem qweTreeViewItemTreeItem
        {
            get
            {
                if (null == fqweTreeViewItemTreeItem)
                {
                    fqweTreeViewItemTreeItem = new TreeItem("qweTreeViewItemTreeItem", RaqTreeViewItemTreeItem);
                    fqweTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fqweTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"qwe");
                    fqweTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fqweTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup25Button
        /// </summary>
        public Button ButtonExpanderDup25Button
        {
            get
            {
                if (null == fButtonExpanderDup25Button)
                {
                    fButtonExpanderDup25Button = new Button("ButtonExpanderDup25Button", qweTreeViewItemTreeItem);
                    fButtonExpanderDup25Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup25Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup25Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup25Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup31Image
        /// </summary>
        public Image ImageDup31Image
        {
            get
            {
                if (null == fImageDup31Image)
                {
                    fImageDup31Image = new Image("ImageDup31Image", qweTreeViewItemTreeItem);
                    fImageDup31Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup31Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup31Image;
            }
        }

        /// <summary>
        /// Gets Reference to qweTextBlockText
        /// </summary>
        public Text qweTextBlockText
        {
            get
            {
                if (null == fqweTextBlockText)
                {
                    fqweTextBlockText = new Text("qweTextBlockText", qweTreeViewItemTreeItem);
                    fqweTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fqweTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"qwe");
                    fqweTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fqweTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to csTreeViewItemTreeItem
        /// </summary>
        public TreeItem csTreeViewItemTreeItem
        {
            get
            {
                if (null == fcsTreeViewItemTreeItem)
                {
                    fcsTreeViewItemTreeItem = new TreeItem("csTreeViewItemTreeItem", qweTreeViewItemTreeItem);
                    fcsTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fcsTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"cs");
                    fcsTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fcsTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup26Button
        /// </summary>
        public Button ButtonExpanderDup26Button
        {
            get
            {
                if (null == fButtonExpanderDup26Button)
                {
                    fButtonExpanderDup26Button = new Button("ButtonExpanderDup26Button", csTreeViewItemTreeItem);
                    fButtonExpanderDup26Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup26Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup26Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup26Button;
            }
        }

        /// <summary>
        /// Gets Reference to Image6C67385BE4Dup2Image
        /// </summary>
        public Image Image6C67385BE4Dup2Image
        {
            get
            {
                if (null == fImage6C67385BE4Dup2Image)
                {
                    fImage6C67385BE4Dup2Image = new Image("Image6C67385BE4Dup2Image", csTreeViewItemTreeItem);
                    fImage6C67385BE4Dup2Image.UIMap.Scope = UIASeachScope.Children;
                    fImage6C67385BE4Dup2Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage6C67385BE4Dup2Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6C67385B-E43F-4ec0-B879-4FE51625A588");
                }

                return fImage6C67385BE4Dup2Image;
            }
        }

        /// <summary>
        /// Gets Reference to csTextBlockText
        /// </summary>
        public Text csTextBlockText
        {
            get
            {
                if (null == fcsTextBlockText)
                {
                    fcsTextBlockText = new Text("csTextBlockText", csTreeViewItemTreeItem);
                    fcsTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fcsTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"cs");
                    fcsTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fcsTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to rdTreeViewItemTreeItem
        /// </summary>
        public TreeItem rdTreeViewItemTreeItem
        {
            get
            {
                if (null == frdTreeViewItemTreeItem)
                {
                    frdTreeViewItemTreeItem = new TreeItem("rdTreeViewItemTreeItem", TreeViewd9ec713Tree);
                    frdTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    frdTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"rd");
                    frdTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return frdTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup27Button
        /// </summary>
        public Button ButtonExpanderDup27Button
        {
            get
            {
                if (null == fButtonExpanderDup27Button)
                {
                    fButtonExpanderDup27Button = new Button("ButtonExpanderDup27Button", rdTreeViewItemTreeItem);
                    fButtonExpanderDup27Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup27Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup27Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup27Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup32Image
        /// </summary>
        public Image ImageDup32Image
        {
            get
            {
                if (null == fImageDup32Image)
                {
                    fImageDup32Image = new Image("ImageDup32Image", rdTreeViewItemTreeItem);
                    fImageDup32Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup32Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup32Image;
            }
        }

        /// <summary>
        /// Gets Reference to rdTextBlockText
        /// </summary>
        public Text rdTextBlockText
        {
            get
            {
                if (null == frdTextBlockText)
                {
                    frdTextBlockText = new Text("rdTextBlockText", rdTreeViewItemTreeItem);
                    frdTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    frdTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"rd");
                    frdTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return frdTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to drdTreeViewItemTreeItem
        /// </summary>
        public TreeItem drdTreeViewItemTreeItem
        {
            get
            {
                if (null == fdrdTreeViewItemTreeItem)
                {
                    fdrdTreeViewItemTreeItem = new TreeItem("drdTreeViewItemTreeItem", rdTreeViewItemTreeItem);
                    fdrdTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fdrdTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"drd");
                    fdrdTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fdrdTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup28Button
        /// </summary>
        public Button ButtonExpanderDup28Button
        {
            get
            {
                if (null == fButtonExpanderDup28Button)
                {
                    fButtonExpanderDup28Button = new Button("ButtonExpanderDup28Button", drdTreeViewItemTreeItem);
                    fButtonExpanderDup28Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup28Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup28Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup28Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup33Image
        /// </summary>
        public Image ImageDup33Image
        {
            get
            {
                if (null == fImageDup33Image)
                {
                    fImageDup33Image = new Image("ImageDup33Image", drdTreeViewItemTreeItem);
                    fImageDup33Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup33Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup33Image;
            }
        }

        /// <summary>
        /// Gets Reference to drdTextBlockText
        /// </summary>
        public Text drdTextBlockText
        {
            get
            {
                if (null == fdrdTextBlockText)
                {
                    fdrdTextBlockText = new Text("drdTextBlockText", drdTreeViewItemTreeItem);
                    fdrdTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fdrdTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"drd");
                    fdrdTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fdrdTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to sTreeViewItemTreeItem
        /// </summary>
        public TreeItem sTreeViewItemTreeItem
        {
            get
            {
                if (null == fsTreeViewItemTreeItem)
                {
                    fsTreeViewItemTreeItem = new TreeItem("sTreeViewItemTreeItem", drdTreeViewItemTreeItem);
                    fsTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fsTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"s");
                    fsTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fsTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup29Button
        /// </summary>
        public Button ButtonExpanderDup29Button
        {
            get
            {
                if (null == fButtonExpanderDup29Button)
                {
                    fButtonExpanderDup29Button = new Button("ButtonExpanderDup29Button", sTreeViewItemTreeItem);
                    fButtonExpanderDup29Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup29Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup29Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup29Button;
            }
        }

        /// <summary>
        /// Gets Reference to Image6C67385BE4Dup3Image
        /// </summary>
        public Image Image6C67385BE4Dup3Image
        {
            get
            {
                if (null == fImage6C67385BE4Dup3Image)
                {
                    fImage6C67385BE4Dup3Image = new Image("Image6C67385BE4Dup3Image", sTreeViewItemTreeItem);
                    fImage6C67385BE4Dup3Image.UIMap.Scope = UIASeachScope.Children;
                    fImage6C67385BE4Dup3Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage6C67385BE4Dup3Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6C67385B-E43F-4ec0-B879-4FE51625A588");
                }

                return fImage6C67385BE4Dup3Image;
            }
        }

        /// <summary>
        /// Gets Reference to sTextBlockText
        /// </summary>
        public Text sTextBlockText
        {
            get
            {
                if (null == fsTextBlockText)
                {
                    fsTextBlockText = new Text("sTextBlockText", sTreeViewItemTreeItem);
                    fsTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fsTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"s");
                    fsTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fsTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to HgfTreeViewItemTreeItem
        /// </summary>
        public TreeItem HgfTreeViewItemTreeItem
        {
            get
            {
                if (null == fHgfTreeViewItemTreeItem)
                {
                    fHgfTreeViewItemTreeItem = new TreeItem("HgfTreeViewItemTreeItem", TreeViewd9ec713Tree);
                    fHgfTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fHgfTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hgf");
                    fHgfTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fHgfTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup30Button
        /// </summary>
        public Button ButtonExpanderDup30Button
        {
            get
            {
                if (null == fButtonExpanderDup30Button)
                {
                    fButtonExpanderDup30Button = new Button("ButtonExpanderDup30Button", HgfTreeViewItemTreeItem);
                    fButtonExpanderDup30Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup30Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup30Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup30Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup34Image
        /// </summary>
        public Image ImageDup34Image
        {
            get
            {
                if (null == fImageDup34Image)
                {
                    fImageDup34Image = new Image("ImageDup34Image", HgfTreeViewItemTreeItem);
                    fImageDup34Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup34Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup34Image;
            }
        }

        /// <summary>
        /// Gets Reference to HgfTextBlockText
        /// </summary>
        public Text HgfTextBlockText
        {
            get
            {
                if (null == fHgfTextBlockText)
                {
                    fHgfTextBlockText = new Text("HgfTextBlockText", HgfTreeViewItemTreeItem);
                    fHgfTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fHgfTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hgf");
                    fHgfTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fHgfTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to HgfdwdwqqwdwqdTTreeItem
        /// </summary>
        public TreeItem HgfdwdwqqwdwqdTTreeItem
        {
            get
            {
                if (null == fHgfdwdwqqwdwqdTTreeItem)
                {
                    fHgfdwdwqqwdwqdTTreeItem = new TreeItem("HgfdwdwqqwdwqdTTreeItem", TreeViewd9ec713Tree);
                    fHgfdwdwqqwdwqdTTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fHgfdwdwqqwdwqdTTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hgfdwdwqqwdwqd");
                    fHgfdwdwqqwdwqdTTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fHgfdwdwqqwdwqdTTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup31Button
        /// </summary>
        public Button ButtonExpanderDup31Button
        {
            get
            {
                if (null == fButtonExpanderDup31Button)
                {
                    fButtonExpanderDup31Button = new Button("ButtonExpanderDup31Button", HgfdwdwqqwdwqdTTreeItem);
                    fButtonExpanderDup31Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup31Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup31Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup31Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup35Image
        /// </summary>
        public Image ImageDup35Image
        {
            get
            {
                if (null == fImageDup35Image)
                {
                    fImageDup35Image = new Image("ImageDup35Image", HgfdwdwqqwdwqdTTreeItem);
                    fImageDup35Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup35Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup35Image;
            }
        }

        /// <summary>
        /// Gets Reference to HgfdwdwqqwdwqdTText
        /// </summary>
        public Text HgfdwdwqqwdwqdTText
        {
            get
            {
                if (null == fHgfdwdwqqwdwqdTText)
                {
                    fHgfdwdwqqwdwqdTText = new Text("HgfdwdwqqwdwqdTText", HgfdwdwqqwdwqdTTreeItem);
                    fHgfdwdwqqwdwqdTText.UIMap.Scope = UIASeachScope.Children;
                    fHgfdwdwqqwdwqdTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hgfdwdwqqwdwqd");
                    fHgfdwdwqqwdwqdTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fHgfdwdwqqwdwqdTText;
            }
        }

        /// <summary>
        /// Gets Reference to JhgwdqqdwwqdwqTTreeItem
        /// </summary>
        public TreeItem JhgwdqqdwwqdwqTTreeItem
        {
            get
            {
                if (null == fJhgwdqqdwwqdwqTTreeItem)
                {
                    fJhgwdqqdwwqdwqTTreeItem = new TreeItem("JhgwdqqdwwqdwqTTreeItem", HgfdwdwqqwdwqdTTreeItem);
                    fJhgwdqqdwwqdwqTTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fJhgwdqqdwwqdwqTTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Jhgwdqqdwwqdwq");
                    fJhgwdqqdwwqdwqTTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fJhgwdqqdwwqdwqTTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup32Button
        /// </summary>
        public Button ButtonExpanderDup32Button
        {
            get
            {
                if (null == fButtonExpanderDup32Button)
                {
                    fButtonExpanderDup32Button = new Button("ButtonExpanderDup32Button", JhgwdqqdwwqdwqTTreeItem);
                    fButtonExpanderDup32Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup32Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup32Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup32Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup36Image
        /// </summary>
        public Image ImageDup36Image
        {
            get
            {
                if (null == fImageDup36Image)
                {
                    fImageDup36Image = new Image("ImageDup36Image", JhgwdqqdwwqdwqTTreeItem);
                    fImageDup36Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup36Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup36Image;
            }
        }

        /// <summary>
        /// Gets Reference to JhgwdqqdwwqdwqTText
        /// </summary>
        public Text JhgwdqqdwwqdwqTText
        {
            get
            {
                if (null == fJhgwdqqdwwqdwqTText)
                {
                    fJhgwdqqdwwqdwqTText = new Text("JhgwdqqdwwqdwqTText", JhgwdqqdwwqdwqTTreeItem);
                    fJhgwdqqdwwqdwqTText.UIMap.Scope = UIASeachScope.Children;
                    fJhgwdqqdwwqdwqTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Jhgwdqqdwwqdwq");
                    fJhgwdqqdwwqdwqTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fJhgwdqqdwwqdwqTText;
            }
        }

        /// <summary>
        /// Gets Reference to hdwdqdwwqdTreeVTreeItem
        /// </summary>
        public TreeItem hdwdqdwwqdTreeVTreeItem
        {
            get
            {
                if (null == fhdwdqdwwqdTreeVTreeItem)
                {
                    fhdwdqdwwqdTreeVTreeItem = new TreeItem("hdwdqdwwqdTreeVTreeItem", JhgwdqqdwwqdwqTTreeItem);
                    fhdwdqdwwqdTreeVTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fhdwdqdwwqdTreeVTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"hdwdqdwwqd");
                    fhdwdqdwwqdTreeVTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fhdwdqdwwqdTreeVTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup33Button
        /// </summary>
        public Button ButtonExpanderDup33Button
        {
            get
            {
                if (null == fButtonExpanderDup33Button)
                {
                    fButtonExpanderDup33Button = new Button("ButtonExpanderDup33Button", hdwdqdwwqdTreeVTreeItem);
                    fButtonExpanderDup33Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup33Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup33Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup33Button;
            }
        }

        /// <summary>
        /// Gets Reference to Image6C67385BE4Dup4Image
        /// </summary>
        public Image Image6C67385BE4Dup4Image
        {
            get
            {
                if (null == fImage6C67385BE4Dup4Image)
                {
                    fImage6C67385BE4Dup4Image = new Image("Image6C67385BE4Dup4Image", hdwdqdwwqdTreeVTreeItem);
                    fImage6C67385BE4Dup4Image.UIMap.Scope = UIASeachScope.Children;
                    fImage6C67385BE4Dup4Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage6C67385BE4Dup4Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6C67385B-E43F-4ec0-B879-4FE51625A588");
                }

                return fImage6C67385BE4Dup4Image;
            }
        }

        /// <summary>
        /// Gets Reference to hdwdqdwwqdTextBText
        /// </summary>
        public Text hdwdqdwwqdTextBText
        {
            get
            {
                if (null == fhdwdqdwwqdTextBText)
                {
                    fhdwdqdwwqdTextBText = new Text("hdwdqdwwqdTextBText", hdwdqdwwqdTreeVTreeItem);
                    fhdwdqdwwqdTextBText.UIMap.Scope = UIASeachScope.Children;
                    fhdwdqdwwqdTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"hdwdqdwwqd");
                    fhdwdqdwwqdTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fhdwdqdwwqdTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to rdsdcTreeViewItTreeItem
        /// </summary>
        public TreeItem rdsdcTreeViewItTreeItem
        {
            get
            {
                if (null == frdsdcTreeViewItTreeItem)
                {
                    frdsdcTreeViewItTreeItem = new TreeItem("rdsdcTreeViewItTreeItem", TreeViewd9ec713Tree);
                    frdsdcTreeViewItTreeItem.UIMap.Scope = UIASeachScope.Children;
                    frdsdcTreeViewItTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"rdsdc");
                    frdsdcTreeViewItTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return frdsdcTreeViewItTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup34Button
        /// </summary>
        public Button ButtonExpanderDup34Button
        {
            get
            {
                if (null == fButtonExpanderDup34Button)
                {
                    fButtonExpanderDup34Button = new Button("ButtonExpanderDup34Button", rdsdcTreeViewItTreeItem);
                    fButtonExpanderDup34Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup34Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup34Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup34Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup37Image
        /// </summary>
        public Image ImageDup37Image
        {
            get
            {
                if (null == fImageDup37Image)
                {
                    fImageDup37Image = new Image("ImageDup37Image", rdsdcTreeViewItTreeItem);
                    fImageDup37Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup37Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup37Image;
            }
        }

        /// <summary>
        /// Gets Reference to rdsdcTextBlockText
        /// </summary>
        public Text rdsdcTextBlockText
        {
            get
            {
                if (null == frdsdcTextBlockText)
                {
                    frdsdcTextBlockText = new Text("rdsdcTextBlockText", rdsdcTreeViewItTreeItem);
                    frdsdcTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    frdsdcTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"rdsdc");
                    frdsdcTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return frdsdcTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to GGfTreeViewItemTreeItem
        /// </summary>
        public TreeItem GGfTreeViewItemTreeItem
        {
            get
            {
                if (null == fGGfTreeViewItemTreeItem)
                {
                    fGGfTreeViewItemTreeItem = new TreeItem("GGfTreeViewItemTreeItem", TreeViewd9ec713Tree);
                    fGGfTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fGGfTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"GGf");
                    fGGfTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fGGfTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup35Button
        /// </summary>
        public Button ButtonExpanderDup35Button
        {
            get
            {
                if (null == fButtonExpanderDup35Button)
                {
                    fButtonExpanderDup35Button = new Button("ButtonExpanderDup35Button", GGfTreeViewItemTreeItem);
                    fButtonExpanderDup35Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup35Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup35Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup35Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup38Image
        /// </summary>
        public Image ImageDup38Image
        {
            get
            {
                if (null == fImageDup38Image)
                {
                    fImageDup38Image = new Image("ImageDup38Image", GGfTreeViewItemTreeItem);
                    fImageDup38Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup38Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup38Image;
            }
        }

        /// <summary>
        /// Gets Reference to GGfTextBlockText
        /// </summary>
        public Text GGfTextBlockText
        {
            get
            {
                if (null == fGGfTextBlockText)
                {
                    fGGfTextBlockText = new Text("GGfTextBlockText", GGfTreeViewItemTreeItem);
                    fGGfTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fGGfTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"GGf");
                    fGGfTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fGGfTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to FFTreeViewItemTreeItem
        /// </summary>
        public TreeItem FFTreeViewItemTreeItem
        {
            get
            {
                if (null == fFFTreeViewItemTreeItem)
                {
                    fFFTreeViewItemTreeItem = new TreeItem("FFTreeViewItemTreeItem", GGfTreeViewItemTreeItem);
                    fFFTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fFFTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"FF");
                    fFFTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fFFTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup36Button
        /// </summary>
        public Button ButtonExpanderDup36Button
        {
            get
            {
                if (null == fButtonExpanderDup36Button)
                {
                    fButtonExpanderDup36Button = new Button("ButtonExpanderDup36Button", FFTreeViewItemTreeItem);
                    fButtonExpanderDup36Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup36Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup36Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup36Button;
            }
        }

        /// <summary>
        /// Gets Reference to ImageDup39Image
        /// </summary>
        public Image ImageDup39Image
        {
            get
            {
                if (null == fImageDup39Image)
                {
                    fImageDup39Image = new Image("ImageDup39Image", FFTreeViewItemTreeItem);
                    fImageDup39Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup39Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup39Image;
            }
        }

        /// <summary>
        /// Gets Reference to FFTextBlockText
        /// </summary>
        public Text FFTextBlockText
        {
            get
            {
                if (null == fFFTextBlockText)
                {
                    fFFTextBlockText = new Text("FFTextBlockText", FFTreeViewItemTreeItem);
                    fFFTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fFFTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"FF");
                    fFFTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fFFTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to PaaTreeViewItemTreeItem
        /// </summary>
        public TreeItem PaaTreeViewItemTreeItem
        {
            get
            {
                if (null == fPaaTreeViewItemTreeItem)
                {
                    fPaaTreeViewItemTreeItem = new TreeItem("PaaTreeViewItemTreeItem", FFTreeViewItemTreeItem);
                    fPaaTreeViewItemTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fPaaTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Paa");
                    fPaaTreeViewItemTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                }

                return fPaaTreeViewItemTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to ButtonExpanderDup37Button
        /// </summary>
        public Button ButtonExpanderDup37Button
        {
            get
            {
                if (null == fButtonExpanderDup37Button)
                {
                    fButtonExpanderDup37Button = new Button("ButtonExpanderDup37Button", PaaTreeViewItemTreeItem);
                    fButtonExpanderDup37Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderDup37Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderDup37Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderDup37Button;
            }
        }

        /// <summary>
        /// Gets Reference to Image6C67385BE4Dup5Image
        /// </summary>
        public Image Image6C67385BE4Dup5Image
        {
            get
            {
                if (null == fImage6C67385BE4Dup5Image)
                {
                    fImage6C67385BE4Dup5Image = new Image("Image6C67385BE4Dup5Image", PaaTreeViewItemTreeItem);
                    fImage6C67385BE4Dup5Image.UIMap.Scope = UIASeachScope.Children;
                    fImage6C67385BE4Dup5Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage6C67385BE4Dup5Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6C67385B-E43F-4ec0-B879-4FE51625A588");
                }

                return fImage6C67385BE4Dup5Image;
            }
        }

        /// <summary>
        /// Gets Reference to PaaTextBlockText
        /// </summary>
        public Text PaaTextBlockText
        {
            get
            {
                if (null == fPaaTextBlockText)
                {
                    fPaaTextBlockText = new Text("PaaTextBlockText", PaaTreeViewItemTreeItem);
                    fPaaTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fPaaTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Paa");
                    fPaaTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fPaaTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup6TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup6TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup6TabItem)
                {
                    fSystemWindowsCoDup6TabItem = new TabItem("SystemWindowsCoDup6TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup6TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b8c06323-208e-4239-a523-a025661e0eab");
                }

                return fSystemWindowsCoDup6TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingTextmText
        /// </summary>
        public Text AddressingTextmText
        {
            get
            {
                if (null == fAddressingTextmText)
                {
                    fAddressingTextmText = new Text("AddressingTextmText", SystemWindowsCoDup6TabItem);
                    fAddressingTextmText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                }

                return fAddressingTextmText;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingTextBText
        /// </summary>
        public Text AddressingTextBText
        {
            get
            {
                if (null == fAddressingTextBText)
                {
                    fAddressingTextBText = new Text("AddressingTextBText", AddressingTextmText);
                    fAddressingTextBText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                    fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAddressingTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to Text47EB5CBA4D1Text
        /// </summary>
        public Text Text47EB5CBA4D1Text
        {
            get
            {
                if (null == fText47EB5CBA4D1Text)
                {
                    fText47EB5CBA4D1Text = new Text("Text47EB5CBA4D1Text", SystemWindowsCoDup6TabItem);
                    fText47EB5CBA4D1Text.UIMap.Scope = UIASeachScope.Children;
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"47EB5CBA-4D1C-4eee-AD64-E26BDA31A3AC");
                }

                return fText47EB5CBA4D1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text0757E148179Text
        /// </summary>
        public Text Text0757E148179Text
        {
            get
            {
                if (null == fText0757E148179Text)
                {
                    fText0757E148179Text = new Text("Text0757E148179Text", SystemWindowsCoDup6TabItem);
                    fText0757E148179Text.UIMap.Scope = UIASeachScope.Children;
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0757E148-1794-4a5d-B378-6BE8049F65E1");
                }

                return fText0757E148179Text;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceConfiguraTabItem
        /// </summary>
        public TabItem DeviceConfiguraTabItem
        {
            get
            {
                if (null == fDeviceConfiguraTabItem)
                {
                    fDeviceConfiguraTabItem = new TabItem("DeviceConfiguraTabItem", TabControlec0fdTab);
                    fDeviceConfiguraTabItem.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6DF1E016-517F-40e4-A63E-CD48D560192F");
                }

                return fDeviceConfiguraTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceConfiguraText
        /// </summary>
        public Text DeviceConfiguraText
        {
            get
            {
                if (null == fDeviceConfiguraText)
                {
                    fDeviceConfiguraText = new Text("DeviceConfiguraText", DeviceConfiguraTabItem);
                    fDeviceConfiguraText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fDeviceConfiguraText;
            }
        }

        /// <summary>
        /// Gets Reference to TemplateConfiguTabItem
        /// </summary>
        public TabItem TemplateConfiguTabItem
        {
            get
            {
                if (null == fTemplateConfiguTabItem)
                {
                    fTemplateConfiguTabItem = new TabItem("TemplateConfiguTabItem", TabControlec0fdTab);
                    fTemplateConfiguTabItem.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AC05F9B9-A7D8-4b34-80E7-910FB9870D47");
                }

                return fTemplateConfiguTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to TemplateConfiguText
        /// </summary>
        public Text TemplateConfiguText
        {
            get
            {
                if (null == fTemplateConfiguText)
                {
                    fTemplateConfiguText = new Text("TemplateConfiguText", TemplateConfiguTabItem);
                    fTemplateConfiguText.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTemplateConfiguText;
            }
        }

        /// <summary>
        /// Gets Reference to LogTabItem9b4f3TabItem
        /// </summary>
        public TabItem LogTabItem9b4f3TabItem
        {
            get
            {
                if (null == fLogTabItem9b4f3TabItem)
                {
                    fLogTabItem9b4f3TabItem = new TabItem("LogTabItem9b4f3TabItem", TabControlec0fdTab);
                    fLogTabItem9b4f3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9b4f34bb-d75a-4080-9be3-1c50ec31c5b6");
                }

                return fLogTabItem9b4f3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to LogTextBlockText
        /// </summary>
        public Text LogTextBlockText
        {
            get
            {
                if (null == fLogTextBlockText)
                {
                    fLogTextBlockText = new Text("LogTextBlockText", LogTabItem9b4f3TabItem);
                    fLogTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                    fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fLogTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup7TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup7TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup7TabItem)
                {
                    fSystemWindowsCoDup7TabItem = new TabItem("SystemWindowsCoDup7TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup7TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3AC8D4A8-3B06-421A-911B-E8CA248A9ED4");
                }

                return fSystemWindowsCoDup7TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SecurityTextmSeText
        /// </summary>
        public Text SecurityTextmSeText
        {
            get
            {
                if (null == fSecurityTextmSeText)
                {
                    fSecurityTextmSeText = new Text("SecurityTextmSeText", SystemWindowsCoDup7TabItem);
                    fSecurityTextmSeText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mSecurityTabLabel");
                }

                return fSecurityTextmSeText;
            }
        }

        /// <summary>
        /// Gets Reference to SecurityTextBloText
        /// </summary>
        public Text SecurityTextBloText
        {
            get
            {
                if (null == fSecurityTextBloText)
                {
                    fSecurityTextBloText = new Text("SecurityTextBloText", SecurityTextmSeText);
                    fSecurityTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSecurityTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to Text8A7A84DB894Text
        /// </summary>
        public Text Text8A7A84DB894Text
        {
            get
            {
                if (null == fText8A7A84DB894Text)
                {
                    fText8A7A84DB894Text = new Text("Text8A7A84DB894Text", SystemWindowsCoDup7TabItem);
                    fText8A7A84DB894Text.UIMap.Scope = UIASeachScope.Children;
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8A7A84DB-8945-40E1-A0F9-C40DDD129739");
                }

                return fText8A7A84DB894Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text16F78FB18FFText
        /// </summary>
        public Text Text16F78FB18FFText
        {
            get
            {
                if (null == fText16F78FB18FFText)
                {
                    fText16F78FB18FFText = new Text("Text16F78FB18FFText", SystemWindowsCoDup7TabItem);
                    fText16F78FB18FFText.UIMap.Scope = UIASeachScope.Children;
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16F78FB1-8FF9-4B0D-8251-FB09F520EA73");
                }

                return fText16F78FB18FFText;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup8TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup8TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup8TabItem)
                {
                    fSystemWindowsCoDup8TabItem = new TabItem("SystemWindowsCoDup8TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup8TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1678607C-20BF-4137-8238-C9D46EA8FF70");
                }

                return fSystemWindowsCoDup8TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AnalyticsTextmAText
        /// </summary>
        public Text AnalyticsTextmAText
        {
            get
            {
                if (null == fAnalyticsTextmAText)
                {
                    fAnalyticsTextmAText = new Text("AnalyticsTextmAText", SystemWindowsCoDup8TabItem);
                    fAnalyticsTextmAText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAnalyticsTabLabel");
                }

                return fAnalyticsTextmAText;
            }
        }

        /// <summary>
        /// Gets Reference to AnalyticsTextBlText
        /// </summary>
        public Text AnalyticsTextBlText
        {
            get
            {
                if (null == fAnalyticsTextBlText)
                {
                    fAnalyticsTextBlText = new Text("AnalyticsTextBlText", AnalyticsTextmAText);
                    fAnalyticsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAnalyticsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to AboutTabItemf45TabItem
        /// </summary>
        public TabItem AboutTabItemf45TabItem
        {
            get
            {
                if (null == fAboutTabItemf45TabItem)
                {
                    fAboutTabItemf45TabItem = new TabItem("AboutTabItemf45TabItem", TabControlec0fdTab);
                    fAboutTabItemf45TabItem.UIMap.Scope = UIASeachScope.Children;
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f45c22d9-f77a-481a-95bc-09cdff03e131");
                }

                return fAboutTabItemf45TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AboutTextBlockText
        /// </summary>
        public Text AboutTextBlockText
        {
            get
            {
                if (null == fAboutTextBlockText)
                {
                    fAboutTextBlockText = new Text("AboutTextBlockText", AboutTabItemf45TabItem);
                    fAboutTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAboutTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to UserMustSupplyaCheckBox
        /// </summary>
        public CheckBox UserMustSupplyaCheckBox
        {
            get
            {
                if (null == fUserMustSupplyaCheckBox)
                {
                    fUserMustSupplyaCheckBox = new CheckBox("UserMustSupplyaCheckBox", ResponseSettingGroup);
                    fUserMustSupplyaCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUserMustSupplyaCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User Must Supply a Response");
                    fUserMustSupplyaCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5d31de6a-6bdd-43e2-ac40-2841f29659ca");
                    fUserMustSupplyaCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                }

                return fUserMustSupplyaCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to WorkflowPromptWWindow
        /// </summary>
        public Window WorkflowPromptWWindow
        {
            get
            {
                if (null == fWorkflowPromptWWindow)
                {
                    fWorkflowPromptWWindow = new Window("WorkflowPromptWWindow", HPDigitalSendinWindow);
                    fWorkflowPromptWWindow.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowPromptWWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflow Prompt");
                    fWorkflowPromptWWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DDFB478B-AC3A-4a1d-B950-4ECDC19C627A");
                    fWorkflowPromptWWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                }

                return fWorkflowPromptWWindow;
            }
        }

        /// <summary>
        /// Gets Reference to ResponseSettingGroup
        /// </summary>
        public Group ResponseSettingGroup
        {
            get
            {
                if (null == fResponseSettingGroup)
                {
                    fResponseSettingGroup = new Group("ResponseSettingGroup", WorkflowPromptWWindow);
                    fResponseSettingGroup.UIMap.Scope = UIASeachScope.Children;
                    fResponseSettingGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Response Settings");
                    fResponseSettingGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6d885248-7259-4279-aaa4-e06bdb506c1b");
                    fResponseSettingGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fResponseSettingGroup;
            }
        }

        /// <summary>
        /// Gets Reference to OKButton249af4fButton
        /// </summary>
        public Button OKButton249af4fButton
        {
            get
            {
                if (null == fOKButton249af4fButton)
                {
                    fOKButton249af4fButton = new Button("OKButton249af4fButton", WorkflowPromptWWindow);
                    fOKButton249af4fButton.UIMap.Scope = UIASeachScope.Children;
                    fOKButton249af4fButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKButton249af4fButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"249af4f6-a2fd-4970-87af-bed34a26accd");
                    fOKButton249af4fButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fOKButton249af4fButton;
            }
        }

        /// <summary>
        /// Gets Reference to PromptSettingsGGroup
        /// </summary>
        public Group PromptSettingsGGroup
        {
            get
            {
                if (null == fPromptSettingsGGroup)
                {
                    fPromptSettingsGGroup = new Group("PromptSettingsGGroup", WorkflowPromptWWindow);
                    fPromptSettingsGGroup.UIMap.Scope = UIASeachScope.Children;
                    fPromptSettingsGGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Prompt Settings");
                    fPromptSettingsGGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fPromptSettingsGGroup;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxc93b2243Edit
        /// </summary>
        public Edit TextBoxc93b2243Edit
        {
            get
            {
                if (null == fTextBoxc93b2243Edit)
                {
                    fTextBoxc93b2243Edit = new Edit("TextBoxc93b2243Edit", PromptSettingsGGroup);
                    fTextBoxc93b2243Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxc93b2243Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c93b2243-01ef-44e3-a248-5229a5c11e0e");
                    fTextBoxc93b2243Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxc93b2243Edit;
            }
        }
    }
}
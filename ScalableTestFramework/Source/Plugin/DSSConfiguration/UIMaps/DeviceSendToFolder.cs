//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------

namespace HP.ScalableTest.Plugin.DSSConfiguration.UIMaps
{
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class DeviceSendToFolder
    {
        /// <summary>
        /// Backing field for HPDigitalSendinWindow property
        /// </summary>
        private Window fHPDigitalSendinWindow;

        /// <summary>
        /// Backing field for ConfigureDeviceWindow property
        /// </summary>
        private Window fConfigureDeviceWindow;

        /// <summary>
        /// Backing field for PopupWindow property
        /// </summary>
        private Window fPopupWindow;

        /// <summary>
        /// Backing field for ScrollViewerDroPane property
        /// </summary>
        private Pane fScrollViewerDroPane;

        /// <summary>
        /// Backing field for DirectlyfromtheDup0ListItem property
        /// </summary>
        private ListItem fDirectlyfromtheDup0ListItem;

        /// <summary>
        /// Backing field for DirectlyfromtheDup0Text property
        /// </summary>
        private Text fDirectlyfromtheDup0Text;

        /// <summary>
        /// Backing field for viatheDigitalSeDup0ListItem property
        /// </summary>
        private ListItem fviatheDigitalSeDup0ListItem;

        /// <summary>
        /// Backing field for viatheDigitalSeDup0Text property
        /// </summary>
        private Text fviatheDigitalSeDup0Text;

        /// <summary>
        /// Backing field for ScrollBarVerticDup0ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup0ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup0ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup0ScrollBar;

        /// <summary>
        /// Backing field for ConfigureDeviceTitleBar property
        /// </summary>
        private TitleBar fConfigureDeviceTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyDup0MenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyDup0MenuBar;

        /// <summary>
        /// Backing field for SystemItem1Dup0MenuItem property
        /// </summary>
        private MenuItem fSystemItem1Dup0MenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizDup0Button property
        /// </summary>
        private Button fMinimizeMinimizDup0Button;

        /// <summary>
        /// Backing field for MaximizeMaximizDup0Button property
        /// </summary>
        private Button fMaximizeMaximizDup0Button;

        /// <summary>
        /// Backing field for CloseCloseDup0Button property
        /// </summary>
        private Button fCloseCloseDup0Button;

        /// <summary>
        /// Backing field for HelpButtonfb686Button property
        /// </summary>
        private Button fHelpButtonfb686Button;

        /// <summary>
        /// Backing field for HelpTextBlockDup0Text property
        /// </summary>
        private Text fHelpTextBlockDup0Text;

        /// <summary>
        /// Backing field for ApplyButton46D6Button property
        /// </summary>
        private Button fApplyButton46D6Button;

        /// <summary>
        /// Backing field for ApplyTextBlockDup0Text property
        /// </summary>
        private Text fApplyTextBlockDup0Text;

        /// <summary>
        /// Backing field for CancelButtoned9Button property
        /// </summary>
        private Button fCancelButtoned9Button;

        /// <summary>
        /// Backing field for CancelTextBlockDup0Text property
        /// </summary>
        private Text fCancelTextBlockDup0Text;

        /// <summary>
        /// Backing field for OKButton8c9182aButton property
        /// </summary>
        private Button fOKButton8c9182aButton;

        /// <summary>
        /// Backing field for OKTextBlockDup0Text property
        /// </summary>
        private Text fOKTextBlockDup0Text;

        /// <summary>
        /// Backing field for TabControl2111BTab property
        /// </summary>
        private Tab fTabControl2111BTab;

        /// <summary>
        /// Backing field for SystemWindowsCoDup0TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup0TabItem;

        /// <summary>
        /// Backing field for GeneralTextmGenDup0Text property
        /// </summary>
        private Text fGeneralTextmGenDup0Text;

        /// <summary>
        /// Backing field for GeneralTextBlocDup0Text property
        /// </summary>
        private Text fGeneralTextBlocDup0Text;

        /// <summary>
        /// Backing field for Text9127A6692D0Text property
        /// </summary>
        private Text fText9127A6692D0Text;

        /// <summary>
        /// Backing field for ProgressBar836eProgressBar property
        /// </summary>
        private ProgressBar fProgressBar836eProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup1TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup1TabItem;

        /// <summary>
        /// Backing field for AuthenticationTDup0Text property
        /// </summary>
        private Text fAuthenticationTDup0Text;

        /// <summary>
        /// Backing field for AuthenticationTDup1Text property
        /// </summary>
        private Text fAuthenticationTDup1Text;

        /// <summary>
        /// Backing field for Text2087FBF2200Text property
        /// </summary>
        private Text fText2087FBF2200Text;

        /// <summary>
        /// Backing field for Text3C0A7A0B490Text property
        /// </summary>
        private Text fText3C0A7A0B490Text;

        /// <summary>
        /// Backing field for ProgressBar992dProgressBar property
        /// </summary>
        private ProgressBar fProgressBar992dProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup2TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup2TabItem;

        /// <summary>
        /// Backing field for SendtoEmailTextDup0Text property
        /// </summary>
        private Text fSendtoEmailTextDup0Text;

        /// <summary>
        /// Backing field for SendtoEmailTextDup1Text property
        /// </summary>
        private Text fSendtoEmailTextDup1Text;

        /// <summary>
        /// Backing field for Text265ea8f2a5fText property
        /// </summary>
        private Text fText265ea8f2a5fText;

        /// <summary>
        /// Backing field for Text1a251d5f398Text property
        /// </summary>
        private Text fText1a251d5f398Text;

        /// <summary>
        /// Backing field for ProgressBara2e8ProgressBar property
        /// </summary>
        private ProgressBar fProgressBara2e8ProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup3TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup3TabItem;

        /// <summary>
        /// Backing field for FaxTextmFaxTabLDup0Text property
        /// </summary>
        private Text fFaxTextmFaxTabLDup0Text;

        /// <summary>
        /// Backing field for FaxTextBlockDup0Text property
        /// </summary>
        private Text fFaxTextBlockDup0Text;

        /// <summary>
        /// Backing field for Text105C9A93254Text property
        /// </summary>
        private Text fText105C9A93254Text;

        /// <summary>
        /// Backing field for Text25DD30D682EText property
        /// </summary>
        private Text fText25DD30D682EText;

        /// <summary>
        /// Backing field for ProgressBare99cProgressBar property
        /// </summary>
        private ProgressBar fProgressBare99cProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup4TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup4TabItem;

        /// <summary>
        /// Backing field for SendtoFolderTexDup0Text property
        /// </summary>
        private Text fSendtoFolderTexDup0Text;

        /// <summary>
        /// Backing field for SendtoFolderTexDup1Text property
        /// </summary>
        private Text fSendtoFolderTexDup1Text;

        /// <summary>
        /// Backing field for Texta7a758d4d75Text property
        /// </summary>
        private Text fTexta7a758d4d75Text;

        /// <summary>
        /// Backing field for TextBlockDup0Text property
        /// </summary>
        private Text fTextBlockDup0Text;

        /// <summary>
        /// Backing field for Texte95b3491f6bText property
        /// </summary>
        private Text fTexte95b3491f6bText;

        /// <summary>
        /// Backing field for ProgressBar9a14ProgressBar property
        /// </summary>
        private ProgressBar fProgressBar9a14ProgressBar;

        /// <summary>
        /// Backing field for TabStatusUserCoCustom property
        /// </summary>
        private Custom fTabStatusUserCoCustom;

        /// <summary>
        /// Backing field for ErrorTextBlockText property
        /// </summary>
        private Text fEnabledTextBlocText;

        /// <summary>
        /// Backing field for MfpConfiguratioCustom property
        /// </summary>
        private Custom fMfpConfiguratioCustom;

        /// <summary>
        /// Backing field for ScrollViewer296Pane property
        /// </summary>
        private Pane fScrollViewer296Pane;

        /// <summary>
        /// Backing field for ErrorConflictUsCustom property
        /// </summary>
        private Custom fErrorConflictUsCustom;

        /// <summary>
        /// Backing field for EnableSavetoNetCheckBox property
        /// </summary>
        private CheckBox fEnableSavetoNetCheckBox;

        /// <summary>
        /// Backing field for EnableSavetoNetText property
        /// </summary>
        private Text fEnableSavetoNetText;

        /// <summary>
        /// Backing field for SendFolderText4Text property
        /// </summary>
        private Text fSendFolderText4Text;

        /// <summary>
        /// Backing field for SendFolderTextBText property
        /// </summary>
        private Text fSendFolderTextBText;

        /// <summary>
        /// Backing field for ComboBox4A9B6D9ComboBox property
        /// </summary>
        private ComboBox fComboBox4A9B6D9ComboBox;

        /// <summary>
        /// Backing field for DirectlyfromtheDup1ListItem property
        /// </summary>
        private ListItem fDirectlyfromtheDup1ListItem;

        /// <summary>
        /// Backing field for DirectlyfromtheDup1Text property
        /// </summary>
        private Text fDirectlyfromtheDup1Text;

        /// <summary>
        /// Backing field for viatheDigitalSeDup1ListItem property
        /// </summary>
        private ListItem fviatheDigitalSeDup1ListItem;

        /// <summary>
        /// Backing field for viatheDigitalSeDup1Text property
        /// </summary>
        private Text fviatheDigitalSeDup1Text;

        /// <summary>
        /// Backing field for QuickSetsGroupBGroup property
        /// </summary>
        private Group fQuickSetsGroupBGroup;

        /// <summary>
        /// Backing field for QuickSetsTextBlText property
        /// </summary>
        private Text fQuickSetsTextBlText;

        /// <summary>
        /// Backing field for ListView851eb6cDataGrid property
        /// </summary>
        private DataGrid fListView851eb6cDataGrid;

        /// <summary>
        /// Backing field for GridViewHeaderRDup0Header property
        /// </summary>
        private Header fGridViewHeaderRDup0Header;

        /// <summary>
        /// Backing field for QuickSetTitleGrHeaderItem property
        /// </summary>
        private HeaderItem fQuickSetTitleGrHeaderItem;

        /// <summary>
        /// Backing field for QuickSetTitleText property
        /// </summary>
        private Text fQuickSetTitleText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup0Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup0Thumb;

        /// <summary>
        /// Backing field for QuickSetDescripHeaderItem property
        /// </summary>
        private HeaderItem fQuickSetDescripHeaderItem;

        /// <summary>
        /// Backing field for QuickSetDescripText property
        /// </summary>
        private Text fQuickSetDescripText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup1Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup1Thumb;

        /// <summary>
        /// Backing field for ButtonLocationGHeaderItem property
        /// </summary>
        private HeaderItem fButtonLocationGHeaderItem;

        /// <summary>
        /// Backing field for ButtonLocationText property
        /// </summary>
        private Text fButtonLocationText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup2Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup2Thumb;

        /// <summary>
        /// Backing field for AddButton144e03Button property
        /// </summary>
        private Button fAddButton144e03Button;

        /// <summary>
        /// Backing field for AddTextBlockText property
        /// </summary>
        private Text fAddTextBlockText;

        /// <summary>
        /// Backing field for EditButtonf860aButton property
        /// </summary>
        private Button fEditButtonf860aButton;

        /// <summary>
        /// Backing field for EditTextBlockText property
        /// </summary>
        private Text fEditTextBlockText;

        /// <summary>
        /// Backing field for CopyButton522a4Button property
        /// </summary>
        private Button fCopyButton522a4Button;

        /// <summary>
        /// Backing field for CopyTextBlockText property
        /// </summary>
        private Text fCopyTextBlockText;

        /// <summary>
        /// Backing field for RemoveButton717Button property
        /// </summary>
        private Button fRemoveButton717Button;

        /// <summary>
        /// Backing field for RemoveTextBlockText property
        /// </summary>
        private Text fRemoveTextBlockText;

        /// <summary>
        /// Backing field for NotificationSetGroup property
        /// </summary>
        private Group fNotificationSetGroup;

        /// <summary>
        /// Backing field for NotificationSetText property
        /// </summary>
        private Text fNotificationSetText;

        /// <summary>
        /// Backing field for ConditiononWhicDup0Text property
        /// </summary>
        private Text fConditiononWhicDup0Text;

        /// <summary>
        /// Backing field for ConditiononWhicDup1Text property
        /// </summary>
        private Text fConditiononWhicDup1Text;

        /// <summary>
        /// Backing field for ComboBox18729b8ComboBox property
        /// </summary>
        private ComboBox fComboBox18729b8ComboBox;

        /// <summary>
        /// Backing field for MethodUsedtoDelDup0Text property
        /// </summary>
        private Text fMethodUsedtoDelDup0Text;

        /// <summary>
        /// Backing field for MethodUsedtoDelDup1Text property
        /// </summary>
        private Text fMethodUsedtoDelDup1Text;

        /// <summary>
        /// Backing field for ComboBoxa6daee2ComboBox property
        /// </summary>
        private ComboBox fComboBoxa6daee2ComboBox;

        /// <summary>
        /// Backing field for NotificationEmaDup0Text property
        /// </summary>
        private Text fNotificationEmaDup0Text;

        /// <summary>
        /// Backing field for NotificationEmaDup1Text property
        /// </summary>
        private Text fNotificationEmaDup1Text;

        /// <summary>
        /// Backing field for TextBoxC03E7642Edit property
        /// </summary>
        private Edit fTextBoxC03E7642Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup0Pane property
        /// </summary>
        private Pane fScrollViewerPARDup0Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup1ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup1ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup1ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup1ScrollBar;

        /// <summary>
        /// Backing field for IncludeThumbnaiCheckBox property
        /// </summary>
        private CheckBox fIncludeThumbnaiCheckBox;

        /// <summary>
        /// Backing field for IncludeThumbnaiText property
        /// </summary>
        private Text fIncludeThumbnaiText;

        /// <summary>
        /// Backing field for TextBoxEdit property
        /// </summary>
        private Edit fTextBoxEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup1Pane property
        /// </summary>
        private Pane fScrollViewerPARDup1Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup2ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup2ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup2ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup2ScrollBar;

        /// <summary>
        /// Backing field for FolderSettingsGGroup property
        /// </summary>
        private Group fFolderSettingsGGroup;

        /// <summary>
        /// Backing field for FolderSettingsTText property
        /// </summary>
        private Text fFolderSettingsTText;

        /// <summary>
        /// Backing field for SendonlytofoldeRadioButton property
        /// </summary>
        private RadioButton fSendonlytofoldeRadioButton;

        /// <summary>
        /// Backing field for SendonlytofoldeText property
        /// </summary>
        private Text fSendonlytofoldeText;

        /// <summary>
        /// Backing field for ThisoptionsuppoText property
        /// </summary>
        private Text fThisoptionsuppoText;

        /// <summary>
        /// Backing field for VerifyfolderaccCheckBox property
        /// </summary>
        private CheckBox fVerifyfolderaccCheckBox;

        /// <summary>
        /// Backing field for VerifyfolderaccText property
        /// </summary>
        private Text fVerifyfolderaccText;

        /// <summary>
        /// Backing field for WhenuncheckedusText property
        /// </summary>
        private Text fWhenuncheckedusText;

        /// <summary>
        /// Backing field for AllowsendingtofRadioButton property
        /// </summary>
        private RadioButton fAllowsendingtofRadioButton;

        /// <summary>
        /// Backing field for AllowsendingtofText property
        /// </summary>
        private Text fAllowsendingtofText;

        /// <summary>
        /// Backing field for ThisoptiondoesnText property
        /// </summary>
        private Text fThisoptiondoesnText;

        /// <summary>
        /// Backing field for ScanSettingsGroGroup property
        /// </summary>
        private Group fScanSettingsGroGroup;

        /// <summary>
        /// Backing field for ScanSettingsTexText property
        /// </summary>
        private Text fScanSettingsTexText;

        /// <summary>
        /// Backing field for OriginalSizeText property
        /// </summary>
        private Text fOriginalSizeText;

        /// <summary>
        /// Backing field for OriginalSizeTexText property
        /// </summary>
        private Text fOriginalSizeTexText;

        /// <summary>
        /// Backing field for ComboBox702f965ComboBox property
        /// </summary>
        private ComboBox fComboBox702f965ComboBox;

        /// <summary>
        /// Backing field for CustomDimensionText property
        /// </summary>
        private Text fCustomDimensionText;

        /// <summary>
        /// Backing field for ComboBox6e8a69eComboBox property
        /// </summary>
        private ComboBox fComboBox6e8a69eComboBox;

        /// <summary>
        /// Backing field for CustomXDimensioText property
        /// </summary>
        private Text fCustomXDimensioText;

        /// <summary>
        /// Backing field for TextBox6de71b55Edit property
        /// </summary>
        private Edit fTextBox6de71b55Edit;

        /// <summary>
        /// Backing field for CustomYDimensioText property
        /// </summary>
        private Text fCustomYDimensioText;

        /// <summary>
        /// Backing field for TextBox6e9869f1Edit property
        /// </summary>
        private Edit fTextBox6e9869f1Edit;

        /// <summary>
        /// Backing field for OriginalSidesText property
        /// </summary>
        private Text fOriginalSidesText;

        /// <summary>
        /// Backing field for OriginalSidesTeText property
        /// </summary>
        private Text fOriginalSidesTeText;

        /// <summary>
        /// Backing field for ComboBoxc67ed30ComboBox property
        /// </summary>
        private ComboBox fComboBoxc67ed30ComboBox;

        /// <summary>
        /// Backing field for OptimizeTextPicDup0Text property
        /// </summary>
        private Text fOptimizeTextPicDup0Text;

        /// <summary>
        /// Backing field for OptimizeTextPicDup1Text property
        /// </summary>
        private Text fOptimizeTextPicDup1Text;

        /// <summary>
        /// Backing field for ComboBoxc51215cComboBox property
        /// </summary>
        private ComboBox fComboBoxc51215cComboBox;

        /// <summary>
        /// Backing field for OptimizeForText property
        /// </summary>
        private Text fOptimizeForText;

        /// <summary>
        /// Backing field for OptimizeForTextText property
        /// </summary>
        private Text fOptimizeForTextText;

        /// <summary>
        /// Backing field for ComboBox7e598b9ComboBox property
        /// </summary>
        private ComboBox fComboBox7e598b9ComboBox;

        /// <summary>
        /// Backing field for ContentOrientatDup0Text property
        /// </summary>
        private Text fContentOrientatDup0Text;

        /// <summary>
        /// Backing field for ContentOrientatDup1Text property
        /// </summary>
        private Text fContentOrientatDup1Text;

        /// <summary>
        /// Backing field for ComboBoxb0ba9f8ComboBox property
        /// </summary>
        private ComboBox fComboBoxb0ba9f8ComboBox;

        /// <summary>
        /// Backing field for A2SidedFormatTeDup0Text property
        /// </summary>
        private Text fA2SidedFormatTeDup0Text;

        /// <summary>
        /// Backing field for A2SidedFormatTeDup1Text property
        /// </summary>
        private Text fA2SidedFormatTeDup1Text;

        /// <summary>
        /// Backing field for ComboBox100bd49ComboBox property
        /// </summary>
        private ComboBox fComboBox100bd49ComboBox;

        /// <summary>
        /// Backing field for BackgroundCleanDup0Text property
        /// </summary>
        private Text fBackgroundCleanDup0Text;

        /// <summary>
        /// Backing field for BackgroundCleanDup1Text property
        /// </summary>
        private Text fBackgroundCleanDup1Text;

        /// <summary>
        /// Backing field for ComboBox837e012ComboBox property
        /// </summary>
        private ComboBox fComboBox837e012ComboBox;

        /// <summary>
        /// Backing field for DarknessText property
        /// </summary>
        private Text fDarknessText;

        /// <summary>
        /// Backing field for DarknessTextBloText property
        /// </summary>
        private Text fDarknessTextBloText;

        /// <summary>
        /// Backing field for ComboBox22ca338ComboBox property
        /// </summary>
        private ComboBox fComboBox22ca338ComboBox;

        /// <summary>
        /// Backing field for ContrastText property
        /// </summary>
        private Text fContrastText;

        /// <summary>
        /// Backing field for ContrastTextBloText property
        /// </summary>
        private Text fContrastTextBloText;

        /// <summary>
        /// Backing field for ComboBoxadd9ab6ComboBox property
        /// </summary>
        private ComboBox fComboBoxadd9ab6ComboBox;

        /// <summary>
        /// Backing field for SharpnessText property
        /// </summary>
        private Text fSharpnessText;

        /// <summary>
        /// Backing field for SharpnessTextBlText property
        /// </summary>
        private Text fSharpnessTextBlText;

        /// <summary>
        /// Backing field for ComboBoxae7c38bComboBox property
        /// </summary>
        private ComboBox fComboBoxae7c38bComboBox;

        /// <summary>
        /// Backing field for ColorDropoutText property
        /// </summary>
        private Text fColorDropoutText;

        /// <summary>
        /// Backing field for ComboBox519cf92ComboBox property
        /// </summary>
        private ComboBox fComboBox519cf92ComboBox;

        /// <summary>
        /// Backing field for ImagePreviewText property
        /// </summary>
        private Text fImagePreviewText;

        /// <summary>
        /// Backing field for ImagePreviewTexText property
        /// </summary>
        private Text fImagePreviewTexText;

        /// <summary>
        /// Backing field for ComboBox51ea797ComboBox property
        /// </summary>
        private ComboBox fComboBox51ea797ComboBox;

        /// <summary>
        /// Backing field for CroppingOptionsDup0Text property
        /// </summary>
        private Text fCroppingOptionsDup0Text;

        /// <summary>
        /// Backing field for CroppingOptionsDup1Text property
        /// </summary>
        private Text fCroppingOptionsDup1Text;

        /// <summary>
        /// Backing field for ComboBox8EB598EComboBox property
        /// </summary>
        private ComboBox fComboBox8EB598EComboBox;

        /// <summary>
        /// Backing field for JobBuildCheckBoCheckBox property
        /// </summary>
        private CheckBox fJobBuildCheckBoCheckBox;

        /// <summary>
        /// Backing field for AutomaticToneChCheckBox property
        /// </summary>
        private CheckBox fAutomaticToneChCheckBox;

        /// <summary>
        /// Backing field for CheckingthisboxText property
        /// </summary>
        private Text fCheckingthisboxText;

        /// <summary>
        /// Backing field for AutomaticallyStCheckBox property
        /// </summary>
        private CheckBox fAutomaticallyStCheckBox;

        /// <summary>
        /// Backing field for WhenenabledpageText property
        /// </summary>
        private Text fWhenenabledpageText;

        /// <summary>
        /// Backing field for MultifeedDetectCheckBox property
        /// </summary>
        private CheckBox fMultifeedDetectCheckBox;

        /// <summary>
        /// Backing field for MultifeedDetectText property
        /// </summary>
        private Text fMultifeedDetectText;

        /// <summary>
        /// Backing field for EraseEdgeUserCoCustom property
        /// </summary>
        private Custom fEraseEdgeUserCoCustom;

        /// <summary>
        /// Backing field for EraseEdgesGroupGroup property
        /// </summary>
        private Group fEraseEdgesGroupGroup;

        /// <summary>
        /// Backing field for EraseEdgesTextBDup0Text property
        /// </summary>
        private Text fEraseEdgesTextBDup0Text;

        /// <summary>
        /// Backing field for EraseEdgesCheckCheckBox property
        /// </summary>
        private CheckBox fEraseEdgesCheckCheckBox;

        /// <summary>
        /// Backing field for EraseEdgesTextBDup1Text property
        /// </summary>
        private Text fEraseEdgesTextBDup1Text;

        /// <summary>
        /// Backing field for UseinchesCheckBCheckBox property
        /// </summary>
        private CheckBox fUseinchesCheckBCheckBox;

        /// <summary>
        /// Backing field for FrontsideeraseGGroup property
        /// </summary>
        private Group fFrontsideeraseGGroup;

        /// <summary>
        /// Backing field for BacksideeraseGrGroup property
        /// </summary>
        private Group fBacksideeraseGrGroup;

        /// <summary>
        /// Backing field for FileSettingsGroGroup property
        /// </summary>
        private Group fFileSettingsGroGroup;

        /// <summary>
        /// Backing field for FileSettingsTexText property
        /// </summary>
        private Text fFileSettingsTexText;

        /// <summary>
        /// Backing field for FileNamePrefixTDup0Text property
        /// </summary>
        private Text fFileNamePrefixTDup0Text;

        /// <summary>
        /// Backing field for FileNamePrefixTDup1Text property
        /// </summary>
        private Text fFileNamePrefixTDup1Text;

        /// <summary>
        /// Backing field for TextBox8a012dfaEdit property
        /// </summary>
        private Edit fTextBox8a012dfaEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup2Pane property
        /// </summary>
        private Pane fScrollViewerPARDup2Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup3ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup3ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup3ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup3ScrollBar;

        /// <summary>
        /// Backing field for Expander4d68e62Group property
        /// </summary>
        private Group fExpander4d68e62Group;

        /// <summary>
        /// Backing field for ButtonHeaderSitDup0Button property
        /// </summary>
        private Button fButtonHeaderSitDup0Button;

        /// <summary>
        /// Backing field for NotusereditableDup0Text property
        /// </summary>
        private Text fNotusereditableDup0Text;

        /// <summary>
        /// Backing field for NotusereditableDup1Text property
        /// </summary>
        private Text fNotusereditableDup1Text;

        /// <summary>
        /// Backing field for DefaultFileNameDup0Text property
        /// </summary>
        private Text fDefaultFileNameDup0Text;

        /// <summary>
        /// Backing field for DefaultFileNameDup1Text property
        /// </summary>
        private Text fDefaultFileNameDup1Text;

        /// <summary>
        /// Backing field for TextBox0adb8ae3Edit property
        /// </summary>
        private Edit fTextBox0adb8ae3Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup3Pane property
        /// </summary>
        private Pane fScrollViewerPARDup3Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup4ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup4ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup4ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup4ScrollBar;

        /// <summary>
        /// Backing field for UsereditableCheCheckBox property
        /// </summary>
        private CheckBox fUsereditableCheCheckBox;

        /// <summary>
        /// Backing field for UsereditableTexText property
        /// </summary>
        private Text fUsereditableTexText;

        /// <summary>
        /// Backing field for ExampleText8495Text property
        /// </summary>
        private Text fExampleText8495Text;

        /// <summary>
        /// Backing field for ExampleTextBlocText property
        /// </summary>
        private Text fExampleTextBlocText;

        /// <summary>
        /// Backing field for TextBoxc35a7c75Edit property
        /// </summary>
        private Edit fTextBoxc35a7c75Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup4Pane property
        /// </summary>
        private Pane fScrollViewerPARDup4Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup5ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup5ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup5ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup5ScrollBar;

        /// <summary>
        /// Backing field for FileNameSuffixTDup0Text property
        /// </summary>
        private Text fFileNameSuffixTDup0Text;

        /// <summary>
        /// Backing field for FileNameSuffixTDup1Text property
        /// </summary>
        private Text fFileNameSuffixTDup1Text;

        /// <summary>
        /// Backing field for TextBox4429f27eEdit property
        /// </summary>
        private Edit fTextBox4429f27eEdit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup5Pane property
        /// </summary>
        private Pane fScrollViewerPARDup5Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup6ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup6ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup6ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup6ScrollBar;

        /// <summary>
        /// Backing field for Expandera8aefecGroup property
        /// </summary>
        private Group fExpandera8aefecGroup;

        /// <summary>
        /// Backing field for ButtonHeaderSitDup1Button property
        /// </summary>
        private Button fButtonHeaderSitDup1Button;

        /// <summary>
        /// Backing field for NotusereditableDup2Text property
        /// </summary>
        private Text fNotusereditableDup2Text;

        /// <summary>
        /// Backing field for NotusereditableDup3Text property
        /// </summary>
        private Text fNotusereditableDup3Text;

        /// <summary>
        /// Backing field for DefaultColorPreDup0Text property
        /// </summary>
        private Text fDefaultColorPreDup0Text;

        /// <summary>
        /// Backing field for DefaultColorPreDup1Text property
        /// </summary>
        private Text fDefaultColorPreDup1Text;

        /// <summary>
        /// Backing field for ComboBox547be0aComboBox property
        /// </summary>
        private ComboBox fComboBox547be0aComboBox;

        /// <summary>
        /// Backing field for ScaninBlackwhenCheckBox property
        /// </summary>
        private CheckBox fScaninBlackwhenCheckBox;

        /// <summary>
        /// Backing field for ScaninBlackwhenText property
        /// </summary>
        private Text fScaninBlackwhenText;

        /// <summary>
        /// Backing field for InAutomaticallyText property
        /// </summary>
        private Text fInAutomaticallyText;

        /// <summary>
        /// Backing field for DefaultOutputQuDup0Text property
        /// </summary>
        private Text fDefaultOutputQuDup0Text;

        /// <summary>
        /// Backing field for DefaultOutputQuDup1Text property
        /// </summary>
        private Text fDefaultOutputQuDup1Text;

        /// <summary>
        /// Backing field for ComboBox31f0825ComboBox property
        /// </summary>
        private ComboBox fComboBox31f0825ComboBox;

        /// <summary>
        /// Backing field for EnableOCRCheckBCheckBox property
        /// </summary>
        private CheckBox fEnableOCRCheckBCheckBox;

        /// <summary>
        /// Backing field for EnableOCRTextBlText property
        /// </summary>
        private Text fEnableOCRTextBlText;

        /// <summary>
        /// Backing field for AllowusertospecText property
        /// </summary>
        private Text fAllowusertospecText;

        /// <summary>
        /// Backing field for DefaultResolutiDup0Text property
        /// </summary>
        private Text fDefaultResolutiDup0Text;

        /// <summary>
        /// Backing field for DefaultResolutiDup1Text property
        /// </summary>
        private Text fDefaultResolutiDup1Text;

        /// <summary>
        /// Backing field for ComboBoxe2c4831ComboBox property
        /// </summary>
        private ComboBox fComboBoxe2c4831ComboBox;

        /// <summary>
        /// Backing field for CompressionTextDup0Text property
        /// </summary>
        private Text fCompressionTextDup0Text;

        /// <summary>
        /// Backing field for CompressionTextDup1Text property
        /// </summary>
        private Text fCompressionTextDup1Text;

        /// <summary>
        /// Backing field for ComboBoxdc9d38eComboBox property
        /// </summary>
        private ComboBox fComboBoxdc9d38eComboBox;

        /// <summary>
        /// Backing field for DefaultFileTypeDup0Text property
        /// </summary>
        private Text fDefaultFileTypeDup0Text;

        /// <summary>
        /// Backing field for DefaultFileTypeDup1Text property
        /// </summary>
        private Text fDefaultFileTypeDup1Text;

        /// <summary>
        /// Backing field for ComboBox8e5b7c2ComboBox property
        /// </summary>
        private ComboBox fComboBox8e5b7c2ComboBox;

        /// <summary>
        /// Backing field for BlackTIFFCompreDup0Text property
        /// </summary>
        private Text fBlackTIFFCompreDup0Text;

        /// <summary>
        /// Backing field for BlackTIFFCompreDup1Text property
        /// </summary>
        private Text fBlackTIFFCompreDup1Text;

        /// <summary>
        /// Backing field for ComboBox5799930ComboBox property
        /// </summary>
        private ComboBox fComboBox5799930ComboBox;

        /// <summary>
        /// Backing field for ColorGrayscaleTDup0Text property
        /// </summary>
        private Text fColorGrayscaleTDup0Text;

        /// <summary>
        /// Backing field for ColorGrayscaleTDup1Text property
        /// </summary>
        private Text fColorGrayscaleTDup1Text;

        /// <summary>
        /// Backing field for ComboBox64b9b9bComboBox property
        /// </summary>
        private ComboBox fComboBox64b9b9bComboBox;

        /// <summary>
        /// Backing field for DefaultOCRLanguText property
        /// </summary>
        private Text fDefaultOCRLanguText;

        /// <summary>
        /// Backing field for ComboBox3A1FC43ComboBox property
        /// </summary>
        private ComboBox fComboBox3A1FC43ComboBox;

        /// <summary>
        /// Backing field for PDFEncryptionChCheckBox property
        /// </summary>
        private CheckBox fPDFEncryptionChCheckBox;

        /// <summary>
        /// Backing field for PDFEncryptionTeText property
        /// </summary>
        private Text fPDFEncryptionTeText;

        /// <summary>
        /// Backing field for UserwillbeprompText property
        /// </summary>
        private Text fUserwillbeprompText;

        /// <summary>
        /// Backing field for EnableBlankPageCheckBox property
        /// </summary>
        private CheckBox fEnableBlankPageCheckBox;

        /// <summary>
        /// Backing field for EnableBlankPageText property
        /// </summary>
        private Text fEnableBlankPageText;

        /// <summary>
        /// Backing field for BlankpageswithiText property
        /// </summary>
        private Text fBlankpageswithiText;

        /// <summary>
        /// Backing field for ScrollBarVerticDup7ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup7ScrollBar;

        /// <summary>
        /// Backing field for RepeatButtonLinDup0Button property
        /// </summary>
        private Button fRepeatButtonLinDup0Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup0Button property
        /// </summary>
        private Button fRepeatButtonPagDup0Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup1Button property
        /// </summary>
        private Button fRepeatButtonPagDup1Button;

        /// <summary>
        /// Backing field for ThumbThumb property
        /// </summary>
        private Thumb fThumbThumb;

        /// <summary>
        /// Backing field for RepeatButtonLinDup1Button property
        /// </summary>
        private Button fRepeatButtonLinDup1Button;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup7ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup7ScrollBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup5TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup5TabItem;

        /// <summary>
        /// Backing field for SendtoWorkflowsDup0Text property
        /// </summary>
        private Text fSendtoWorkflowsDup0Text;

        /// <summary>
        /// Backing field for SendtoWorkflowsDup1Text property
        /// </summary>
        private Text fSendtoWorkflowsDup1Text;

        /// <summary>
        /// Backing field for TextAA63352F914Text property
        /// </summary>
        private Text fTextAA63352F914Text;

        /// <summary>
        /// Backing field for TextBlockDup1Text property
        /// </summary>
        private Text fTextBlockDup1Text;

        /// <summary>
        /// Backing field for TextB31E1B768A7Text property
        /// </summary>
        private Text fTextB31E1B768A7Text;

        /// <summary>
        /// Backing field for TextBlockDup2Text property
        /// </summary>
        private Text fTextBlockDup2Text;

        /// <summary>
        /// Backing field for ProgressBar55dfProgressBar property
        /// </summary>
        private ProgressBar fProgressBar55dfProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup6TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup6TabItem;

        /// <summary>
        /// Backing field for SystemWindowsCoDup7TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup7TabItem;

        /// <summary>
        /// Backing field for AddressingTextmDup0Text property
        /// </summary>
        private Text fAddressingTextmDup0Text;

        /// <summary>
        /// Backing field for AddressingTextBDup0Text property
        /// </summary>
        private Text fAddressingTextBDup0Text;

        /// <summary>
        /// Backing field for Text7a57f43ecb1Dup0Text property
        /// </summary>
        private Text fText7a57f43ecb1Dup0Text;

        /// <summary>
        /// Backing field for Text654b650dd19Dup0Text property
        /// </summary>
        private Text fText654b650dd19Dup0Text;

        /// <summary>
        /// Backing field for ProgressBar15a0ProgressBar property
        /// </summary>
        private ProgressBar fProgressBar15a0ProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup8TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup8TabItem;

        /// <summary>
        /// Backing field for LogTextmLogTabLText property
        /// </summary>
        private Text fLogTextmLogTabLText;

        /// <summary>
        /// Backing field for LogTextBlockDup0Text property
        /// </summary>
        private Text fLogTextBlockDup0Text;

        /// <summary>
        /// Backing field for ProgressBarA997ProgressBar property
        /// </summary>
        private ProgressBar fProgressBarA997ProgressBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup9TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup9TabItem;

        /// <summary>
        /// Backing field for HPDigitalSendinTitleBar property
        /// </summary>
        private TitleBar fHPDigitalSendinTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyDup1MenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyDup1MenuBar;

        /// <summary>
        /// Backing field for SystemItem1Dup1MenuItem property
        /// </summary>
        private MenuItem fSystemItem1Dup1MenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizDup1Button property
        /// </summary>
        private Button fMinimizeMinimizDup1Button;

        /// <summary>
        /// Backing field for MaximizeMaximizDup1Button property
        /// </summary>
        private Button fMaximizeMaximizDup1Button;

        /// <summary>
        /// Backing field for CloseCloseDup1Button property
        /// </summary>
        private Button fCloseCloseDup1Button;

        /// <summary>
        /// Backing field for HelpButtonCB8CFButton property
        /// </summary>
        private Button fHelpButtonCB8CFButton;

        /// <summary>
        /// Backing field for HelpTextBlockDup1Text property
        /// </summary>
        private Text fHelpTextBlockDup1Text;

        /// <summary>
        /// Backing field for ApplyButton61E2Button property
        /// </summary>
        private Button fApplyButton61E2Button;

        /// <summary>
        /// Backing field for ApplyTextBlockDup1Text property
        /// </summary>
        private Text fApplyTextBlockDup1Text;

        /// <summary>
        /// Backing field for CancelButton65CButton property
        /// </summary>
        private Button fCancelButton65CButton;

        /// <summary>
        /// Backing field for CancelTextBlockDup1Text property
        /// </summary>
        private Text fCancelTextBlockDup1Text;

        /// <summary>
        /// Backing field for OKButtonCC2EF49Button property
        /// </summary>
        private Button fOKButtonCC2EF49Button;

        /// <summary>
        /// Backing field for OKTextBlockDup1Text property
        /// </summary>
        private Text fOKTextBlockDup1Text;

        /// <summary>
        /// Backing field for TabControlec0fdTab property
        /// </summary>
        private Tab fTabControlec0fdTab;

        /// <summary>
        /// Backing field for SystemWindowsCoDup10TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup10TabItem;

        /// <summary>
        /// Backing field for GeneralTextmGenDup1Text property
        /// </summary>
        private Text fGeneralTextmGenDup1Text;

        /// <summary>
        /// Backing field for GeneralTextBlocDup1Text property
        /// </summary>
        private Text fGeneralTextBlocDup1Text;

        /// <summary>
        /// Backing field for Text933345b04e3Text property
        /// </summary>
        private Text fText933345b04e3Text;

        /// <summary>
        /// Backing field for Text786caf67344Text property
        /// </summary>
        private Text fText786caf67344Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup11TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup11TabItem;

        /// <summary>
        /// Backing field for AuthenticationTDup2Text property
        /// </summary>
        private Text fAuthenticationTDup2Text;

        /// <summary>
        /// Backing field for AuthenticationTDup3Text property
        /// </summary>
        private Text fAuthenticationTDup3Text;

        /// <summary>
        /// Backing field for Text31EC91730B9Text property
        /// </summary>
        private Text fText31EC91730B9Text;

        /// <summary>
        /// Backing field for TextA479C271445Text property
        /// </summary>
        private Text fTextA479C271445Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup12TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup12TabItem;

        /// <summary>
        /// Backing field for EmailTextmEmailText property
        /// </summary>
        private Text fEmailTextmEmailText;

        /// <summary>
        /// Backing field for EmailTextBlockText property
        /// </summary>
        private Text fEmailTextBlockText;

        /// <summary>
        /// Backing field for Text32de714a8bdText property
        /// </summary>
        private Text fText32de714a8bdText;

        /// <summary>
        /// Backing field for Text3b2a8761f4fText property
        /// </summary>
        private Text fText3b2a8761f4fText;

        /// <summary>
        /// Backing field for TextBlockDup3Text property
        /// </summary>
        private Text fTextBlockDup3Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup13TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup13TabItem;

        /// <summary>
        /// Backing field for FaxTextmFaxTabLDup1Text property
        /// </summary>
        private Text fFaxTextmFaxTabLDup1Text;

        /// <summary>
        /// Backing field for FaxTextBlockDup1Text property
        /// </summary>
        private Text fFaxTextBlockDup1Text;

        /// <summary>
        /// Backing field for TextD1ED4F16F38Text property
        /// </summary>
        private Text fTextD1ED4F16F38Text;

        /// <summary>
        /// Backing field for Text7DDE04FD251Text property
        /// </summary>
        private Text fText7DDE04FD251Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup14TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup14TabItem;

        /// <summary>
        /// Backing field for SendtoFolderTexDup2Text property
        /// </summary>
        private Text fSendtoFolderTexDup2Text;

        /// <summary>
        /// Backing field for SendtoFolderTexDup3Text property
        /// </summary>
        private Text fSendtoFolderTexDup3Text;

        /// <summary>
        /// Backing field for Text7a57f43ecb1Dup1Text property
        /// </summary>
        private Text fText7a57f43ecb1Dup1Text;

        /// <summary>
        /// Backing field for Text654b650dd19Dup1Text property
        /// </summary>
        private Text fText654b650dd19Dup1Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup15TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup15TabItem;

        /// <summary>
        /// Backing field for WorkflowsTextmWText property
        /// </summary>
        private Text fWorkflowsTextmWText;

        /// <summary>
        /// Backing field for WorkflowsTextBlText property
        /// </summary>
        private Text fWorkflowsTextBlText;

        /// <summary>
        /// Backing field for Text22D9C34E84CText property
        /// </summary>
        private Text fText22D9C34E84CText;

        /// <summary>
        /// Backing field for TextBlockDup4Text property
        /// </summary>
        private Text fTextBlockDup4Text;

        /// <summary>
        /// Backing field for TextC8D15BD39C8Text property
        /// </summary>
        private Text fTextC8D15BD39C8Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup16TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup16TabItem;

        /// <summary>
        /// Backing field for AddressingTextmDup1Text property
        /// </summary>
        private Text fAddressingTextmDup1Text;

        /// <summary>
        /// Backing field for AddressingTextBDup1Text property
        /// </summary>
        private Text fAddressingTextBDup1Text;

        /// <summary>
        /// Backing field for Text47EB5CBA4D1Text property
        /// </summary>
        private Text fText47EB5CBA4D1Text;

        /// <summary>
        /// Backing field for Text0757E148179Text property
        /// </summary>
        private Text fText0757E148179Text;

        /// <summary>
        /// Backing field for DeviceConfiguraTabItem property
        /// </summary>
        private TabItem fDeviceConfiguraTabItem;

        /// <summary>
        /// Backing field for DeviceConfiguraText property
        /// </summary>
        private Text fDeviceConfiguraText;

        /// <summary>
        /// Backing field for ServiceConfigurCustom property
        /// </summary>
        private Custom fServiceConfigurCustom;

        /// <summary>
        /// Backing field for GroupListText property
        /// </summary>
        private Text fGroupListText;

        /// <summary>
        /// Backing field for GroupListTextBlText property
        /// </summary>
        private Text fGroupListTextBlText;

        /// <summary>
        /// Backing field for DeviceGroupsText property
        /// </summary>
        private Text fDeviceGroupsText;

        /// <summary>
        /// Backing field for DeviceGroupsTexText property
        /// </summary>
        private Text fDeviceGroupsTexText;

        /// <summary>
        /// Backing field for TreeView1416BDETree property
        /// </summary>
        private Tree fTreeView1416BDETree;

        /// <summary>
        /// Backing field for AllDevicesTreeVTreeItem property
        /// </summary>
        private TreeItem fAllDevicesTreeVTreeItem;

        /// <summary>
        /// Backing field for ButtonExpanderButton property
        /// </summary>
        private Button fButtonExpanderButton;

        /// <summary>
        /// Backing field for AllDevicesTextBText property
        /// </summary>
        private Text fAllDevicesTextBText;

        /// <summary>
        /// Backing field for AddGroupButtonFButton property
        /// </summary>
        private Button fAddGroupButtonFButton;

        /// <summary>
        /// Backing field for AddGroupTextBloText property
        /// </summary>
        private Text fAddGroupTextBloText;

        /// <summary>
        /// Backing field for RemoveGroupButtButton property
        /// </summary>
        private Button fRemoveGroupButtButton;

        /// <summary>
        /// Backing field for RemoveGroupTextText property
        /// </summary>
        private Text fRemoveGroupTextText;

        /// <summary>
        /// Backing field for RenameButton261Button property
        /// </summary>
        private Button fRenameButton261Button;

        /// <summary>
        /// Backing field for RenameTextBlockText property
        /// </summary>
        private Text fRenameTextBlockText;

        /// <summary>
        /// Backing field for GridSplitterThumb property
        /// </summary>
        private Thumb fGridSplitterThumb;

        /// <summary>
        /// Backing field for DeviceListText property
        /// </summary>
        private Text fDeviceListText;

        /// <summary>
        /// Backing field for DeviceListTextBText property
        /// </summary>
        private Text fDeviceListTextBText;

        /// <summary>
        /// Backing field for ListView141cb8bDataGrid property
        /// </summary>
        private DataGrid fListView141cb8bDataGrid;

        /// <summary>
        /// Backing field for GridViewHeaderRDup1Header property
        /// </summary>
        private Header fGridViewHeaderRDup1Header;

        /// <summary>
        /// Backing field for StatusGridViewCHeaderItem property
        /// </summary>
        private HeaderItem fStatusGridViewCHeaderItem;

        /// <summary>
        /// Backing field for StatusTextBlockText property
        /// </summary>
        private Text fStatusTextBlockText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup3Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup3Thumb;

        /// <summary>
        /// Backing field for NameGridViewColHeaderItem property
        /// </summary>
        private HeaderItem fNameGridViewColHeaderItem;

        /// <summary>
        /// Backing field for NameTextBlockText property
        /// </summary>
        private Text fNameTextBlockText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup4Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup4Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup0HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup0HeaderItem;

        /// <summary>
        /// Backing field for ImageDup0Image property
        /// </summary>
        private Image fImageDup0Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup5Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup5Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup1HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup1HeaderItem;

        /// <summary>
        /// Backing field for ImageDup1Image property
        /// </summary>
        private Image fImageDup1Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup6Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup6Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup2HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup2HeaderItem;

        /// <summary>
        /// Backing field for ImageDup2Image property
        /// </summary>
        private Image fImageDup2Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup7Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup7Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup3HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup3HeaderItem;

        /// <summary>
        /// Backing field for ImageDup3Image property
        /// </summary>
        private Image fImageDup3Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup8Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup8Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup4HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup4HeaderItem;

        /// <summary>
        /// Backing field for ImageDup4Image property
        /// </summary>
        private Image fImageDup4Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup9Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup9Thumb;

        /// <summary>
        /// Backing field for GridViewColumnHDup5HeaderItem property
        /// </summary>
        private HeaderItem fGridViewColumnHDup5HeaderItem;

        /// <summary>
        /// Backing field for ImageDup5Image property
        /// </summary>
        private Image fImageDup5Image;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup10Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup10Thumb;

        /// <summary>
        /// Backing field for ModelGridViewCoHeaderItem property
        /// </summary>
        private HeaderItem fModelGridViewCoHeaderItem;

        /// <summary>
        /// Backing field for ModelTextBlockText property
        /// </summary>
        private Text fModelTextBlockText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup11Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup11Thumb;

        /// <summary>
        /// Backing field for IPAddressGridViHeaderItem property
        /// </summary>
        private HeaderItem fIPAddressGridViHeaderItem;

        /// <summary>
        /// Backing field for IPAddressTextBlText property
        /// </summary>
        private Text fIPAddressTextBlText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup12Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup12Thumb;

        /// <summary>
        /// Backing field for HostnameGridVieHeaderItem property
        /// </summary>
        private HeaderItem fHostnameGridVieHeaderItem;

        /// <summary>
        /// Backing field for HostnameTextBloText property
        /// </summary>
        private Text fHostnameTextBloText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup13Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup13Thumb;

        /// <summary>
        /// Backing field for DescriptionGridHeaderItem property
        /// </summary>
        private HeaderItem fDescriptionGridHeaderItem;

        /// <summary>
        /// Backing field for DescriptionTextText property
        /// </summary>
        private Text fDescriptionTextText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup14Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup14Thumb;

        /// <summary>
        /// Backing field for FirmwareGridVieHeaderItem property
        /// </summary>
        private HeaderItem fFirmwareGridVieHeaderItem;

        /// <summary>
        /// Backing field for FirmwareTextBloText property
        /// </summary>
        private Text fFirmwareTextBloText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup15Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup15Thumb;

        /// <summary>
        /// Backing field for bound101114135eDataItem property
        /// </summary>
        private DataItem fbound101114135eDataItem;

        /// <summary>
        /// Backing field for ContentPresenteDup0I0XCustom property
        /// </summary>
        private Custom fContentPresenteDup0I0XCustom;

        /// <summary>
        /// Backing field for Image84ACE29E0AImage property
        /// </summary>
        private Image fImage84ACE29E0AImage;

        /// <summary>
        /// Backing field for WaitSpinnerUserCustom property
        /// </summary>
        private Custom fWaitSpinnerUserCustom;

        /// <summary>
        /// Backing field for ImagemWaitSpinnImage property
        /// </summary>
        private Image fImagemWaitSpinnImage;

        /// <summary>
        /// Backing field for HPLaserJetMFPM5Dup0I0XText property
        /// </summary>
        private Text fHPLaserJetMFPM5Dup0I0XText;

        /// <summary>
        /// Backing field for ContentPresenteDup1I1XCustom property
        /// </summary>
        private Custom fContentPresenteDup1I1XCustom;

        /// <summary>
        /// Backing field for Image844100985AImage property
        /// </summary>
        private Image fImage844100985AImage;

        /// <summary>
        /// Backing field for ContentPresenteDup2I2XCustom property
        /// </summary>
        private Custom fContentPresenteDup2I2XCustom;

        /// <summary>
        /// Backing field for Image20F9A92A96Image property
        /// </summary>
        private Image fImage20F9A92A96Image;

        /// <summary>
        /// Backing field for ContentPresenteDup3I3XCustom property
        /// </summary>
        private Custom fContentPresenteDup3I3XCustom;

        /// <summary>
        /// Backing field for ImageCA1843E8BFImage property
        /// </summary>
        private Image fImageCA1843E8BFImage;

        /// <summary>
        /// Backing field for ContentPresenteDup4I4XCustom property
        /// </summary>
        private Custom fContentPresenteDup4I4XCustom;

        /// <summary>
        /// Backing field for ImageE24499D7C0Image property
        /// </summary>
        private Image fImageE24499D7C0Image;

        /// <summary>
        /// Backing field for ContentPresenteDup5I5XCustom property
        /// </summary>
        private Custom fContentPresenteDup5I5XCustom;

        /// <summary>
        /// Backing field for Image86A371F7F4Image property
        /// </summary>
        private Image fImage86A371F7F4Image;

        /// <summary>
        /// Backing field for ContentPresenteDup6I6XCustom property
        /// </summary>
        private Custom fContentPresenteDup6I6XCustom;

        /// <summary>
        /// Backing field for Image1D2DC29B85Image property
        /// </summary>
        private Image fImage1D2DC29B85Image;

        /// <summary>
        /// Backing field for HPLaserJetMFPM5Dup1I1XText property
        /// </summary>
        private Text fHPLaserJetMFPM5Dup1I1XText;

        /// <summary>
        /// Backing field for A101114135TextBText property
        /// </summary>
        private Text fA101114135TextBText;

        /// <summary>
        /// Backing field for TextBlockDup5Text property
        /// </summary>
        private Text fTextBlockDup5Text;

        /// <summary>
        /// Backing field for HPLaserJetMFPM5Dup2I2XText property
        /// </summary>
        private Text fHPLaserJetMFPM5Dup2I2XText;

        /// <summary>
        /// Backing field for FutureSmart4402Text property
        /// </summary>
        private Text fFutureSmart4402Text;

        /// <summary>
        /// Backing field for AddDeviceButtonButton property
        /// </summary>
        private Button fAddDeviceButtonButton;

        /// <summary>
        /// Backing field for AddDeviceTextBlText property
        /// </summary>
        private Text fAddDeviceTextBlText;

        /// <summary>
        /// Backing field for ExportButtonef5Button property
        /// </summary>
        private Button fExportButtonef5Button;

        /// <summary>
        /// Backing field for ExportTextBlockText property
        /// </summary>
        private Text fExportTextBlockText;

        /// <summary>
        /// Backing field for RemoveDeviceButButton property
        /// </summary>
        private Button fRemoveDeviceButButton;

        /// <summary>
        /// Backing field for RemoveDeviceTexText property
        /// </summary>
        private Text fRemoveDeviceTexText;

        /// <summary>
        /// Backing field for ImportButtona69Button property
        /// </summary>
        private Button fImportButtona69Button;

        /// <summary>
        /// Backing field for ImportTextBlockText property
        /// </summary>
        private Text fImportTextBlockText;

        /// <summary>
        /// Backing field for CreateTemplateBButton property
        /// </summary>
        private Button fCreateTemplateBButton;

        /// <summary>
        /// Backing field for CreateTemplateTText property
        /// </summary>
        private Text fCreateTemplateTText;

        /// <summary>
        /// Backing field for DeviceSignInButButton property
        /// </summary>
        private Button fDeviceSignInButButton;

        /// <summary>
        /// Backing field for DeviceSignInTexText property
        /// </summary>
        private Text fDeviceSignInTexText;

        /// <summary>
        /// Backing field for TotalDevicesText property
        /// </summary>
        private Text fTotalDevicesText;

        /// <summary>
        /// Backing field for TotalDevicesTexText property
        /// </summary>
        private Text fTotalDevicesTexText;

        /// <summary>
        /// Backing field for A1Text82f844376Text property
        /// </summary>
        private Text fA1Text82f844376Text;

        /// <summary>
        /// Backing field for A1TextBlockText property
        /// </summary>
        private Text fA1TextBlockText;

        /// <summary>
        /// Backing field for ConfigureDeviceButton property
        /// </summary>
        private Button fConfigureDeviceButton;

        /// <summary>
        /// Backing field for ConfigureDeviceText property
        /// </summary>
        private Text fConfigureDeviceText;

        /// <summary>
        /// Backing field for TemplateConfiguTabItem property
        /// </summary>
        private TabItem fTemplateConfiguTabItem;

        /// <summary>
        /// Backing field for TemplateConfiguText property
        /// </summary>
        private Text fTemplateConfiguText;

        /// <summary>
        /// Backing field for LogTabItem9b4f3TabItem property
        /// </summary>
        private TabItem fLogTabItem9b4f3TabItem;

        /// <summary>
        /// Backing field for LogTextBlockDup1Text property
        /// </summary>
        private Text fLogTextBlockDup1Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup17TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup17TabItem;

        /// <summary>
        /// Backing field for SecurityTextmSeText property
        /// </summary>
        private Text fSecurityTextmSeText;

        /// <summary>
        /// Backing field for SecurityTextBloText property
        /// </summary>
        private Text fSecurityTextBloText;

        /// <summary>
        /// Backing field for Text8A7A84DB894Text property
        /// </summary>
        private Text fText8A7A84DB894Text;

        /// <summary>
        /// Backing field for Text16F78FB18FFText property
        /// </summary>
        private Text fText16F78FB18FFText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup18TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup18TabItem;

        /// <summary>
        /// Backing field for AnalyticsTextmAText property
        /// </summary>
        private Text fAnalyticsTextmAText;

        /// <summary>
        /// Backing field for AnalyticsTextBlText property
        /// </summary>
        private Text fAnalyticsTextBlText;

        /// <summary>
        /// Backing field for AboutTabItemf45TabItem property
        /// </summary>
        private TabItem fAboutTabItemf45TabItem;

        /// <summary>
        /// Backing field for AboutTextBlockText property
        /// </summary>
        private Text fAboutTextBlockText;

        /// <summary>
        /// Initializes a new instance of the <see cref="DeviceSendToFolder"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public DeviceSendToFolder(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DeviceSendToFolder"/> class using the default UIAFramework.
        /// </summary>
        public DeviceSendToFolder()
        {
            Desktop = new Desktop();
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Window HPDigitalSendinWindow
        {
            get
            {
                if (null == fHPDigitalSendinWindow)
                {
                    fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                    fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Digital Sending Software Configuration (Server IP Address: 10.11.15.148)");
                }

                return fHPDigitalSendinWindow;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Window ConfigureDeviceWindow
        {
            get
            {
                if (null == fConfigureDeviceWindow)
                {
                    fConfigureDeviceWindow = new Window("ConfigureDeviceWindow", HPDigitalSendinWindow);
                    fConfigureDeviceWindow.UIMap.Scope = UIASeachScope.Children;
                    fConfigureDeviceWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                    fConfigureDeviceWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1fbfa621-ccac-42b3-8f91-9f2632ec1d89");
                    
                }

                return fConfigureDeviceWindow;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Window PopupWindow
        {
            get
            {
                if (null == fPopupWindow)
                {
                    fPopupWindow = new Window("PopupWindow", ConfigureDeviceWindow);
                    fPopupWindow.UIMap.Scope = UIASeachScope.Children;
                    fPopupWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Popup");
                }

                return fPopupWindow;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerDroPane
        {
            get
            {
                if (null == fScrollViewerDroPane)
                {
                    fScrollViewerDroPane = new Pane("ScrollViewerDroPane", PopupWindow);
                    fScrollViewerDroPane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerDroPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerDroPane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDownScrollViewer");
                }

                return fScrollViewerDroPane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem DirectlyfromtheDup0ListItem
        {
            get
            {
                if (null == fDirectlyfromtheDup0ListItem)
                {
                    fDirectlyfromtheDup0ListItem = new ListItem("DirectlyfromtheDup0ListItem", ScrollViewerDroPane);
                    fDirectlyfromtheDup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fDirectlyfromtheDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fDirectlyfromtheDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Directly from the device");
                }

                return fDirectlyfromtheDup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DirectlyfromtheDup0Text
        {
            get
            {
                if (null == fDirectlyfromtheDup0Text)
                {
                    fDirectlyfromtheDup0Text = new Text("DirectlyfromtheDup0Text", DirectlyfromtheDup0ListItem);
                    fDirectlyfromtheDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDirectlyfromtheDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDirectlyfromtheDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Directly from the device");
                }

                return fDirectlyfromtheDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem viatheDigitalSeDup0ListItem
        {
            get
            {
                if (null == fviatheDigitalSeDup0ListItem)
                {
                    fviatheDigitalSeDup0ListItem = new ListItem("viatheDigitalSeDup0ListItem", ScrollViewerDroPane);
                    fviatheDigitalSeDup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fviatheDigitalSeDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fviatheDigitalSeDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"via the Digital Sending Service");
                }

                return fviatheDigitalSeDup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text viatheDigitalSeDup0Text
        {
            get
            {
                if (null == fviatheDigitalSeDup0Text)
                {
                    fviatheDigitalSeDup0Text = new Text("viatheDigitalSeDup0Text", viatheDigitalSeDup0ListItem);
                    fviatheDigitalSeDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fviatheDigitalSeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fviatheDigitalSeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"via the Digital Sending Service");
                }

                return fviatheDigitalSeDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup0ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup0ScrollBar)
                {
                    fScrollBarVerticDup0ScrollBar = new ScrollBar("ScrollBarVerticDup0ScrollBar", ScrollViewerDroPane);
                    fScrollBarVerticDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup0ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup0ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup0ScrollBar)
                {
                    fScrollBarHorizoDup0ScrollBar = new ScrollBar("ScrollBarHorizoDup0ScrollBar", ScrollViewerDroPane);
                    fScrollBarHorizoDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup0ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TitleBar ConfigureDeviceTitleBar
        {
            get
            {
                if (null == fConfigureDeviceTitleBar)
                {
                    fConfigureDeviceTitleBar = new TitleBar("ConfigureDeviceTitleBar", ConfigureDeviceWindow);
                    fConfigureDeviceTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fConfigureDeviceTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                }

                return fConfigureDeviceTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuBar SystemMenuBarSyDup0MenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyDup0MenuBar)
                {
                    fSystemMenuBarSyDup0MenuBar = new MenuBar("SystemMenuBarSyDup0MenuBar", ConfigureDeviceTitleBar);
                    fSystemMenuBarSyDup0MenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                }

                return fSystemMenuBarSyDup0MenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuItem SystemItem1Dup0MenuItem
        {
            get
            {
                if (null == fSystemItem1Dup0MenuItem)
                {
                    fSystemItem1Dup0MenuItem = new MenuItem("SystemItem1Dup0MenuItem", SystemMenuBarSyDup0MenuBar);
                    fSystemItem1Dup0MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                }

                return fSystemItem1Dup0MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button MinimizeMinimizDup0Button
        {
            get
            {
                if (null == fMinimizeMinimizDup0Button)
                {
                    fMinimizeMinimizDup0Button = new Button("MinimizeMinimizDup0Button", ConfigureDeviceTitleBar);
                    fMinimizeMinimizDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                    fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                }

                return fMinimizeMinimizDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button MaximizeMaximizDup0Button
        {
            get
            {
                if (null == fMaximizeMaximizDup0Button)
                {
                    fMaximizeMaximizDup0Button = new Button("MaximizeMaximizDup0Button", ConfigureDeviceTitleBar);
                    fMaximizeMaximizDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                    fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                }

                return fMaximizeMaximizDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CloseCloseDup0Button
        {
            get
            {
                if (null == fCloseCloseDup0Button)
                {
                    fCloseCloseDup0Button = new Button("CloseCloseDup0Button", ConfigureDeviceTitleBar);
                    fCloseCloseDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                }

                return fCloseCloseDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button HelpButtonfb686Button
        {
            get
            {
                if (null == fHelpButtonfb686Button)
                {
                    fHelpButtonfb686Button = new Button("HelpButtonfb686Button", ConfigureDeviceWindow);
                    fHelpButtonfb686Button.UIMap.Scope = UIASeachScope.Children;
                    fHelpButtonfb686Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fHelpButtonfb686Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"fb68687e-7025-47cb-b1b1-c3df439a2773");
                    fHelpButtonfb686Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpButtonfb686Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text HelpTextBlockDup0Text
        {
            get
            {
                if (null == fHelpTextBlockDup0Text)
                {
                    fHelpTextBlockDup0Text = new Text("HelpTextBlockDup0Text", HelpButtonfb686Button);
                    fHelpTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fHelpTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHelpTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ApplyButton46D6Button
        {
            get
            {
                if (null == fApplyButton46D6Button)
                {
                    fApplyButton46D6Button = new Button("ApplyButton46D6Button", ConfigureDeviceWindow);
                    fApplyButton46D6Button.UIMap.Scope = UIASeachScope.Children;
                    fApplyButton46D6Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fApplyButton46D6Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"46D669A0-F3DB-49c5-B67D-DAE887281B4E");
                    fApplyButton46D6Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyButton46D6Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ApplyTextBlockDup0Text
        {
            get
            {
                if (null == fApplyTextBlockDup0Text)
                {
                    fApplyTextBlockDup0Text = new Text("ApplyTextBlockDup0Text", ApplyButton46D6Button);
                    fApplyTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fApplyTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fApplyTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CancelButtoned9Button
        {
            get
            {
                if (null == fCancelButtoned9Button)
                {
                    fCancelButtoned9Button = new Button("CancelButtoned9Button", ConfigureDeviceWindow);
                    fCancelButtoned9Button.UIMap.Scope = UIASeachScope.Children;
                    fCancelButtoned9Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButtoned9Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ed9b74ee-24a6-4138-ae44-bdb7b44cffcb");
                    fCancelButtoned9Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelButtoned9Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CancelTextBlockDup0Text
        {
            get
            {
                if (null == fCancelTextBlockDup0Text)
                {
                    fCancelTextBlockDup0Text = new Text("CancelTextBlockDup0Text", CancelButtoned9Button);
                    fCancelTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fCancelTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCancelTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button OKButton8c9182aButton
        {
            get
            {
                if (null == fOKButton8c9182aButton)
                {
                    fOKButton8c9182aButton = new Button("OKButton8c9182aButton", ConfigureDeviceWindow);
                    fOKButton8c9182aButton.UIMap.Scope = UIASeachScope.Children;
                    fOKButton8c9182aButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButton8c9182aButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8c9182a5-6104-46bc-b6ac-6bc57ec6ea81");
                    fOKButton8c9182aButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKButton8c9182aButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OKTextBlockDup0Text
        {
            get
            {
                if (null == fOKTextBlockDup0Text)
                {
                    fOKTextBlockDup0Text = new Text("OKTextBlockDup0Text", OKButton8c9182aButton);
                    fOKTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Tab TabControl2111BTab
        {
            get
            {
                if (null == fTabControl2111BTab)
                {
                    fTabControl2111BTab = new Tab("TabControl2111BTab", ConfigureDeviceWindow);
                    fTabControl2111BTab.UIMap.Scope = UIASeachScope.Children;
                    fTabControl2111BTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                    fTabControl2111BTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2111B07F-601C-4442-9A43-CAC4268C264A");
                }

                return fTabControl2111BTab;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup0TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup0TabItem)
                {
                    fSystemWindowsCoDup0TabItem = new TabItem("SystemWindowsCoDup0TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup0TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e0422d26-5fd8-44bc-b019-886f5e135c97");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup0TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GeneralTextmGenDup0Text
        {
            get
            {
                if (null == fGeneralTextmGenDup0Text)
                {
                    fGeneralTextmGenDup0Text = new Text("GeneralTextmGenDup0Text", SystemWindowsCoDup0TabItem);
                    fGeneralTextmGenDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextmGenDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGeneralTextmGenDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                    fGeneralTextmGenDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextmGenDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GeneralTextBlocDup0Text
        {
            get
            {
                if (null == fGeneralTextBlocDup0Text)
                {
                    fGeneralTextBlocDup0Text = new Text("GeneralTextBlocDup0Text", GeneralTextmGenDup0Text);
                    fGeneralTextBlocDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextBlocDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGeneralTextBlocDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextBlocDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text9127A6692D0Text
        {
            get
            {
                if (null == fText9127A6692D0Text)
                {
                    fText9127A6692D0Text = new Text("Text9127A6692D0Text", SystemWindowsCoDup0TabItem);
                    fText9127A6692D0Text.UIMap.Scope = UIASeachScope.Children;
                    fText9127A6692D0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText9127A6692D0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9127A669-2D02-477d-B2B0-818B59F1EC24");
                    fText9127A6692D0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText9127A6692D0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ProgressBar ProgressBar836eProgressBar
        {
            get
            {
                if (null == fProgressBar836eProgressBar)
                {
                    fProgressBar836eProgressBar = new ProgressBar("ProgressBar836eProgressBar", SystemWindowsCoDup0TabItem);
                    fProgressBar836eProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBar836eProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBar836eProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"836e39c4-f336-411d-b4bf-7ce21bd659a1");
                }

                return fProgressBar836eProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup1TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup1TabItem)
                {
                    fSystemWindowsCoDup1TabItem = new TabItem("SystemWindowsCoDup1TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup1TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1cc57c14-8994-43b6-9870-5199757f8fc4");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup1TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AuthenticationTDup0Text
        {
            get
            {
                if (null == fAuthenticationTDup0Text)
                {
                    fAuthenticationTDup0Text = new Text("AuthenticationTDup0Text", SystemWindowsCoDup1TabItem);
                    fAuthenticationTDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AuthenticationTDup1Text
        {
            get
            {
                if (null == fAuthenticationTDup1Text)
                {
                    fAuthenticationTDup1Text = new Text("AuthenticationTDup1Text", AuthenticationTDup0Text);
                    fAuthenticationTDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text2087FBF2200Text
        {
            get
            {
                if (null == fText2087FBF2200Text)
                {
                    fText2087FBF2200Text = new Text("Text2087FBF2200Text", SystemWindowsCoDup1TabItem);
                    fText2087FBF2200Text.UIMap.Scope = UIASeachScope.Children;
                    fText2087FBF2200Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText2087FBF2200Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2087FBF2-200E-4f1e-9B53-80F1D9CF632A");
                    fText2087FBF2200Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText2087FBF2200Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text3C0A7A0B490Text
        {
            get
            {
                if (null == fText3C0A7A0B490Text)
                {
                    fText3C0A7A0B490Text = new Text("Text3C0A7A0B490Text", SystemWindowsCoDup1TabItem);
                    fText3C0A7A0B490Text.UIMap.Scope = UIASeachScope.Children;
                    fText3C0A7A0B490Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText3C0A7A0B490Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3C0A7A0B-490D-4539-B6B3-66DD241D05EE");
                    fText3C0A7A0B490Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText3C0A7A0B490Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ProgressBar ProgressBar992dProgressBar
        {
            get
            {
                if (null == fProgressBar992dProgressBar)
                {
                    fProgressBar992dProgressBar = new ProgressBar("ProgressBar992dProgressBar", SystemWindowsCoDup1TabItem);
                    fProgressBar992dProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBar992dProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBar992dProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"992d5944-26af-4308-aa22-d41cb035a4c7");
                }

                return fProgressBar992dProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup2TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup2TabItem)
                {
                    fSystemWindowsCoDup2TabItem = new TabItem("SystemWindowsCoDup2TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup2TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6D0F0F02-8197-4a09-BEE5-BDF68AFFBB76");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup2TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoEmailTextDup0Text
        {
            get
            {
                if (null == fSendtoEmailTextDup0Text)
                {
                    fSendtoEmailTextDup0Text = new Text("SendtoEmailTextDup0Text", SystemWindowsCoDup2TabItem);
                    fSendtoEmailTextDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoEmailTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoEmailTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                    fSendtoEmailTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to E-mail");
                }

                return fSendtoEmailTextDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoEmailTextDup1Text
        {
            get
            {
                if (null == fSendtoEmailTextDup1Text)
                {
                    fSendtoEmailTextDup1Text = new Text("SendtoEmailTextDup1Text", SendtoEmailTextDup0Text);
                    fSendtoEmailTextDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoEmailTextDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoEmailTextDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to E-mail");
                }

                return fSendtoEmailTextDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text265ea8f2a5fText
        {
            get
            {
                if (null == fText265ea8f2a5fText)
                {
                    fText265ea8f2a5fText = new Text("Text265ea8f2a5fText", SystemWindowsCoDup2TabItem);
                    fText265ea8f2a5fText.UIMap.Scope = UIASeachScope.Children;
                    fText265ea8f2a5fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText265ea8f2a5fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"265ea8f2-a5f1-4612-b9c9-04b14bb686b6");
                    fText265ea8f2a5fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText265ea8f2a5fText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text1a251d5f398Text
        {
            get
            {
                if (null == fText1a251d5f398Text)
                {
                    fText1a251d5f398Text = new Text("Text1a251d5f398Text", SystemWindowsCoDup2TabItem);
                    fText1a251d5f398Text.UIMap.Scope = UIASeachScope.Children;
                    fText1a251d5f398Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText1a251d5f398Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1a251d5f-3981-419a-b1b8-472df8e4b6aa");
                    fText1a251d5f398Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText1a251d5f398Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ProgressBar ProgressBara2e8ProgressBar
        {
            get
            {
                if (null == fProgressBara2e8ProgressBar)
                {
                    fProgressBara2e8ProgressBar = new ProgressBar("ProgressBara2e8ProgressBar", SystemWindowsCoDup2TabItem);
                    fProgressBara2e8ProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBara2e8ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBara2e8ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a2e8e90d-d0e0-4939-a375-588d9cf351be");
                }

                return fProgressBara2e8ProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup3TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup3TabItem)
                {
                    fSystemWindowsCoDup3TabItem = new TabItem("SystemWindowsCoDup3TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"59f7cef3-80db-4e16-8c7d-7214d65c4ad6");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FaxTextmFaxTabLDup0Text
        {
            get
            {
                if (null == fFaxTextmFaxTabLDup0Text)
                {
                    fFaxTextmFaxTabLDup0Text = new Text("FaxTextmFaxTabLDup0Text", SystemWindowsCoDup3TabItem);
                    fFaxTextmFaxTabLDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextmFaxTabLDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFaxTextmFaxTabLDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                    fFaxTextmFaxTabLDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextmFaxTabLDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FaxTextBlockDup0Text
        {
            get
            {
                if (null == fFaxTextBlockDup0Text)
                {
                    fFaxTextBlockDup0Text = new Text("FaxTextBlockDup0Text", FaxTextmFaxTabLDup0Text);
                    fFaxTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFaxTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text105C9A93254Text
        {
            get
            {
                if (null == fText105C9A93254Text)
                {
                    fText105C9A93254Text = new Text("Text105C9A93254Text", SystemWindowsCoDup3TabItem);
                    fText105C9A93254Text.UIMap.Scope = UIASeachScope.Children;
                    fText105C9A93254Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText105C9A93254Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"105C9A93-254E-4da7-8BA1-3CC66B8EAD15");
                    fText105C9A93254Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText105C9A93254Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text25DD30D682EText
        {
            get
            {
                if (null == fText25DD30D682EText)
                {
                    fText25DD30D682EText = new Text("Text25DD30D682EText", SystemWindowsCoDup3TabItem);
                    fText25DD30D682EText.UIMap.Scope = UIASeachScope.Children;
                    fText25DD30D682EText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText25DD30D682EText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"25DD30D6-82E0-4bf3-9D85-D9C3EF71087A");
                    fText25DD30D682EText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText25DD30D682EText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ProgressBar ProgressBare99cProgressBar
        {
            get
            {
                if (null == fProgressBare99cProgressBar)
                {
                    fProgressBare99cProgressBar = new ProgressBar("ProgressBare99cProgressBar", SystemWindowsCoDup3TabItem);
                    fProgressBare99cProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBare99cProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBare99cProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e99c5788-f8b1-43bb-849f-3ab550aa4b30");
                }

                return fProgressBare99cProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup4TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup4TabItem)
                {
                    fSystemWindowsCoDup4TabItem = new TabItem("SystemWindowsCoDup4TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup4TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4fc77c37-e986-429e-b033-e2e5fb4a85e5");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup4TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoFolderTexDup0Text
        {
            get
            {
                if (null == fSendtoFolderTexDup0Text)
                {
                    fSendtoFolderTexDup0Text = new Text("SendtoFolderTexDup0Text", SystemWindowsCoDup4TabItem);
                    fSendtoFolderTexDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoFolderTexDup1Text
        {
            get
            {
                if (null == fSendtoFolderTexDup1Text)
                {
                    fSendtoFolderTexDup1Text = new Text("SendtoFolderTexDup1Text", SendtoFolderTexDup0Text);
                    fSendtoFolderTexDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Texta7a758d4d75Text
        {
            get
            {
                if (null == fTexta7a758d4d75Text)
                {
                    fTexta7a758d4d75Text = new Text("Texta7a758d4d75Text", SystemWindowsCoDup4TabItem);
                    fTexta7a758d4d75Text.UIMap.Scope = UIASeachScope.Children;
                    fTexta7a758d4d75Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTexta7a758d4d75Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a7a758d4-d759-4b19-8ea7-353731d0c2f4");
                    fTexta7a758d4d75Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTexta7a758d4d75Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextBlockDup0Text
        {
            get
            {
                if (null == fTextBlockDup0Text)
                {
                    fTextBlockDup0Text = new Text("TextBlockDup0Text", Texta7a758d4d75Text);
                    fTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Texte95b3491f6bText
        {
            get
            {
                if (null == fTexte95b3491f6bText)
                {
                    fTexte95b3491f6bText = new Text("Texte95b3491f6bText", SystemWindowsCoDup4TabItem);
                    fTexte95b3491f6bText.UIMap.Scope = UIASeachScope.Children;
                    fTexte95b3491f6bText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTexte95b3491f6bText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e95b3491-f6b7-4a10-92d2-862dc0b4b188");
                    fTexte95b3491f6bText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTexte95b3491f6bText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ProgressBar ProgressBar9a14ProgressBar
        {
            get
            {
                if (null == fProgressBar9a14ProgressBar)
                {
                    fProgressBar9a14ProgressBar = new ProgressBar("ProgressBar9a14ProgressBar", SystemWindowsCoDup4TabItem);
                    fProgressBar9a14ProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBar9a14ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBar9a14ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9a144af2-3c52-4a7b-8336-ba2eef27f32c");
                }

                return fProgressBar9a14ProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom TabStatusUserCoCustom
        {
            get
            {
                if (null == fTabStatusUserCoCustom)
                {
                    fTabStatusUserCoCustom = new Custom("TabStatusUserCoCustom", SystemWindowsCoDup4TabItem);
                    fTabStatusUserCoCustom.UIMap.Scope = UIASeachScope.Children;
                    fTabStatusUserCoCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabStatusUserControl");
                    fTabStatusUserCoCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabStatusUserControl");
                }

                return fTabStatusUserCoCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ErrorTextBlockText
        {
            get
            {
                if (null == fEnabledTextBlocText)
                {
                    fEnabledTextBlocText = new Text("ErrorTextBlockText", TabStatusUserCoCustom);
                    fEnabledTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fEnabledTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEnabledTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"570af218-7199-4b1c-9820-168d476e74ae");
                }

                return fEnabledTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom MfpConfiguratioCustom
        {
            get
            {
                if (null == fMfpConfiguratioCustom)
                {
                    fMfpConfiguratioCustom = new Custom("MfpConfiguratioCustom", SystemWindowsCoDup4TabItem);
                    fMfpConfiguratioCustom.UIMap.Scope = UIASeachScope.Children;
                    fMfpConfiguratioCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MfpConfigurationFolderTab");
                    fMfpConfiguratioCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mMfpConfigurationFolderTab");
                }

                return fMfpConfiguratioCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewer296Pane
        {
            get
            {
                if (null == fScrollViewer296Pane)
                {
                    fScrollViewer296Pane = new Pane("ScrollViewer296Pane", MfpConfiguratioCustom);
                    fScrollViewer296Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewer296Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewer296Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"296808a6-67a7-4f4f-9dea-09e5e38941e6");
                }

                return fScrollViewer296Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ErrorConflictUsCustom
        {
            get
            {
                if (null == fErrorConflictUsCustom)
                {
                    fErrorConflictUsCustom = new Custom("ErrorConflictUsCustom", ScrollViewer296Pane);
                    fErrorConflictUsCustom.UIMap.Scope = UIASeachScope.Children;
                    fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ErrorConflictUserControl");
                    fErrorConflictUsCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mErrorConflictUserControl");
                }

                return fErrorConflictUsCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox EnableSavetoNetCheckBox
        {
            get
            {
                if (null == fEnableSavetoNetCheckBox)
                {
                    fEnableSavetoNetCheckBox = new CheckBox("EnableSavetoNetCheckBox", ScrollViewer296Pane);
                    fEnableSavetoNetCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEnableSavetoNetCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fEnableSavetoNetCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ee806a4e-96ba-4cc2-b5c9-db3dd651a133");
                    fEnableSavetoNetCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Save to Network Folder");
                }

                return fEnableSavetoNetCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EnableSavetoNetText
        {
            get
            {
                if (null == fEnableSavetoNetText)
                {
                    fEnableSavetoNetText = new Text("EnableSavetoNetText", EnableSavetoNetCheckBox);
                    fEnableSavetoNetText.UIMap.Scope = UIASeachScope.Children;
                    fEnableSavetoNetText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEnableSavetoNetText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Save to Network Folder");
                }

                return fEnableSavetoNetText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendFolderText4Text
        {
            get
            {
                if (null == fSendFolderText4Text)
                {
                    fSendFolderText4Text = new Text("SendFolderText4Text", ScrollViewer296Pane);
                    fSendFolderText4Text.UIMap.Scope = UIASeachScope.Children;
                    fSendFolderText4Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendFolderText4Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"44ba8a48-5129-4fb6-b439-969b0c6afc82");
                    fSendFolderText4Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send Folder");
                }

                return fSendFolderText4Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendFolderTextBText
        {
            get
            {
                if (null == fSendFolderTextBText)
                {
                    fSendFolderTextBText = new Text("SendFolderTextBText", SendFolderText4Text);
                    fSendFolderTextBText.UIMap.Scope = UIASeachScope.Children;
                    fSendFolderTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendFolderTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send Folder");
                }

                return fSendFolderTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox4A9B6D9ComboBox
        {
            get
            {
                if (null == fComboBox4A9B6D9ComboBox)
                {
                    fComboBox4A9B6D9ComboBox = new ComboBox("ComboBox4A9B6D9ComboBox", ScrollViewer296Pane);
                    fComboBox4A9B6D9ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox4A9B6D9ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox4A9B6D9ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4A9B6D96-36E2-4d0e-870A-DCAD67939AEA");
                }

                return fComboBox4A9B6D9ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem DirectlyfromtheDup1ListItem
        {
            get
            {
                if (null == fDirectlyfromtheDup1ListItem)
                {
                    fDirectlyfromtheDup1ListItem = new ListItem("DirectlyfromtheDup1ListItem", ComboBox4A9B6D9ComboBox);
                    fDirectlyfromtheDup1ListItem.UIMap.Scope = UIASeachScope.Children;
                    fDirectlyfromtheDup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fDirectlyfromtheDup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Directly from the device");
                }

                return fDirectlyfromtheDup1ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DirectlyfromtheDup1Text
        {
            get
            {
                if (null == fDirectlyfromtheDup1Text)
                {
                    fDirectlyfromtheDup1Text = new Text("DirectlyfromtheDup1Text", DirectlyfromtheDup1ListItem);
                    fDirectlyfromtheDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDirectlyfromtheDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDirectlyfromtheDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Directly from the device");
                }

                return fDirectlyfromtheDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem viatheDigitalSeDup1ListItem
        {
            get
            {
                if (null == fviatheDigitalSeDup1ListItem)
                {
                    fviatheDigitalSeDup1ListItem = new ListItem("viatheDigitalSeDup1ListItem", ComboBox4A9B6D9ComboBox);
                    fviatheDigitalSeDup1ListItem.UIMap.Scope = UIASeachScope.Children;
                    fviatheDigitalSeDup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBoxItem");
                    fviatheDigitalSeDup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"via the Digital Sending Service");
                }

                return fviatheDigitalSeDup1ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text viatheDigitalSeDup1Text
        {
            get
            {
                if (null == fviatheDigitalSeDup1Text)
                {
                    fviatheDigitalSeDup1Text = new Text("viatheDigitalSeDup1Text", viatheDigitalSeDup1ListItem);
                    fviatheDigitalSeDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fviatheDigitalSeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fviatheDigitalSeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"via the Digital Sending Service");
                }

                return fviatheDigitalSeDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group QuickSetsGroupBGroup
        {
            get
            {
                if (null == fQuickSetsGroupBGroup)
                {
                    fQuickSetsGroupBGroup = new Group("QuickSetsGroupBGroup", ScrollViewer296Pane);
                    fQuickSetsGroupBGroup.UIMap.Scope = UIASeachScope.Children;
                    fQuickSetsGroupBGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fQuickSetsGroupBGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a18ca0ac-04ab-4d24-8bb5-c504741219bb");
                    fQuickSetsGroupBGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Sets");
                }

                return fQuickSetsGroupBGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text QuickSetsTextBlText
        {
            get
            {
                if (null == fQuickSetsTextBlText)
                {
                    fQuickSetsTextBlText = new Text("QuickSetsTextBlText", QuickSetsGroupBGroup);
                    fQuickSetsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fQuickSetsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fQuickSetsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Sets");
                }

                return fQuickSetsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public DataGrid ListView851eb6cDataGrid
        {
            get
            {
                if (null == fListView851eb6cDataGrid)
                {
                    fListView851eb6cDataGrid = new DataGrid("ListView851eb6cDataGrid", QuickSetsGroupBGroup);
                    fListView851eb6cDataGrid.UIMap.Scope = UIASeachScope.Children;
                    fListView851eb6cDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListView");
                    fListView851eb6cDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"851eb6c1-644d-4405-be00-de0b61508f93");
                }

                return fListView851eb6cDataGrid;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Header GridViewHeaderRDup0Header
        {
            get
            {
                if (null == fGridViewHeaderRDup0Header)
                {
                    fGridViewHeaderRDup0Header = new Header("GridViewHeaderRDup0Header", ListView851eb6cDataGrid);
                    fGridViewHeaderRDup0Header.UIMap.Scope = UIASeachScope.Children;
                    fGridViewHeaderRDup0Header.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewHeaderRowPresenter");
                }

                return fGridViewHeaderRDup0Header;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem QuickSetTitleGrHeaderItem
        {
            get
            {
                if (null == fQuickSetTitleGrHeaderItem)
                {
                    fQuickSetTitleGrHeaderItem = new HeaderItem("QuickSetTitleGrHeaderItem", GridViewHeaderRDup0Header);
                    fQuickSetTitleGrHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fQuickSetTitleGrHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fQuickSetTitleGrHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Set Title");
                }

                return fQuickSetTitleGrHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text QuickSetTitleText
        {
            get
            {
                if (null == fQuickSetTitleText)
                {
                    fQuickSetTitleText = new Text("QuickSetTitleText", QuickSetTitleGrHeaderItem);
                    fQuickSetTitleText.UIMap.Scope = UIASeachScope.Children;
                    fQuickSetTitleText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fQuickSetTitleText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Set Title");
                }

                return fQuickSetTitleText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup0Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup0Thumb)
                {
                    fThumbPARTHeadeDup0Thumb = new Thumb("ThumbPARTHeadeDup0Thumb", QuickSetTitleGrHeaderItem);
                    fThumbPARTHeadeDup0Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup0Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem QuickSetDescripHeaderItem
        {
            get
            {
                if (null == fQuickSetDescripHeaderItem)
                {
                    fQuickSetDescripHeaderItem = new HeaderItem("QuickSetDescripHeaderItem", GridViewHeaderRDup0Header);
                    fQuickSetDescripHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fQuickSetDescripHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fQuickSetDescripHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Set Description");
                }

                return fQuickSetDescripHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text QuickSetDescripText
        {
            get
            {
                if (null == fQuickSetDescripText)
                {
                    fQuickSetDescripText = new Text("QuickSetDescripText", QuickSetDescripHeaderItem);
                    fQuickSetDescripText.UIMap.Scope = UIASeachScope.Children;
                    fQuickSetDescripText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fQuickSetDescripText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Quick Set Description");
                }

                return fQuickSetDescripText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup1Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup1Thumb)
                {
                    fThumbPARTHeadeDup1Thumb = new Thumb("ThumbPARTHeadeDup1Thumb", QuickSetDescripHeaderItem);
                    fThumbPARTHeadeDup1Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup1Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem ButtonLocationGHeaderItem
        {
            get
            {
                if (null == fButtonLocationGHeaderItem)
                {
                    fButtonLocationGHeaderItem = new HeaderItem("ButtonLocationGHeaderItem", GridViewHeaderRDup0Header);
                    fButtonLocationGHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fButtonLocationGHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fButtonLocationGHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Button Location");
                }

                return fButtonLocationGHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ButtonLocationText
        {
            get
            {
                if (null == fButtonLocationText)
                {
                    fButtonLocationText = new Text("ButtonLocationText", ButtonLocationGHeaderItem);
                    fButtonLocationText.UIMap.Scope = UIASeachScope.Children;
                    fButtonLocationText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fButtonLocationText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Button Location");
                }

                return fButtonLocationText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup2Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup2Thumb)
                {
                    fThumbPARTHeadeDup2Thumb = new Thumb("ThumbPARTHeadeDup2Thumb", ButtonLocationGHeaderItem);
                    fThumbPARTHeadeDup2Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup2Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button AddButton144e03Button
        {
            get
            {
                if (null == fAddButton144e03Button)
                {
                    fAddButton144e03Button = new Button("AddButton144e03Button", QuickSetsGroupBGroup);
                    fAddButton144e03Button.UIMap.Scope = UIASeachScope.Children;
                    fAddButton144e03Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddButton144e03Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"144e0328-3e1d-4121-9e66-331a90600a5b");
                    fAddButton144e03Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add...");
                }

                return fAddButton144e03Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddTextBlockText
        {
            get
            {
                if (null == fAddTextBlockText)
                {
                    fAddTextBlockText = new Text("AddTextBlockText", AddButton144e03Button);
                    fAddTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fAddTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add...");
                }

                return fAddTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button EditButtonf860aButton
        {
            get
            {
                if (null == fEditButtonf860aButton)
                {
                    fEditButtonf860aButton = new Button("EditButtonf860aButton", QuickSetsGroupBGroup);
                    fEditButtonf860aButton.UIMap.Scope = UIASeachScope.Children;
                    fEditButtonf860aButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fEditButtonf860aButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f860a1cc-a00a-4ba4-b6b0-3fa2e0ecf6d3");
                    fEditButtonf860aButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit...");
                }

                return fEditButtonf860aButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EditTextBlockText
        {
            get
            {
                if (null == fEditTextBlockText)
                {
                    fEditTextBlockText = new Text("EditTextBlockText", EditButtonf860aButton);
                    fEditTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fEditTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEditTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit...");
                }

                return fEditTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CopyButton522a4Button
        {
            get
            {
                if (null == fCopyButton522a4Button)
                {
                    fCopyButton522a4Button = new Button("CopyButton522a4Button", QuickSetsGroupBGroup);
                    fCopyButton522a4Button.UIMap.Scope = UIASeachScope.Children;
                    fCopyButton522a4Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCopyButton522a4Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"522a4994-53ad-4c29-a960-44ba49e6f4a0");
                    fCopyButton522a4Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Copy...");
                }

                return fCopyButton522a4Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CopyTextBlockText
        {
            get
            {
                if (null == fCopyTextBlockText)
                {
                    fCopyTextBlockText = new Text("CopyTextBlockText", CopyButton522a4Button);
                    fCopyTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fCopyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCopyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Copy...");
                }

                return fCopyTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RemoveButton717Button
        {
            get
            {
                if (null == fRemoveButton717Button)
                {
                    fRemoveButton717Button = new Button("RemoveButton717Button", QuickSetsGroupBGroup);
                    fRemoveButton717Button.UIMap.Scope = UIASeachScope.Children;
                    fRemoveButton717Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRemoveButton717Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"717302bb-23fd-4b78-97c3-bdf78422d87f");
                    fRemoveButton717Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                }

                return fRemoveButton717Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text RemoveTextBlockText
        {
            get
            {
                if (null == fRemoveTextBlockText)
                {
                    fRemoveTextBlockText = new Text("RemoveTextBlockText", RemoveButton717Button);
                    fRemoveTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fRemoveTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRemoveTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                }

                return fRemoveTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group NotificationSetGroup
        {
            get
            {
                if (null == fNotificationSetGroup)
                {
                    fNotificationSetGroup = new Group("NotificationSetGroup", ScrollViewer296Pane);
                    fNotificationSetGroup.UIMap.Scope = UIASeachScope.Children;
                    fNotificationSetGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fNotificationSetGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6aecc21c-0513-4813-8003-8b2b7046f13d");
                    fNotificationSetGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Notification Settings");
                }

                return fNotificationSetGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotificationSetText
        {
            get
            {
                if (null == fNotificationSetText)
                {
                    fNotificationSetText = new Text("NotificationSetText", NotificationSetGroup);
                    fNotificationSetText.UIMap.Scope = UIASeachScope.Children;
                    fNotificationSetText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNotificationSetText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Notification Settings");
                }

                return fNotificationSetText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ConditiononWhicDup0Text
        {
            get
            {
                if (null == fConditiononWhicDup0Text)
                {
                    fConditiononWhicDup0Text = new Text("ConditiononWhicDup0Text", NotificationSetGroup);
                    fConditiononWhicDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fConditiononWhicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fConditiononWhicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderNotifyConditionLabel");
                    fConditiononWhicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Condition on Which to Notify");
                }

                return fConditiononWhicDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ConditiononWhicDup1Text
        {
            get
            {
                if (null == fConditiononWhicDup1Text)
                {
                    fConditiononWhicDup1Text = new Text("ConditiononWhicDup1Text", ConditiononWhicDup0Text);
                    fConditiononWhicDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fConditiononWhicDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fConditiononWhicDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Condition on Which to Notify");
                }

                return fConditiononWhicDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox18729b8ComboBox
        {
            get
            {
                if (null == fComboBox18729b8ComboBox)
                {
                    fComboBox18729b8ComboBox = new ComboBox("ComboBox18729b8ComboBox", NotificationSetGroup);
                    fComboBox18729b8ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox18729b8ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox18729b8ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"18729b89-75e4-4aba-9c3b-9fa6229b10b4");
                }

                return fComboBox18729b8ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text MethodUsedtoDelDup0Text
        {
            get
            {
                if (null == fMethodUsedtoDelDup0Text)
                {
                    fMethodUsedtoDelDup0Text = new Text("MethodUsedtoDelDup0Text", NotificationSetGroup);
                    fMethodUsedtoDelDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fMethodUsedtoDelDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fMethodUsedtoDelDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a559a897-1509-4f3f-9a62-72186e814989");
                    fMethodUsedtoDelDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Method Used to Deliver Notification");
                }

                return fMethodUsedtoDelDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text MethodUsedtoDelDup1Text
        {
            get
            {
                if (null == fMethodUsedtoDelDup1Text)
                {
                    fMethodUsedtoDelDup1Text = new Text("MethodUsedtoDelDup1Text", MethodUsedtoDelDup0Text);
                    fMethodUsedtoDelDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fMethodUsedtoDelDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fMethodUsedtoDelDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Method Used to Deliver Notification");
                }

                return fMethodUsedtoDelDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxa6daee2ComboBox
        {
            get
            {
                if (null == fComboBoxa6daee2ComboBox)
                {
                    fComboBoxa6daee2ComboBox = new ComboBox("ComboBoxa6daee2ComboBox", NotificationSetGroup);
                    fComboBoxa6daee2ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxa6daee2ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxa6daee2ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a6daee2f-7680-42d3-8697-7176f4d94f29");
                }

                return fComboBoxa6daee2ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotificationEmaDup0Text
        {
            get
            {
                if (null == fNotificationEmaDup0Text)
                {
                    fNotificationEmaDup0Text = new Text("NotificationEmaDup0Text", NotificationSetGroup);
                    fNotificationEmaDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fNotificationEmaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fNotificationEmaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"420FDB85-6AE6-429e-A764-83D40D67AE5D");
                    fNotificationEmaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Notification E-mail Address");
                }

                return fNotificationEmaDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotificationEmaDup1Text
        {
            get
            {
                if (null == fNotificationEmaDup1Text)
                {
                    fNotificationEmaDup1Text = new Text("NotificationEmaDup1Text", NotificationEmaDup0Text);
                    fNotificationEmaDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fNotificationEmaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNotificationEmaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Notification E-mail Address");
                }

                return fNotificationEmaDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBoxC03E7642Edit
        {
            get
            {
                if (null == fTextBoxC03E7642Edit)
                {
                    fTextBoxC03E7642Edit = new Edit("TextBoxC03E7642Edit", NotificationSetGroup);
                    fTextBoxC03E7642Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxC03E7642Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBoxC03E7642Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C03E7642-1B70-4a8d-B6B9-CE9557B9FE66");
                }

                return fTextBoxC03E7642Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup0Pane
        {
            get
            {
                if (null == fScrollViewerPARDup0Pane)
                {
                    fScrollViewerPARDup0Pane = new Pane("ScrollViewerPARDup0Pane", TextBoxC03E7642Edit);
                    fScrollViewerPARDup0Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup0Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup1ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup1ScrollBar)
                {
                    fScrollBarVerticDup1ScrollBar = new ScrollBar("ScrollBarVerticDup1ScrollBar", ScrollViewerPARDup0Pane);
                    fScrollBarVerticDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup1ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup1ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup1ScrollBar)
                {
                    fScrollBarHorizoDup1ScrollBar = new ScrollBar("ScrollBarHorizoDup1ScrollBar", ScrollViewerPARDup0Pane);
                    fScrollBarHorizoDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup1ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox IncludeThumbnaiCheckBox
        {
            get
            {
                if (null == fIncludeThumbnaiCheckBox)
                {
                    fIncludeThumbnaiCheckBox = new CheckBox("IncludeThumbnaiCheckBox", NotificationSetGroup);
                    fIncludeThumbnaiCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fIncludeThumbnaiCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fIncludeThumbnaiCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B6F51938-14A6-4A0F-AB66-5BC9707D918A");
                    fIncludeThumbnaiCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Include Thumbnail");
                }

                return fIncludeThumbnaiCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text IncludeThumbnaiText
        {
            get
            {
                if (null == fIncludeThumbnaiText)
                {
                    fIncludeThumbnaiText = new Text("IncludeThumbnaiText", IncludeThumbnaiCheckBox);
                    fIncludeThumbnaiText.UIMap.Scope = UIASeachScope.Children;
                    fIncludeThumbnaiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fIncludeThumbnaiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Include Thumbnail");
                }

                return fIncludeThumbnaiText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBoxEdit
        {
            get
            {
                if (null == fTextBoxEdit)
                {
                    fTextBoxEdit = new Edit("TextBoxEdit", NotificationSetGroup);
                    fTextBoxEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxEdit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup1Pane
        {
            get
            {
                if (null == fScrollViewerPARDup1Pane)
                {
                    fScrollViewerPARDup1Pane = new Pane("ScrollViewerPARDup1Pane", TextBoxEdit);
                    fScrollViewerPARDup1Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup1Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup2ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup2ScrollBar)
                {
                    fScrollBarVerticDup2ScrollBar = new ScrollBar("ScrollBarVerticDup2ScrollBar", ScrollViewerPARDup1Pane);
                    fScrollBarVerticDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup2ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup2ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup2ScrollBar)
                {
                    fScrollBarHorizoDup2ScrollBar = new ScrollBar("ScrollBarHorizoDup2ScrollBar", ScrollViewerPARDup1Pane);
                    fScrollBarHorizoDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup2ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group FolderSettingsGGroup
        {
            get
            {
                if (null == fFolderSettingsGGroup)
                {
                    fFolderSettingsGGroup = new Group("FolderSettingsGGroup", ScrollViewer296Pane);
                    fFolderSettingsGGroup.UIMap.Scope = UIASeachScope.Children;
                    fFolderSettingsGGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fFolderSettingsGGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"F0CEFDE7-71B0-4633-973F-691C759EE7D7");
                    fFolderSettingsGGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Folder Settings");
                }

                return fFolderSettingsGGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FolderSettingsTText
        {
            get
            {
                if (null == fFolderSettingsTText)
                {
                    fFolderSettingsTText = new Text("FolderSettingsTText", FolderSettingsGGroup);
                    fFolderSettingsTText.UIMap.Scope = UIASeachScope.Children;
                    fFolderSettingsTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFolderSettingsTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Folder Settings");
                }

                return fFolderSettingsTText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public RadioButton SendonlytofoldeRadioButton
        {
            get
            {
                if (null == fSendonlytofoldeRadioButton)
                {
                    fSendonlytofoldeRadioButton = new RadioButton("SendonlytofoldeRadioButton", FolderSettingsGGroup);
                    fSendonlytofoldeRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fSendonlytofoldeRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    fSendonlytofoldeRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6C4DBEF7-EFDE-48ba-9169-388241435C13");
                    fSendonlytofoldeRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send only to folders with read and write access");
                }

                return fSendonlytofoldeRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendonlytofoldeText
        {
            get
            {
                if (null == fSendonlytofoldeText)
                {
                    fSendonlytofoldeText = new Text("SendonlytofoldeText", SendonlytofoldeRadioButton);
                    fSendonlytofoldeText.UIMap.Scope = UIASeachScope.Children;
                    fSendonlytofoldeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendonlytofoldeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send only to folders with read and write access");
                }

                return fSendonlytofoldeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ThisoptionsuppoText
        {
            get
            {
                if (null == fThisoptionsuppoText)
                {
                    fThisoptionsuppoText = new Text("ThisoptionsuppoText", FolderSettingsGGroup);
                    fThisoptionsuppoText.UIMap.Scope = UIASeachScope.Children;
                    fThisoptionsuppoText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fThisoptionsuppoText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"This option supports folder verification and job notifications.");
                }

                return fThisoptionsuppoText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox VerifyfolderaccCheckBox
        {
            get
            {
                if (null == fVerifyfolderaccCheckBox)
                {
                    fVerifyfolderaccCheckBox = new CheckBox("VerifyfolderaccCheckBox", FolderSettingsGGroup);
                    fVerifyfolderaccCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fVerifyfolderaccCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fVerifyfolderaccCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ABA3C2CC-75B1-4c7f-97AD-835B07D3D01A");
                    fVerifyfolderaccCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Verify folder access prior to job start");
                }

                return fVerifyfolderaccCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text VerifyfolderaccText
        {
            get
            {
                if (null == fVerifyfolderaccText)
                {
                    fVerifyfolderaccText = new Text("VerifyfolderaccText", VerifyfolderaccCheckBox);
                    fVerifyfolderaccText.UIMap.Scope = UIASeachScope.Children;
                    fVerifyfolderaccText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fVerifyfolderaccText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Verify folder access prior to job start");
                }

                return fVerifyfolderaccText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text WhenuncheckedusText
        {
            get
            {
                if (null == fWhenuncheckedusText)
                {
                    fWhenuncheckedusText = new Text("WhenuncheckedusText", FolderSettingsGGroup);
                    fWhenuncheckedusText.UIMap.Scope = UIASeachScope.Children;
                    fWhenuncheckedusText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fWhenuncheckedusText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"When unchecked, users can save jobs more quickly but jobs may fail if the folder is unavailable.");
                }

                return fWhenuncheckedusText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public RadioButton AllowsendingtofRadioButton
        {
            get
            {
                if (null == fAllowsendingtofRadioButton)
                {
                    fAllowsendingtofRadioButton = new RadioButton("AllowsendingtofRadioButton", FolderSettingsGGroup);
                    fAllowsendingtofRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fAllowsendingtofRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                    fAllowsendingtofRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C96A36D8-C571-4e2a-8952-9AC0848F8525");
                    fAllowsendingtofRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Allow sending to folders with write access only");
                }

                return fAllowsendingtofRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AllowsendingtofText
        {
            get
            {
                if (null == fAllowsendingtofText)
                {
                    fAllowsendingtofText = new Text("AllowsendingtofText", AllowsendingtofRadioButton);
                    fAllowsendingtofText.UIMap.Scope = UIASeachScope.Children;
                    fAllowsendingtofText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAllowsendingtofText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Allow sending to folders with write access only");
                }

                return fAllowsendingtofText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ThisoptiondoesnText
        {
            get
            {
                if (null == fThisoptiondoesnText)
                {
                    fThisoptiondoesnText = new Text("ThisoptiondoesnText", FolderSettingsGGroup);
                    fThisoptiondoesnText.UIMap.Scope = UIASeachScope.Children;
                    fThisoptiondoesnText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fThisoptiondoesnText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"This option does not support folder verification or job notifications.");
                }

                return fThisoptiondoesnText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group ScanSettingsGroGroup
        {
            get
            {
                if (null == fScanSettingsGroGroup)
                {
                    fScanSettingsGroGroup = new Group("ScanSettingsGroGroup", ScrollViewer296Pane);
                    fScanSettingsGroGroup.UIMap.Scope = UIASeachScope.Children;
                    fScanSettingsGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fScanSettingsGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16fe314d-ff31-4c35-8bb4-e92896a37fe2");
                    fScanSettingsGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan Settings");
                }

                return fScanSettingsGroGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ScanSettingsTexText
        {
            get
            {
                if (null == fScanSettingsTexText)
                {
                    fScanSettingsTexText = new Text("ScanSettingsTexText", ScanSettingsGroGroup);
                    fScanSettingsTexText.UIMap.Scope = UIASeachScope.Children;
                    fScanSettingsTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fScanSettingsTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan Settings");
                }

                return fScanSettingsTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OriginalSizeText
        {
            get
            {
                if (null == fOriginalSizeText)
                {
                    fOriginalSizeText = new Text("OriginalSizeText", ScanSettingsGroGroup);
                    fOriginalSizeText.UIMap.Scope = UIASeachScope.Children;
                    fOriginalSizeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fOriginalSizeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Original Size");
                }

                return fOriginalSizeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OriginalSizeTexText
        {
            get
            {
                if (null == fOriginalSizeTexText)
                {
                    fOriginalSizeTexText = new Text("OriginalSizeTexText", OriginalSizeText);
                    fOriginalSizeTexText.UIMap.Scope = UIASeachScope.Children;
                    fOriginalSizeTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOriginalSizeTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Original Size");
                }

                return fOriginalSizeTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox702f965ComboBox
        {
            get
            {
                if (null == fComboBox702f965ComboBox)
                {
                    fComboBox702f965ComboBox = new ComboBox("ComboBox702f965ComboBox", ScanSettingsGroGroup);
                    fComboBox702f965ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox702f965ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox702f965ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"702f965b-6e3a-44cb-a582-4364931614cd");
                }

                return fComboBox702f965ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CustomDimensionText
        {
            get
            {
                if (null == fCustomDimensionText)
                {
                    fCustomDimensionText = new Text("CustomDimensionText", ScanSettingsGroGroup);
                    fCustomDimensionText.UIMap.Scope = UIASeachScope.Children;
                    fCustomDimensionText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fCustomDimensionText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Custom Dimension Units");
                }

                return fCustomDimensionText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox6e8a69eComboBox
        {
            get
            {
                if (null == fComboBox6e8a69eComboBox)
                {
                    fComboBox6e8a69eComboBox = new ComboBox("ComboBox6e8a69eComboBox", ScanSettingsGroGroup);
                    fComboBox6e8a69eComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox6e8a69eComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox6e8a69eComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6e8a69e5-7444-45b5-8b58-78bf633c55aa");
                }

                return fComboBox6e8a69eComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CustomXDimensioText
        {
            get
            {
                if (null == fCustomXDimensioText)
                {
                    fCustomXDimensioText = new Text("CustomXDimensioText", ScanSettingsGroGroup);
                    fCustomXDimensioText.UIMap.Scope = UIASeachScope.Children;
                    fCustomXDimensioText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fCustomXDimensioText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Custom X Dimension");
                }

                return fCustomXDimensioText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBox6de71b55Edit
        {
            get
            {
                if (null == fTextBox6de71b55Edit)
                {
                    fTextBox6de71b55Edit = new Edit("TextBox6de71b55Edit", ScanSettingsGroGroup);
                    fTextBox6de71b55Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox6de71b55Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox6de71b55Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6de71b55-5f83-41f9-88d7-3c19655843c3");
                }

                return fTextBox6de71b55Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CustomYDimensioText
        {
            get
            {
                if (null == fCustomYDimensioText)
                {
                    fCustomYDimensioText = new Text("CustomYDimensioText", ScanSettingsGroGroup);
                    fCustomYDimensioText.UIMap.Scope = UIASeachScope.Children;
                    fCustomYDimensioText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fCustomYDimensioText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Custom Y Dimension");
                }

                return fCustomYDimensioText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBox6e9869f1Edit
        {
            get
            {
                if (null == fTextBox6e9869f1Edit)
                {
                    fTextBox6e9869f1Edit = new Edit("TextBox6e9869f1Edit", ScanSettingsGroGroup);
                    fTextBox6e9869f1Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox6e9869f1Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox6e9869f1Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6e9869f1-3fc6-47e0-be26-2ec1e91856e4");
                }

                return fTextBox6e9869f1Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OriginalSidesText
        {
            get
            {
                if (null == fOriginalSidesText)
                {
                    fOriginalSidesText = new Text("OriginalSidesText", ScanSettingsGroGroup);
                    fOriginalSidesText.UIMap.Scope = UIASeachScope.Children;
                    fOriginalSidesText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fOriginalSidesText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Original Sides");
                }

                return fOriginalSidesText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OriginalSidesTeText
        {
            get
            {
                if (null == fOriginalSidesTeText)
                {
                    fOriginalSidesTeText = new Text("OriginalSidesTeText", OriginalSidesText);
                    fOriginalSidesTeText.UIMap.Scope = UIASeachScope.Children;
                    fOriginalSidesTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOriginalSidesTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Original Sides");
                }

                return fOriginalSidesTeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxc67ed30ComboBox
        {
            get
            {
                if (null == fComboBoxc67ed30ComboBox)
                {
                    fComboBoxc67ed30ComboBox = new ComboBox("ComboBoxc67ed30ComboBox", ScanSettingsGroGroup);
                    fComboBoxc67ed30ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxc67ed30ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxc67ed30ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c67ed309-855d-419b-8411-638c1b25a2c2");
                }

                return fComboBoxc67ed30ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OptimizeTextPicDup0Text
        {
            get
            {
                if (null == fOptimizeTextPicDup0Text)
                {
                    fOptimizeTextPicDup0Text = new Text("OptimizeTextPicDup0Text", ScanSettingsGroGroup);
                    fOptimizeTextPicDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fOptimizeTextPicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fOptimizeTextPicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"477416fe-179b-4301-bd62-377d90ec28db");
                    fOptimizeTextPicDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Optimize Text/Picture");
                }

                return fOptimizeTextPicDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OptimizeTextPicDup1Text
        {
            get
            {
                if (null == fOptimizeTextPicDup1Text)
                {
                    fOptimizeTextPicDup1Text = new Text("OptimizeTextPicDup1Text", OptimizeTextPicDup0Text);
                    fOptimizeTextPicDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fOptimizeTextPicDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOptimizeTextPicDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Optimize Text/Picture");
                }

                return fOptimizeTextPicDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxc51215cComboBox
        {
            get
            {
                if (null == fComboBoxc51215cComboBox)
                {
                    fComboBoxc51215cComboBox = new ComboBox("ComboBoxc51215cComboBox", ScanSettingsGroGroup);
                    fComboBoxc51215cComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxc51215cComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxc51215cComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c51215c9-d109-477d-84bd-4f7300eecdc2");
                }

                return fComboBoxc51215cComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OptimizeForText
        {
            get
            {
                if (null == fOptimizeForText)
                {
                    fOptimizeForText = new Text("OptimizeForText", ScanSettingsGroGroup);
                    fOptimizeForText.UIMap.Scope = UIASeachScope.Children;
                    fOptimizeForText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fOptimizeForText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Optimize For");
                }

                return fOptimizeForText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OptimizeForTextText
        {
            get
            {
                if (null == fOptimizeForTextText)
                {
                    fOptimizeForTextText = new Text("OptimizeForTextText", OptimizeForText);
                    fOptimizeForTextText.UIMap.Scope = UIASeachScope.Children;
                    fOptimizeForTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOptimizeForTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Optimize For");
                }

                return fOptimizeForTextText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox7e598b9ComboBox
        {
            get
            {
                if (null == fComboBox7e598b9ComboBox)
                {
                    fComboBox7e598b9ComboBox = new ComboBox("ComboBox7e598b9ComboBox", ScanSettingsGroGroup);
                    fComboBox7e598b9ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox7e598b9ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox7e598b9ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7e598b9c-a6e1-437f-b058-1159fc449c9e");
                }

                return fComboBox7e598b9ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ContentOrientatDup0Text
        {
            get
            {
                if (null == fContentOrientatDup0Text)
                {
                    fContentOrientatDup0Text = new Text("ContentOrientatDup0Text", ScanSettingsGroGroup);
                    fContentOrientatDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fContentOrientatDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fContentOrientatDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Content Orientation");
                }

                return fContentOrientatDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ContentOrientatDup1Text
        {
            get
            {
                if (null == fContentOrientatDup1Text)
                {
                    fContentOrientatDup1Text = new Text("ContentOrientatDup1Text", ContentOrientatDup0Text);
                    fContentOrientatDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fContentOrientatDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fContentOrientatDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Content Orientation");
                }

                return fContentOrientatDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxb0ba9f8ComboBox
        {
            get
            {
                if (null == fComboBoxb0ba9f8ComboBox)
                {
                    fComboBoxb0ba9f8ComboBox = new ComboBox("ComboBoxb0ba9f8ComboBox", ScanSettingsGroGroup);
                    fComboBoxb0ba9f8ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxb0ba9f8ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxb0ba9f8ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b0ba9f80-d434-4d02-abf9-a8e2a4d725ea");
                }

                return fComboBoxb0ba9f8ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text A2SidedFormatTeDup0Text
        {
            get
            {
                if (null == fA2SidedFormatTeDup0Text)
                {
                    fA2SidedFormatTeDup0Text = new Text("A2SidedFormatTeDup0Text", ScanSettingsGroGroup);
                    fA2SidedFormatTeDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fA2SidedFormatTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fA2SidedFormatTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"bc277c8f-b93a-438a-b4bf-c117a8a25213");
                    fA2SidedFormatTeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"2-Sided Format");
                }

                return fA2SidedFormatTeDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text A2SidedFormatTeDup1Text
        {
            get
            {
                if (null == fA2SidedFormatTeDup1Text)
                {
                    fA2SidedFormatTeDup1Text = new Text("A2SidedFormatTeDup1Text", A2SidedFormatTeDup0Text);
                    fA2SidedFormatTeDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fA2SidedFormatTeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fA2SidedFormatTeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"2-Sided Format");
                }

                return fA2SidedFormatTeDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox100bd49ComboBox
        {
            get
            {
                if (null == fComboBox100bd49ComboBox)
                {
                    fComboBox100bd49ComboBox = new ComboBox("ComboBox100bd49ComboBox", ScanSettingsGroGroup);
                    fComboBox100bd49ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox100bd49ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox100bd49ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"100bd496-8637-4c80-b67b-f72f0c1404ed");
                }

                return fComboBox100bd49ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text BackgroundCleanDup0Text
        {
            get
            {
                if (null == fBackgroundCleanDup0Text)
                {
                    fBackgroundCleanDup0Text = new Text("BackgroundCleanDup0Text", ScanSettingsGroGroup);
                    fBackgroundCleanDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fBackgroundCleanDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fBackgroundCleanDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Background Cleanup");
                }

                return fBackgroundCleanDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text BackgroundCleanDup1Text
        {
            get
            {
                if (null == fBackgroundCleanDup1Text)
                {
                    fBackgroundCleanDup1Text = new Text("BackgroundCleanDup1Text", BackgroundCleanDup0Text);
                    fBackgroundCleanDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fBackgroundCleanDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fBackgroundCleanDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Background Cleanup");
                }

                return fBackgroundCleanDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox837e012ComboBox
        {
            get
            {
                if (null == fComboBox837e012ComboBox)
                {
                    fComboBox837e012ComboBox = new ComboBox("ComboBox837e012ComboBox", ScanSettingsGroGroup);
                    fComboBox837e012ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox837e012ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox837e012ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"837e0120-2f3d-41ad-978a-5c4cddd155f7");
                }

                return fComboBox837e012ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DarknessText
        {
            get
            {
                if (null == fDarknessText)
                {
                    fDarknessText = new Text("DarknessText", ScanSettingsGroGroup);
                    fDarknessText.UIMap.Scope = UIASeachScope.Children;
                    fDarknessText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDarknessText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Darkness");
                }

                return fDarknessText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DarknessTextBloText
        {
            get
            {
                if (null == fDarknessTextBloText)
                {
                    fDarknessTextBloText = new Text("DarknessTextBloText", DarknessText);
                    fDarknessTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fDarknessTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDarknessTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Darkness");
                }

                return fDarknessTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox22ca338ComboBox
        {
            get
            {
                if (null == fComboBox22ca338ComboBox)
                {
                    fComboBox22ca338ComboBox = new ComboBox("ComboBox22ca338ComboBox", ScanSettingsGroGroup);
                    fComboBox22ca338ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox22ca338ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox22ca338ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22ca3382-be78-4b65-814a-1a209a45b141");
                }

                return fComboBox22ca338ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ContrastText
        {
            get
            {
                if (null == fContrastText)
                {
                    fContrastText = new Text("ContrastText", ScanSettingsGroGroup);
                    fContrastText.UIMap.Scope = UIASeachScope.Children;
                    fContrastText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fContrastText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Contrast");
                }

                return fContrastText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ContrastTextBloText
        {
            get
            {
                if (null == fContrastTextBloText)
                {
                    fContrastTextBloText = new Text("ContrastTextBloText", ContrastText);
                    fContrastTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fContrastTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fContrastTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Contrast");
                }

                return fContrastTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxadd9ab6ComboBox
        {
            get
            {
                if (null == fComboBoxadd9ab6ComboBox)
                {
                    fComboBoxadd9ab6ComboBox = new ComboBox("ComboBoxadd9ab6ComboBox", ScanSettingsGroGroup);
                    fComboBoxadd9ab6ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxadd9ab6ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxadd9ab6ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"add9ab6a-5ba5-4617-8b63-855e1cb76a49");
                }

                return fComboBoxadd9ab6ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SharpnessText
        {
            get
            {
                if (null == fSharpnessText)
                {
                    fSharpnessText = new Text("SharpnessText", ScanSettingsGroGroup);
                    fSharpnessText.UIMap.Scope = UIASeachScope.Children;
                    fSharpnessText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSharpnessText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sharpness");
                }

                return fSharpnessText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SharpnessTextBlText
        {
            get
            {
                if (null == fSharpnessTextBlText)
                {
                    fSharpnessTextBlText = new Text("SharpnessTextBlText", SharpnessText);
                    fSharpnessTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fSharpnessTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSharpnessTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sharpness");
                }

                return fSharpnessTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxae7c38bComboBox
        {
            get
            {
                if (null == fComboBoxae7c38bComboBox)
                {
                    fComboBoxae7c38bComboBox = new ComboBox("ComboBoxae7c38bComboBox", ScanSettingsGroGroup);
                    fComboBoxae7c38bComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxae7c38bComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxae7c38bComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ae7c38b7-d82e-4e3f-a478-6cf20302dbe4");
                }

                return fComboBoxae7c38bComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ColorDropoutText
        {
            get
            {
                if (null == fColorDropoutText)
                {
                    fColorDropoutText = new Text("ColorDropoutText", ScanSettingsGroGroup);
                    fColorDropoutText.UIMap.Scope = UIASeachScope.Children;
                    fColorDropoutText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fColorDropoutText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Color Dropout");
                }

                return fColorDropoutText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox519cf92ComboBox
        {
            get
            {
                if (null == fComboBox519cf92ComboBox)
                {
                    fComboBox519cf92ComboBox = new ComboBox("ComboBox519cf92ComboBox", ScanSettingsGroGroup);
                    fComboBox519cf92ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox519cf92ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox519cf92ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"519cf92f-5690-4637-b4a3-597852ec7ee4");
                }

                return fComboBox519cf92ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ImagePreviewText
        {
            get
            {
                if (null == fImagePreviewText)
                {
                    fImagePreviewText = new Text("ImagePreviewText", ScanSettingsGroGroup);
                    fImagePreviewText.UIMap.Scope = UIASeachScope.Children;
                    fImagePreviewText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fImagePreviewText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Image Preview");
                }

                return fImagePreviewText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ImagePreviewTexText
        {
            get
            {
                if (null == fImagePreviewTexText)
                {
                    fImagePreviewTexText = new Text("ImagePreviewTexText", ImagePreviewText);
                    fImagePreviewTexText.UIMap.Scope = UIASeachScope.Children;
                    fImagePreviewTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fImagePreviewTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Image Preview");
                }

                return fImagePreviewTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox51ea797ComboBox
        {
            get
            {
                if (null == fComboBox51ea797ComboBox)
                {
                    fComboBox51ea797ComboBox = new ComboBox("ComboBox51ea797ComboBox", ScanSettingsGroGroup);
                    fComboBox51ea797ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox51ea797ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox51ea797ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"51ea7978-df72-4338-96b8-899fe9b678d9");
                }

                return fComboBox51ea797ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CroppingOptionsDup0Text
        {
            get
            {
                if (null == fCroppingOptionsDup0Text)
                {
                    fCroppingOptionsDup0Text = new Text("CroppingOptionsDup0Text", ScanSettingsGroGroup);
                    fCroppingOptionsDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fCroppingOptionsDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fCroppingOptionsDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cropping Options");
                }

                return fCroppingOptionsDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CroppingOptionsDup1Text
        {
            get
            {
                if (null == fCroppingOptionsDup1Text)
                {
                    fCroppingOptionsDup1Text = new Text("CroppingOptionsDup1Text", CroppingOptionsDup0Text);
                    fCroppingOptionsDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fCroppingOptionsDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCroppingOptionsDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cropping Options");
                }

                return fCroppingOptionsDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox8EB598EComboBox
        {
            get
            {
                if (null == fComboBox8EB598EComboBox)
                {
                    fComboBox8EB598EComboBox = new ComboBox("ComboBox8EB598EComboBox", ScanSettingsGroGroup);
                    fComboBox8EB598EComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox8EB598EComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox8EB598EComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8EB598EA-6D46-4cff-918C-CDBDF0EDFD6E");
                }

                return fComboBox8EB598EComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox JobBuildCheckBoCheckBox
        {
            get
            {
                if (null == fJobBuildCheckBoCheckBox)
                {
                    fJobBuildCheckBoCheckBox = new CheckBox("JobBuildCheckBoCheckBox", ScanSettingsGroGroup);
                    fJobBuildCheckBoCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fJobBuildCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fJobBuildCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c6850ccc-1dce-4a6a-acf2-afb4fd56ab8b");
                    fJobBuildCheckBoCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Job Build");
                }

                return fJobBuildCheckBoCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox AutomaticToneChCheckBox
        {
            get
            {
                if (null == fAutomaticToneChCheckBox)
                {
                    fAutomaticToneChCheckBox = new CheckBox("AutomaticToneChCheckBox", ScanSettingsGroGroup);
                    fAutomaticToneChCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fAutomaticToneChCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fAutomaticToneChCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1626CD94-B3C1-4147-8152-47A0EC6BE9F2");
                    fAutomaticToneChCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Automatic Tone");
                }

                return fAutomaticToneChCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CheckingthisboxText
        {
            get
            {
                if (null == fCheckingthisboxText)
                {
                    fCheckingthisboxText = new Text("CheckingthisboxText", ScanSettingsGroGroup);
                    fCheckingthisboxText.UIMap.Scope = UIASeachScope.Children;
                    fCheckingthisboxText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fCheckingthisboxText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1AC885A6-A0FF-48FE-81F1-AFE9259F2F78");
                    fCheckingthisboxText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Checking this box sets the Darkness, Contrast, and Background Cleanup settings automatically.");
                }

                return fCheckingthisboxText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox AutomaticallyStCheckBox
        {
            get
            {
                if (null == fAutomaticallyStCheckBox)
                {
                    fAutomaticallyStCheckBox = new CheckBox("AutomaticallyStCheckBox", ScanSettingsGroGroup);
                    fAutomaticallyStCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fAutomaticallyStCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fAutomaticallyStCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"620025C1-499F-463E-8743-086510FCA32B");
                    fAutomaticallyStCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Automatically Straighten");
                }

                return fAutomaticallyStCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text WhenenabledpageText
        {
            get
            {
                if (null == fWhenenabledpageText)
                {
                    fWhenenabledpageText = new Text("WhenenabledpageText", ScanSettingsGroGroup);
                    fWhenenabledpageText.UIMap.Scope = UIASeachScope.Children;
                    fWhenenabledpageText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fWhenenabledpageText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"When enabled, pages that are skewed during scanning will automatically be straightened.");
                }

                return fWhenenabledpageText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox MultifeedDetectCheckBox
        {
            get
            {
                if (null == fMultifeedDetectCheckBox)
                {
                    fMultifeedDetectCheckBox = new CheckBox("MultifeedDetectCheckBox", ScanSettingsGroGroup);
                    fMultifeedDetectCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fMultifeedDetectCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fMultifeedDetectCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b3d452e7-25a9-41a2-a348-468b7e0e2721");
                    fMultifeedDetectCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Multi-feed Detection");
                }

                return fMultifeedDetectCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text MultifeedDetectText
        {
            get
            {
                if (null == fMultifeedDetectText)
                {
                    fMultifeedDetectText = new Text("MultifeedDetectText", MultifeedDetectCheckBox);
                    fMultifeedDetectText.UIMap.Scope = UIASeachScope.Children;
                    fMultifeedDetectText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fMultifeedDetectText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Multi-feed Detection");
                }

                return fMultifeedDetectText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom EraseEdgeUserCoCustom
        {
            get
            {
                if (null == fEraseEdgeUserCoCustom)
                {
                    fEraseEdgeUserCoCustom = new Custom("EraseEdgeUserCoCustom", ScanSettingsGroGroup);
                    fEraseEdgeUserCoCustom.UIMap.Scope = UIASeachScope.Children;
                    fEraseEdgeUserCoCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"EraseEdgeUserControl");
                    fEraseEdgeUserCoCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderEdgeEraseUserControl");
                }

                return fEraseEdgeUserCoCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group EraseEdgesGroupGroup
        {
            get
            {
                if (null == fEraseEdgesGroupGroup)
                {
                    fEraseEdgesGroupGroup = new Group("EraseEdgesGroupGroup", EraseEdgeUserCoCustom);
                    fEraseEdgesGroupGroup.UIMap.Scope = UIASeachScope.Children;
                    fEraseEdgesGroupGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fEraseEdgesGroupGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"95264138-6d30-4903-8cb8-efaadf93c29c");
                    fEraseEdgesGroupGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Erase Edges");
                }

                return fEraseEdgesGroupGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EraseEdgesTextBDup0Text
        {
            get
            {
                if (null == fEraseEdgesTextBDup0Text)
                {
                    fEraseEdgesTextBDup0Text = new Text("EraseEdgesTextBDup0Text", EraseEdgesGroupGroup);
                    fEraseEdgesTextBDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fEraseEdgesTextBDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEraseEdgesTextBDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Erase Edges");
                }

                return fEraseEdgesTextBDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox EraseEdgesCheckCheckBox
        {
            get
            {
                if (null == fEraseEdgesCheckCheckBox)
                {
                    fEraseEdgesCheckCheckBox = new CheckBox("EraseEdgesCheckCheckBox", EraseEdgesGroupGroup);
                    fEraseEdgesCheckCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEraseEdgesCheckCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fEraseEdgesCheckCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22ecd23b-a89a-4f67-9666-ea42be70c215");
                    fEraseEdgesCheckCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Erase Edges");
                }

                return fEraseEdgesCheckCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EraseEdgesTextBDup1Text
        {
            get
            {
                if (null == fEraseEdgesTextBDup1Text)
                {
                    fEraseEdgesTextBDup1Text = new Text("EraseEdgesTextBDup1Text", EraseEdgesCheckCheckBox);
                    fEraseEdgesTextBDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fEraseEdgesTextBDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEraseEdgesTextBDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Erase Edges");
                }

                return fEraseEdgesTextBDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox UseinchesCheckBCheckBox
        {
            get
            {
                if (null == fUseinchesCheckBCheckBox)
                {
                    fUseinchesCheckBCheckBox = new CheckBox("UseinchesCheckBCheckBox", EraseEdgesGroupGroup);
                    fUseinchesCheckBCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUseinchesCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fUseinchesCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"29e3a4d9-b313-4c75-a684-d0343eacd5bf");
                    fUseinchesCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use inches");
                }

                return fUseinchesCheckBCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group FrontsideeraseGGroup
        {
            get
            {
                if (null == fFrontsideeraseGGroup)
                {
                    fFrontsideeraseGGroup = new Group("FrontsideeraseGGroup", EraseEdgesGroupGroup);
                    fFrontsideeraseGGroup.UIMap.Scope = UIASeachScope.Children;
                    fFrontsideeraseGGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fFrontsideeraseGGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3233E272-F4BC-438c-B5FB-D92087D3A76D");
                    fFrontsideeraseGGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Front side erase");
                }

                return fFrontsideeraseGGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group BacksideeraseGrGroup
        {
            get
            {
                if (null == fBacksideeraseGrGroup)
                {
                    fBacksideeraseGrGroup = new Group("BacksideeraseGrGroup", EraseEdgesGroupGroup);
                    fBacksideeraseGrGroup.UIMap.Scope = UIASeachScope.Children;
                    fBacksideeraseGrGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fBacksideeraseGrGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DE77E0C4-69F4-4113-B581-645AB48F850D");
                    fBacksideeraseGrGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back side erase");
                }

                return fBacksideeraseGrGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group FileSettingsGroGroup
        {
            get
            {
                if (null == fFileSettingsGroGroup)
                {
                    fFileSettingsGroGroup = new Group("FileSettingsGroGroup", ScrollViewer296Pane);
                    fFileSettingsGroGroup.UIMap.Scope = UIASeachScope.Children;
                    fFileSettingsGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                    fFileSettingsGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8018ee2c-0423-4c08-9be1-91bc58dd567d");
                    fFileSettingsGroGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Settings");
                }

                return fFileSettingsGroGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FileSettingsTexText
        {
            get
            {
                if (null == fFileSettingsTexText)
                {
                    fFileSettingsTexText = new Text("FileSettingsTexText", FileSettingsGroGroup);
                    fFileSettingsTexText.UIMap.Scope = UIASeachScope.Children;
                    fFileSettingsTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFileSettingsTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Settings");
                }

                return fFileSettingsTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FileNamePrefixTDup0Text
        {
            get
            {
                if (null == fFileNamePrefixTDup0Text)
                {
                    fFileNamePrefixTDup0Text = new Text("FileNamePrefixTDup0Text", FileSettingsGroGroup);
                    fFileNamePrefixTDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fFileNamePrefixTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFileNamePrefixTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"59c9f7e6-d644-4462-8225-e4f78fc44373");
                    fFileNamePrefixTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Name Prefix");
                }

                return fFileNamePrefixTDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FileNamePrefixTDup1Text
        {
            get
            {
                if (null == fFileNamePrefixTDup1Text)
                {
                    fFileNamePrefixTDup1Text = new Text("FileNamePrefixTDup1Text", FileNamePrefixTDup0Text);
                    fFileNamePrefixTDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fFileNamePrefixTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFileNamePrefixTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Name Prefix");
                }

                return fFileNamePrefixTDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBox8a012dfaEdit
        {
            get
            {
                if (null == fTextBox8a012dfaEdit)
                {
                    fTextBox8a012dfaEdit = new Edit("TextBox8a012dfaEdit", FileSettingsGroGroup);
                    fTextBox8a012dfaEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox8a012dfaEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox8a012dfaEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8a012dfa-814b-43f7-8118-6b79fb879790");
                }

                return fTextBox8a012dfaEdit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup2Pane
        {
            get
            {
                if (null == fScrollViewerPARDup2Pane)
                {
                    fScrollViewerPARDup2Pane = new Pane("ScrollViewerPARDup2Pane", TextBox8a012dfaEdit);
                    fScrollViewerPARDup2Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup2Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup3ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup3ScrollBar)
                {
                    fScrollBarVerticDup3ScrollBar = new ScrollBar("ScrollBarVerticDup3ScrollBar", ScrollViewerPARDup2Pane);
                    fScrollBarVerticDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup3ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup3ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup3ScrollBar)
                {
                    fScrollBarHorizoDup3ScrollBar = new ScrollBar("ScrollBarHorizoDup3ScrollBar", ScrollViewerPARDup2Pane);
                    fScrollBarHorizoDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup3ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group Expander4d68e62Group
        {
            get
            {
                if (null == fExpander4d68e62Group)
                {
                    fExpander4d68e62Group = new Group("Expander4d68e62Group", FileSettingsGroGroup);
                    fExpander4d68e62Group.UIMap.Scope = UIASeachScope.Children;
                    fExpander4d68e62Group.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                    fExpander4d68e62Group.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4d68e623-5cbe-44c6-8e4b-12312be5cae6");
                }

                return fExpander4d68e62Group;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ButtonHeaderSitDup0Button
        {
            get
            {
                if (null == fButtonHeaderSitDup0Button)
                {
                    fButtonHeaderSitDup0Button = new Button("ButtonHeaderSitDup0Button", Expander4d68e62Group);
                    fButtonHeaderSitDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonHeaderSitDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonHeaderSitDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                }

                return fButtonHeaderSitDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotusereditableDup0Text
        {
            get
            {
                if (null == fNotusereditableDup0Text)
                {
                    fNotusereditableDup0Text = new Text("NotusereditableDup0Text", FileSettingsGroGroup);
                    fNotusereditableDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fNotusereditableDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fNotusereditableDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e4943af4-e240-4400-bff7-9f8c11938bef");
                    fNotusereditableDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Not user editable");
                }

                return fNotusereditableDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotusereditableDup1Text
        {
            get
            {
                if (null == fNotusereditableDup1Text)
                {
                    fNotusereditableDup1Text = new Text("NotusereditableDup1Text", NotusereditableDup0Text);
                    fNotusereditableDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fNotusereditableDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNotusereditableDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Not user editable");
                }

                return fNotusereditableDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultFileNameDup0Text
        {
            get
            {
                if (null == fDefaultFileNameDup0Text)
                {
                    fDefaultFileNameDup0Text = new Text("DefaultFileNameDup0Text", FileSettingsGroGroup);
                    fDefaultFileNameDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultFileNameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDefaultFileNameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9366815d-e91c-4672-a4db-35f894ad1e4b");
                    fDefaultFileNameDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default File Name");
                }

                return fDefaultFileNameDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultFileNameDup1Text
        {
            get
            {
                if (null == fDefaultFileNameDup1Text)
                {
                    fDefaultFileNameDup1Text = new Text("DefaultFileNameDup1Text", DefaultFileNameDup0Text);
                    fDefaultFileNameDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultFileNameDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDefaultFileNameDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default File Name");
                }

                return fDefaultFileNameDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBox0adb8ae3Edit
        {
            get
            {
                if (null == fTextBox0adb8ae3Edit)
                {
                    fTextBox0adb8ae3Edit = new Edit("TextBox0adb8ae3Edit", FileSettingsGroGroup);
                    fTextBox0adb8ae3Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox0adb8ae3Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox0adb8ae3Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0adb8ae3-d9f9-4ba0-9b05-aabb1b5ad82b");
                }

                return fTextBox0adb8ae3Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup3Pane
        {
            get
            {
                if (null == fScrollViewerPARDup3Pane)
                {
                    fScrollViewerPARDup3Pane = new Pane("ScrollViewerPARDup3Pane", TextBox0adb8ae3Edit);
                    fScrollViewerPARDup3Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup3Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup4ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup4ScrollBar)
                {
                    fScrollBarVerticDup4ScrollBar = new ScrollBar("ScrollBarVerticDup4ScrollBar", ScrollViewerPARDup3Pane);
                    fScrollBarVerticDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup4ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup4ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup4ScrollBar)
                {
                    fScrollBarHorizoDup4ScrollBar = new ScrollBar("ScrollBarHorizoDup4ScrollBar", ScrollViewerPARDup3Pane);
                    fScrollBarHorizoDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup4ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox UsereditableCheCheckBox
        {
            get
            {
                if (null == fUsereditableCheCheckBox)
                {
                    fUsereditableCheCheckBox = new CheckBox("UsereditableCheCheckBox", FileSettingsGroGroup);
                    fUsereditableCheCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableCheCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fUsereditableCheCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"09ea9a2b-eba7-4585-8ad4-6a5a52323363");
                    fUsereditableCheCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableCheCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text UsereditableTexText
        {
            get
            {
                if (null == fUsereditableTexText)
                {
                    fUsereditableTexText = new Text("UsereditableTexText", UsereditableCheCheckBox);
                    fUsereditableTexText.UIMap.Scope = UIASeachScope.Children;
                    fUsereditableTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUsereditableTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User editable");
                }

                return fUsereditableTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ExampleText8495Text
        {
            get
            {
                if (null == fExampleText8495Text)
                {
                    fExampleText8495Text = new Text("ExampleText8495Text", FileSettingsGroGroup);
                    fExampleText8495Text.UIMap.Scope = UIASeachScope.Children;
                    fExampleText8495Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fExampleText8495Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84951e43-1831-487e-9555-cd44c83b9dee");
                    fExampleText8495Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Example");
                }

                return fExampleText8495Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ExampleTextBlocText
        {
            get
            {
                if (null == fExampleTextBlocText)
                {
                    fExampleTextBlocText = new Text("ExampleTextBlocText", ExampleText8495Text);
                    fExampleTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fExampleTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fExampleTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Example");
                }

                return fExampleTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBoxc35a7c75Edit
        {
            get
            {
                if (null == fTextBoxc35a7c75Edit)
                {
                    fTextBoxc35a7c75Edit = new Edit("TextBoxc35a7c75Edit", FileSettingsGroGroup);
                    fTextBoxc35a7c75Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxc35a7c75Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBoxc35a7c75Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c35a7c75-01cb-480b-a43e-796133fbb93d");
                }

                return fTextBoxc35a7c75Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup4Pane
        {
            get
            {
                if (null == fScrollViewerPARDup4Pane)
                {
                    fScrollViewerPARDup4Pane = new Pane("ScrollViewerPARDup4Pane", TextBoxc35a7c75Edit);
                    fScrollViewerPARDup4Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup4Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup5ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup5ScrollBar)
                {
                    fScrollBarVerticDup5ScrollBar = new ScrollBar("ScrollBarVerticDup5ScrollBar", ScrollViewerPARDup4Pane);
                    fScrollBarVerticDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup5ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup5ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup5ScrollBar)
                {
                    fScrollBarHorizoDup5ScrollBar = new ScrollBar("ScrollBarHorizoDup5ScrollBar", ScrollViewerPARDup4Pane);
                    fScrollBarHorizoDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup5ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FileNameSuffixTDup0Text
        {
            get
            {
                if (null == fFileNameSuffixTDup0Text)
                {
                    fFileNameSuffixTDup0Text = new Text("FileNameSuffixTDup0Text", FileSettingsGroGroup);
                    fFileNameSuffixTDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fFileNameSuffixTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFileNameSuffixTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"d89da87b-c7ce-4861-bba8-50baa01ccd08");
                    fFileNameSuffixTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Name Suffix");
                }

                return fFileNameSuffixTDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FileNameSuffixTDup1Text
        {
            get
            {
                if (null == fFileNameSuffixTDup1Text)
                {
                    fFileNameSuffixTDup1Text = new Text("FileNameSuffixTDup1Text", FileNameSuffixTDup0Text);
                    fFileNameSuffixTDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fFileNameSuffixTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFileNameSuffixTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Name Suffix");
                }

                return fFileNameSuffixTDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit TextBox4429f27eEdit
        {
            get
            {
                if (null == fTextBox4429f27eEdit)
                {
                    fTextBox4429f27eEdit = new Edit("TextBox4429f27eEdit", FileSettingsGroGroup);
                    fTextBox4429f27eEdit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox4429f27eEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                    fTextBox4429f27eEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4429f27e-e112-4c36-a258-f6e76010cb13");
                }

                return fTextBox4429f27eEdit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Pane ScrollViewerPARDup5Pane
        {
            get
            {
                if (null == fScrollViewerPARDup5Pane)
                {
                    fScrollViewerPARDup5Pane = new Pane("ScrollViewerPARDup5Pane", TextBox4429f27eEdit);
                    fScrollViewerPARDup5Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                    fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                }

                return fScrollViewerPARDup5Pane;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup6ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup6ScrollBar)
                {
                    fScrollBarVerticDup6ScrollBar = new ScrollBar("ScrollBarVerticDup6ScrollBar", ScrollViewerPARDup5Pane);
                    fScrollBarVerticDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup6ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup6ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup6ScrollBar)
                {
                    fScrollBarHorizoDup6ScrollBar = new ScrollBar("ScrollBarHorizoDup6ScrollBar", ScrollViewerPARDup5Pane);
                    fScrollBarHorizoDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup6ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Group Expandera8aefecGroup
        {
            get
            {
                if (null == fExpandera8aefecGroup)
                {
                    fExpandera8aefecGroup = new Group("Expandera8aefecGroup", FileSettingsGroGroup);
                    fExpandera8aefecGroup.UIMap.Scope = UIASeachScope.Children;
                    fExpandera8aefecGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Expander");
                    fExpandera8aefecGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a8aefecf-890e-4993-b9ef-cdab41021f2c");
                }

                return fExpandera8aefecGroup;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ButtonHeaderSitDup1Button
        {
            get
            {
                if (null == fButtonHeaderSitDup1Button)
                {
                    fButtonHeaderSitDup1Button = new Button("ButtonHeaderSitDup1Button", Expandera8aefecGroup);
                    fButtonHeaderSitDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fButtonHeaderSitDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonHeaderSitDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HeaderSite");
                }

                return fButtonHeaderSitDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotusereditableDup2Text
        {
            get
            {
                if (null == fNotusereditableDup2Text)
                {
                    fNotusereditableDup2Text = new Text("NotusereditableDup2Text", FileSettingsGroGroup);
                    fNotusereditableDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fNotusereditableDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fNotusereditableDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84951e43-1831-487e-9555-cd44c83b9dee");
                    fNotusereditableDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Not user editable");
                }

                return fNotusereditableDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NotusereditableDup3Text
        {
            get
            {
                if (null == fNotusereditableDup3Text)
                {
                    fNotusereditableDup3Text = new Text("NotusereditableDup3Text", NotusereditableDup2Text);
                    fNotusereditableDup3Text.UIMap.Scope = UIASeachScope.Children;
                    fNotusereditableDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNotusereditableDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Not user editable");
                }

                return fNotusereditableDup3Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultColorPreDup0Text
        {
            get
            {
                if (null == fDefaultColorPreDup0Text)
                {
                    fDefaultColorPreDup0Text = new Text("DefaultColorPreDup0Text", FileSettingsGroGroup);
                    fDefaultColorPreDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultColorPreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDefaultColorPreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"41b5703f-e401-4aef-9e64-574f66b8cced");
                    fDefaultColorPreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Color Preference");
                }

                return fDefaultColorPreDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultColorPreDup1Text
        {
            get
            {
                if (null == fDefaultColorPreDup1Text)
                {
                    fDefaultColorPreDup1Text = new Text("DefaultColorPreDup1Text", DefaultColorPreDup0Text);
                    fDefaultColorPreDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultColorPreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDefaultColorPreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Color Preference");
                }

                return fDefaultColorPreDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox547be0aComboBox
        {
            get
            {
                if (null == fComboBox547be0aComboBox)
                {
                    fComboBox547be0aComboBox = new ComboBox("ComboBox547be0aComboBox", FileSettingsGroGroup);
                    fComboBox547be0aComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox547be0aComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox547be0aComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"547be0ae-f0ce-4fe1-b251-cc7a71a3ada5");
                }

                return fComboBox547be0aComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox ScaninBlackwhenCheckBox
        {
            get
            {
                if (null == fScaninBlackwhenCheckBox)
                {
                    fScaninBlackwhenCheckBox = new CheckBox("ScaninBlackwhenCheckBox", FileSettingsGroGroup);
                    fScaninBlackwhenCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fScaninBlackwhenCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fScaninBlackwhenCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"28EAA22F-C046-4401-A58A-F3705C6FDAAD");
                    fScaninBlackwhenCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan in Black when color is not detected");
                }

                return fScaninBlackwhenCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ScaninBlackwhenText
        {
            get
            {
                if (null == fScaninBlackwhenText)
                {
                    fScaninBlackwhenText = new Text("ScaninBlackwhenText", ScaninBlackwhenCheckBox);
                    fScaninBlackwhenText.UIMap.Scope = UIASeachScope.Children;
                    fScaninBlackwhenText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fScaninBlackwhenText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan in Black when color is not detected");
                }

                return fScaninBlackwhenText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text InAutomaticallyText
        {
            get
            {
                if (null == fInAutomaticallyText)
                {
                    fInAutomaticallyText = new Text("InAutomaticallyText", FileSettingsGroGroup);
                    fInAutomaticallyText.UIMap.Scope = UIASeachScope.Children;
                    fInAutomaticallyText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fInAutomaticallyText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"In Automatically detect mode, mono pages will be scanned in black-and-white. If disabled, or if current file settings do not allow black scanning, then pages will be scanned in grayscale");
                }

                return fInAutomaticallyText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultOutputQuDup0Text
        {
            get
            {
                if (null == fDefaultOutputQuDup0Text)
                {
                    fDefaultOutputQuDup0Text = new Text("DefaultOutputQuDup0Text", FileSettingsGroGroup);
                    fDefaultOutputQuDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultOutputQuDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDefaultOutputQuDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"d22e8768-c479-490c-ba28-5ce8ee30fed0");
                    fDefaultOutputQuDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Output Quality");
                }

                return fDefaultOutputQuDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultOutputQuDup1Text
        {
            get
            {
                if (null == fDefaultOutputQuDup1Text)
                {
                    fDefaultOutputQuDup1Text = new Text("DefaultOutputQuDup1Text", DefaultOutputQuDup0Text);
                    fDefaultOutputQuDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultOutputQuDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDefaultOutputQuDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Output Quality");
                }

                return fDefaultOutputQuDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox31f0825ComboBox
        {
            get
            {
                if (null == fComboBox31f0825ComboBox)
                {
                    fComboBox31f0825ComboBox = new ComboBox("ComboBox31f0825ComboBox", FileSettingsGroGroup);
                    fComboBox31f0825ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox31f0825ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox31f0825ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"31f08255-5a1c-439f-a0ea-1b23b538cfdb");
                }

                return fComboBox31f0825ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox EnableOCRCheckBCheckBox
        {
            get
            {
                if (null == fEnableOCRCheckBCheckBox)
                {
                    fEnableOCRCheckBCheckBox = new CheckBox("EnableOCRCheckBCheckBox", FileSettingsGroGroup);
                    fEnableOCRCheckBCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEnableOCRCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fEnableOCRCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"25657C03-FE61-4E8A-963A-DD5F66E3CA35");
                    fEnableOCRCheckBCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable OCR");
                }

                return fEnableOCRCheckBCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EnableOCRTextBlText
        {
            get
            {
                if (null == fEnableOCRTextBlText)
                {
                    fEnableOCRTextBlText = new Text("EnableOCRTextBlText", EnableOCRCheckBCheckBox);
                    fEnableOCRTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fEnableOCRTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEnableOCRTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable OCR");
                }

                return fEnableOCRTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AllowusertospecText
        {
            get
            {
                if (null == fAllowusertospecText)
                {
                    fAllowusertospecText = new Text("AllowusertospecText", FileSettingsGroGroup);
                    fAllowusertospecText.UIMap.Scope = UIASeachScope.Children;
                    fAllowusertospecText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAllowusertospecText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5E1C1615-CF6F-4256-B60E-00F4570F7E22");
                    fAllowusertospecText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Allow user to specify OCR type");
                }

                return fAllowusertospecText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultResolutiDup0Text
        {
            get
            {
                if (null == fDefaultResolutiDup0Text)
                {
                    fDefaultResolutiDup0Text = new Text("DefaultResolutiDup0Text", FileSettingsGroGroup);
                    fDefaultResolutiDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultResolutiDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDefaultResolutiDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f26151e3-c1ec-4a28-ae7c-20e58f01a55a");
                    fDefaultResolutiDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Resolution");
                }

                return fDefaultResolutiDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultResolutiDup1Text
        {
            get
            {
                if (null == fDefaultResolutiDup1Text)
                {
                    fDefaultResolutiDup1Text = new Text("DefaultResolutiDup1Text", DefaultResolutiDup0Text);
                    fDefaultResolutiDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultResolutiDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDefaultResolutiDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default Resolution");
                }

                return fDefaultResolutiDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxe2c4831ComboBox
        {
            get
            {
                if (null == fComboBoxe2c4831ComboBox)
                {
                    fComboBoxe2c4831ComboBox = new ComboBox("ComboBoxe2c4831ComboBox", FileSettingsGroGroup);
                    fComboBoxe2c4831ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxe2c4831ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxe2c4831ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e2c48317-3c08-4bf9-9501-f59bca7d2d84");
                }

                return fComboBoxe2c4831ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CompressionTextDup0Text
        {
            get
            {
                if (null == fCompressionTextDup0Text)
                {
                    fCompressionTextDup0Text = new Text("CompressionTextDup0Text", FileSettingsGroGroup);
                    fCompressionTextDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fCompressionTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fCompressionTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"92751099-3e9b-46f0-9152-de55cae98b8a");
                    fCompressionTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Compression");
                }

                return fCompressionTextDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CompressionTextDup1Text
        {
            get
            {
                if (null == fCompressionTextDup1Text)
                {
                    fCompressionTextDup1Text = new Text("CompressionTextDup1Text", CompressionTextDup0Text);
                    fCompressionTextDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fCompressionTextDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCompressionTextDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Compression");
                }

                return fCompressionTextDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBoxdc9d38eComboBox
        {
            get
            {
                if (null == fComboBoxdc9d38eComboBox)
                {
                    fComboBoxdc9d38eComboBox = new ComboBox("ComboBoxdc9d38eComboBox", FileSettingsGroGroup);
                    fComboBoxdc9d38eComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBoxdc9d38eComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBoxdc9d38eComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"dc9d38e4-8e77-4c67-811d-ba76a90bdca2");
                }

                return fComboBoxdc9d38eComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultFileTypeDup0Text
        {
            get
            {
                if (null == fDefaultFileTypeDup0Text)
                {
                    fDefaultFileTypeDup0Text = new Text("DefaultFileTypeDup0Text", FileSettingsGroGroup);
                    fDefaultFileTypeDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultFileTypeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDefaultFileTypeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e288e486-fc1c-4627-868b-bbd7faef11a1");
                    fDefaultFileTypeDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default File Type");
                }

                return fDefaultFileTypeDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultFileTypeDup1Text
        {
            get
            {
                if (null == fDefaultFileTypeDup1Text)
                {
                    fDefaultFileTypeDup1Text = new Text("DefaultFileTypeDup1Text", DefaultFileTypeDup0Text);
                    fDefaultFileTypeDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDefaultFileTypeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDefaultFileTypeDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default File Type");
                }

                return fDefaultFileTypeDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox8e5b7c2ComboBox
        {
            get
            {
                if (null == fComboBox8e5b7c2ComboBox)
                {
                    fComboBox8e5b7c2ComboBox = new ComboBox("ComboBox8e5b7c2ComboBox", FileSettingsGroGroup);
                    fComboBox8e5b7c2ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox8e5b7c2ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox8e5b7c2ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8e5b7c2b-1f0b-47b2-aeb4-a1e42336dd4a");
                }

                return fComboBox8e5b7c2ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text BlackTIFFCompreDup0Text
        {
            get
            {
                if (null == fBlackTIFFCompreDup0Text)
                {
                    fBlackTIFFCompreDup0Text = new Text("BlackTIFFCompreDup0Text", FileSettingsGroGroup);
                    fBlackTIFFCompreDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fBlackTIFFCompreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fBlackTIFFCompreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4d337951-0c3d-4071-a79a-31ac0381d41d");
                    fBlackTIFFCompreDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Black TIFF Compression");
                }

                return fBlackTIFFCompreDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text BlackTIFFCompreDup1Text
        {
            get
            {
                if (null == fBlackTIFFCompreDup1Text)
                {
                    fBlackTIFFCompreDup1Text = new Text("BlackTIFFCompreDup1Text", BlackTIFFCompreDup0Text);
                    fBlackTIFFCompreDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fBlackTIFFCompreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fBlackTIFFCompreDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Black TIFF Compression");
                }

                return fBlackTIFFCompreDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox5799930ComboBox
        {
            get
            {
                if (null == fComboBox5799930ComboBox)
                {
                    fComboBox5799930ComboBox = new ComboBox("ComboBox5799930ComboBox", FileSettingsGroGroup);
                    fComboBox5799930ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox5799930ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox5799930ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"57999300-dd31-4131-affa-331711392075");
                }

                return fComboBox5799930ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ColorGrayscaleTDup0Text
        {
            get
            {
                if (null == fColorGrayscaleTDup0Text)
                {
                    fColorGrayscaleTDup0Text = new Text("ColorGrayscaleTDup0Text", FileSettingsGroGroup);
                    fColorGrayscaleTDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fColorGrayscaleTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fColorGrayscaleTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4a76ddb2-5bdd-43a7-b0e6-1a73149a2848");
                    fColorGrayscaleTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Color/Grayscale TIFF Compression");
                }

                return fColorGrayscaleTDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ColorGrayscaleTDup1Text
        {
            get
            {
                if (null == fColorGrayscaleTDup1Text)
                {
                    fColorGrayscaleTDup1Text = new Text("ColorGrayscaleTDup1Text", ColorGrayscaleTDup0Text);
                    fColorGrayscaleTDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fColorGrayscaleTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fColorGrayscaleTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Color/Grayscale TIFF Compression");
                }

                return fColorGrayscaleTDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox64b9b9bComboBox
        {
            get
            {
                if (null == fComboBox64b9b9bComboBox)
                {
                    fComboBox64b9b9bComboBox = new ComboBox("ComboBox64b9b9bComboBox", FileSettingsGroGroup);
                    fComboBox64b9b9bComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox64b9b9bComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox64b9b9bComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"64b9b9ba-312d-43d3-8ba2-e7946ac743e9");
                }

                return fComboBox64b9b9bComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DefaultOCRLanguText
        {
            get
            {
                if (null == fDefaultOCRLanguText)
                {
                    fDefaultOCRLanguText = new Text("DefaultOCRLanguText", FileSettingsGroGroup);
                    fDefaultOCRLanguText.UIMap.Scope = UIASeachScope.Children;
                    fDefaultOCRLanguText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDefaultOCRLanguText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Default OCR Language");
                }

                return fDefaultOCRLanguText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox ComboBox3A1FC43ComboBox
        {
            get
            {
                if (null == fComboBox3A1FC43ComboBox)
                {
                    fComboBox3A1FC43ComboBox = new ComboBox("ComboBox3A1FC43ComboBox", FileSettingsGroGroup);
                    fComboBox3A1FC43ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fComboBox3A1FC43ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fComboBox3A1FC43ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3A1FC43B-B436-447f-8413-FF6A8B5DB7C0");
                }

                return fComboBox3A1FC43ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox PDFEncryptionChCheckBox
        {
            get
            {
                if (null == fPDFEncryptionChCheckBox)
                {
                    fPDFEncryptionChCheckBox = new CheckBox("PDFEncryptionChCheckBox", FileSettingsGroGroup);
                    fPDFEncryptionChCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fPDFEncryptionChCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fPDFEncryptionChCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a9b9eccc-3f56-46df-bf47-798ca73e237b");
                    fPDFEncryptionChCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"PDF Encryption");
                }

                return fPDFEncryptionChCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text PDFEncryptionTeText
        {
            get
            {
                if (null == fPDFEncryptionTeText)
                {
                    fPDFEncryptionTeText = new Text("PDFEncryptionTeText", PDFEncryptionChCheckBox);
                    fPDFEncryptionTeText.UIMap.Scope = UIASeachScope.Children;
                    fPDFEncryptionTeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fPDFEncryptionTeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"PDF Encryption");
                }

                return fPDFEncryptionTeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text UserwillbeprompText
        {
            get
            {
                if (null == fUserwillbeprompText)
                {
                    fUserwillbeprompText = new Text("UserwillbeprompText", FileSettingsGroGroup);
                    fUserwillbeprompText.UIMap.Scope = UIASeachScope.Children;
                    fUserwillbeprompText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fUserwillbeprompText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"User will be prompted to enter a password to encrypt the PDF when sending or saving the file.");
                }

                return fUserwillbeprompText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public CheckBox EnableBlankPageCheckBox
        {
            get
            {
                if (null == fEnableBlankPageCheckBox)
                {
                    fEnableBlankPageCheckBox = new CheckBox("EnableBlankPageCheckBox", FileSettingsGroGroup);
                    fEnableBlankPageCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEnableBlankPageCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                    fEnableBlankPageCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b329fc4b-72c0-4d0f-90e9-77b58dd8a601");
                    fEnableBlankPageCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Blank Page Suppression");
                }

                return fEnableBlankPageCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EnableBlankPageText
        {
            get
            {
                if (null == fEnableBlankPageText)
                {
                    fEnableBlankPageText = new Text("EnableBlankPageText", EnableBlankPageCheckBox);
                    fEnableBlankPageText.UIMap.Scope = UIASeachScope.Children;
                    fEnableBlankPageText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEnableBlankPageText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Blank Page Suppression");
                }

                return fEnableBlankPageText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text BlankpageswithiText
        {
            get
            {
                if (null == fBlankpageswithiText)
                {
                    fBlankpageswithiText = new Text("BlankpageswithiText", FileSettingsGroGroup);
                    fBlankpageswithiText.UIMap.Scope = UIASeachScope.Children;
                    fBlankpageswithiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fBlankpageswithiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Blank pages within the original document are not saved.");
                }

                return fBlankpageswithiText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarVerticDup7ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup7ScrollBar)
                {
                    fScrollBarVerticDup7ScrollBar = new ScrollBar("ScrollBarVerticDup7ScrollBar", ScrollViewer296Pane);
                    fScrollBarVerticDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                }

                return fScrollBarVerticDup7ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RepeatButtonLinDup0Button
        {
            get
            {
                if (null == fRepeatButtonLinDup0Button)
                {
                    fRepeatButtonLinDup0Button = new Button("RepeatButtonLinDup0Button", ScrollBarVerticDup7ScrollBar);
                    fRepeatButtonLinDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonLinDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonLinDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LineUp");
                }

                return fRepeatButtonLinDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RepeatButtonPagDup0Button
        {
            get
            {
                if (null == fRepeatButtonPagDup0Button)
                {
                    fRepeatButtonPagDup0Button = new Button("RepeatButtonPagDup0Button", ScrollBarVerticDup7ScrollBar);
                    fRepeatButtonPagDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageUp");
                }

                return fRepeatButtonPagDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RepeatButtonPagDup1Button
        {
            get
            {
                if (null == fRepeatButtonPagDup1Button)
                {
                    fRepeatButtonPagDup1Button = new Button("RepeatButtonPagDup1Button", ScrollBarVerticDup7ScrollBar);
                    fRepeatButtonPagDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageDown");
                }

                return fRepeatButtonPagDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbThumb
        {
            get
            {
                if (null == fThumbThumb)
                {
                    fThumbThumb = new Thumb("ThumbThumb", ScrollBarVerticDup7ScrollBar);
                    fThumbThumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbThumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RepeatButtonLinDup1Button
        {
            get
            {
                if (null == fRepeatButtonLinDup1Button)
                {
                    fRepeatButtonLinDup1Button = new Button("RepeatButtonLinDup1Button", ScrollBarVerticDup7ScrollBar);
                    fRepeatButtonLinDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonLinDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                    fRepeatButtonLinDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LineDown");
                }

                return fRepeatButtonLinDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ScrollBar ScrollBarHorizoDup7ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup7ScrollBar)
                {
                    fScrollBarHorizoDup7ScrollBar = new ScrollBar("ScrollBarHorizoDup7ScrollBar", ScrollViewer296Pane);
                    fScrollBarHorizoDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                    fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                }

                return fScrollBarHorizoDup7ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup5TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup5TabItem)
                {
                    fSystemWindowsCoDup5TabItem = new TabItem("SystemWindowsCoDup5TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup5TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"72389cc4-0879-48a1-94ae-3f27e4f6ebf4");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup5TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoWorkflowsDup0Text
        {
            get
            {
                if (null == fSendtoWorkflowsDup0Text)
                {
                    fSendtoWorkflowsDup0Text = new Text("SendtoWorkflowsDup0Text", SystemWindowsCoDup5TabItem);
                    fSendtoWorkflowsDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoWorkflowsDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoWorkflowsDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                    fSendtoWorkflowsDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Workflows");
                }

                return fSendtoWorkflowsDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoWorkflowsDup1Text
        {
            get
            {
                if (null == fSendtoWorkflowsDup1Text)
                {
                    fSendtoWorkflowsDup1Text = new Text("SendtoWorkflowsDup1Text", SendtoWorkflowsDup0Text);
                    fSendtoWorkflowsDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoWorkflowsDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoWorkflowsDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Workflows");
                }

                return fSendtoWorkflowsDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextAA63352F914Text
        {
            get
            {
                if (null == fTextAA63352F914Text)
                {
                    fTextAA63352F914Text = new Text("TextAA63352F914Text", SystemWindowsCoDup5TabItem);
                    fTextAA63352F914Text.UIMap.Scope = UIASeachScope.Children;
                    fTextAA63352F914Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextAA63352F914Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AA63352F-9148-41b9-AED8-B26A079FCA6A");
                    fTextAA63352F914Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTextAA63352F914Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextBlockDup1Text
        {
            get
            {
                if (null == fTextBlockDup1Text)
                {
                    fTextBlockDup1Text = new Text("TextBlockDup1Text", TextAA63352F914Text);
                    fTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextB31E1B768A7Text
        {
            get
            {
                if (null == fTextB31E1B768A7Text)
                {
                    fTextB31E1B768A7Text = new Text("TextB31E1B768A7Text", SystemWindowsCoDup5TabItem);
                    fTextB31E1B768A7Text.UIMap.Scope = UIASeachScope.Children;
                    fTextB31E1B768A7Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextB31E1B768A7Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"B31E1B76-8A70-407b-B844-637C1737D8A0");
                    fTextB31E1B768A7Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextB31E1B768A7Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextBlockDup2Text
        {
            get
            {
                if (null == fTextBlockDup2Text)
                {
                    fTextBlockDup2Text = new Text("TextBlockDup2Text", TextB31E1B768A7Text);
                    fTextBlockDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextBlockDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ProgressBar ProgressBar55dfProgressBar
        {
            get
            {
                if (null == fProgressBar55dfProgressBar)
                {
                    fProgressBar55dfProgressBar = new ProgressBar("ProgressBar55dfProgressBar", SystemWindowsCoDup5TabItem);
                    fProgressBar55dfProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBar55dfProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBar55dfProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"55df71ad-b53b-46b8-95fc-ab4433bec7b4");
                }

                return fProgressBar55dfProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup6TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup6TabItem)
                {
                    fSystemWindowsCoDup6TabItem = new TabItem("SystemWindowsCoDup6TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup6TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2392b462-3286-4dd1-9fb7-c962c43de01a");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup6TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup7TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup7TabItem)
                {
                    fSystemWindowsCoDup7TabItem = new TabItem("SystemWindowsCoDup7TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup7TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2c39648c-5b8c-4a4a-8403-9204bab8f86a");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup7TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddressingTextmDup0Text
        {
            get
            {
                if (null == fAddressingTextmDup0Text)
                {
                    fAddressingTextmDup0Text = new Text("AddressingTextmDup0Text", SystemWindowsCoDup7TabItem);
                    fAddressingTextmDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextmDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAddressingTextmDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                    fAddressingTextmDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextmDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddressingTextBDup0Text
        {
            get
            {
                if (null == fAddressingTextBDup0Text)
                {
                    fAddressingTextBDup0Text = new Text("AddressingTextBDup0Text", AddressingTextmDup0Text);
                    fAddressingTextBDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextBDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddressingTextBDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextBDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text7a57f43ecb1Dup0Text
        {
            get
            {
                if (null == fText7a57f43ecb1Dup0Text)
                {
                    fText7a57f43ecb1Dup0Text = new Text("Text7a57f43ecb1Dup0Text", SystemWindowsCoDup7TabItem);
                    fText7a57f43ecb1Dup0Text.UIMap.Scope = UIASeachScope.Children;
                    fText7a57f43ecb1Dup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7a57f43ecb1Dup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                    fText7a57f43ecb1Dup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText7a57f43ecb1Dup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text654b650dd19Dup0Text
        {
            get
            {
                if (null == fText654b650dd19Dup0Text)
                {
                    fText654b650dd19Dup0Text = new Text("Text654b650dd19Dup0Text", SystemWindowsCoDup7TabItem);
                    fText654b650dd19Dup0Text.UIMap.Scope = UIASeachScope.Children;
                    fText654b650dd19Dup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText654b650dd19Dup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                    fText654b650dd19Dup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText654b650dd19Dup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ProgressBar ProgressBar15a0ProgressBar
        {
            get
            {
                if (null == fProgressBar15a0ProgressBar)
                {
                    fProgressBar15a0ProgressBar = new ProgressBar("ProgressBar15a0ProgressBar", SystemWindowsCoDup7TabItem);
                    fProgressBar15a0ProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBar15a0ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBar15a0ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"15a0e097-7457-4429-ad09-7faad221b9da");
                }

                return fProgressBar15a0ProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup8TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup8TabItem)
                {
                    fSystemWindowsCoDup8TabItem = new TabItem("SystemWindowsCoDup8TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup8TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C5AD81FA-F1DA-466c-96FD-190B67B3FB49");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup8TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text LogTextmLogTabLText
        {
            get
            {
                if (null == fLogTextmLogTabLText)
                {
                    fLogTextmLogTabLText = new Text("LogTextmLogTabLText", SystemWindowsCoDup8TabItem);
                    fLogTextmLogTabLText.UIMap.Scope = UIASeachScope.Children;
                    fLogTextmLogTabLText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fLogTextmLogTabLText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mLogTabLabel");
                    fLogTextmLogTabLText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTextmLogTabLText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text LogTextBlockDup0Text
        {
            get
            {
                if (null == fLogTextBlockDup0Text)
                {
                    fLogTextBlockDup0Text = new Text("LogTextBlockDup0Text", LogTextmLogTabLText);
                    fLogTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fLogTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLogTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ProgressBar ProgressBarA997ProgressBar
        {
            get
            {
                if (null == fProgressBarA997ProgressBar)
                {
                    fProgressBarA997ProgressBar = new ProgressBar("ProgressBarA997ProgressBar", SystemWindowsCoDup8TabItem);
                    fProgressBarA997ProgressBar.UIMap.Scope = UIASeachScope.Children;
                    fProgressBarA997ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ProgressBar");
                    fProgressBarA997ProgressBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A99714B6-EFB6-4249-BE44-2C003700270A");
                }

                return fProgressBarA997ProgressBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup9TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup9TabItem)
                {
                    fSystemWindowsCoDup9TabItem = new TabItem("SystemWindowsCoDup9TabItem", TabControl2111BTab);
                    fSystemWindowsCoDup9TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup9TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup9TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"cf949d55-8696-4f80-9cf7-0478eedc98e0");
                    fSystemWindowsCoDup9TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup9TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TitleBar HPDigitalSendinTitleBar
        {
            get
            {
                if (null == fHPDigitalSendinTitleBar)
                {
                    fHPDigitalSendinTitleBar = new TitleBar("HPDigitalSendinTitleBar", HPDigitalSendinWindow);
                    fHPDigitalSendinTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Digital Sending Software Configuration (Server IP Address: 10.11.15.148)");
                }

                return fHPDigitalSendinTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuBar SystemMenuBarSyDup1MenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyDup1MenuBar)
                {
                    fSystemMenuBarSyDup1MenuBar = new MenuBar("SystemMenuBarSyDup1MenuBar", HPDigitalSendinTitleBar);
                    fSystemMenuBarSyDup1MenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                }

                return fSystemMenuBarSyDup1MenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuItem SystemItem1Dup1MenuItem
        {
            get
            {
                if (null == fSystemItem1Dup1MenuItem)
                {
                    fSystemItem1Dup1MenuItem = new MenuItem("SystemItem1Dup1MenuItem", SystemMenuBarSyDup1MenuBar);
                    fSystemItem1Dup1MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                }

                return fSystemItem1Dup1MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button MinimizeMinimizDup1Button
        {
            get
            {
                if (null == fMinimizeMinimizDup1Button)
                {
                    fMinimizeMinimizDup1Button = new Button("MinimizeMinimizDup1Button", HPDigitalSendinTitleBar);
                    fMinimizeMinimizDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                    fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                }

                return fMinimizeMinimizDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button MaximizeMaximizDup1Button
        {
            get
            {
                if (null == fMaximizeMaximizDup1Button)
                {
                    fMaximizeMaximizDup1Button = new Button("MaximizeMaximizDup1Button", HPDigitalSendinTitleBar);
                    fMaximizeMaximizDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                    fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                }

                return fMaximizeMaximizDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CloseCloseDup1Button
        {
            get
            {
                if (null == fCloseCloseDup1Button)
                {
                    fCloseCloseDup1Button = new Button("CloseCloseDup1Button", HPDigitalSendinTitleBar);
                    fCloseCloseDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                }

                return fCloseCloseDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button HelpButtonCB8CFButton
        {
            get
            {
                if (null == fHelpButtonCB8CFButton)
                {
                    fHelpButtonCB8CFButton = new Button("HelpButtonCB8CFButton", HPDigitalSendinWindow);
                    fHelpButtonCB8CFButton.UIMap.Scope = UIASeachScope.Children;
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CB8CF0C3-DFBE-49b8-B09B-03A34F5D4186");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpButtonCB8CFButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text HelpTextBlockDup1Text
        {
            get
            {
                if (null == fHelpTextBlockDup1Text)
                {
                    fHelpTextBlockDup1Text = new Text("HelpTextBlockDup1Text", HelpButtonCB8CFButton);
                    fHelpTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fHelpTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHelpTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                }

                return fHelpTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ApplyButton61E2Button
        {
            get
            {
                if (null == fApplyButton61E2Button)
                {
                    fApplyButton61E2Button = new Button("ApplyButton61E2Button", HPDigitalSendinWindow);
                    fApplyButton61E2Button.UIMap.Scope = UIASeachScope.Children;
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"61E2369B-F53B-4662-A361-B3034C4EFF67");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyButton61E2Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ApplyTextBlockDup1Text
        {
            get
            {
                if (null == fApplyTextBlockDup1Text)
                {
                    fApplyTextBlockDup1Text = new Text("ApplyTextBlockDup1Text", ApplyButton61E2Button);
                    fApplyTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fApplyTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fApplyTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CancelButton65CButton
        {
            get
            {
                if (null == fCancelButton65CButton)
                {
                    fCancelButton65CButton = new Button("CancelButton65CButton", HPDigitalSendinWindow);
                    fCancelButton65CButton.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"65C76204-7AB5-4681-B7FD-2D8F02DA6D4B");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelButton65CButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CancelTextBlockDup1Text
        {
            get
            {
                if (null == fCancelTextBlockDup1Text)
                {
                    fCancelTextBlockDup1Text = new Text("CancelTextBlockDup1Text", CancelButton65CButton);
                    fCancelTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fCancelTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCancelTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button OKButtonCC2EF49Button
        {
            get
            {
                if (null == fOKButtonCC2EF49Button)
                {
                    fOKButtonCC2EF49Button = new Button("OKButtonCC2EF49Button", HPDigitalSendinWindow);
                    fOKButtonCC2EF49Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CC2EF491-0BD1-4ac5-9D00-AA61A9D6BA0C");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKButtonCC2EF49Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text OKTextBlockDup1Text
        {
            get
            {
                if (null == fOKTextBlockDup1Text)
                {
                    fOKTextBlockDup1Text = new Text("OKTextBlockDup1Text", OKButtonCC2EF49Button);
                    fOKTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Tab TabControlec0fdTab
        {
            get
            {
                if (null == fTabControlec0fdTab)
                {
                    fTabControlec0fdTab = new Tab("TabControlec0fdTab", HPDigitalSendinWindow);
                    fTabControlec0fdTab.UIMap.Scope = UIASeachScope.Children;
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ec0fd6cd-2ab8-482f-96a5-d1fa158f38d1");
                }

                return fTabControlec0fdTab;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup10TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup10TabItem)
                {
                    fSystemWindowsCoDup10TabItem = new TabItem("SystemWindowsCoDup10TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup10TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup10TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup10TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1e2be878-0c03-4404-988c-54d0df925f0f");
                    fSystemWindowsCoDup10TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup10TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GeneralTextmGenDup1Text
        {
            get
            {
                if (null == fGeneralTextmGenDup1Text)
                {
                    fGeneralTextmGenDup1Text = new Text("GeneralTextmGenDup1Text", SystemWindowsCoDup10TabItem);
                    fGeneralTextmGenDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextmGenDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGeneralTextmGenDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                    fGeneralTextmGenDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextmGenDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GeneralTextBlocDup1Text
        {
            get
            {
                if (null == fGeneralTextBlocDup1Text)
                {
                    fGeneralTextBlocDup1Text = new Text("GeneralTextBlocDup1Text", GeneralTextmGenDup1Text);
                    fGeneralTextBlocDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextBlocDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGeneralTextBlocDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                }

                return fGeneralTextBlocDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text933345b04e3Text
        {
            get
            {
                if (null == fText933345b04e3Text)
                {
                    fText933345b04e3Text = new Text("Text933345b04e3Text", SystemWindowsCoDup10TabItem);
                    fText933345b04e3Text.UIMap.Scope = UIASeachScope.Children;
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"933345b0-4e39-44d3-a511-0077f3176ca4");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText933345b04e3Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text786caf67344Text
        {
            get
            {
                if (null == fText786caf67344Text)
                {
                    fText786caf67344Text = new Text("Text786caf67344Text", SystemWindowsCoDup10TabItem);
                    fText786caf67344Text.UIMap.Scope = UIASeachScope.Children;
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"786caf67-344f-4ddc-83a5-b9431fb36731");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText786caf67344Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup11TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup11TabItem)
                {
                    fSystemWindowsCoDup11TabItem = new TabItem("SystemWindowsCoDup11TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup11TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup11TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup11TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4e90d18a-f33c-43c0-8505-08f4a17169b5");
                    fSystemWindowsCoDup11TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup11TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AuthenticationTDup2Text
        {
            get
            {
                if (null == fAuthenticationTDup2Text)
                {
                    fAuthenticationTDup2Text = new Text("AuthenticationTDup2Text", SystemWindowsCoDup11TabItem);
                    fAuthenticationTDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAuthenticationTDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                    fAuthenticationTDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AuthenticationTDup3Text
        {
            get
            {
                if (null == fAuthenticationTDup3Text)
                {
                    fAuthenticationTDup3Text = new Text("AuthenticationTDup3Text", AuthenticationTDup2Text);
                    fAuthenticationTDup3Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAuthenticationTDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                }

                return fAuthenticationTDup3Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text31EC91730B9Text
        {
            get
            {
                if (null == fText31EC91730B9Text)
                {
                    fText31EC91730B9Text = new Text("Text31EC91730B9Text", SystemWindowsCoDup11TabItem);
                    fText31EC91730B9Text.UIMap.Scope = UIASeachScope.Children;
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"31EC9173-0B98-4d46-BC99-7DF8EA2BE02F");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText31EC91730B9Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextA479C271445Text
        {
            get
            {
                if (null == fTextA479C271445Text)
                {
                    fTextA479C271445Text = new Text("TextA479C271445Text", SystemWindowsCoDup11TabItem);
                    fTextA479C271445Text.UIMap.Scope = UIASeachScope.Children;
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A479C271-445D-43f1-864D-7503428703E4");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextA479C271445Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup12TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup12TabItem)
                {
                    fSystemWindowsCoDup12TabItem = new TabItem("SystemWindowsCoDup12TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup12TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup12TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup12TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33A07ED3-E1EE-411e-B583-7D0A3374100F");
                    fSystemWindowsCoDup12TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup12TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EmailTextmEmailText
        {
            get
            {
                if (null == fEmailTextmEmailText)
                {
                    fEmailTextmEmailText = new Text("EmailTextmEmailText", SystemWindowsCoDup12TabItem);
                    fEmailTextmEmailText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                }

                return fEmailTextmEmailText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text EmailTextBlockText
        {
            get
            {
                if (null == fEmailTextBlockText)
                {
                    fEmailTextBlockText = new Text("EmailTextBlockText", EmailTextmEmailText);
                    fEmailTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                }

                return fEmailTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text32de714a8bdText
        {
            get
            {
                if (null == fText32de714a8bdText)
                {
                    fText32de714a8bdText = new Text("Text32de714a8bdText", SystemWindowsCoDup12TabItem);
                    fText32de714a8bdText.UIMap.Scope = UIASeachScope.Children;
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"32de714a-8bda-4f11-bf20-b9a56b5f18bc");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText32de714a8bdText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text3b2a8761f4fText
        {
            get
            {
                if (null == fText3b2a8761f4fText)
                {
                    fText3b2a8761f4fText = new Text("Text3b2a8761f4fText", SystemWindowsCoDup12TabItem);
                    fText3b2a8761f4fText.UIMap.Scope = UIASeachScope.Children;
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3b2a8761-f4f6-41b1-b08c-9c33744bdc43");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText3b2a8761f4fText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextBlockDup3Text
        {
            get
            {
                if (null == fTextBlockDup3Text)
                {
                    fTextBlockDup3Text = new Text("TextBlockDup3Text", Text3b2a8761f4fText);
                    fTextBlockDup3Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextBlockDup3Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup13TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup13TabItem)
                {
                    fSystemWindowsCoDup13TabItem = new TabItem("SystemWindowsCoDup13TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup13TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup13TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup13TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4f116988-2b22-473f-bca3-094589a44954");
                    fSystemWindowsCoDup13TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup13TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FaxTextmFaxTabLDup1Text
        {
            get
            {
                if (null == fFaxTextmFaxTabLDup1Text)
                {
                    fFaxTextmFaxTabLDup1Text = new Text("FaxTextmFaxTabLDup1Text", SystemWindowsCoDup13TabItem);
                    fFaxTextmFaxTabLDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextmFaxTabLDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fFaxTextmFaxTabLDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                    fFaxTextmFaxTabLDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextmFaxTabLDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FaxTextBlockDup1Text
        {
            get
            {
                if (null == fFaxTextBlockDup1Text)
                {
                    fFaxTextBlockDup1Text = new Text("FaxTextBlockDup1Text", FaxTextmFaxTabLDup1Text);
                    fFaxTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFaxTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                }

                return fFaxTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextD1ED4F16F38Text
        {
            get
            {
                if (null == fTextD1ED4F16F38Text)
                {
                    fTextD1ED4F16F38Text = new Text("TextD1ED4F16F38Text", SystemWindowsCoDup13TabItem);
                    fTextD1ED4F16F38Text.UIMap.Scope = UIASeachScope.Children;
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D1ED4F16-F389-4dfd-A884-D258EDB48C11");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTextD1ED4F16F38Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text7DDE04FD251Text
        {
            get
            {
                if (null == fText7DDE04FD251Text)
                {
                    fText7DDE04FD251Text = new Text("Text7DDE04FD251Text", SystemWindowsCoDup13TabItem);
                    fText7DDE04FD251Text.UIMap.Scope = UIASeachScope.Children;
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7DDE04FD-2519-44c2-A212-67B0838E1C91");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText7DDE04FD251Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup14TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup14TabItem)
                {
                    fSystemWindowsCoDup14TabItem = new TabItem("SystemWindowsCoDup14TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup14TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup14TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup14TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ff96a045-6e12-4ce3-ba85-b65d16c39ffb");
                    fSystemWindowsCoDup14TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup14TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoFolderTexDup2Text
        {
            get
            {
                if (null == fSendtoFolderTexDup2Text)
                {
                    fSendtoFolderTexDup2Text = new Text("SendtoFolderTexDup2Text", SystemWindowsCoDup14TabItem);
                    fSendtoFolderTexDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSendtoFolderTexDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                    fSendtoFolderTexDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SendtoFolderTexDup3Text
        {
            get
            {
                if (null == fSendtoFolderTexDup3Text)
                {
                    fSendtoFolderTexDup3Text = new Text("SendtoFolderTexDup3Text", SendtoFolderTexDup2Text);
                    fSendtoFolderTexDup3Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSendtoFolderTexDup3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                }

                return fSendtoFolderTexDup3Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text7a57f43ecb1Dup1Text
        {
            get
            {
                if (null == fText7a57f43ecb1Dup1Text)
                {
                    fText7a57f43ecb1Dup1Text = new Text("Text7a57f43ecb1Dup1Text", SystemWindowsCoDup14TabItem);
                    fText7a57f43ecb1Dup1Text.UIMap.Scope = UIASeachScope.Children;
                    fText7a57f43ecb1Dup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText7a57f43ecb1Dup1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                    fText7a57f43ecb1Dup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText7a57f43ecb1Dup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text654b650dd19Dup1Text
        {
            get
            {
                if (null == fText654b650dd19Dup1Text)
                {
                    fText654b650dd19Dup1Text = new Text("Text654b650dd19Dup1Text", SystemWindowsCoDup14TabItem);
                    fText654b650dd19Dup1Text.UIMap.Scope = UIASeachScope.Children;
                    fText654b650dd19Dup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText654b650dd19Dup1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                    fText654b650dd19Dup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText654b650dd19Dup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup15TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup15TabItem)
                {
                    fSystemWindowsCoDup15TabItem = new TabItem("SystemWindowsCoDup15TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup15TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup15TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup15TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"38feb495-2893-4d8b-8961-31ebc2a3bd56");
                    fSystemWindowsCoDup15TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup15TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text WorkflowsTextmWText
        {
            get
            {
                if (null == fWorkflowsTextmWText)
                {
                    fWorkflowsTextmWText = new Text("WorkflowsTextmWText", SystemWindowsCoDup15TabItem);
                    fWorkflowsTextmWText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                }

                return fWorkflowsTextmWText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text WorkflowsTextBlText
        {
            get
            {
                if (null == fWorkflowsTextBlText)
                {
                    fWorkflowsTextBlText = new Text("WorkflowsTextBlText", WorkflowsTextmWText);
                    fWorkflowsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                }

                return fWorkflowsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text22D9C34E84CText
        {
            get
            {
                if (null == fText22D9C34E84CText)
                {
                    fText22D9C34E84CText = new Text("Text22D9C34E84CText", SystemWindowsCoDup15TabItem);
                    fText22D9C34E84CText.UIMap.Scope = UIASeachScope.Children;
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22D9C34E-84C8-4995-AC9E-5B46F8284284");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText22D9C34E84CText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextBlockDup4Text
        {
            get
            {
                if (null == fTextBlockDup4Text)
                {
                    fTextBlockDup4Text = new Text("TextBlockDup4Text", Text22D9C34E84CText);
                    fTextBlockDup4Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup4Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTextBlockDup4Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fTextBlockDup4Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextC8D15BD39C8Text
        {
            get
            {
                if (null == fTextC8D15BD39C8Text)
                {
                    fTextC8D15BD39C8Text = new Text("TextC8D15BD39C8Text", SystemWindowsCoDup15TabItem);
                    fTextC8D15BD39C8Text.UIMap.Scope = UIASeachScope.Children;
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C8D15BD3-9C8D-484c-A5E2-309CA8AA6C56");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fTextC8D15BD39C8Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup16TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup16TabItem)
                {
                    fSystemWindowsCoDup16TabItem = new TabItem("SystemWindowsCoDup16TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup16TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup16TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup16TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b8c06323-208e-4239-a523-a025661e0eab");
                    fSystemWindowsCoDup16TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup16TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddressingTextmDup1Text
        {
            get
            {
                if (null == fAddressingTextmDup1Text)
                {
                    fAddressingTextmDup1Text = new Text("AddressingTextmDup1Text", SystemWindowsCoDup16TabItem);
                    fAddressingTextmDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextmDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAddressingTextmDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                    fAddressingTextmDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextmDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddressingTextBDup1Text
        {
            get
            {
                if (null == fAddressingTextBDup1Text)
                {
                    fAddressingTextBDup1Text = new Text("AddressingTextBDup1Text", AddressingTextmDup1Text);
                    fAddressingTextBDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextBDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddressingTextBDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                }

                return fAddressingTextBDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text47EB5CBA4D1Text
        {
            get
            {
                if (null == fText47EB5CBA4D1Text)
                {
                    fText47EB5CBA4D1Text = new Text("Text47EB5CBA4D1Text", SystemWindowsCoDup16TabItem);
                    fText47EB5CBA4D1Text.UIMap.Scope = UIASeachScope.Children;
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"47EB5CBA-4D1C-4eee-AD64-E26BDA31A3AC");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText47EB5CBA4D1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text0757E148179Text
        {
            get
            {
                if (null == fText0757E148179Text)
                {
                    fText0757E148179Text = new Text("Text0757E148179Text", SystemWindowsCoDup16TabItem);
                    fText0757E148179Text.UIMap.Scope = UIASeachScope.Children;
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0757E148-1794-4a5d-B378-6BE8049F65E1");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText0757E148179Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem DeviceConfiguraTabItem
        {
            get
            {
                if (null == fDeviceConfiguraTabItem)
                {
                    fDeviceConfiguraTabItem = new TabItem("DeviceConfiguraTabItem", TabControlec0fdTab);
                    fDeviceConfiguraTabItem.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6DF1E016-517F-40e4-A63E-CD48D560192F");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                }

                return fDeviceConfiguraTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceConfiguraText
        {
            get
            {
                if (null == fDeviceConfiguraText)
                {
                    fDeviceConfiguraText = new Text("DeviceConfiguraText", DeviceConfiguraTabItem);
                    fDeviceConfiguraText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                }

                return fDeviceConfiguraText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ServiceConfigurCustom
        {
            get
            {
                if (null == fServiceConfigurCustom)
                {
                    fServiceConfigurCustom = new Custom("ServiceConfigurCustom", DeviceConfiguraTabItem);
                    fServiceConfigurCustom.UIMap.Scope = UIASeachScope.Children;
                    fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ServiceConfigurationDeviceConfigTab");
                    fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mServiceDeviceTab");
                }

                return fServiceConfigurCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GroupListText
        {
            get
            {
                if (null == fGroupListText)
                {
                    fGroupListText = new Text("GroupListText", ServiceConfigurCustom);
                    fGroupListText.UIMap.Scope = UIASeachScope.Children;
                    fGroupListText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fGroupListText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Group List");
                }

                return fGroupListText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text GroupListTextBlText
        {
            get
            {
                if (null == fGroupListTextBlText)
                {
                    fGroupListTextBlText = new Text("GroupListTextBlText", GroupListText);
                    fGroupListTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fGroupListTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fGroupListTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Group List");
                }

                return fGroupListTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceGroupsText
        {
            get
            {
                if (null == fDeviceGroupsText)
                {
                    fDeviceGroupsText = new Text("DeviceGroupsText", ServiceConfigurCustom);
                    fDeviceGroupsText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceGroupsText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDeviceGroupsText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Groups");
                }

                return fDeviceGroupsText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceGroupsTexText
        {
            get
            {
                if (null == fDeviceGroupsTexText)
                {
                    fDeviceGroupsTexText = new Text("DeviceGroupsTexText", DeviceGroupsText);
                    fDeviceGroupsTexText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceGroupsTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceGroupsTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Groups");
                }

                return fDeviceGroupsTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Tree TreeView1416BDETree
        {
            get
            {
                if (null == fTreeView1416BDETree)
                {
                    fTreeView1416BDETree = new Tree("TreeView1416BDETree", ServiceConfigurCustom);
                    fTreeView1416BDETree.UIMap.Scope = UIASeachScope.Children;
                    fTreeView1416BDETree.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeView");
                    fTreeView1416BDETree.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1416BDED-715B-43e3-AAE3-D7E3FE37F0F0");
                }

                return fTreeView1416BDETree;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TreeItem AllDevicesTreeVTreeItem
        {
            get
            {
                if (null == fAllDevicesTreeVTreeItem)
                {
                    fAllDevicesTreeVTreeItem = new TreeItem("AllDevicesTreeVTreeItem", TreeView1416BDETree);
                    fAllDevicesTreeVTreeItem.UIMap.Scope = UIASeachScope.Children;
                    fAllDevicesTreeVTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TreeViewItem");
                    fAllDevicesTreeVTreeItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"All Devices");
                }

                return fAllDevicesTreeVTreeItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ButtonExpanderButton
        {
            get
            {
                if (null == fButtonExpanderButton)
                {
                    fButtonExpanderButton = new Button("ButtonExpanderButton", AllDevicesTreeVTreeItem);
                    fButtonExpanderButton.UIMap.Scope = UIASeachScope.Children;
                    fButtonExpanderButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButtonExpanderButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Expander");
                }

                return fButtonExpanderButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AllDevicesTextBText
        {
            get
            {
                if (null == fAllDevicesTextBText)
                {
                    fAllDevicesTextBText = new Text("AllDevicesTextBText", AllDevicesTreeVTreeItem);
                    fAllDevicesTextBText.UIMap.Scope = UIASeachScope.Children;
                    fAllDevicesTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAllDevicesTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"All Devices");
                }

                return fAllDevicesTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button AddGroupButtonFButton
        {
            get
            {
                if (null == fAddGroupButtonFButton)
                {
                    fAddGroupButtonFButton = new Button("AddGroupButtonFButton", ServiceConfigurCustom);
                    fAddGroupButtonFButton.UIMap.Scope = UIASeachScope.Children;
                    fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"FF3CA114-616C-4372-9E90-DEBFDDC95553");
                    fAddGroupButtonFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group...");
                }

                return fAddGroupButtonFButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddGroupTextBloText
        {
            get
            {
                if (null == fAddGroupTextBloText)
                {
                    fAddGroupTextBloText = new Text("AddGroupTextBloText", AddGroupButtonFButton);
                    fAddGroupTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddGroupTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Group...");
                }

                return fAddGroupTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RemoveGroupButtButton
        {
            get
            {
                if (null == fRemoveGroupButtButton)
                {
                    fRemoveGroupButtButton = new Button("RemoveGroupButtButton", ServiceConfigurCustom);
                    fRemoveGroupButtButton.UIMap.Scope = UIASeachScope.Children;
                    fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"254907B3-979B-4706-8099-4EB37924DFB2");
                    fRemoveGroupButtButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Group...");
                }

                return fRemoveGroupButtButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text RemoveGroupTextText
        {
            get
            {
                if (null == fRemoveGroupTextText)
                {
                    fRemoveGroupTextText = new Text("RemoveGroupTextText", RemoveGroupButtButton);
                    fRemoveGroupTextText.UIMap.Scope = UIASeachScope.Children;
                    fRemoveGroupTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRemoveGroupTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Group...");
                }

                return fRemoveGroupTextText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RenameButton261Button
        {
            get
            {
                if (null == fRenameButton261Button)
                {
                    fRenameButton261Button = new Button("RenameButton261Button", ServiceConfigurCustom);
                    fRenameButton261Button.UIMap.Scope = UIASeachScope.Children;
                    fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2619DFAD-0185-42fb-A689-994ED4ACC316");
                    fRenameButton261Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rename");
                }

                return fRenameButton261Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text RenameTextBlockText
        {
            get
            {
                if (null == fRenameTextBlockText)
                {
                    fRenameTextBlockText = new Text("RenameTextBlockText", RenameButton261Button);
                    fRenameTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fRenameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRenameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Rename");
                }

                return fRenameTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb GridSplitterThumb
        {
            get
            {
                if (null == fGridSplitterThumb)
                {
                    fGridSplitterThumb = new Thumb("GridSplitterThumb", ServiceConfigurCustom);
                    fGridSplitterThumb.UIMap.Scope = UIASeachScope.Children;
                    fGridSplitterThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridSplitter");
                }

                return fGridSplitterThumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceListText
        {
            get
            {
                if (null == fDeviceListText)
                {
                    fDeviceListText = new Text("DeviceListText", ServiceConfigurCustom);
                    fDeviceListText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceListText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fDeviceListText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device List");
                }

                return fDeviceListText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceListTextBText
        {
            get
            {
                if (null == fDeviceListTextBText)
                {
                    fDeviceListTextBText = new Text("DeviceListTextBText", DeviceListText);
                    fDeviceListTextBText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceListTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceListTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device List");
                }

                return fDeviceListTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public DataGrid ListView141cb8bDataGrid
        {
            get
            {
                if (null == fListView141cb8bDataGrid)
                {
                    fListView141cb8bDataGrid = new DataGrid("ListView141cb8bDataGrid", ServiceConfigurCustom);
                    fListView141cb8bDataGrid.UIMap.Scope = UIASeachScope.Children;
                    fListView141cb8bDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListView");
                    fListView141cb8bDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"141cb8be-89c3-4b41-80ca-be09bdf636f2");
                }

                return fListView141cb8bDataGrid;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Header GridViewHeaderRDup1Header
        {
            get
            {
                if (null == fGridViewHeaderRDup1Header)
                {
                    fGridViewHeaderRDup1Header = new Header("GridViewHeaderRDup1Header", ListView141cb8bDataGrid);
                    fGridViewHeaderRDup1Header.UIMap.Scope = UIASeachScope.Children;
                    fGridViewHeaderRDup1Header.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewHeaderRowPresenter");
                }

                return fGridViewHeaderRDup1Header;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem StatusGridViewCHeaderItem
        {
            get
            {
                if (null == fStatusGridViewCHeaderItem)
                {
                    fStatusGridViewCHeaderItem = new HeaderItem("StatusGridViewCHeaderItem", GridViewHeaderRDup1Header);
                    fStatusGridViewCHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84BDE37C-126B-473a-923B-180DBBB478C6");
                    fStatusGridViewCHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Status");
                }

                return fStatusGridViewCHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text StatusTextBlockText
        {
            get
            {
                if (null == fStatusTextBlockText)
                {
                    fStatusTextBlockText = new Text("StatusTextBlockText", StatusGridViewCHeaderItem);
                    fStatusTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fStatusTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fStatusTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Status");
                }

                return fStatusTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup3Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup3Thumb)
                {
                    fThumbPARTHeadeDup3Thumb = new Thumb("ThumbPARTHeadeDup3Thumb", StatusGridViewCHeaderItem);
                    fThumbPARTHeadeDup3Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup3Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup3Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup3Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem NameGridViewColHeaderItem
        {
            get
            {
                if (null == fNameGridViewColHeaderItem)
                {
                    fNameGridViewColHeaderItem = new HeaderItem("NameGridViewColHeaderItem", GridViewHeaderRDup1Header);
                    fNameGridViewColHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"507D57C0-BC09-4a0a-8D17-F2A9117ADCE5");
                    fNameGridViewColHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameGridViewColHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NameTextBlockText
        {
            get
            {
                if (null == fNameTextBlockText)
                {
                    fNameTextBlockText = new Text("NameTextBlockText", NameGridViewColHeaderItem);
                    fNameTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fNameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fNameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                }

                return fNameTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup4Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup4Thumb)
                {
                    fThumbPARTHeadeDup4Thumb = new Thumb("ThumbPARTHeadeDup4Thumb", NameGridViewColHeaderItem);
                    fThumbPARTHeadeDup4Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup4Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup4Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup4Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup0HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup0HeaderItem)
                {
                    fGridViewColumnHDup0HeaderItem = new HeaderItem("GridViewColumnHDup0HeaderItem", GridViewHeaderRDup1Header);
                    fGridViewColumnHDup0HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup0HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup0HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"458F7960-4394-4579-919F-D58D5043C703");
                }

                return fGridViewColumnHDup0HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup0Image
        {
            get
            {
                if (null == fImageDup0Image)
                {
                    fImageDup0Image = new Image("ImageDup0Image", GridViewColumnHDup0HeaderItem);
                    fImageDup0Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup0Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup5Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup5Thumb)
                {
                    fThumbPARTHeadeDup5Thumb = new Thumb("ThumbPARTHeadeDup5Thumb", GridViewColumnHDup0HeaderItem);
                    fThumbPARTHeadeDup5Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup5Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup5Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup5Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup1HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup1HeaderItem)
                {
                    fGridViewColumnHDup1HeaderItem = new HeaderItem("GridViewColumnHDup1HeaderItem", GridViewHeaderRDup1Header);
                    fGridViewColumnHDup1HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup1HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup1HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CD97A6CC-D4F4-4ddb-A3BB-7FF26B2222FF");
                }

                return fGridViewColumnHDup1HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup1Image
        {
            get
            {
                if (null == fImageDup1Image)
                {
                    fImageDup1Image = new Image("ImageDup1Image", GridViewColumnHDup1HeaderItem);
                    fImageDup1Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup1Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup1Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup6Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup6Thumb)
                {
                    fThumbPARTHeadeDup6Thumb = new Thumb("ThumbPARTHeadeDup6Thumb", GridViewColumnHDup1HeaderItem);
                    fThumbPARTHeadeDup6Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup6Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup6Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup6Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup2HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup2HeaderItem)
                {
                    fGridViewColumnHDup2HeaderItem = new HeaderItem("GridViewColumnHDup2HeaderItem", GridViewHeaderRDup1Header);
                    fGridViewColumnHDup2HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup2HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup2HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"008BEEE0-3AE1-47be-BD91-66E124BE04A5");
                }

                return fGridViewColumnHDup2HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup2Image
        {
            get
            {
                if (null == fImageDup2Image)
                {
                    fImageDup2Image = new Image("ImageDup2Image", GridViewColumnHDup2HeaderItem);
                    fImageDup2Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup2Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup2Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup7Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup7Thumb)
                {
                    fThumbPARTHeadeDup7Thumb = new Thumb("ThumbPARTHeadeDup7Thumb", GridViewColumnHDup2HeaderItem);
                    fThumbPARTHeadeDup7Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup7Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup7Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup7Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup3HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup3HeaderItem)
                {
                    fGridViewColumnHDup3HeaderItem = new HeaderItem("GridViewColumnHDup3HeaderItem", GridViewHeaderRDup1Header);
                    fGridViewColumnHDup3HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup3HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup3HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4DC0435C-FF08-4325-A9AC-115D1891ABA6");
                }

                return fGridViewColumnHDup3HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup3Image
        {
            get
            {
                if (null == fImageDup3Image)
                {
                    fImageDup3Image = new Image("ImageDup3Image", GridViewColumnHDup3HeaderItem);
                    fImageDup3Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup3Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup3Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup8Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup8Thumb)
                {
                    fThumbPARTHeadeDup8Thumb = new Thumb("ThumbPARTHeadeDup8Thumb", GridViewColumnHDup3HeaderItem);
                    fThumbPARTHeadeDup8Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup8Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup8Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup8Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup4HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup4HeaderItem)
                {
                    fGridViewColumnHDup4HeaderItem = new HeaderItem("GridViewColumnHDup4HeaderItem", GridViewHeaderRDup1Header);
                    fGridViewColumnHDup4HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup4HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup4HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"BE6ECE9F-4708-4266-8106-AE6D598B0396");
                }

                return fGridViewColumnHDup4HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup4Image
        {
            get
            {
                if (null == fImageDup4Image)
                {
                    fImageDup4Image = new Image("ImageDup4Image", GridViewColumnHDup4HeaderItem);
                    fImageDup4Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup4Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup4Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup9Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup9Thumb)
                {
                    fThumbPARTHeadeDup9Thumb = new Thumb("ThumbPARTHeadeDup9Thumb", GridViewColumnHDup4HeaderItem);
                    fThumbPARTHeadeDup9Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup9Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup9Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup9Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem GridViewColumnHDup5HeaderItem
        {
            get
            {
                if (null == fGridViewColumnHDup5HeaderItem)
                {
                    fGridViewColumnHDup5HeaderItem = new HeaderItem("GridViewColumnHDup5HeaderItem", GridViewHeaderRDup1Header);
                    fGridViewColumnHDup5HeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fGridViewColumnHDup5HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fGridViewColumnHDup5HeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"5C264E70-DAEF-44F3-9DE9-9824BC0B9ECF");
                }

                return fGridViewColumnHDup5HeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageDup5Image
        {
            get
            {
                if (null == fImageDup5Image)
                {
                    fImageDup5Image = new Image("ImageDup5Image", GridViewColumnHDup5HeaderItem);
                    fImageDup5Image.UIMap.Scope = UIASeachScope.Children;
                    fImageDup5Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageDup5Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup10Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup10Thumb)
                {
                    fThumbPARTHeadeDup10Thumb = new Thumb("ThumbPARTHeadeDup10Thumb", GridViewColumnHDup5HeaderItem);
                    fThumbPARTHeadeDup10Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup10Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup10Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup10Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem ModelGridViewCoHeaderItem
        {
            get
            {
                if (null == fModelGridViewCoHeaderItem)
                {
                    fModelGridViewCoHeaderItem = new HeaderItem("ModelGridViewCoHeaderItem", GridViewHeaderRDup1Header);
                    fModelGridViewCoHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"805FD78E-D6A4-4559-939B-ECDD285AE6D7");
                    fModelGridViewCoHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Model");
                }

                return fModelGridViewCoHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ModelTextBlockText
        {
            get
            {
                if (null == fModelTextBlockText)
                {
                    fModelTextBlockText = new Text("ModelTextBlockText", ModelGridViewCoHeaderItem);
                    fModelTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fModelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fModelTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Model");
                }

                return fModelTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup11Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup11Thumb)
                {
                    fThumbPARTHeadeDup11Thumb = new Thumb("ThumbPARTHeadeDup11Thumb", ModelGridViewCoHeaderItem);
                    fThumbPARTHeadeDup11Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup11Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup11Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup11Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem IPAddressGridViHeaderItem
        {
            get
            {
                if (null == fIPAddressGridViHeaderItem)
                {
                    fIPAddressGridViHeaderItem = new HeaderItem("IPAddressGridViHeaderItem", GridViewHeaderRDup1Header);
                    fIPAddressGridViHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"70E1D5F4-0DA5-4e87-A451-28399734B74C");
                    fIPAddressGridViHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"IP Address");
                }

                return fIPAddressGridViHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text IPAddressTextBlText
        {
            get
            {
                if (null == fIPAddressTextBlText)
                {
                    fIPAddressTextBlText = new Text("IPAddressTextBlText", IPAddressGridViHeaderItem);
                    fIPAddressTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fIPAddressTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fIPAddressTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"IP Address");
                }

                return fIPAddressTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup12Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup12Thumb)
                {
                    fThumbPARTHeadeDup12Thumb = new Thumb("ThumbPARTHeadeDup12Thumb", IPAddressGridViHeaderItem);
                    fThumbPARTHeadeDup12Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup12Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup12Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup12Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem HostnameGridVieHeaderItem
        {
            get
            {
                if (null == fHostnameGridVieHeaderItem)
                {
                    fHostnameGridVieHeaderItem = new HeaderItem("HostnameGridVieHeaderItem", GridViewHeaderRDup1Header);
                    fHostnameGridVieHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"82BE5D16-D370-4519-8FC4-0F517E12AFDF");
                    fHostnameGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname");
                }

                return fHostnameGridVieHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text HostnameTextBloText
        {
            get
            {
                if (null == fHostnameTextBloText)
                {
                    fHostnameTextBloText = new Text("HostnameTextBloText", HostnameGridVieHeaderItem);
                    fHostnameTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fHostnameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHostnameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hostname");
                }

                return fHostnameTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup13Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup13Thumb)
                {
                    fThumbPARTHeadeDup13Thumb = new Thumb("ThumbPARTHeadeDup13Thumb", HostnameGridVieHeaderItem);
                    fThumbPARTHeadeDup13Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup13Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup13Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup13Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem DescriptionGridHeaderItem
        {
            get
            {
                if (null == fDescriptionGridHeaderItem)
                {
                    fDescriptionGridHeaderItem = new HeaderItem("DescriptionGridHeaderItem", GridViewHeaderRDup1Header);
                    fDescriptionGridHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"26A46CB8-53AC-446f-8012-A92323091104");
                    fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                }

                return fDescriptionGridHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DescriptionTextText
        {
            get
            {
                if (null == fDescriptionTextText)
                {
                    fDescriptionTextText = new Text("DescriptionTextText", DescriptionGridHeaderItem);
                    fDescriptionTextText.UIMap.Scope = UIASeachScope.Children;
                    fDescriptionTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDescriptionTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                }

                return fDescriptionTextText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup14Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup14Thumb)
                {
                    fThumbPARTHeadeDup14Thumb = new Thumb("ThumbPARTHeadeDup14Thumb", DescriptionGridHeaderItem);
                    fThumbPARTHeadeDup14Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup14Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup14Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup14Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public HeaderItem FirmwareGridVieHeaderItem
        {
            get
            {
                if (null == fFirmwareGridVieHeaderItem)
                {
                    fFirmwareGridVieHeaderItem = new HeaderItem("FirmwareGridVieHeaderItem", GridViewHeaderRDup1Header);
                    fFirmwareGridVieHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                    fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2A8C9E5A-0A8D-48DD-9D15-42B45EB4177B");
                    fFirmwareGridVieHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Firmware");
                }

                return fFirmwareGridVieHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FirmwareTextBloText
        {
            get
            {
                if (null == fFirmwareTextBloText)
                {
                    fFirmwareTextBloText = new Text("FirmwareTextBloText", FirmwareGridVieHeaderItem);
                    fFirmwareTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fFirmwareTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFirmwareTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Firmware");
                }

                return fFirmwareTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Thumb ThumbPARTHeadeDup15Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup15Thumb)
                {
                    fThumbPARTHeadeDup15Thumb = new Thumb("ThumbPARTHeadeDup15Thumb", FirmwareGridVieHeaderItem);
                    fThumbPARTHeadeDup15Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup15Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                    fThumbPARTHeadeDup15Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                }

                return fThumbPARTHeadeDup15Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public DataItem bound101114135eDataItem
        {
            get
            {
                if (null == fbound101114135eDataItem)
                {
                    fbound101114135eDataItem = new DataItem("bound101114135eDataItem", ListView141cb8bDataGrid);
                    fbound101114135eDataItem.UIMap.Scope = UIASeachScope.Children;
                    fbound101114135eDataItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListViewItem");
                    fbound101114135eDataItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"bound; 10.11.14.135; email=disabled; folder=disabled; fax=disabled; addressing=disabled; authentication=notApplicable; customKey=disabled; sharePoint=notApplicable; HP LaserJet MFP M527; 10.11.14.135; HP LaserJet MFP M527");
                }

                return fbound101114135eDataItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ContentPresenteDup0I0XCustom
        {
            get
            {
                if (null == fContentPresenteDup0I0XCustom)
                {
                    fContentPresenteDup0I0XCustom = new Custom("ContentPresenteDup0I0XCustom", bound101114135eDataItem);
                    fContentPresenteDup0I0XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup0I0XCustom.UIMap.Index = 0;
                    fContentPresenteDup0I0XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup0I0XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image Image84ACE29E0AImage
        {
            get
            {
                if (null == fImage84ACE29E0AImage)
                {
                    fImage84ACE29E0AImage = new Image("Image84ACE29E0AImage", ContentPresenteDup0I0XCustom);
                    fImage84ACE29E0AImage.UIMap.Scope = UIASeachScope.Children;
                    fImage84ACE29E0AImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage84ACE29E0AImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84ACE29E-0A0D-4d4b-9168-34F42B14D952");
                }

                return fImage84ACE29E0AImage;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom WaitSpinnerUserCustom
        {
            get
            {
                if (null == fWaitSpinnerUserCustom)
                {
                    fWaitSpinnerUserCustom = new Custom("WaitSpinnerUserCustom", ContentPresenteDup0I0XCustom);
                    fWaitSpinnerUserCustom.UIMap.Scope = UIASeachScope.Children;
                    fWaitSpinnerUserCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"WaitSpinnerUserControl");
                    fWaitSpinnerUserCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C736946B-5A03-4603-A63B-2B489C87B082");
                }

                return fWaitSpinnerUserCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImagemWaitSpinnImage
        {
            get
            {
                if (null == fImagemWaitSpinnImage)
                {
                    fImagemWaitSpinnImage = new Image("ImagemWaitSpinnImage", WaitSpinnerUserCustom);
                    fImagemWaitSpinnImage.UIMap.Scope = UIASeachScope.Children;
                    fImagemWaitSpinnImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImagemWaitSpinnImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWaitSpinnerImage");
                }

                return fImagemWaitSpinnImage;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text HPLaserJetMFPM5Dup0I0XText
        {
            get
            {
                if (null == fHPLaserJetMFPM5Dup0I0XText)
                {
                    fHPLaserJetMFPM5Dup0I0XText = new Text("HPLaserJetMFPM5Dup0I0XText", bound101114135eDataItem);
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.Index = 0;
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet MFP M527");
                }

                return fHPLaserJetMFPM5Dup0I0XText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ContentPresenteDup1I1XCustom
        {
            get
            {
                if (null == fContentPresenteDup1I1XCustom)
                {
                    fContentPresenteDup1I1XCustom = new Custom("ContentPresenteDup1I1XCustom", bound101114135eDataItem);
                    fContentPresenteDup1I1XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup1I1XCustom.UIMap.Index = 1;
                    fContentPresenteDup1I1XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup1I1XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image Image844100985AImage
        {
            get
            {
                if (null == fImage844100985AImage)
                {
                    fImage844100985AImage = new Image("Image844100985AImage", ContentPresenteDup1I1XCustom);
                    fImage844100985AImage.UIMap.Scope = UIASeachScope.Children;
                    fImage844100985AImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage844100985AImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"84410098-5A15-4470-B28C-3220220B3CF7");
                }

                return fImage844100985AImage;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ContentPresenteDup2I2XCustom
        {
            get
            {
                if (null == fContentPresenteDup2I2XCustom)
                {
                    fContentPresenteDup2I2XCustom = new Custom("ContentPresenteDup2I2XCustom", bound101114135eDataItem);
                    fContentPresenteDup2I2XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup2I2XCustom.UIMap.Index = 2;
                    fContentPresenteDup2I2XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup2I2XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image Image20F9A92A96Image
        {
            get
            {
                if (null == fImage20F9A92A96Image)
                {
                    fImage20F9A92A96Image = new Image("Image20F9A92A96Image", ContentPresenteDup2I2XCustom);
                    fImage20F9A92A96Image.UIMap.Scope = UIASeachScope.Children;
                    fImage20F9A92A96Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage20F9A92A96Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"20F9A92A-9628-46b7-9034-C31A2B2C2052");
                }

                return fImage20F9A92A96Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ContentPresenteDup3I3XCustom
        {
            get
            {
                if (null == fContentPresenteDup3I3XCustom)
                {
                    fContentPresenteDup3I3XCustom = new Custom("ContentPresenteDup3I3XCustom", bound101114135eDataItem);
                    fContentPresenteDup3I3XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup3I3XCustom.UIMap.Index = 3;
                    fContentPresenteDup3I3XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup3I3XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageCA1843E8BFImage
        {
            get
            {
                if (null == fImageCA1843E8BFImage)
                {
                    fImageCA1843E8BFImage = new Image("ImageCA1843E8BFImage", ContentPresenteDup3I3XCustom);
                    fImageCA1843E8BFImage.UIMap.Scope = UIASeachScope.Children;
                    fImageCA1843E8BFImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageCA1843E8BFImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CA1843E8-BF8B-4fd4-88C2-66CB0A66A1C2");
                }

                return fImageCA1843E8BFImage;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ContentPresenteDup4I4XCustom
        {
            get
            {
                if (null == fContentPresenteDup4I4XCustom)
                {
                    fContentPresenteDup4I4XCustom = new Custom("ContentPresenteDup4I4XCustom", bound101114135eDataItem);
                    fContentPresenteDup4I4XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup4I4XCustom.UIMap.Index = 4;
                    fContentPresenteDup4I4XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup4I4XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ImageE24499D7C0Image
        {
            get
            {
                if (null == fImageE24499D7C0Image)
                {
                    fImageE24499D7C0Image = new Image("ImageE24499D7C0Image", ContentPresenteDup4I4XCustom);
                    fImageE24499D7C0Image.UIMap.Scope = UIASeachScope.Children;
                    fImageE24499D7C0Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImageE24499D7C0Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"E24499D7-C0DD-4982-A105-C235E810CBF8");
                }

                return fImageE24499D7C0Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ContentPresenteDup5I5XCustom
        {
            get
            {
                if (null == fContentPresenteDup5I5XCustom)
                {
                    fContentPresenteDup5I5XCustom = new Custom("ContentPresenteDup5I5XCustom", bound101114135eDataItem);
                    fContentPresenteDup5I5XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup5I5XCustom.UIMap.Index = 5;
                    fContentPresenteDup5I5XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup5I5XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image Image86A371F7F4Image
        {
            get
            {
                if (null == fImage86A371F7F4Image)
                {
                    fImage86A371F7F4Image = new Image("Image86A371F7F4Image", ContentPresenteDup5I5XCustom);
                    fImage86A371F7F4Image.UIMap.Scope = UIASeachScope.Children;
                    fImage86A371F7F4Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage86A371F7F4Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"86A371F7-F478-4dfd-AE88-854F4FB069A0");
                }

                return fImage86A371F7F4Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Custom ContentPresenteDup6I6XCustom
        {
            get
            {
                if (null == fContentPresenteDup6I6XCustom)
                {
                    fContentPresenteDup6I6XCustom = new Custom("ContentPresenteDup6I6XCustom", bound101114135eDataItem);
                    fContentPresenteDup6I6XCustom.UIMap.Scope = UIASeachScope.Children;
                    fContentPresenteDup6I6XCustom.UIMap.Index = 6;
                    fContentPresenteDup6I6XCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ContentPresenter");
                }

                return fContentPresenteDup6I6XCustom;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image Image1D2DC29B85Image
        {
            get
            {
                if (null == fImage1D2DC29B85Image)
                {
                    fImage1D2DC29B85Image = new Image("Image1D2DC29B85Image", ContentPresenteDup6I6XCustom);
                    fImage1D2DC29B85Image.UIMap.Scope = UIASeachScope.Children;
                    fImage1D2DC29B85Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                    fImage1D2DC29B85Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1D2DC29B-85AC-4341-9FBC-741DEC6996B9");
                }

                return fImage1D2DC29B85Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text HPLaserJetMFPM5Dup1I1XText
        {
            get
            {
                if (null == fHPLaserJetMFPM5Dup1I1XText)
                {
                    fHPLaserJetMFPM5Dup1I1XText = new Text("HPLaserJetMFPM5Dup1I1XText", bound101114135eDataItem);
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.Index = 1;
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet MFP M527");
                }

                return fHPLaserJetMFPM5Dup1I1XText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text A101114135TextBText
        {
            get
            {
                if (null == fA101114135TextBText)
                {
                    fA101114135TextBText = new Text("A101114135TextBText", bound101114135eDataItem);
                    fA101114135TextBText.UIMap.Scope = UIASeachScope.Children;
                    fA101114135TextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fA101114135TextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"10.11.14.135");
                }

                return fA101114135TextBText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TextBlockDup5Text
        {
            get
            {
                if (null == fTextBlockDup5Text)
                {
                    fTextBlockDup5Text = new Text("TextBlockDup5Text", bound101114135eDataItem);
                    fTextBlockDup5Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup5Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTextBlockDup5Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text HPLaserJetMFPM5Dup2I2XText
        {
            get
            {
                if (null == fHPLaserJetMFPM5Dup2I2XText)
                {
                    fHPLaserJetMFPM5Dup2I2XText = new Text("HPLaserJetMFPM5Dup2I2XText", bound101114135eDataItem);
                    fHPLaserJetMFPM5Dup2I2XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetMFPM5Dup2I2XText.UIMap.Index = 2;
                    fHPLaserJetMFPM5Dup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fHPLaserJetMFPM5Dup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet MFP M527");
                }

                return fHPLaserJetMFPM5Dup2I2XText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FutureSmart4402Text
        {
            get
            {
                if (null == fFutureSmart4402Text)
                {
                    fFutureSmart4402Text = new Text("FutureSmart4402Text", bound101114135eDataItem);
                    fFutureSmart4402Text.UIMap.Scope = UIASeachScope.Children;
                    fFutureSmart4402Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fFutureSmart4402Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"FutureSmart 4 (4.0) (2400082_000146)");
                }

                return fFutureSmart4402Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button AddDeviceButtonButton
        {
            get
            {
                if (null == fAddDeviceButtonButton)
                {
                    fAddDeviceButtonButton = new Button("AddDeviceButtonButton", ServiceConfigurCustom);
                    fAddDeviceButtonButton.UIMap.Scope = UIASeachScope.Children;
                    fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"F312568F-16E2-4717-876C-9A076CE2602B");
                    fAddDeviceButtonButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Device...");
                }

                return fAddDeviceButtonButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AddDeviceTextBlText
        {
            get
            {
                if (null == fAddDeviceTextBlText)
                {
                    fAddDeviceTextBlText = new Text("AddDeviceTextBlText", AddDeviceButtonButton);
                    fAddDeviceTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fAddDeviceTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAddDeviceTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add Device...");
                }

                return fAddDeviceTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ExportButtonef5Button
        {
            get
            {
                if (null == fExportButtonef5Button)
                {
                    fExportButtonef5Button = new Button("ExportButtonef5Button", ServiceConfigurCustom);
                    fExportButtonef5Button.UIMap.Scope = UIASeachScope.Children;
                    fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ef506fe9-b864-4efe-a960-ad04e56aab91");
                    fExportButtonef5Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                }

                return fExportButtonef5Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ExportTextBlockText
        {
            get
            {
                if (null == fExportTextBlockText)
                {
                    fExportTextBlockText = new Text("ExportTextBlockText", ExportButtonef5Button);
                    fExportTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fExportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Export");
                }

                return fExportTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button RemoveDeviceButButton
        {
            get
            {
                if (null == fRemoveDeviceButButton)
                {
                    fRemoveDeviceButButton = new Button("RemoveDeviceButButton", ServiceConfigurCustom);
                    fRemoveDeviceButButton.UIMap.Scope = UIASeachScope.Children;
                    fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6f0bbda8-ae72-4b07-bd10-508b3cd6df98");
                    fRemoveDeviceButButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Device...");
                }

                return fRemoveDeviceButButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text RemoveDeviceTexText
        {
            get
            {
                if (null == fRemoveDeviceTexText)
                {
                    fRemoveDeviceTexText = new Text("RemoveDeviceTexText", RemoveDeviceButButton);
                    fRemoveDeviceTexText.UIMap.Scope = UIASeachScope.Children;
                    fRemoveDeviceTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fRemoveDeviceTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove Device...");
                }

                return fRemoveDeviceTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ImportButtona69Button
        {
            get
            {
                if (null == fImportButtona69Button)
                {
                    fImportButtona69Button = new Button("ImportButtona69Button", ServiceConfigurCustom);
                    fImportButtona69Button.UIMap.Scope = UIASeachScope.Children;
                    fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a694c1f5-ca51-45dc-ae40-8decc9704ca5");
                    fImportButtona69Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import");
                }

                return fImportButtona69Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ImportTextBlockText
        {
            get
            {
                if (null == fImportTextBlockText)
                {
                    fImportTextBlockText = new Text("ImportTextBlockText", ImportButtona69Button);
                    fImportTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fImportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fImportTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Import");
                }

                return fImportTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CreateTemplateBButton
        {
            get
            {
                if (null == fCreateTemplateBButton)
                {
                    fCreateTemplateBButton = new Button("CreateTemplateBButton", ServiceConfigurCustom);
                    fCreateTemplateBButton.UIMap.Scope = UIASeachScope.Children;
                    fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4C50BE02-6C60-4097-9595-ACF2CC3D5F50");
                    fCreateTemplateBButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create Template");
                }

                return fCreateTemplateBButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CreateTemplateTText
        {
            get
            {
                if (null == fCreateTemplateTText)
                {
                    fCreateTemplateTText = new Text("CreateTemplateTText", CreateTemplateBButton);
                    fCreateTemplateTText.UIMap.Scope = UIASeachScope.Children;
                    fCreateTemplateTText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fCreateTemplateTText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create Template");
                }

                return fCreateTemplateTText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button DeviceSignInButButton
        {
            get
            {
                if (null == fDeviceSignInButButton)
                {
                    fDeviceSignInButButton = new Button("DeviceSignInButButton", ServiceConfigurCustom);
                    fDeviceSignInButButton.UIMap.Scope = UIASeachScope.Children;
                    fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mDeviceSignInButton");
                    fDeviceSignInButButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Sign In...");
                }

                return fDeviceSignInButButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DeviceSignInTexText
        {
            get
            {
                if (null == fDeviceSignInTexText)
                {
                    fDeviceSignInTexText = new Text("DeviceSignInTexText", DeviceSignInButButton);
                    fDeviceSignInTexText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceSignInTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fDeviceSignInTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Sign In...");
                }

                return fDeviceSignInTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TotalDevicesText
        {
            get
            {
                if (null == fTotalDevicesText)
                {
                    fTotalDevicesText = new Text("TotalDevicesText", ServiceConfigurCustom);
                    fTotalDevicesText.UIMap.Scope = UIASeachScope.Children;
                    fTotalDevicesText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fTotalDevicesText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Total Devices");
                }

                return fTotalDevicesText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TotalDevicesTexText
        {
            get
            {
                if (null == fTotalDevicesTexText)
                {
                    fTotalDevicesTexText = new Text("TotalDevicesTexText", TotalDevicesText);
                    fTotalDevicesTexText.UIMap.Scope = UIASeachScope.Children;
                    fTotalDevicesTexText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTotalDevicesTexText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Total Devices");
                }

                return fTotalDevicesTexText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text A1Text82f844376Text
        {
            get
            {
                if (null == fA1Text82f844376Text)
                {
                    fA1Text82f844376Text = new Text("A1Text82f844376Text", ServiceConfigurCustom);
                    fA1Text82f844376Text.UIMap.Scope = UIASeachScope.Children;
                    fA1Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fA1Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"82f84437-601e-4562-a536-33b7ebcbf6d7");
                    fA1Text82f844376Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"1");
                }

                return fA1Text82f844376Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text A1TextBlockText
        {
            get
            {
                if (null == fA1TextBlockText)
                {
                    fA1TextBlockText = new Text("A1TextBlockText", A1Text82f844376Text);
                    fA1TextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fA1TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fA1TextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"1");
                }

                return fA1TextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ConfigureDeviceButton
        {
            get
            {
                if (null == fConfigureDeviceButton)
                {
                    fConfigureDeviceButton = new Button("ConfigureDeviceButton", ServiceConfigurCustom);
                    fConfigureDeviceButton.UIMap.Scope = UIASeachScope.Children;
                    fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"cc06ce85-fb0a-4048-8b41-968e5c947ca3");
                    fConfigureDeviceButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Configure Device...");
                }

                return fConfigureDeviceButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ConfigureDeviceText
        {
            get
            {
                if (null == fConfigureDeviceText)
                {
                    fConfigureDeviceText = new Text("ConfigureDeviceText", ConfigureDeviceButton);
                    fConfigureDeviceText.UIMap.Scope = UIASeachScope.Children;
                    fConfigureDeviceText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fConfigureDeviceText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Configure Device...");
                }

                return fConfigureDeviceText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem TemplateConfiguTabItem
        {
            get
            {
                if (null == fTemplateConfiguTabItem)
                {
                    fTemplateConfiguTabItem = new TabItem("TemplateConfiguTabItem", TabControlec0fdTab);
                    fTemplateConfiguTabItem.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AC05F9B9-A7D8-4b34-80E7-910FB9870D47");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                }

                return fTemplateConfiguTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TemplateConfiguText
        {
            get
            {
                if (null == fTemplateConfiguText)
                {
                    fTemplateConfiguText = new Text("TemplateConfiguText", TemplateConfiguTabItem);
                    fTemplateConfiguText.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                }

                return fTemplateConfiguText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem LogTabItem9b4f3TabItem
        {
            get
            {
                if (null == fLogTabItem9b4f3TabItem)
                {
                    fLogTabItem9b4f3TabItem = new TabItem("LogTabItem9b4f3TabItem", TabControlec0fdTab);
                    fLogTabItem9b4f3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9b4f34bb-d75a-4080-9be3-1c50ec31c5b6");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTabItem9b4f3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text LogTextBlockDup1Text
        {
            get
            {
                if (null == fLogTextBlockDup1Text)
                {
                    fLogTextBlockDup1Text = new Text("LogTextBlockDup1Text", LogTabItem9b4f3TabItem);
                    fLogTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fLogTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fLogTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                }

                return fLogTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup17TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup17TabItem)
                {
                    fSystemWindowsCoDup17TabItem = new TabItem("SystemWindowsCoDup17TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup17TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup17TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup17TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3AC8D4A8-3B06-421A-911B-E8CA248A9ED4");
                    fSystemWindowsCoDup17TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup17TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SecurityTextmSeText
        {
            get
            {
                if (null == fSecurityTextmSeText)
                {
                    fSecurityTextmSeText = new Text("SecurityTextmSeText", SystemWindowsCoDup17TabItem);
                    fSecurityTextmSeText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mSecurityTabLabel");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                }

                return fSecurityTextmSeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text SecurityTextBloText
        {
            get
            {
                if (null == fSecurityTextBloText)
                {
                    fSecurityTextBloText = new Text("SecurityTextBloText", SecurityTextmSeText);
                    fSecurityTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                }

                return fSecurityTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text8A7A84DB894Text
        {
            get
            {
                if (null == fText8A7A84DB894Text)
                {
                    fText8A7A84DB894Text = new Text("Text8A7A84DB894Text", SystemWindowsCoDup17TabItem);
                    fText8A7A84DB894Text.UIMap.Scope = UIASeachScope.Children;
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8A7A84DB-8945-40E1-A0F9-C40DDD129739");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                }

                return fText8A7A84DB894Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text Text16F78FB18FFText
        {
            get
            {
                if (null == fText16F78FB18FFText)
                {
                    fText16F78FB18FFText = new Text("Text16F78FB18FFText", SystemWindowsCoDup17TabItem);
                    fText16F78FB18FFText.UIMap.Scope = UIASeachScope.Children;
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16F78FB1-8FF9-4B0D-8251-FB09F520EA73");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                }

                return fText16F78FB18FFText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem SystemWindowsCoDup18TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup18TabItem)
                {
                    fSystemWindowsCoDup18TabItem = new TabItem("SystemWindowsCoDup18TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup18TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup18TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fSystemWindowsCoDup18TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1678607C-20BF-4137-8238-C9D46EA8FF70");
                    fSystemWindowsCoDup18TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                }

                return fSystemWindowsCoDup18TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AnalyticsTextmAText
        {
            get
            {
                if (null == fAnalyticsTextmAText)
                {
                    fAnalyticsTextmAText = new Text("AnalyticsTextmAText", SystemWindowsCoDup18TabItem);
                    fAnalyticsTextmAText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAnalyticsTabLabel");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                }

                return fAnalyticsTextmAText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AnalyticsTextBlText
        {
            get
            {
                if (null == fAnalyticsTextBlText)
                {
                    fAnalyticsTextBlText = new Text("AnalyticsTextBlText", AnalyticsTextmAText);
                    fAnalyticsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                }

                return fAnalyticsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TabItem AboutTabItemf45TabItem
        {
            get
            {
                if (null == fAboutTabItemf45TabItem)
                {
                    fAboutTabItemf45TabItem = new TabItem("AboutTabItemf45TabItem", TabControlec0fdTab);
                    fAboutTabItemf45TabItem.UIMap.Scope = UIASeachScope.Children;
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f45c22d9-f77a-481a-95bc-09cdff03e131");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                }

                return fAboutTabItemf45TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text AboutTextBlockText
        {
            get
            {
                if (null == fAboutTextBlockText)
                {
                    fAboutTextBlockText = new Text("AboutTextBlockText", AboutTabItemf45TabItem);
                    fAboutTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                }

                return fAboutTextBlockText;
            }
        }
    }
}

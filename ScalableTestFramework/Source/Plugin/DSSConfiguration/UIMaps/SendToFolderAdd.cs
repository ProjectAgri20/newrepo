//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------
using TopCat.TestApi.Enums;

namespace HP.ScalableTest.Plugin.DSSConfiguration.UIMaps
{
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class SendToFolderAdd
    {
        /// <summary>
        /// Backing field for HPDigitalSendinWindow property
        /// </summary>
        private Window fHPDigitalSendinWindow;

        /// <summary>
        /// Backing field for AddaPredefinedFWindow property
        /// </summary>
        private Window fAddaPredefinedFWindow;

        /// <summary>
        /// Backing field for AddaPredefinedFTitleBar property
        /// </summary>
        private TitleBar fAddaPredefinedFTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyDup0MenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyDup0MenuBar;

        /// <summary>
        /// Backing field for SystemItem1Dup0MenuItem property
        /// </summary>
        private MenuItem fSystemItem1Dup0MenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizDup0Button property
        /// </summary>
        private Button fMinimizeMinimizDup0Button;

        /// <summary>
        /// Backing field for MaximizeMaximizDup0Button property
        /// </summary>
        private Button fMaximizeMaximizDup0Button;

        /// <summary>
        /// Backing field for CloseCloseDup0Button property
        /// </summary>
        private Button fCloseCloseDup0Button;

        /// <summary>
        /// Backing field for ScrollViewerDup0Pane property
        /// </summary>
        private Pane fScrollViewerDup0Pane;

        /// <summary>
        /// Backing field for ErrorConflictUsDup0Custom property
        /// </summary>
        private Custom fErrorConflictUsDup0Custom;

        /// <summary>
        /// Backing field for ImageImage property
        /// </summary>
        private Image fImageImage;

        /// <summary>
        /// Backing field for A1AFolderQuickSText property
        /// </summary>
        private Text fA1AFolderQuickSText;

        /// <summary>
        /// Backing field for NameandDescriptGroup property
        /// </summary>
        private Group fNameandDescriptGroup;

        /// <summary>
        /// Backing field for NameandDescriptText property
        /// </summary>
        private Text fNameandDescriptText;

        /// <summary>
        /// Backing field for NameText property
        /// </summary>
        private Text fNameText;

        /// <summary>
        /// Backing field for NameTextBlockText property
        /// </summary>
        private Text fNameTextBlockText;

        /// <summary>
        /// Backing field for TextBoxb3409250Edit property
        /// </summary>
        private Edit fTextBoxb3409250Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup0Pane property
        /// </summary>
        private Pane fScrollViewerPARDup0Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup0ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup0ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup0ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup0ScrollBar;

        /// <summary>
        /// Backing field for DescriptionDup0Text property
        /// </summary>
        private Text fDescriptionDup0Text;

        /// <summary>
        /// Backing field for DescriptionTextDup0Text property
        /// </summary>
        private Text fDescriptionTextDup0Text;

        /// <summary>
        /// Backing field for TextBox2bcc5c80Edit property
        /// </summary>
        private Edit fTextBox2bcc5c80Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup1Pane property
        /// </summary>
        private Pane fScrollViewerPARDup1Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup1ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup1ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup1ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup1ScrollBar;

        /// <summary>
        /// Backing field for SelectthefolderGroup property
        /// </summary>
        private Group fSelectthefolderGroup;

        /// <summary>
        /// Backing field for SelectthefolderText property
        /// </summary>
        private Text fSelectthefolderText;

        /// <summary>
        /// Backing field for SavetoastandardRadioButton property
        /// </summary>
        private RadioButton fSavetoastandardRadioButton;

        /// <summary>
        /// Backing field for SavetoastandardText property
        /// </summary>
        private Text fSavetoastandardText;

        /// <summary>
        /// Backing field for FolderDestinatiGroup property
        /// </summary>
        private Group fFolderDestinatiGroup;

        /// <summary>
        /// Backing field for FolderDestinatiText property
        /// </summary>
        private Text fFolderDestinatiText;

        /// <summary>
        /// Backing field for ListView851eb6cDataGrid property
        /// </summary>
        private DataGrid fListView851eb6cDataGrid;

        /// <summary>
        /// Backing field for GridViewHeaderRDup0Header property
        /// </summary>
        private Header fGridViewHeaderRDup0Header;

        /// <summary>
        /// Backing field for NetworkFolderPaHeaderItem property
        /// </summary>
        private HeaderItem fNetworkFolderPaHeaderItem;

        /// <summary>
        /// Backing field for NetworkFolderPaDup0Text property
        /// </summary>
        private Text fNetworkFolderPaDup0Text;

        /// <summary>
        /// Backing field for NetworkFolderPaDup1Text property
        /// </summary>
        private Text fNetworkFolderPaDup1Text;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup0Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup0Thumb;

        /// <summary>
        /// Backing field for AddButton144e03Button property
        /// </summary>
        private Button fAddButton144e03Button;

        /// <summary>
        /// Backing field for AddTextBlockDup0Text property
        /// </summary>
        private Text fAddTextBlockDup0Text;

        /// <summary>
        /// Backing field for EditButtonf860aButton property
        /// </summary>
        private Button fEditButtonf860aButton;

        /// <summary>
        /// Backing field for EditTextBlockDup0Text property
        /// </summary>
        private Text fEditTextBlockDup0Text;

        /// <summary>
        /// Backing field for RemoveButton717Button property
        /// </summary>
        private Button fRemoveButton717Button;

        /// <summary>
        /// Backing field for RemoveTextBlockDup0Text property
        /// </summary>
        private Text fRemoveTextBlockDup0Text;

        /// <summary>
        /// Backing field for SavetoapersonalRadioButton property
        /// </summary>
        private RadioButton fSavetoapersonalRadioButton;

        /// <summary>
        /// Backing field for SavetoapersonalText property
        /// </summary>
        private Text fSavetoapersonalText;

        /// <summary>
        /// Backing field for RequiresusersigDup0Text property
        /// </summary>
        private Text fRequiresusersigDup0Text;

        /// <summary>
        /// Backing field for RequiresusersigDup1Text property
        /// </summary>
        private Text fRequiresusersigDup1Text;

        /// <summary>
        /// Backing field for RetrievethedeviDup0Text property
        /// </summary>
        private Text fRetrievethedeviDup0Text;

        /// <summary>
        /// Backing field for RetrievethedeviDup1Text property
        /// </summary>
        private Text fRetrievethedeviDup1Text;

        /// <summary>
        /// Backing field for TextBox36269979Edit property
        /// </summary>
        private Edit fTextBox36269979Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup2Pane property
        /// </summary>
        private Pane fScrollViewerPARDup2Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup2ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup2ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup2ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup2ScrollBar;

        /// <summary>
        /// Backing field for CreatesubfolderCheckBox property
        /// </summary>
        private CheckBox fCreatesubfolderCheckBox;

        /// <summary>
        /// Backing field for CreatesubfolderText property
        /// </summary>
        private Text fCreatesubfolderText;

        /// <summary>
        /// Backing field for AppendsausernamDup0Text property
        /// </summary>
        private Text fAppendsausernamDup0Text;

        /// <summary>
        /// Backing field for AppendsausernamDup1Text property
        /// </summary>
        private Text fAppendsausernamDup1Text;

        /// <summary>
        /// Backing field for OnlyallowaccessCheckBox property
        /// </summary>
        private CheckBox fOnlyallowaccessCheckBox;

        /// <summary>
        /// Backing field for OnlyallowaccessText property
        /// </summary>
        private Text fOnlyallowaccessText;

        /// <summary>
        /// Backing field for SetsreadwriteacDup0Text property
        /// </summary>
        private Text fSetsreadwriteacDup0Text;

        /// <summary>
        /// Backing field for SetsreadwriteacDup1Text property
        /// </summary>
        private Text fSetsreadwriteacDup1Text;

        /// <summary>
        /// Backing field for VerifyfolderaccCheckBox property
        /// </summary>
        private CheckBox fVerifyfolderaccCheckBox;

        /// <summary>
        /// Backing field for VerifyfolderaccText property
        /// </summary>
        private Text fVerifyfolderaccText;

        /// <summary>
        /// Backing field for WhenuncheckedusText property
        /// </summary>
        private Text fWhenuncheckedusText;

        /// <summary>
        /// Backing field for OKButton12d88a6Button property
        /// </summary>
        private Button fOKButton12d88a6Button;

        /// <summary>
        /// Backing field for OKTextBlockDup0Text property
        /// </summary>
        private Text fOKTextBlockDup0Text;

        /// <summary>
        /// Backing field for CancelButton0f8Button property
        /// </summary>
        private Button fCancelButton0f8Button;

        /// <summary>
        /// Backing field for CancelTextBlockDup0Text property
        /// </summary>
        private Text fCancelTextBlockDup0Text;

        /// <summary>
        /// Backing field for HelpButtoneb783Button property
        /// </summary>
        private Button fHelpButtoneb783Button;

        /// <summary>
        /// Backing field for HelpTextBlockDup0Text property
        /// </summary>
        private Text fHelpTextBlockDup0Text;

        /// <summary>
        /// Backing field for ScrollBarVerticDup3ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup3ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup3ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup3ScrollBar;

        /// <summary>
        /// Backing field for HPDigitalSendinTitleBar property
        /// </summary>
        private TitleBar fHPDigitalSendinTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyDup1MenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyDup1MenuBar;

        /// <summary>
        /// Backing field for SystemItem1Dup1MenuItem property
        /// </summary>
        private MenuItem fSystemItem1Dup1MenuItem;

        /// <summary>
        /// Backing field for MinimizeMinimizDup1Button property
        /// </summary>
        private Button fMinimizeMinimizDup1Button;

        /// <summary>
        /// Backing field for MaximizeMaximizDup1Button property
        /// </summary>
        private Button fMaximizeMaximizDup1Button;

        /// <summary>
        /// Backing field for CloseCloseDup1Button property
        /// </summary>
        private Button fCloseCloseDup1Button;

        /// <summary>
        /// Backing field for HelpButtonCB8CFButton property
        /// </summary>
        private Button fHelpButtonCB8CFButton;

        /// <summary>
        /// Backing field for HelpTextBlockDup1Text property
        /// </summary>
        private Text fHelpTextBlockDup1Text;

        /// <summary>
        /// Backing field for ApplyButton61E2Button property
        /// </summary>
        private Button fApplyButton61E2Button;

        /// <summary>
        /// Backing field for ApplyTextBlockText property
        /// </summary>
        private Text fApplyTextBlockText;

        /// <summary>
        /// Backing field for CancelButton65CButton property
        /// </summary>
        private Button fCancelButton65CButton;

        /// <summary>
        /// Backing field for CancelTextBlockDup1Text property
        /// </summary>
        private Text fCancelTextBlockDup1Text;

        /// <summary>
        /// Backing field for OKButtonCC2EF49Button property
        /// </summary>
        private Button fOKButtonCC2EF49Button;

        /// <summary>
        /// Backing field for OKTextBlockDup1Text property
        /// </summary>
        private Text fOKTextBlockDup1Text;

        /// <summary>
        /// Backing field for TabControlec0fdTab property
        /// </summary>
        private Tab fTabControlec0fdTab;

        /// <summary>
        /// Backing field for SystemWindowsCoDup0TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup0TabItem;

        /// <summary>
        /// Backing field for GeneralTextmGenText property
        /// </summary>
        private Text fGeneralTextmGenText;

        /// <summary>
        /// Backing field for GeneralTextBlocText property
        /// </summary>
        private Text fGeneralTextBlocText;

        /// <summary>
        /// Backing field for Text933345b04e3Text property
        /// </summary>
        private Text fText933345b04e3Text;

        /// <summary>
        /// Backing field for Text786caf67344Text property
        /// </summary>
        private Text fText786caf67344Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup1TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup1TabItem;

        /// <summary>
        /// Backing field for AuthenticationTDup0Text property
        /// </summary>
        private Text fAuthenticationTDup0Text;

        /// <summary>
        /// Backing field for AuthenticationTDup1Text property
        /// </summary>
        private Text fAuthenticationTDup1Text;

        /// <summary>
        /// Backing field for Text31EC91730B9Text property
        /// </summary>
        private Text fText31EC91730B9Text;

        /// <summary>
        /// Backing field for TextA479C271445Text property
        /// </summary>
        private Text fTextA479C271445Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup2TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup2TabItem;

        /// <summary>
        /// Backing field for EmailTextmEmailText property
        /// </summary>
        private Text fEmailTextmEmailText;

        /// <summary>
        /// Backing field for EmailTextBlockText property
        /// </summary>
        private Text fEmailTextBlockText;

        /// <summary>
        /// Backing field for Text32de714a8bdText property
        /// </summary>
        private Text fText32de714a8bdText;

        /// <summary>
        /// Backing field for Text3b2a8761f4fText property
        /// </summary>
        private Text fText3b2a8761f4fText;

        /// <summary>
        /// Backing field for TextBlockDup0Text property
        /// </summary>
        private Text fTextBlockDup0Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup3TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup3TabItem;

        /// <summary>
        /// Backing field for FaxTextmFaxTabLText property
        /// </summary>
        private Text fFaxTextmFaxTabLText;

        /// <summary>
        /// Backing field for FaxTextBlockText property
        /// </summary>
        private Text fFaxTextBlockText;

        /// <summary>
        /// Backing field for TextD1ED4F16F38Text property
        /// </summary>
        private Text fTextD1ED4F16F38Text;

        /// <summary>
        /// Backing field for Text7DDE04FD251Text property
        /// </summary>
        private Text fText7DDE04FD251Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup4TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup4TabItem;

        /// <summary>
        /// Backing field for SendtoFolderTexDup0Text property
        /// </summary>
        private Text fSendtoFolderTexDup0Text;

        /// <summary>
        /// Backing field for SendtoFolderTexDup1Text property
        /// </summary>
        private Text fSendtoFolderTexDup1Text;

        /// <summary>
        /// Backing field for Text7a57f43ecb1Text property
        /// </summary>
        private Text fText7a57f43ecb1Text;

        /// <summary>
        /// Backing field for TextBlockDup1Text property
        /// </summary>
        private Text fTextBlockDup1Text;

        /// <summary>
        /// Backing field for Text654b650dd19Text property
        /// </summary>
        private Text fText654b650dd19Text;

        /// <summary>
        /// Backing field for ServiceConfigurCustom property
        /// </summary>
        private Custom fServiceConfigurCustom;

        /// <summary>
        /// Backing field for ScrollViewerDup1Pane property
        /// </summary>
        private Pane fScrollViewerDup1Pane;

        /// <summary>
        /// Backing field for ErrorConflictUsDup1Custom property
        /// </summary>
        private Custom fErrorConflictUsDup1Custom;

        /// <summary>
        /// Backing field for CredentialstoAcGroup property
        /// </summary>
        private Group fCredentialstoAcGroup;

        /// <summary>
        /// Backing field for CredentialstoAcText property
        /// </summary>
        private Text fCredentialstoAcText;

        /// <summary>
        /// Backing field for UsernameText property
        /// </summary>
        private Text fUsernameText;

        /// <summary>
        /// Backing field for UsernameTextBloText property
        /// </summary>
        private Text fUsernameTextBloText;

        /// <summary>
        /// Backing field for TextBox8e9e0909Edit property
        /// </summary>
        private Edit fTextBox8e9e0909Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup3Pane property
        /// </summary>
        private Pane fScrollViewerPARDup3Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup4ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup4ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup4ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup4ScrollBar;

        /// <summary>
        /// Backing field for DomainText6cd1fText property
        /// </summary>
        private Text fDomainText6cd1fText;

        /// <summary>
        /// Backing field for DomainTextBlockText property
        /// </summary>
        private Text fDomainTextBlockText;

        /// <summary>
        /// Backing field for TextBoxefe13292Edit property
        /// </summary>
        private Edit fTextBoxefe13292Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup4Pane property
        /// </summary>
        private Pane fScrollViewerPARDup4Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup5ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup5ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup5ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup5ScrollBar;

        /// <summary>
        /// Backing field for PasswordText property
        /// </summary>
        private Text fPasswordText;

        /// <summary>
        /// Backing field for PasswordTextBloText property
        /// </summary>
        private Text fPasswordTextBloText;

        /// <summary>
        /// Backing field for PasswordBoxed85Edit property
        /// </summary>
        private Edit fPasswordBoxed85Edit;

        /// <summary>
        /// Backing field for ScrollViewerPARDup5Pane property
        /// </summary>
        private Pane fScrollViewerPARDup5Pane;

        /// <summary>
        /// Backing field for ScrollBarVerticDup6ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup6ScrollBar;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup6ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup6ScrollBar;

        /// <summary>
        /// Backing field for PredefinedFoldeGroup property
        /// </summary>
        private Group fPredefinedFoldeGroup;

        /// <summary>
        /// Backing field for PredefinedFoldeText property
        /// </summary>
        private Text fPredefinedFoldeText;

        /// <summary>
        /// Backing field for AddButtonff7994Button property
        /// </summary>
        private Button fAddButtonff7994Button;

        /// <summary>
        /// Backing field for AddTextBlockDup1Text property
        /// </summary>
        private Text fAddTextBlockDup1Text;

        /// <summary>
        /// Backing field for EditButtonc4c22Button property
        /// </summary>
        private Button fEditButtonc4c22Button;

        /// <summary>
        /// Backing field for EditTextBlockDup1Text property
        /// </summary>
        private Text fEditTextBlockDup1Text;

        /// <summary>
        /// Backing field for CopyButton3a115Button property
        /// </summary>
        private Button fCopyButton3a115Button;

        /// <summary>
        /// Backing field for CopyTextBlockText property
        /// </summary>
        private Text fCopyTextBlockText;

        /// <summary>
        /// Backing field for RemoveButtone4bButton property
        /// </summary>
        private Button fRemoveButtone4bButton;

        /// <summary>
        /// Backing field for RemoveTextBlockDup1Text property
        /// </summary>
        private Text fRemoveTextBlockDup1Text;

        /// <summary>
        /// Backing field for ListView0a362acDataGrid property
        /// </summary>
        private DataGrid fListView0a362acDataGrid;

        /// <summary>
        /// Backing field for GridViewHeaderRDup1Header property
        /// </summary>
        private Header fGridViewHeaderRDup1Header;

        /// <summary>
        /// Backing field for DisplayNameGridHeaderItem property
        /// </summary>
        private HeaderItem fDisplayNameGridHeaderItem;

        /// <summary>
        /// Backing field for DisplayNameTextText property
        /// </summary>
        private Text fDisplayNameTextText;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup1Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup1Thumb;

        /// <summary>
        /// Backing field for DescriptionGridHeaderItem property
        /// </summary>
        private HeaderItem fDescriptionGridHeaderItem;

        /// <summary>
        /// Backing field for DescriptionDup1Text property
        /// </summary>
        private Text fDescriptionDup1Text;

        /// <summary>
        /// Backing field for DescriptionTextDup1Text property
        /// </summary>
        private Text fDescriptionTextDup1Text;

        /// <summary>
        /// Backing field for ThumbPARTHeadeDup2Thumb property
        /// </summary>
        private Thumb fThumbPARTHeadeDup2Thumb;

        /// <summary>
        /// Backing field for ScrollBarVerticDup7ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarVerticDup7ScrollBar;

        /// <summary>
        /// Backing field for RepeatButtonLinDup0Button property
        /// </summary>
        private Button fRepeatButtonLinDup0Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup0Button property
        /// </summary>
        private Button fRepeatButtonPagDup0Button;

        /// <summary>
        /// Backing field for RepeatButtonPagDup1Button property
        /// </summary>
        private Button fRepeatButtonPagDup1Button;

        /// <summary>
        /// Backing field for ThumbThumb property
        /// </summary>
        private Thumb fThumbThumb;

        /// <summary>
        /// Backing field for RepeatButtonLinDup1Button property
        /// </summary>
        private Button fRepeatButtonLinDup1Button;

        /// <summary>
        /// Backing field for ScrollBarHorizoDup7ScrollBar property
        /// </summary>
        private ScrollBar fScrollBarHorizoDup7ScrollBar;

        /// <summary>
        /// Backing field for SystemWindowsCoDup5TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup5TabItem;

        /// <summary>
        /// Backing field for WorkflowsTextmWText property
        /// </summary>
        private Text fWorkflowsTextmWText;

        /// <summary>
        /// Backing field for WorkflowsTextBlText property
        /// </summary>
        private Text fWorkflowsTextBlText;

        /// <summary>
        /// Backing field for Text22D9C34E84CText property
        /// </summary>
        private Text fText22D9C34E84CText;

        /// <summary>
        /// Backing field for TextC8D15BD39C8Text property
        /// </summary>
        private Text fTextC8D15BD39C8Text;

        /// <summary>
        /// Backing field for SystemWindowsCoDup6TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup6TabItem;

        /// <summary>
        /// Backing field for AddressingTextmText property
        /// </summary>
        private Text fAddressingTextmText;

        /// <summary>
        /// Backing field for AddressingTextBText property
        /// </summary>
        private Text fAddressingTextBText;

        /// <summary>
        /// Backing field for Text47EB5CBA4D1Text property
        /// </summary>
        private Text fText47EB5CBA4D1Text;

        /// <summary>
        /// Backing field for Text0757E148179Text property
        /// </summary>
        private Text fText0757E148179Text;

        /// <summary>
        /// Backing field for DeviceConfiguraTabItem property
        /// </summary>
        private TabItem fDeviceConfiguraTabItem;

        /// <summary>
        /// Backing field for DeviceConfiguraText property
        /// </summary>
        private Text fDeviceConfiguraText;

        /// <summary>
        /// Backing field for TemplateConfiguTabItem property
        /// </summary>
        private TabItem fTemplateConfiguTabItem;

        /// <summary>
        /// Backing field for TemplateConfiguText property
        /// </summary>
        private Text fTemplateConfiguText;

        /// <summary>
        /// Backing field for LogTabItem9b4f3TabItem property
        /// </summary>
        private TabItem fLogTabItem9b4f3TabItem;

        /// <summary>
        /// Backing field for LogTextBlockText property
        /// </summary>
        private Text fLogTextBlockText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup7TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup7TabItem;

        /// <summary>
        /// Backing field for SecurityTextmSeText property
        /// </summary>
        private Text fSecurityTextmSeText;

        /// <summary>
        /// Backing field for SecurityTextBloText property
        /// </summary>
        private Text fSecurityTextBloText;

        /// <summary>
        /// Backing field for Text8A7A84DB894Text property
        /// </summary>
        private Text fText8A7A84DB894Text;

        /// <summary>
        /// Backing field for Text16F78FB18FFText property
        /// </summary>
        private Text fText16F78FB18FFText;

        /// <summary>
        /// Backing field for SystemWindowsCoDup8TabItem property
        /// </summary>
        private TabItem fSystemWindowsCoDup8TabItem;

        /// <summary>
        /// Backing field for AnalyticsTextmAText property
        /// </summary>
        private Text fAnalyticsTextmAText;

        /// <summary>
        /// Backing field for AnalyticsTextBlText property
        /// </summary>
        private Text fAnalyticsTextBlText;

        /// <summary>
        /// Backing field for AboutTabItemf45TabItem property
        /// </summary>
        private TabItem fAboutTabItemf45TabItem;

        /// <summary>
        /// Backing field for AboutTextBlockText property
        /// </summary>
        private Text fAboutTextBlockText;

        /// <summary>
        /// The System Ip
        /// </summary>
        private string systemIP;

        /// <summary>
        /// Initializes a new instance of the <see cref="SendToFolderAdd"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public SendToFolderAdd(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SendToFolderAdd"/> class using the default UIAFramework.
        /// </summary>
        public SendToFolderAdd()
        {
            Desktop = new Desktop();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SendToFolderAdd"/> class using the default UIAFramework.
        /// </summary>
        /// <param name="address">
        /// The system IP address.
        /// </param>
        public SendToFolderAdd(string address)
        {
            systemIP = address;
            Desktop = new Desktop(UIAFramework.ManagedUIA);
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        /// <summary>
        /// Gets Reference to HPDigitalSendinWindow
        /// </summary>
        public Window HPDigitalSendinWindow
        {
            get
            {
                if (null == fHPDigitalSendinWindow)
                {
                    fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                    fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software Configuration (Server IP Address: {systemIP})");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AB81453F-68AD-4243-ACA8-B4D9362C4ED4");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                }

                return fHPDigitalSendinWindow;
            }
        }

        /// <summary>
        /// Gets Reference to AddaPredefinedFWindow
        /// </summary>
        public Window AddaPredefinedFWindow
        {
            get
            {
                if (null == fAddaPredefinedFWindow)
                {
                    fAddaPredefinedFWindow = new Window("AddaPredefinedFWindow", HPDigitalSendinWindow);
                    fAddaPredefinedFWindow.UIMap.Scope = UIASeachScope.Children;
                    fAddaPredefinedFWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add a Predefined Folder");
                    fAddaPredefinedFWindow.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"F076D78C-CCB7-427a-A83B-FDE7A9158683");
                    fAddaPredefinedFWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Window");
                }

                return fAddaPredefinedFWindow;
            }
        }

        /// <summary>
        /// Gets Reference to AddaPredefinedFTitleBar
        /// </summary>
        public TitleBar AddaPredefinedFTitleBar
        {
            get
            {
                if (null == fAddaPredefinedFTitleBar)
                {
                    fAddaPredefinedFTitleBar = new TitleBar("AddaPredefinedFTitleBar", AddaPredefinedFWindow);
                    fAddaPredefinedFTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fAddaPredefinedFTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add a Predefined Folder");
                    fAddaPredefinedFTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                }

                return fAddaPredefinedFTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemMenuBarSyDup0MenuBar
        /// </summary>
        public MenuBar SystemMenuBarSyDup0MenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyDup0MenuBar)
                {
                    fSystemMenuBarSyDup0MenuBar = new MenuBar("SystemMenuBarSyDup0MenuBar", AddaPredefinedFTitleBar);
                    fSystemMenuBarSyDup0MenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                    fSystemMenuBarSyDup0MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                }

                return fSystemMenuBarSyDup0MenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemItem1Dup0MenuItem
        /// </summary>
        public MenuItem SystemItem1Dup0MenuItem
        {
            get
            {
                if (null == fSystemItem1Dup0MenuItem)
                {
                    fSystemItem1Dup0MenuItem = new MenuItem("SystemItem1Dup0MenuItem", SystemMenuBarSyDup0MenuBar);
                    fSystemItem1Dup0MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                    fSystemItem1Dup0MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                }

                return fSystemItem1Dup0MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to MinimizeMinimizDup0Button
        /// </summary>
        public Button MinimizeMinimizDup0Button
        {
            get
            {
                if (null == fMinimizeMinimizDup0Button)
                {
                    fMinimizeMinimizDup0Button = new Button("MinimizeMinimizDup0Button", AddaPredefinedFTitleBar);
                    fMinimizeMinimizDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                    fMinimizeMinimizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                }

                return fMinimizeMinimizDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to MaximizeMaximizDup0Button
        /// </summary>
        public Button MaximizeMaximizDup0Button
        {
            get
            {
                if (null == fMaximizeMaximizDup0Button)
                {
                    fMaximizeMaximizDup0Button = new Button("MaximizeMaximizDup0Button", AddaPredefinedFTitleBar);
                    fMaximizeMaximizDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                    fMaximizeMaximizDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                }

                return fMaximizeMaximizDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to CloseCloseDup0Button
        /// </summary>
        public Button CloseCloseDup0Button
        {
            get
            {
                if (null == fCloseCloseDup0Button)
                {
                    fCloseCloseDup0Button = new Button("CloseCloseDup0Button", AddaPredefinedFTitleBar);
                    fCloseCloseDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                    fCloseCloseDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                }

                return fCloseCloseDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerDup0Pane
        /// </summary>
        public Pane ScrollViewerDup0Pane
        {
            get
            {
                if (null == fScrollViewerDup0Pane)
                {
                    fScrollViewerDup0Pane = new Pane("ScrollViewerDup0Pane", AddaPredefinedFWindow);
                    fScrollViewerDup0Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerDup0Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ErrorConflictUsDup0Custom
        /// </summary>
        public Custom ErrorConflictUsDup0Custom
        {
            get
            {
                if (null == fErrorConflictUsDup0Custom)
                {
                    fErrorConflictUsDup0Custom = new Custom("ErrorConflictUsDup0Custom", ScrollViewerDup0Pane);
                    fErrorConflictUsDup0Custom.UIMap.Scope = UIASeachScope.Children;
                    fErrorConflictUsDup0Custom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mErrorConflictUserControl");
                    fErrorConflictUsDup0Custom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ErrorConflictUserControl");
                }

                return fErrorConflictUsDup0Custom;
            }
        }

        /// <summary>
        /// Gets Reference to ImageImage
        /// </summary>
        public Image ImageImage
        {
            get
            {
                if (null == fImageImage)
                {
                    fImageImage = new Image("ImageImage", ErrorConflictUsDup0Custom);
                    fImageImage.UIMap.Scope = UIASeachScope.Children;
                    fImageImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Image");
                }

                return fImageImage;
            }
        }

        /// <summary>
        /// Gets Reference to A1AFolderQuickSText
        /// </summary>
        public Text A1AFolderQuickSText
        {
            get
            {
                if (null == fA1AFolderQuickSText)
                {
                    fA1AFolderQuickSText = new Text("A1AFolderQuickSText", ErrorConflictUsDup0Custom);
                    fA1AFolderQuickSText.UIMap.Scope = UIASeachScope.Children;
                    fA1AFolderQuickSText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33CC58FF-B4EB-41e5-B4AC-3A926D5E70A7");
                    fA1AFolderQuickSText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fA1AFolderQuickSText;
            }
        }

        /// <summary>
        /// Gets Reference to NameandDescriptGroup
        /// </summary>
        public Group NameandDescriptGroup
        {
            get
            {
                if (null == fNameandDescriptGroup)
                {
                    fNameandDescriptGroup = new Group("NameandDescriptGroup", ScrollViewerDup0Pane);
                    fNameandDescriptGroup.UIMap.Scope = UIASeachScope.Children;
                    fNameandDescriptGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name and Description");
                    fNameandDescriptGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fNameandDescriptGroup;
            }
        }

        /// <summary>
        /// Gets Reference to NameandDescriptText
        /// </summary>
        public Text NameandDescriptText
        {
            get
            {
                if (null == fNameandDescriptText)
                {
                    fNameandDescriptText = new Text("NameandDescriptText", NameandDescriptGroup);
                    fNameandDescriptText.UIMap.Scope = UIASeachScope.Children;
                    fNameandDescriptText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name and Description");
                    fNameandDescriptText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fNameandDescriptText;
            }
        }

        /// <summary>
        /// Gets Reference to NameText
        /// </summary>
        public Text NameText
        {
            get
            {
                if (null == fNameText)
                {
                    fNameText = new Text("NameText", NameandDescriptGroup);
                    fNameText.UIMap.Scope = UIASeachScope.Children;
                    fNameText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                    fNameText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fNameText;
            }
        }

        /// <summary>
        /// Gets Reference to NameTextBlockText
        /// </summary>
        public Text NameTextBlockText
        {
            get
            {
                if (null == fNameTextBlockText)
                {
                    fNameTextBlockText = new Text("NameTextBlockText", NameText);
                    fNameTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fNameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Name");
                    fNameTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fNameTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxb3409250Edit
        /// </summary>
        public Edit FolderNameTextBox
        {
            get
            {
                if (null == fTextBoxb3409250Edit)
                {
                    fTextBoxb3409250Edit = new Edit("TextBoxb3409250Edit", NameandDescriptGroup);
                    fTextBoxb3409250Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxb3409250Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b3409250-02fe-4334-b732-6c718d89b978");
                    fTextBoxb3409250Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxb3409250Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup0Pane
        /// </summary>
        public Pane ScrollViewerPARDup0Pane
        {
            get
            {
                if (null == fScrollViewerPARDup0Pane)
                {
                    fScrollViewerPARDup0Pane = new Pane("ScrollViewerPARDup0Pane", FolderNameTextBox);
                    fScrollViewerPARDup0Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup0Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup0Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup0ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup0ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup0ScrollBar)
                {
                    fScrollBarVerticDup0ScrollBar = new ScrollBar("ScrollBarVerticDup0ScrollBar", ScrollViewerPARDup0Pane);
                    fScrollBarVerticDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup0ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup0ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup0ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup0ScrollBar)
                {
                    fScrollBarHorizoDup0ScrollBar = new ScrollBar("ScrollBarHorizoDup0ScrollBar", ScrollViewerPARDup0Pane);
                    fScrollBarHorizoDup0ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup0ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup0ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to DescriptionDup0Text
        /// </summary>
        public Text DescriptionDup0Text
        {
            get
            {
                if (null == fDescriptionDup0Text)
                {
                    fDescriptionDup0Text = new Text("DescriptionDup0Text", NameandDescriptGroup);
                    fDescriptionDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDescriptionDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                    fDescriptionDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fDescriptionDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to DescriptionTextDup0Text
        /// </summary>
        public Text DescriptionTextDup0Text
        {
            get
            {
                if (null == fDescriptionTextDup0Text)
                {
                    fDescriptionTextDup0Text = new Text("DescriptionTextDup0Text", DescriptionDup0Text);
                    fDescriptionTextDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fDescriptionTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                    fDescriptionTextDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fDescriptionTextDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox2bcc5c80Edit
        /// </summary>
        public Edit FolderDescriptionTextBox
        {
            get
            {
                if (null == fTextBox2bcc5c80Edit)
                {
                    fTextBox2bcc5c80Edit = new Edit("TextBox2bcc5c80Edit", NameandDescriptGroup);
                    fTextBox2bcc5c80Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox2bcc5c80Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2bcc5c80-7540-4810-9169-68ab038475bf");
                    fTextBox2bcc5c80Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox2bcc5c80Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup1Pane
        /// </summary>
        public Pane ScrollViewerPARDup1Pane
        {
            get
            {
                if (null == fScrollViewerPARDup1Pane)
                {
                    fScrollViewerPARDup1Pane = new Pane("ScrollViewerPARDup1Pane", FolderDescriptionTextBox);
                    fScrollViewerPARDup1Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup1Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup1ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup1ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup1ScrollBar)
                {
                    fScrollBarVerticDup1ScrollBar = new ScrollBar("ScrollBarVerticDup1ScrollBar", ScrollViewerPARDup1Pane);
                    fScrollBarVerticDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup1ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup1ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup1ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup1ScrollBar)
                {
                    fScrollBarHorizoDup1ScrollBar = new ScrollBar("ScrollBarHorizoDup1ScrollBar", ScrollViewerPARDup1Pane);
                    fScrollBarHorizoDup1ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup1ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup1ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to SelectthefolderGroup
        /// </summary>
        public Group SelectthefolderGroup
        {
            get
            {
                if (null == fSelectthefolderGroup)
                {
                    fSelectthefolderGroup = new Group("SelectthefolderGroup", ScrollViewerDup0Pane);
                    fSelectthefolderGroup.UIMap.Scope = UIASeachScope.Children;
                    fSelectthefolderGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Select the folder type for this Quick Set.");
                    fSelectthefolderGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"d31fb26d-eb13-4ed3-9b1f-ab4e954e9da7");
                    fSelectthefolderGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fSelectthefolderGroup;
            }
        }

        /// <summary>
        /// Gets Reference to SelectthefolderText
        /// </summary>
        public Text SelectthefolderText
        {
            get
            {
                if (null == fSelectthefolderText)
                {
                    fSelectthefolderText = new Text("SelectthefolderText", SelectthefolderGroup);
                    fSelectthefolderText.UIMap.Scope = UIASeachScope.Children;
                    fSelectthefolderText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Select the folder type for this Quick Set.");
                    fSelectthefolderText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSelectthefolderText;
            }
        }

        /// <summary>
        /// Gets Reference to SavetoastandardRadioButton
        /// </summary>
        public RadioButton SavetoastandardRadioButton
        {
            get
            {
                if (null == fSavetoastandardRadioButton)
                {
                    fSavetoastandardRadioButton = new RadioButton("SavetoastandardRadioButton", SelectthefolderGroup);
                    fSavetoastandardRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fSavetoastandardRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save to a standard shared network folder");
                    fSavetoastandardRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f883dfab-f4fd-4193-9570-9c73b1480bb2");
                    fSavetoastandardRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                }

                return fSavetoastandardRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to SavetoastandardText
        /// </summary>
        public Text SavetoastandardText
        {
            get
            {
                if (null == fSavetoastandardText)
                {
                    fSavetoastandardText = new Text("SavetoastandardText", SavetoastandardRadioButton);
                    fSavetoastandardText.UIMap.Scope = UIASeachScope.Children;
                    fSavetoastandardText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save to a standard shared network folder");
                    fSavetoastandardText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSavetoastandardText;
            }
        }

        /// <summary>
        /// Gets Reference to FolderDestinatiGroup
        /// </summary>
        public Group FolderDestinatiGroup
        {
            get
            {
                if (null == fFolderDestinatiGroup)
                {
                    fFolderDestinatiGroup = new Group("FolderDestinatiGroup", SelectthefolderGroup);
                    fFolderDestinatiGroup.UIMap.Scope = UIASeachScope.Children;
                    fFolderDestinatiGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Folder Destinations");
                    fFolderDestinatiGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"a18ca0ac-04ab-4d24-8bb5-c504741219bb");
                    fFolderDestinatiGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fFolderDestinatiGroup;
            }
        }

        /// <summary>
        /// Gets Reference to FolderDestinatiText
        /// </summary>
        public Text FolderDestinatiText
        {
            get
            {
                if (null == fFolderDestinatiText)
                {
                    fFolderDestinatiText = new Text("FolderDestinatiText", FolderDestinatiGroup);
                    fFolderDestinatiText.UIMap.Scope = UIASeachScope.Children;
                    fFolderDestinatiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Folder Destinations");
                    fFolderDestinatiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fFolderDestinatiText;
            }
        }

        /// <summary>
        /// Gets Reference to ListView851eb6cDataGrid
        /// </summary>
        public DataGrid ListView851eb6cDataGrid
        {
            get
            {
                if (null == fListView851eb6cDataGrid)
                {
                    fListView851eb6cDataGrid = new DataGrid("ListView851eb6cDataGrid", FolderDestinatiGroup);
                    fListView851eb6cDataGrid.UIMap.Scope = UIASeachScope.Children;
                    fListView851eb6cDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"851eb6c1-644d-4405-be00-de0b61508f93");
                    fListView851eb6cDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListView");
                }

                return fListView851eb6cDataGrid;
            }
        }

        /// <summary>
        /// Gets Reference to GridViewHeaderRDup0Header
        /// </summary>
        public Header GridViewHeaderRDup0Header
        {
            get
            {
                if (null == fGridViewHeaderRDup0Header)
                {
                    fGridViewHeaderRDup0Header = new Header("GridViewHeaderRDup0Header", ListView851eb6cDataGrid);
                    fGridViewHeaderRDup0Header.UIMap.Scope = UIASeachScope.Children;
                    fGridViewHeaderRDup0Header.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewHeaderRowPresenter");
                }

                return fGridViewHeaderRDup0Header;
            }
        }

        /// <summary>
        /// Gets Reference to NetworkFolderPaHeaderItem
        /// </summary>
        public HeaderItem NetworkFolderPaHeaderItem
        {
            get
            {
                if (null == fNetworkFolderPaHeaderItem)
                {
                    fNetworkFolderPaHeaderItem = new HeaderItem("NetworkFolderPaHeaderItem", GridViewHeaderRDup0Header);
                    fNetworkFolderPaHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fNetworkFolderPaHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network Folder Path");
                    fNetworkFolderPaHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                }

                return fNetworkFolderPaHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to NetworkFolderPaDup0Text
        /// </summary>
        public Text NetworkFolderPaDup0Text
        {
            get
            {
                if (null == fNetworkFolderPaDup0Text)
                {
                    fNetworkFolderPaDup0Text = new Text("NetworkFolderPaDup0Text", NetworkFolderPaHeaderItem);
                    fNetworkFolderPaDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fNetworkFolderPaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network Folder Path");
                    fNetworkFolderPaDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fNetworkFolderPaDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to NetworkFolderPaDup1Text
        /// </summary>
        public Text NetworkFolderPaDup1Text
        {
            get
            {
                if (null == fNetworkFolderPaDup1Text)
                {
                    fNetworkFolderPaDup1Text = new Text("NetworkFolderPaDup1Text", NetworkFolderPaDup0Text);
                    fNetworkFolderPaDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fNetworkFolderPaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network Folder Path");
                    fNetworkFolderPaDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fNetworkFolderPaDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup0Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup0Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup0Thumb)
                {
                    fThumbPARTHeadeDup0Thumb = new Thumb("ThumbPARTHeadeDup0Thumb", NetworkFolderPaHeaderItem);
                    fThumbPARTHeadeDup0Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup0Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to AddButton144e03Button
        /// </summary>
        public Button FolderAddButton
        {
            get
            {
                if (null == fAddButton144e03Button)
                {
                    fAddButton144e03Button = new Button("AddButton144e03Button", FolderDestinatiGroup);
                    fAddButton144e03Button.UIMap.Scope = UIASeachScope.Children;
                    fAddButton144e03Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add...");
                    fAddButton144e03Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"144e0328-3e1d-4121-9e66-331a90600a5b");
                    fAddButton144e03Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fAddButton144e03Button;
            }
        }

        /// <summary>
        /// Gets Reference to AddTextBlockDup0Text
        /// </summary>
        public Text AddTextBlockDup0Text
        {
            get
            {
                if (null == fAddTextBlockDup0Text)
                {
                    fAddTextBlockDup0Text = new Text("AddTextBlockDup0Text", FolderAddButton);
                    fAddTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAddTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add...");
                    fAddTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAddTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to EditButtonf860aButton
        /// </summary>
        public Button EditButtonf860aButton
        {
            get
            {
                if (null == fEditButtonf860aButton)
                {
                    fEditButtonf860aButton = new Button("EditButtonf860aButton", FolderDestinatiGroup);
                    fEditButtonf860aButton.UIMap.Scope = UIASeachScope.Children;
                    fEditButtonf860aButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit...");
                    fEditButtonf860aButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f860a1cc-a00a-4ba4-b6b0-3fa2e0ecf6d3");
                    fEditButtonf860aButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fEditButtonf860aButton;
            }
        }

        /// <summary>
        /// Gets Reference to EditTextBlockDup0Text
        /// </summary>
        public Text EditTextBlockDup0Text
        {
            get
            {
                if (null == fEditTextBlockDup0Text)
                {
                    fEditTextBlockDup0Text = new Text("EditTextBlockDup0Text", EditButtonf860aButton);
                    fEditTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fEditTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit...");
                    fEditTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fEditTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveButton717Button
        /// </summary>
        public Button RemoveButton717Button
        {
            get
            {
                if (null == fRemoveButton717Button)
                {
                    fRemoveButton717Button = new Button("RemoveButton717Button", FolderDestinatiGroup);
                    fRemoveButton717Button.UIMap.Scope = UIASeachScope.Children;
                    fRemoveButton717Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                    fRemoveButton717Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"717302bb-23fd-4b78-97c3-bdf78422d87f");
                    fRemoveButton717Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fRemoveButton717Button;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveTextBlockDup0Text
        /// </summary>
        public Text RemoveTextBlockDup0Text
        {
            get
            {
                if (null == fRemoveTextBlockDup0Text)
                {
                    fRemoveTextBlockDup0Text = new Text("RemoveTextBlockDup0Text", RemoveButton717Button);
                    fRemoveTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fRemoveTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                    fRemoveTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fRemoveTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SavetoapersonalRadioButton
        /// </summary>
        public RadioButton SavetoapersonalRadioButton
        {
            get
            {
                if (null == fSavetoapersonalRadioButton)
                {
                    fSavetoapersonalRadioButton = new RadioButton("SavetoapersonalRadioButton", SelectthefolderGroup);
                    fSavetoapersonalRadioButton.UIMap.Scope = UIASeachScope.Children;
                    fSavetoapersonalRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save to a personal shared folder");
                    fSavetoapersonalRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"05d5a5fc-e53b-4aba-a64e-d14b1a9190f7");
                    fSavetoapersonalRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RadioButton");
                }

                return fSavetoapersonalRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to SavetoapersonalText
        /// </summary>
        public Text SavetoapersonalText
        {
            get
            {
                if (null == fSavetoapersonalText)
                {
                    fSavetoapersonalText = new Text("SavetoapersonalText", SavetoapersonalRadioButton);
                    fSavetoapersonalText.UIMap.Scope = UIASeachScope.Children;
                    fSavetoapersonalText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save to a personal shared folder");
                    fSavetoapersonalText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSavetoapersonalText;
            }
        }

        /// <summary>
        /// Gets Reference to RequiresusersigDup0Text
        /// </summary>
        public Text RequiresusersigDup0Text
        {
            get
            {
                if (null == fRequiresusersigDup0Text)
                {
                    fRequiresusersigDup0Text = new Text("RequiresusersigDup0Text", SelectthefolderGroup);
                    fRequiresusersigDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fRequiresusersigDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Requires user sign-in and information specific to the user to create folder path.");
                    fRequiresusersigDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fRequiresusersigDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to RequiresusersigDup1Text
        /// </summary>
        public Text RequiresusersigDup1Text
        {
            get
            {
                if (null == fRequiresusersigDup1Text)
                {
                    fRequiresusersigDup1Text = new Text("RequiresusersigDup1Text", RequiresusersigDup0Text);
                    fRequiresusersigDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fRequiresusersigDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Requires user sign-in and information specific to the user to create folder path.");
                    fRequiresusersigDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fRequiresusersigDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievethedeviDup0Text
        /// </summary>
        public Text RetrievethedeviDup0Text
        {
            get
            {
                if (null == fRetrievethedeviDup0Text)
                {
                    fRetrievethedeviDup0Text = new Text("RetrievethedeviDup0Text", SelectthefolderGroup);
                    fRetrievethedeviDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fRetrievethedeviDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the device user's home folder using this attribute");
                    fRetrievethedeviDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2e99e1e2-2d9e-4e8f-a070-a1af9b38d3e3");
                    fRetrievethedeviDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fRetrievethedeviDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to RetrievethedeviDup1Text
        /// </summary>
        public Text RetrievethedeviDup1Text
        {
            get
            {
                if (null == fRetrievethedeviDup1Text)
                {
                    fRetrievethedeviDup1Text = new Text("RetrievethedeviDup1Text", RetrievethedeviDup0Text);
                    fRetrievethedeviDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fRetrievethedeviDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Retrieve the device user's home folder using this attribute");
                    fRetrievethedeviDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fRetrievethedeviDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox36269979Edit
        /// </summary>
        public Edit TextBox36269979Edit
        {
            get
            {
                if (null == fTextBox36269979Edit)
                {
                    fTextBox36269979Edit = new Edit("TextBox36269979Edit", SelectthefolderGroup);
                    fTextBox36269979Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox36269979Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"36269979-d929-43b8-aa7e-9aa26c52325e");
                    fTextBox36269979Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox36269979Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup2Pane
        /// </summary>
        public Pane ScrollViewerPARDup2Pane
        {
            get
            {
                if (null == fScrollViewerPARDup2Pane)
                {
                    fScrollViewerPARDup2Pane = new Pane("ScrollViewerPARDup2Pane", TextBox36269979Edit);
                    fScrollViewerPARDup2Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup2Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup2Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup2ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup2ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup2ScrollBar)
                {
                    fScrollBarVerticDup2ScrollBar = new ScrollBar("ScrollBarVerticDup2ScrollBar", ScrollViewerPARDup2Pane);
                    fScrollBarVerticDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup2ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup2ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup2ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup2ScrollBar)
                {
                    fScrollBarHorizoDup2ScrollBar = new ScrollBar("ScrollBarHorizoDup2ScrollBar", ScrollViewerPARDup2Pane);
                    fScrollBarHorizoDup2ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup2ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup2ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to CreatesubfolderCheckBox
        /// </summary>
        public CheckBox CreatesubfolderCheckBox
        {
            get
            {
                if (null == fCreatesubfolderCheckBox)
                {
                    fCreatesubfolderCheckBox = new CheckBox("CreatesubfolderCheckBox", SelectthefolderGroup);
                    fCreatesubfolderCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fCreatesubfolderCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create subfolder based on user name");
                    fCreatesubfolderCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2029dced-ddef-4ae5-bacb-503832226d0c");
                    fCreatesubfolderCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                }

                return fCreatesubfolderCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to CreatesubfolderText
        /// </summary>
        public Text CreatesubfolderText
        {
            get
            {
                if (null == fCreatesubfolderText)
                {
                    fCreatesubfolderText = new Text("CreatesubfolderText", CreatesubfolderCheckBox);
                    fCreatesubfolderText.UIMap.Scope = UIASeachScope.Children;
                    fCreatesubfolderText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create subfolder based on user name");
                    fCreatesubfolderText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fCreatesubfolderText;
            }
        }

        /// <summary>
        /// Gets Reference to AppendsausernamDup0Text
        /// </summary>
        public Text AppendsausernamDup0Text
        {
            get
            {
                if (null == fAppendsausernamDup0Text)
                {
                    fAppendsausernamDup0Text = new Text("AppendsausernamDup0Text", SelectthefolderGroup);
                    fAppendsausernamDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAppendsausernamDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Appends a user name subfolder at the end of the folder path.");
                    fAppendsausernamDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fAppendsausernamDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to AppendsausernamDup1Text
        /// </summary>
        public Text AppendsausernamDup1Text
        {
            get
            {
                if (null == fAppendsausernamDup1Text)
                {
                    fAppendsausernamDup1Text = new Text("AppendsausernamDup1Text", AppendsausernamDup0Text);
                    fAppendsausernamDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAppendsausernamDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Appends a user name subfolder at the end of the folder path.");
                    fAppendsausernamDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAppendsausernamDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to OnlyallowaccessCheckBox
        /// </summary>
        public CheckBox OnlyallowaccessCheckBox
        {
            get
            {
                if (null == fOnlyallowaccessCheckBox)
                {
                    fOnlyallowaccessCheckBox = new CheckBox("OnlyallowaccessCheckBox", SelectthefolderGroup);
                    fOnlyallowaccessCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fOnlyallowaccessCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Only allow access to user's own Directory");
                    fOnlyallowaccessCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"728a5922-21d7-4f85-a565-3256a31baf26");
                    fOnlyallowaccessCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                }

                return fOnlyallowaccessCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to OnlyallowaccessText
        /// </summary>
        public Text OnlyallowaccessText
        {
            get
            {
                if (null == fOnlyallowaccessText)
                {
                    fOnlyallowaccessText = new Text("OnlyallowaccessText", OnlyallowaccessCheckBox);
                    fOnlyallowaccessText.UIMap.Scope = UIASeachScope.Children;
                    fOnlyallowaccessText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Only allow access to user's own Directory");
                    fOnlyallowaccessText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fOnlyallowaccessText;
            }
        }

        /// <summary>
        /// Gets Reference to SetsreadwriteacDup0Text
        /// </summary>
        public Text SetsreadwriteacDup0Text
        {
            get
            {
                if (null == fSetsreadwriteacDup0Text)
                {
                    fSetsreadwriteacDup0Text = new Text("SetsreadwriteacDup0Text", SelectthefolderGroup);
                    fSetsreadwriteacDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSetsreadwriteacDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sets read/write access.");
                    fSetsreadwriteacDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"da8d1d76-5efc-4e29-bd83-7e738db984bd");
                    fSetsreadwriteacDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fSetsreadwriteacDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SetsreadwriteacDup1Text
        /// </summary>
        public Text SetsreadwriteacDup1Text
        {
            get
            {
                if (null == fSetsreadwriteacDup1Text)
                {
                    fSetsreadwriteacDup1Text = new Text("SetsreadwriteacDup1Text", SetsreadwriteacDup0Text);
                    fSetsreadwriteacDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSetsreadwriteacDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Sets read/write access.");
                    fSetsreadwriteacDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSetsreadwriteacDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to VerifyfolderaccCheckBox
        /// </summary>
        public CheckBox VerifyfolderaccCheckBox
        {
            get
            {
                if (null == fVerifyfolderaccCheckBox)
                {
                    fVerifyfolderaccCheckBox = new CheckBox("VerifyfolderaccCheckBox", SelectthefolderGroup);
                    fVerifyfolderaccCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fVerifyfolderaccCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Verify folder access prior to job start (Applicable for Future Smart devices only)");
                    fVerifyfolderaccCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8A5E9F58-264A-4F33-92B0-C9B79814B64F");
                    fVerifyfolderaccCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"CheckBox");
                }

                return fVerifyfolderaccCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to VerifyfolderaccText
        /// </summary>
        public Text VerifyfolderaccText
        {
            get
            {
                if (null == fVerifyfolderaccText)
                {
                    fVerifyfolderaccText = new Text("VerifyfolderaccText", VerifyfolderaccCheckBox);
                    fVerifyfolderaccText.UIMap.Scope = UIASeachScope.Children;
                    fVerifyfolderaccText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Verify folder access prior to job start (Applicable for Future Smart devices only)");
                    fVerifyfolderaccText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fVerifyfolderaccText;
            }
        }

        /// <summary>
        /// Gets Reference to WhenuncheckedusText
        /// </summary>
        public Text WhenuncheckedusText
        {
            get
            {
                if (null == fWhenuncheckedusText)
                {
                    fWhenuncheckedusText = new Text("WhenuncheckedusText", SelectthefolderGroup);
                    fWhenuncheckedusText.UIMap.Scope = UIASeachScope.Children;
                    fWhenuncheckedusText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"When unchecked, users can save jobs more quickly but jobs may fail if the folder is unavailable.");
                    fWhenuncheckedusText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fWhenuncheckedusText;
            }
        }

        /// <summary>
        /// Gets Reference to OKButton12d88a6Button
        /// </summary>
        public Button OKButton
        {
            get
            {
                if (null == fOKButton12d88a6Button)
                {
                    fOKButton12d88a6Button = new Button("OKButton12d88a6Button", ScrollViewerDup0Pane);
                    fOKButton12d88a6Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButton12d88a6Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKButton12d88a6Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"12d88a66-105a-4fb1-bba5-a04d96dc395a");
                    fOKButton12d88a6Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fOKButton12d88a6Button;
            }
        }

        /// <summary>
        /// Gets Reference to OKTextBlockDup0Text
        /// </summary>
        public Text OKTextBlockDup0Text
        {
            get
            {
                if (null == fOKTextBlockDup0Text)
                {
                    fOKTextBlockDup0Text = new Text("OKTextBlockDup0Text", OKButton);
                    fOKTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fOKTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to CancelButton0f8Button
        /// </summary>
        public Button CancelButton0f8Button
        {
            get
            {
                if (null == fCancelButton0f8Button)
                {
                    fCancelButton0f8Button = new Button("CancelButton0f8Button", ScrollViewerDup0Pane);
                    fCancelButton0f8Button.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton0f8Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    fCancelButton0f8Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0f84ae41-7844-4434-88e0-4a613bebe0d5");
                    fCancelButton0f8Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fCancelButton0f8Button;
            }
        }

        /// <summary>
        /// Gets Reference to CancelTextBlockDup0Text
        /// </summary>
        public Text CancelTextBlockDup0Text
        {
            get
            {
                if (null == fCancelTextBlockDup0Text)
                {
                    fCancelTextBlockDup0Text = new Text("CancelTextBlockDup0Text", CancelButton0f8Button);
                    fCancelTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fCancelTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    fCancelTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fCancelTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to HelpButtoneb783Button
        /// </summary>
        public Button HelpButtoneb783Button
        {
            get
            {
                if (null == fHelpButtoneb783Button)
                {
                    fHelpButtoneb783Button = new Button("HelpButtoneb783Button", ScrollViewerDup0Pane);
                    fHelpButtoneb783Button.UIMap.Scope = UIASeachScope.Children;
                    fHelpButtoneb783Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                    fHelpButtoneb783Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"eb783fb3-fd1b-48ac-8c5c-39a3978f6673");
                    fHelpButtoneb783Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fHelpButtoneb783Button;
            }
        }

        /// <summary>
        /// Gets Reference to HelpTextBlockDup0Text
        /// </summary>
        public Text HelpTextBlockDup0Text
        {
            get
            {
                if (null == fHelpTextBlockDup0Text)
                {
                    fHelpTextBlockDup0Text = new Text("HelpTextBlockDup0Text", HelpButtoneb783Button);
                    fHelpTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fHelpTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                    fHelpTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fHelpTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup3ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup3ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup3ScrollBar)
                {
                    fScrollBarVerticDup3ScrollBar = new ScrollBar("ScrollBarVerticDup3ScrollBar", ScrollViewerDup0Pane);
                    fScrollBarVerticDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup3ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup3ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup3ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup3ScrollBar)
                {
                    fScrollBarHorizoDup3ScrollBar = new ScrollBar("ScrollBarHorizoDup3ScrollBar", ScrollViewerDup0Pane);
                    fScrollBarHorizoDup3ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup3ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup3ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to HPDigitalSendinTitleBar
        /// </summary>
        public TitleBar HPDigitalSendinTitleBar
        {
            get
            {
                if (null == fHPDigitalSendinTitleBar)
                {
                    fHPDigitalSendinTitleBar = new TitleBar("HPDigitalSendinTitleBar", HPDigitalSendinWindow);
                    fHPDigitalSendinTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Digital Sending Software Configuration (Server IP Address: 15.75.41.34)");
                    fHPDigitalSendinTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                }

                return fHPDigitalSendinTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemMenuBarSyDup1MenuBar
        /// </summary>
        public MenuBar SystemMenuBarSyDup1MenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyDup1MenuBar)
                {
                    fSystemMenuBarSyDup1MenuBar = new MenuBar("SystemMenuBarSyDup1MenuBar", HPDigitalSendinTitleBar);
                    fSystemMenuBarSyDup1MenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                    fSystemMenuBarSyDup1MenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                }

                return fSystemMenuBarSyDup1MenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemItem1Dup1MenuItem
        /// </summary>
        public MenuItem SystemItem1Dup1MenuItem
        {
            get
            {
                if (null == fSystemItem1Dup1MenuItem)
                {
                    fSystemItem1Dup1MenuItem = new MenuItem("SystemItem1Dup1MenuItem", SystemMenuBarSyDup1MenuBar);
                    fSystemItem1Dup1MenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                    fSystemItem1Dup1MenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                }

                return fSystemItem1Dup1MenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to MinimizeMinimizDup1Button
        /// </summary>
        public Button MinimizeMinimizDup1Button
        {
            get
            {
                if (null == fMinimizeMinimizDup1Button)
                {
                    fMinimizeMinimizDup1Button = new Button("MinimizeMinimizDup1Button", HPDigitalSendinTitleBar);
                    fMinimizeMinimizDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Minimize");
                    fMinimizeMinimizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Minimize");
                }

                return fMinimizeMinimizDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to MaximizeMaximizDup1Button
        /// </summary>
        public Button MaximizeMaximizDup1Button
        {
            get
            {
                if (null == fMaximizeMaximizDup1Button)
                {
                    fMaximizeMaximizDup1Button = new Button("MaximizeMaximizDup1Button", HPDigitalSendinTitleBar);
                    fMaximizeMaximizDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Maximize");
                    fMaximizeMaximizDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Maximize");
                }

                return fMaximizeMaximizDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to CloseCloseDup1Button
        /// </summary>
        public Button CloseCloseDup1Button
        {
            get
            {
                if (null == fCloseCloseDup1Button)
                {
                    fCloseCloseDup1Button = new Button("CloseCloseDup1Button", HPDigitalSendinTitleBar);
                    fCloseCloseDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                    fCloseCloseDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                }

                return fCloseCloseDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to HelpButtonCB8CFButton
        /// </summary>
        public Button HelpButtonCB8CFButton
        {
            get
            {
                if (null == fHelpButtonCB8CFButton)
                {
                    fHelpButtonCB8CFButton = new Button("HelpButtonCB8CFButton", HPDigitalSendinWindow);
                    fHelpButtonCB8CFButton.UIMap.Scope = UIASeachScope.Children;
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CB8CF0C3-DFBE-49b8-B09B-03A34F5D4186");
                    fHelpButtonCB8CFButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fHelpButtonCB8CFButton;
            }
        }

        /// <summary>
        /// Gets Reference to HelpTextBlockDup1Text
        /// </summary>
        public Text HelpTextBlockDup1Text
        {
            get
            {
                if (null == fHelpTextBlockDup1Text)
                {
                    fHelpTextBlockDup1Text = new Text("HelpTextBlockDup1Text", HelpButtonCB8CFButton);
                    fHelpTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fHelpTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Help");
                    fHelpTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fHelpTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ApplyButton61E2Button
        /// </summary>
        public Button ApplyButton61E2Button
        {
            get
            {
                if (null == fApplyButton61E2Button)
                {
                    fApplyButton61E2Button = new Button("ApplyButton61E2Button", HPDigitalSendinWindow);
                    fApplyButton61E2Button.UIMap.Scope = UIASeachScope.Children;
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"61E2369B-F53B-4662-A361-B3034C4EFF67");
                    fApplyButton61E2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fApplyButton61E2Button;
            }
        }

        /// <summary>
        /// Gets Reference to ApplyTextBlockText
        /// </summary>
        public Text ApplyTextBlockText
        {
            get
            {
                if (null == fApplyTextBlockText)
                {
                    fApplyTextBlockText = new Text("ApplyTextBlockText", ApplyButton61E2Button);
                    fApplyTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                    fApplyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fApplyTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to CancelButton65CButton
        /// </summary>
        public Button CancelButton65CButton
        {
            get
            {
                if (null == fCancelButton65CButton)
                {
                    fCancelButton65CButton = new Button("CancelButton65CButton", HPDigitalSendinWindow);
                    fCancelButton65CButton.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"65C76204-7AB5-4681-B7FD-2D8F02DA6D4B");
                    fCancelButton65CButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fCancelButton65CButton;
            }
        }

        /// <summary>
        /// Gets Reference to CancelTextBlockDup1Text
        /// </summary>
        public Text CancelTextBlockDup1Text
        {
            get
            {
                if (null == fCancelTextBlockDup1Text)
                {
                    fCancelTextBlockDup1Text = new Text("CancelTextBlockDup1Text", CancelButton65CButton);
                    fCancelTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fCancelTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    fCancelTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fCancelTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to OKButtonCC2EF49Button
        /// </summary>
        public Button OKButtonCC2EF49Button
        {
            get
            {
                if (null == fOKButtonCC2EF49Button)
                {
                    fOKButtonCC2EF49Button = new Button("OKButtonCC2EF49Button", HPDigitalSendinWindow);
                    fOKButtonCC2EF49Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"CC2EF491-0BD1-4ac5-9D00-AA61A9D6BA0C");
                    fOKButtonCC2EF49Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fOKButtonCC2EF49Button;
            }
        }

        /// <summary>
        /// Gets Reference to OKTextBlockDup1Text
        /// </summary>
        public Text OKTextBlockDup1Text
        {
            get
            {
                if (null == fOKTextBlockDup1Text)
                {
                    fOKTextBlockDup1Text = new Text("OKTextBlockDup1Text", OKButtonCC2EF49Button);
                    fOKTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fOKTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TabControlec0fdTab
        /// </summary>
        public Tab TabControlec0fdTab
        {
            get
            {
                if (null == fTabControlec0fdTab)
                {
                    fTabControlec0fdTab = new Tab("TabControlec0fdTab", HPDigitalSendinWindow);
                    fTabControlec0fdTab.UIMap.Scope = UIASeachScope.Children;
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ec0fd6cd-2ab8-482f-96a5-d1fa158f38d1");
                    fTabControlec0fdTab.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabControl");
                }

                return fTabControlec0fdTab;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup0TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup0TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup0TabItem)
                {
                    fSystemWindowsCoDup0TabItem = new TabItem("SystemWindowsCoDup0TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup0TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1e2be878-0c03-4404-988c-54d0df925f0f");
                    fSystemWindowsCoDup0TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup0TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralTextmGenText
        /// </summary>
        public Text GeneralTextmGenText
        {
            get
            {
                if (null == fGeneralTextmGenText)
                {
                    fGeneralTextmGenText = new Text("GeneralTextmGenText", SystemWindowsCoDup0TabItem);
                    fGeneralTextmGenText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mGeneralTabLabel");
                    fGeneralTextmGenText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fGeneralTextmGenText;
            }
        }

        /// <summary>
        /// Gets Reference to GeneralTextBlocText
        /// </summary>
        public Text GeneralTextBlocText
        {
            get
            {
                if (null == fGeneralTextBlocText)
                {
                    fGeneralTextBlocText = new Text("GeneralTextBlocText", GeneralTextmGenText);
                    fGeneralTextBlocText.UIMap.Scope = UIASeachScope.Children;
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"General");
                    fGeneralTextBlocText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fGeneralTextBlocText;
            }
        }

        /// <summary>
        /// Gets Reference to Text933345b04e3Text
        /// </summary>
        public Text Text933345b04e3Text
        {
            get
            {
                if (null == fText933345b04e3Text)
                {
                    fText933345b04e3Text = new Text("Text933345b04e3Text", SystemWindowsCoDup0TabItem);
                    fText933345b04e3Text.UIMap.Scope = UIASeachScope.Children;
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"933345b0-4e39-44d3-a511-0077f3176ca4");
                    fText933345b04e3Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText933345b04e3Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text786caf67344Text
        /// </summary>
        public Text Text786caf67344Text
        {
            get
            {
                if (null == fText786caf67344Text)
                {
                    fText786caf67344Text = new Text("Text786caf67344Text", SystemWindowsCoDup0TabItem);
                    fText786caf67344Text.UIMap.Scope = UIASeachScope.Children;
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"786caf67-344f-4ddc-83a5-b9431fb36731");
                    fText786caf67344Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText786caf67344Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup1TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup1TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup1TabItem)
                {
                    fSystemWindowsCoDup1TabItem = new TabItem("SystemWindowsCoDup1TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup1TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4e90d18a-f33c-43c0-8505-08f4a17169b5");
                    fSystemWindowsCoDup1TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup1TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationTDup0Text
        /// </summary>
        public Text AuthenticationTDup0Text
        {
            get
            {
                if (null == fAuthenticationTDup0Text)
                {
                    fAuthenticationTDup0Text = new Text("AuthenticationTDup0Text", SystemWindowsCoDup1TabItem);
                    fAuthenticationTDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAuthTabLabel");
                    fAuthenticationTDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fAuthenticationTDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to AuthenticationTDup1Text
        /// </summary>
        public Text AuthenticationTDup1Text
        {
            get
            {
                if (null == fAuthenticationTDup1Text)
                {
                    fAuthenticationTDup1Text = new Text("AuthenticationTDup1Text", AuthenticationTDup0Text);
                    fAuthenticationTDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Authentication");
                    fAuthenticationTDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAuthenticationTDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text31EC91730B9Text
        /// </summary>
        public Text Text31EC91730B9Text
        {
            get
            {
                if (null == fText31EC91730B9Text)
                {
                    fText31EC91730B9Text = new Text("Text31EC91730B9Text", SystemWindowsCoDup1TabItem);
                    fText31EC91730B9Text.UIMap.Scope = UIASeachScope.Children;
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"31EC9173-0B98-4d46-BC99-7DF8EA2BE02F");
                    fText31EC91730B9Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText31EC91730B9Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextA479C271445Text
        /// </summary>
        public Text TextA479C271445Text
        {
            get
            {
                if (null == fTextA479C271445Text)
                {
                    fTextA479C271445Text = new Text("TextA479C271445Text", SystemWindowsCoDup1TabItem);
                    fTextA479C271445Text.UIMap.Scope = UIASeachScope.Children;
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"A479C271-445D-43f1-864D-7503428703E4");
                    fTextA479C271445Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fTextA479C271445Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup2TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup2TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup2TabItem)
                {
                    fSystemWindowsCoDup2TabItem = new TabItem("SystemWindowsCoDup2TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup2TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"33A07ED3-E1EE-411e-B583-7D0A3374100F");
                    fSystemWindowsCoDup2TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup2TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to EmailTextmEmailText
        /// </summary>
        public Text EmailTextmEmailText
        {
            get
            {
                if (null == fEmailTextmEmailText)
                {
                    fEmailTextmEmailText = new Text("EmailTextmEmailText", SystemWindowsCoDup2TabItem);
                    fEmailTextmEmailText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mEmailTabLabel");
                    fEmailTextmEmailText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fEmailTextmEmailText;
            }
        }

        /// <summary>
        /// Gets Reference to EmailTextBlockText
        /// </summary>
        public Text EmailTextBlockText
        {
            get
            {
                if (null == fEmailTextBlockText)
                {
                    fEmailTextBlockText = new Text("EmailTextBlockText", EmailTextmEmailText);
                    fEmailTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E-mail");
                    fEmailTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fEmailTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to Text32de714a8bdText
        /// </summary>
        public Text Text32de714a8bdText
        {
            get
            {
                if (null == fText32de714a8bdText)
                {
                    fText32de714a8bdText = new Text("Text32de714a8bdText", SystemWindowsCoDup2TabItem);
                    fText32de714a8bdText.UIMap.Scope = UIASeachScope.Children;
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"32de714a-8bda-4f11-bf20-b9a56b5f18bc");
                    fText32de714a8bdText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText32de714a8bdText;
            }
        }

        /// <summary>
        /// Gets Reference to Text3b2a8761f4fText
        /// </summary>
        public Text Text3b2a8761f4fText
        {
            get
            {
                if (null == fText3b2a8761f4fText)
                {
                    fText3b2a8761f4fText = new Text("Text3b2a8761f4fText", SystemWindowsCoDup2TabItem);
                    fText3b2a8761f4fText.UIMap.Scope = UIASeachScope.Children;
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3b2a8761-f4f6-41b1-b08c-9c33744bdc43");
                    fText3b2a8761f4fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText3b2a8761f4fText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockDup0Text
        /// </summary>
        public Text TextBlockDup0Text
        {
            get
            {
                if (null == fTextBlockDup0Text)
                {
                    fTextBlockDup0Text = new Text("TextBlockDup0Text", Text3b2a8761f4fText);
                    fTextBlockDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fTextBlockDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTextBlockDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup3TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup3TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup3TabItem)
                {
                    fSystemWindowsCoDup3TabItem = new TabItem("SystemWindowsCoDup3TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4f116988-2b22-473f-bca3-094589a44954");
                    fSystemWindowsCoDup3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to FaxTextmFaxTabLText
        /// </summary>
        public Text FaxTextmFaxTabLText
        {
            get
            {
                if (null == fFaxTextmFaxTabLText)
                {
                    fFaxTextmFaxTabLText = new Text("FaxTextmFaxTabLText", SystemWindowsCoDup3TabItem);
                    fFaxTextmFaxTabLText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFaxTabLabel");
                    fFaxTextmFaxTabLText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fFaxTextmFaxTabLText;
            }
        }

        /// <summary>
        /// Gets Reference to FaxTextBlockText
        /// </summary>
        public Text FaxTextBlockText
        {
            get
            {
                if (null == fFaxTextBlockText)
                {
                    fFaxTextBlockText = new Text("FaxTextBlockText", FaxTextmFaxTabLText);
                    fFaxTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Fax");
                    fFaxTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fFaxTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to TextD1ED4F16F38Text
        /// </summary>
        public Text TextD1ED4F16F38Text
        {
            get
            {
                if (null == fTextD1ED4F16F38Text)
                {
                    fTextD1ED4F16F38Text = new Text("TextD1ED4F16F38Text", SystemWindowsCoDup3TabItem);
                    fTextD1ED4F16F38Text.UIMap.Scope = UIASeachScope.Children;
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"D1ED4F16-F389-4dfd-A884-D258EDB48C11");
                    fTextD1ED4F16F38Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fTextD1ED4F16F38Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text7DDE04FD251Text
        /// </summary>
        public Text Text7DDE04FD251Text
        {
            get
            {
                if (null == fText7DDE04FD251Text)
                {
                    fText7DDE04FD251Text = new Text("Text7DDE04FD251Text", SystemWindowsCoDup3TabItem);
                    fText7DDE04FD251Text.UIMap.Scope = UIASeachScope.Children;
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7DDE04FD-2519-44c2-A212-67B0838E1C91");
                    fText7DDE04FD251Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText7DDE04FD251Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup4TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup4TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup4TabItem)
                {
                    fSystemWindowsCoDup4TabItem = new TabItem("SystemWindowsCoDup4TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup4TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ff96a045-6e12-4ce3-ba85-b65d16c39ffb");
                    fSystemWindowsCoDup4TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup4TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoFolderTexDup0Text
        /// </summary>
        public Text SendtoFolderTexDup0Text
        {
            get
            {
                if (null == fSendtoFolderTexDup0Text)
                {
                    fSendtoFolderTexDup0Text = new Text("SendtoFolderTexDup0Text", SystemWindowsCoDup4TabItem);
                    fSendtoFolderTexDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mFolderTabLabel");
                    fSendtoFolderTexDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fSendtoFolderTexDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to SendtoFolderTexDup1Text
        /// </summary>
        public Text SendtoFolderTexDup1Text
        {
            get
            {
                if (null == fSendtoFolderTexDup1Text)
                {
                    fSendtoFolderTexDup1Text = new Text("SendtoFolderTexDup1Text", SendtoFolderTexDup0Text);
                    fSendtoFolderTexDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send to Folder");
                    fSendtoFolderTexDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSendtoFolderTexDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text7a57f43ecb1Text
        /// </summary>
        public Text Text7a57f43ecb1Text
        {
            get
            {
                if (null == fText7a57f43ecb1Text)
                {
                    fText7a57f43ecb1Text = new Text("Text7a57f43ecb1Text", SystemWindowsCoDup4TabItem);
                    fText7a57f43ecb1Text.UIMap.Scope = UIASeachScope.Children;
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7a57f43e-cb18-48d3-ac92-9dad7b3dc47e");
                    fText7a57f43ecb1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText7a57f43ecb1Text;
            }
        }

        /// <summary>
        /// Gets Reference to TextBlockDup1Text
        /// </summary>
        public Text TextBlockDup1Text
        {
            get
            {
                if (null == fTextBlockDup1Text)
                {
                    fTextBlockDup1Text = new Text("TextBlockDup1Text", Text7a57f43ecb1Text);
                    fTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text654b650dd19Text
        /// </summary>
        public Text Text654b650dd19Text
        {
            get
            {
                if (null == fText654b650dd19Text)
                {
                    fText654b650dd19Text = new Text("Text654b650dd19Text", SystemWindowsCoDup4TabItem);
                    fText654b650dd19Text.UIMap.Scope = UIASeachScope.Children;
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"654b650d-d19f-413b-aaea-ed4ce008fdd5");
                    fText654b650dd19Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText654b650dd19Text;
            }
        }

        /// <summary>
        /// Gets Reference to ServiceConfigurCustom
        /// </summary>
        public Custom ServiceConfigurCustom
        {
            get
            {
                if (null == fServiceConfigurCustom)
                {
                    fServiceConfigurCustom = new Custom("ServiceConfigurCustom", SystemWindowsCoDup4TabItem);
                    fServiceConfigurCustom.UIMap.Scope = UIASeachScope.Children;
                    fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mServiceConfigurationFolderTab");
                    fServiceConfigurCustom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ServiceConfigurationFolderTab");
                }

                return fServiceConfigurCustom;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerDup1Pane
        /// </summary>
        public Pane ScrollViewerDup1Pane
        {
            get
            {
                if (null == fScrollViewerDup1Pane)
                {
                    fScrollViewerDup1Pane = new Pane("ScrollViewerDup1Pane", ServiceConfigurCustom);
                    fScrollViewerDup1Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerDup1Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerDup1Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ErrorConflictUsDup1Custom
        /// </summary>
        public Custom ErrorConflictUsDup1Custom
        {
            get
            {
                if (null == fErrorConflictUsDup1Custom)
                {
                    fErrorConflictUsDup1Custom = new Custom("ErrorConflictUsDup1Custom", ScrollViewerDup1Pane);
                    fErrorConflictUsDup1Custom.UIMap.Scope = UIASeachScope.Children;
                    fErrorConflictUsDup1Custom.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mErrorConflictUserControl");
                    fErrorConflictUsDup1Custom.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ErrorConflictUserControl");
                }

                return fErrorConflictUsDup1Custom;
            }
        }

        /// <summary>
        /// Gets Reference to CredentialstoAcGroup
        /// </summary>
        public Group CredentialstoAcGroup
        {
            get
            {
                if (null == fCredentialstoAcGroup)
                {
                    fCredentialstoAcGroup = new Group("CredentialstoAcGroup", ScrollViewerDup1Pane);
                    fCredentialstoAcGroup.UIMap.Scope = UIASeachScope.Children;
                    fCredentialstoAcGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Credentials to Access Public Folders");
                    fCredentialstoAcGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6db292db-e055-4737-86a1-eacc675e02cd");
                    fCredentialstoAcGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fCredentialstoAcGroup;
            }
        }

        /// <summary>
        /// Gets Reference to CredentialstoAcText
        /// </summary>
        public Text CredentialstoAcText
        {
            get
            {
                if (null == fCredentialstoAcText)
                {
                    fCredentialstoAcText = new Text("CredentialstoAcText", CredentialstoAcGroup);
                    fCredentialstoAcText.UIMap.Scope = UIASeachScope.Children;
                    fCredentialstoAcText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Credentials to Access Public Folders");
                    fCredentialstoAcText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fCredentialstoAcText;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameText
        /// </summary>
        public Text UsernameText
        {
            get
            {
                if (null == fUsernameText)
                {
                    fUsernameText = new Text("UsernameText", CredentialstoAcGroup);
                    fUsernameText.UIMap.Scope = UIASeachScope.Children;
                    fUsernameText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                    fUsernameText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fUsernameText;
            }
        }

        /// <summary>
        /// Gets Reference to UsernameTextBloText
        /// </summary>
        public Text UsernameTextBloText
        {
            get
            {
                if (null == fUsernameTextBloText)
                {
                    fUsernameTextBloText = new Text("UsernameTextBloText", UsernameText);
                    fUsernameTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fUsernameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Username");
                    fUsernameTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fUsernameTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBox8e9e0909Edit
        /// </summary>
        public Edit TextBox8e9e0909Edit
        {
            get
            {
                if (null == fTextBox8e9e0909Edit)
                {
                    fTextBox8e9e0909Edit = new Edit("TextBox8e9e0909Edit", CredentialstoAcGroup);
                    fTextBox8e9e0909Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBox8e9e0909Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8e9e0909-55e3-4b67-9564-591971183764");
                    fTextBox8e9e0909Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBox8e9e0909Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup3Pane
        /// </summary>
        public Pane ScrollViewerPARDup3Pane
        {
            get
            {
                if (null == fScrollViewerPARDup3Pane)
                {
                    fScrollViewerPARDup3Pane = new Pane("ScrollViewerPARDup3Pane", TextBox8e9e0909Edit);
                    fScrollViewerPARDup3Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup3Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup3Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup4ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup4ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup4ScrollBar)
                {
                    fScrollBarVerticDup4ScrollBar = new ScrollBar("ScrollBarVerticDup4ScrollBar", ScrollViewerPARDup3Pane);
                    fScrollBarVerticDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup4ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup4ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup4ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup4ScrollBar)
                {
                    fScrollBarHorizoDup4ScrollBar = new ScrollBar("ScrollBarHorizoDup4ScrollBar", ScrollViewerPARDup3Pane);
                    fScrollBarHorizoDup4ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup4ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup4ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to DomainText6cd1fText
        /// </summary>
        public Text DomainText6cd1fText
        {
            get
            {
                if (null == fDomainText6cd1fText)
                {
                    fDomainText6cd1fText = new Text("DomainText6cd1fText", CredentialstoAcGroup);
                    fDomainText6cd1fText.UIMap.Scope = UIASeachScope.Children;
                    fDomainText6cd1fText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Domain");
                    fDomainText6cd1fText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6cd1f158-560b-4aab-9824-1d980918f469");
                    fDomainText6cd1fText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fDomainText6cd1fText;
            }
        }

        /// <summary>
        /// Gets Reference to DomainTextBlockText
        /// </summary>
        public Text DomainTextBlockText
        {
            get
            {
                if (null == fDomainTextBlockText)
                {
                    fDomainTextBlockText = new Text("DomainTextBlockText", DomainText6cd1fText);
                    fDomainTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fDomainTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Domain");
                    fDomainTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fDomainTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to TextBoxefe13292Edit
        /// </summary>
        public Edit TextBoxefe13292Edit
        {
            get
            {
                if (null == fTextBoxefe13292Edit)
                {
                    fTextBoxefe13292Edit = new Edit("TextBoxefe13292Edit", CredentialstoAcGroup);
                    fTextBoxefe13292Edit.UIMap.Scope = UIASeachScope.Children;
                    fTextBoxefe13292Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"efe13292-b49b-463a-8c9c-cdd273c393d2");
                    fTextBoxefe13292Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBox");
                }

                return fTextBoxefe13292Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup4Pane
        /// </summary>
        public Pane ScrollViewerPARDup4Pane
        {
            get
            {
                if (null == fScrollViewerPARDup4Pane)
                {
                    fScrollViewerPARDup4Pane = new Pane("ScrollViewerPARDup4Pane", TextBoxefe13292Edit);
                    fScrollViewerPARDup4Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup4Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup4Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup5ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup5ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup5ScrollBar)
                {
                    fScrollBarVerticDup5ScrollBar = new ScrollBar("ScrollBarVerticDup5ScrollBar", ScrollViewerPARDup4Pane);
                    fScrollBarVerticDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup5ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup5ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup5ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup5ScrollBar)
                {
                    fScrollBarHorizoDup5ScrollBar = new ScrollBar("ScrollBarHorizoDup5ScrollBar", ScrollViewerPARDup4Pane);
                    fScrollBarHorizoDup5ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup5ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup5ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordText
        /// </summary>
        public Text PasswordText
        {
            get
            {
                if (null == fPasswordText)
                {
                    fPasswordText = new Text("PasswordText", CredentialstoAcGroup);
                    fPasswordText.UIMap.Scope = UIASeachScope.Children;
                    fPasswordText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                    fPasswordText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fPasswordText;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordTextBloText
        /// </summary>
        public Text PasswordTextBloText
        {
            get
            {
                if (null == fPasswordTextBloText)
                {
                    fPasswordTextBloText = new Text("PasswordTextBloText", PasswordText);
                    fPasswordTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fPasswordTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Password");
                    fPasswordTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fPasswordTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to PasswordBoxed85Edit
        /// </summary>
        public Edit PasswordBoxed85Edit
        {
            get
            {
                if (null == fPasswordBoxed85Edit)
                {
                    fPasswordBoxed85Edit = new Edit("PasswordBoxed85Edit", CredentialstoAcGroup);
                    fPasswordBoxed85Edit.UIMap.Scope = UIASeachScope.Children;
                    fPasswordBoxed85Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ed85b780-0c5d-4908-9153-e08be8fed282");
                    fPasswordBoxed85Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"PasswordBox");
                }

                return fPasswordBoxed85Edit;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollViewerPARDup5Pane
        /// </summary>
        public Pane ScrollViewerPARDup5Pane
        {
            get
            {
                if (null == fScrollViewerPARDup5Pane)
                {
                    fScrollViewerPARDup5Pane = new Pane("ScrollViewerPARDup5Pane", PasswordBoxed85Edit);
                    fScrollViewerPARDup5Pane.UIMap.Scope = UIASeachScope.Children;
                    fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_ContentHost");
                    fScrollViewerPARDup5Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollViewer");
                }

                return fScrollViewerPARDup5Pane;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup6ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup6ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup6ScrollBar)
                {
                    fScrollBarVerticDup6ScrollBar = new ScrollBar("ScrollBarVerticDup6ScrollBar", ScrollViewerPARDup5Pane);
                    fScrollBarVerticDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup6ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup6ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup6ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup6ScrollBar)
                {
                    fScrollBarHorizoDup6ScrollBar = new ScrollBar("ScrollBarHorizoDup6ScrollBar", ScrollViewerPARDup5Pane);
                    fScrollBarHorizoDup6ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup6ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup6ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to PredefinedFoldeGroup
        /// </summary>
        public Group PredefinedFoldeGroup
        {
            get
            {
                if (null == fPredefinedFoldeGroup)
                {
                    fPredefinedFoldeGroup = new Group("PredefinedFoldeGroup", ScrollViewerDup1Pane);
                    fPredefinedFoldeGroup.UIMap.Scope = UIASeachScope.Children;
                    fPredefinedFoldeGroup.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Predefined Folders");
                    fPredefinedFoldeGroup.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22a834cd-f47a-4e35-8335-b787b54daf67");
                    fPredefinedFoldeGroup.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GroupBox");
                }

                return fPredefinedFoldeGroup;
            }
        }

        /// <summary>
        /// Gets Reference to PredefinedFoldeText
        /// </summary>
        public Text PredefinedFoldeText
        {
            get
            {
                if (null == fPredefinedFoldeText)
                {
                    fPredefinedFoldeText = new Text("PredefinedFoldeText", PredefinedFoldeGroup);
                    fPredefinedFoldeText.UIMap.Scope = UIASeachScope.Children;
                    fPredefinedFoldeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Predefined Folders");
                    fPredefinedFoldeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fPredefinedFoldeText;
            }
        }

        /// <summary>
        /// Gets Reference to AddButtonff7994Button
        /// </summary>
        public Button AddButtonff7994Button
        {
            get
            {
                if (null == fAddButtonff7994Button)
                {
                    fAddButtonff7994Button = new Button("AddButtonff7994Button", PredefinedFoldeGroup);
                    fAddButtonff7994Button.UIMap.Scope = UIASeachScope.Children;
                    fAddButtonff7994Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add...");
                    fAddButtonff7994Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ff799427-ff9b-4b71-9863-e5a548a55c96");
                    fAddButtonff7994Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fAddButtonff7994Button;
            }
        }

        /// <summary>
        /// Gets Reference to AddTextBlockDup1Text
        /// </summary>
        public Text AddTextBlockDup1Text
        {
            get
            {
                if (null == fAddTextBlockDup1Text)
                {
                    fAddTextBlockDup1Text = new Text("AddTextBlockDup1Text", AddButtonff7994Button);
                    fAddTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fAddTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Add...");
                    fAddTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAddTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to EditButtonc4c22Button
        /// </summary>
        public Button EditButtonc4c22Button
        {
            get
            {
                if (null == fEditButtonc4c22Button)
                {
                    fEditButtonc4c22Button = new Button("EditButtonc4c22Button", PredefinedFoldeGroup);
                    fEditButtonc4c22Button.UIMap.Scope = UIASeachScope.Children;
                    fEditButtonc4c22Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit...");
                    fEditButtonc4c22Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"c4c22108-6ef6-4225-8387-d73598dad04a");
                    fEditButtonc4c22Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fEditButtonc4c22Button;
            }
        }

        /// <summary>
        /// Gets Reference to EditTextBlockDup1Text
        /// </summary>
        public Text EditTextBlockDup1Text
        {
            get
            {
                if (null == fEditTextBlockDup1Text)
                {
                    fEditTextBlockDup1Text = new Text("EditTextBlockDup1Text", EditButtonc4c22Button);
                    fEditTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fEditTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Edit...");
                    fEditTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fEditTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to CopyButton3a115Button
        /// </summary>
        public Button CopyButton3a115Button
        {
            get
            {
                if (null == fCopyButton3a115Button)
                {
                    fCopyButton3a115Button = new Button("CopyButton3a115Button", PredefinedFoldeGroup);
                    fCopyButton3a115Button.UIMap.Scope = UIASeachScope.Children;
                    fCopyButton3a115Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Copy...");
                    fCopyButton3a115Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3a11582d-8c64-4362-b90b-b1449350c2d6");
                    fCopyButton3a115Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fCopyButton3a115Button;
            }
        }

        /// <summary>
        /// Gets Reference to CopyTextBlockText
        /// </summary>
        public Text CopyTextBlockText
        {
            get
            {
                if (null == fCopyTextBlockText)
                {
                    fCopyTextBlockText = new Text("CopyTextBlockText", CopyButton3a115Button);
                    fCopyTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fCopyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Copy...");
                    fCopyTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fCopyTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveButtone4bButton
        /// </summary>
        public Button RemoveButtone4bButton
        {
            get
            {
                if (null == fRemoveButtone4bButton)
                {
                    fRemoveButtone4bButton = new Button("RemoveButtone4bButton", PredefinedFoldeGroup);
                    fRemoveButtone4bButton.UIMap.Scope = UIASeachScope.Children;
                    fRemoveButtone4bButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                    fRemoveButtone4bButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"e4bc16eb-a55b-4e14-ae15-bca173b0d8f0");
                    fRemoveButtone4bButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fRemoveButtone4bButton;
            }
        }

        /// <summary>
        /// Gets Reference to RemoveTextBlockDup1Text
        /// </summary>
        public Text RemoveTextBlockDup1Text
        {
            get
            {
                if (null == fRemoveTextBlockDup1Text)
                {
                    fRemoveTextBlockDup1Text = new Text("RemoveTextBlockDup1Text", RemoveButtone4bButton);
                    fRemoveTextBlockDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fRemoveTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Remove");
                    fRemoveTextBlockDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fRemoveTextBlockDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ListView0a362acDataGrid
        /// </summary>
        public DataGrid ListView0a362acDataGrid
        {
            get
            {
                if (null == fListView0a362acDataGrid)
                {
                    fListView0a362acDataGrid = new DataGrid("ListView0a362acDataGrid", PredefinedFoldeGroup);
                    fListView0a362acDataGrid.UIMap.Scope = UIASeachScope.Children;
                    fListView0a362acDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0a362acb-9bd1-4add-88b0-cb05aa38358c");
                    fListView0a362acDataGrid.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListView");
                }

                return fListView0a362acDataGrid;
            }
        }

        /// <summary>
        /// Gets Reference to GridViewHeaderRDup1Header
        /// </summary>
        public Header GridViewHeaderRDup1Header
        {
            get
            {
                if (null == fGridViewHeaderRDup1Header)
                {
                    fGridViewHeaderRDup1Header = new Header("GridViewHeaderRDup1Header", ListView0a362acDataGrid);
                    fGridViewHeaderRDup1Header.UIMap.Scope = UIASeachScope.Children;
                    fGridViewHeaderRDup1Header.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewHeaderRowPresenter");
                }

                return fGridViewHeaderRDup1Header;
            }
        }

        /// <summary>
        /// Gets Reference to DisplayNameGridHeaderItem
        /// </summary>
        public HeaderItem DisplayNameGridHeaderItem
        {
            get
            {
                if (null == fDisplayNameGridHeaderItem)
                {
                    fDisplayNameGridHeaderItem = new HeaderItem("DisplayNameGridHeaderItem", GridViewHeaderRDup1Header);
                    fDisplayNameGridHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fDisplayNameGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Display Name");
                    fDisplayNameGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mDisplayNameColumnHeader");
                    fDisplayNameGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                }

                return fDisplayNameGridHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to DisplayNameTextText
        /// </summary>
        public Text DisplayNameTextText
        {
            get
            {
                if (null == fDisplayNameTextText)
                {
                    fDisplayNameTextText = new Text("DisplayNameTextText", DisplayNameGridHeaderItem);
                    fDisplayNameTextText.UIMap.Scope = UIASeachScope.Children;
                    fDisplayNameTextText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Display Name");
                    fDisplayNameTextText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fDisplayNameTextText;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup1Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup1Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup1Thumb)
                {
                    fThumbPARTHeadeDup1Thumb = new Thumb("ThumbPARTHeadeDup1Thumb", DisplayNameGridHeaderItem);
                    fThumbPARTHeadeDup1Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup1Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to DescriptionGridHeaderItem
        /// </summary>
        public HeaderItem DescriptionGridHeaderItem
        {
            get
            {
                if (null == fDescriptionGridHeaderItem)
                {
                    fDescriptionGridHeaderItem = new HeaderItem("DescriptionGridHeaderItem", GridViewHeaderRDup1Header);
                    fDescriptionGridHeaderItem.UIMap.Scope = UIASeachScope.Children;
                    fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                    fDescriptionGridHeaderItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"GridViewColumnHeader");
                }

                return fDescriptionGridHeaderItem;
            }
        }

        /// <summary>
        /// Gets Reference to DescriptionDup1Text
        /// </summary>
        public Text DescriptionDup1Text
        {
            get
            {
                if (null == fDescriptionDup1Text)
                {
                    fDescriptionDup1Text = new Text("DescriptionDup1Text", DescriptionGridHeaderItem);
                    fDescriptionDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDescriptionDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                    fDescriptionDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fDescriptionDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to DescriptionTextDup1Text
        /// </summary>
        public Text DescriptionTextDup1Text
        {
            get
            {
                if (null == fDescriptionTextDup1Text)
                {
                    fDescriptionTextDup1Text = new Text("DescriptionTextDup1Text", DescriptionDup1Text);
                    fDescriptionTextDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fDescriptionTextDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Description");
                    fDescriptionTextDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fDescriptionTextDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbPARTHeadeDup2Thumb
        /// </summary>
        public Thumb ThumbPARTHeadeDup2Thumb
        {
            get
            {
                if (null == fThumbPARTHeadeDup2Thumb)
                {
                    fThumbPARTHeadeDup2Thumb = new Thumb("ThumbPARTHeadeDup2Thumb", DescriptionGridHeaderItem);
                    fThumbPARTHeadeDup2Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PART_HeaderGripper");
                    fThumbPARTHeadeDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbPARTHeadeDup2Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarVerticDup7ScrollBar
        /// </summary>
        public ScrollBar ScrollBarVerticDup7ScrollBar
        {
            get
            {
                if (null == fScrollBarVerticDup7ScrollBar)
                {
                    fScrollBarVerticDup7ScrollBar = new ScrollBar("ScrollBarVerticDup7ScrollBar", ScrollViewerDup1Pane);
                    fScrollBarVerticDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"VerticalScrollBar");
                    fScrollBarVerticDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarVerticDup7ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonLinDup0Button
        /// </summary>
        public Button RepeatButtonLinDup0Button
        {
            get
            {
                if (null == fRepeatButtonLinDup0Button)
                {
                    fRepeatButtonLinDup0Button = new Button("RepeatButtonLinDup0Button", ScrollBarVerticDup7ScrollBar);
                    fRepeatButtonLinDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonLinDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LineUp");
                    fRepeatButtonLinDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                }

                return fRepeatButtonLinDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonPagDup0Button
        /// </summary>
        public Button RepeatButtonPagDup0Button
        {
            get
            {
                if (null == fRepeatButtonPagDup0Button)
                {
                    fRepeatButtonPagDup0Button = new Button("RepeatButtonPagDup0Button", ScrollBarVerticDup7ScrollBar);
                    fRepeatButtonPagDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageUp");
                    fRepeatButtonPagDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                }

                return fRepeatButtonPagDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonPagDup1Button
        /// </summary>
        public Button RepeatButtonPagDup1Button
        {
            get
            {
                if (null == fRepeatButtonPagDup1Button)
                {
                    fRepeatButtonPagDup1Button = new Button("RepeatButtonPagDup1Button", ScrollBarVerticDup7ScrollBar);
                    fRepeatButtonPagDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"PageDown");
                    fRepeatButtonPagDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                }

                return fRepeatButtonPagDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbThumb
        /// </summary>
        public Thumb ThumbThumb
        {
            get
            {
                if (null == fThumbThumb)
                {
                    fThumbThumb = new Thumb("ThumbThumb", ScrollBarVerticDup7ScrollBar);
                    fThumbThumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbThumb.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Thumb");
                }

                return fThumbThumb;
            }
        }

        /// <summary>
        /// Gets Reference to RepeatButtonLinDup1Button
        /// </summary>
        public Button RepeatButtonLinDup1Button
        {
            get
            {
                if (null == fRepeatButtonLinDup1Button)
                {
                    fRepeatButtonLinDup1Button = new Button("RepeatButtonLinDup1Button", ScrollBarVerticDup7ScrollBar);
                    fRepeatButtonLinDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fRepeatButtonLinDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LineDown");
                    fRepeatButtonLinDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RepeatButton");
                }

                return fRepeatButtonLinDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to ScrollBarHorizoDup7ScrollBar
        /// </summary>
        public ScrollBar ScrollBarHorizoDup7ScrollBar
        {
            get
            {
                if (null == fScrollBarHorizoDup7ScrollBar)
                {
                    fScrollBarHorizoDup7ScrollBar = new ScrollBar("ScrollBarHorizoDup7ScrollBar", ScrollViewerDup1Pane);
                    fScrollBarHorizoDup7ScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"HorizontalScrollBar");
                    fScrollBarHorizoDup7ScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ScrollBar");
                }

                return fScrollBarHorizoDup7ScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup5TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup5TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup5TabItem)
                {
                    fSystemWindowsCoDup5TabItem = new TabItem("SystemWindowsCoDup5TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup5TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"38feb495-2893-4d8b-8961-31ebc2a3bd56");
                    fSystemWindowsCoDup5TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup5TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to WorkflowsTextmWText
        /// </summary>
        public Text WorkflowsTextmWText
        {
            get
            {
                if (null == fWorkflowsTextmWText)
                {
                    fWorkflowsTextmWText = new Text("WorkflowsTextmWText", SystemWindowsCoDup5TabItem);
                    fWorkflowsTextmWText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mWorkflowsTabLabel");
                    fWorkflowsTextmWText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fWorkflowsTextmWText;
            }
        }

        /// <summary>
        /// Gets Reference to WorkflowsTextBlText
        /// </summary>
        public Text WorkflowsTextBlText
        {
            get
            {
                if (null == fWorkflowsTextBlText)
                {
                    fWorkflowsTextBlText = new Text("WorkflowsTextBlText", WorkflowsTextmWText);
                    fWorkflowsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Workflows");
                    fWorkflowsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fWorkflowsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to Text22D9C34E84CText
        /// </summary>
        public Text Text22D9C34E84CText
        {
            get
            {
                if (null == fText22D9C34E84CText)
                {
                    fText22D9C34E84CText = new Text("Text22D9C34E84CText", SystemWindowsCoDup5TabItem);
                    fText22D9C34E84CText.UIMap.Scope = UIASeachScope.Children;
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"22D9C34E-84C8-4995-AC9E-5B46F8284284");
                    fText22D9C34E84CText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText22D9C34E84CText;
            }
        }

        /// <summary>
        /// Gets Reference to TextC8D15BD39C8Text
        /// </summary>
        public Text TextC8D15BD39C8Text
        {
            get
            {
                if (null == fTextC8D15BD39C8Text)
                {
                    fTextC8D15BD39C8Text = new Text("TextC8D15BD39C8Text", SystemWindowsCoDup5TabItem);
                    fTextC8D15BD39C8Text.UIMap.Scope = UIASeachScope.Children;
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"C8D15BD3-9C8D-484c-A5E2-309CA8AA6C56");
                    fTextC8D15BD39C8Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fTextC8D15BD39C8Text;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup6TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup6TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup6TabItem)
                {
                    fSystemWindowsCoDup6TabItem = new TabItem("SystemWindowsCoDup6TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup6TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"b8c06323-208e-4239-a523-a025661e0eab");
                    fSystemWindowsCoDup6TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup6TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingTextmText
        /// </summary>
        public Text AddressingTextmText
        {
            get
            {
                if (null == fAddressingTextmText)
                {
                    fAddressingTextmText = new Text("AddressingTextmText", SystemWindowsCoDup6TabItem);
                    fAddressingTextmText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAddressingTabLabel");
                    fAddressingTextmText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fAddressingTextmText;
            }
        }

        /// <summary>
        /// Gets Reference to AddressingTextBText
        /// </summary>
        public Text AddressingTextBText
        {
            get
            {
                if (null == fAddressingTextBText)
                {
                    fAddressingTextBText = new Text("AddressingTextBText", AddressingTextmText);
                    fAddressingTextBText.UIMap.Scope = UIASeachScope.Children;
                    fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Addressing");
                    fAddressingTextBText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAddressingTextBText;
            }
        }

        /// <summary>
        /// Gets Reference to Text47EB5CBA4D1Text
        /// </summary>
        public Text Text47EB5CBA4D1Text
        {
            get
            {
                if (null == fText47EB5CBA4D1Text)
                {
                    fText47EB5CBA4D1Text = new Text("Text47EB5CBA4D1Text", SystemWindowsCoDup6TabItem);
                    fText47EB5CBA4D1Text.UIMap.Scope = UIASeachScope.Children;
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"47EB5CBA-4D1C-4eee-AD64-E26BDA31A3AC");
                    fText47EB5CBA4D1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText47EB5CBA4D1Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text0757E148179Text
        /// </summary>
        public Text Text0757E148179Text
        {
            get
            {
                if (null == fText0757E148179Text)
                {
                    fText0757E148179Text = new Text("Text0757E148179Text", SystemWindowsCoDup6TabItem);
                    fText0757E148179Text.UIMap.Scope = UIASeachScope.Children;
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"0757E148-1794-4a5d-B378-6BE8049F65E1");
                    fText0757E148179Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText0757E148179Text;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceConfiguraTabItem
        /// </summary>
        public TabItem DeviceConfiguraTabItem
        {
            get
            {
                if (null == fDeviceConfiguraTabItem)
                {
                    fDeviceConfiguraTabItem = new TabItem("DeviceConfiguraTabItem", TabControlec0fdTab);
                    fDeviceConfiguraTabItem.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"6DF1E016-517F-40e4-A63E-CD48D560192F");
                    fDeviceConfiguraTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fDeviceConfiguraTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceConfiguraText
        /// </summary>
        public Text DeviceConfiguraText
        {
            get
            {
                if (null == fDeviceConfiguraText)
                {
                    fDeviceConfiguraText = new Text("DeviceConfiguraText", DeviceConfiguraTabItem);
                    fDeviceConfiguraText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Configuration");
                    fDeviceConfiguraText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fDeviceConfiguraText;
            }
        }

        /// <summary>
        /// Gets Reference to TemplateConfiguTabItem
        /// </summary>
        public TabItem TemplateConfiguTabItem
        {
            get
            {
                if (null == fTemplateConfiguTabItem)
                {
                    fTemplateConfiguTabItem = new TabItem("TemplateConfiguTabItem", TabControlec0fdTab);
                    fTemplateConfiguTabItem.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"AC05F9B9-A7D8-4b34-80E7-910FB9870D47");
                    fTemplateConfiguTabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fTemplateConfiguTabItem;
            }
        }

        /// <summary>
        /// Gets Reference to TemplateConfiguText
        /// </summary>
        public Text TemplateConfiguText
        {
            get
            {
                if (null == fTemplateConfiguText)
                {
                    fTemplateConfiguText = new Text("TemplateConfiguText", TemplateConfiguTabItem);
                    fTemplateConfiguText.UIMap.Scope = UIASeachScope.Children;
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Template Configuration");
                    fTemplateConfiguText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fTemplateConfiguText;
            }
        }

        /// <summary>
        /// Gets Reference to LogTabItem9b4f3TabItem
        /// </summary>
        public TabItem LogTabItem9b4f3TabItem
        {
            get
            {
                if (null == fLogTabItem9b4f3TabItem)
                {
                    fLogTabItem9b4f3TabItem = new TabItem("LogTabItem9b4f3TabItem", TabControlec0fdTab);
                    fLogTabItem9b4f3TabItem.UIMap.Scope = UIASeachScope.Children;
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"9b4f34bb-d75a-4080-9be3-1c50ec31c5b6");
                    fLogTabItem9b4f3TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fLogTabItem9b4f3TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to LogTextBlockText
        /// </summary>
        public Text LogTextBlockText
        {
            get
            {
                if (null == fLogTextBlockText)
                {
                    fLogTextBlockText = new Text("LogTextBlockText", LogTabItem9b4f3TabItem);
                    fLogTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Log");
                    fLogTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fLogTextBlockText;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup7TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup7TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup7TabItem)
                {
                    fSystemWindowsCoDup7TabItem = new TabItem("SystemWindowsCoDup7TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup7TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"3AC8D4A8-3B06-421A-911B-E8CA248A9ED4");
                    fSystemWindowsCoDup7TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup7TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to SecurityTextmSeText
        /// </summary>
        public Text SecurityTextmSeText
        {
            get
            {
                if (null == fSecurityTextmSeText)
                {
                    fSecurityTextmSeText = new Text("SecurityTextmSeText", SystemWindowsCoDup7TabItem);
                    fSecurityTextmSeText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mSecurityTabLabel");
                    fSecurityTextmSeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fSecurityTextmSeText;
            }
        }

        /// <summary>
        /// Gets Reference to SecurityTextBloText
        /// </summary>
        public Text SecurityTextBloText
        {
            get
            {
                if (null == fSecurityTextBloText)
                {
                    fSecurityTextBloText = new Text("SecurityTextBloText", SecurityTextmSeText);
                    fSecurityTextBloText.UIMap.Scope = UIASeachScope.Children;
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Security");
                    fSecurityTextBloText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fSecurityTextBloText;
            }
        }

        /// <summary>
        /// Gets Reference to Text8A7A84DB894Text
        /// </summary>
        public Text Text8A7A84DB894Text
        {
            get
            {
                if (null == fText8A7A84DB894Text)
                {
                    fText8A7A84DB894Text = new Text("Text8A7A84DB894Text", SystemWindowsCoDup7TabItem);
                    fText8A7A84DB894Text.UIMap.Scope = UIASeachScope.Children;
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"*");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8A7A84DB-8945-40E1-A0F9-C40DDD129739");
                    fText8A7A84DB894Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText8A7A84DB894Text;
            }
        }

        /// <summary>
        /// Gets Reference to Text16F78FB18FFText
        /// </summary>
        public Text Text16F78FB18FFText
        {
            get
            {
                if (null == fText16F78FB18FFText)
                {
                    fText16F78FB18FFText = new Text("Text16F78FB18FFText", SystemWindowsCoDup7TabItem);
                    fText16F78FB18FFText.UIMap.Scope = UIASeachScope.Children;
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"!");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"16F78FB1-8FF9-4B0D-8251-FB09F520EA73");
                    fText16F78FB18FFText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fText16F78FB18FFText;
            }
        }

        /// <summary>
        /// Gets Reference to SystemWindowsCoDup8TabItem
        /// </summary>
        public TabItem SystemWindowsCoDup8TabItem
        {
            get
            {
                if (null == fSystemWindowsCoDup8TabItem)
                {
                    fSystemWindowsCoDup8TabItem = new TabItem("SystemWindowsCoDup8TabItem", TabControlec0fdTab);
                    fSystemWindowsCoDup8TabItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System.Windows.Controls.TabItem Header: Content:");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1678607C-20BF-4137-8238-C9D46EA8FF70");
                    fSystemWindowsCoDup8TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fSystemWindowsCoDup8TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AnalyticsTextmAText
        /// </summary>
        public Text AnalyticsTextmAText
        {
            get
            {
                if (null == fAnalyticsTextmAText)
                {
                    fAnalyticsTextmAText = new Text("AnalyticsTextmAText", SystemWindowsCoDup8TabItem);
                    fAnalyticsTextmAText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"mAnalyticsTabLabel");
                    fAnalyticsTextmAText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Text");
                }

                return fAnalyticsTextmAText;
            }
        }

        /// <summary>
        /// Gets Reference to AnalyticsTextBlText
        /// </summary>
        public Text AnalyticsTextBlText
        {
            get
            {
                if (null == fAnalyticsTextBlText)
                {
                    fAnalyticsTextBlText = new Text("AnalyticsTextBlText", AnalyticsTextmAText);
                    fAnalyticsTextBlText.UIMap.Scope = UIASeachScope.Children;
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Analytics");
                    fAnalyticsTextBlText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAnalyticsTextBlText;
            }
        }

        /// <summary>
        /// Gets Reference to AboutTabItemf45TabItem
        /// </summary>
        public TabItem AboutTabItemf45TabItem
        {
            get
            {
                if (null == fAboutTabItemf45TabItem)
                {
                    fAboutTabItemf45TabItem = new TabItem("AboutTabItemf45TabItem", TabControlec0fdTab);
                    fAboutTabItemf45TabItem.UIMap.Scope = UIASeachScope.Children;
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"f45c22d9-f77a-481a-95bc-09cdff03e131");
                    fAboutTabItemf45TabItem.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TabItem");
                }

                return fAboutTabItemf45TabItem;
            }
        }

        /// <summary>
        /// Gets Reference to AboutTextBlockText
        /// </summary>
        public Text AboutTextBlockText
        {
            get
            {
                if (null == fAboutTextBlockText)
                {
                    fAboutTextBlockText = new Text("AboutTextBlockText", AboutTabItemf45TabItem);
                    fAboutTextBlockText.UIMap.Scope = UIASeachScope.Children;
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"About");
                    fAboutTextBlockText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"TextBlock");
                }

                return fAboutTextBlockText;
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------


using HP.ScalableTest.Framework.Plugin;
using TopCat.TestApi.Enums;

namespace HP.ScalableTest.Plugin.DSSInstall.UIMaps
{
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class DSS_DestinationFolder: UIMap
    {
        private string _version;
        private bool _fullInstall;
       
        /// <summary>
        /// Backing field for HPDigitalSendinDup0Window property
        /// </summary>
        private Window fHPDigitalSendinDup0Window;

        /// <summary>
        /// Backing field for HPDigitalSendinDup1Window property
        /// </summary>
        private Window fHPDigitalSendinDup1Window;

        /// <summary>
        /// Backing field for CProgramFilesx8Edit property
        /// </summary>
        private Edit fCProgramFilesx8Edit;

        /// <summary>
        /// Backing field for OKButton7230Button property
        /// </summary>
        private Button fOKButton7230Button;

        /// <summary>
        /// Backing field for CancelButton713I0XButton property
        /// </summary>
        private Button fCancelButton713I0XButton;

        /// <summary>
        /// Backing field for LookinStatic842Text property
        /// </summary>
        private Text fLookinStatic842Text;

        /// <summary>
        /// Backing field for LookinComboBox8ComboBox property
        /// </summary>
        private ComboBox fLookinComboBox8ComboBox;

        /// <summary>
        /// Backing field for LookinComboLBoxList property
        /// </summary>
        private List fLookinComboLBoxList;

        /// <summary>
        /// Backing field for CListItem property
        /// </summary>
        private ListItem fCListItem;

        /// <summary>
        /// Backing field for CPROGRAMFILESX8Dup0ListItem property
        /// </summary>
        private ListItem fCPROGRAMFILESX8Dup0ListItem;

        /// <summary>
        /// Backing field for CPROGRAMFILESX8Dup1ListItem property
        /// </summary>
        private ListItem fCPROGRAMFILESX8Dup1ListItem;

        /// <summary>
        /// Backing field for CPROGRAMFILESX8Dup2ListItem property
        /// </summary>
        private ListItem fCPROGRAMFILESX8Dup2ListItem;

        /// <summary>
        /// Backing field for DListItem property
        /// </summary>
        private ListItem fDListItem;

        /// <summary>
        /// Backing field for EListItem property
        /// </summary>
        private ListItem fEListItem;

        /// <summary>
        /// Backing field for DropDownButtonDButton property
        /// </summary>
        private Button fDropDownButtonDButton;

        /// <summary>
        /// Backing field for UpOneLevelButtoButton property
        /// </summary>
        private Button fUpOneLevelButtoButton;

        /// <summary>
        /// Backing field for CreateNewFolderButton property
        /// </summary>
        private Button fCreateNewFolderButton;

        /// <summary>
        /// Backing field for LookinSysListViList property
        /// </summary>
        private List fLookinSysListViList;

        /// <summary>
        /// Backing field for FoldernameStatiText property
        /// </summary>
        private Text fFoldernameStatiText;

        /// <summary>
        /// Backing field for BrowsetothedestText property
        /// </summary>
        private Text fBrowsetothedestText;

        /// <summary>
        /// Backing field for ChangeCurrentDeText property
        /// </summary>
        private Text fChangeCurrentDeText;

        /// <summary>
        /// Backing field for ChangeCurrentDeImage property
        /// </summary>
        private Image fChangeCurrentDeImage;

        /// <summary>
        /// Backing field for NewBinary20StatI0XText property
        /// </summary>
        private Text fNewBinary20StatI0XText;

        /// <summary>
        /// Backing field for InstallShieldStI0XDup0Text property
        /// </summary>
        private Text fInstallShieldStI0XDup0Text;

        /// <summary>
        /// Backing field for InstallShieldStI0XDup1Text property
        /// </summary>
        private Text fInstallShieldStI0XDup1Text;

        /// <summary>
        /// Backing field for InstallShieldStI0XDup2Text property
        /// </summary>
        private Text fInstallShieldStI0XDup2Text;

        /// <summary>
        /// Backing field for HPDigitalSendinI0XTitleBar property
        /// </summary>
        private TitleBar fHPDigitalSendinI0XTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyI0XMenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyI0XMenuBar;

        /// <summary>
        /// Backing field for SystemItem1I0XMenuItem property
        /// </summary>
        private MenuItem fSystemItem1I0XMenuItem;

        /// <summary>
        /// Backing field for CloseCloseI0XButton property
        /// </summary>
        private Button fCloseCloseI0XButton;

        /// <summary>
        /// Backing field for NextButton7195Button property
        /// </summary>
        private Button fNextButton7195Button;

        /// <summary>
        /// Backing field for CancelButton713I1XButton property
        /// </summary>
        private Button fCancelButton713I1XButton;

        /// <summary>
        /// Backing field for ChangeButton717Button property
        /// </summary>
        private Button fChangeButton717Button;

        /// <summary>
        /// Backing field for BackButton7138Button property
        /// </summary>
        private Button fBackButton7138Button;

        /// <summary>
        /// Backing field for FullInstallatioRadioButton property
        /// </summary>
        private RadioButton fFullInstallatioRadioButton;

        /// <summary>
        /// Backing field for ConfigurationUtRadioButton property
        /// </summary>
        private RadioButton fConfigurationUtRadioButton;

        /// <summary>
        /// Backing field for NewBinary12StatImage property
        /// </summary>
        private Image fNewBinary12StatImage;

        /// <summary>
        /// Backing field for ClickNexttoinstText property
        /// </summary>
        private Text fClickNexttoinstText;

        /// <summary>
        /// Backing field for DestinationFoldText property
        /// </summary>
        private Text fDestinationFoldText;

        /// <summary>
        /// Backing field for CProgramFilesx8Text property
        /// </summary>
        private Text fCProgramFilesx8Text;

        /// <summary>
        /// Backing field for CProgramFilesx8Image property
        /// </summary>
        private Image fCProgramFilesx8Image;

        /// <summary>
        /// Backing field for NewBinary20StatI1XText property
        /// </summary>
        private Text fNewBinary20StatI1XText;

        /// <summary>
        /// Backing field for InstallShieldStI1XDup0Text property
        /// </summary>
        private Text fInstallShieldStI1XDup0Text;

        /// <summary>
        /// Backing field for InstallShieldStI1XDup1Text property
        /// </summary>
        private Text fInstallShieldStI1XDup1Text;

        /// <summary>
        /// Backing field for InstallShieldStI1XDup2Text property
        /// </summary>
        private Text fInstallShieldStI1XDup2Text;

        /// <summary>
        /// Backing field for InstallHPDigitaText property
        /// </summary>
        private Text fInstallHPDigitaText;

        /// <summary>
        /// Backing field for HPDigitalSendinI1XTitleBar property
        /// </summary>
        private TitleBar fHPDigitalSendinI1XTitleBar;

        /// <summary>
        /// Backing field for SystemMenuBarSyI1XMenuBar property
        /// </summary>
        private MenuBar fSystemMenuBarSyI1XMenuBar;

        /// <summary>
        /// Backing field for SystemItem1I1XMenuItem property
        /// </summary>
        private MenuItem fSystemItem1I1XMenuItem;

        /// <summary>
        /// Backing field for CloseCloseI1XButton property
        /// </summary>
        private Button fCloseCloseI1XButton;

        private string _installPath;

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_DestinationFolder"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public DSS_DestinationFolder(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
            ScreenName = "Destination Folder Screen";
            ScreenIndex = 5;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DSS_DestinationFolder"/> class using the default UIAFramework.
        /// </summary>
        public DSS_DestinationFolder()
        {
            Desktop = new Desktop();
            ScreenName = "Destination Folder Screen";
            ScreenIndex = 5;
        }

        public DSS_DestinationFolder(string version, bool fullInstall, string installPath)
        {
            Desktop = new Desktop(UIAFramework.ManagedUIA);
            _version = version;
            _fullInstall = fullInstall;
            _installPath = installPath;
            ScreenName = "Destination Folder Screen";
            ScreenIndex = 5;
        }

        public void WaitForAvailable(int timeout)
        {
            HPDigitalSendinDup0Window.WaitForAvailable(timeout);
            NextButton7195Button.WaitForAvailable(timeout);

        }

        public override PluginExecutionResult PerformAction(int cancelScreen)
        {
            WaitForAvailable(5);
            if (cancelScreen == ScreenIndex)
            {
                if (CancelButton713I1XButton.Click() != ResultCode.Passed)
                {
                    return new PluginExecutionResult(PluginResult.Failed, $"Failed to cancel installation at {ScreenName}");
                }

                return new PluginExecutionResult(PluginResult.Skipped, $"Cancelled the installation at {ScreenName}");
            }
            if (!_fullInstall)
            {
                if (ConfigurationUtRadioButton.Select() != ResultCode.Passed)
                {
                    return new PluginExecutionResult(PluginResult.Failed, "Failed to select custom installation");
                }
            }

            if (!string.IsNullOrEmpty(_installPath))
            {
                //change the default folder path
                if (ChangeButton717Button.Click() != ResultCode.Passed)
                {
                    return new PluginExecutionResult(PluginResult.Failed, "Failed to change the destination directory");
                }
                CProgramFilesx8Edit.ClickWithMouse(MouseButton.Left);
                if (CProgramFilesx8Edit.EnterText(_installPath) != ResultCode.Passed)
                {
                    return new PluginExecutionResult(PluginResult.Failed, "Failed to set the destination directory");
                }
                if (OKButton7230Button.Click() != ResultCode.Passed)
                {
                    return new PluginExecutionResult(PluginResult.Failed, "Failed to set the destination directory");
                }
            }

            if (NextButton7195Button.Click() != ResultCode.Passed)
            {
                return new PluginExecutionResult(PluginResult.Failed, "Failed to proceed beyond installation folder selection screen");
            }

            return new PluginExecutionResult(PluginResult.Passed);

        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Window HPDigitalSendinDup0Window
        {
            get
            {
                if (null == fHPDigitalSendinDup0Window)
                {
                    fHPDigitalSendinDup0Window = new Window("HPDigitalSendinDup0Window", Desktop);
                    fHPDigitalSendinDup0Window.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinDup0Window.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MsiDialogCloseClass");
                    fHPDigitalSendinDup0Window.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software {_version} - InstallShield Wizard");
                }

                return fHPDigitalSendinDup0Window;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Window HPDigitalSendinDup1Window
        {
            get
            {
                if (null == fHPDigitalSendinDup1Window)
                {
                    fHPDigitalSendinDup1Window = new Window("HPDigitalSendinDup1Window", HPDigitalSendinDup0Window);
                    fHPDigitalSendinDup1Window.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinDup1Window.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MsiDialogCloseClass");
                    fHPDigitalSendinDup1Window.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software {_version} - InstallShield Wizard");
                }

                return fHPDigitalSendinDup1Window;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Edit CProgramFilesx8Edit
        {
            get
            {
                if (null == fCProgramFilesx8Edit)
                {
                    fCProgramFilesx8Edit = new Edit("CProgramFilesx8Edit", HPDigitalSendinDup1Window);
                    fCProgramFilesx8Edit.UIMap.Scope = UIASeachScope.Children;
                    fCProgramFilesx8Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"RichEdit20W");
                    fCProgramFilesx8Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"C:\Program Files (x86)\Hewlett-Packard\HP Digital Sending Software\");
                }

                return fCProgramFilesx8Edit;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button OKButton7230Button
        {
            get
            {
                if (null == fOKButton7230Button)
                {
                    fOKButton7230Button = new Button("OKButton7230Button", HPDigitalSendinDup1Window);
                    fOKButton7230Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButton7230Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButton7230Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKButton7230Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CancelButton713I0XButton
        {
            get
            {
                if (null == fCancelButton713I0XButton)
                {
                    fCancelButton713I0XButton = new Button("CancelButton713I0XButton", HPDigitalSendinDup1Window);
                    fCancelButton713I0XButton.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton713I0XButton.UIMap.Index = 0;
                    fCancelButton713I0XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButton713I0XButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelButton713I0XButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text LookinStatic842Text
        {
            get
            {
                if (null == fLookinStatic842Text)
                {
                    fLookinStatic842Text = new Text("LookinStatic842Text", HPDigitalSendinDup1Window);
                    fLookinStatic842Text.UIMap.Scope = UIASeachScope.Children;
                    fLookinStatic842Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fLookinStatic842Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8429");
                    fLookinStatic842Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Look in:");
                }

                return fLookinStatic842Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ComboBox LookinComboBox8ComboBox
        {
            get
            {
                if (null == fLookinComboBox8ComboBox)
                {
                    fLookinComboBox8ComboBox = new ComboBox("LookinComboBox8ComboBox", HPDigitalSendinDup1Window);
                    fLookinComboBox8ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fLookinComboBox8ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fLookinComboBox8ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8434");
                    fLookinComboBox8ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Look in:");
                }

                return fLookinComboBox8ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public List LookinComboLBoxList
        {
            get
            {
                if (null == fLookinComboLBoxList)
                {
                    fLookinComboLBoxList = new List("LookinComboLBoxList", LookinComboBox8ComboBox);
                    fLookinComboLBoxList.UIMap.Scope = UIASeachScope.Children;
                    fLookinComboLBoxList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                    fLookinComboLBoxList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                    fLookinComboLBoxList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Look in:");
                }

                return fLookinComboLBoxList;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem CListItem
        {
            get
            {
                if (null == fCListItem)
                {
                    fCListItem = new ListItem("CListItem", LookinComboLBoxList);
                    fCListItem.UIMap.Scope = UIASeachScope.Children;
                    fCListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"C:\");
                }

                return fCListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem CPROGRAMFILESX8Dup0ListItem
        {
            get
            {
                if (null == fCPROGRAMFILESX8Dup0ListItem)
                {
                    fCPROGRAMFILESX8Dup0ListItem = new ListItem("CPROGRAMFILESX8Dup0ListItem", LookinComboLBoxList);
                    fCPROGRAMFILESX8Dup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fCPROGRAMFILESX8Dup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"C:\PROGRAM FILES (X86)\");
                }

                return fCPROGRAMFILESX8Dup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem CPROGRAMFILESX8Dup1ListItem
        {
            get
            {
                if (null == fCPROGRAMFILESX8Dup1ListItem)
                {
                    fCPROGRAMFILESX8Dup1ListItem = new ListItem("CPROGRAMFILESX8Dup1ListItem", LookinComboLBoxList);
                    fCPROGRAMFILESX8Dup1ListItem.UIMap.Scope = UIASeachScope.Children;
                    fCPROGRAMFILESX8Dup1ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"C:\PROGRAM FILES (X86)\HEWLETT-PACKARD\");
                }

                return fCPROGRAMFILESX8Dup1ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem CPROGRAMFILESX8Dup2ListItem
        {
            get
            {
                if (null == fCPROGRAMFILESX8Dup2ListItem)
                {
                    fCPROGRAMFILESX8Dup2ListItem = new ListItem("CPROGRAMFILESX8Dup2ListItem", LookinComboLBoxList);
                    fCPROGRAMFILESX8Dup2ListItem.UIMap.Scope = UIASeachScope.Children;
                    fCPROGRAMFILESX8Dup2ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"C:\PROGRAM FILES (X86)\HEWLETT-PACKARD\HP DIGITAL SENDING SOFTWARE\");
                }

                return fCPROGRAMFILESX8Dup2ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem DListItem
        {
            get
            {
                if (null == fDListItem)
                {
                    fDListItem = new ListItem("DListItem", LookinComboLBoxList);
                    fDListItem.UIMap.Scope = UIASeachScope.Children;
                    fDListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"D:\");
                }

                return fDListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public ListItem EListItem
        {
            get
            {
                if (null == fEListItem)
                {
                    fEListItem = new ListItem("EListItem", LookinComboLBoxList);
                    fEListItem.UIMap.Scope = UIASeachScope.Children;
                    fEListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"E:\");
                }

                return fEListItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button DropDownButtonDButton
        {
            get
            {
                if (null == fDropDownButtonDButton)
                {
                    fDropDownButtonDButton = new Button("DropDownButtonDButton", LookinComboBox8ComboBox);
                    fDropDownButtonDButton.UIMap.Scope = UIASeachScope.Children;
                    fDropDownButtonDButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                    fDropDownButtonDButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                }

                return fDropDownButtonDButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button UpOneLevelButtoButton
        {
            get
            {
                if (null == fUpOneLevelButtoButton)
                {
                    fUpOneLevelButtoButton = new Button("UpOneLevelButtoButton", HPDigitalSendinDup1Window);
                    fUpOneLevelButtoButton.UIMap.Scope = UIASeachScope.Children;
                    fUpOneLevelButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fUpOneLevelButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7243");
                    fUpOneLevelButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Up One Level");
                }

                return fUpOneLevelButtoButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CreateNewFolderButton
        {
            get
            {
                if (null == fCreateNewFolderButton)
                {
                    fCreateNewFolderButton = new Button("CreateNewFolderButton", HPDigitalSendinDup1Window);
                    fCreateNewFolderButton.UIMap.Scope = UIASeachScope.Children;
                    fCreateNewFolderButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCreateNewFolderButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7245");
                    fCreateNewFolderButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create New Folder");
                }

                return fCreateNewFolderButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public List LookinSysListViList
        {
            get
            {
                if (null == fLookinSysListViList)
                {
                    fLookinSysListViList = new List("LookinSysListViList", HPDigitalSendinDup1Window);
                    fLookinSysListViList.UIMap.Scope = UIASeachScope.Children;
                    fLookinSysListViList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"SysListView32");
                    fLookinSysListViList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8442");
                    fLookinSysListViList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Look in:");
                }

                return fLookinSysListViList;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text FoldernameStatiText
        {
            get
            {
                if (null == fFoldernameStatiText)
                {
                    fFoldernameStatiText = new Text("FoldernameStatiText", HPDigitalSendinDup1Window);
                    fFoldernameStatiText.UIMap.Scope = UIASeachScope.Children;
                    fFoldernameStatiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fFoldernameStatiText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8439");
                    fFoldernameStatiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Folder name:");
                }

                return fFoldernameStatiText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text BrowsetothedestText
        {
            get
            {
                if (null == fBrowsetothedestText)
                {
                    fBrowsetothedestText = new Text("BrowsetothedestText", HPDigitalSendinDup1Window);
                    fBrowsetothedestText.UIMap.Scope = UIASeachScope.Children;
                    fBrowsetothedestText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fBrowsetothedestText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7167");
                    fBrowsetothedestText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Browse to the destination folder.");
                }

                return fBrowsetothedestText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ChangeCurrentDeText
        {
            get
            {
                if (null == fChangeCurrentDeText)
                {
                    fChangeCurrentDeText = new Text("ChangeCurrentDeText", HPDigitalSendinDup1Window);
                    fChangeCurrentDeText.UIMap.Scope = UIASeachScope.Children;
                    fChangeCurrentDeText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fChangeCurrentDeText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7169");
                    fChangeCurrentDeText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Change Current Destination Folder");
                }

                return fChangeCurrentDeText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image ChangeCurrentDeImage
        {
            get
            {
                if (null == fChangeCurrentDeImage)
                {
                    fChangeCurrentDeImage = new Image("ChangeCurrentDeImage", HPDigitalSendinDup1Window);
                    fChangeCurrentDeImage.UIMap.Scope = UIASeachScope.Children;
                    fChangeCurrentDeImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fChangeCurrentDeImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8422");
                    fChangeCurrentDeImage.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Change Current Destination Folder");
                }

                return fChangeCurrentDeImage;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NewBinary20StatI0XText
        {
            get
            {
                if (null == fNewBinary20StatI0XText)
                {
                    fNewBinary20StatI0XText = new Text("NewBinary20StatI0XText", HPDigitalSendinDup1Window);
                    fNewBinary20StatI0XText.UIMap.Scope = UIASeachScope.Children;
                    fNewBinary20StatI0XText.UIMap.Index = 0;
                    fNewBinary20StatI0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fNewBinary20StatI0XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8424");
                    fNewBinary20StatI0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"NewBinary20");
                }

                return fNewBinary20StatI0XText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text InstallShieldStI0XDup0Text
        {
            get
            {
                if (null == fInstallShieldStI0XDup0Text)
                {
                    fInstallShieldStI0XDup0Text = new Text("InstallShieldStI0XDup0Text", HPDigitalSendinDup1Window);
                    fInstallShieldStI0XDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fInstallShieldStI0XDup0Text.UIMap.Index = 0;
                    fInstallShieldStI0XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fInstallShieldStI0XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8426");
                    fInstallShieldStI0XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"InstallShield");
                }

                return fInstallShieldStI0XDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text InstallShieldStI0XDup1Text
        {
            get
            {
                if (null == fInstallShieldStI0XDup1Text)
                {
                    fInstallShieldStI0XDup1Text = new Text("InstallShieldStI0XDup1Text", HPDigitalSendinDup1Window);
                    fInstallShieldStI0XDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fInstallShieldStI0XDup1Text.UIMap.Index = 0;
                    fInstallShieldStI0XDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fInstallShieldStI0XDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8428");
                    fInstallShieldStI0XDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"InstallShield");
                }

                return fInstallShieldStI0XDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text InstallShieldStI0XDup2Text
        {
            get
            {
                if (null == fInstallShieldStI0XDup2Text)
                {
                    fInstallShieldStI0XDup2Text = new Text("InstallShieldStI0XDup2Text", HPDigitalSendinDup1Window);
                    fInstallShieldStI0XDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fInstallShieldStI0XDup2Text.UIMap.Index = 0;
                    fInstallShieldStI0XDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fInstallShieldStI0XDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8437");
                    fInstallShieldStI0XDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"InstallShield");
                }

                return fInstallShieldStI0XDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TitleBar HPDigitalSendinI0XTitleBar
        {
            get
            {
                if (null == fHPDigitalSendinI0XTitleBar)
                {
                    fHPDigitalSendinI0XTitleBar = new TitleBar("HPDigitalSendinI0XTitleBar", HPDigitalSendinDup1Window);
                    fHPDigitalSendinI0XTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinI0XTitleBar.UIMap.Index = 0;
                    fHPDigitalSendinI0XTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    fHPDigitalSendinI0XTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software {_version} - InstallShield Wizard");
                }

                return fHPDigitalSendinI0XTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuBar SystemMenuBarSyI0XMenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyI0XMenuBar)
                {
                    fSystemMenuBarSyI0XMenuBar = new MenuBar("SystemMenuBarSyI0XMenuBar", HPDigitalSendinI0XTitleBar);
                    fSystemMenuBarSyI0XMenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyI0XMenuBar.UIMap.Index = 0;
                    fSystemMenuBarSyI0XMenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    fSystemMenuBarSyI0XMenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                }

                return fSystemMenuBarSyI0XMenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuItem SystemItem1I0XMenuItem
        {
            get
            {
                if (null == fSystemItem1I0XMenuItem)
                {
                    fSystemItem1I0XMenuItem = new MenuItem("SystemItem1I0XMenuItem", SystemMenuBarSyI0XMenuBar);
                    fSystemItem1I0XMenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1I0XMenuItem.UIMap.Index = 0;
                    fSystemItem1I0XMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    fSystemItem1I0XMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                }

                return fSystemItem1I0XMenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CloseCloseI0XButton
        {
            get
            {
                if (null == fCloseCloseI0XButton)
                {
                    fCloseCloseI0XButton = new Button("CloseCloseI0XButton", HPDigitalSendinI0XTitleBar);
                    fCloseCloseI0XButton.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseI0XButton.UIMap.Index = 0;
                    fCloseCloseI0XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    fCloseCloseI0XButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                }

                return fCloseCloseI0XButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button NextButton7195Button
        {
            get
            {
                if (null == fNextButton7195Button)
                {
                    fNextButton7195Button = new Button("NextButton7195Button", HPDigitalSendinDup0Window);
                    fNextButton7195Button.UIMap.Scope = UIASeachScope.Children;
                    fNextButton7195Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fNextButton7195Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Next >");
                }

                return fNextButton7195Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CancelButton713I1XButton
        {
            get
            {
                if (null == fCancelButton713I1XButton)
                {
                    fCancelButton713I1XButton = new Button("CancelButton713I1XButton", HPDigitalSendinDup0Window);
                    fCancelButton713I1XButton.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton713I1XButton.UIMap.Index = 1;
                    fCancelButton713I1XButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButton713I1XButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelButton713I1XButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button ChangeButton717Button
        {
            get
            {
                if (null == fChangeButton717Button)
                {
                    fChangeButton717Button = new Button("ChangeButton717Button", HPDigitalSendinDup0Window);
                    fChangeButton717Button.UIMap.Scope = UIASeachScope.Children;
                    fChangeButton717Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fChangeButton717Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Change...");
                }

                return fChangeButton717Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button BackButton7138Button
        {
            get
            {
                if (null == fBackButton7138Button)
                {
                    fBackButton7138Button = new Button("BackButton7138Button", HPDigitalSendinDup0Window);
                    fBackButton7138Button.UIMap.Scope = UIASeachScope.Children;
                    fBackButton7138Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fBackButton7138Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"< Back");
                }

                return fBackButton7138Button;
            }
        }


        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public RadioButton FullInstallatioRadioButton
        {
            get
            {
                if (null == fFullInstallatioRadioButton)
                {
                    fFullInstallatioRadioButton = new RadioButton("FullInstallatioRadioButton", HPDigitalSendinDup0Window);
                    fFullInstallatioRadioButton.UIMap.Scope = UIASeachScope.Descendants;
                    fFullInstallatioRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fFullInstallatioRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Full Installation");
                }

                return fFullInstallatioRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public RadioButton ConfigurationUtRadioButton
        {
            get
            {
                if (null == fConfigurationUtRadioButton)
                {
                    fConfigurationUtRadioButton = new RadioButton("ConfigurationUtRadioButton", HPDigitalSendinDup0Window);
                    fConfigurationUtRadioButton.UIMap.Scope = UIASeachScope.Descendants;
                    fConfigurationUtRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fConfigurationUtRadioButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Configuration Utility Only");
                }

                return fConfigurationUtRadioButton;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image NewBinary12StatImage
        {
            get
            {
                if (null == fNewBinary12StatImage)
                {
                    fNewBinary12StatImage = new Image("NewBinary12StatImage", HPDigitalSendinDup0Window);
                    fNewBinary12StatImage.UIMap.Scope = UIASeachScope.Children;
                    fNewBinary12StatImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fNewBinary12StatImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"223");
                    fNewBinary12StatImage.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"NewBinary12");
                }

                return fNewBinary12StatImage;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text ClickNexttoinstText
        {
            get
            {
                if (null == fClickNexttoinstText)
                {
                    fClickNexttoinstText = new Text("ClickNexttoinstText", HPDigitalSendinDup0Window);
                    fClickNexttoinstText.UIMap.Scope = UIASeachScope.Children;
                    fClickNexttoinstText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fClickNexttoinstText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7167");
                    fClickNexttoinstText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Click Next to install to this folder, or click Change to install to a different folder.");
                }

                return fClickNexttoinstText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text DestinationFoldText
        {
            get
            {
                if (null == fDestinationFoldText)
                {
                    fDestinationFoldText = new Text("DestinationFoldText", HPDigitalSendinDup0Window);
                    fDestinationFoldText.UIMap.Scope = UIASeachScope.Children;
                    fDestinationFoldText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fDestinationFoldText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"7169");
                    fDestinationFoldText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Destination Folder");
                }

                return fDestinationFoldText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text CProgramFilesx8Text
        {
            get
            {
                if (null == fCProgramFilesx8Text)
                {
                    fCProgramFilesx8Text = new Text("CProgramFilesx8Text", HPDigitalSendinDup0Window);
                    fCProgramFilesx8Text.UIMap.Scope = UIASeachScope.Children;
                    fCProgramFilesx8Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fCProgramFilesx8Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8090");
                    fCProgramFilesx8Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"C:\Program Files (x86)\Hewlett-Packard\HP Digital Sending Software\");
                }

                return fCProgramFilesx8Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image CProgramFilesx8Image
        {
            get
            {
                if (null == fCProgramFilesx8Image)
                {
                    fCProgramFilesx8Image = new Image("CProgramFilesx8Image", HPDigitalSendinDup0Window);
                    fCProgramFilesx8Image.UIMap.Scope = UIASeachScope.Children;
                    fCProgramFilesx8Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fCProgramFilesx8Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8422");
                    fCProgramFilesx8Image.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"C:\Program Files (x86)\Hewlett-Packard\HP Digital Sending Software\");
                }

                return fCProgramFilesx8Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text NewBinary20StatI1XText
        {
            get
            {
                if (null == fNewBinary20StatI1XText)
                {
                    fNewBinary20StatI1XText = new Text("NewBinary20StatI1XText", HPDigitalSendinDup0Window);
                    fNewBinary20StatI1XText.UIMap.Scope = UIASeachScope.Children;
                    fNewBinary20StatI1XText.UIMap.Index = 1;
                    fNewBinary20StatI1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fNewBinary20StatI1XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8424");
                    fNewBinary20StatI1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"NewBinary20");
                }

                return fNewBinary20StatI1XText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text InstallShieldStI1XDup0Text
        {
            get
            {
                if (null == fInstallShieldStI1XDup0Text)
                {
                    fInstallShieldStI1XDup0Text = new Text("InstallShieldStI1XDup0Text", HPDigitalSendinDup0Window);
                    fInstallShieldStI1XDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fInstallShieldStI1XDup0Text.UIMap.Index = 1;
                    fInstallShieldStI1XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fInstallShieldStI1XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8426");
                    fInstallShieldStI1XDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"InstallShield");
                }

                return fInstallShieldStI1XDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text InstallShieldStI1XDup1Text
        {
            get
            {
                if (null == fInstallShieldStI1XDup1Text)
                {
                    fInstallShieldStI1XDup1Text = new Text("InstallShieldStI1XDup1Text", HPDigitalSendinDup0Window);
                    fInstallShieldStI1XDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fInstallShieldStI1XDup1Text.UIMap.Index = 1;
                    fInstallShieldStI1XDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fInstallShieldStI1XDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8428");
                    fInstallShieldStI1XDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"InstallShield");
                }

                return fInstallShieldStI1XDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text InstallShieldStI1XDup2Text
        {
            get
            {
                if (null == fInstallShieldStI1XDup2Text)
                {
                    fInstallShieldStI1XDup2Text = new Text("InstallShieldStI1XDup2Text", HPDigitalSendinDup0Window);
                    fInstallShieldStI1XDup2Text.UIMap.Scope = UIASeachScope.Children;
                    fInstallShieldStI1XDup2Text.UIMap.Index = 1;
                    fInstallShieldStI1XDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fInstallShieldStI1XDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8437");
                    fInstallShieldStI1XDup2Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"InstallShield");
                }

                return fInstallShieldStI1XDup2Text;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text InstallHPDigitaText
        {
            get
            {
                if (null == fInstallHPDigitaText)
                {
                    fInstallHPDigitaText = new Text("InstallHPDigitaText", HPDigitalSendinDup0Window);
                    fInstallHPDigitaText.UIMap.Scope = UIASeachScope.Children;
                    fInstallHPDigitaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fInstallHPDigitaText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8540");
                    fInstallHPDigitaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"Install HP Digital Sending Software {_version} to:");
                }

                return fInstallHPDigitaText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TitleBar HPDigitalSendinI1XTitleBar
        {
            get
            {
                if (null == fHPDigitalSendinI1XTitleBar)
                {
                    fHPDigitalSendinI1XTitleBar = new TitleBar("HPDigitalSendinI1XTitleBar", HPDigitalSendinDup0Window);
                    fHPDigitalSendinI1XTitleBar.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinI1XTitleBar.UIMap.Index = 1;
                    fHPDigitalSendinI1XTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"TitleBar");
                    fHPDigitalSendinI1XTitleBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software {_version} - InstallShield Wizard");
                }

                return fHPDigitalSendinI1XTitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuBar SystemMenuBarSyI1XMenuBar
        {
            get
            {
                if (null == fSystemMenuBarSyI1XMenuBar)
                {
                    fSystemMenuBarSyI1XMenuBar = new MenuBar("SystemMenuBarSyI1XMenuBar", HPDigitalSendinI1XTitleBar);
                    fSystemMenuBarSyI1XMenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBarSyI1XMenuBar.UIMap.Index = 1;
                    fSystemMenuBarSyI1XMenuBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SystemMenuBar");
                    fSystemMenuBarSyI1XMenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System Menu Bar");
                }

                return fSystemMenuBarSyI1XMenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuItem SystemItem1I1XMenuItem
        {
            get
            {
                if (null == fSystemItem1I1XMenuItem)
                {
                    fSystemItem1I1XMenuItem = new MenuItem("SystemItem1I1XMenuItem", SystemMenuBarSyI1XMenuBar);
                    fSystemItem1I1XMenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemItem1I1XMenuItem.UIMap.Index = 1;
                    fSystemItem1I1XMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Item 1");
                    fSystemItem1I1XMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                }

                return fSystemItem1I1XMenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CloseCloseI1XButton
        {
            get
            {
                if (null == fCloseCloseI1XButton)
                {
                    fCloseCloseI1XButton = new Button("CloseCloseI1XButton", HPDigitalSendinI1XTitleBar);
                    fCloseCloseI1XButton.UIMap.Scope = UIASeachScope.Children;
                    fCloseCloseI1XButton.UIMap.Index = 1;
                    fCloseCloseI1XButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Close");
                    fCloseCloseI1XButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                }

                return fCloseCloseI1XButton;
            }
        }
    }
}

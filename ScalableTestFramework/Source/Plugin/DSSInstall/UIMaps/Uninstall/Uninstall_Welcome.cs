//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------

namespace HP.ScalableTest.Plugin.DSSInstall.UIMaps.Uninstall
{
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class Uninstall_Welcome
    {
        /// <summary>
        /// Backing field for HPDigitalSendinWindow property
        /// </summary>
        private Window fHPDigitalSendinWindow;

        /// <summary>
        /// Backing field for NextButton6943Button property
        /// </summary>
        private Button fNextButton6943Button;

        /// <summary>
        /// Backing field for CancelButton688Button property
        /// </summary>
        private Button fCancelButton688Button;

        /// <summary>
        /// Backing field for BackButton6886Button property
        /// </summary>
        private Button fBackButton6886Button;

        /// <summary>
        /// Backing field for TheInstallShielText property
        /// </summary>
        private Text fTheInstallShielText;

        /// <summary>
        /// Backing field for TheInstallShielImage property
        /// </summary>
        private Image fTheInstallShielImage;

        /// <summary>
        /// Backing field for Static8198Image property
        /// </summary>
        private Image fStatic8198Image;

        /// <summary>
        /// Backing field for WelcometotheInsText property
        /// </summary>
        private Text fWelcometotheInsText;

        /// <summary>
        /// Backing field for ATitleBar property
        /// </summary>
        private TitleBar fATitleBar;

        /// <summary>
        /// Backing field for SystemMenuBar property
        /// </summary>
        private MenuBar fSystemMenuBar;

        /// <summary>
        /// Backing field for SystemMenuItem property
        /// </summary>
        private MenuItem fSystemMenuItem;

        /// <summary>
        /// Backing field for CloseButton property
        /// </summary>
        private Button fCloseButton;

        private string _version;

        /// <summary>
        /// Initializes a new instance of the <see cref="Uninstall_Welcome"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public Uninstall_Welcome(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Uninstall_Welcome"/> class using the default UIAFramework.
        /// </summary>
        public Uninstall_Welcome()
        {
            Desktop = new Desktop();
        }

        public Uninstall_Welcome(string version)
        {
            _version = version;
            Desktop = new Desktop(UIAFramework.ManagedUIA);
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        public void WaitForAvailable(int timeout)
        {
            HPDigitalSendinWindow.WaitForAvailable(timeout);
            TheInstallShielText.WaitForAvailable(timeout);

        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Window HPDigitalSendinWindow
        {
            get
            {
                if (null == fHPDigitalSendinWindow)
                {
                    fHPDigitalSendinWindow = new Window("HPDigitalSendinWindow", Desktop);
                    fHPDigitalSendinWindow.UIMap.Scope = UIASeachScope.Children;
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"MsiDialogCloseClass");
                    fHPDigitalSendinWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Digital Sending Software {_version} - InstallShield Wizard");
                }

                return fHPDigitalSendinWindow;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button NextButton6943Button
        {
            get
            {
                if (null == fNextButton6943Button)
                {
                    fNextButton6943Button = new Button("NextButton6943Button", HPDigitalSendinWindow);
                    fNextButton6943Button.UIMap.Scope = UIASeachScope.Children;
                    fNextButton6943Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fNextButton6943Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Next >");
                }

                return fNextButton6943Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CancelButton688Button
        {
            get
            {
                if (null == fCancelButton688Button)
                {
                    fCancelButton688Button = new Button("CancelButton688Button", HPDigitalSendinWindow);
                    fCancelButton688Button.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton688Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButton688Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelButton688Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button BackButton6886Button
        {
            get
            {
                if (null == fBackButton6886Button)
                {
                    fBackButton6886Button = new Button("BackButton6886Button", HPDigitalSendinWindow);
                    fBackButton6886Button.UIMap.Scope = UIASeachScope.Children;
                    fBackButton6886Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fBackButton6886Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"< Back");
                }

                return fBackButton6886Button;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text TheInstallShielText
        {
            get
            {
                if (null == fTheInstallShielText)
                {
                    fTheInstallShielText = new Text("TheInstallShielText", HPDigitalSendinWindow);
                    fTheInstallShielText.UIMap.Scope = UIASeachScope.Children;
                    fTheInstallShielText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fTheInstallShielText.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"The InstallShield(R) Wizard will allow you to modify, repair, or remove HP Digital Sending Software {_version}. To continue, click Next.");
                }

                return fTheInstallShielText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image TheInstallShielImage
        {
            get
            {
                if (null == fTheInstallShielImage)
                {
                    fTheInstallShielImage = new Image("TheInstallShielImage", HPDigitalSendinWindow);
                    fTheInstallShielImage.UIMap.Scope = UIASeachScope.Children;
                    fTheInstallShielImage.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fTheInstallShielImage.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8184");
                    fTheInstallShielImage.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"The InstallShield(R) Wizard will allow you to modify, repair, or remove HP Digital Sending Software {_version}. To continue, click Next.");
                }

                return fTheInstallShielImage;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Image Static8198Image
        {
            get
            {
                if (null == fStatic8198Image)
                {
                    fStatic8198Image = new Image("Static8198Image", HPDigitalSendinWindow);
                    fStatic8198Image.UIMap.Scope = UIASeachScope.Children;
                    fStatic8198Image.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fStatic8198Image.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8198");
                }

                return fStatic8198Image;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Text WelcometotheInsText
        {
            get
            {
                if (null == fWelcometotheInsText)
                {
                    fWelcometotheInsText = new Text("WelcometotheInsText", HPDigitalSendinWindow);
                    fWelcometotheInsText.UIMap.Scope = UIASeachScope.Children;
                    fWelcometotheInsText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fWelcometotheInsText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"8208");
                    fWelcometotheInsText.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"Welcome to the InstallShield Wizard for HP Digital Sending Software {_version}");
                }

                return fWelcometotheInsText;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public TitleBar ATitleBar
        {
            get
            {
                if (null == fATitleBar)
                {
                    fATitleBar = new TitleBar("ATitleBar", HPDigitalSendinWindow);
                    fATitleBar.UIMap.Scope = UIASeachScope.Children;
                }

                return fATitleBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuBar SystemMenuBar
        {
            get
            {
                if (null == fSystemMenuBar)
                {
                    fSystemMenuBar = new MenuBar("SystemMenuBar", ATitleBar);
                    fSystemMenuBar.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                }

                return fSystemMenuBar;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public MenuItem SystemMenuItem
        {
            get
            {
                if (null == fSystemMenuItem)
                {
                    fSystemMenuItem = new MenuItem("SystemMenuItem", SystemMenuBar);
                    fSystemMenuItem.UIMap.Scope = UIASeachScope.Children;
                    fSystemMenuItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"System");
                }

                return fSystemMenuItem;
            }
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Button CloseButton
        {
            get
            {
                if (null == fCloseButton)
                {
                    fCloseButton = new Button("CloseButton", ATitleBar);
                    fCloseButton.UIMap.Scope = UIASeachScope.Children;
                    fCloseButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                }

                return fCloseButton;
            }
        }
    }
}

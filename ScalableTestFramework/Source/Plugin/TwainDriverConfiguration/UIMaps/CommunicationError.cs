//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------

namespace HP.ScalableTest.Plugin.TwainDriverConfiguration.UIMaps
{
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class CommunicationError
    {
        /// <summary>
        /// Backing field for HPScanHPLaserJeWindow property
        /// </summary>
        private Window fHPScanHPLaserJeWindow;

        /// <summary>
        /// Backing field for HPScanHPLaserJePane property
        /// </summary>
        private Pane fHPScanHPLaserJePane;

        /// <summary>
        /// Backing field for OKButton1Button property
        /// </summary>
        private Button fOKButton1Button;

        /// <summary>
        /// Backing field for Button1164Button property
        /// </summary>
        private Button fButton1164Button;

        /// <summary>
        /// Backing field for ScannercommunicText property
        /// </summary>
        private Text fScannercommunicText;

        /// <summary>
        /// Backing field for HPScanStatic106Dup0I0XText property
        /// </summary>
        private Text fHPScanStatic106Dup0I0XText;

        /// <summary>
        /// Backing field for HPScanStatic106Dup1I1XText property
        /// </summary>
        private Text fHPScanStatic106Dup1I1XText;

        /// <summary>
        /// Backing field for HPScanStatic106Dup2I2XText property
        /// </summary>
        private Text fHPScanStatic106Dup2I2XText;

        /// <summary>
        /// Backing field for HPScanStatic106Dup3I3XText property
        /// </summary>
        private Text fHPScanStatic106Dup3I3XText;

        /// <summary>
        /// Backing field for HPScanStatic106Dup4I4XText property
        /// </summary>
        private Text fHPScanStatic106Dup4I4XText;

        /// <summary>
        /// Backing field for HPScanStatic106Dup5Text property
        /// </summary>
        private Text fHPScanStatic106Dup5Text;

        /// <summary>
        /// Backing field for HPLaserJetMFPM5Dup0I0XText property
        /// </summary>
        private Text fHPLaserJetMFPM5Dup0I0XText;

        /// <summary>
        /// Backing field for HPLaserJetMFPM5Dup1I1XText property
        /// </summary>
        private Text fHPLaserJetMFPM5Dup1I1XText;

        /// <summary>
        /// Backing field for Static1066Text property
        /// </summary>
        private Text fStatic1066Text;

        /// <summary>
        /// Backing field for AdjustmentsStatText property
        /// </summary>
        private Text fAdjustmentsStatText;

        /// <summary>
        /// Backing field for SaveButton1006Button property
        /// </summary>
        private Button fSaveButton1006Button;

        /// <summary>
        /// Backing field for ExitButton1007Button property
        /// </summary>
        private Button fExitButton1007Button;

        /// <summary>
        /// Backing field for BackButton1005Button property
        /// </summary>
        private Button fBackButton1005Button;

        /// <summary>
        /// Backing field for Button1000Button property
        /// </summary>
        private Button fButton1000Button;

        /// <summary>
        /// Backing field for Button210Button property
        /// </summary>
        private Button fButton210Button;

        /// <summary>
        /// Backing field for Button1023Button property
        /// </summary>
        private Button fButton1023Button;

        /// <summary>
        /// Backing field for A32770Dup0I0XPane property
        /// </summary>
        private Pane fA32770Dup0I0XPane;

        /// <summary>
        /// Backing field for A32770Dup1I1XPane property
        /// </summary>
        private Pane fA32770Dup1I1XPane;

        /// <summary>
        /// Backing field for Button1079Button property
        /// </summary>
        private Button fButton1079Button;

        /// <summary>
        /// Backing field for Button1110Button property
        /// </summary>
        private Button fButton1110Button;

        /// <summary>
        /// Backing field for AutoExposureButButton property
        /// </summary>
        private Button fAutoExposureButButton;

        /// <summary>
        /// Backing field for msctlstrackbarDup0Slider property
        /// </summary>
        private Slider fmsctlstrackbarDup0Slider;

        /// <summary>
        /// Backing field for BackbylargeamouDup0Button property
        /// </summary>
        private Button fBackbylargeamouDup0Button;

        /// <summary>
        /// Backing field for ThumbDup0Thumb property
        /// </summary>
        private Thumb fThumbDup0Thumb;

        /// <summary>
        /// Backing field for ForwardbylargeaDup0Button property
        /// </summary>
        private Button fForwardbylargeaDup0Button;

        /// <summary>
        /// Backing field for A0Edit1043Edit property
        /// </summary>
        private Edit fA0Edit1043Edit;

        /// <summary>
        /// Backing field for SpinmsctlsupdoDup0Spinner property
        /// </summary>
        private Spinner fSpinmsctlsupdoDup0Spinner;

        /// <summary>
        /// Backing field for ForwardSmallIncDup0Button property
        /// </summary>
        private Button fForwardSmallIncDup0Button;

        /// <summary>
        /// Backing field for BackwardSmallDeDup0Button property
        /// </summary>
        private Button fBackwardSmallDeDup0Button;

        /// <summary>
        /// Backing field for msctlstrackbarDup1Slider property
        /// </summary>
        private Slider fmsctlstrackbarDup1Slider;

        /// <summary>
        /// Backing field for BackbylargeamouDup1Button property
        /// </summary>
        private Button fBackbylargeamouDup1Button;

        /// <summary>
        /// Backing field for ThumbDup1Thumb property
        /// </summary>
        private Thumb fThumbDup1Thumb;

        /// <summary>
        /// Backing field for ForwardbylargeaDup1Button property
        /// </summary>
        private Button fForwardbylargeaDup1Button;

        /// <summary>
        /// Backing field for A0Edit1046Edit property
        /// </summary>
        private Edit fA0Edit1046Edit;

        /// <summary>
        /// Backing field for SpinmsctlsupdoDup1Spinner property
        /// </summary>
        private Spinner fSpinmsctlsupdoDup1Spinner;

        /// <summary>
        /// Backing field for ForwardSmallIncDup1Button property
        /// </summary>
        private Button fForwardSmallIncDup1Button;

        /// <summary>
        /// Backing field for BackwardSmallDeDup1Button property
        /// </summary>
        private Button fBackwardSmallDeDup1Button;

        /// <summary>
        /// Backing field for msctlstrackbarDup2Slider property
        /// </summary>
        private Slider fmsctlstrackbarDup2Slider;

        /// <summary>
        /// Backing field for BackbylargeamouDup2Button property
        /// </summary>
        private Button fBackbylargeamouDup2Button;

        /// <summary>
        /// Backing field for ThumbDup2Thumb property
        /// </summary>
        private Thumb fThumbDup2Thumb;

        /// <summary>
        /// Backing field for ForwardbylargeaDup2Button property
        /// </summary>
        private Button fForwardbylargeaDup2Button;

        /// <summary>
        /// Backing field for A0Edit1049Edit property
        /// </summary>
        private Edit fA0Edit1049Edit;

        /// <summary>
        /// Backing field for SpinmsctlsupdoDup2Spinner property
        /// </summary>
        private Spinner fSpinmsctlsupdoDup2Spinner;

        /// <summary>
        /// Backing field for ForwardSmallIncDup2Button property
        /// </summary>
        private Button fForwardSmallIncDup2Button;

        /// <summary>
        /// Backing field for BackwardSmallDeDup2Button property
        /// </summary>
        private Button fBackwardSmallDeDup2Button;

        /// <summary>
        /// Backing field for PDFComboBox1077ComboBox property
        /// </summary>
        private ComboBox fPDFComboBox1077ComboBox;

        /// <summary>
        /// Backing field for ComboLBoxListBoList property
        /// </summary>
        private List fComboLBoxListBoList;

        /// <summary>
        /// Backing field for PDFListItem property
        /// </summary>
        private ListItem fPDFListItem;

        /// <summary>
        /// Backing field for DropDownButtonDDup0Button property
        /// </summary>
        private Button fDropDownButtonDDup0Button;

        /// <summary>
        /// Backing field for FileTypeStaticText property
        /// </summary>
        private Text fFileTypeStaticText;

        /// <summary>
        /// Backing field for FileTypeComboBoComboBox property
        /// </summary>
        private ComboBox fFileTypeComboBoComboBox;

        /// <summary>
        /// Backing field for FileTypeComboLBList property
        /// </summary>
        private List fFileTypeComboLBList;

        /// <summary>
        /// Backing field for LocalorNetworkfListItem property
        /// </summary>
        private ListItem fLocalorNetworkfListItem;

        /// <summary>
        /// Backing field for DropDownButtonDDup1Button property
        /// </summary>
        private Button fDropDownButtonDDup1Button;

        /// <summary>
        /// Backing field for SendToStaticText property
        /// </summary>
        private Text fSendToStaticText;

        /// <summary>
        /// Backing field for Button2132Button property
        /// </summary>
        private Button fButton2132Button;

        /// <summary>
        /// Backing field for Button1165Button property
        /// </summary>
        private Button fButton1165Button;

        /// <summary>
        /// Backing field for Button288Button property
        /// </summary>
        private Button fButton288Button;

        /// <summary>
        /// Model Name property
        /// </summary>
        private string _modelName;

        /// <summary>
        /// Initializes a new instance of the <see cref="CommunicationError"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public CommunicationError(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CommunicationError"/> class using the default UIAFramework.
        /// </summary>
        public CommunicationError()
        {
            Desktop = new Desktop();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CommunicationError"/> class.
        /// </summary>
        /// <param name="modelName">
        /// The framework.
        /// </param>
        public CommunicationError(string modelName)
        {
            _modelName = modelName;
            Desktop = new Desktop(UIAFramework.ManagedUIA);
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        /// <summary>
        /// Gets Reference to HPScanHPLaserJeWindow
        /// </summary>
        public Window HPScanHPLaserJeWindow
        {
            get
            {
                if (null == fHPScanHPLaserJeWindow)
                {
                    fHPScanHPLaserJeWindow = new Window("HPScanHPLaserJeWindow", Desktop);
                    fHPScanHPLaserJeWindow.UIMap.Scope = UIASeachScope.Children;
                    fHPScanHPLaserJeWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                    fHPScanHPLaserJeWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Scan - {_modelName}");
                }

                return fHPScanHPLaserJeWindow;
            }
        }

        /// <summary>
        /// Gets Reference to HPScanHPLaserJePane
        /// </summary>
        public Pane HPScanHPLaserJePane
        {
            get
            {
                if (null == fHPScanHPLaserJePane)
                {
                    fHPScanHPLaserJePane = new Pane("HPScanHPLaserJePane", HPScanHPLaserJeWindow);
                    fHPScanHPLaserJePane.UIMap.Scope = UIASeachScope.Children;
                    fHPScanHPLaserJePane.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Scan - {_modelName}");
                    fHPScanHPLaserJePane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fHPScanHPLaserJePane;
            }
        }

        /// <summary>
        /// Gets Reference to OKButton1Button
        /// </summary>
        public Button OKButton1Button
        {
            get
            {
                if (null == fOKButton1Button)
                {
                    fOKButton1Button = new Button("OKButton1Button", HPScanHPLaserJePane);
                    fOKButton1Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1");
                }

                return fOKButton1Button;
            }
        }

        /// <summary>
        /// Gets Reference to Button1164Button
        /// </summary>
        public Button Button1164Button
        {
            get
            {
                if (null == fButton1164Button)
                {
                    fButton1164Button = new Button("Button1164Button", HPScanHPLaserJePane);
                    fButton1164Button.UIMap.Scope = UIASeachScope.Children;
                    fButton1164Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1164");
                    fButton1164Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButton1164Button;
            }
        }

        /// <summary>
        /// Gets Reference to ScannercommunicText
        /// </summary>
        public Text ScannercommunicText
        {
            get
            {
                if (null == fScannercommunicText)
                {
                    fScannercommunicText = new Text("ScannercommunicText", HPScanHPLaserJePane);
                    fScannercommunicText.UIMap.Scope = UIASeachScope.Children;
                    fScannercommunicText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scanner communication cannot be established or the communication with the device ended prematurely.  Please verify your device is powered on, that your PC is connected to the network, and your network is functioning properly.  Verify network cables are securely attached.

Verify that the Internet Printing Protocol (IPP) Settings (Require IPP Authentication) is not enabled. 

Also, verify that the WebScan and / or Secure WebScan features of your device are enabled.  (Check your device control panel for web scan settings.)

If all of these conditions are correct, try the following steps. After each step try scanning again.

1.  Restart the scanning application
2.  Re - select your device using the HP TWAIN Device Selection Tool available in the Windows Start menu.
3.  Restart (power - cycle) the device

If you are running firewall software, it may be blocking communication with the device. Please visit www.hp.com / go / wirelessprinting for help configuring your firewall.");
                    fScannercommunicText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fScannercommunicText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1844");
                }

                return fScannercommunicText;
            }
        }

        /// <summary>
        /// Gets Reference to HPScanStatic106Dup0I0XText
        /// </summary>
        public Text HPScanStatic106Dup0I0XText
        {
            get
            {
                if (null == fHPScanStatic106Dup0I0XText)
                {
                    fHPScanStatic106Dup0I0XText = new Text("HPScanStatic106Dup0I0XText", HPScanHPLaserJePane);
                    fHPScanStatic106Dup0I0XText.UIMap.Scope = UIASeachScope.Children;
                    fHPScanStatic106Dup0I0XText.UIMap.Index = 0;
                    fHPScanStatic106Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Scan");
                    fHPScanStatic106Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fHPScanStatic106Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                }

                return fHPScanStatic106Dup0I0XText;
            }
        }

        /// <summary>
        /// Gets Reference to HPScanStatic106Dup1I1XText
        /// </summary>
        public Text HPScanStatic106Dup1I1XText
        {
            get
            {
                if (null == fHPScanStatic106Dup1I1XText)
                {
                    fHPScanStatic106Dup1I1XText = new Text("HPScanStatic106Dup1I1XText", HPScanHPLaserJePane);
                    fHPScanStatic106Dup1I1XText.UIMap.Scope = UIASeachScope.Children;
                    fHPScanStatic106Dup1I1XText.UIMap.Index = 1;
                    fHPScanStatic106Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Scan");
                    fHPScanStatic106Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fHPScanStatic106Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                }

                return fHPScanStatic106Dup1I1XText;
            }
        }

        /// <summary>
        /// Gets Reference to HPScanStatic106Dup2I2XText
        /// </summary>
        public Text HPScanStatic106Dup2I2XText
        {
            get
            {
                if (null == fHPScanStatic106Dup2I2XText)
                {
                    fHPScanStatic106Dup2I2XText = new Text("HPScanStatic106Dup2I2XText", HPScanHPLaserJePane);
                    fHPScanStatic106Dup2I2XText.UIMap.Scope = UIASeachScope.Children;
                    fHPScanStatic106Dup2I2XText.UIMap.Index = 2;
                    fHPScanStatic106Dup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Scan");
                    fHPScanStatic106Dup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fHPScanStatic106Dup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                }

                return fHPScanStatic106Dup2I2XText;
            }
        }

        /// <summary>
        /// Gets Reference to HPScanStatic106Dup3I3XText
        /// </summary>
        public Text HPScanStatic106Dup3I3XText
        {
            get
            {
                if (null == fHPScanStatic106Dup3I3XText)
                {
                    fHPScanStatic106Dup3I3XText = new Text("HPScanStatic106Dup3I3XText", HPScanHPLaserJePane);
                    fHPScanStatic106Dup3I3XText.UIMap.Scope = UIASeachScope.Children;
                    fHPScanStatic106Dup3I3XText.UIMap.Index = 3;
                    fHPScanStatic106Dup3I3XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Scan");
                    fHPScanStatic106Dup3I3XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fHPScanStatic106Dup3I3XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                }

                return fHPScanStatic106Dup3I3XText;
            }
        }

        /// <summary>
        /// Gets Reference to HPScanStatic106Dup4I4XText
        /// </summary>
        public Text HPScanStatic106Dup4I4XText
        {
            get
            {
                if (null == fHPScanStatic106Dup4I4XText)
                {
                    fHPScanStatic106Dup4I4XText = new Text("HPScanStatic106Dup4I4XText", HPScanHPLaserJePane);
                    fHPScanStatic106Dup4I4XText.UIMap.Scope = UIASeachScope.Children;
                    fHPScanStatic106Dup4I4XText.UIMap.Index = 4;
                    fHPScanStatic106Dup4I4XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Scan");
                    fHPScanStatic106Dup4I4XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fHPScanStatic106Dup4I4XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                }

                return fHPScanStatic106Dup4I4XText;
            }
        }

        /// <summary>
        /// Gets Reference to HPScanStatic106Dup5Text
        /// </summary>
        public Text HPScanStatic106Dup5Text
        {
            get
            {
                if (null == fHPScanStatic106Dup5Text)
                {
                    fHPScanStatic106Dup5Text = new Text("HPScanStatic106Dup5Text", HPScanHPLaserJeWindow);
                    fHPScanStatic106Dup5Text.UIMap.Scope = UIASeachScope.Children;
                    fHPScanStatic106Dup5Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Scan");
                    fHPScanStatic106Dup5Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fHPScanStatic106Dup5Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                }

                return fHPScanStatic106Dup5Text;
            }
        }

        /// <summary>
        /// Gets Reference to HPLaserJetMFPM5Dup0I0XText
        /// </summary>
        public Text HPLaserJetMFPM5Dup0I0XText
        {
            get
            {
                if (null == fHPLaserJetMFPM5Dup0I0XText)
                {
                    fHPLaserJetMFPM5Dup0I0XText = new Text("HPLaserJetMFPM5Dup0I0XText", HPScanHPLaserJeWindow);
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.Index = 0;
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet MFP M527");
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                }

                return fHPLaserJetMFPM5Dup0I0XText;
            }
        }

        /// <summary>
        /// Gets Reference to HPLaserJetMFPM5Dup1I1XText
        /// </summary>
        public Text HPLaserJetMFPM5Dup1I1XText
        {
            get
            {
                if (null == fHPLaserJetMFPM5Dup1I1XText)
                {
                    fHPLaserJetMFPM5Dup1I1XText = new Text("HPLaserJetMFPM5Dup1I1XText", HPScanHPLaserJeWindow);
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.Index = 1;
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet MFP M527");
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                }

                return fHPLaserJetMFPM5Dup1I1XText;
            }
        }

        /// <summary>
        /// Gets Reference to Static1066Text
        /// </summary>
        public Text Static1066Text
        {
            get
            {
                if (null == fStatic1066Text)
                {
                    fStatic1066Text = new Text("Static1066Text", HPScanHPLaserJeWindow);
                    fStatic1066Text.UIMap.Scope = UIASeachScope.Children;
                    fStatic1066Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fStatic1066Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fStatic1066Text;
            }
        }

        /// <summary>
        /// Gets Reference to AdjustmentsStatText
        /// </summary>
        public Text AdjustmentsStatText
        {
            get
            {
                if (null == fAdjustmentsStatText)
                {
                    fAdjustmentsStatText = new Text("AdjustmentsStatText", HPScanHPLaserJeWindow);
                    fAdjustmentsStatText.UIMap.Scope = UIASeachScope.Children;
                    fAdjustmentsStatText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Adjustments");
                    fAdjustmentsStatText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fAdjustmentsStatText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                }

                return fAdjustmentsStatText;
            }
        }

        /// <summary>
        /// Gets Reference to SaveButton1006Button
        /// </summary>
        public Button SaveButton1006Button
        {
            get
            {
                if (null == fSaveButton1006Button)
                {
                    fSaveButton1006Button = new Button("SaveButton1006Button", HPScanHPLaserJeWindow);
                    fSaveButton1006Button.UIMap.Scope = UIASeachScope.Children;
                    fSaveButton1006Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save");
                    fSaveButton1006Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fSaveButton1006Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1006");
                }

                return fSaveButton1006Button;
            }
        }

        /// <summary>
        /// Gets Reference to ExitButton1007Button
        /// </summary>
        public Button ExitButton1007Button
        {
            get
            {
                if (null == fExitButton1007Button)
                {
                    fExitButton1007Button = new Button("ExitButton1007Button", HPScanHPLaserJeWindow);
                    fExitButton1007Button.UIMap.Scope = UIASeachScope.Children;
                    fExitButton1007Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Exit");
                    fExitButton1007Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fExitButton1007Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1007");
                }

                return fExitButton1007Button;
            }
        }

        /// <summary>
        /// Gets Reference to BackButton1005Button
        /// </summary>
        public Button BackButton1005Button
        {
            get
            {
                if (null == fBackButton1005Button)
                {
                    fBackButton1005Button = new Button("BackButton1005Button", HPScanHPLaserJeWindow);
                    fBackButton1005Button.UIMap.Scope = UIASeachScope.Children;
                    fBackButton1005Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back");
                    fBackButton1005Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fBackButton1005Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1005");
                }

                return fBackButton1005Button;
            }
        }

        /// <summary>
        /// Gets Reference to Button1000Button
        /// </summary>
        public Button Button1000Button
        {
            get
            {
                if (null == fButton1000Button)
                {
                    fButton1000Button = new Button("Button1000Button", HPScanHPLaserJeWindow);
                    fButton1000Button.UIMap.Scope = UIASeachScope.Children;
                    fButton1000Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1000");
                    fButton1000Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButton1000Button;
            }
        }

        /// <summary>
        /// Gets Reference to Button210Button
        /// </summary>
        public Button Button210Button
        {
            get
            {
                if (null == fButton210Button)
                {
                    fButton210Button = new Button("Button210Button", HPScanHPLaserJeWindow);
                    fButton210Button.UIMap.Scope = UIASeachScope.Children;
                    fButton210Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"210");
                    fButton210Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButton210Button;
            }
        }

        /// <summary>
        /// Gets Reference to Button1023Button
        /// </summary>
        public Button Button1023Button
        {
            get
            {
                if (null == fButton1023Button)
                {
                    fButton1023Button = new Button("Button1023Button", HPScanHPLaserJeWindow);
                    fButton1023Button.UIMap.Scope = UIASeachScope.Children;
                    fButton1023Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1023");
                    fButton1023Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButton1023Button;
            }
        }

        /// <summary>
        /// Gets Reference to A32770Dup0I0XPane
        /// </summary>
        public Pane A32770Dup0I0XPane
        {
            get
            {
                if (null == fA32770Dup0I0XPane)
                {
                    fA32770Dup0I0XPane = new Pane("A32770Dup0I0XPane", HPScanHPLaserJeWindow);
                    fA32770Dup0I0XPane.UIMap.Scope = UIASeachScope.Children;
                    fA32770Dup0I0XPane.UIMap.Index = 1;
                    fA32770Dup0I0XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fA32770Dup0I0XPane;
            }
        }

        /// <summary>
        /// Gets Reference to A32770Dup1I1XPane
        /// </summary>
        public Pane A32770Dup1I1XPane
        {
            get
            {
                if (null == fA32770Dup1I1XPane)
                {
                    fA32770Dup1I1XPane = new Pane("A32770Dup1I1XPane", HPScanHPLaserJeWindow);
                    fA32770Dup1I1XPane.UIMap.Scope = UIASeachScope.Children;
                    fA32770Dup1I1XPane.UIMap.Index = 2;
                    fA32770Dup1I1XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fA32770Dup1I1XPane;
            }
        }

        /// <summary>
        /// Gets Reference to Button1079Button
        /// </summary>
        public Button Button1079Button
        {
            get
            {
                if (null == fButton1079Button)
                {
                    fButton1079Button = new Button("Button1079Button", A32770Dup1I1XPane);
                    fButton1079Button.UIMap.Scope = UIASeachScope.Children;
                    fButton1079Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1079");
                    fButton1079Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButton1079Button;
            }
        }

        /// <summary>
        /// Gets Reference to Button1110Button
        /// </summary>
        public Button Button1110Button
        {
            get
            {
                if (null == fButton1110Button)
                {
                    fButton1110Button = new Button("Button1110Button", A32770Dup1I1XPane);
                    fButton1110Button.UIMap.Scope = UIASeachScope.Children;
                    fButton1110Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1110");
                    fButton1110Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButton1110Button;
            }
        }

        /// <summary>
        /// Gets Reference to AutoExposureButButton
        /// </summary>
        public Button AutoExposureButButton
        {
            get
            {
                if (null == fAutoExposureButButton)
                {
                    fAutoExposureButButton = new Button("AutoExposureButButton", A32770Dup1I1XPane);
                    fAutoExposureButButton.UIMap.Scope = UIASeachScope.Children;
                    fAutoExposureButButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Exposure");
                    fAutoExposureButButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fAutoExposureButButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1039");
                }

                return fAutoExposureButButton;
            }
        }

        /// <summary>
        /// Gets Reference to msctlstrackbarDup0Slider
        /// </summary>
        public Slider msctlstrackbarDup0Slider
        {
            get
            {
                if (null == fmsctlstrackbarDup0Slider)
                {
                    fmsctlstrackbarDup0Slider = new Slider("msctlstrackbarDup0Slider", A32770Dup1I1XPane);
                    fmsctlstrackbarDup0Slider.UIMap.Scope = UIASeachScope.Children;
                    fmsctlstrackbarDup0Slider.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1042");
                    fmsctlstrackbarDup0Slider.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"msctls_trackbar32");
                }

                return fmsctlstrackbarDup0Slider;
            }
        }

        /// <summary>
        /// Gets Reference to BackbylargeamouDup0Button
        /// </summary>
        public Button BackbylargeamouDup0Button
        {
            get
            {
                if (null == fBackbylargeamouDup0Button)
                {
                    fBackbylargeamouDup0Button = new Button("BackbylargeamouDup0Button", msctlstrackbarDup0Slider);
                    fBackbylargeamouDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fBackbylargeamouDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LargeDecrement");
                    fBackbylargeamouDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back by large amount");
                }

                return fBackbylargeamouDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbDup0Thumb
        /// </summary>
        public Thumb ThumbDup0Thumb
        {
            get
            {
                if (null == fThumbDup0Thumb)
                {
                    fThumbDup0Thumb = new Thumb("ThumbDup0Thumb", msctlstrackbarDup0Slider);
                    fThumbDup0Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Thumb");
                    fThumbDup0Thumb.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Thumb");
                }

                return fThumbDup0Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardbylargeaDup0Button
        /// </summary>
        public Button ForwardbylargeaDup0Button
        {
            get
            {
                if (null == fForwardbylargeaDup0Button)
                {
                    fForwardbylargeaDup0Button = new Button("ForwardbylargeaDup0Button", msctlstrackbarDup0Slider);
                    fForwardbylargeaDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fForwardbylargeaDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LargeIncrement");
                    fForwardbylargeaDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward by large amount");
                }

                return fForwardbylargeaDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to A0Edit1043Edit
        /// </summary>
        public Edit A0Edit1043Edit
        {
            get
            {
                if (null == fA0Edit1043Edit)
                {
                    fA0Edit1043Edit = new Edit("A0Edit1043Edit", A32770Dup1I1XPane);
                    fA0Edit1043Edit.UIMap.Scope = UIASeachScope.Children;
                    fA0Edit1043Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"0");
                    fA0Edit1043Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Edit");
                    fA0Edit1043Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1043");
                }

                return fA0Edit1043Edit;
            }
        }

        /// <summary>
        /// Gets Reference to SpinmsctlsupdoDup0Spinner
        /// </summary>
        public Spinner SpinmsctlsupdoDup0Spinner
        {
            get
            {
                if (null == fSpinmsctlsupdoDup0Spinner)
                {
                    fSpinmsctlsupdoDup0Spinner = new Spinner("SpinmsctlsupdoDup0Spinner", A32770Dup1I1XPane);
                    fSpinmsctlsupdoDup0Spinner.UIMap.Scope = UIASeachScope.Children;
                    fSpinmsctlsupdoDup0Spinner.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Spin");
                    fSpinmsctlsupdoDup0Spinner.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"msctls_updown32");
                    fSpinmsctlsupdoDup0Spinner.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1044");
                }

                return fSpinmsctlsupdoDup0Spinner;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardSmallIncDup0Button
        /// </summary>
        public Button ForwardSmallIncDup0Button
        {
            get
            {
                if (null == fForwardSmallIncDup0Button)
                {
                    fForwardSmallIncDup0Button = new Button("ForwardSmallIncDup0Button", SpinmsctlsupdoDup0Spinner);
                    fForwardSmallIncDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fForwardSmallIncDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallIncrement");
                    fForwardSmallIncDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward");
                }

                return fForwardSmallIncDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to BackwardSmallDeDup0Button
        /// </summary>
        public Button BackwardSmallDeDup0Button
        {
            get
            {
                if (null == fBackwardSmallDeDup0Button)
                {
                    fBackwardSmallDeDup0Button = new Button("BackwardSmallDeDup0Button", SpinmsctlsupdoDup0Spinner);
                    fBackwardSmallDeDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fBackwardSmallDeDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallDecrement");
                    fBackwardSmallDeDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Backward");
                }

                return fBackwardSmallDeDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to msctlstrackbarDup1Slider
        /// </summary>
        public Slider msctlstrackbarDup1Slider
        {
            get
            {
                if (null == fmsctlstrackbarDup1Slider)
                {
                    fmsctlstrackbarDup1Slider = new Slider("msctlstrackbarDup1Slider", A32770Dup1I1XPane);
                    fmsctlstrackbarDup1Slider.UIMap.Scope = UIASeachScope.Children;
                    fmsctlstrackbarDup1Slider.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1045");
                    fmsctlstrackbarDup1Slider.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"msctls_trackbar32");
                }

                return fmsctlstrackbarDup1Slider;
            }
        }

        /// <summary>
        /// Gets Reference to BackbylargeamouDup1Button
        /// </summary>
        public Button BackbylargeamouDup1Button
        {
            get
            {
                if (null == fBackbylargeamouDup1Button)
                {
                    fBackbylargeamouDup1Button = new Button("BackbylargeamouDup1Button", msctlstrackbarDup1Slider);
                    fBackbylargeamouDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fBackbylargeamouDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LargeDecrement");
                    fBackbylargeamouDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back by large amount");
                }

                return fBackbylargeamouDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbDup1Thumb
        /// </summary>
        public Thumb ThumbDup1Thumb
        {
            get
            {
                if (null == fThumbDup1Thumb)
                {
                    fThumbDup1Thumb = new Thumb("ThumbDup1Thumb", msctlstrackbarDup1Slider);
                    fThumbDup1Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Thumb");
                    fThumbDup1Thumb.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Thumb");
                }

                return fThumbDup1Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardbylargeaDup1Button
        /// </summary>
        public Button ForwardbylargeaDup1Button
        {
            get
            {
                if (null == fForwardbylargeaDup1Button)
                {
                    fForwardbylargeaDup1Button = new Button("ForwardbylargeaDup1Button", msctlstrackbarDup1Slider);
                    fForwardbylargeaDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fForwardbylargeaDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LargeIncrement");
                    fForwardbylargeaDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward by large amount");
                }

                return fForwardbylargeaDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to A0Edit1046Edit
        /// </summary>
        public Edit A0Edit1046Edit
        {
            get
            {
                if (null == fA0Edit1046Edit)
                {
                    fA0Edit1046Edit = new Edit("A0Edit1046Edit", A32770Dup1I1XPane);
                    fA0Edit1046Edit.UIMap.Scope = UIASeachScope.Children;
                    fA0Edit1046Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"0");
                    fA0Edit1046Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Edit");
                    fA0Edit1046Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1046");
                }

                return fA0Edit1046Edit;
            }
        }

        /// <summary>
        /// Gets Reference to SpinmsctlsupdoDup1Spinner
        /// </summary>
        public Spinner SpinmsctlsupdoDup1Spinner
        {
            get
            {
                if (null == fSpinmsctlsupdoDup1Spinner)
                {
                    fSpinmsctlsupdoDup1Spinner = new Spinner("SpinmsctlsupdoDup1Spinner", A32770Dup1I1XPane);
                    fSpinmsctlsupdoDup1Spinner.UIMap.Scope = UIASeachScope.Children;
                    fSpinmsctlsupdoDup1Spinner.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Spin");
                    fSpinmsctlsupdoDup1Spinner.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"msctls_updown32");
                    fSpinmsctlsupdoDup1Spinner.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1047");
                }

                return fSpinmsctlsupdoDup1Spinner;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardSmallIncDup1Button
        /// </summary>
        public Button ForwardSmallIncDup1Button
        {
            get
            {
                if (null == fForwardSmallIncDup1Button)
                {
                    fForwardSmallIncDup1Button = new Button("ForwardSmallIncDup1Button", SpinmsctlsupdoDup1Spinner);
                    fForwardSmallIncDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fForwardSmallIncDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallIncrement");
                    fForwardSmallIncDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward");
                }

                return fForwardSmallIncDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to BackwardSmallDeDup1Button
        /// </summary>
        public Button BackwardSmallDeDup1Button
        {
            get
            {
                if (null == fBackwardSmallDeDup1Button)
                {
                    fBackwardSmallDeDup1Button = new Button("BackwardSmallDeDup1Button", SpinmsctlsupdoDup1Spinner);
                    fBackwardSmallDeDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fBackwardSmallDeDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallDecrement");
                    fBackwardSmallDeDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Backward");
                }

                return fBackwardSmallDeDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to msctlstrackbarDup2Slider
        /// </summary>
        public Slider msctlstrackbarDup2Slider
        {
            get
            {
                if (null == fmsctlstrackbarDup2Slider)
                {
                    fmsctlstrackbarDup2Slider = new Slider("msctlstrackbarDup2Slider", A32770Dup1I1XPane);
                    fmsctlstrackbarDup2Slider.UIMap.Scope = UIASeachScope.Children;
                    fmsctlstrackbarDup2Slider.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1048");
                    fmsctlstrackbarDup2Slider.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"msctls_trackbar32");
                }

                return fmsctlstrackbarDup2Slider;
            }
        }

        /// <summary>
        /// Gets Reference to BackbylargeamouDup2Button
        /// </summary>
        public Button BackbylargeamouDup2Button
        {
            get
            {
                if (null == fBackbylargeamouDup2Button)
                {
                    fBackbylargeamouDup2Button = new Button("BackbylargeamouDup2Button", msctlstrackbarDup2Slider);
                    fBackbylargeamouDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fBackbylargeamouDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LargeDecrement");
                    fBackbylargeamouDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back by large amount");
                }

                return fBackbylargeamouDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbDup2Thumb
        /// </summary>
        public Thumb ThumbDup2Thumb
        {
            get
            {
                if (null == fThumbDup2Thumb)
                {
                    fThumbDup2Thumb = new Thumb("ThumbDup2Thumb", msctlstrackbarDup2Slider);
                    fThumbDup2Thumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Thumb");
                    fThumbDup2Thumb.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Thumb");
                }

                return fThumbDup2Thumb;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardbylargeaDup2Button
        /// </summary>
        public Button ForwardbylargeaDup2Button
        {
            get
            {
                if (null == fForwardbylargeaDup2Button)
                {
                    fForwardbylargeaDup2Button = new Button("ForwardbylargeaDup2Button", msctlstrackbarDup2Slider);
                    fForwardbylargeaDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fForwardbylargeaDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LargeIncrement");
                    fForwardbylargeaDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward by large amount");
                }

                return fForwardbylargeaDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to A0Edit1049Edit
        /// </summary>
        public Edit A0Edit1049Edit
        {
            get
            {
                if (null == fA0Edit1049Edit)
                {
                    fA0Edit1049Edit = new Edit("A0Edit1049Edit", A32770Dup1I1XPane);
                    fA0Edit1049Edit.UIMap.Scope = UIASeachScope.Children;
                    fA0Edit1049Edit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"0");
                    fA0Edit1049Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Edit");
                    fA0Edit1049Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1049");
                }

                return fA0Edit1049Edit;
            }
        }

        /// <summary>
        /// Gets Reference to SpinmsctlsupdoDup2Spinner
        /// </summary>
        public Spinner SpinmsctlsupdoDup2Spinner
        {
            get
            {
                if (null == fSpinmsctlsupdoDup2Spinner)
                {
                    fSpinmsctlsupdoDup2Spinner = new Spinner("SpinmsctlsupdoDup2Spinner", A32770Dup1I1XPane);
                    fSpinmsctlsupdoDup2Spinner.UIMap.Scope = UIASeachScope.Children;
                    fSpinmsctlsupdoDup2Spinner.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Spin");
                    fSpinmsctlsupdoDup2Spinner.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"msctls_updown32");
                    fSpinmsctlsupdoDup2Spinner.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1050");
                }

                return fSpinmsctlsupdoDup2Spinner;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardSmallIncDup2Button
        /// </summary>
        public Button ForwardSmallIncDup2Button
        {
            get
            {
                if (null == fForwardSmallIncDup2Button)
                {
                    fForwardSmallIncDup2Button = new Button("ForwardSmallIncDup2Button", SpinmsctlsupdoDup2Spinner);
                    fForwardSmallIncDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fForwardSmallIncDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallIncrement");
                    fForwardSmallIncDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward");
                }

                return fForwardSmallIncDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to BackwardSmallDeDup2Button
        /// </summary>
        public Button BackwardSmallDeDup2Button
        {
            get
            {
                if (null == fBackwardSmallDeDup2Button)
                {
                    fBackwardSmallDeDup2Button = new Button("BackwardSmallDeDup2Button", SpinmsctlsupdoDup2Spinner);
                    fBackwardSmallDeDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fBackwardSmallDeDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallDecrement");
                    fBackwardSmallDeDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Backward");
                }

                return fBackwardSmallDeDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to PDFComboBox1077ComboBox
        /// </summary>
        public ComboBox PDFComboBox1077ComboBox
        {
            get
            {
                if (null == fPDFComboBox1077ComboBox)
                {
                    fPDFComboBox1077ComboBox = new ComboBox("PDFComboBox1077ComboBox", A32770Dup1I1XPane);
                    fPDFComboBox1077ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fPDFComboBox1077ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"PDF");
                    fPDFComboBox1077ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fPDFComboBox1077ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1077");
                }

                return fPDFComboBox1077ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to ComboLBoxListBoList
        /// </summary>
        public List ComboLBoxListBoList
        {
            get
            {
                if (null == fComboLBoxListBoList)
                {
                    fComboLBoxListBoList = new List("ComboLBoxListBoList", PDFComboBox1077ComboBox);
                    fComboLBoxListBoList.UIMap.Scope = UIASeachScope.Children;
                    fComboLBoxListBoList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                    fComboLBoxListBoList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                }

                return fComboLBoxListBoList;
            }
        }

        /// <summary>
        /// Gets Reference to PDFListItem
        /// </summary>
        public ListItem PDFListItem
        {
            get
            {
                if (null == fPDFListItem)
                {
                    fPDFListItem = new ListItem("PDFListItem", ComboLBoxListBoList);
                    fPDFListItem.UIMap.Scope = UIASeachScope.Children;
                    fPDFListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"PDF");
                }

                return fPDFListItem;
            }
        }

        /// <summary>
        /// Gets Reference to DropDownButtonDDup0Button
        /// </summary>
        public Button DropDownButtonDDup0Button
        {
            get
            {
                if (null == fDropDownButtonDDup0Button)
                {
                    fDropDownButtonDDup0Button = new Button("DropDownButtonDDup0Button", PDFComboBox1077ComboBox);
                    fDropDownButtonDDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fDropDownButtonDDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                    fDropDownButtonDDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                }

                return fDropDownButtonDDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to FileTypeStaticText
        /// </summary>
        public Text FileTypeStaticText
        {
            get
            {
                if (null == fFileTypeStaticText)
                {
                    fFileTypeStaticText = new Text("FileTypeStaticText", A32770Dup1I1XPane);
                    fFileTypeStaticText.UIMap.Scope = UIASeachScope.Children;
                    fFileTypeStaticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Type");
                    fFileTypeStaticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fFileTypeStaticText;
            }
        }

        /// <summary>
        /// Gets Reference to FileTypeComboBoComboBox
        /// </summary>
        public ComboBox FileTypeComboBoComboBox
        {
            get
            {
                if (null == fFileTypeComboBoComboBox)
                {
                    fFileTypeComboBoComboBox = new ComboBox("FileTypeComboBoComboBox", A32770Dup1I1XPane);
                    fFileTypeComboBoComboBox.UIMap.Scope = UIASeachScope.Children;
                    fFileTypeComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Type");
                    fFileTypeComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fFileTypeComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1118");
                }

                return fFileTypeComboBoComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to FileTypeComboLBList
        /// </summary>
        public List FileTypeComboLBList
        {
            get
            {
                if (null == fFileTypeComboLBList)
                {
                    fFileTypeComboLBList = new List("FileTypeComboLBList", FileTypeComboBoComboBox);
                    fFileTypeComboLBList.UIMap.Scope = UIASeachScope.Children;
                    fFileTypeComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Type");
                    fFileTypeComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                    fFileTypeComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                }

                return fFileTypeComboLBList;
            }
        }

        /// <summary>
        /// Gets Reference to LocalorNetworkfListItem
        /// </summary>
        public ListItem LocalorNetworkfListItem
        {
            get
            {
                if (null == fLocalorNetworkfListItem)
                {
                    fLocalorNetworkfListItem = new ListItem("LocalorNetworkfListItem", FileTypeComboLBList);
                    fLocalorNetworkfListItem.UIMap.Scope = UIASeachScope.Children;
                    fLocalorNetworkfListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Local or Network folder");
                }

                return fLocalorNetworkfListItem;
            }
        }

        /// <summary>
        /// Gets Reference to DropDownButtonDDup1Button
        /// </summary>
        public Button DropDownButtonDDup1Button
        {
            get
            {
                if (null == fDropDownButtonDDup1Button)
                {
                    fDropDownButtonDDup1Button = new Button("DropDownButtonDDup1Button", FileTypeComboBoComboBox);
                    fDropDownButtonDDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fDropDownButtonDDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                    fDropDownButtonDDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                }

                return fDropDownButtonDDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to SendToStaticText
        /// </summary>
        public Text SendToStaticText
        {
            get
            {
                if (null == fSendToStaticText)
                {
                    fSendToStaticText = new Text("SendToStaticText", A32770Dup1I1XPane);
                    fSendToStaticText.UIMap.Scope = UIASeachScope.Children;
                    fSendToStaticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send To");
                    fSendToStaticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fSendToStaticText;
            }
        }

        /// <summary>
        /// Gets Reference to Button2132Button
        /// </summary>
        public Button Button2132Button
        {
            get
            {
                if (null == fButton2132Button)
                {
                    fButton2132Button = new Button("Button2132Button", HPScanHPLaserJeWindow);
                    fButton2132Button.UIMap.Scope = UIASeachScope.Children;
                    fButton2132Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2132");
                    fButton2132Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButton2132Button;
            }
        }

        /// <summary>
        /// Gets Reference to Button1165Button
        /// </summary>
        public Button Button1165Button
        {
            get
            {
                if (null == fButton1165Button)
                {
                    fButton1165Button = new Button("Button1165Button", HPScanHPLaserJeWindow);
                    fButton1165Button.UIMap.Scope = UIASeachScope.Children;
                    fButton1165Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1165");
                    fButton1165Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButton1165Button;
            }
        }

        /// <summary>
        /// Gets Reference to Button288Button
        /// </summary>
        public Button Button288Button
        {
            get
            {
                if (null == fButton288Button)
                {
                    fButton288Button = new Button("Button288Button", HPScanHPLaserJeWindow);
                    fButton288Button.UIMap.Scope = UIASeachScope.Children;
                    fButton288Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"288");
                    fButton288Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButton288Button;
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------

namespace HP.ScalableTest.Plugin.TwainDriverConfiguration.UIMaps
{
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class CreateShortcut
    {
        /// <summary>
        /// Backing field for HPScanHPLaserJeWindow property
        /// </summary>
        private Window fHPScanHPLaserJeWindow;

        /// <summary>
        /// Backing field for A32770Dup0I0XPane property
        /// </summary>
        private Pane fA32770Dup0I0XPane;

        /// <summary>
        /// Backing field for CreateButton1Button property
        /// </summary>
        private Button fCreateButton1Button;

        /// <summary>
        /// Backing field for CancelButton2Button property
        /// </summary>
        private Button fCancelButton2Button;

        /// <summary>
        /// Backing field for Button1164Button property
        /// </summary>
        private Button fButton1164Button;

        /// <summary>
        /// Backing field for CreateNewScanShText property
        /// </summary>
        private Text fCreateNewScanShText;

        /// <summary>
        /// Backing field for EnterthenameoftText property
        /// </summary>
        private Text fEnterthenameoftText;

        /// <summary>
        /// Backing field for EnterthenameoftEdit property
        /// </summary>
        private Edit fEnterthenameoftEdit;

        /// <summary>
        /// Backing field for NewScanShortcutText property
        /// </summary>
        private Text fNewScanShortcutText;

        /// <summary>
        /// Backing field for NewScanShortcutComboBox property
        /// </summary>
        private ComboBox fNewScanShortcutComboBox;

        /// <summary>
        /// Backing field for NewScanShortcutList property
        /// </summary>
        private List fNewScanShortcutList;

        /// <summary>
        /// Backing field for CurrentsettingsListItem property
        /// </summary>
        private ListItem fCurrentsettingsListItem;

        /// <summary>
        /// Backing field for SaveasPDFDup0ListItem property
        /// </summary>
        private ListItem fSaveasPDFDup0ListItem;

        /// <summary>
        /// Backing field for SaveasJPEGDup0ListItem property
        /// </summary>
        private ListItem fSaveasJPEGDup0ListItem;

        /// <summary>
        /// Backing field for EmailasPDFDup0ListItem property
        /// </summary>
        private ListItem fEmailasPDFDup0ListItem;

        /// <summary>
        /// Backing field for EmailasJPEGDup0ListItem property
        /// </summary>
        private ListItem fEmailasJPEGDup0ListItem;

        /// <summary>
        /// Backing field for EverydayScanDup0ListItem property
        /// </summary>
        private ListItem fEverydayScanDup0ListItem;

        /// <summary>
        /// Backing field for DropDownButtonDDup0Button property
        /// </summary>
        private Button fDropDownButtonDDup0Button;

        /// <summary>
        /// Backing field for HPScanStatic106Text property
        /// </summary>
        private Text fHPScanStatic106Text;

        /// <summary>
        /// Backing field for HPLaserJetMFPM5Dup0I0XText property
        /// </summary>
        private Text fHPLaserJetMFPM5Dup0I0XText;

        /// <summary>
        /// Backing field for HPLaserJetMFPM5Dup1I1XText property
        /// </summary>
        private Text fHPLaserJetMFPM5Dup1I1XText;

        /// <summary>
        /// Backing field for ScanShortcutSetText property
        /// </summary>
        private Text fScanShortcutSetText;

        /// <summary>
        /// Backing field for EverydayScanStaText property
        /// </summary>
        private Text fEverydayScanStaText;

        /// <summary>
        /// Backing field for ScanButton1012Button property
        /// </summary>
        private Button fScanButton1012Button;

        /// <summary>
        /// Backing field for ExitButton1007Button property
        /// </summary>
        private Button fExitButton1007Button;

        /// <summary>
        /// Backing field for Button1000Button property
        /// </summary>
        private Button fButton1000Button;

        /// <summary>
        /// Backing field for A32770Dup1I1XPane property
        /// </summary>
        private Pane fA32770Dup1I1XPane;

        /// <summary>
        /// Backing field for EverydayScanLisList property
        /// </summary>
        private List fEverydayScanLisList;

        /// <summary>
        /// Backing field for HPScanHPLaserJePane property
        /// </summary>
        private Pane fHPScanHPLaserJePane;

        /// <summary>
        /// Backing field for OKButton1Button property
        /// </summary>
        private Button fOKButton1Button;

        /// <summary>
        /// Model Name property
        /// </summary>
        private string _modelName;

        /// <summary>
        /// Initializes a new instance of the <see cref="CreateShortcut"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public CreateShortcut(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CreateShortcut"/> class using the default UIAFramework.
        /// </summary>
        public CreateShortcut()
        {
            Desktop = new Desktop();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CreateShortcut"/> class.
        /// </summary>
        /// <param name="modelName">
        /// The framework.
        /// </param>
        public CreateShortcut(string modelName)
        {
            _modelName = modelName;
            Desktop = new Desktop(UIAFramework.ManagedUIA);
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        /// <summary>
        /// Gets Reference to HPScanHPLaserJeWindow
        /// </summary>
        public Window HPScanHPLaserJeWindow
        {
            get
            {
                if (null == fHPScanHPLaserJeWindow)
                {
                    fHPScanHPLaserJeWindow = new Window("HPScanHPLaserJeWindow", Desktop);
                    fHPScanHPLaserJeWindow.UIMap.Scope = UIASeachScope.Children;
                    fHPScanHPLaserJeWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                    fHPScanHPLaserJeWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Scan - {_modelName}");
                }

                return fHPScanHPLaserJeWindow;
            }
        }

        /// <summary>
        /// Gets Reference to A32770Dup0I0XPane
        /// </summary>
        public Pane A32770Dup0I0XPane
        {
            get
            {
                if (null == fA32770Dup0I0XPane)
                {
                    fA32770Dup0I0XPane = new Pane("A32770Dup0I0XPane", HPScanHPLaserJeWindow);
                    fA32770Dup0I0XPane.UIMap.Scope = UIASeachScope.Children;
                    fA32770Dup0I0XPane.UIMap.Index = 0;
                    fA32770Dup0I0XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fA32770Dup0I0XPane;
            }
        }

        /// <summary>
        /// Gets Reference to CreateButton1Button
        /// </summary>
        public Button CreateButton1Button
        {
            get
            {
                if (null == fCreateButton1Button)
                {
                    fCreateButton1Button = new Button("CreateButton1Button", A32770Dup0I0XPane);
                    fCreateButton1Button.UIMap.Scope = UIASeachScope.Children;
                    fCreateButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCreateButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create");
                    fCreateButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1");
                }

                return fCreateButton1Button;
            }
        }

        /// <summary>
        /// Gets Reference to OKButton1Button
        /// </summary>
        public Button OKButton1Button
        {
            get
            {
                if (null == fOKButton1Button)
                {
                    fOKButton1Button = new Button("OKButton1Button", HPScanHPLaserJePane);
                    fOKButton1Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1");
                    fOKButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKButton1Button;
            }
        }

        /// <summary>
        /// Gets Reference to HPScanHPLaserJePane
        /// </summary>
        public Pane HPScanHPLaserJePane
        {
            get
            {
                if (null == fHPScanHPLaserJePane)
                {
                    fHPScanHPLaserJePane = new Pane("HPScanHPLaserJePane", A32770Dup0I0XPane);
                    fHPScanHPLaserJePane.UIMap.Scope = UIASeachScope.Children;
                    fHPScanHPLaserJePane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                    fHPScanHPLaserJePane.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Scan - HP LaserJet MFP M527");
                }

                return fHPScanHPLaserJePane;
            }
        }

        /// <summary>
        /// Gets Reference to CancelButton2Button
        /// </summary>
        public Button CancelButton2Button
        {
            get
            {
                if (null == fCancelButton2Button)
                {
                    fCancelButton2Button = new Button("CancelButton2Button", A32770Dup0I0XPane);
                    fCancelButton2Button.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButton2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    fCancelButton2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2");
                }

                return fCancelButton2Button;
            }
        }

        /// <summary>
        /// Gets Reference to Button1164Button
        /// </summary>
        public Button Button1164Button
        {
            get
            {
                if (null == fButton1164Button)
                {
                    fButton1164Button = new Button("Button1164Button", A32770Dup0I0XPane);
                    fButton1164Button.UIMap.Scope = UIASeachScope.Children;
                    fButton1164Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButton1164Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1164");
                }

                return fButton1164Button;
            }
        }

        /// <summary>
        /// Gets Reference to CreateNewScanShText
        /// </summary>
        public Text CreateNewScanShText
        {
            get
            {
                if (null == fCreateNewScanShText)
                {
                    fCreateNewScanShText = new Text("CreateNewScanShText", A32770Dup0I0XPane);
                    fCreateNewScanShText.UIMap.Scope = UIASeachScope.Children;
                    fCreateNewScanShText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fCreateNewScanShText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create New Scan Shortcut");
                    fCreateNewScanShText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                }

                return fCreateNewScanShText;
            }
        }

        /// <summary>
        /// Gets Reference to EnterthenameoftText
        /// </summary>
        public Text EnterthenameoftText
        {
            get
            {
                if (null == fEnterthenameoftText)
                {
                    fEnterthenameoftText = new Text("EnterthenameoftText", A32770Dup0I0XPane);
                    fEnterthenameoftText.UIMap.Scope = UIASeachScope.Children;
                    fEnterthenameoftText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fEnterthenameoftText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enter the name of the new Scan Shortcut.");
                    fEnterthenameoftText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                }

                return fEnterthenameoftText;
            }
        }

        /// <summary>
        /// Gets Reference to EnterthenameoftEdit
        /// </summary>
        public Edit EnterthenameoftEdit
        {
            get
            {
                if (null == fEnterthenameoftEdit)
                {
                    fEnterthenameoftEdit = new Edit("EnterthenameoftEdit", A32770Dup0I0XPane);
                    fEnterthenameoftEdit.UIMap.Scope = UIASeachScope.Children;
                    fEnterthenameoftEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Edit");
                    fEnterthenameoftEdit.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enter the name of the new Scan Shortcut.");
                    fEnterthenameoftEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1841");
                }

                return fEnterthenameoftEdit;
            }
        }

        /// <summary>
        /// Gets Reference to NewScanShortcutText
        /// </summary>
        public Text NewScanShortcutText
        {
            get
            {
                if (null == fNewScanShortcutText)
                {
                    fNewScanShortcutText = new Text("NewScanShortcutText", A32770Dup0I0XPane);
                    fNewScanShortcutText.UIMap.Scope = UIASeachScope.Children;
                    fNewScanShortcutText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fNewScanShortcutText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"New Scan Shortcut settings are based on:");
                    fNewScanShortcutText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                }

                return fNewScanShortcutText;
            }
        }

        /// <summary>
        /// Gets Reference to NewScanShortcutComboBox
        /// </summary>
        public ComboBox NewScanShortcutComboBox
        {
            get
            {
                if (null == fNewScanShortcutComboBox)
                {
                    fNewScanShortcutComboBox = new ComboBox("NewScanShortcutComboBox", A32770Dup0I0XPane);
                    fNewScanShortcutComboBox.UIMap.Scope = UIASeachScope.Children;
                    fNewScanShortcutComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fNewScanShortcutComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"New Scan Shortcut settings are based on:");
                    fNewScanShortcutComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1855");
                }

                return fNewScanShortcutComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to NewScanShortcutList
        /// </summary>
        public List NewScanShortcutList
        {
            get
            {
                if (null == fNewScanShortcutList)
                {
                    fNewScanShortcutList = new List("NewScanShortcutList", NewScanShortcutComboBox);
                    fNewScanShortcutList.UIMap.Scope = UIASeachScope.Children;
                    fNewScanShortcutList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                    fNewScanShortcutList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"New Scan Shortcut settings are based on:");
                    fNewScanShortcutList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                }

                return fNewScanShortcutList;
            }
        }

        /// <summary>
        /// Gets Reference to CurrentsettingsListItem
        /// </summary>
        public ListItem CurrentsettingsListItem
        {
            get
            {
                if (null == fCurrentsettingsListItem)
                {
                    fCurrentsettingsListItem = new ListItem("CurrentsettingsListItem", NewScanShortcutList);
                    fCurrentsettingsListItem.UIMap.Scope = UIASeachScope.Children;
                    fCurrentsettingsListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Current settings");
                }

                return fCurrentsettingsListItem;
            }
        }

        /// <summary>
        /// Gets Reference to SaveasPDFDup0ListItem
        /// </summary>
        public ListItem SaveasPDFDup0ListItem
        {
            get
            {
                if (null == fSaveasPDFDup0ListItem)
                {
                    fSaveasPDFDup0ListItem = new ListItem("SaveasPDFDup0ListItem", NewScanShortcutList);
                    fSaveasPDFDup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fSaveasPDFDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save as PDF");
                }

                return fSaveasPDFDup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to SaveasJPEGDup0ListItem
        /// </summary>
        public ListItem SaveasJPEGDup0ListItem
        {
            get
            {
                if (null == fSaveasJPEGDup0ListItem)
                {
                    fSaveasJPEGDup0ListItem = new ListItem("SaveasJPEGDup0ListItem", NewScanShortcutList);
                    fSaveasJPEGDup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fSaveasJPEGDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save as JPEG");
                }

                return fSaveasJPEGDup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to EmailasPDFDup0ListItem
        /// </summary>
        public ListItem EmailasPDFDup0ListItem
        {
            get
            {
                if (null == fEmailasPDFDup0ListItem)
                {
                    fEmailasPDFDup0ListItem = new ListItem("EmailasPDFDup0ListItem", NewScanShortcutList);
                    fEmailasPDFDup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fEmailasPDFDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Email as PDF");
                }

                return fEmailasPDFDup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to EmailasJPEGDup0ListItem
        /// </summary>
        public ListItem EmailasJPEGDup0ListItem
        {
            get
            {
                if (null == fEmailasJPEGDup0ListItem)
                {
                    fEmailasJPEGDup0ListItem = new ListItem("EmailasJPEGDup0ListItem", NewScanShortcutList);
                    fEmailasJPEGDup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fEmailasJPEGDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Email as JPEG");
                }

                return fEmailasJPEGDup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to EverydayScanDup0ListItem
        /// </summary>
        public ListItem EverydayScanDup0ListItem
        {
            get
            {
                if (null == fEverydayScanDup0ListItem)
                {
                    fEverydayScanDup0ListItem = new ListItem("EverydayScanDup0ListItem", NewScanShortcutList);
                    fEverydayScanDup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fEverydayScanDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Everyday Scan");
                }

                return fEverydayScanDup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to DropDownButtonDDup0Button
        /// </summary>
        public Button DropDownButtonDDup0Button
        {
            get
            {
                if (null == fDropDownButtonDDup0Button)
                {
                    fDropDownButtonDDup0Button = new Button("DropDownButtonDDup0Button", NewScanShortcutComboBox);
                    fDropDownButtonDDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fDropDownButtonDDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                    fDropDownButtonDDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                }

                return fDropDownButtonDDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to HPScanStatic106Text
        /// </summary>
        public Text HPScanStatic106Text
        {
            get
            {
                if (null == fHPScanStatic106Text)
                {
                    fHPScanStatic106Text = new Text("HPScanStatic106Text", HPScanHPLaserJeWindow);
                    fHPScanStatic106Text.UIMap.Scope = UIASeachScope.Children;
                    fHPScanStatic106Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fHPScanStatic106Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Scan");
                    fHPScanStatic106Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                }

                return fHPScanStatic106Text;
            }
        }

        /// <summary>
        /// Gets Reference to HPLaserJetMFPM5Dup0I0XText
        /// </summary>
        public Text HPLaserJetMFPM5Dup0I0XText
        {
            get
            {
                if (null == fHPLaserJetMFPM5Dup0I0XText)
                {
                    fHPLaserJetMFPM5Dup0I0XText = new Text("HPLaserJetMFPM5Dup0I0XText", HPScanHPLaserJeWindow);
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.Index = 0;
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet MFP M527");
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                }

                return fHPLaserJetMFPM5Dup0I0XText;
            }
        }

        /// <summary>
        /// Gets Reference to HPLaserJetMFPM5Dup1I1XText
        /// </summary>
        public Text HPLaserJetMFPM5Dup1I1XText
        {
            get
            {
                if (null == fHPLaserJetMFPM5Dup1I1XText)
                {
                    fHPLaserJetMFPM5Dup1I1XText = new Text("HPLaserJetMFPM5Dup1I1XText", HPScanHPLaserJeWindow);
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.Index = 1;
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet MFP M527");
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                }

                return fHPLaserJetMFPM5Dup1I1XText;
            }
        }

        /// <summary>
        /// Gets Reference to ScanShortcutSetText
        /// </summary>
        public Text ScanShortcutSetText
        {
            get
            {
                if (null == fScanShortcutSetText)
                {
                    fScanShortcutSetText = new Text("ScanShortcutSetText", HPScanHPLaserJeWindow);
                    fScanShortcutSetText.UIMap.Scope = UIASeachScope.Children;
                    fScanShortcutSetText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fScanShortcutSetText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan Shortcut Settings:");
                    fScanShortcutSetText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                }

                return fScanShortcutSetText;
            }
        }

        /// <summary>
        /// Gets Reference to EverydayScanStaText
        /// </summary>
        public Text EverydayScanStaText
        {
            get
            {
                if (null == fEverydayScanStaText)
                {
                    fEverydayScanStaText = new Text("EverydayScanStaText", HPScanHPLaserJeWindow);
                    fEverydayScanStaText.UIMap.Scope = UIASeachScope.Children;
                    fEverydayScanStaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fEverydayScanStaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Everyday Scan");
                    fEverydayScanStaText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                }

                return fEverydayScanStaText;
            }
        }

        /// <summary>
        /// Gets Reference to ScanButton1012Button
        /// </summary>
        public Button ScanButton1012Button
        {
            get
            {
                if (null == fScanButton1012Button)
                {
                    fScanButton1012Button = new Button("ScanButton1012Button", HPScanHPLaserJeWindow);
                    fScanButton1012Button.UIMap.Scope = UIASeachScope.Children;
                    fScanButton1012Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fScanButton1012Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan");
                    fScanButton1012Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1012");
                }

                return fScanButton1012Button;
            }
        }

        /// <summary>
        /// Gets Reference to ExitButton1007Button
        /// </summary>
        public Button ExitButton1007Button
        {
            get
            {
                if (null == fExitButton1007Button)
                {
                    fExitButton1007Button = new Button("ExitButton1007Button", HPScanHPLaserJeWindow);
                    fExitButton1007Button.UIMap.Scope = UIASeachScope.Children;
                    fExitButton1007Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fExitButton1007Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Exit");
                    fExitButton1007Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1007");
                }

                return fExitButton1007Button;
            }
        }

        /// <summary>
        /// Gets Reference to Button1000Button
        /// </summary>
        public Button Button1000Button
        {
            get
            {
                if (null == fButton1000Button)
                {
                    fButton1000Button = new Button("Button1000Button", HPScanHPLaserJeWindow);
                    fButton1000Button.UIMap.Scope = UIASeachScope.Children;
                    fButton1000Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButton1000Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1000");
                }

                return fButton1000Button;
            }
        }

        /// <summary>
        /// Gets Reference to A32770Dup1I1XPane
        /// </summary>
        public Pane A32770Dup1I1XPane
        {
            get
            {
                if (null == fA32770Dup1I1XPane)
                {
                    fA32770Dup1I1XPane = new Pane("A32770Dup1I1XPane", HPScanHPLaserJeWindow);
                    fA32770Dup1I1XPane.UIMap.Scope = UIASeachScope.Children;
                    fA32770Dup1I1XPane.UIMap.Index = 1;
                    fA32770Dup1I1XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fA32770Dup1I1XPane;
            }
        }

        /// <summary>
        /// Gets Reference to EverydayScanLisList
        /// </summary>
        public List EverydayScanLisList
        {
            get
            {
                if (null == fEverydayScanLisList)
                {
                    fEverydayScanLisList = new List("EverydayScanLisList", A32770Dup1I1XPane);
                    fEverydayScanLisList.UIMap.Scope = UIASeachScope.Children;
                    fEverydayScanLisList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBox");
                    fEverydayScanLisList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Everyday Scan");
                    fEverydayScanLisList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1853");
                }

                return fEverydayScanLisList;
            }
        }
    }
}

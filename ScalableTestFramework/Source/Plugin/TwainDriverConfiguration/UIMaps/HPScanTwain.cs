//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------

namespace HP.ScalableTest.Plugin.TwainDriverConfiguration.UIMaps
{
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class HPScanTwain
    {
        /// <summary>
        /// Backing field for HPScanHPColorLaWindow property
        /// </summary>
        private Window fHPScanHPColorLaWindow;

        /// <summary>
        /// Backing field for HPScanHPLaserJeWindow property
        /// </summary>
        private Window fHPScanHPLaserJeWindow;

        /// <summary>
        /// Backing field for HPScanStatic106Text property
        /// </summary>
        private Text fHPScanStatic106Text;

        /// <summary>
        /// Backing field for HPColorLaserJetDup0I0XText property
        /// </summary>
        private Text fHPColorLaserJetDup0I0XText;

        /// <summary>
        /// Backing field for HPColorLaserJetDup1I1XText property
        /// </summary>
        private Text fHPColorLaserJetDup1I1XText;

        /// <summary>
        /// Backing field for ScanShortcutSetText property
        /// </summary>
        private Text fScanShortcutSetText;

        /// <summary>
        /// Backing field for SaveasPDFStaticText property
        /// </summary>
        private Text fSaveasPDFStaticText;

        /// <summary>
        /// Backing field for ScanButton1012Button property
        /// </summary>
        private Button fScanButton1012Button;

        /// <summary>
        /// Backing field for ExitButton1007Button property
        /// </summary>
        private Button fExitButton1007Button;

        /// <summary>
        /// Backing field for Button1000Button property
        /// </summary>
        private Button fButton1000Button;

        /// <summary>
        /// Backing field for A32770Dup0I0XPane property
        /// </summary>
        private Pane fA32770Dup0I0XPane;

        /// <summary>
        /// Backing field for ListBox1853List property
        /// </summary>
        private List fListBox1853List;
        /// <summary>
        /// Backing field for DemoListItem property
        /// </summary>
        private ListItem fDemoListItem;

        /// <summary>
        /// Backing field for SaveasPDFListItem property
        /// </summary>
        private ListItem fSaveasPDFListItem;

        /// <summary>
        /// Backing field for SaveasJPEGListItem property
        /// </summary>
        private ListItem fSaveasJPEGListItem;

        /// <summary>
        /// Backing field for EmailasPDFListItem property
        /// </summary>
        private ListItem fEmailasPDFListItem;

        /// <summary>
        /// Backing field for EmailasJPEGListItem property
        /// </summary>
        private ListItem fEmailasJPEGListItem;

        /// <summary>
        /// Backing field for EverydayScanListItem property
        /// </summary>
        private ListItem fEverydayScanListItem;

        /// <summary>
        /// Backing field for CreateNewScanShButton property
        /// </summary>
        private Button fCreateNewScanShButton;

        /// <summary>
        /// Backing field for Button1903Button property
        /// </summary>
        private Button fButton1903Button;

        /// <summary>
        /// Backing field for JobReservationSText property
        /// </summary>
        private Text fJobReservationSText;

        /// <summary>
        /// Backing field for ScanShortcutsStText property
        /// </summary>
        private Text fScanShortcutsStText;

        /// <summary>
        /// Backing field for SelectataskandpDup0I0XText property
        /// </summary>
        private Text fSelectataskandpDup0I0XText;

        /// <summary>
        /// Backing field for SelectataskandpDup1I1XText property
        /// </summary>
        private Text fSelectataskandpDup1I1XText;

        /// <summary>
        /// Backing field for A32770Dup1I1XPane property
        /// </summary>
        private Pane fA32770Dup1I1XPane;

        /// <summary>
        /// Backing field for DocumentComboBoComboBox property
        /// </summary>
        private ComboBox fDocumentComboBoComboBox;

        /// <summary>
        /// Backing field for ComboLBoxListBoDup0List property
        /// </summary>
        private List fComboLBoxListBoDup0List;

        /// <summary>
        /// Backing field for ComboLBoxListBoDup0List property
        /// </summary>
        private List fComboLBoxListBo_Dup0List;

        /// <summary>
        /// Backing field for DocumentListItem property
        /// </summary>
        private ListItem fDocumentListItem;

        /// <summary>
        /// Backing field for PhotoListItem property
        /// </summary>
        private ListItem fPhotoListItem;

        /// <summary>
        /// Backing field for DropDownButtonDDup0Button property
        /// </summary>
        private Button fDropDownButtonDDup0Button;

        /// <summary>
        /// Backing field for ItemTypeStaticText property
        /// </summary>
        private Text fItemTypeStaticText;

        /// <summary>
        /// Backing field for ItemTypeComboBoComboBox property
        /// </summary>
        private ComboBox fItemTypeComboBoComboBox;

        /// <summary>
        /// Backing field for ItemTypeComboLBList property
        /// </summary>
        private List fItemTypeComboLBList;

        /// <summary>
        /// Backing field for DetectContentonListItem property
        /// </summary>
        private ListItem fDetectContentonListItem;

        /// <summary>
        /// Backing field for EntireScanAreaListItem property
        /// </summary>
        private ListItem fEntireScanAreaListItem;

        /// <summary>
        /// Backing field for Letter85x11inchListItem property
        /// </summary>
        private ListItem fLetter85x11inchListItem;

        /// <summary>
        /// Backing field for Legal85x14incheListItem property
        /// </summary>
        private ListItem fLegal85x14incheListItem;

        /// <summary>
        /// Backing field for A4210x297mmListItem property
        /// </summary>
        private ListItem fA4210x297mmListItem;

        /// <summary>
        /// Backing field for A8x10in20x25cmListItem property
        /// </summary>
        private ListItem fA8x10in20x25cmListItem;

        /// <summary>
        /// Backing field for Custom850x1100iListItem property
        /// </summary>
        private ListItem fCustom850x1100iListItem;

        /// <summary>
        /// Backing field for DropDownButtonDDup1Button property
        /// </summary>
        private Button fDropDownButtonDDup1Button;

        /// <summary>
        /// Backing field for PageSizeStaticText property
        /// </summary>
        private Text fPageSizeStaticText;

        /// <summary>
        /// Backing field for PageSizeComboBoComboBox property
        /// </summary>
        private ComboBox fPageSizeComboBoComboBox;

        /// <summary>
        /// Backing field for PageSizeComboLBList property
        /// </summary>
        private List fPageSizeComboLBList;

        /// <summary>
        /// Backing field for AutomaticDocumeListItem property
        /// </summary>
        private ListItem fAutomaticDocumeListItem;

        /// <summary>
        /// Backing field for DocumentFeederiListItem property
        /// </summary>
        private ListItem fDocumentFeederiListItem;

        /// <summary>
        /// Backing field for FlatbedListItem property
        /// </summary>
        private ListItem fFlatbedListItem;

        /// <summary>
        /// Backing field for DropDownButtonDDup2Button property
        /// </summary>
        private Button fDropDownButtonDDup2Button;

        /// <summary>
        /// Backing field for SourceStaticText property
        /// </summary>
        private Text fSourceStaticText;

        /// <summary>
        /// Backing field for SourceComboBox1ComboBox property
        /// </summary>
        private ComboBox fSourceComboBox1ComboBox;

        /// <summary>
        /// Backing field for SourceComboLBoxList property
        /// </summary>
        private List fSourceComboLBoxList;

        /// <summary>
        /// Backing field for A1sidedListItem property
        /// </summary>
        private ListItem fA1sidedListItem;

        /// <summary>
        /// Backing field for A2sidedbookListItem property
        /// </summary>
        private ListItem fA2sidedbookListItem;

        /// <summary>
        /// Backing field for A2sidedtabletListItem property
        /// </summary>
        private ListItem fA2sidedtabletListItem;

        /// <summary>
        /// Backing field for DropDownButtonDDup3Button property
        /// </summary>
        private Button fDropDownButtonDDup3Button;

        /// <summary>
        /// Backing field for PageSidesStaticText property
        /// </summary>
        private Text fPageSidesStaticText;

        /// <summary>
        /// Backing field for AutoOrientButtoButton property
        /// </summary>
        private Button fAutoOrientButtoButton;

        /// <summary>
        /// Backing field for PageSidesComboBComboBox property
        /// </summary>
        private ComboBox fPageSidesComboBComboBox;

        /// <summary>
        /// Backing field for A32770Dup2I2XPane property
        /// </summary>
        private Pane fA32770Dup2I2XPane;

        /// <summary>
        /// Backing field for ComboLBoxListBoDup1List property
        /// </summary>
        private List fComboLBoxListBoDup1List;

        /// <summary>
        /// Backing field for ColorListItem property
        /// </summary>
        private ListItem fColorListItem;

        /// <summary>
        /// Backing field for AutoDetectColorListItem property
        /// </summary>
        private ListItem fAutoDetectColorListItem;

        /// <summary>
        /// Backing field for GrayListItem property
        /// </summary>
        private ListItem fGrayListItem;

        /// <summary>
        /// Backing field for HalftoneListItem property
        /// </summary>
        private ListItem fHalftoneListItem;

        /// <summary>
        /// Backing field for BlackWhiteListItem property
        /// </summary>
        private ListItem fBlackWhiteListItem;

        /// <summary>
        /// Backing field for DropDownButtonDDup4Button property
        /// </summary>
        private Button fDropDownButtonDDup4Button;

        /// <summary>
        /// Backing field for ColorModeStaticText property
        /// </summary>
        private Text fColorModeStaticText;

        /// <summary>
        /// Backing field for ColorModeComboBComboBox property
        /// </summary>
        private ComboBox fColorModeComboBComboBox;

        /// <summary>
        /// Backing field for SendToComboBox1ComboBox property
        /// </summary>
        private ComboBox fSendToComboBox1ComboBox;

        /// <summary>
        /// Backing field for ColorModeComboLList property
        /// </summary>
        private List fColorModeComboLList;

        /// <summary>
        /// Backing field for PDFListItem property
        /// </summary>
        private ListItem fPDFListItem;

        /// <summary>
        /// Backing field for JPEGListItem property
        /// </summary>
        private ListItem fJPEGListItem;

        /// <summary>
        /// Backing field for PNGListItem property
        /// </summary>
        private ListItem fPNGListItem;

        /// <summary>
        /// Backing field for BMPListItem property
        /// </summary>
        private ListItem fBMPListItem;

        /// <summary>
        /// Backing field for TIFListItem property
        /// </summary>
        private ListItem fTIFListItem;

        /// <summary>
        /// Backing field for DropDownButtonDDup5Button property
        /// </summary>
        private Button fDropDownButtonDDup5Button;

        /// <summary>
        /// Backing field for FileTypeStaticText property
        /// </summary>
        private Text fFileTypeStaticText;

        /// <summary>
        /// Backing field for FileTypeComboBoComboBox property
        /// </summary>
        private ComboBox fFileTypeComboBoComboBox;

        /// <summary>
        /// Backing field for FileTypeComboLBList property
        /// </summary>
        private List fFileTypeComboLBList;

        /// <summary>
        /// Backing field for LocalorNetworkfListItem property
        /// </summary>
        private ListItem fLocalorNetworkfListItem;

        /// <summary>
        /// Backing field for DropDownButtonDDup6Button property
        /// </summary>
        private Button fDropDownButtonDDup6Button;

        /// <summary>
        /// Backing field for SendToComboLBoxList property
        /// </summary>
        private List fSendToComboLBoxList;

        /// <summary>
        /// Backing field for SendToStaticText property
        /// </summary>
        private Text fSendToStaticText;

        /// <summary>
        /// Backing field for ShowViewerAfterButton property
        /// </summary>
        private Button fShowViewerAfterButton;

        /// <summary>
        /// Backing field for ScanStaticText property
        /// </summary>
        private Text fScanStaticText;

        /// <summary>
        /// Backing field for ImageStaticText property
        /// </summary>
        private Text fImageStaticText;

        /// <summary>
        /// Backing field for DestinationStatText property
        /// </summary>
        private Text fDestinationStatText;

        /// <summary>
        /// Backing field for Button2132Button property
        /// </summary>
        private Button fButton2132Button;

        /// <summary>
        /// Backing field for Button1165Button property
        /// </summary>
        private Button fButton1165Button;

        /// <summary>
        /// Backing field for Button288Button property
        /// </summary>
        private Button fButton288Button;

        /// <summary>
        /// Backing field for PhotoComboBox10Dup0ComboBox property
        /// </summary>
        private ComboBox fPhotoComboBox10Dup0ComboBox;

        /// <summary>
        /// Backing field for DocumentComboBoDup0ComboBox property
        /// </summary>
        private ComboBox fDocumentComboBoDup0ComboBox;

        /// <summary>
        /// Backing field for PhotoDup0ListItem property
        /// </summary>
        private ListItem fPhotoDup0ListItem;

        /// <summary>
        /// Backing field for DocumentDup0ListItem property
        /// </summary>
        private ListItem fDocumentDup0ListItem;

        /// <summary>
        /// Backing field for ForwardbylargeaButton property
        /// </summary>
        private Button fForwardbylargeaButton;

        /// <summary>
        /// Backing field for VerticalScrollBScrollBar property
        /// </summary>
        private ScrollBar fVerticalScrollBScrollBar;

        /// <summary>
        /// Backing field for EmailAsJPEGshoListItem property
        /// </summary>
        private ListItem fEmailAsJPEGshoListItem;

        /// <summary>
        /// Backing field for EmailAsPDFshorListItem property
        /// </summary>
        private ListItem fEmailAsPDFshorListItem;

        /// <summary>
        /// Backing field for SaveAsJPEGshorListItem property
        /// </summary>
        private ListItem fSaveAsJPEGshorListItem;

        /// <summary>
        /// Backing field for SaveAsPDFshortListItem property
        /// </summary>
        private ListItem fSaveAsPDFshortListItem;

        /// <summary>
        /// Backing field for BackbylargeamouButton property
        /// </summary>
        private Button fBackbylargeamouButton;

        /// <summary>
        /// Backing field for BackbysmallamouButton property
        /// </summary>
        private Button fBackbysmallamouButton;

        /// <summary>
        /// Backing field for ForwardbysmallaButton property
        /// </summary>
        private Button fForwardbysmallaButton;

        /// <summary>
        /// Backing field for SaveButton1006Button property
        /// </summary>
        private Button fSaveButton1006Button;

        /// <summary>
        /// Backing field for YesButton1Button property
        /// </summary>
        private Button fYesButton1Button;

        /// <summary>
        /// Backing field for CancelButton2Button property
        /// </summary>
        private Button fCancelButton2Button;

        /// <summary>
        /// Backing field for HPScanHPLaserJePane property
        /// </summary>
        private Pane fHPScanHPLaserJePane;

        /// <summary>
        /// Backing field for OKButton1Button property
        /// </summary>
        private Button fOKButton1Button;

        /// <summary>
        /// Backing field for PreparingtoscanText property
        /// </summary>
        private Text fPreparingtoscanText;

        /// <summary>
        /// Backing field for DetectPhotosListItem property
        /// </summary>
        private ListItem fDetectPhotosListItem;

        /// <summary>
        /// Backing field for DocumentComboBoComboBox property
        /// </summary>
        private ComboBox fPhotoComboBox10ComboBox;

        /// <summary>
        /// Backing field for fA32770_Dup1_I1XPane property
        /// </summary>
        private Pane fA32770_Dup1_I1XPane;

        /// <summary>
        /// Backing field for SendButton1006Button property
        /// </summary>
        private Button fSendButton1006Button;

        /// <summary>
        /// Backing field for EmailListItem property
        /// </summary>
        private ListItem fEmailListItem;

        /// <summary>
        /// Backing field for Button1164Button property
        /// </summary>
        private Button fButton1164Button;

        /// <summary>
        /// Backing field for PageSidesComboLList property
        /// </summary>
        private List fPageSidesComboLList;

        /// <summary>
        /// Model Name property
        /// </summary>
        private string _modelName;

        /// <summary>
        /// Initializes a new instance of the <see cref="HPScanTwain"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public HPScanTwain(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="HPScanTwain"/> class using the default UIAFramework.
        /// </summary>
        public HPScanTwain()
        {
            Desktop = new Desktop();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="HPScanTwain"/> class using the default UIAFramework.
        /// </summary>
        /// <param name="modelName">
        /// The framework.
        /// </param>
        public HPScanTwain(string modelName)
        {
            _modelName = modelName;
            Desktop = new Desktop(UIAFramework.ManagedUIA);
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        /// <summary>
        /// Gets Reference to HPScanHPColorLaWindow
        /// </summary>
        public Window HPScanHPColorLaWindow
        {
            get
            {
                if (null == fHPScanHPColorLaWindow)
                {
                    fHPScanHPColorLaWindow = new Window("HPScanHPColorLaWindow", Desktop);
                    fHPScanHPColorLaWindow.UIMap.Scope = UIASeachScope.Children;
                    fHPScanHPColorLaWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fHPScanHPColorLaWindow;
            }
        }

        /// <summary>
        /// Gets Reference to HPScanHPLaserJeWindow
        /// </summary>
        public Window HPScanHPLaserJeWindow
        {
            get
            {
                if (null == fHPScanHPLaserJeWindow)
                {
                    fHPScanHPLaserJeWindow = new Window("HPScanHPLaserJeWindow", Desktop);
                    fHPScanHPLaserJeWindow.UIMap.Scope = UIASeachScope.Children;
                    fHPScanHPLaserJeWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fHPScanHPLaserJeWindow;
            }
        }


        /// <summary>
        /// Gets Reference to HPScanStatic106Text
        /// </summary>
        public Text HPScanStatic106Text
        {
            get
            {
                if (null == fHPScanStatic106Text)
                {
                    fHPScanStatic106Text = new Text("HPScanStatic106Text", HPScanHPColorLaWindow);
                    fHPScanStatic106Text.UIMap.Scope = UIASeachScope.Children;
                    fHPScanStatic106Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Scan");
                    fHPScanStatic106Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fHPScanStatic106Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fHPScanStatic106Text;
            }
        }

        /// <summary>
        /// Gets Reference to HPColorLaserJetDup0I0XText
        /// </summary>
        public Text HPColorLaserJetDup0I0XText
        {
            get
            {
                if (null == fHPColorLaserJetDup0I0XText)
                {
                    fHPColorLaserJetDup0I0XText = new Text("HPColorLaserJetDup0I0XText", HPScanHPColorLaWindow);
                    fHPColorLaserJetDup0I0XText.UIMap.Scope = UIASeachScope.Children;
                    fHPColorLaserJetDup0I0XText.UIMap.Index = 0;
                    fHPColorLaserJetDup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Color LaserJet MFP M577");
                    fHPColorLaserJetDup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fHPColorLaserJetDup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fHPColorLaserJetDup0I0XText;
            }
        }

        /// <summary>
        /// Gets Reference to HPColorLaserJetDup1I1XText
        /// </summary>
        public Text HPColorLaserJetDup1I1XText
        {
            get
            {
                if (null == fHPColorLaserJetDup1I1XText)
                {
                    fHPColorLaserJetDup1I1XText = new Text("HPColorLaserJetDup1I1XText", HPScanHPColorLaWindow);
                    fHPColorLaserJetDup1I1XText.UIMap.Scope = UIASeachScope.Children;
                    fHPColorLaserJetDup1I1XText.UIMap.Index = 1;
                    fHPColorLaserJetDup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Color LaserJet MFP M577");
                    fHPColorLaserJetDup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fHPColorLaserJetDup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fHPColorLaserJetDup1I1XText;
            }
        }

        /// <summary>
        /// Gets Reference to ScanShortcutSetText
        /// </summary>
        public Text ScanShortcutSetText
        {
            get
            {
                if (null == fScanShortcutSetText)
                {
                    fScanShortcutSetText = new Text("ScanShortcutSetText", HPScanHPColorLaWindow);
                    fScanShortcutSetText.UIMap.Scope = UIASeachScope.Children;
                    fScanShortcutSetText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan Shortcut Settings:");
                    fScanShortcutSetText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fScanShortcutSetText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fScanShortcutSetText;
            }
        }

        /// <summary>
        /// Gets Reference to SaveasPDFStaticText
        /// </summary>
        public Text SaveasPDFStaticText
        {
            get
            {
                if (null == fSaveasPDFStaticText)
                {
                    fSaveasPDFStaticText = new Text("SaveasPDFStaticText", HPScanHPColorLaWindow);
                    fSaveasPDFStaticText.UIMap.Scope = UIASeachScope.Children;
                    fSaveasPDFStaticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save as PDF");
                    fSaveasPDFStaticText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fSaveasPDFStaticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fSaveasPDFStaticText;
            }
        }

        /// <summary>
        /// Gets Reference to ScanButton1012Button
        /// </summary>
        public Button ScanButton1012Button
        {
            get
            {
                if (null == fScanButton1012Button)
                {
                    fScanButton1012Button = new Button("ScanButton1012Button", HPScanHPColorLaWindow);
                    fScanButton1012Button.UIMap.Scope = UIASeachScope.Children;
                    fScanButton1012Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan");
                    fScanButton1012Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1012");
                    fScanButton1012Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fScanButton1012Button;
            }
        }

        /// <summary>
        /// Gets Reference to ExitButton1007Button
        /// </summary>
        public Button ExitButton1007Button
        {
            get
            {
                if (null == fExitButton1007Button)
                {
                    fExitButton1007Button = new Button("ExitButton1007Button", HPScanHPColorLaWindow);
                    fExitButton1007Button.UIMap.Scope = UIASeachScope.Children;
                    fExitButton1007Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Exit");
                    fExitButton1007Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1007");
                    fExitButton1007Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fExitButton1007Button;
            }
        }

        /// <summary>
        /// Gets Reference to Button1000Button
        /// </summary>
        public Button Button1000Button
        {
            get
            {
                if (null == fButton1000Button)
                {
                    fButton1000Button = new Button("Button1000Button", HPScanHPColorLaWindow);
                    fButton1000Button.UIMap.Scope = UIASeachScope.Children;
                    fButton1000Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1000");
                    fButton1000Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButton1000Button;
            }
        }

        /// <summary>
        /// Gets Reference to A32770Dup0I0XPane
        /// </summary>
        public Pane A32770Dup0I0XPane
        {
            get
            {
                if (null == fA32770Dup0I0XPane)
                {
                    fA32770Dup0I0XPane = new Pane("A32770Dup0I0XPane", HPScanHPColorLaWindow);
                    fA32770Dup0I0XPane.UIMap.Scope = UIASeachScope.Children;
                    fA32770Dup0I0XPane.UIMap.Index = 0;
                    fA32770Dup0I0XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fA32770Dup0I0XPane;
            }
        }

        /// <summary>
        /// Gets Reference to ListBox1853List
        /// </summary>
        public List ListBox1853List
        {
            get
            {
                if (null == fListBox1853List)
                {
                    fListBox1853List = new List("ListBox1853List", A32770Dup0I0XPane);
                    fListBox1853List.UIMap.Scope = UIASeachScope.Children;
                    fListBox1853List.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1853");
                    fListBox1853List.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBox");
                }

                return fListBox1853List;
            }
        }

        /// <summary>
        /// Gets Reference to DemoListItem
        /// </summary>
        public ListItem DemoListItem
        {
            get
            {
                if (null == fDemoListItem)
                {
                    fDemoListItem = new ListItem("DemoListItem", ListBox1853List);
                    fDemoListItem.UIMap.Scope = UIASeachScope.Children;
                    fDemoListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Demo");
                }

                return fDemoListItem;
            }
        }

        /// <summary>
        /// Gets Reference to SaveasPDFListItem
        /// </summary>
        public ListItem SaveasPDFListItem
        {
            get
            {
                if (null == fSaveasPDFListItem)
                {
                    fSaveasPDFListItem = new ListItem("SaveasPDFListItem", ListBox1853List);
                    fSaveasPDFListItem.UIMap.Scope = UIASeachScope.Children;
                    fSaveasPDFListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save as PDF");
                }

                return fSaveasPDFListItem;
            }
        }

        /// <summary>
        /// Gets Reference to SaveasJPEGListItem
        /// </summary>
        public ListItem SaveasJPEGListItem
        {
            get
            {
                if (null == fSaveasJPEGListItem)
                {
                    fSaveasJPEGListItem = new ListItem("SaveasJPEGListItem", ListBox1853List);
                    fSaveasJPEGListItem.UIMap.Scope = UIASeachScope.Children;
                    fSaveasJPEGListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save as JPEG");
                }

                return fSaveasJPEGListItem;
            }
        }

        /// <summary>
        /// Gets Reference to EmailasPDFListItem
        /// </summary>
        public ListItem EmailasPDFListItem
        {
            get
            {
                if (null == fEmailasPDFListItem)
                {
                    fEmailasPDFListItem = new ListItem("EmailasPDFListItem", ListBox1853List);
                    fEmailasPDFListItem.UIMap.Scope = UIASeachScope.Children;
                    fEmailasPDFListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Email as PDF");
                }

                return fEmailasPDFListItem;
            }
        }

        /// <summary>
        /// Gets Reference to EmailasJPEGListItem
        /// </summary>
        public ListItem EmailasJPEGListItem
        {
            get
            {
                if (null == fEmailasJPEGListItem)
                {
                    fEmailasJPEGListItem = new ListItem("EmailasJPEGListItem", ListBox1853List);
                    fEmailasJPEGListItem.UIMap.Scope = UIASeachScope.Children;
                    fEmailasJPEGListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Email as JPEG");
                }

                return fEmailasJPEGListItem;
            }
        }

        /// <summary>
        /// Gets Reference to EverydayScanListItem
        /// </summary>
        public ListItem EverydayScanListItem
        {
            get
            {
                if (null == fEverydayScanListItem)
                {
                    fEverydayScanListItem = new ListItem("EverydayScanListItem", ListBox1853List);
                    fEverydayScanListItem.UIMap.Scope = UIASeachScope.Children;
                    fEverydayScanListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Everyday Scan");
                }

                return fEverydayScanListItem;
            }
        }

        /// <summary>
        /// Gets Reference to CreateNewScanShButton
        /// </summary>
        public Button CreateNewScanShButton
        {
            get
            {
                if (null == fCreateNewScanShButton)
                {
                    fCreateNewScanShButton = new Button("CreateNewScanShButton", A32770Dup0I0XPane);
                    fCreateNewScanShButton.UIMap.Scope = UIASeachScope.Children;
                    fCreateNewScanShButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Create New Scan Shortcut");
                    fCreateNewScanShButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1003");
                    fCreateNewScanShButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fCreateNewScanShButton;
            }
        }

        /// <summary>
        /// Gets Reference to Button1903Button
        /// </summary>
        public Button Button1903Button
        {
            get
            {
                if (null == fButton1903Button)
                {
                    fButton1903Button = new Button("Button1903Button", A32770Dup0I0XPane);
                    fButton1903Button.UIMap.Scope = UIASeachScope.Children;
                    fButton1903Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1903");
                    fButton1903Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButton1903Button;
            }
        }

        /// <summary>
        /// Gets Reference to JobReservationSText
        /// </summary>
        public Text JobReservationSText
        {
            get
            {
                if (null == fJobReservationSText)
                {
                    fJobReservationSText = new Text("JobReservationSText", A32770Dup0I0XPane);
                    fJobReservationSText.UIMap.Scope = UIASeachScope.Children;
                    fJobReservationSText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Job Reservation");
                    fJobReservationSText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fJobReservationSText;
            }
        }

        /// <summary>
        /// Gets Reference to ScanShortcutsStText
        /// </summary>
        public Text ScanShortcutsStText
        {
            get
            {
                if (null == fScanShortcutsStText)
                {
                    fScanShortcutsStText = new Text("ScanShortcutsStText", A32770Dup0I0XPane);
                    fScanShortcutsStText.UIMap.Scope = UIASeachScope.Children;
                    fScanShortcutsStText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan Shortcuts");
                    fScanShortcutsStText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fScanShortcutsStText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fScanShortcutsStText;
            }
        }

        /// <summary>
        /// Gets Reference to SelectataskandpDup0I0XText
        /// </summary>
        public Text SelectataskandpDup0I0XText
        {
            get
            {
                if (null == fSelectataskandpDup0I0XText)
                {
                    fSelectataskandpDup0I0XText = new Text("SelectataskandpDup0I0XText", A32770Dup0I0XPane);
                    fSelectataskandpDup0I0XText.UIMap.Scope = UIASeachScope.Children;
                    fSelectataskandpDup0I0XText.UIMap.Index = 0;
                    fSelectataskandpDup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Select a task and press the Scan button.");
                    fSelectataskandpDup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fSelectataskandpDup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fSelectataskandpDup0I0XText;
            }
        }

        /// <summary>
        /// Gets Reference to SelectataskandpDup1I1XText
        /// </summary>
        public Text SelectataskandpDup1I1XText
        {
            get
            {
                if (null == fSelectataskandpDup1I1XText)
                {
                    fSelectataskandpDup1I1XText = new Text("SelectataskandpDup1I1XText", A32770Dup0I0XPane);
                    fSelectataskandpDup1I1XText.UIMap.Scope = UIASeachScope.Children;
                    fSelectataskandpDup1I1XText.UIMap.Index = 1;
                    fSelectataskandpDup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Select a task and press the Scan button.");
                    fSelectataskandpDup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fSelectataskandpDup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fSelectataskandpDup1I1XText;
            }
        }

        /// <summary>
        /// Gets Reference to A32770Dup1I1XPane
        /// </summary>
        public Pane A32770Dup1I1XPane
        {
            get
            {
                if (null == fA32770Dup1I1XPane)
                {
                    fA32770Dup1I1XPane = new Pane("A32770Dup1I1XPane", HPScanHPColorLaWindow);
                    fA32770Dup1I1XPane.UIMap.Scope = UIASeachScope.Children;
                    fA32770Dup1I1XPane.UIMap.Index = 1;
                    fA32770Dup1I1XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fA32770Dup1I1XPane;
            }
        }

        /// <summary>
        /// Gets Reference to A32770Dup1I1XPane
        /// </summary>
        public Pane A32770_Dup1_I1XPane
        {
            get
            {
                if (null == fA32770_Dup1_I1XPane)
                {
                    fA32770_Dup1_I1XPane = new Pane("A32770_Dup1_I1XPane", HPScanHPColorLaWindow);
                    fA32770_Dup1_I1XPane.UIMap.Scope = UIASeachScope.Children;
                    fA32770_Dup1_I1XPane.UIMap.Index = 1;
                    fA32770_Dup1_I1XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fA32770_Dup1_I1XPane;
            }
        }

        /// <summary>
        /// Gets Reference to DocumentComboBoComboBox
        /// </summary>
        public ComboBox PhotoComboBox10ComboBox
        {
            get
            {
                if (null == fPhotoComboBox10ComboBox)
                {
                    fPhotoComboBox10ComboBox = new ComboBox("PhotoComboBox10ComboBox", A32770Dup1I1XPane);
                    fPhotoComboBox10ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fPhotoComboBox10ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Photo");
                    fPhotoComboBox10ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1009");
                    fPhotoComboBox10ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                }

                return fPhotoComboBox10ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to DocumentComboBoComboBox
        /// </summary>
        public ComboBox DocumentComboBoComboBox
        {
            get
            {
                if (null == fDocumentComboBoComboBox)
                {
                    fDocumentComboBoComboBox = new ComboBox("DocumentComboBoComboBox", A32770Dup1I1XPane);
                    fDocumentComboBoComboBox.UIMap.Scope = UIASeachScope.Children;
                    fDocumentComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Document");
                    fDocumentComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1009");
                    fDocumentComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                }

                return fDocumentComboBoComboBox;
            }
        }


        /// <summary>
        /// Gets Reference to ComboLBoxListBoDup0List
        /// </summary>
        public List ComboLBoxListBoDup0List
        {
            get
            {
                if (null == fComboLBoxListBoDup0List)
                {
                    fComboLBoxListBoDup0List = new List("ComboLBoxListBoDup0List", DocumentComboBoComboBox);
                    fComboLBoxListBoDup0List.UIMap.Scope = UIASeachScope.Children;
                    fComboLBoxListBoDup0List.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                    fComboLBoxListBoDup0List.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                }

                return fComboLBoxListBoDup0List;
            }
        }


        /// <summary>
        /// Gets Reference to ComboLBoxListBoDup0List
        /// </summary>
        public List ComboLBoxListBo_Dup0List
        {
            get
            {
                if (null == fComboLBoxListBo_Dup0List)
                {
                    fComboLBoxListBo_Dup0List = new List("ComboLBoxListBo_Dup0List", DocumentComboBoComboBox);
                    fComboLBoxListBo_Dup0List.UIMap.Scope = UIASeachScope.Children;
                    fComboLBoxListBo_Dup0List.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                    fComboLBoxListBo_Dup0List.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                }

                return fComboLBoxListBo_Dup0List;
            }
        }

        /// <summary>
        /// Gets Reference to DropDownButtonDDup0Button
        /// </summary>
        public Button DropDownButtonDDup0Button
        {
            get
            {
                if (null == fDropDownButtonDDup0Button)
                {
                    fDropDownButtonDDup0Button = new Button("DropDownButtonDDup0Button", DocumentComboBoComboBox);
                    fDropDownButtonDDup0Button.UIMap.Scope = UIASeachScope.Children;
                    fDropDownButtonDDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                    fDropDownButtonDDup0Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                }

                return fDropDownButtonDDup0Button;
            }
        }

        /// <summary>
        /// Gets Reference to ItemTypeStaticText
        /// </summary>
        public Text ItemTypeStaticText
        {
            get
            {
                if (null == fItemTypeStaticText)
                {
                    fItemTypeStaticText = new Text("ItemTypeStaticText", A32770Dup1I1XPane);
                    fItemTypeStaticText.UIMap.Scope = UIASeachScope.Children;
                    fItemTypeStaticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Item Type");
                    fItemTypeStaticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fItemTypeStaticText;
            }
        }      

        /// <summary>
        /// Gets Reference to ItemTypeComboLBList
        /// </summary>
        public List ItemTypeComboLBList
        {
            get
            {
                if (null == fItemTypeComboLBList)
                {
                    fItemTypeComboLBList = new List("ItemTypeComboLBList", ItemTypeComboBoComboBox);
                    fItemTypeComboLBList.UIMap.Scope = UIASeachScope.Children;
                    fItemTypeComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Item Type");
                    fItemTypeComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                    fItemTypeComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                }

                return fItemTypeComboLBList;
            }
        }

        /// <summary>
        /// Gets Reference to DocumentListItem
        /// </summary>
        public ListItem DocumentListItem
        {
            get
            {
                if (null == fDocumentListItem)
                {
                    fDocumentListItem = new ListItem("DocumentListItem", ItemTypeComboLBList);
                    fDocumentListItem.UIMap.Scope = UIASeachScope.Children;
                    fDocumentListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Document");
                }

                return fDocumentListItem;
            }
        }

        /// <summary>
        /// Gets Reference to PhotoListItem
        /// </summary>
        public ListItem PhotoListItem
        {
            get
            {
                if (null == fPhotoListItem)
                {
                    fPhotoListItem = new ListItem("PhotoListItem", ItemTypeComboLBList);
                    fPhotoListItem.UIMap.Scope = UIASeachScope.Children;
                    fPhotoListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Photo");
                }

                return fPhotoListItem;
            }
        }

        /// <summary>
        /// Gets Reference to DetectContentonListItem
        /// </summary>
        public ListItem DetectContentonListItem
        {
            get
            {
                if (null == fDetectContentonListItem)
                {
                    fDetectContentonListItem = new ListItem("DetectContentonListItem", PageSizeComboLBList);
                    fDetectContentonListItem.UIMap.Scope = UIASeachScope.Children;
                    fDetectContentonListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Detect Content on Page");
                }

                return fDetectContentonListItem;
            }
        }

        /// <summary>
        /// Gets Reference to EntireScanAreaListItem
        /// </summary>
        public ListItem EntireScanAreaListItem
        {
            get
            {
                if (null == fEntireScanAreaListItem)
                {
                    fEntireScanAreaListItem = new ListItem("EntireScanAreaListItem", PageSizeComboLBList);
                    fEntireScanAreaListItem.UIMap.Scope = UIASeachScope.Children;
                    fEntireScanAreaListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Entire Scan Area");
                }

                return fEntireScanAreaListItem;
            }
        }

        /// <summary>
        /// Gets Reference to Letter85x11inchListItem
        /// </summary>
        public ListItem Letter85x11inchListItem
        {
            get
            {
                if (null == fLetter85x11inchListItem)
                {
                    fLetter85x11inchListItem = new ListItem("Letter85x11inchListItem", PageSizeComboLBList);
                    fLetter85x11inchListItem.UIMap.Scope = UIASeachScope.Children;
                    fLetter85x11inchListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Letter (8.5 x 11 inches)");
                }

                return fLetter85x11inchListItem;
            }
        }

        /// <summary>
        /// Gets Reference to Legal85x14incheListItem
        /// </summary>
        public ListItem Legal85x14incheListItem
        {
            get
            {
                if (null == fLegal85x14incheListItem)
                {
                    fLegal85x14incheListItem = new ListItem("Legal85x14incheListItem", PageSizeComboLBList);
                    fLegal85x14incheListItem.UIMap.Scope = UIASeachScope.Children;
                    fLegal85x14incheListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Legal (8.5 x 14 inches)");
                }

                return fLegal85x14incheListItem;
            }
        }

        /// <summary>
        /// Gets Reference to A4210x297mmListItem
        /// </summary>
        public ListItem A4210x297mmListItem
        {
            get
            {
                if (null == fA4210x297mmListItem)
                {
                    fA4210x297mmListItem = new ListItem("A4210x297mmListItem", PageSizeComboLBList);
                    fA4210x297mmListItem.UIMap.Scope = UIASeachScope.Children;
                    fA4210x297mmListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"A4 (210 x 297 mm)");
                }

                return fA4210x297mmListItem;
            }
        }

        /// <summary>
        /// Gets Reference to A8x10in20x25cmListItem
        /// </summary>
        public ListItem A8x10in20x25cmListItem
        {
            get
            {
                if (null == fA8x10in20x25cmListItem)
                {
                    fA8x10in20x25cmListItem = new ListItem("A8x10in20x25cmListItem", PageSizeComboLBList);
                    fA8x10in20x25cmListItem.UIMap.Scope = UIASeachScope.Children;
                    fA8x10in20x25cmListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"8 x 10 in (20 x 25 cm)");
                }

                return fA8x10in20x25cmListItem;
            }
        }

        /// <summary>
        /// Gets Reference to Custom850x1100iListItem
        /// </summary>
        public ListItem Custom850x1100iListItem
        {
            get
            {
                if (null == fCustom850x1100iListItem)
                {
                    fCustom850x1100iListItem = new ListItem("Custom850x1100iListItem", PageSizeComboLBList);
                    fCustom850x1100iListItem.UIMap.Scope = UIASeachScope.Children;
                    fCustom850x1100iListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Custom (8.50 x 11.00 inches)");
                }

                return fCustom850x1100iListItem;
            }
        }

        /// <summary>
        /// Gets Reference to DropDownButtonDDup1Button
        /// </summary>
        public Button DropDownButtonDDup1Button
        {
            get
            {
                if (null == fDropDownButtonDDup1Button)
                {
                    fDropDownButtonDDup1Button = new Button("DropDownButtonDDup1Button", PageSizeComboBoComboBox);
                    fDropDownButtonDDup1Button.UIMap.Scope = UIASeachScope.Children;
                    fDropDownButtonDDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                    fDropDownButtonDDup1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                }

                return fDropDownButtonDDup1Button;
            }
        }

        /// <summary>
        /// Gets Reference to PageSizeStaticText
        /// </summary>
        public Text PageSizeStaticText
        {
            get
            {
                if (null == fPageSizeStaticText)
                {
                    fPageSizeStaticText = new Text("PageSizeStaticText", A32770Dup1I1XPane);
                    fPageSizeStaticText.UIMap.Scope = UIASeachScope.Children;
                    fPageSizeStaticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Page Size");
                    fPageSizeStaticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fPageSizeStaticText;
            }
        }

        /// <summary>
        /// Gets Reference to PageSizeComboBoComboBox
        /// </summary>
        public ComboBox PageSizeComboBoComboBox
        {
            get
            {
                if (null == fPageSizeComboBoComboBox)
                {
                    fPageSizeComboBoComboBox = new ComboBox("PageSizeComboBoComboBox", A32770Dup1I1XPane);
                    fPageSizeComboBoComboBox.UIMap.Scope = UIASeachScope.Children;
                    fPageSizeComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fPageSizeComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Page Size");
                    fPageSizeComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1021");
                }

                return fPageSizeComboBoComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to PageSizeComboLBList
        /// </summary>
        public List PageSizeComboLBList
        {
            get
            {
                if (null == fPageSizeComboLBList)
                {
                    fPageSizeComboLBList = new List("PageSizeComboLBList", PageSizeComboBoComboBox);
                    fPageSizeComboLBList.UIMap.Scope = UIASeachScope.Children;
                    fPageSizeComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Page Size");
                    fPageSizeComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                    fPageSizeComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                }

                return fPageSizeComboLBList;
            }
        }

        /// <summary>
        /// Gets Reference to AutomaticDocumeListItem
        /// </summary>
        public ListItem AutomaticDocumeListItem
        {
            get
            {
                if (null == fAutomaticDocumeListItem)
                {
                    fAutomaticDocumeListItem = new ListItem("AutomaticDocumeListItem", SourceComboLBoxList);
                    fAutomaticDocumeListItem.UIMap.Scope = UIASeachScope.Children;
                    fAutomaticDocumeListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Automatic Document Feeder");
                }

                return fAutomaticDocumeListItem;
            }
        }

        /// <summary>
        /// Gets Reference to FlatbedListItem
        /// </summary>
        public ListItem FlatbedListItem
        {
            get
            {
                if (null == fFlatbedListItem)
                {
                    fFlatbedListItem = new ListItem("FlatbedListItem", SourceComboLBoxList);
                    fFlatbedListItem.UIMap.Scope = UIASeachScope.Children;
                    fFlatbedListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Flatbed");
                }

                return fFlatbedListItem;
            }
        }


        /// <summary>
        /// Gets Reference to DocumentFeederiListItem
        /// </summary>
        public ListItem DocumentFeederiListItem
        {
            get
            {
                if (null == fDocumentFeederiListItem)
                {
                    fDocumentFeederiListItem = new ListItem("DocumentFeederiListItem", SourceComboLBoxList);
                    fDocumentFeederiListItem.UIMap.Scope = UIASeachScope.Children;
                    fDocumentFeederiListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Document Feeder if loaded");
                }

                return fDocumentFeederiListItem;
            }
        }

        /// <summary>
        /// Gets Reference to DropDownButtonDDup2Button
        /// </summary>
        public Button DropDownButtonDDup2Button
        {
            get
            {
                if (null == fDropDownButtonDDup2Button)
                {
                    fDropDownButtonDDup2Button = new Button("DropDownButtonDDup2Button", SourceComboBox1ComboBox);
                    fDropDownButtonDDup2Button.UIMap.Scope = UIASeachScope.Children;
                    fDropDownButtonDDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                    fDropDownButtonDDup2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                }

                return fDropDownButtonDDup2Button;
            }
        }

        /// <summary>
        /// Gets Reference to SourceStaticText
        /// </summary>
        public Text SourceStaticText
        {
            get
            {
                if (null == fSourceStaticText)
                {
                    fSourceStaticText = new Text("SourceStaticText", A32770Dup1I1XPane);
                    fSourceStaticText.UIMap.Scope = UIASeachScope.Children;
                    fSourceStaticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Source");
                    fSourceStaticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fSourceStaticText;
            }
        }

        /// <summary>
        /// Gets Reference to SourceComboBox1ComboBox
        /// </summary>
        public ComboBox SourceComboBox1ComboBox
        {
            get
            {
                if (null == fSourceComboBox1ComboBox)
                {
                    fSourceComboBox1ComboBox = new ComboBox("SourceComboBox1ComboBox", A32770Dup1I1XPane);
                    fSourceComboBox1ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fSourceComboBox1ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fSourceComboBox1ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Source");
                    fSourceComboBox1ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1078");
                }

                return fSourceComboBox1ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to PageSidesComboBComboBox
        /// </summary>
        public ComboBox PageSidesComboBComboBox
        {
            get
            {
                if (null == fPageSidesComboBComboBox)
                {
                    fPageSidesComboBComboBox = new ComboBox("PageSidesComboBComboBox", A32770Dup1I1XPane);
                    fPageSidesComboBComboBox.UIMap.Scope = UIASeachScope.Children;
                    fPageSidesComboBComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fPageSidesComboBComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Page Sides");
                    fPageSidesComboBComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1080");
                }

                return fPageSidesComboBComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to A32770Dup2I2XPane
        /// </summary>
        public Pane A32770Dup2I2XPane
        {
            get
            {
                if (null == fA32770Dup2I2XPane)
                {
                    fA32770Dup2I2XPane = new Pane("A32770Dup2I2XPane", HPScanHPLaserJeWindow);
                    fA32770Dup2I2XPane.UIMap.Scope = UIASeachScope.Children;
                    fA32770Dup2I2XPane.UIMap.Index = 2;
                    fA32770Dup2I2XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fA32770Dup2I2XPane;
            }
        }

        /// <summary>
        /// Gets Reference to SourceComboLBoxList
        /// </summary>
        public List SourceComboLBoxList
        {
            get
            {
                if (null == fSourceComboLBoxList)
                {
                    fSourceComboLBoxList = new List("SourceComboLBoxList", SourceComboBox1ComboBox);
                    fSourceComboLBoxList.UIMap.Scope = UIASeachScope.Children;
                    fSourceComboLBoxList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Source");
                    fSourceComboLBoxList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                    fSourceComboLBoxList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                }

                return fSourceComboLBoxList;
            }
        }

        /// <summary>
        /// Gets Reference to A1sidedListItem
        /// </summary>
        public ListItem A1sidedListItem
        {
            get
            {
                if (null == fA1sidedListItem)
                {
                    fA1sidedListItem = new ListItem("A1sidedListItem", PageSidesComboLList);
                    fA1sidedListItem.UIMap.Scope = UIASeachScope.Children;
                    fA1sidedListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"1 - sided");
                }

                return fA1sidedListItem;
            }
        }

        /// <summary>
        /// Gets Reference to A2sidedbookListItem
        /// </summary>
        public ListItem A2sidedbookListItem
        {
            get
            {
                if (null == fA2sidedbookListItem)
                {
                    fA2sidedbookListItem = new ListItem("A2sidedbookListItem", PageSidesComboLList);
                    fA2sidedbookListItem.UIMap.Scope = UIASeachScope.Children;
                    fA2sidedbookListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"2 - sided (book)");
                }

                return fA2sidedbookListItem;
            }
        }

        /// <summary>
        /// Gets Reference to A2sidedtabletListItem
        /// </summary>
        public ListItem A2sidedtabletListItem
        {
            get
            {
                if (null == fA2sidedtabletListItem)
                {
                    fA2sidedtabletListItem = new ListItem("A2sidedtabletListItem", PageSidesComboLList);
                    fA2sidedtabletListItem.UIMap.Scope = UIASeachScope.Children;
                    fA2sidedtabletListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"2 - sided (tablet)");
                }

                return fA2sidedtabletListItem;
            }
        }

        /// <summary>
        /// Gets Reference to DropDownButtonDDup3Button
        /// </summary>
        public Button DropDownButtonDDup3Button
        {
            get
            {
                if (null == fDropDownButtonDDup3Button)
                {
                    fDropDownButtonDDup3Button = new Button("DropDownButtonDDup3Button", PageSidesComboBComboBox);
                    fDropDownButtonDDup3Button.UIMap.Scope = UIASeachScope.Children;
                    fDropDownButtonDDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                    fDropDownButtonDDup3Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                }

                return fDropDownButtonDDup3Button;
            }
        }

        /// <summary>
        /// Gets Reference to PageSidesStaticText
        /// </summary>
        public Text PageSidesStaticText
        {
            get
            {
                if (null == fPageSidesStaticText)
                {
                    fPageSidesStaticText = new Text("PageSidesStaticText", A32770Dup1I1XPane);
                    fPageSidesStaticText.UIMap.Scope = UIASeachScope.Children;
                    fPageSidesStaticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Page Sides");
                    fPageSidesStaticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fPageSidesStaticText;
            }
        }

        /// <summary>
        /// Gets Reference to AutoOrientButtoButton
        /// </summary>
        public Button AutoOrientButtoButton
        {
            get
            {
                if (null == fAutoOrientButtoButton)
                {
                    fAutoOrientButtoButton = new Button("AutoOrientButtoButton", A32770Dup1I1XPane);
                    fAutoOrientButtoButton.UIMap.Scope = UIASeachScope.Children;
                    fAutoOrientButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Orient");
                    fAutoOrientButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2128");
                    fAutoOrientButtoButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fAutoOrientButtoButton;
            }
        }

        /// <summary>
        /// Gets Reference to ComboLBoxListBoDup1List
        /// </summary>
        public List ComboLBoxListBoDup1List
        {
            get
            {
                if (null == fComboLBoxListBoDup1List)
                {
                    fComboLBoxListBoDup1List = new List("ComboLBoxListBoDup1List", PageSidesComboBComboBox);
                    fComboLBoxListBoDup1List.UIMap.Scope = UIASeachScope.Children;
                    fComboLBoxListBoDup1List.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                    fComboLBoxListBoDup1List.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                }

                return fComboLBoxListBoDup1List;
            }
        }

        /// <summary>
        /// Gets Reference to PageSidesComboLList
        /// </summary>
        public List PageSidesComboLList
        {
            get
            {
                if (null == fPageSidesComboLList)
                {
                    fPageSidesComboLList = new List("PageSidesComboLList", PageSidesComboBComboBox);
                    fPageSidesComboLList.UIMap.Scope = UIASeachScope.Children;
                    fPageSidesComboLList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                    fPageSidesComboLList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Page Sides");
                    fPageSidesComboLList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                }

                return fPageSidesComboLList;
            }
        }

        /// <summary>
        /// Gets Reference to ColorListItem
        /// </summary>
        public ListItem ColorListItem
        {
            get
            {
                if (null == fColorListItem)
                {
                    fColorListItem = new ListItem("ColorListItem", ColorModeComboLList);
                    fColorListItem.UIMap.Scope = UIASeachScope.Children;
                    fColorListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Color");
                }

                return fColorListItem;
            }
        }

        /// <summary>
        /// Gets Reference to AutoDetectColorListItem
        /// </summary>
        public ListItem AutoDetectColorListItem
        {
            get
            {
                if (null == fAutoDetectColorListItem)
                {
                    fAutoDetectColorListItem = new ListItem("AutoDetectColorListItem", ColorModeComboLList);
                    fAutoDetectColorListItem.UIMap.Scope = UIASeachScope.Children;
                    fAutoDetectColorListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Auto Detect Color");
                }

                return fAutoDetectColorListItem;
            }
        }

        /// <summary>
        /// Gets Reference to GrayListItem
        /// </summary>
        public ListItem GrayListItem
        {
            get
            {
                if (null == fGrayListItem)
                {
                    fGrayListItem = new ListItem("GrayListItem", ColorModeComboLList);
                    fGrayListItem.UIMap.Scope = UIASeachScope.Children;
                    fGrayListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Gray");
                }

                return fGrayListItem;
            }
        }

        /// <summary>
        /// Gets Reference to HalftoneListItem
        /// </summary>
        public ListItem HalftoneListItem
        {
            get
            {
                if (null == fHalftoneListItem)
                {
                    fHalftoneListItem = new ListItem("HalftoneListItem", ColorModeComboLList);
                    fHalftoneListItem.UIMap.Scope = UIASeachScope.Children;
                    fHalftoneListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Halftone");
                }

                return fHalftoneListItem;
            }
        }

        /// <summary>
        /// Gets Reference to BlackWhiteListItem
        /// </summary>
        public ListItem BlackWhiteListItem
        {
            get
            {
                if (null == fBlackWhiteListItem)
                {
                    fBlackWhiteListItem = new ListItem("BlackWhiteListItem", ColorModeComboLList);
                    fBlackWhiteListItem.UIMap.Scope = UIASeachScope.Children;
                    fBlackWhiteListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Black/White");
                }

                return fBlackWhiteListItem;
            }
        }

        /// <summary>
        /// Gets Reference to DropDownButtonDDup4Button
        /// </summary>
        public Button DropDownButtonDDup4Button
        {
            get
            {
                if (null == fDropDownButtonDDup4Button)
                {
                    fDropDownButtonDDup4Button = new Button("DropDownButtonDDup4Button", ColorModeComboBComboBox);
                    fDropDownButtonDDup4Button.UIMap.Scope = UIASeachScope.Children;
                    fDropDownButtonDDup4Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                    fDropDownButtonDDup4Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                }

                return fDropDownButtonDDup4Button;
            }
        }

        /// <summary>
        /// Gets Reference to ColorModeStaticText
        /// </summary>
        public Text ColorModeStaticText
        {
            get
            {
                if (null == fColorModeStaticText)
                {
                    fColorModeStaticText = new Text("ColorModeStaticText", A32770Dup1I1XPane);
                    fColorModeStaticText.UIMap.Scope = UIASeachScope.Children;
                    fColorModeStaticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Color Mode");
                    fColorModeStaticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fColorModeStaticText;
            }
        }

        /// <summary>
        /// Gets Reference to ColorModeComboBComboBox
        /// </summary>
        public ComboBox ColorModeComboBComboBox
        {
            get
            {
                if (null == fColorModeComboBComboBox)
                {
                    fColorModeComboBComboBox = new ComboBox("ColorModeComboBComboBox", A32770Dup1I1XPane);
                    fColorModeComboBComboBox.UIMap.Scope = UIASeachScope.Children;
                    fColorModeComboBComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fColorModeComboBComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Color Mode");
                    fColorModeComboBComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1010");
                }

                return fColorModeComboBComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to ColorModeComboLList
        /// </summary>
        public List ColorModeComboLList
        {
            get
            {
                if (null == fColorModeComboLList)
                {
                    fColorModeComboLList = new List("ColorModeComboLList", ColorModeComboBComboBox);
                    fColorModeComboLList.UIMap.Scope = UIASeachScope.Children;
                    fColorModeComboLList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Color Mode");
                    fColorModeComboLList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                    fColorModeComboLList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                }

                return fColorModeComboLList;
            }
        }

        /// <summary>
        /// Gets Reference to PDFListItem
        /// </summary>
        public ListItem PDFListItem
        {
            get
            {
                if (null == fPDFListItem)
                {
                    fPDFListItem = new ListItem("PDFListItem", FileTypeComboLBList);
                    fPDFListItem.UIMap.Scope = UIASeachScope.Children;
                    fPDFListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"PDF");
                }

                return fPDFListItem;
            }
        }

        /// <summary>
        /// Gets Reference to JPEGListItem
        /// </summary>
        public ListItem JPEGListItem
        {
            get
            {
                if (null == fJPEGListItem)
                {
                    fJPEGListItem = new ListItem("JPEGListItem", FileTypeComboLBList);
                    fJPEGListItem.UIMap.Scope = UIASeachScope.Children;
                    fJPEGListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"JPEG");
                }

                return fJPEGListItem;
            }
        }

        /// <summary>
        /// Gets Reference to PNGListItem
        /// </summary>
        public ListItem PNGListItem
        {
            get
            {
                if (null == fPNGListItem)
                {
                    fPNGListItem = new ListItem("PNGListItem", FileTypeComboLBList);
                    fPNGListItem.UIMap.Scope = UIASeachScope.Children;
                    fPNGListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"PNG");
                }

                return fPNGListItem;
            }
        }

        /// <summary>
        /// Gets Reference to BMPListItem
        /// </summary>
        public ListItem BMPListItem
        {
            get
            {
                if (null == fBMPListItem)
                {
                    fBMPListItem = new ListItem("BMPListItem", FileTypeComboLBList);
                    fBMPListItem.UIMap.Scope = UIASeachScope.Children;
                    fBMPListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"BMP");
                }

                return fBMPListItem;
            }
        }

        /// <summary>
        /// Gets Reference to TIFListItem
        /// </summary>
        public ListItem TIFListItem
        {
            get
            {
                if (null == fTIFListItem)
                {
                    fTIFListItem = new ListItem("TIFListItem", FileTypeComboLBList);
                    fTIFListItem.UIMap.Scope = UIASeachScope.Children;
                    fTIFListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"TIF");
                }

                return fTIFListItem;
            }
        }

        /// <summary>
        /// Gets Reference to DropDownButtonDDup5Button
        /// </summary>
        public Button DropDownButtonDDup5Button
        {
            get
            {
                if (null == fDropDownButtonDDup5Button)
                {
                    fDropDownButtonDDup5Button = new Button("DropDownButtonDDup5Button", FileTypeComboBoComboBox);
                    fDropDownButtonDDup5Button.UIMap.Scope = UIASeachScope.Children;
                    fDropDownButtonDDup5Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                    fDropDownButtonDDup5Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                }

                return fDropDownButtonDDup5Button;
            }
        }

        /// <summary>
        /// Gets Reference to FileTypeStaticText
        /// </summary>
        public Text FileTypeStaticText
        {
            get
            {
                if (null == fFileTypeStaticText)
                {
                    fFileTypeStaticText = new Text("FileTypeStaticText", A32770Dup1I1XPane);
                    fFileTypeStaticText.UIMap.Scope = UIASeachScope.Children;
                    fFileTypeStaticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Type");
                    fFileTypeStaticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fFileTypeStaticText;
            }
        }

        /// <summary>
        /// Gets Reference to FileTypeComboBoComboBox
        /// </summary>
        public ComboBox FileTypeComboBoComboBox
        {
            get
            {
                if (null == fFileTypeComboBoComboBox)
                {
                    fFileTypeComboBoComboBox = new ComboBox("FileTypeComboBoComboBox", A32770Dup1I1XPane);
                    fFileTypeComboBoComboBox.UIMap.Scope = UIASeachScope.Children;
                    fFileTypeComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fFileTypeComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Type");
                    fFileTypeComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1077");
                }

                return fFileTypeComboBoComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to FileTypeComboLBList
        /// </summary>
        public List FileTypeComboLBList
        {
            get
            {
                if (null == fFileTypeComboLBList)
                {
                    fFileTypeComboLBList = new List("FileTypeComboLBList", FileTypeComboBoComboBox);
                    fFileTypeComboLBList.UIMap.Scope = UIASeachScope.Children;
                    fFileTypeComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"File Type");
                    fFileTypeComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                    fFileTypeComboLBList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                }

                return fFileTypeComboLBList;
            }
        }

        /// <summary>
        /// Gets Reference to LocalorNetworkfListItem
        /// </summary>
        public ListItem LocalorNetworkfListItem
        {
            get
            {
                if (null == fLocalorNetworkfListItem)
                {
                    fLocalorNetworkfListItem = new ListItem("LocalorNetworkfListItem", SendToComboLBoxList);
                    fLocalorNetworkfListItem.UIMap.Scope = UIASeachScope.Children;
                    fLocalorNetworkfListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Local or Network folder");
                }

                return fLocalorNetworkfListItem;
            }
        }


        /// <summary>
        /// Gets Reference to EmailListItem
        /// </summary>
        public ListItem EmailListItem
        {
            get
            {
                if (null == fEmailListItem)
                {
                    fEmailListItem = new ListItem("EmailListItem", SendToComboLBoxList);
                    fEmailListItem.UIMap.Scope = UIASeachScope.Children;
                    fEmailListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Email");
                }

                return fEmailListItem;
            }
        }

        /// <summary>
        /// Gets Reference to DropDownButtonDDup6Button
        /// </summary>
        public Button DropDownButtonDDup6Button
        {
            get
            {
                if (null == fDropDownButtonDDup6Button)
                {
                    fDropDownButtonDDup6Button = new Button("DropDownButtonDDup6Button", SendToComboBox1ComboBox);
                    fDropDownButtonDDup6Button.UIMap.Scope = UIASeachScope.Children;
                    fDropDownButtonDDup6Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Drop Down Button");
                    fDropDownButtonDDup6Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"DropDown");
                }

                return fDropDownButtonDDup6Button;
            }
        }

        /// <summary>
        /// Gets Reference to SendToComboLBoxList
        /// </summary>
        public List SendToComboLBoxList
        {
            get
            {
                if (null == fSendToComboLBoxList)
                {
                    fSendToComboLBoxList = new List("SendToComboLBoxList", SendToComboBox1ComboBox);
                    fSendToComboLBoxList.UIMap.Scope = UIASeachScope.Children;
                    fSendToComboLBoxList.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                    fSendToComboLBoxList.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send To");
                    fSendToComboLBoxList.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                }

                return fSendToComboLBoxList;
            }
        }

        /// <summary>
        /// Gets Reference to SendToStaticText
        /// </summary>
        public Text SendToStaticText
        {
            get
            {
                if (null == fSendToStaticText)
                {
                    fSendToStaticText = new Text("SendToStaticText", A32770Dup1I1XPane);
                    fSendToStaticText.UIMap.Scope = UIASeachScope.Children;
                    fSendToStaticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send To");
                    fSendToStaticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fSendToStaticText;
            }
        }

        /// <summary>
        /// Gets Reference to SendToComboBox1ComboBox
        /// </summary>
        public ComboBox SendToComboBox1ComboBox
        {
            get
            {
                if (null == fSendToComboBox1ComboBox)
                {
                    fSendToComboBox1ComboBox = new ComboBox("SendToComboBox1ComboBox", A32770Dup1I1XPane);
                    fSendToComboBox1ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fSendToComboBox1ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fSendToComboBox1ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send To");
                    fSendToComboBox1ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1118");
                }

                return fSendToComboBox1ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to ShowViewerAfterButton
        /// </summary>
        public Button ShowViewerAfterButton
        {
            get
            {
                if (null == fShowViewerAfterButton)
                {
                    fShowViewerAfterButton = new Button("ShowViewerAfterButton", A32770Dup1I1XPane);
                    fShowViewerAfterButton.UIMap.Scope = UIASeachScope.Children;
                    fShowViewerAfterButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Show Viewer After Scan");
                    fShowViewerAfterButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1025");
                    fShowViewerAfterButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fShowViewerAfterButton;
            }
        }

        /// <summary>
        /// Gets Reference to ScanStaticText
        /// </summary>
        public Text ScanStaticText
        {
            get
            {
                if (null == fScanStaticText)
                {
                    fScanStaticText = new Text("ScanStaticText", A32770Dup1I1XPane);
                    fScanStaticText.UIMap.Scope = UIASeachScope.Children;
                    fScanStaticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan");
                    fScanStaticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fScanStaticText;
            }
        }

        /// <summary>
        /// Gets Reference to ImageStaticText
        /// </summary>
        public Text ImageStaticText
        {
            get
            {
                if (null == fImageStaticText)
                {
                    fImageStaticText = new Text("ImageStaticText", A32770Dup1I1XPane);
                    fImageStaticText.UIMap.Scope = UIASeachScope.Children;
                    fImageStaticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Image");
                    fImageStaticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fImageStaticText;
            }
        }

        /// <summary>
        /// Gets Reference to DestinationStatText
        /// </summary>
        public Text DestinationStatText
        {
            get
            {
                if (null == fDestinationStatText)
                {
                    fDestinationStatText = new Text("DestinationStatText", A32770Dup1I1XPane);
                    fDestinationStatText.UIMap.Scope = UIASeachScope.Children;
                    fDestinationStatText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Destination");
                    fDestinationStatText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fDestinationStatText;
            }
        }

        /// <summary>
        /// Gets Reference to Button2132Button
        /// </summary>
        public Button Button2132Button
        {
            get
            {
                if (null == fButton2132Button)
                {
                    fButton2132Button = new Button("Button2132Button", HPScanHPColorLaWindow);
                    fButton2132Button.UIMap.Scope = UIASeachScope.Children;
                    fButton2132Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2132");
                    fButton2132Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButton2132Button;
            }
        }

        /// <summary>
        /// Gets Reference to Button1165Button
        /// </summary>
        public Button Button1165Button
        {
            get
            {
                if (null == fButton1165Button)
                {
                    fButton1165Button = new Button("Button1165Button", HPScanHPColorLaWindow);
                    fButton1165Button.UIMap.Scope = UIASeachScope.Children;
                    fButton1165Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1165");
                    fButton1165Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButton1165Button;
            }
        }

        /// <summary>
        /// Gets Reference to Button288Button
        /// </summary>
        public Button Button288Button
        {
            get
            {
                if (null == fButton288Button)
                {
                    fButton288Button = new Button("Button288Button", HPScanHPColorLaWindow);
                    fButton288Button.UIMap.Scope = UIASeachScope.Children;
                    fButton288Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"288");
                    fButton288Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButton288Button;
            }
        }

        /// <summary>
        /// Gets Reference to DocumentDup0ListItem
        /// </summary>
        public ListItem DocumentDup0ListItem1
        {
            get
            {
                if (null == fDocumentDup0ListItem)
                {
                    fDocumentDup0ListItem = new ListItem("DocumentDup0ListItem", ComboLBoxListBoDup0List1);
                    fDocumentDup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fDocumentDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Document");
                }

                return fDocumentDup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to PhotoDup0ListItem
        /// </summary>
        public ListItem PhotoDup0ListItem1
        {
            get
            {
                if (null == fPhotoDup0ListItem)
                {
                    fPhotoDup0ListItem = new ListItem("PhotoDup0ListItem", ComboLBoxListBoDup0List1);
                    fPhotoDup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fPhotoDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Photo");
                }

                return fPhotoDup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to PhotoDup0ListItem
        /// </summary>
        public ListItem PhotoDup0ListItem
        {
            get
            {
                if (null == fPhotoDup0ListItem)
                {
                    fPhotoDup0ListItem = new ListItem("PhotoDup0ListItem", ComboLBoxListBoDup0List);
                    fPhotoDup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fPhotoDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Photo");
                }

                return fPhotoDup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to DocumentDup0ListItem
        /// </summary>
        public ListItem DocumentDup0ListItem
        {
            get
            {
                if (null == fDocumentDup0ListItem)
                {
                    fDocumentDup0ListItem = new ListItem("DocumentDup0ListItem", ComboLBoxListBoDup0List);
                    fDocumentDup0ListItem.UIMap.Scope = UIASeachScope.Children;
                    fDocumentDup0ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Document");
                }

                return fDocumentDup0ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to ComboLBoxListBoDup0List
        /// </summary>
        public List ComboLBoxListBoDup0List1
        {
            get
            {
                if (null == fComboLBoxListBoDup0List)
                {
                    fComboLBoxListBoDup0List = new List("ComboLBoxListBoDup0List", DocumentComboBoDup0ComboBox);
                    fComboLBoxListBoDup0List.UIMap.Scope = UIASeachScope.Children;
                    fComboLBoxListBoDup0List.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"ListBox");
                    fComboLBoxListBoDup0List.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboLBox");
                }

                return fComboLBoxListBoDup0List;
            }
        }

        /// <summary>
        /// Gets Reference to DocumentComboBoDup0ComboBox
        /// </summary>
        public ComboBox DocumentComboBoDup0ComboBox
        {
            get
            {
                if (null == fDocumentComboBoDup0ComboBox)
                {
                    fDocumentComboBoDup0ComboBox = new ComboBox("DocumentComboBoDup0ComboBox", A32770Dup1I1XPane);
                    fDocumentComboBoDup0ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fDocumentComboBoDup0ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1009");
                    fDocumentComboBoDup0ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Document");
                    fDocumentComboBoDup0ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                }

                return fDocumentComboBoDup0ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to PhotoComboBox10Dup0ComboBox
        /// </summary>
        public ComboBox PhotoComboBox10Dup0ComboBox
        {
            get
            {
                if (null == fPhotoComboBox10Dup0ComboBox)
                {
                    fPhotoComboBox10Dup0ComboBox = new ComboBox("PhotoComboBox10Dup0ComboBox", A32770Dup1I1XPane);
                    fPhotoComboBox10Dup0ComboBox.UIMap.Scope = UIASeachScope.Children;
                    fPhotoComboBox10Dup0ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1009");
                    fPhotoComboBox10Dup0ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Photo");
                    fPhotoComboBox10Dup0ComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                }

                return fPhotoComboBox10Dup0ComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to ItemTypeComboBoComboBox
        /// </summary>
        public ComboBox ItemTypeComboBoComboBox
        {
            get
            {
                if (null == fItemTypeComboBoComboBox)
                {
                    fItemTypeComboBoComboBox = new ComboBox("ItemTypeComboBoComboBox", A32770Dup1I1XPane);
                    fItemTypeComboBoComboBox.UIMap.Scope = UIASeachScope.Children;
                    fItemTypeComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ComboBox");
                    fItemTypeComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Item Type");
                    fItemTypeComboBoComboBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1009");
                }

                return fItemTypeComboBoComboBox;
            }
        }

        /// <summary>
        /// Gets Reference to YesButton1Button
        /// </summary>
        public Button YesButton1Button
        {
            get
            {
                if (null == fYesButton1Button)
                {
                    fYesButton1Button = new Button("YesButton1Button", A32770Dup0I0XPane);
                    fYesButton1Button.UIMap.Scope = UIASeachScope.Children;
                    fYesButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1");
                    fYesButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fYesButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Yes");
                }

                return fYesButton1Button;
            }
        }

        /// <summary>
        /// Gets Reference to CancelButton2Button
        /// </summary>
        public Button CancelButton2Button
        {
            get
            {
                if (null == fCancelButton2Button)
                {
                    fCancelButton2Button = new Button("CancelButton2Button", A32770Dup0I0XPane);
                    fCancelButton2Button.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton2Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2");
                    fCancelButton2Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButton2Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelButton2Button;
            }
        }

        /// <summary>
        /// Gets Reference to SendButton1006Button
        /// </summary>
        public Button SendButton1006Button
        {
            get
            {
                if (null == fSendButton1006Button)
                {
                    fSendButton1006Button = new Button("SendButton1006Button", HPScanHPLaserJeWindow);
                    fSendButton1006Button.UIMap.Scope = UIASeachScope.Children;
                    fSendButton1006Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1006");
                    fSendButton1006Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fSendButton1006Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Send");
                }

                return fSendButton1006Button;
            }
        }

        /// <summary>
        /// Gets Reference to SaveButton1006Button
        /// </summary>
        public Button SaveButton1006Button
        {
            get
            {
                if (null == fSaveButton1006Button)
                {
                    fSaveButton1006Button = new Button("SaveButton1006Button", HPScanHPLaserJeWindow);
                    fSaveButton1006Button.UIMap.Scope = UIASeachScope.Children;
                    fSaveButton1006Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Save");
                    fSaveButton1006Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1006");
                    fSaveButton1006Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fSaveButton1006Button;
            }
        }

        /// <summary>
        /// Gets Reference to VerticalScrollBScrollBar
        /// </summary>
        public ScrollBar VerticalScrollBScrollBar
        {
            get
            {
                if (null == fVerticalScrollBScrollBar)
                {
                    fVerticalScrollBScrollBar = new ScrollBar("VerticalScrollBScrollBar", ListBox1853List);
                    fVerticalScrollBScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fVerticalScrollBScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Vertical Scroll Bar");
                    fVerticalScrollBScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Vertical ScrollBar");
                }

                return fVerticalScrollBScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardbylargeaButton
        /// </summary>
        public Button ForwardbylargeaButton
        {
            get
            {
                if (null == fForwardbylargeaButton)
                {
                    fForwardbylargeaButton = new Button("ForwardbylargeaButton", VerticalScrollBScrollBar);
                    fForwardbylargeaButton.UIMap.Scope = UIASeachScope.Children;
                    fForwardbylargeaButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward by large amount");
                    fForwardbylargeaButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LargeIncrement");
                }

                return fForwardbylargeaButton;


            }
        }

        /// <summary>
        /// Gets Reference to BackbylargeamouButton
        /// </summary>
        public Button BackbylargeamouButton
        {
            get
            {
                if (null == fBackbylargeamouButton)
                {
                    fBackbylargeamouButton = new Button("BackbylargeamouButton", VerticalScrollBScrollBar);
                    fBackbylargeamouButton.UIMap.Scope = UIASeachScope.Children;
                    fBackbylargeamouButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back by large amount");
                    fBackbylargeamouButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LargeDecrement");
                }

                return fBackbylargeamouButton;
            }
        }

        /// <summary>
        /// Gets Reference to BackbysmallamouButton
        /// </summary>
        public Button BackbysmallamouButton
        {
            get
            {
                if (null == fBackbysmallamouButton)
                {
                    fBackbysmallamouButton = new Button("BackbysmallamouButton", VerticalScrollBScrollBar);
                    fBackbysmallamouButton.UIMap.Scope = UIASeachScope.Children;
                    fBackbysmallamouButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back by small amount");
                    fBackbysmallamouButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallDecrement");
                }

                return fBackbysmallamouButton;
            }
        }

        /// <summary>
        /// Gets Reference to EmailAsJPEGshoListItem
        /// </summary>
        public ListItem EmailAsJPEGshoListItem
        {
            get
            {
                if (null == fEmailAsJPEGshoListItem)
                {
                    fEmailAsJPEGshoListItem = new ListItem("EmailAsJPEGshoListItem", ListBox1853List);
                    fEmailAsJPEGshoListItem.UIMap.Scope = UIASeachScope.Children;
                    fEmailAsJPEGshoListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"EmailAsJPEG_shortcut");
                }

                return fEmailAsJPEGshoListItem;
            }
        }

        /// <summary>
        /// Gets Reference to EmailAsPDFshorListItem
        /// </summary>
        public ListItem EmailAsPDFshorListItem
        {
            get
            {
                if (null == fEmailAsPDFshorListItem)
                {
                    fEmailAsPDFshorListItem = new ListItem("EmailAsPDFshorListItem", ListBox1853List);
                    fEmailAsPDFshorListItem.UIMap.Scope = UIASeachScope.Children;
                    fEmailAsPDFshorListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"EmailAsPDF_shortcut");
                }

                return fEmailAsPDFshorListItem;
            }
        }

        /// <summary>
        /// Gets Reference to SaveAsJPEGshorListItem
        /// </summary>
        public ListItem SaveAsJPEGshorListItem
        {
            get
            {
                if (null == fSaveAsJPEGshorListItem)
                {
                    fSaveAsJPEGshorListItem = new ListItem("SaveAsJPEGshorListItem", ListBox1853List);
                    fSaveAsJPEGshorListItem.UIMap.Scope = UIASeachScope.Children;
                    fSaveAsJPEGshorListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"SaveAsJPEG_shortcut");
                }

                return fSaveAsJPEGshorListItem;
            }
        }

        /// <summary>
        /// Gets Reference to SaveAsPDFshortListItem
        /// </summary>
        public ListItem SaveAsPDFshortListItem
        {
            get
            {
                if (null == fSaveAsPDFshortListItem)
                {
                    fSaveAsPDFshortListItem = new ListItem("SaveAsPDFshortListItem", ListBox1853List);
                    fSaveAsPDFshortListItem.UIMap.Scope = UIASeachScope.Children;
                    fSaveAsPDFshortListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"SaveAsPDF_shortcut");
                }

                return fSaveAsPDFshortListItem;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardbysmallaButton
        /// </summary>
        public Button ForwardbysmallaButton
        {
            get
            {
                if (null == fForwardbysmallaButton)
                {
                    fForwardbysmallaButton = new Button("ForwardbysmallaButton", VerticalScrollBScrollBar);
                    fForwardbysmallaButton.UIMap.Scope = UIASeachScope.Children;
                    fForwardbysmallaButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward by small amount");
                    fForwardbysmallaButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallIncrement");
                }

                return fForwardbysmallaButton;
            }
        }

        /// <summary>
        /// Gets Reference to DetectPhotosListItem
        /// </summary>
        public ListItem DetectPhotosListItem
        {
            get
            {
                if (null == fDetectPhotosListItem)
                {
                    fDetectPhotosListItem = new ListItem("DetectPhotosListItem", PageSizeComboLBList);
                    fDetectPhotosListItem.UIMap.Scope = UIASeachScope.Children;
                    fDetectPhotosListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Detect Photos");
                }

                return fDetectPhotosListItem;
            }
        }

        /// <summary>
        /// Gets Reference to PreparingtoscanText
        /// </summary>
        public Text PreparingtoscanText
        {
            get
            {
                if (null == fPreparingtoscanText)
                {
                    fPreparingtoscanText = new Text("PreparingtoscanText", A32770Dup0I0XPane);
                    fPreparingtoscanText.UIMap.Scope = UIASeachScope.Children;
                    fPreparingtoscanText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fPreparingtoscanText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Preparing to scan");
                }

                return fPreparingtoscanText;
            }
        }

        /// <summary>
        /// Gets Reference to HPScanHPLaserJePane
        /// </summary>
        public Pane HPScanHPLaserJePane
        {
            get
            {
                if (null == fHPScanHPLaserJePane)
                {
                    fHPScanHPLaserJePane = new Pane("HPScanHPLaserJePane", HPScanHPLaserJeWindow);
                    fHPScanHPLaserJePane.UIMap.Scope = UIASeachScope.Children;
                    fHPScanHPLaserJePane.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Scan - {_modelName}");
                    fHPScanHPLaserJePane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fHPScanHPLaserJePane;
            }
        }

        /// <summary>
        /// Gets Reference to OKButton1Button
        /// </summary>
        public Button OKButton1Button
        {
            get
            {
                if (null == fOKButton1Button)
                {
                    fOKButton1Button = new Button("OKButton1Button", HPScanHPLaserJePane);
                    fOKButton1Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKButton1Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1");
                }

                return fOKButton1Button;
            }
        }

        /// <summary>
        /// Gets Reference to Button1164Button
        /// </summary>
        public Button Button1164Button
        {
            get
            {
                if (null == fButton1164Button)
                {
                    fButton1164Button = new Button("Button1164Button", HPScanHPLaserJePane);
                    fButton1164Button.UIMap.Scope = UIASeachScope.Children;
                    fButton1164Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButton1164Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1164");
                }

                return fButton1164Button;
            }
        }
    }
}
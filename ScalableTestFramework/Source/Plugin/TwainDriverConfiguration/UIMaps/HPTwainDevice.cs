//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------

namespace HP.ScalableTest.Plugin.TwainDriverConfiguration.UIMaps
{
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class HPTwainDevice
    {
        /// <summary>
        /// Backing field for A32770Window property
        /// </summary>
        private Window fA32770Window;

        /// <summary>
        /// Backing field for CloseButton4Button property
        /// </summary>
        private Button fCloseButton4Button;

        /// <summary>
        /// Backing field for HPLaserJetMFPM5List property
        /// </summary>
        private List fHPLaserJetMFPM5List;

        /// <summary>
        /// Backing field for Button1914Button property
        /// </summary>
        private Button fButton1914Button;

        /// <summary>
        /// Backing field for VerticalScrollBScrollBar property
        /// </summary>
        private ScrollBar fVerticalScrollBScrollBar;

        /// <summary>
        /// Backing field for BackbysmallamouButton property
        /// </summary>
        private Button fBackbysmallamouButton;

        /// <summary>
        /// Backing field for BackbylargeamouButton property
        /// </summary>
        private Button fBackbylargeamouButton;

        /// <summary>
        /// Backing field for ThumbThumb property
        /// </summary>
        private Thumb fThumbThumb;

        /// <summary>
        /// Backing field for ForwardbylargeaButton property
        /// </summary>
        private Button fForwardbylargeaButton;

        /// <summary>
        /// Backing field for ForwardbysmallaButton property
        /// </summary>
        private Button fForwardbysmallaButton;

        /// <summary>
        /// Backing field for A101113107ListItem property
        /// </summary>
        private ListItem fA101113107ListItem;

        /// <summary>
        /// Backing field for A101113100ListItem property
        /// </summary>
        private ListItem fA101113100ListItem;

        /// <summary>
        /// Backing field for A10111388ListItem property
        /// </summary>
        private ListItem fA10111388ListItem;

        /// <summary>
        /// Backing field for A101113224ListItem property
        /// </summary>
        private ListItem fA101113224ListItem;

        /// <summary>
        /// Backing field for A10111342ListItem property
        /// </summary>
        private ListItem fA10111342ListItem;

        /// <summary>
        /// Backing field for A101112171ListItem property
        /// </summary>
        private ListItem fA101112171ListItem;

        /// <summary>
        /// Backing field for A101113173ListItem property
        /// </summary>
        private ListItem fA101113173ListItem;

        /// <summary>
        /// Backing field for CancelButton112Button property
        /// </summary>
        private Button fCancelButton112Button;

        /// <summary>
        /// Backing field for ApplyButton2539Button property
        /// </summary>
        private Button fApplyButton2539Button;

        /// <summary>
        /// Backing field for OKButton1839Button property
        /// </summary>
        private Button fOKButton1839Button;

        /// <summary>
        /// Backing field for Edit289Edit property
        /// </summary>
        private Edit fEdit289Edit;

        /// <summary>
        /// Backing field for SearchButton291Button property
        /// </summary>
        private Button fSearchButton291Button;

        /// <summary>
        /// Backing field for ShowalldevicesBButton property
        /// </summary>
        private Button fShowalldevicesBButton;

        /// <summary>
        /// Backing field for StaticText property
        /// </summary>
        private Text fStaticText;

        /// <summary>
        /// Backing field for A32770Pane property
        /// </summary>
        private Pane fA32770Pane;

        /// <summary>
        /// Backing field for HostNameStatic1Text property
        /// </summary>
        private Text fHostNameStatic1Text;

        /// <summary>
        /// Backing field for NPI4CC7BBStaticText property
        /// </summary>
        private Text fNPI4CC7BBStaticText;

        /// <summary>
        /// Backing field for IPAddressStaticText property
        /// </summary>
        private Text fIPAddressStaticText;

        /// <summary>
        /// Backing field for A101113224StatiText property
        /// </summary>
        private Text fA101113224StatiText;

        /// <summary>
        /// Backing field for SerialNoStatic1Text property
        /// </summary>
        private Text fSerialNoStatic1Text;

        /// <summary>
        /// Backing field for XXXXXXXXXXStatiText property
        /// </summary>
        private Text fXXXXXXXXXXStatiText;

        /// <summary>
        /// Backing field for ServicesStatic1Text property
        /// </summary>
        private Text fServicesStatic1Text;

        /// <summary>
        /// Backing field for PclPrinteSCLLEDText property
        /// </summary>
        private Text fPclPrinteSCLLEDText;

        /// <summary>
        /// Backing field for NetworkTypeStatText property
        /// </summary>
        private Text fNetworkTypeStatText;

        /// <summary>
        /// Backing field for EthernetStatic1Text property
        /// </summary>
        private Text fEthernetStatic1Text;

        /// <summary>
        /// Backing field for MacStatic1066Text property
        /// </summary>
        private Text fMacStatic1066Text;

        /// <summary>
        /// Backing field for A5820b14cc7bbStText property
        /// </summary>
        private Text fA5820b14cc7bbStText;

        /// <summary>
        /// Backing field for ManufacturerStaText property
        /// </summary>
        private Text fManufacturerStaText;

        /// <summary>
        /// Backing field for HewlettPackardSText property
        /// </summary>
        private Text fHewlettPackardSText;

        /// <summary>
        /// Backing field for DeviceStatusStaText property
        /// </summary>
        private Text fDeviceStatusStaText;

        /// <summary>
        /// Backing field for DeviceStatusButButton property
        /// </summary>
        private Button fDeviceStatusButButton;

        /// <summary>
        /// Backing field for AvailableStaticText property
        /// </summary>
        private Text fAvailableStaticText;

        /// <summary>
        /// Backing field for SelectDeviceStaDup0I0XText property
        /// </summary>
        private Text fSelectDeviceStaDup0I0XText;

        /// <summary>
        /// Backing field for DeviceDetailsStText property
        /// </summary>
        private Text fDeviceDetailsStText;

        /// <summary>
        /// Backing field for FindDeviceStatiText property
        /// </summary>
        private Text fFindDeviceStatiText;

        /// <summary>
        /// Backing field for SelectDeviceStaDup1I1XText property
        /// </summary>
        private Text fSelectDeviceStaDup1I1XText;

        /// <summary>
        /// Backing field for SelectDeviceStaDup2I2XText property
        /// </summary>
        private Text fSelectDeviceStaDup2I2XText;

        /// <summary>
        /// Backing field for SelectDeviceStaDup3I3XText property
        /// </summary>
        private Text fSelectDeviceStaDup3I3XText;

        /// <summary>
        /// Backing field for SelectDeviceStaDup4I4XText property
        /// </summary>
        private Text fSelectDeviceStaDup4I4XText;

        /// <summary>
        /// Backing field for SelectDeviceStaDup5I5XText property
        /// </summary>
        private Text fSelectDeviceStaDup5I5XText;

        /// <summary>
        /// Initializes a new instance of the <see cref="HPTwainDevice"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public HPTwainDevice(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="HPTwainDevice"/> class using the default UIAFramework.
        /// </summary>
        public HPTwainDevice()
        {
            Desktop = new Desktop();
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        /// <summary>
        /// Gets Reference to A32770Window
        /// </summary>
        public Window A32770Window
        {
            get
            {
                if (null == fA32770Window)
                {
                    fA32770Window = new Window("A32770Window", Desktop);
                    fA32770Window.UIMap.Scope = UIASeachScope.Children;
                    fA32770Window.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fA32770Window;
            }
        }

        /// <summary>
        /// Gets Reference to CloseButton4Button
        /// </summary>
        public Button CloseButton4Button
        {
            get
            {
                if (null == fCloseButton4Button)
                {
                    fCloseButton4Button = new Button("CloseButton4Button", A32770Window);
                    fCloseButton4Button.UIMap.Scope = UIASeachScope.Children;
                    fCloseButton4Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCloseButton4Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4");
                    fCloseButton4Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Close");
                }

                return fCloseButton4Button;
            }
        }

        /// <summary>
        /// Gets Reference to HPLaserJetMFPM5List
        /// </summary>
        public List HPLaserJetMFPM5List
        {
            get
            {
                if (null == fHPLaserJetMFPM5List)
                {
                    fHPLaserJetMFPM5List = new List("HPLaserJetMFPM5List", A32770Window);
                    fHPLaserJetMFPM5List.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetMFPM5List.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"ListBox");
                    fHPLaserJetMFPM5List.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1854");                   
                }

                return fHPLaserJetMFPM5List;
            }
        }

        /// <summary>
        /// Gets Reference to Button1914Button
        /// </summary>
        public Button Button1914Button
        {
            get
            {
                if (null == fButton1914Button)
                {
                    fButton1914Button = new Button("Button1914Button", HPLaserJetMFPM5List);
                    fButton1914Button.UIMap.Scope = UIASeachScope.Children;
                    fButton1914Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fButton1914Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1914");
                }

                return fButton1914Button;
            }
        }

        /// <summary>
        /// Gets Reference to VerticalScrollBScrollBar
        /// </summary>
        public ScrollBar VerticalScrollBScrollBar
        {
            get
            {
                if (null == fVerticalScrollBScrollBar)
                {
                    fVerticalScrollBScrollBar = new ScrollBar("VerticalScrollBScrollBar", HPLaserJetMFPM5List);
                    fVerticalScrollBScrollBar.UIMap.Scope = UIASeachScope.Children;
                    fVerticalScrollBScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Vertical ScrollBar");
                    fVerticalScrollBScrollBar.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Vertical Scroll Bar");
                }

                return fVerticalScrollBScrollBar;
            }
        }

        /// <summary>
        /// Gets Reference to BackbysmallamouButton
        /// </summary>
        public Button BackbysmallamouButton
        {
            get
            {
                if (null == fBackbysmallamouButton)
                {
                    fBackbysmallamouButton = new Button("BackbysmallamouButton", VerticalScrollBScrollBar);
                    fBackbysmallamouButton.UIMap.Scope = UIASeachScope.Children;
                    fBackbysmallamouButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallDecrement");
                    fBackbysmallamouButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back by small amount");
                }

                return fBackbysmallamouButton;
            }
        }

        /// <summary>
        /// Gets Reference to BackbylargeamouButton
        /// </summary>
        public Button BackbylargeamouButton
        {
            get
            {
                if (null == fBackbylargeamouButton)
                {
                    fBackbylargeamouButton = new Button("BackbylargeamouButton", VerticalScrollBScrollBar);
                    fBackbylargeamouButton.UIMap.Scope = UIASeachScope.Children;
                    fBackbylargeamouButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LargeDecrement");
                    fBackbylargeamouButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Back by large amount");
                }

                return fBackbylargeamouButton;
            }
        }

        /// <summary>
        /// Gets Reference to ThumbThumb
        /// </summary>
        public Thumb ThumbThumb
        {
            get
            {
                if (null == fThumbThumb)
                {
                    fThumbThumb = new Thumb("ThumbThumb", VerticalScrollBScrollBar);
                    fThumbThumb.UIMap.Scope = UIASeachScope.Children;
                    fThumbThumb.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"Thumb");
                    fThumbThumb.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Thumb");
                }

                return fThumbThumb;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardbylargeaButton
        /// </summary>
        public Button ForwardbylargeaButton
        {
            get
            {
                if (null == fForwardbylargeaButton)
                {
                    fForwardbylargeaButton = new Button("ForwardbylargeaButton", VerticalScrollBScrollBar);
                    fForwardbylargeaButton.UIMap.Scope = UIASeachScope.Children;
                    fForwardbylargeaButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"LargeIncrement");
                    fForwardbylargeaButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward by large amount");
                }

                return fForwardbylargeaButton;
            }
        }

        /// <summary>
        /// Gets Reference to ForwardbysmallaButton
        /// </summary>
        public Button ForwardbysmallaButton
        {
            get
            {
                if (null == fForwardbysmallaButton)
                {
                    fForwardbysmallaButton = new Button("ForwardbysmallaButton", VerticalScrollBScrollBar);
                    fForwardbysmallaButton.UIMap.Scope = UIASeachScope.Children;
                    fForwardbysmallaButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"SmallIncrement");
                    fForwardbysmallaButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Forward by small amount");
                }

                return fForwardbysmallaButton;
            }
        }

        /// <summary>
        /// Gets Reference to A101113107ListItem
        /// </summary>
        public ListItem A101113107ListItem
        {
            get
            {
                if (null == fA101113107ListItem)
                {
                    fA101113107ListItem = new ListItem("A101113107ListItem", HPLaserJetMFPM5List);
                    fA101113107ListItem.UIMap.Scope = UIASeachScope.Children;
                    fA101113107ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"10.11.13.107");
                }

                return fA101113107ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to A101113100ListItem
        /// </summary>
        public ListItem A101113100ListItem
        {
            get
            {
                if (null == fA101113100ListItem)
                {
                    fA101113100ListItem = new ListItem("A101113100ListItem", HPLaserJetMFPM5List);
                    fA101113100ListItem.UIMap.Scope = UIASeachScope.Children;
                    fA101113100ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"10.11.13.100");
                }

                return fA101113100ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to A10111388ListItem
        /// </summary>
        public ListItem A10111388ListItem
        {
            get
            {
                if (null == fA10111388ListItem)
                {
                    fA10111388ListItem = new ListItem("A10111388ListItem", HPLaserJetMFPM5List);
                    fA10111388ListItem.UIMap.Scope = UIASeachScope.Children;
                    fA10111388ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"10.11.13.88");
                }

                return fA10111388ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to A101113224ListItem
        /// </summary>
        public ListItem A101113224ListItem
        {
            get
            {
                if (null == fA101113224ListItem)
                {
                    fA101113224ListItem = new ListItem("A101113224ListItem", HPLaserJetMFPM5List);
                    fA101113224ListItem.UIMap.Scope = UIASeachScope.Children;
                    fA101113224ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"10.11.13.224");
                }

                return fA101113224ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to A10111342ListItem
        /// </summary>
        public ListItem A10111342ListItem
        {
            get
            {
                if (null == fA10111342ListItem)
                {
                    fA10111342ListItem = new ListItem("A10111342ListItem", HPLaserJetMFPM5List);
                    fA10111342ListItem.UIMap.Scope = UIASeachScope.Children;
                    fA10111342ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"10.11.13.42");
                }

                return fA10111342ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to A101112171ListItem
        /// </summary>
        public ListItem A101112171ListItem
        {
            get
            {
                if (null == fA101112171ListItem)
                {
                    fA101112171ListItem = new ListItem("A101112171ListItem", HPLaserJetMFPM5List);
                    fA101112171ListItem.UIMap.Scope = UIASeachScope.Children;
                    fA101112171ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"10.11.12.171");
                }

                return fA101112171ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to A101113173ListItem
        /// </summary>
        public ListItem A101113173ListItem
        {
            get
            {
                if (null == fA101113173ListItem)
                {
                    fA101113173ListItem = new ListItem("A101113173ListItem", HPLaserJetMFPM5List);
                    fA101113173ListItem.UIMap.Scope = UIASeachScope.Children;
                    fA101113173ListItem.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"10.11.13.173");
                }

                return fA101113173ListItem;
            }
        }

        /// <summary>
        /// Gets Reference to CancelButton112Button
        /// </summary>
        public Button CancelButton112Button
        {
            get
            {
                if (null == fCancelButton112Button)
                {
                    fCancelButton112Button = new Button("CancelButton112Button", A32770Window);
                    fCancelButton112Button.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton112Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fCancelButton112Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1125");
                    fCancelButton112Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                }

                return fCancelButton112Button;
            }
        }

        /// <summary>
        /// Gets Reference to ApplyButton2539Button
        /// </summary>
        public Button ApplyButton2539Button
        {
            get
            {
                if (null == fApplyButton2539Button)
                {
                    fApplyButton2539Button = new Button("ApplyButton2539Button", A32770Window);
                    fApplyButton2539Button.UIMap.Scope = UIASeachScope.Children;
                    fApplyButton2539Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fApplyButton2539Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"2539");
                    fApplyButton2539Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Apply");
                }

                return fApplyButton2539Button;
            }
        }

        /// <summary>
        /// Gets Reference to OKButton1839Button
        /// </summary>
        public Button OKButton1839Button
        {
            get
            {
                if (null == fOKButton1839Button)
                {
                    fOKButton1839Button = new Button("OKButton1839Button", A32770Window);
                    fOKButton1839Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButton1839Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fOKButton1839Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1839");
                    fOKButton1839Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                }

                return fOKButton1839Button;
            }
        }

        /// <summary>
        /// Gets Reference to Edit289Edit
        /// </summary>
        public Edit Edit289Edit
        {
            get
            {
                if (null == fEdit289Edit)
                {
                    fEdit289Edit = new Edit("Edit289Edit", A32770Window);
                    fEdit289Edit.UIMap.Scope = UIASeachScope.Children;
                    fEdit289Edit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Edit");
                    fEdit289Edit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"289");
                }

                return fEdit289Edit;
            }
        }

        /// <summary>
        /// Gets Reference to SearchButton291Button
        /// </summary>
        public Button SearchButton291Button
        {
            get
            {
                if (null == fSearchButton291Button)
                {
                    fSearchButton291Button = new Button("SearchButton291Button", A32770Window);
                    fSearchButton291Button.UIMap.Scope = UIASeachScope.Children;
                    fSearchButton291Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fSearchButton291Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"291");
                    fSearchButton291Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Search");
                }

                return fSearchButton291Button;
            }
        }

        /// <summary>
        /// Gets Reference to ShowalldevicesBButton
        /// </summary>
        public Button ShowalldevicesBButton
        {
            get
            {
                if (null == fShowalldevicesBButton)
                {
                    fShowalldevicesBButton = new Button("ShowalldevicesBButton", A32770Window);
                    fShowalldevicesBButton.UIMap.Scope = UIASeachScope.Children;
                    fShowalldevicesBButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fShowalldevicesBButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"294");
                    fShowalldevicesBButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Show all devices");
                }

                return fShowalldevicesBButton;
            }
        }

        /// <summary>
        /// Gets Reference to StaticText
        /// </summary>
        public Text StaticText
        {
            get
            {
                if (null == fStaticText)
                {
                    fStaticText = new Text("StaticText", A32770Window);
                    fStaticText.UIMap.Scope = UIASeachScope.Children;
                    fStaticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fStaticText;
            }
        }

        /// <summary>
        /// Gets Reference to A32770Pane
        /// </summary>
        public Pane A32770Pane
        {
            get
            {
                if (null == fA32770Pane)
                {
                    fA32770Pane = new Pane("A32770Pane", A32770Window);
                    fA32770Pane.UIMap.Scope = UIASeachScope.Children;
                    fA32770Pane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fA32770Pane;
            }
        }

        /// <summary>
        /// Gets Reference to HostNameStatic1Text
        /// </summary>
        public Text HostNameStatic1Text
        {
            get
            {
                if (null == fHostNameStatic1Text)
                {
                    fHostNameStatic1Text = new Text("HostNameStatic1Text", A32770Pane);
                    fHostNameStatic1Text.UIMap.Scope = UIASeachScope.Children;
                    fHostNameStatic1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fHostNameStatic1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fHostNameStatic1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HostName");
                }

                return fHostNameStatic1Text;
            }
        }

        /// <summary>
        /// Gets Reference to NPI4CC7BBStaticText
        /// </summary>
        public Text NPI4CC7BBStaticText
        {
            get
            {
                if (null == fNPI4CC7BBStaticText)
                {
                    fNPI4CC7BBStaticText = new Text("NPI4CC7BBStaticText", A32770Pane);
                    fNPI4CC7BBStaticText.UIMap.Scope = UIASeachScope.Children;
                    fNPI4CC7BBStaticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fNPI4CC7BBStaticText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fNPI4CC7BBStaticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"NPI4CC7BB");
                }

                return fNPI4CC7BBStaticText;
            }
        }

        /// <summary>
        /// Gets Reference to IPAddressStaticText
        /// </summary>
        public Text IPAddressStaticText
        {
            get
            {
                if (null == fIPAddressStaticText)
                {
                    fIPAddressStaticText = new Text("IPAddressStaticText", A32770Pane);
                    fIPAddressStaticText.UIMap.Scope = UIASeachScope.Children;
                    fIPAddressStaticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fIPAddressStaticText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fIPAddressStaticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"IP Address");
                }

                return fIPAddressStaticText;
            }
        }

        /// <summary>
        /// Gets Reference to A101113224StatiText
        /// </summary>
        public Text A101113224StatiText
        {
            get
            {
                if (null == fA101113224StatiText)
                {
                    fA101113224StatiText = new Text("A101113224StatiText", A32770Pane);
                    fA101113224StatiText.UIMap.Scope = UIASeachScope.Children;
                    fA101113224StatiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fA101113224StatiText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fA101113224StatiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"10.11.13.224");
                }

                return fA101113224StatiText;
            }
        }

        /// <summary>
        /// Gets Reference to SerialNoStatic1Text
        /// </summary>
        public Text SerialNoStatic1Text
        {
            get
            {
                if (null == fSerialNoStatic1Text)
                {
                    fSerialNoStatic1Text = new Text("SerialNoStatic1Text", A32770Pane);
                    fSerialNoStatic1Text.UIMap.Scope = UIASeachScope.Children;
                    fSerialNoStatic1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fSerialNoStatic1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fSerialNoStatic1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Serial No");
                }

                return fSerialNoStatic1Text;
            }
        }

        /// <summary>
        /// Gets Reference to XXXXXXXXXXStatiText
        /// </summary>
        public Text XXXXXXXXXXStatiText
        {
            get
            {
                if (null == fXXXXXXXXXXStatiText)
                {
                    fXXXXXXXXXXStatiText = new Text("XXXXXXXXXXStatiText", A32770Pane);
                    fXXXXXXXXXXStatiText.UIMap.Scope = UIASeachScope.Children;
                    fXXXXXXXXXXStatiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fXXXXXXXXXXStatiText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fXXXXXXXXXXStatiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"XXXXXXXXXX");
                }

                return fXXXXXXXXXXStatiText;
            }
        }

        /// <summary>
        /// Gets Reference to ServicesStatic1Text
        /// </summary>
        public Text ServicesStatic1Text
        {
            get
            {
                if (null == fServicesStatic1Text)
                {
                    fServicesStatic1Text = new Text("ServicesStatic1Text", A32770Pane);
                    fServicesStatic1Text.UIMap.Scope = UIASeachScope.Children;
                    fServicesStatic1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fServicesStatic1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fServicesStatic1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Services");
                }

                return fServicesStatic1Text;
            }
        }

        /// <summary>
        /// Gets Reference to PclPrinteSCLLEDText
        /// </summary>
        public Text PclPrinteSCLLEDText
        {
            get
            {
                if (null == fPclPrinteSCLLEDText)
                {
                    fPclPrinteSCLLEDText = new Text("PclPrinteSCLLEDText", A32770Pane);
                    fPclPrinteSCLLEDText.UIMap.Scope = UIASeachScope.Children;
                    fPclPrinteSCLLEDText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fPclPrinteSCLLEDText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fPclPrinteSCLLEDText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"PclPrint eSCL LEDM");
                }

                return fPclPrinteSCLLEDText;
            }
        }

        /// <summary>
        /// Gets Reference to NetworkTypeStatText
        /// </summary>
        public Text NetworkTypeStatText
        {
            get
            {
                if (null == fNetworkTypeStatText)
                {
                    fNetworkTypeStatText = new Text("NetworkTypeStatText", A32770Pane);
                    fNetworkTypeStatText.UIMap.Scope = UIASeachScope.Children;
                    fNetworkTypeStatText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fNetworkTypeStatText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fNetworkTypeStatText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Network Type");
                }

                return fNetworkTypeStatText;
            }
        }

        /// <summary>
        /// Gets Reference to EthernetStatic1Text
        /// </summary>
        public Text EthernetStatic1Text
        {
            get
            {
                if (null == fEthernetStatic1Text)
                {
                    fEthernetStatic1Text = new Text("EthernetStatic1Text", A32770Pane);
                    fEthernetStatic1Text.UIMap.Scope = UIASeachScope.Children;
                    fEthernetStatic1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fEthernetStatic1Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fEthernetStatic1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Ethernet");
                }

                return fEthernetStatic1Text;
            }
        }

        /// <summary>
        /// Gets Reference to MacStatic1066Text
        /// </summary>
        public Text MacStatic1066Text
        {
            get
            {
                if (null == fMacStatic1066Text)
                {
                    fMacStatic1066Text = new Text("MacStatic1066Text", A32770Pane);
                    fMacStatic1066Text.UIMap.Scope = UIASeachScope.Children;
                    fMacStatic1066Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fMacStatic1066Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fMacStatic1066Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Mac");
                }

                return fMacStatic1066Text;
            }
        }

        /// <summary>
        /// Gets Reference to A5820b14cc7bbStText
        /// </summary>
        public Text A5820b14cc7bbStText
        {
            get
            {
                if (null == fA5820b14cc7bbStText)
                {
                    fA5820b14cc7bbStText = new Text("A5820b14cc7bbStText", A32770Pane);
                    fA5820b14cc7bbStText.UIMap.Scope = UIASeachScope.Children;
                    fA5820b14cc7bbStText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fA5820b14cc7bbStText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fA5820b14cc7bbStText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"5820b14cc7bb");
                }

                return fA5820b14cc7bbStText;
            }
        }

        /// <summary>
        /// Gets Reference to ManufacturerStaText
        /// </summary>
        public Text ManufacturerStaText
        {
            get
            {
                if (null == fManufacturerStaText)
                {
                    fManufacturerStaText = new Text("ManufacturerStaText", A32770Pane);
                    fManufacturerStaText.UIMap.Scope = UIASeachScope.Children;
                    fManufacturerStaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fManufacturerStaText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fManufacturerStaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Manufacturer");
                }

                return fManufacturerStaText;
            }
        }

        /// <summary>
        /// Gets Reference to HewlettPackardSText
        /// </summary>
        public Text HewlettPackardSText
        {
            get
            {
                if (null == fHewlettPackardSText)
                {
                    fHewlettPackardSText = new Text("HewlettPackardSText", A32770Pane);
                    fHewlettPackardSText.UIMap.Scope = UIASeachScope.Children;
                    fHewlettPackardSText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fHewlettPackardSText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fHewlettPackardSText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hewlett-Packard");
                }

                return fHewlettPackardSText;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceStatusStaText
        /// </summary>
        public Text DeviceStatusStaText
        {
            get
            {
                if (null == fDeviceStatusStaText)
                {
                    fDeviceStatusStaText = new Text("DeviceStatusStaText", A32770Pane);
                    fDeviceStatusStaText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceStatusStaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fDeviceStatusStaText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fDeviceStatusStaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Status");
                }

                return fDeviceStatusStaText;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceStatusButButton
        /// </summary>
        public Button DeviceStatusButButton
        {
            get
            {
                if (null == fDeviceStatusButButton)
                {
                    fDeviceStatusButButton = new Button("DeviceStatusButButton", A32770Pane);
                    fDeviceStatusButButton.UIMap.Scope = UIASeachScope.Children;
                    fDeviceStatusButButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fDeviceStatusButButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"4");
                    fDeviceStatusButButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Status");
                }

                return fDeviceStatusButButton;
            }
        }

        /// <summary>
        /// Gets Reference to AvailableStaticText
        /// </summary>
        public Text AvailableStaticText
        {
            get
            {
                if (null == fAvailableStaticText)
                {
                    fAvailableStaticText = new Text("AvailableStaticText", A32770Pane);
                    fAvailableStaticText.UIMap.Scope = UIASeachScope.Children;
                    fAvailableStaticText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fAvailableStaticText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fAvailableStaticText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Available");
                }

                return fAvailableStaticText;
            }
        }

        /// <summary>
        /// Gets Reference to SelectDeviceStaDup0I0XText
        /// </summary>
        public Text SelectDeviceStaDup0I0XText
        {
            get
            {
                if (null == fSelectDeviceStaDup0I0XText)
                {
                    fSelectDeviceStaDup0I0XText = new Text("SelectDeviceStaDup0I0XText", A32770Window);
                    fSelectDeviceStaDup0I0XText.UIMap.Scope = UIASeachScope.Children;
                    fSelectDeviceStaDup0I0XText.UIMap.Index = 0;
                    fSelectDeviceStaDup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fSelectDeviceStaDup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fSelectDeviceStaDup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Select Device");
                }

                return fSelectDeviceStaDup0I0XText;
            }
        }

        /// <summary>
        /// Gets Reference to DeviceDetailsStText
        /// </summary>
        public Text DeviceDetailsStText
        {
            get
            {
                if (null == fDeviceDetailsStText)
                {
                    fDeviceDetailsStText = new Text("DeviceDetailsStText", A32770Window);
                    fDeviceDetailsStText.UIMap.Scope = UIASeachScope.Children;
                    fDeviceDetailsStText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fDeviceDetailsStText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fDeviceDetailsStText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Device Details");
                }

                return fDeviceDetailsStText;
            }
        }

        /// <summary>
        /// Gets Reference to FindDeviceStatiText
        /// </summary>
        public Text FindDeviceStatiText
        {
            get
            {
                if (null == fFindDeviceStatiText)
                {
                    fFindDeviceStatiText = new Text("FindDeviceStatiText", A32770Window);
                    fFindDeviceStatiText.UIMap.Scope = UIASeachScope.Children;
                    fFindDeviceStatiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fFindDeviceStatiText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fFindDeviceStatiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Find Device");
                }

                return fFindDeviceStatiText;
            }
        }

        /// <summary>
        /// Gets Reference to SelectDeviceStaDup1I1XText
        /// </summary>
        public Text SelectDeviceStaDup1I1XText
        {
            get
            {
                if (null == fSelectDeviceStaDup1I1XText)
                {
                    fSelectDeviceStaDup1I1XText = new Text("SelectDeviceStaDup1I1XText", A32770Window);
                    fSelectDeviceStaDup1I1XText.UIMap.Scope = UIASeachScope.Children;
                    fSelectDeviceStaDup1I1XText.UIMap.Index = 1;
                    fSelectDeviceStaDup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fSelectDeviceStaDup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fSelectDeviceStaDup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Select Device");
                }

                return fSelectDeviceStaDup1I1XText;
            }
        }

        /// <summary>
        /// Gets Reference to SelectDeviceStaDup2I2XText
        /// </summary>
        public Text SelectDeviceStaDup2I2XText
        {
            get
            {
                if (null == fSelectDeviceStaDup2I2XText)
                {
                    fSelectDeviceStaDup2I2XText = new Text("SelectDeviceStaDup2I2XText", A32770Window);
                    fSelectDeviceStaDup2I2XText.UIMap.Scope = UIASeachScope.Children;
                    fSelectDeviceStaDup2I2XText.UIMap.Index = 2;
                    fSelectDeviceStaDup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fSelectDeviceStaDup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fSelectDeviceStaDup2I2XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Select Device");
                }

                return fSelectDeviceStaDup2I2XText;
            }
        }

        /// <summary>
        /// Gets Reference to SelectDeviceStaDup3I3XText
        /// </summary>
        public Text SelectDeviceStaDup3I3XText
        {
            get
            {
                if (null == fSelectDeviceStaDup3I3XText)
                {
                    fSelectDeviceStaDup3I3XText = new Text("SelectDeviceStaDup3I3XText", A32770Window);
                    fSelectDeviceStaDup3I3XText.UIMap.Scope = UIASeachScope.Children;
                    fSelectDeviceStaDup3I3XText.UIMap.Index = 3;
                    fSelectDeviceStaDup3I3XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fSelectDeviceStaDup3I3XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fSelectDeviceStaDup3I3XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Select Device");
                }

                return fSelectDeviceStaDup3I3XText;
            }
        }

        /// <summary>
        /// Gets Reference to SelectDeviceStaDup4I4XText
        /// </summary>
        public Text SelectDeviceStaDup4I4XText
        {
            get
            {
                if (null == fSelectDeviceStaDup4I4XText)
                {
                    fSelectDeviceStaDup4I4XText = new Text("SelectDeviceStaDup4I4XText", A32770Window);
                    fSelectDeviceStaDup4I4XText.UIMap.Scope = UIASeachScope.Children;
                    fSelectDeviceStaDup4I4XText.UIMap.Index = 4;
                    fSelectDeviceStaDup4I4XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fSelectDeviceStaDup4I4XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fSelectDeviceStaDup4I4XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Select Device");
                }

                return fSelectDeviceStaDup4I4XText;
            }
        }

        /// <summary>
        /// Gets Reference to SelectDeviceStaDup5I5XText
        /// </summary>
        public Text SelectDeviceStaDup5I5XText
        {
            get
            {
                if (null == fSelectDeviceStaDup5I5XText)
                {
                    fSelectDeviceStaDup5I5XText = new Text("SelectDeviceStaDup5I5XText", A32770Window);
                    fSelectDeviceStaDup5I5XText.UIMap.Scope = UIASeachScope.Children;
                    fSelectDeviceStaDup5I5XText.UIMap.Index = 5;
                    fSelectDeviceStaDup5I5XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                    fSelectDeviceStaDup5I5XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fSelectDeviceStaDup5I5XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Select Device");
                }

                return fSelectDeviceStaDup5I5XText;
            }
        }
    }
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     J2: Template .\Templates
//         using modules ['Xml2CS']
// </auto-generated>
//------------------------------------------------------------------------------

namespace HP.ScalableTest.Plugin.TwainDriverConfiguration.UIMaps
{
    using TopCat.TestApi.GUIAutomation.Controls;
    using TopCat.TestApi.GUIAutomation.Enums;

    /// <summary>
    /// Application which exercises the TopCat Coded C# test API.
    /// </summary>
    public class JobReservation
    {
        /// <summary>
        /// Backing field for HPScanHPLaserJeWindow property
        /// </summary>
        private Window fHPScanHPLaserJeWindow;

        /// <summary>
        /// Backing field for A32770Dup0I0XPane property
        /// </summary>
        private Pane fA32770Dup0I0XPane;

        /// <summary>
        /// Backing field for Button1164Button property
        /// </summary>
        private Button fButton1164Button;

        /// <summary>
        /// Backing field for JobReservationSDup0Text property
        /// </summary>
        private Text fJobReservationSDup0Text;

        /// <summary>
        /// Backing field for EnableReservatiCheckBox property
        /// </summary>
        private CheckBox fEnableReservatiCheckBox;

        /// <summary>
        /// Backing field for JobNameHOLLAStaText property
        /// </summary>
        private Text fJobNameHOLLAStaText;

        /// <summary>
        /// Backing field for UsePINButton190CheckBox property
        /// </summary>
        private CheckBox fUsePINButton190CheckBox;

        /// <summary>
        /// Backing field for JobNameHOLLAEdiEdit property
        /// </summary>
        private Edit fJobNameHOLLAEdiEdit;

        /// <summary>
        /// Backing field for HidecharactersBButton property
        /// </summary>
        private Button fHidecharactersBButton;

        /// <summary>
        /// Backing field for OKButton1156Button property
        /// </summary>
        private Button fOKButton1156Button;

        /// <summary>
        /// Backing field for CancelButton116Button property
        /// </summary>
        private Button fCancelButton116Button;

        /// <summary>
        /// Backing field for HPScanStatic106Text property
        /// </summary>
        private Text fHPScanStatic106Text;

        /// <summary>
        /// Backing field for HPLaserJetMFPM5Dup0I0XText property
        /// </summary>
        private Text fHPLaserJetMFPM5Dup0I0XText;

        /// <summary>
        /// Backing field for HPLaserJetMFPM5Dup1I1XText property
        /// </summary>
        private Text fHPLaserJetMFPM5Dup1I1XText;

        /// <summary>
        /// Backing field for ScanShortcutSetText property
        /// </summary>
        private Text fScanShortcutSetText;

        /// <summary>
        /// Backing field for EmailasPDFStatiText property
        /// </summary>
        private Text fEmailasPDFStatiText;

        /// <summary>
        /// Backing field for ScanButton1012Button property
        /// </summary>
        private Button fScanButton1012Button;

        /// <summary>
        /// Backing field for ExitButton1007Button property
        /// </summary>
        private Button fExitButton1007Button;

        /// <summary>
        /// Backing field for Button1000Button property
        /// </summary>
        private Button fButton1000Button;

        /// <summary>
        /// Backing field for A32770Dup1I1XPane property
        /// </summary>
        private Pane fA32770Dup1I1XPane;

        /// <summary>
        /// Backing field for Button1903Button property
        /// </summary>
        private Button fButton1903Button;

        /// <summary>
        /// Backing field for JobReservationSDup1Text property
        /// </summary>
        private Text fJobReservationSDup1Text;

        /// <summary>
        /// Backing field for A32770Dup2I2XPane property
        /// </summary>
        private Pane fA32770Dup2I2XPane;

        /// <summary>
        /// Model Name property
        /// </summary>
        private string _modelName;

        /// <summary>
        /// Id property
        /// </summary>
        private string _machineName;

        /// <summary>
        /// Initializes a new instance of the <see cref="JobReservation"/> class.
        /// </summary>
        /// <param name="framework">
        /// The framework.
        /// </param>
        public JobReservation(UIAFramework framework)
        {
            Desktop = new Desktop(framework);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="JobReservation"/> class using the default UIAFramework.
        /// </summary>
        public JobReservation()
        {
            Desktop = new Desktop();
        }

        public JobReservation(string modelName, string machineName)
        {
            _modelName = modelName;
            _machineName = machineName;
            Desktop = new Desktop(UIAFramework.ManagedUIA);
        }

        /// <summary>
        /// Gets Reference to desktop
        /// </summary>
        public Desktop Desktop { get; private set; }

        /// <summary>
        /// Gets Reference to HPScanHPLaserJeWindow
        /// </summary>
        public Window HPScanHPLaserJeWindow
        {
            get
            {
                if (null == fHPScanHPLaserJeWindow)
                {
                    fHPScanHPLaserJeWindow = new Window("HPScanHPLaserJeWindow", Desktop);
                    fHPScanHPLaserJeWindow.UIMap.Scope = UIASeachScope.Children;
                    fHPScanHPLaserJeWindow.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                    fHPScanHPLaserJeWindow.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"HP Scan - {_modelName}");
                }

                return fHPScanHPLaserJeWindow;
            }
        }

        /// <summary>
        /// Gets Reference to A32770Dup0I0XPane
        /// </summary>
        public Pane A32770Dup0I0XPane
        {
            get
            {
                if (null == fA32770Dup0I0XPane)
                {
                    fA32770Dup0I0XPane = new Pane("A32770Dup0I0XPane", HPScanHPLaserJeWindow);
                    fA32770Dup0I0XPane.UIMap.Scope = UIASeachScope.Children;
                    fA32770Dup0I0XPane.UIMap.Index = 0;
                    fA32770Dup0I0XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fA32770Dup0I0XPane;
            }
        }

        /// <summary>
        /// Gets Reference to Button1164Button
        /// </summary>
        public Button Button1164Button
        {
            get
            {
                if (null == fButton1164Button)
                {
                    fButton1164Button = new Button("Button1164Button", A32770Dup0I0XPane);
                    fButton1164Button.UIMap.Scope = UIASeachScope.Children;
                    fButton1164Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1164");
                    fButton1164Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButton1164Button;
            }
        }

        /// <summary>
        /// Gets Reference to JobReservationSDup0Text
        /// </summary>
        public Text JobReservationSDup0Text
        {
            get
            {
                if (null == fJobReservationSDup0Text)
                {
                    fJobReservationSDup0Text = new Text("JobReservationSDup0Text", A32770Dup0I0XPane);
                    fJobReservationSDup0Text.UIMap.Scope = UIASeachScope.Children;
                    fJobReservationSDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1905");
                    fJobReservationSDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Job Reservation Settings");
                    fJobReservationSDup0Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fJobReservationSDup0Text;
            }
        }

        /// <summary>
        /// Gets Reference to EnableReservatiCheckBox
        /// </summary>
        public CheckBox EnableReservatiCheckBox
        {
            get
            {
                if (null == fEnableReservatiCheckBox)
                {
                    fEnableReservatiCheckBox = new CheckBox("EnableReservatiCheckBox", A32770Dup0I0XPane);
                    fEnableReservatiCheckBox.UIMap.Scope = UIASeachScope.Children;
                    fEnableReservatiCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fEnableReservatiCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Enable Reservation");
                    fEnableReservatiCheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1904");
                }

                return fEnableReservatiCheckBox;
            }
        }

        /// <summary>
        /// Gets Reference to JobNameHOLLAStaText
        /// </summary>
        public Text JobNameHOLLAStaText
        {
            get
            {
                if (null == fJobNameHOLLAStaText)
                {
                    fJobNameHOLLAStaText = new Text("JobNameHOLLAStaText", A32770Dup0I0XPane);
                    fJobNameHOLLAStaText.UIMap.Scope = UIASeachScope.Children;
                    fJobNameHOLLAStaText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1906");
                    fJobNameHOLLAStaText.UIMap.SearchProperties.Add(UIASearchProperty.Name, $@"Job Name : {_machineName}");
                    fJobNameHOLLAStaText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fJobNameHOLLAStaText;
            }
        }

        /// <summary>
        /// Gets Reference to UsePINButton190CheckBox
        /// </summary>
        public CheckBox UsePINButton190CheckBox
        {
            get
            {
                if (null == fUsePINButton190CheckBox)
                {
                    fUsePINButton190CheckBox = new CheckBox("UsePINButton190CheckBox", A32770Dup0I0XPane);
                    fUsePINButton190CheckBox.UIMap.Scope = UIASeachScope.Children;
                    fUsePINButton190CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1907");
                    fUsePINButton190CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                    fUsePINButton190CheckBox.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Use PIN");
                }

                return fUsePINButton190CheckBox;
            }
        }                

        /// <summary>
        /// Gets Reference to JobNameHOLLAEdiEdit
        /// </summary>
        public Edit JobNameHOLLAEdiEdit
        {
            get
            {
                if (null == fJobNameHOLLAEdiEdit)
                {
                    fJobNameHOLLAEdiEdit = new Edit("JobNameHOLLAEdiEdit", A32770Dup0I0XPane);
                    fJobNameHOLLAEdiEdit.UIMap.Scope = UIASeachScope.Children;
                    fJobNameHOLLAEdiEdit.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1908");                    
                    fJobNameHOLLAEdiEdit.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Edit");
                }

                return fJobNameHOLLAEdiEdit;
            }
        }

        /// <summary>
        /// Gets Reference to HidecharactersBButton
        /// </summary>
        public Button HidecharactersBButton
        {
            get
            {
                if (null == fHidecharactersBButton)
                {
                    fHidecharactersBButton = new Button("HidecharactersBButton", A32770Dup0I0XPane);
                    fHidecharactersBButton.UIMap.Scope = UIASeachScope.Children;
                    fHidecharactersBButton.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1909");
                    fHidecharactersBButton.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Hide characters");
                    fHidecharactersBButton.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fHidecharactersBButton;
            }
        }

        /// <summary>
        /// Gets Reference to OKButton1156Button
        /// </summary>
        public Button OKButton1156Button
        {
            get
            {
                if (null == fOKButton1156Button)
                {
                    fOKButton1156Button = new Button("OKButton1156Button", A32770Dup0I0XPane);
                    fOKButton1156Button.UIMap.Scope = UIASeachScope.Children;
                    fOKButton1156Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1156");
                    fOKButton1156Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"OK");
                    fOKButton1156Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fOKButton1156Button;
            }
        }

        /// <summary>
        /// Gets Reference to CancelButton116Button
        /// </summary>
        public Button CancelButton116Button
        {
            get
            {
                if (null == fCancelButton116Button)
                {
                    fCancelButton116Button = new Button("CancelButton116Button", A32770Dup0I0XPane);
                    fCancelButton116Button.UIMap.Scope = UIASeachScope.Children;
                    fCancelButton116Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1164");
                    fCancelButton116Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Cancel");
                    fCancelButton116Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fCancelButton116Button;
            }
        }

        /// <summary>
        /// Gets Reference to HPScanStatic106Text
        /// </summary>
        public Text HPScanStatic106Text
        {
            get
            {
                if (null == fHPScanStatic106Text)
                {
                    fHPScanStatic106Text = new Text("HPScanStatic106Text", HPScanHPLaserJeWindow);
                    fHPScanStatic106Text.UIMap.Scope = UIASeachScope.Children;
                    fHPScanStatic106Text.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fHPScanStatic106Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP Scan");
                    fHPScanStatic106Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fHPScanStatic106Text;
            }
        }

        /// <summary>
        /// Gets Reference to HPLaserJetMFPM5Dup0I0XText
        /// </summary>
        public Text HPLaserJetMFPM5Dup0I0XText
        {
            get
            {
                if (null == fHPLaserJetMFPM5Dup0I0XText)
                {
                    fHPLaserJetMFPM5Dup0I0XText = new Text("HPLaserJetMFPM5Dup0I0XText", HPScanHPLaserJeWindow);
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.Index = 0;
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet MFP M527");
                    fHPLaserJetMFPM5Dup0I0XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fHPLaserJetMFPM5Dup0I0XText;
            }
        }

        /// <summary>
        /// Gets Reference to HPLaserJetMFPM5Dup1I1XText
        /// </summary>
        public Text HPLaserJetMFPM5Dup1I1XText
        {
            get
            {
                if (null == fHPLaserJetMFPM5Dup1I1XText)
                {
                    fHPLaserJetMFPM5Dup1I1XText = new Text("HPLaserJetMFPM5Dup1I1XText", HPScanHPLaserJeWindow);
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.Scope = UIASeachScope.Children;
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.Index = 1;
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"HP LaserJet MFP M527");
                    fHPLaserJetMFPM5Dup1I1XText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fHPLaserJetMFPM5Dup1I1XText;
            }
        }

        /// <summary>
        /// Gets Reference to ScanShortcutSetText
        /// </summary>
        public Text ScanShortcutSetText
        {
            get
            {
                if (null == fScanShortcutSetText)
                {
                    fScanShortcutSetText = new Text("ScanShortcutSetText", HPScanHPLaserJeWindow);
                    fScanShortcutSetText.UIMap.Scope = UIASeachScope.Children;
                    fScanShortcutSetText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fScanShortcutSetText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan Shortcut Settings:");
                    fScanShortcutSetText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fScanShortcutSetText;
            }
        }

        /// <summary>
        /// Gets Reference to EmailasPDFStatiText
        /// </summary>
        public Text EmailasPDFStatiText
        {
            get
            {
                if (null == fEmailasPDFStatiText)
                {
                    fEmailasPDFStatiText = new Text("EmailasPDFStatiText", HPScanHPLaserJeWindow);
                    fEmailasPDFStatiText.UIMap.Scope = UIASeachScope.Children;
                    fEmailasPDFStatiText.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1066");
                    fEmailasPDFStatiText.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Email as PDF");
                    fEmailasPDFStatiText.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fEmailasPDFStatiText;
            }
        }

        /// <summary>
        /// Gets Reference to ScanButton1012Button
        /// </summary>
        public Button ScanButton1012Button
        {
            get
            {
                if (null == fScanButton1012Button)
                {
                    fScanButton1012Button = new Button("ScanButton1012Button", HPScanHPLaserJeWindow);
                    fScanButton1012Button.UIMap.Scope = UIASeachScope.Children;
                    fScanButton1012Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1012");
                    fScanButton1012Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Scan");
                    fScanButton1012Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fScanButton1012Button;
            }
        }

        /// <summary>
        /// Gets Reference to ExitButton1007Button
        /// </summary>
        public Button ExitButton1007Button
        {
            get
            {
                if (null == fExitButton1007Button)
                {
                    fExitButton1007Button = new Button("ExitButton1007Button", HPScanHPLaserJeWindow);
                    fExitButton1007Button.UIMap.Scope = UIASeachScope.Children;
                    fExitButton1007Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1007");
                    fExitButton1007Button.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Exit");
                    fExitButton1007Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fExitButton1007Button;
            }
        }

        /// <summary>
        /// Gets Reference to Button1000Button
        /// </summary>
        public Button Button1000Button
        {
            get
            {
                if (null == fButton1000Button)
                {
                    fButton1000Button = new Button("Button1000Button", HPScanHPLaserJeWindow);
                    fButton1000Button.UIMap.Scope = UIASeachScope.Children;
                    fButton1000Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1000");
                    fButton1000Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButton1000Button;
            }
        }

        /// <summary>
        /// Gets Reference to A32770Dup1I1XPane
        /// </summary>
        public Pane A32770Dup1I1XPane
        {
            get
            {
                if (null == fA32770Dup1I1XPane)
                {
                    fA32770Dup1I1XPane = new Pane("A32770Dup1I1XPane", HPScanHPLaserJeWindow);
                    fA32770Dup1I1XPane.UIMap.Scope = UIASeachScope.Children;
                    fA32770Dup1I1XPane.UIMap.Index = 1;
                    fA32770Dup1I1XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fA32770Dup1I1XPane;
            }
        }

        /// <summary>
        /// Gets Reference to Button1903Button
        /// </summary>
        public Button Button1903Button
        {
            get
            {
                if (null == fButton1903Button)
                {
                    fButton1903Button = new Button("Button1903Button", A32770Dup1I1XPane);
                    fButton1903Button.UIMap.Scope = UIASeachScope.Children;
                    fButton1903Button.UIMap.SearchProperties.Add(UIASearchProperty.AutomationId, @"1903");
                    fButton1903Button.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Button");
                }

                return fButton1903Button;
            }
        }

        /// <summary>
        /// Gets Reference to JobReservationSDup1Text
        /// </summary>
        public Text JobReservationSDup1Text
        {
            get
            {
                if (null == fJobReservationSDup1Text)
                {
                    fJobReservationSDup1Text = new Text("JobReservationSDup1Text", A32770Dup1I1XPane);
                    fJobReservationSDup1Text.UIMap.Scope = UIASeachScope.Children;
                    fJobReservationSDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.Name, @"Job Reservation");
                    fJobReservationSDup1Text.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"Static");
                }

                return fJobReservationSDup1Text;
            }
        }

        /// <summary>
        /// Gets Reference to A32770Dup2I2XPane
        /// </summary>
        public Pane A32770Dup2I2XPane
        {
            get
            {
                if (null == fA32770Dup2I2XPane)
                {
                    fA32770Dup2I2XPane = new Pane("A32770Dup2I2XPane", HPScanHPLaserJeWindow);
                    fA32770Dup2I2XPane.UIMap.Scope = UIASeachScope.Children;
                    fA32770Dup2I2XPane.UIMap.Index = 2;
                    fA32770Dup2I2XPane.UIMap.SearchProperties.Add(UIASearchProperty.ClassName, @"#32770");
                }

                return fA32770Dup2I2XPane;
            }
        }
    }
}
